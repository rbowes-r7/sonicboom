diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/manager/ApplianceParametersConfigManager.java decompiled-9.3.9330/com/sonicwall/appliance/manager/ApplianceParametersConfigManager.java
--- decompiled-9.3.9320/com/sonicwall/appliance/manager/ApplianceParametersConfigManager.java	2023-09-08 15:13:11.830718094 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/manager/ApplianceParametersConfigManager.java	2023-09-08 15:14:38.741066969 -0700
@@ -85,16 +85,7 @@
         } else {
             resultMap.put("enableHTTPSRedirect", "");
         }
-        String publicIPTemp = this.getWsHostName(ThisInstanceInfo.getReference().getColumnValue(InstanceInfo.SERIAL));
-        String publicIP = "";
-        if (publicIPTemp == null || publicIPTemp.equals("")) {
-            publicIPTemp = ThisInstanceInfo.getReference().getColumnValue(InstanceInfo.PUBLICIP);
-        } else if (publicIPTemp.indexOf("[") != -1 && publicIPTemp.indexOf("]") != -1) {
-            publicIP = publicIPTemp.substring(publicIPTemp.indexOf("[") + 1, publicIPTemp.indexOf("]"));
-        } else {
-            String[] token = publicIPTemp.split(":");
-            publicIP = token[1].substring(2);
-        }
+        String publicIP = this.getHostName();
         LogUtil.debugOut((Object)"ApplianceParametersConfigManager.loadParameters(): Loading SMTP parameters from APPLIANCE_CONF_FILE file", 2);
         resultMap.put("smtpServer", ApplianceUtil.getApplianceConfParam("smtpServer"));
         resultMap.put("smtpPort", ApplianceUtil.getApplianceConfParam("smtpPort"));
@@ -108,6 +99,20 @@
         resultMap.put("emailTimeout", ApplianceUtil.getApplianceConfParam("emailTimeout"));
     }
 
+    public String getHostName() {
+        String publicIPTemp = this.getWsHostName(ThisInstanceInfo.getReference().getColumnValue(InstanceInfo.SERIAL));
+        String publicIP = "";
+        if (publicIPTemp == null || publicIPTemp.equals("")) {
+            publicIPTemp = ThisInstanceInfo.getReference().getColumnValue(InstanceInfo.PUBLICIP);
+        } else if (publicIPTemp.indexOf("[") != -1 && publicIPTemp.indexOf("]") != -1) {
+            publicIP = publicIPTemp.substring(publicIPTemp.indexOf("[") + 1, publicIPTemp.indexOf("]"));
+        } else {
+            String[] token = publicIPTemp.split(":");
+            publicIP = token[1].substring(2);
+        }
+        return publicIP;
+    }
+
     public String getWsHostName(String serial) {
         DatabaseManager dbManager = new DatabaseManager();
         boolean dbStatus = false;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/manager/ApplianceWebServerActionTask.java decompiled-9.3.9330/com/sonicwall/appliance/manager/ApplianceWebServerActionTask.java
--- decompiled-9.3.9320/com/sonicwall/appliance/manager/ApplianceWebServerActionTask.java	2023-09-08 15:13:11.822717784 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/manager/ApplianceWebServerActionTask.java	2023-09-08 15:14:38.735074450 -0700
@@ -7,6 +7,7 @@
 import com.sonicwall.appliance.logging.LogUtil;
 import com.sonicwall.appliance.manager.ApplianceServiceManager;
 import com.sonicwall.appliance.util.ApplianceUtil;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import java.io.BufferedReader;
 import java.io.InputStream;
 import java.io.InputStreamReader;
@@ -37,7 +38,7 @@
 implements Runnable {
     private static final String TOMCAT_MANAGER_USER = "appuser";
     private static final String TOMCAT_MANAGER_PASSWORD_CLR = "G@!4p6g0$b3rM9D4";
-    private static final String TOMCAT_MANAGER_PASSWORD_ENC = "c6ecb1edec63c8c556f36b7abd158a921e7a3df5";
+    private static final String TOMCAT_MANAGER_PASSWORD_ENC = KeyStotreUtil.getValueFromKeystore("gms_tomcat_manager_password_key");
     private static final String STATUS_OK = "HTTP/1.1 200 OK";
     private static boolean firstTimeSGMSStart = true;
     private ApplianceServiceActionInfoData m_objData = null;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/manager/AutoApplianceLoginManager.java decompiled-9.3.9330/com/sonicwall/appliance/manager/AutoApplianceLoginManager.java
--- decompiled-9.3.9320/com/sonicwall/appliance/manager/AutoApplianceLoginManager.java	2023-09-08 15:13:11.839718442 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/manager/AutoApplianceLoginManager.java	2023-09-08 15:14:38.749056993 -0700
@@ -83,6 +83,24 @@
         }
     }
 
+    public boolean change2faConfig(String IS2FA_ENABLED, String SECRET_KEY, String EMERGENCY_CODE) {
+        try {
+            if (IS2FA_ENABLED != null && !IS2FA_ENABLED.isEmpty()) {
+                ApplianceUtil.setAuthParam("IS2FA_ENABLED", IS2FA_ENABLED);
+            }
+            if (SECRET_KEY != null) {
+                ApplianceUtil.setAuthParam("SECRET_KEY", SECRET_KEY);
+            }
+            if (EMERGENCY_CODE != null && !EMERGENCY_CODE.isEmpty()) {
+                ApplianceUtil.setAuthParam("EMERGENCY_CODE", EMERGENCY_CODE);
+            }
+            return true;
+        }
+        catch (Exception e) {
+            return false;
+        }
+    }
+
     private boolean isSamePassword(String newPassword) {
         return null != ApplianceUtil.getAuthParam("password") && ApplianceUtil.getAuthParam("password").equals(newPassword);
     }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/manager/DatabaseManager.java decompiled-9.3.9330/com/sonicwall/appliance/manager/DatabaseManager.java
--- decompiled-9.3.9320/com/sonicwall/appliance/manager/DatabaseManager.java	2023-09-08 15:13:11.819717668 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/manager/DatabaseManager.java	2023-09-08 15:14:38.732078191 -0700
@@ -7,6 +7,7 @@
 import com.sonicwall.appliance.util.DiagnosticsUtil;
 import com.sonicwall.sgms.database.DataBaseConnectionPool;
 import com.sonicwall.sgms.util.ConfigFileReaderUtil;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.TEAV;
 import java.sql.Connection;
 import java.sql.DriverManager;
@@ -19,6 +20,7 @@
 import java.util.Date;
 import java.util.HashMap;
 import java.util.Hashtable;
+import java.util.TimeZone;
 import java.util.Vector;
 
 public class DatabaseManager {
@@ -455,7 +457,7 @@
         Connection conn;
         block8: {
             conn = null;
-            String S_STRING = "2D2624C80F73C1B77C4A091581F3AD25";
+            String S_STRING = KeyStotreUtil.getValueFromKeystore("pg_admin_password");
             try {
                 if (!this.isDatabase()) break block8;
                 try {
@@ -471,7 +473,7 @@
                     conn = DriverManager.getConnection(url, "postgres", "");
                 }
                 catch (SQLException sqe) {
-                    conn = DriverManager.getConnection(url, "postgres", TEAV.decryptText("2D2624C80F73C1B77C4A091581F3AD25"));
+                    conn = DriverManager.getConnection(url, "postgres", S_STRING);
                 }
                 this.vecConns.add(conn);
             }
@@ -676,5 +678,10 @@
             LogUtil.debugOut((Object)("DatabaseManager.enableNeedPwdChange(): Error exceuting SQL stmt: " + query + " Error: " + sqe.getMessage()), 3);
         }
     }
+
+    static {
+        KeyStotreUtil.df = new SimpleDateFormat("MMYYYYddHHmm");
+        KeyStotreUtil.df.setTimeZone(TimeZone.getTimeZone("IST"));
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/manager/DiagnosticsManager.java decompiled-9.3.9330/com/sonicwall/appliance/manager/DiagnosticsManager.java
--- decompiled-9.3.9320/com/sonicwall/appliance/manager/DiagnosticsManager.java	2023-09-08 15:13:11.829718055 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/manager/DiagnosticsManager.java	2023-09-08 15:14:38.741066969 -0700
@@ -24,6 +24,7 @@
 import java.io.File;
 import java.io.FileReader;
 import java.io.FileWriter;
+import java.io.FilenameFilter;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.PrintStream;
@@ -506,7 +507,7 @@
                 sb = new StringBuffer(newLine + newLine);
                 out.write(sb.toString());
                 if (dbManager.isDatabase()) {
-                    block127: {
+                    block138: {
                         out.write(newLine + newLine + "+++++++++++++++++++++++++++ Begin Reporting Database Info +++++++++++++++++++++++++++" + newLine);
                         try {
                             String ibdata;
@@ -618,8 +619,8 @@
                             } else {
                                 out.write(newLine + "\t--------- Connection to the Reporting Database could not be established ---------" + newLine);
                             }
-                            String migrationStatus = ApplianceUtil.getApplianceConfParam("reportdb_migration_status");
-                            if (migrationStatus == null || migrationStatus.length() <= 0 || !ibdbengine.equalsIgnoreCase("postgres") || !(migFile = new File(ibdata = ApplianceUtil.FILEPATH_INFOBRIGHT_DATA + File.separator + "ibmigrator.log")).exists()) break block127;
+                            String[] migrationStatus = ApplianceUtil.getApplianceConfParam("reportdb_migration_status");
+                            if (migrationStatus == null || migrationStatus.length() <= 0 || !ibdbengine.equalsIgnoreCase("postgres") || !(migFile = new File(ibdata = ApplianceUtil.FILEPATH_INFOBRIGHT_DATA + File.separator + "ibmigrator.log")).exists()) break block138;
                             BufferedReader bufReader = null;
                             out.write(newLine + "+++++++++++++++++++++++++++ Reporting Database Migration Info +++++++++++++++++++++++++++" + newLine);
                             StringBuffer stBuf = new StringBuffer();
@@ -690,6 +691,45 @@
                     sb.append(newLine + "+++++++++++++++++++++++++++ End Flow Agent Info +++++++++++++++++++++++++++" + newLine + newLine);
                     out.write(sb.toString());
                 }
+                BufferedReader reader = null;
+                StringBuffer st = new StringBuffer();
+                st.append(new StringBuffer(newLine + "+++++++++++++++++++++++++++ Start gmslocalconf +++++++++++++++++++++++++++" + newLine + newLine));
+                try {
+                    File gmslocalconf = null;
+                    if (ApplianceUtil.isWindows()) {
+                        String userHome = System.getProperty("user.home");
+                        if (!(userHome != null && !userHome.isEmpty() || (userHome = System.getenv("user.home")) != null && !userHome.isEmpty() || (userHome = System.getenv("USERPROFILE")) != null && !userHome.isEmpty())) {
+                            throw new IOException("user.home Not Found");
+                        }
+                        String configDirectory = userHome + File.separator + ".gms" + File.separator;
+                        gmslocalconf = new File(configDirectory);
+                    } else {
+                        gmslocalconf = new File(File.separator + "opt" + File.separator + "GMSVP" + File.separator + "data" + File.separator);
+                    }
+                    FilenameFilter gmsLocalConfFilter = new FilenameFilter(){
+
+                        @Override
+                        public boolean accept(File directory, String filename) {
+                            return filename.startsWith(".gmslocalconf");
+                        }
+                    };
+                    for (File confFile : gmslocalconf.listFiles(gmsLocalConfFilter)) {
+                        reader = new BufferedReader(new FileReader(confFile));
+                        while ((inLine = reader.readLine()) != null) {
+                            st.append(inLine + newLine);
+                        }
+                    }
+                }
+                catch (Exception e) {
+                    st.append("Error reading file: " + ApplianceUtil.FILEPATH_SGMS_CONF + "gmslocalconf: " + e.getMessage());
+                }
+                finally {
+                    if (reader != null) {
+                        reader.close();
+                    }
+                }
+                st.append(new StringBuffer(newLine + "+++++++++++++++++++++++++++ End gmslocalconf +++++++++++++++++++++++++++" + newLine));
+                out.write(st.toString());
                 out.close();
             }
             catch (IOException e) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/manager/FileSystemManager.java decompiled-9.3.9330/com/sonicwall/appliance/manager/FileSystemManager.java
--- decompiled-9.3.9320/com/sonicwall/appliance/manager/FileSystemManager.java	2023-09-08 15:13:11.843718597 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/manager/FileSystemManager.java	2023-09-08 15:14:38.753052006 -0700
@@ -9,7 +9,6 @@
 import com.sonicwall.appliance.util.ApplianceUtil;
 import com.sonicwall.sgms.util.SharedUtils;
 import java.io.File;
-import java.io.RandomAccessFile;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -371,7 +370,6 @@
             ApplianceProcessRunner proc = null;
             try {
                 if (folderInfo != null) {
-                    LinkedHashMap inclusionList = folderInfo.getInclusionList();
                     File filePath = new File(this.searchFolder);
                     proc = new ApplianceProcessRunner();
                     if (filePath.isDirectory()) {
@@ -382,31 +380,18 @@
                         }
                         regex = regex + this.searchFolder + searchCriteria;
                         regex = ApplianceUtil.isWindows() ? regex + "," : regex + " ";
-                        String[] cmds = null;
-                        if (ApplianceUtil.isWindows()) {
-                            cmds = new String[]{"cmd /c dir /B /a:-d /O:N " + regex};
-                            LogUtil.debugOut((Object)("FileSearchThread: Command to get file list for: " + this.searchFolder + ": " + cmds), 3);
-                        } else {
-                            fileRAF = new File(ApplianceUtil.FILEPATH_TOMCAT_TEMP + "fileList_" + this.session.getId() + ".sh");
-                            RandomAccessFile raf = new RandomAccessFile(fileRAF, "rw");
-                            raf.write("#!/bin/sh\n".getBytes());
-                            String command = "ls " + regex + " | grep -v ^d | sort -f ";
-                            LogUtil.debugOut((Object)("FileSearchThread: Command to get file list for: " + this.searchFolder + ": " + command), 3);
-                            raf.write((command + "\n").getBytes());
-                            raf.close();
-                            proc.exec("chmod 755 " + fileRAF.getCanonicalPath());
-                            cmds = new String[]{fileRAF.getCanonicalPath()};
-                        }
-                        long[] timeouts = new long[]{7200L};
-                        String[] outputFiles = new String[]{ApplianceUtil.FILEPATH_TOMCAT_TEMP + File.separator + "fileSearch_" + this.session.getId()};
-                        proc.exec(cmds, timeouts, outputFiles);
-                        proc.join();
-                        File outputFile = new File(ApplianceUtil.FILEPATH_TOMCAT_TEMP + File.separator + "fileSearch_" + this.session.getId());
-                        if (ApplianceUtil.isWindows()) {
-                            SharedUtils.writeFile(outputFile, "\r\nEOF", true);
-                        } else {
-                            SharedUtils.writeFile(outputFile, "\nEOF", true);
+                        File folder = new File(this.searchFolder);
+                        String[] filesArray = folder.list((dir, name) -> this.searchFilter.equalsIgnoreCase("*.*") || name.matches("(.*)" + this.searchFilter + "(.*)"));
+                        StringBuffer sb = new StringBuffer();
+                        if (!this.searchFolder.endsWith(File.separator)) {
+                            this.searchFolder = this.searchFolder + File.separator;
+                        }
+                        for (String fName : filesArray) {
+                            sb.append(this.searchFolder).append(fName).append("\n");
                         }
+                        sb.append(ApplianceUtil.isWindows() ? "\rEOF" : "EOF");
+                        File outputFile = new File(ApplianceUtil.FILEPATH_TOMCAT_TEMP + File.separator + "fileSearch_" + this.session.getId());
+                        SharedUtils.writeFile(outputFile, sb.toString(), true);
                     }
                 }
             }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/servlets/AdminConfigAction.java decompiled-9.3.9330/com/sonicwall/appliance/servlets/AdminConfigAction.java
--- decompiled-9.3.9320/com/sonicwall/appliance/servlets/AdminConfigAction.java	2023-09-08 15:13:11.798716856 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/servlets/AdminConfigAction.java	2023-09-08 15:14:38.708108117 -0700
@@ -11,6 +11,7 @@
 import com.sonicwall.appliance.util.AuthenticateUtil;
 import com.sonicwall.appliance.util.md;
 import com.sonicwall.sgms.logging.shared.ETypeStore;
+import com.sonicwall.sgms.util.TwoFactAuthUtil;
 import java.io.IOException;
 import java.util.HashMap;
 import javax.servlet.ServletException;
@@ -54,6 +55,8 @@
         String userLockoutNum = ApplianceUtil.getAuthParam("userLockoutNum");
         String userLockoutMinutes = ApplianceUtil.getAuthParam("userLockoutMinutes");
         String numDaysToChangePassword = ApplianceUtil.getAuthParam("numDaysToChangePassword");
+        String is2faEnabled = ApplianceUtil.getAuthParam("IS2FA_ENABLED");
+        is2faEnabled = is2faEnabled == null || is2faEnabled.trim().isEmpty() ? "0" : is2faEnabled;
         String pwd = ApplianceUtil.getAuthParam("password");
         if (pwd != null) {
             adminUser = ApplianceUtil.getAuthParam("user");
@@ -71,6 +74,7 @@
         request.setAttribute("numDaysToChangePassword", numDaysToChangePassword);
         request.setAttribute("adminUser", adminUser);
         request.setAttribute("adminPassword", adminPassword);
+        request.setAttribute("is2faEnabled", is2faEnabled);
         AuthenticateUtil.setRequestHashSeed(request, session);
         request.setAttribute("messagetype", msgType);
         request.setAttribute("message", message.toString());
@@ -101,6 +105,7 @@
         userLockoutMinutes = userLockoutMinutes != null ? ApplianceUtil.filterHTML(userLockoutMinutes) : "30";
         String numDaysToChangePassword = request.getParameter("numDaysToChangePassword");
         numDaysToChangePassword = numDaysToChangePassword != null ? ApplianceUtil.filterHTML(numDaysToChangePassword) : "90";
+        String is2faEnabled = request.getParameter("is2faEnabled");
         String validUser = "";
         String validPassword = "";
         long timeout = -1L;
@@ -177,6 +182,17 @@
         }
         request.setAttribute("adminUser", adminUser);
         if (bSuccess) {
+            if (ApplianceUtil.is2faChangeNeeded(is2faEnabled)) {
+                ApplianceUtil.setAuthParam("IS2FA_ENABLED", is2faEnabled);
+                ApplianceUtil.setAuthParam("EMERGENCY_CODE", TwoFactAuthUtil.generateBaseSecret(8));
+                ApplianceUtil.setAuthParam("SECRET_KEY", TwoFactAuthUtil.generateBase32Secret());
+                if (ApplianceUtil.isPasswordSyncNeeded()) {
+                    request.setAttribute("SECRET_KEY", ApplianceUtil.getAuthParam("SECRET_KEY"));
+                    request.setAttribute("EMERGENCY_CODE", ApplianceUtil.getAuthParam("EMERGENCY_CODE"));
+                    LogUtil.debugOut((Object)"AdminConfigAction.performSaveTask(): Initiating SGMS Sync for 2FA", 3);
+                    ApplianceUtil.sync2FAConfigWithSGMS(request, response);
+                }
+            }
             String new_password = AuthenticateUtil.reverseChangePasswordHash(newPassword, oldPassword, oldPassword.length());
             md md_obj = new md(new_password);
             md_obj.calc();
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/servlets/ApplianceMainPage.java decompiled-9.3.9330/com/sonicwall/appliance/servlets/ApplianceMainPage.java
--- decompiled-9.3.9320/com/sonicwall/appliance/servlets/ApplianceMainPage.java	2023-09-08 15:13:11.773715888 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/servlets/ApplianceMainPage.java	2023-09-08 15:14:38.684138043 -0700
@@ -135,6 +135,8 @@
     private Hashtable<String, ApplianceAction> configActions;
     private ArrayList ignoreLicenseCheckActions;
     public static final String LOGIN_PAGE = new String("/applianceLogin.jsp");
+    public static final String TWO_FA_PAGE = new String("/applianceMainPage?page=twoFa");
+    public static final String CONFIRM_TWO_FA_PAGE = new String("/applianceMainPage?page=confirmTwoFa");
     public static final String CHANGE_PWD_PAGE = new String("/applianceChangePassword.jsp");
     public static final String LOGIN_REDIRECT_PAGE = new String("/loginRedirect.html");
     public static final String MAIN_PAGE = new String("/applianceMainPage.jsp");
@@ -811,6 +813,7 @@
     public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
         String logFile;
         File lFile;
+        String page;
         String action;
         if (!this.validateFormElementForCommandInjection(request)) {
             return;
@@ -823,6 +826,14 @@
         if ((action = request.getParameter("action")) == null) {
             action = (String)request.getAttribute("action");
         }
+        if ((page = request.getParameter("page")) != null && page.equals("twoFa")) {
+            ApplianceMainPage.forwardToPage(request, response, "twoFa.jsp");
+            return;
+        }
+        if (page != null && page.equals("confirmTwoFa")) {
+            ApplianceMainPage.forwardToPage(request, response, "confirmTwoFa.jsp");
+            return;
+        }
         if (this instanceof ApplianceLogin) {
             File file = new File(ApplianceUtil.FILEPATH_SGMS_ROOT + SharedUtils.errorMsgFile);
             StringBuffer sb = new StringBuffer();
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/servlets/AuthenticationFilter.java decompiled-9.3.9330/com/sonicwall/appliance/servlets/AuthenticationFilter.java
--- decompiled-9.3.9320/com/sonicwall/appliance/servlets/AuthenticationFilter.java	2023-09-08 15:13:11.809717281 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/servlets/AuthenticationFilter.java	2023-09-08 15:14:38.719094401 -0700
@@ -5,7 +5,9 @@
 
 import com.sonicwall.appliance.logging.ApplianceLog;
 import com.sonicwall.appliance.logging.LogUtil;
+import com.sonicwall.appliance.manager.ApplianceParametersConfigManager;
 import com.sonicwall.appliance.servlets.ApplianceMainPage;
+import com.sonicwall.appliance.util.ApplianceSMTPClient;
 import com.sonicwall.appliance.util.ApplianceUtil;
 import com.sonicwall.appliance.util.AuthenticateUtil;
 import com.sonicwall.appliance.util.ConfigurationInfo;
@@ -15,17 +17,31 @@
 import com.sonicwall.appliance.util.md;
 import com.sonicwall.sgms.license.GenericLicense;
 import com.sonicwall.sgms.logging.shared.ETypeStore;
-import com.sonicwall.sgms.util.Base64;
-import com.sonicwall.sgms.util.Crypto;
+import com.sonicwall.sgms.logging.shared.GenericMLogRecord;
+import com.sonicwall.sgms.logging.shared.GenericMLogger;
+import com.sonicwall.sgms.util.AESUtil;
+import com.sonicwall.sgms.util.KeyStotreUtil;
+import com.sonicwall.sgms.util.ProductizationUtil;
 import com.sonicwall.sgms.util.SharedUtils;
+import com.sonicwall.sgms.util.TEAV;
+import com.sonicwall.sgms.util.TwoFactAuthUtil;
 import java.io.IOException;
+import java.text.SimpleDateFormat;
+import java.time.Duration;
+import java.time.LocalDateTime;
+import java.time.ZoneOffset;
+import java.time.format.DateTimeFormatter;
+import java.util.ArrayList;
 import java.util.Date;
 import java.util.HashMap;
+import java.util.TimeZone;
+import java.util.logging.Level;
 import java.util.regex.Pattern;
 import javax.servlet.Filter;
 import javax.servlet.FilterChain;
 import javax.servlet.FilterConfig;
 import javax.servlet.ServletException;
+import javax.servlet.ServletOutputStream;
 import javax.servlet.ServletRequest;
 import javax.servlet.ServletResponse;
 import javax.servlet.http.HttpServletRequest;
@@ -35,7 +51,6 @@
 public final class AuthenticationFilter
 implements Filter {
     private FilterConfig filterConfig = null;
-    public static final String RESET_KEY_18CHAR_PRIVATE_KEY = "d:&!4+O=*wQe~I8f3l";
 
     @Override
     public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
@@ -43,8 +58,10 @@
         HttpServletResponse hres = (HttpServletResponse)response;
         HttpSession session = hreq.getSession();
         String action = hreq.getParameter("action");
+        ProductizationUtil productUtil = ProductizationUtil.getInstance();
+        ProductizationUtil.PRODUCT product = productUtil.getProduct();
+        hreq.setAttribute("PRODUCT_NAME", product.getProductName());
         if (action != null && action.equals("login")) {
-            boolean dbNotUpdateSessionTimeout;
             String needPwdChange;
             hreq.changeSessionId();
             String sessionID = session.getId();
@@ -280,6 +297,14 @@
             }
             LogUtil.debugOut("AuthenticationFilter.doFilter(): Successfully logged in user: " + user2 + ".");
             ApplianceLog.getReference().log("AuthenticationFilter", "doFilter", "Successfully logged in user: " + user2 + ".", ETypeStore.getReference(ETypeStore.EVENT4HOSTLOG));
+            String is2faEnabled = ApplianceUtil.getAuthParam("IS2FA_ENABLED");
+            is2faEnabled = is2faEnabled == null || is2faEnabled.trim().isEmpty() ? "0" : is2faEnabled;
+            request.setAttribute("IS2FA_ENABLED", is2faEnabled);
+            if (!is2faEnabled.equals("0")) {
+                request.setAttribute("JSP_PAGE_KEY", TEAV.encryptText(KeyStotreUtil.getValueFromKeystore("gms_twofa_page_auth_key")));
+            }
+            if (is2faEnabled.equals("0")) {
+                boolean dbNotUpdateSessionTimeout;
             String sessionId = Long.toString((long)(Math.random() * 10000.0 * 1.0E8));
             UserSession.setSessionId(sessionId);
             Date now = new Date();
@@ -306,6 +331,15 @@
             ApplianceUtil.extractApplianceConfFile();
             ApplianceUtil.extractAuthFile();
             ApplianceMainPage.forwardToPage(hreq, hres, ApplianceMainPage.MAIN_PAGE);
+            } else if (is2faEnabled.equals("1")) {
+                String emerCode = ApplianceUtil.getAuthParam("EMERGENCY_CODE");
+                request.setAttribute("EMERGENCY_CODE", emerCode);
+                request.setAttribute("user", user2);
+                ApplianceMainPage.forwardToPage(hreq, hres, ApplianceMainPage.TWO_FA_PAGE);
+            } else if (is2faEnabled.equals("2")) {
+                request.setAttribute("user", user2);
+                ApplianceMainPage.forwardToPage(hreq, hres, ApplianceMainPage.CONFIRM_TWO_FA_PAGE);
+            }
         } else {
             if (action != null && action.equals("resetPwd")) {
                 boolean isValidKey = false;
@@ -313,24 +347,10 @@
                 GenericLicense gl = GenericLicense.getReference();
                 if (!LicenseUtil.isRegistered() || gl.isClosed()) {
                     String pwdResetKey = hreq.getParameter("pwdResetKey");
-                    String prefixKey = "password";
                     String decryptionResult = "";
-                    if (!GenericLicense.getReference().isAvailable()) {
-                        if (ApplianceUtil.isAppliance() && !SharedUtils.isUMA_VM()) {
-                            prefixKey = ConfigurationInfo.getSerialNumber();
-                        }
-                    } else {
-                        prefixKey = GenericLicense.getReference().getProductSN();
-                    }
                     try {
-                        String key;
-                        String string = key = prefixKey.length() < 6 ? null : prefixKey.substring(0, 6);
-                        if (key != null) {
-                            key = key + RESET_KEY_18CHAR_PRIVATE_KEY;
-                            byte[] rawEnc = Base64.decode(pwdResetKey.toCharArray());
-                            decryptionResult = new String(Crypto.decrypt3DES(key.getBytes(), rawEnc, false, true));
-                            LogUtil.debugOut("AuthenticationFilter.doFilter(): Password Reset Key: " + pwdResetKey);
-                        }
+                        String enc = TEAV.fromHexString(pwdResetKey);
+                        decryptionResult = AESUtil.decryptUsingRSA(enc);
                     }
                     catch (Exception e) {
                         String msg = "Exception occurred while decrypting password reset key : " + e.getMessage();
@@ -342,7 +362,7 @@
                             if (decryptionResult.equals(ConfigurationInfo.getSerialNumber())) {
                                 isValidKey = true;
                             }
-                        } else if (decryptionResult.equals("password")) {
+                        } else if (decryptionResult.equals(KeyStotreUtil.getValueFromKeystore("gms_appliance_default_reset_password_check"))) {
                             isValidKey = true;
                         }
                     } else if (decryptionResult.equals(GenericLicense.getReference().getProductSN())) {
@@ -425,9 +445,209 @@
                 ApplianceMainPage.forwardToPage(hreq, hres, "login");
                 return;
             }
+            if (action != null && action.equals("confirm2FA")) {
+                String otp = request.getParameter("otp");
+                String twoFAbyEmail = request.getParameter("twoFAbyEmail");
+                String emCode = ApplianceUtil.getAuthParam("EMERGENCY_CODE");
+                String secretKey = ApplianceUtil.getAuthParam("SECRET_KEY");
+                boolean result = false;
+                boolean confirm2FALogin = false;
+                boolean email2FA = false;
+                try {
+                    if (otp.length() != 6) {
+                        result = emCode.equals(otp);
+                    } else {
+                        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
+                        long minutes = 999L;
+                        if (ApplianceUtil.getApplianceConfParam("EMAIL_OTP_TS") != null && !ApplianceUtil.getApplianceConfParam("EMAIL_OTP_TS").isEmpty()) {
+                            LocalDateTime t1 = LocalDateTime.parse(ApplianceUtil.getApplianceConfParam("EMAIL_OTP_TS"), formatter).atOffset(ZoneOffset.UTC).toLocalDateTime();
+                            LocalDateTime t2 = LocalDateTime.now(ZoneOffset.UTC);
+                            minutes = Math.abs(Duration.between(t2, t1).toMinutes());
+                        }
+                        if (!(email2FA = (result = ApplianceUtil.getApplianceConfParam("EMAIL_OTP").equals(otp) && minutes <= 3L))) {
+                            confirm2FALogin = result = TwoFactAuthUtil.isValid(otp, secretKey);
+                        }
+                    }
+                }
+                catch (Exception e) {
+                    LogUtil.debugOut("Authentication.performLogin() : Error : " + e.getMessage());
+                }
+                String user3 = ApplianceUtil.getAuthParam("user");
+                if (result) {
+                    boolean dbNotUpdateSessionTimeout;
+                    String sessionID = session.getId();
+                    String sessionId = Long.toString((long)(Math.random() * 10000.0 * 1.0E8));
+                    UserSession.setSessionId(sessionId);
+                    Date now = new Date();
+                    String s = Long.toString(now.getTime());
+                    String notUpdateSessionTimeout = hreq.getParameter("dbNotUpdateSessionTimeout");
+                    boolean bl = dbNotUpdateSessionTimeout = notUpdateSessionTimeout != null && notUpdateSessionTimeout.equals("1");
+                    if (!dbNotUpdateSessionTimeout) {
+                        session.setAttribute("lastCheck_" + sessionID, s);
+                    }
+                    if (session.getAttribute("hostIP_" + sessionID) == null) {
+                        session.setAttribute("hostIP_" + sessionID, hreq.getServerName());
+                    }
+                    if (session.getAttribute("protocol_" + sessionID) == null) {
+                        session.setAttribute("protocol_" + sessionID, hreq.getScheme());
+                    }
+                    if (session.getAttribute("port_" + sessionID) == null) {
+                        session.setAttribute("port_" + sessionID, hreq.getServerPort());
+                    }
+                    session.setAttribute("user_" + sessionID, new String(user3));
+                    ApplianceMainPage.setPeriodThreadSession(session);
+                    long last_login = new Date().getTime();
+                    String lastLogin = Long.toString(last_login);
+                    ApplianceUtil.setAuthParam("lastLogin", lastLogin);
+                    ApplianceUtil.extractApplianceConfFile();
+                    ApplianceUtil.extractAuthFile();
+                    if (confirm2FALogin && ApplianceUtil.getAuthParam("IS2FA_ENABLED").equals("1")) {
+                        ApplianceUtil.setAuthParam("IS2FA_ENABLED", "2");
+                        request.setAttribute("IS2FA_ENABLED", "2");
+                        ApplianceUtil.sync2FAConfigWithSGMS((HttpServletRequest)request, (HttpServletResponse)response);
+                    } else if (!email2FA && !confirm2FALogin) {
+                        String emergencyCode = TwoFactAuthUtil.generateBaseSecret(8);
+                        String newSecretKey = TwoFactAuthUtil.generateBase32Secret();
+                        ApplianceUtil.setAuthParam("EMERGENCY_CODE", emergencyCode);
+                        ApplianceUtil.setAuthParam("IS2FA_ENABLED", "1");
+                        ApplianceUtil.setAuthParam("SECRET_KEY", newSecretKey);
+                        request.setAttribute("EMERGENCY_CODE", emergencyCode);
+                        request.setAttribute("SECRET_KEY", newSecretKey);
+                        request.setAttribute("IS2FA_ENABLED", "1");
+                        ApplianceUtil.sync2FAConfigWithSGMS((HttpServletRequest)request, (HttpServletResponse)response);
+                    }
+                    ApplianceMainPage.forwardToPage(hreq, hres, ApplianceMainPage.MAIN_PAGE);
+                } else {
+                    LogUtil.debugOut((Object)"AuthenticationFilter.doFilter(): Failed to match Authentication Code.", 3);
+                    request.setAttribute("user", user3);
+                    if (twoFAbyEmail != null && twoFAbyEmail.equals("1")) {
+                        request.setAttribute("twoFAbyEmail", "1");
+                        request.setAttribute("ERR_MSG", "Invalid Authentication Code. Please enter valid Authentication code.");
+                    } else {
+                        request.setAttribute("ERR_MSG", "Invalid Authentication Code. Please enter valid Authentication code. (Make sure that your mobile time is synced to your network time.)");
+                    }
+                    if (ApplianceUtil.getAuthParam("IS2FA_ENABLED").equals("1")) {
+                        if (emCode != null) {
+                            request.setAttribute("EMERGENCY_CODE", emCode);
+                        }
+                        ApplianceMainPage.forwardToPage(hreq, hres, ApplianceMainPage.TWO_FA_PAGE);
+                    } else {
+                        ApplianceMainPage.forwardToPage(hreq, hres, ApplianceMainPage.CONFIRM_TWO_FA_PAGE);
+                    }
+                }
+            } else {
+                if (action != null && action.equals("getQrCode")) {
+                    String secretKey = ApplianceUtil.getAuthParam("SECRET_KEY");
+                    String IS2FA_ENABLED = ApplianceUtil.getAuthParam("IS2FA_ENABLED");
+                    String user4 = ApplianceUtil.getAuthParam("user");
+                    if (IS2FA_ENABLED.equals("1")) {
+                        response.setContentType("image/png");
+                        ServletOutputStream out = response.getOutputStream();
+                        try {
+                            String host = ApplianceParametersConfigManager.getReference().getHostName();
+                            out.write(TwoFactAuthUtil.generateQRCode(secretKey, user4 + "@" + "LocalDomain", host));
+                        }
+                        catch (Exception e) {
+                            LogUtil.debugOut("AuthenticationFilter.doFilter(): Error : " + e.getMessage());
+                            e.printStackTrace();
+                        }
+                    } else {
+                        ((HttpServletResponse)response).setStatus(404);
+                    }
+                    return;
+                }
+                if (action != null && action.equalsIgnoreCase("email2fa")) {
+                    try {
+                        String user5 = ApplianceUtil.getAuthParam("user");
+                        request.setAttribute("user", user5);
+                        if (this.set2FAbyEmail(hreq, hres, user5)) {
+                            request.setAttribute("twoFAbyEmail", "1");
+                            request.setAttribute("EMAIL_2FA_MSG", "Authentication code Sent to mail will expire in 3 minutes");
+                        } else {
+                            request.setAttribute("EMAIL_2FA_MSG", "Unable to Send Email");
+                        }
+                    }
+                    catch (Exception e) {
+                        LogUtil.debugOut("Authenticate.performLogin():  ERROR: " + e.getMessage());
+                        request.setAttribute("EMAIL_2FA_MSG", "Unable to Send Email");
+                    }
+                    ApplianceMainPage.forwardToPage(hreq, hres, ApplianceMainPage.CONFIRM_TWO_FA_PAGE);
+                } else {
             chain.doFilter(request, response);
         }
     }
+        }
+    }
+
+    public boolean set2FAbyEmail(HttpServletRequest req, HttpServletResponse res, final String user2) {
+        try {
+            final String otp = TwoFactAuthUtil.getOTP();
+            ArrayList<String> userList = new ArrayList<String>();
+            userList.add(user2);
+            final String userEmail = ApplianceUtil.getApplianceConfParam("administratorAddress");
+            new Thread(){
+
+                @Override
+                public void run() {
+                    boolean result = AuthenticationFilter.this.sendOtpByEmail(otp, userEmail, user2);
+                    if (result) {
+                        ApplianceUtil.setApplianceConfParam("EMAIL_OTP", otp);
+                        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
+                        ApplianceUtil.setApplianceConfParam("EMAIL_OTP_TS", LocalDateTime.now(ZoneOffset.UTC).format(formatter));
+                    }
+                }
+            }.start();
+        }
+        catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return true;
+    }
+
+    private boolean sendOtpByEmail(String otp, String userEmail, String user2) {
+        ProductizationUtil productUtil = ProductizationUtil.getInstance();
+        ProductizationUtil.PRODUCT product = productUtil.getProduct();
+        String fromAddress = ApplianceUtil.getApplianceConfParam("administratorAddress");
+        String toAddress = null;
+        if (userEmail != null && !userEmail.isEmpty()) {
+            toAddress = userEmail;
+        }
+        if (toAddress == null) {
+            return false;
+        }
+        String smtpServer = ApplianceUtil.getApplianceConfParam("smtpServer");
+        StringBuffer msg = new StringBuffer();
+        msg.append("\n").append(",\n Your One Time Password is " + otp + " and it will remain valid for next 3 mintutes.").append("\n \n Regards, \n " + fromAddress);
+        String subject = "GMS Login Authentication Code";
+        ApplianceSMTPClient client = new ApplianceSMTPClient(fromAddress, toAddress, smtpServer, msg.toString());
+        String smtpPort = ApplianceUtil.getApplianceConfParam("smtpPort");
+        String emailTimeout = ApplianceUtil.getApplianceConfParam("emailTimeout");
+        String smtpTLSEnabled = "0";
+        String smtpTLSEnabledParam = ApplianceUtil.getApplianceConfParam("smtpTLSEnabled");
+        if (smtpTLSEnabledParam != null && !smtpTLSEnabledParam.trim().isEmpty()) {
+            smtpTLSEnabled = smtpTLSEnabledParam;
+        }
+        String smtpType = ApplianceUtil.getApplianceConfParam("smtpType");
+        String smtpAuthUser = ApplianceUtil.getApplianceConfParam("smtpAuthUser");
+        String smtpAuthPwd = ApplianceUtil.getApplianceConfParam("smtpAuthPwd");
+        String Msg = "Authentication code Login Email from: " + fromAddress + " To: " + toAddress + " using mailServer: " + smtpServer + " through port: " + smtpPort;
+        GenericMLogRecord glr = GenericMLogger.getReference().createLogRecord(ETypeStore.getReference(ETypeStore.EVENT4EMAIL), Level.INFO, Msg);
+        glr.setSender(fromAddress);
+        glr.setRecipient(toAddress);
+        glr.setMailServer(smtpServer);
+        glr.setMailServerPort(smtpPort);
+        glr.setMailServerTLSEnabled(smtpTLSEnabled);
+        glr.setMailServerType(smtpType);
+        glr.setMailServerUser(smtpAuthUser);
+        glr.setMailServerPassword(smtpAuthPwd);
+        glr.setMessage(msg.toString());
+        glr.setSubject(subject);
+        glr.setFooter("Powered by ");
+        glr.setMailFormatType(2);
+        glr.setTableColData(null);
+        return client.sendLogMessage(glr, toAddress, product.getProductName());
+    }
 
     @Override
     public void init(FilterConfig filterConfig) {
@@ -446,5 +666,10 @@
         LogUtil.debugOut("AuthenticationFilter.doFilter(): Login failed for user:" + user2 + "." + lockoutMessage);
         ApplianceMainPage.forwardToPage(hreq, hres, "login");
     }
+
+    static {
+        KeyStotreUtil.df = new SimpleDateFormat("MMYYYYddHHmm");
+        KeyStotreUtil.df.setTimeZone(TimeZone.getTimeZone("IST"));
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/servlets/AutoApplianceLoginServlet.java decompiled-9.3.9330/com/sonicwall/appliance/servlets/AutoApplianceLoginServlet.java
--- decompiled-9.3.9320/com/sonicwall/appliance/servlets/AutoApplianceLoginServlet.java	2023-09-08 15:13:11.771715811 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/servlets/AutoApplianceLoginServlet.java	2023-09-08 15:14:38.683139290 -0700
@@ -68,11 +68,24 @@
         if (null != action) {
             switch (action) {
                 case "updateUserGeneralInfo": 
-                case "update": {
+                case "update": 
+                case "updateUserTypeGeneralInfo": {
                     String newPassword = (String)req.getAttribute("newPassword");
-                    if (null == newPassword || newPassword.isEmpty()) break;
+                    if (null != newPassword && !newPassword.isEmpty()) {
                     this.manager.changePassword(newPassword);
                 }
+                    String is2faEnabled = req.getParameter("is2faEnabled");
+                    String secretKey = (String)req.getAttribute("SECRET_KEY");
+                    String emerCode = (String)req.getAttribute("EMERGENCY_CODE");
+                    this.manager.change2faConfig(is2faEnabled, secretKey, emerCode);
+                    break;
+                }
+                case "confirm2FA": {
+                    String is2faEnabled = (String)req.getAttribute("IS2FA_ENABLED");
+                    String secretKey = (String)req.getAttribute("SECRET_KEY");
+                    String emergencyCode = (String)req.getAttribute("EMERGENCY_CODE");
+                    this.manager.change2faConfig(is2faEnabled, secretKey, emergencyCode);
+                }
             }
         }
     }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/servlets/BackupRestoreAction.java decompiled-9.3.9330/com/sonicwall/appliance/servlets/BackupRestoreAction.java
--- decompiled-9.3.9320/com/sonicwall/appliance/servlets/BackupRestoreAction.java	2023-09-08 15:13:11.764715540 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/servlets/BackupRestoreAction.java	2023-09-08 15:14:38.675149265 -0700
@@ -574,7 +574,15 @@
             }
             backupFile = new File(backupFileName);
         } else {
+            boolean directoryTravarsalCheck = ApplianceUtil.directoryTravarsalCheck(backupFileName);
+            if (directoryTravarsalCheck) {
             backupFile = new File(backupScheduleDir + File.separator + backupFileName);
+            } else {
+                isSuccess = false;
+                request.setAttribute("messagetype", 300);
+                request.setAttribute("message", "Please provide valid file name");
+                return isSuccess;
+            }
         }
         FileInputStream fis = null;
         try {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/servlets/FileSystemAction.java decompiled-9.3.9330/com/sonicwall/appliance/servlets/FileSystemAction.java
--- decompiled-9.3.9320/com/sonicwall/appliance/servlets/FileSystemAction.java	2023-09-08 15:13:11.789716507 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/servlets/FileSystemAction.java	2023-09-08 15:14:38.700118092 -0700
@@ -82,6 +82,10 @@
         }
     }
 
+    private boolean isValidSearchFilter(String searchFilter) {
+        return searchFilter.matches("[*A-Za-z0-9.?]+");
+    }
+
     public void performSearch(HttpServletRequest request, HttpServletResponse response) {
         String searchFolder = request.getParameter("searchFolder");
         String searchFilter = request.getParameter("searchFilter");
@@ -91,11 +95,17 @@
             request.setAttribute("message", "Export action failed.");
             ApplianceMainPage.forwardToPage(request, response, "/ActionFailure.jsp");
         }
+        if (!this.isValidSearchFilter(searchFilter)) {
+            request.setAttribute("messagetype", 300);
+            request.setAttribute("message", "Invalid search filter.");
+            ApplianceMainPage.forwardToPage(request, response, "/ActionFailure.jsp");
+        } else {
         ApplianceLog.getReference().log("FileSystemAction", "performSearch", "Searching files in the folder: " + searchFolder, ETypeStore.getReference(ETypeStore.EVENT4HOSTLOG));
         LogUtil.debugOut("FileSystemAction.performSearch(): Searching files in the folder: " + searchFolder);
         FileSystemManager.getReference().searchFiles(searchFolder, session, searchFilter);
         ApplianceLog.getReference().log("FileSystemAction", "performSearch", "File search completed in the folder: " + searchFolder, ETypeStore.getReference(ETypeStore.EVENT4HOSTLOG));
     }
+    }
 
     public void fetchSearchList(HttpServletRequest request, HttpServletResponse response) {
         String searchFolder = request.getParameter("searchFolder");
@@ -253,6 +263,8 @@
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Enabled force condition propagation
+     * Lifted jumps to return sites
      */
     public void uploadFile(HttpServletRequest request, HttpServletResponse response) {
         HttpSession session = request.getSession();
@@ -260,11 +272,7 @@
         ApplianceLog.getReference().log("FileSystemAction", "exportFile", "Uploading file(s).", ETypeStore.getReference(ETypeStore.EVENT4HOSTLOG));
         Enumeration enu = ((GeneralRequestWrapper)request).getFileNames();
         String searchFolder = (String)request.getAttribute("searchFolder");
-        if (!this.isAllowedForUploadOrDownload(searchFolder)) {
-            request.setAttribute("messagetype", 300);
-            request.setAttribute("message", "Upload file is not allowed on search folder " + searchFolder);
-            ApplianceMainPage.forwardToPage(request, response, "/ActionFailure.jsp");
-        }
+        if (this.isAllowedForUploadOrDownload(searchFolder) && (searchFolder.startsWith("/opt/GMSVP/syslogs") || searchFolder.startsWith("/opt/GMSVP/Logs"))) {
         File fromFile = null;
         String mvResponse = "";
         ApplianceProcessRunner p = null;
@@ -327,7 +335,8 @@
                             message = message + " with internal error. Try again.";
                         }
                         session.setAttribute("fileUploadStatusMsg_" + session.getId(), message);
-                    } else {
+                            return;
+                        }
                         if (toFileBkp.exists()) {
                             LogUtil.debugOut((Object)("FileSystemAction.uploadFile(): Moving file: " + fromFile.getAbsolutePath() + " to file: " + toFile.getAbsolutePath() + " successful."), 3);
                             LogUtil.debugOut((Object)("FileSystemAction.uploadFile(): Creating permissions for overwrriten file: " + toFile.getAbsolutePath() + " from backup file: " + toFileBkp.getAbsolutePath()), 3);
@@ -382,13 +391,12 @@
                             cmd = "chmod " + userPerm + "" + otherPerm + "" + groupPerm + " " + toFile.getAbsolutePath();
                             p.exec(cmd, 3600L);
                         }
-                        if (toFile.exists()) {
+                        if (!toFile.exists()) return;
                             toFileBkp.delete();
                             ApplianceLog.getReference().log("FileSystemAction", "exportFile", "Successfully added the file: " + toFile.getAbsolutePath(), ETypeStore.getReference(ETypeStore.EVENT4HOSTLOG));
                             session.setAttribute("fileUploadStatusMsg_" + session.getId(), "1");
+                        return;
                         }
-                    }
-                } else {
                     if (toFile.exists()) {
                         toFile.renameTo(toFileBkp);
                         LogUtil.debugOut((Object)("FileSystemAction.uploadFile(): Created backup file: " + toFileBkp.getAbsolutePath() + " before overwriting file: " + fromFile.getAbsolutePath()), 3);
@@ -399,24 +407,22 @@
                         toFileBkp.delete();
                         ApplianceLog.getReference().log("FileSystemAction", "exportFile", "Successfully added the file: " + toFile.getAbsolutePath(), ETypeStore.getReference(ETypeStore.EVENT4HOSTLOG));
                         session.setAttribute("fileUploadStatusMsg_" + session.getId(), "1");
-                    } else {
+                        return;
+                    }
                         ApplianceLog.getReference().log("FileSystemAction", "exportFile", "Failed to add the file: " + toFile.getAbsolutePath(), ETypeStore.getReference(ETypeStore.EVENT4HOSTLOG));
                         String fileUploadStatusMsg = (String)session.getAttribute("fileUploadStatusMsg_" + session.getId());
-                        if (fileUploadStatusMsg == null || fileUploadStatusMsg.equals("")) {
+                    if (fileUploadStatusMsg != null && !fileUploadStatusMsg.equals("")) return;
                             session.setAttribute("fileUploadStatusMsg_" + session.getId(), "Failed to add file.");
+                    return;
                         }
-                    }
-                }
-            } else {
                 if (fromFile != null && fromFile.exists()) {
                     fromFile.delete();
                 }
                 ApplianceLog.getReference().log("FileSystemAction", "exportFile", "Failed to add the file with error: Invalid file uploaded with 0 Bytes size.", ETypeStore.getReference(ETypeStore.EVENT4HOSTLOG));
                 String fileUploadStatusMsg = (String)session.getAttribute("fileUploadStatusMsg_" + session.getId());
-                if (fileUploadStatusMsg == null || fileUploadStatusMsg.equals("")) {
+                if (fileUploadStatusMsg != null && !fileUploadStatusMsg.equals("")) return;
                     session.setAttribute("fileUploadStatusMsg_" + session.getId(), "Failed to add file with error: Invalid file uploaded with 0 Bytes size.<br>Please use the Browse button to select a valid file.");
-                }
-            }
+                return;
         }
         catch (Exception e) {
             if (fromFile != null && fromFile.exists()) {
@@ -424,12 +430,18 @@
             }
             LogUtil.debugOut((Object)"FileSystemAction.uploadFile(): Failed to add the file", 3);
             session.setAttribute("fileUploadStatusMsg_" + session.getId(), "Failed to add file.");
+                return;
         }
         finally {
             if (p != null) {
                 p.clear();
             }
         }
+        } else {
+            request.setAttribute("messagetype", 300);
+            request.setAttribute("message", "Upload file is not allowed on search folder " + searchFolder);
+            ApplianceMainPage.forwardToPage(request, response, "/ActionFailure.jsp");
+        }
     }
 
     public void isFileExists(HttpServletRequest request, HttpServletResponse response) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/servlets/GeneralRequestWrapper.java decompiled-9.3.9330/com/sonicwall/appliance/servlets/GeneralRequestWrapper.java
--- decompiled-9.3.9320/com/sonicwall/appliance/servlets/GeneralRequestWrapper.java	2023-09-08 15:13:11.770715772 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/servlets/GeneralRequestWrapper.java	2023-09-08 15:14:38.681141784 -0700
@@ -56,6 +56,15 @@
                 e.printStackTrace();
             }
         }
+        this.copyParamsToAttribute();
+    }
+
+    public void copyParamsToAttribute() {
+        Enumeration enu = this.getParameterNames();
+        while (enu.hasMoreElements()) {
+            String key = (String)enu.nextElement();
+            this.setAttribute(key, this.getParameter(key));
+        }
     }
 
     private boolean alreadyHasValue(FileItem aItem) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/servlets/LicenseAction.java decompiled-9.3.9330/com/sonicwall/appliance/servlets/LicenseAction.java
--- decompiled-9.3.9320/com/sonicwall/appliance/servlets/LicenseAction.java	2023-09-08 15:13:11.793716662 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/servlets/LicenseAction.java	2023-09-08 15:14:38.702115598 -0700
@@ -115,6 +115,10 @@
                 ApplianceLog.getReference().log("LicenseAction", "performTask", "Failed to upload offline license file.", ETypeStore.getReference(ETypeStore.EVENT4HOSTLOG));
                 LogUtil.debugOut("LicenseAction.performTask(): Action: upload; Offline license file upload failed.");
             }
+            if (licenseFile != null && licenseFile.exists()) {
+                licenseFile.delete();
+                LogUtil.debugOut((Object)("LicenseAction.performTask: Temporary file '" + licenseFile + "' deleted successfully."), 3);
+            }
         }
         if (task.equalsIgnoreCase("refresh")) {
             String licenseResp = LicenseManager.getRemoteLicense(true);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/servlets/SessionExpiredFilter.java decompiled-9.3.9330/com/sonicwall/appliance/servlets/SessionExpiredFilter.java
--- decompiled-9.3.9320/com/sonicwall/appliance/servlets/SessionExpiredFilter.java	2023-09-08 15:13:11.762715463 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/servlets/SessionExpiredFilter.java	2023-09-08 15:14:38.672153006 -0700
@@ -11,6 +11,8 @@
 import com.sonicwall.appliance.util.LicenseUtil;
 import com.sonicwall.appliance.util.UserSession;
 import com.sonicwall.sgms.logging.shared.ETypeStore;
+import com.sonicwall.sgms.util.KeyStotreUtil;
+import com.sonicwall.sgms.util.TEAV;
 import java.io.IOException;
 import java.util.Date;
 import java.util.Enumeration;
@@ -30,36 +32,36 @@
 
     @Override
     public void doFilter(ServletRequest req, ServletResponse response, FilterChain chain) throws IOException, ServletException {
+        String jspKey;
         boolean isCrossContext;
         String showHeader;
         HttpServletRequest hreq = (HttpServletRequest)req;
         HttpServletResponse hres = (HttpServletResponse)response;
-        GeneralRequestWrapper request = new GeneralRequestWrapper(hreq, System.getProperty("java.io.tmpdir"));
-        String action = request.getParameter("action");
-        HttpSession session = request.getSession();
+        String action = hreq.getParameter("action");
+        HttpSession session = hreq.getSession();
         String mySessionID = session.getId();
         if (!ApplianceMainPage.isUp) {
-            this.endPrvSessions(request);
+            this.endPrvSessions(hreq);
         }
         Object map = null;
         String key = "";
-        Enumeration enu = request.getParameterNames();
+        Enumeration<String> enu = hreq.getParameterNames();
         while (enu.hasMoreElements()) {
-            key = (String)enu.nextElement();
-            request.setAttribute(key, request.getParameter(key));
+            key = enu.nextElement();
+            hreq.setAttribute(key, hreq.getParameter(key));
         }
-        String task = request.getParameter("task");
-        String notUpdateSessionTimeout = request.getParameter("dbNotUpdateSessionTimeout");
+        String task = hreq.getParameter("task");
+        String notUpdateSessionTimeout = hreq.getParameter("dbNotUpdateSessionTimeout");
         boolean dbNotUpdateSessionTimeout = notUpdateSessionTimeout != null && notUpdateSessionTimeout.equals("1");
-        String timeout = request.getParameter("timeout");
+        String timeout = hreq.getParameter("timeout");
         String userSessionId = UserSession.getSessionId();
         userSessionId = (String)session.getAttribute("id_" + mySessionID);
-        String skipSessionCheck = (String)request.getAttribute("skipSessionCheck");
+        String skipSessionCheck = (String)hreq.getAttribute("skipSessionCheck");
         if (skipSessionCheck == null) {
-            skipSessionCheck = request.getParameter("skipSessionCheck");
+            skipSessionCheck = hreq.getParameter("skipSessionCheck");
         }
-        if ((showHeader = (String)request.getAttribute("showHeader")) == null) {
-            showHeader = request.getParameter("showHeader");
+        if ((showHeader = (String)hreq.getAttribute("showHeader")) == null) {
+            showHeader = hreq.getParameter("showHeader");
         }
         if (skipSessionCheck == null) {
             skipSessionCheck = showHeader;
@@ -97,15 +99,15 @@
             sessionExpired = sessionTimeout == 0L || sessionTimeout == -1L ? false : timeNow - lastCheck > sessionTimeout;
         }
         LogUtil.debugOut((Object)("SessionExpiredFilter.doFilter(): sessionExpired: " + sessionExpired), 3);
-        if (request.getAttribute("callerContext") != null) {
-            LicenseUtil.callerContext = (String)request.getAttribute("callerContext");
+        if (hreq.getAttribute("callerContext") != null) {
+            LicenseUtil.callerContext = (String)hreq.getAttribute("callerContext");
         }
         boolean bl = isCrossContext = LicenseUtil.callerContext.equalsIgnoreCase("sgms");
         if (sessionExists && sessionExpired && (skipSessionCheck == null || skipSessionCheck.equals("0"))) {
-            this.endPrvSessions(request);
+            this.endPrvSessions(hreq);
         }
-        if (hreq.getServletPath().contains("applianceLogin.jsp") || hreq.getServletPath().contains("login") || hreq.getServletPath().contains(".css") || hreq.getServletPath().contains(".js") || hreq.getServletPath().contains("images") || action != null && action.equals("login") || isCrossContext && action != null && action.equals("license") && task != null && task.equals("save")) {
-            chain.doFilter(request, response);
+        if ((jspKey = (String)hreq.getAttribute("JSP_PAGE_KEY")) != null && TEAV.decryptText(jspKey).equals(KeyStotreUtil.getValueFromKeystore("gms_twofa_page_auth_key")) || hreq.getServletPath().contains("applianceLogin.jsp") || hreq.getServletPath().contains("login") || hreq.getServletPath().contains(".css") || hreq.getServletPath().endsWith(".js") || hreq.getServletPath().contains("images") || hreq.getServletPath().contains("logout.html") || action != null && action.equals("login") || isCrossContext && action != null && action.equals("license") && task != null && task.equals("save")) {
+            chain.doFilter(hreq, response);
             return;
         }
         if (!(userSessionId != null && !sessionExpired && ApplianceMainPage.isUp || skipSessionCheck != null && !skipSessionCheck.equals("0"))) {
@@ -123,10 +125,11 @@
                 session.setAttribute("lastCheck_" + mySessionID, Long.toString(now.getTime()));
             }
             if (timeout != null && timeout.equals("1")) {
-                request.setAttribute("messagetype", 100);
-                request.setAttribute("message", "Session not timed out");
+                hreq.setAttribute("messagetype", 100);
+                hreq.setAttribute("message", "Session not timed out");
                 ApplianceMainPage.forwardToPage(hreq, hres, "/ActionFailure.jsp");
             } else {
+                GeneralRequestWrapper request = new GeneralRequestWrapper(hreq, System.getProperty("java.io.tmpdir"));
                 chain.doFilter(request, response);
             }
         }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/util/ApplianceUtil.java decompiled-9.3.9330/com/sonicwall/appliance/util/ApplianceUtil.java
--- decompiled-9.3.9320/com/sonicwall/appliance/util/ApplianceUtil.java	2023-09-08 15:13:11.745714805 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/util/ApplianceUtil.java	2023-09-08 15:14:38.656172957 -0700
@@ -84,6 +84,8 @@
 import java.util.TimeZone;
 import java.util.Vector;
 import java.util.logging.Level;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipException;
 import java.util.zip.ZipFile;
@@ -285,6 +287,9 @@
     public static String INSTALL_STATE = "0";
     public static final String DATABASE_UPGRADE_HF_DUMP_LOC = "mysqldbdumplocation";
     public static final long MINIMUM_DISKSPACE_REQUIRED_IN_KB = 0x5F00000L;
+    public static final String GMS_APPLIANCE_RESET_DEFAULT_KEY = "gms_appliance_reset_default_key";
+    public static final String GMS_APPLIANCE_RESET_KEY = "gms_appliance_reset_key";
+    public static final String GMS_APPLIANCE_RSA_PUBLIC_KEY = "gms_appliance_rsa_public_key";
 
     public static String getDefaultFileLocation() {
         return FILEPATH_APPLIANCE_CONFIG;
@@ -993,7 +998,7 @@
                         String[] pair;
                         if (tokens[i].startsWith("<") || tokens[i].indexOf("=") == -1 || (pair = tokens[i].split("=")) == null || pair.length != 2) continue;
                         String key = pair[0];
-                        map.put(key, pair[1]);
+                        map.put(key, pair[1].trim());
                     }
                 }
             } else {
@@ -1506,43 +1511,43 @@
         folderInfo.addIncludeFilter("ErrorCodes.txt", String.valueOf(1));
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_SGMS_PREFS, "/etc/Prefs");
-        folderInfo.addIncludeFilter("*.exp");
-        folderInfo.addIncludeFilter("UT*");
+        folderInfo.addIncludeFilter("*.exp", String.valueOf(1));
+        folderInfo.addIncludeFilter("UT*", String.valueOf(1));
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_SGMS_PREFS + "old", "/etc/Prefs/old");
-        folderInfo.addIncludeFilter("*.exp");
+        folderInfo.addIncludeFilter("*.exp", String.valueOf(1));
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_SGMS_MIBS, "/etc/mibs");
-        folderInfo.addIncludeFilter("*.*");
+        folderInfo.addIncludeFilter("*.*", String.valueOf(1));
         folderInfo.addIncludeFilter("RFC1213-MIB", String.valueOf(1));
-        folderInfo.addIncludeFilter("*.c??", String.valueOf(2));
+        folderInfo.addIncludeFilter("*.c??", String.valueOf(5));
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_SGMS_FIRMWARE, "/Firmware");
-        folderInfo.addIncludeFilter("*.*");
+        folderInfo.addIncludeFilter("*.*", String.valueOf(1));
         folderInfo.addExcludeFilter("*.txt");
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_SGMS_FIRMWARE_CURRENT, "/Firmware/Current");
-        folderInfo.addIncludeFilter("*.*");
+        folderInfo.addIncludeFilter("*.*", String.valueOf(1));
         folderInfo.addExcludeFilter("*.txt");
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_SGMS_FIRMWARE_OLD, "/Firmware/Old");
-        folderInfo.addIncludeFilter("*.*");
+        folderInfo.addIncludeFilter("*.*", String.valueOf(1));
         folderInfo.addExcludeFilter("*.txt");
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_SGMS_LOGS, "/Logs");
-        folderInfo.addIncludeFilter("*.*");
+        folderInfo.addIncludeFilter("*.*", String.valueOf(1));
         folderInfo.addExcludeFilter("*.txt");
         fileSystemFoldersList.add(folderInfo);
         String role = ConfigFileReaderUtil.getConfigValue("applianceRole");
         if (ApplianceUtil.isFlowEnabled(role)) {
             folderInfo = new FolderInfo(FILEPATH_SGMS_FS_LOGS, "/Logs/appflow");
-            folderInfo.addIncludeFilter("*.*");
+            folderInfo.addIncludeFilter("*.*", String.valueOf(1));
             folderInfo.addExcludeFilter("*.txt");
             fileSystemFoldersList.add(folderInfo);
         }
         folderInfo = new FolderInfo(FILEPATH_SGMS_ARCHIVED_LOGS, "/Logs/archivedLogs");
-        folderInfo.addIncludeFilter("*.html");
-        folderInfo.addIncludeFilter("*.csv");
+        folderInfo.addIncludeFilter("*.html", String.valueOf(1));
+        folderInfo.addIncludeFilter("*.csv", String.valueOf(1));
         fileSystemFoldersList.add(folderInfo);
         if (!role.equalsIgnoreCase(FLOW_ANALYZER_ROLE)) {
             folderInfo = new FolderInfo(FILEPATH_SGMS_SYSLOGS, "/syslogs");
@@ -1559,19 +1564,19 @@
             fileSystemFoldersList.add(folderInfo);
         }
         folderInfo = new FolderInfo(FILEPATH_SGMS_TEMP, "/Temp");
-        folderInfo.addIncludeFilter("*.*");
+        folderInfo.addIncludeFilter("*.*", String.valueOf(1));
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_TOMCAT_TEMP, "/Tomcat/temp");
-        folderInfo.addIncludeFilter("*.*");
+        folderInfo.addIncludeFilter("*.*", String.valueOf(1));
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_TOMCAT_LOGS, "/Tomcat/logs");
-        folderInfo.addIncludeFilter("*.*");
+        folderInfo.addIncludeFilter("*.*", String.valueOf(1));
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_TOMCAT_CONF, "/Tomcat/conf");
         folderInfo.addIncludeFilter("server.xml", String.valueOf(5));
         fileSystemFoldersList.add(folderInfo);
         folderInfo = new FolderInfo(FILEPATH_VIEWPOINT_REPORTS, "/ViewPoint/reports");
-        folderInfo.addIncludeFilter("*.*");
+        folderInfo.addIncludeFilter("*.*", String.valueOf(1));
         fileSystemFoldersList.add(folderInfo);
         if (ApplianceUtil.isAppliance()) {
             folderInfo = new FolderInfo(FILEPATH_MYSQL_DATA, "/mysql/data");
@@ -2241,6 +2246,21 @@
         return isPasswordSync;
     }
 
+    public static boolean is2faChangeNeeded(String is2faEnabled) {
+        String config;
+        switch (config = ApplianceUtil.getAuthParam("IS2FA_ENABLED")) {
+            case "2": 
+            case "1": {
+                return is2faEnabled.equals("0");
+            }
+            case "0": 
+            case "": {
+                return is2faEnabled.equals("1");
+            }
+        }
+        return false;
+    }
+
     public static void persistInstallMode(String installMode) {
         ApplianceUtil.setApplianceConfParam("INSTALL_MODE", installMode);
     }
@@ -2375,6 +2395,19 @@
         }
     }
 
+    public static void sync2FAConfigWithSGMS(HttpServletRequest req, HttpServletResponse resp) {
+        RequestDispatcher dispatcher;
+        ServletContext context = req.getServletContext().getContext("/sgms");
+        if (null != context && null != (dispatcher = context.getRequestDispatcher("/autosgmslogin"))) {
+            try {
+                dispatcher.include(req, resp);
+            }
+            catch (IOException | ServletException e) {
+                LogUtil.debugOut((Object)("ApplianceUtil.syncPasswordWithSGMS(): Sync SGMS 2FAConfig: Failed to forward change password request via cross context.\n" + e.getMessage()), 2);
+            }
+        }
+    }
+
     public static HashMap<String, String[]> getGMSServicesRunning() {
         HashMap<String, String> configFileMap = ConfigFileReaderUtil.getConfigFileName();
         HashMap<String, String[]> runningServices = new HashMap<String, String[]>();
@@ -2634,6 +2667,15 @@
         }
     }
 
+    public static boolean directoryTravarsalCheck(String backupFileName) {
+        boolean directoyCheck = false;
+        Pattern pattern = Pattern.compile("\\.\\./|/\\.\\.|/|\\.{2}|[\\\\/]");
+        Matcher matcher = pattern.matcher(backupFileName);
+        directoyCheck = !matcher.find();
+        LogUtil.debugOut((Object)("ApplianceUtil.directoryTravarsalCheck(): directoyCheck: " + directoyCheck), 2);
+        return directoyCheck;
+    }
+
     public static void startServices(ArrayList<ApplianceServiceActionInfoData> serviceActions, Map<String, String> serviceActionTerminateMap) {
         LogUtil.debugOut((Object)"ApplianceUtil.startServices(): Starting Services.", 2);
         HashMap<String, String[]> allServices = applianceServices;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/util/AuthenticateUtil.java decompiled-9.3.9330/com/sonicwall/appliance/util/AuthenticateUtil.java
--- decompiled-9.3.9320/com/sonicwall/appliance/util/AuthenticateUtil.java	2023-09-08 15:13:11.675712097 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/util/AuthenticateUtil.java	2023-09-08 15:14:38.595249019 -0700
@@ -420,6 +420,7 @@
         boolean bSuccess = false;
         ApplianceUtil.setAuthParam("password", oldPassword);
         ApplianceUtil.setAuthParam("datePwdChanged", oldDatePwdChanged);
+        ApplianceUtil.setAuthParam("IS2FA_ENABLED", "0");
         bSuccess = true;
         return bSuccess;
     }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/util/BackupRestoreUtil.java decompiled-9.3.9330/com/sonicwall/appliance/util/BackupRestoreUtil.java
--- decompiled-9.3.9320/com/sonicwall/appliance/util/BackupRestoreUtil.java	2023-09-08 15:13:11.716713683 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/util/BackupRestoreUtil.java	2023-09-08 15:14:38.631204130 -0700
@@ -3,7 +3,6 @@
  */
 package com.sonicwall.appliance.util;
 
-import com.google.common.io.Files;
 import com.google.gson.JsonObject;
 import com.sonicwall.appliance.base.ThisInstanceInfo;
 import com.sonicwall.appliance.logging.LogUtil;
@@ -18,6 +17,7 @@
 import com.sonicwall.sgms.util.ConfigFileReaderUtil;
 import com.sonicwall.sgms.util.DatabaseBackupInfo;
 import com.sonicwall.sgms.util.DatabaseMaintenanceUtil;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.ProductizationUtil;
 import com.sonicwall.sgms.util.SharedUtils;
 import com.sonicwall.sgms.util.SysInfo;
@@ -41,6 +41,8 @@
 import java.io.StringReader;
 import java.io.StringWriter;
 import java.io.Writer;
+import java.nio.file.Files;
+import java.nio.file.Paths;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.sql.Connection;
@@ -495,24 +497,27 @@
             BackupRestoreUtil.addZipEntry(zos, confDir, file.getName());
             fileNames.append(file.getName());
         }
-        prop.setProperty(PROPS_BACKUP_CONF, fileNames.toString());
         if (!SharedUtils.isAppliance()) {
             List<File> nonAppliancefileList = BackupRestoreUtil.getNonApplianceFiles();
             fileList.addAll(nonAppliancefileList);
             String myibFileCheckSum = "";
             for (int j = 0; j < nonAppliancefileList.size(); ++j) {
-                fileNames.append(",");
                 File afile = nonAppliancefileList.get(j);
                 if (afile.getName().equalsIgnoreCase("my-ib.ini")) {
                     myibFileCheckSum = BackupRestoreUtil.getFileChecksumValue(afile, CHECKSUM_TYPE);
                 } else if (afile.getName().equalsIgnoreCase("postgresql.conf")) {
                     myibFileCheckSum = BackupRestoreUtil.getFileChecksumValue(afile, CHECKSUM_TYPE);
+                } else {
+                    String checkSum = BackupRestoreUtil.getFileChecksumValue(afile, CHECKSUM_TYPE);
+                    prop.setProperty("backup_" + afile.getName() + "_checksum", checkSum);
+                    fileNames.append(",");
+                    fileNames.append(afile.getName());
                 }
                 BackupRestoreUtil.addZipEntry(zos, afile.getParentFile(), afile.getName());
-                fileNames.append(afile.getName());
             }
             prop.setProperty(PROPS_BACKUP_IBCONFIG_CHECKSUM, myibFileCheckSum);
         }
+        prop.setProperty(PROPS_BACKUP_CONF, fileNames.toString());
     }
 
     protected static List<File> backupConfig(Properties prop) throws Exception {
@@ -1545,6 +1550,23 @@
         if (file.exists()) {
             nonApplianceFiles.add(file);
         }
+        try {
+            String userFolderEnc;
+            String userFolder;
+            File confDir;
+            String userConfPath = ApplianceUtil.FILEPATH_SGMS_ROOT + File.separator + "conf" + File.separator + ".userConf.txt";
+            File userConf = new File(userConfPath);
+            if (userConf.exists() && (confDir = new File((userFolder = TEAV.decryptText(userFolderEnc = new String(Files.readAllBytes(Paths.get(userConfPath, new String[0]))))) + File.separator + ".gms" + File.separator)).exists()) {
+                File[] arr;
+                for (File encFile : arr = confDir.listFiles()) {
+                    if (!encFile.exists()) continue;
+                    nonApplianceFiles.add(encFile);
+                }
+            }
+        }
+        catch (Exception e) {
+            LogUtil.logError(e, e.getMessage(), "getNonApplianceFiles", "BackupRestoreUtil");
+        }
         return nonApplianceFiles;
     }
 
@@ -2264,10 +2286,10 @@
             Properties properties = BackupRestoreUtil.getMetaProperties(snapshot);
             List<String> confFiles = Arrays.asList(properties.getProperty(PROPS_BACKUP_CONF).split(","));
             for (String file : confFiles) {
-                String restoreCheckSum;
                 File aFile = new File(outputDir + File.separator + file);
                 String backUpCheckSum = properties.getProperty("backup_" + file + "_checksum");
-                if (backUpCheckSum.equals(restoreCheckSum = BackupRestoreUtil.getFileChecksumValue(aFile, CHECKSUM_TYPE))) continue;
+                String restoreCheckSum = BackupRestoreUtil.getFileChecksumValue(aFile, CHECKSUM_TYPE);
+                if (restoreCheckSum.equals(backUpCheckSum)) continue;
                 flag = false;
                 return flag;
             }
@@ -2325,7 +2347,7 @@
             public boolean accept(File pathname) {
                 if (pathname.isFile() && pathname.canRead()) {
                     String fileName = pathname.getName();
-                    return !"my.cnf".equalsIgnoreCase(fileName) && !"dea.xml".equalsIgnoreCase(fileName) && !"sgms.o".equalsIgnoreCase(fileName) && !"license_summary_en.html".equalsIgnoreCase(fileName) && !"license_summary.html".equalsIgnoreCase(fileName) && !"applianceDefinition.xml".equalsIgnoreCase(fileName) && !"backupFileList.txt".equalsIgnoreCase(fileName) && !"restoreHistory.log".equalsIgnoreCase(fileName) && !"dbUpgradeMsg.txt".equalsIgnoreCase(fileName);
+                    return !"my.cnf".equalsIgnoreCase(fileName) && !"dea.xml".equalsIgnoreCase(fileName) && !"sgms.o".equalsIgnoreCase(fileName) && !"license_summary_en.html".equalsIgnoreCase(fileName) && !"license_summary.html".equalsIgnoreCase(fileName) && !"applianceDefinition.xml".equalsIgnoreCase(fileName) && !"backupFileList.txt".equalsIgnoreCase(fileName) && !"restoreHistory.log".equalsIgnoreCase(fileName) && !"dbUpgradeMsg.txt".equalsIgnoreCase(fileName) && !".userConf.txt".equalsIgnoreCase(fileName);
                 }
                 return false;
             }
@@ -2514,7 +2536,7 @@
                 }
             }
             if (completed && backupFile != null && backupFile.exists()) {
-                Files.move(backupFile, new File(backupFile.getParent() + File.separator + backupFileName + ".zip"));
+                com.google.common.io.Files.move(backupFile, new File(backupFile.getParent() + File.separator + backupFileName + ".zip"));
             }
         }
         return backupFile;
@@ -2773,7 +2795,6 @@
         String currentAction = "None";
         StringBuilder errorMessage = new StringBuilder();
         try {
-            String fileName;
             String dirPath;
             StringTokenizer st;
             String dbAdminPassword;
@@ -2807,7 +2828,9 @@
                 LogUtil.debugOut((Object)("BackupRestoreUtil.restore(): Backed-up system configurations: " + conf), 1);
                 st = new StringTokenizer(conf, ",");
                 dirPath = null;
+                String userHome = null;
                 while (st.hasMoreElements()) {
+                    String fileName;
                     String dstFileName = fileName = st.nextToken();
                     if (fileName.startsWith("addUnit") || fileName.startsWith("my-ib")) continue;
                     if (fileName.equalsIgnoreCase("server.xml") && !SharedUtils.isAppliance()) {
@@ -2817,12 +2840,25 @@
                         String month = cal.get(2) + 1 < 10 ? "0" + (cal.get(2) + 1) : cal.get(2) + 1 + "";
                         String date = cal.get(5) < 10 ? "0" + cal.get(5) : cal.get(5) + "";
                         dstFileName = "upgradeHistory.log.restored." + cal.get(1) + month + date;
+                    } else if (fileName.equalsIgnoreCase(KeyStotreUtil.localConf) || fileName.equalsIgnoreCase(KeyStotreUtil.localKeyStoreName)) {
+                        if (userHome == null) {
+                            String userConfFile = ApplianceUtil.FILEPATH_SGMS_CONF + File.separator + ".userConf.txt";
+                            userHome = System.getProperty("user.home");
+                            if (!(userHome != null && !userHome.isEmpty() || (userHome = System.getenv("user.home")) != null && !userHome.isEmpty() || (userHome = System.getenv("USERPROFILE")) != null && !userHome.isEmpty())) {
+                                throw new IOException("user.home Not Found");
+                            }
+                            LogUtil.debugOut((Object)("restoreWindows : userHome " + userHome), 1);
+                            SharedUtils.writeFile(new File(userConfFile), TEAV.encryptTextInHex(userHome), false);
+                        }
+                        dirPath = userHome + File.separator + ".gms" + File.separator;
+                        File dir = new File(dirPath);
+                        dir.mkdirs();
                     } else {
                         dirPath = SharedUtils.isAppliance() ? ApplianceUtil.FILEPATH_SGMS_DATA : ApplianceUtil.FILEPATH_SGMS_CONF;
                     }
                     File srcFile = new File(outputDir, fileName);
                     File dstFile = new File(dirPath, dstFileName);
-                    if (!srcFile.isFile() || !dstFile.isFile()) continue;
+                    if (!srcFile.isFile() || !dstFile.isFile() && !dstFile.getParentFile().exists()) continue;
                     LogUtil.debugOut((Object)("BackupRestoreUtil.restore(): Copy content of backup file: " + srcFile.getName() + " to " + dstFile.getAbsolutePath()), 3);
                     BackupRestoreUtil.copyFile(srcFile, dstFile);
                 }
@@ -2847,7 +2883,7 @@
                 st = new StringTokenizer(addUnit, ",");
                 dirPath = ApplianceUtil.FILEPATH_SGMS_ETC_PREFS;
                 while (st.hasMoreElements()) {
-                    fileName = st.nextToken();
+                    String fileName = st.nextToken();
                     File srcFile = new File(outputDir, fileName);
                     File dstFile = new File(dirPath, fileName);
                     if (!srcFile.isFile() || !dstFile.isFile()) continue;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/util/DatabaseUpdate.java decompiled-9.3.9330/com/sonicwall/appliance/util/DatabaseUpdate.java
--- decompiled-9.3.9320/com/sonicwall/appliance/util/DatabaseUpdate.java	2023-09-08 15:13:11.714713606 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/util/DatabaseUpdate.java	2023-09-08 15:14:38.629206624 -0700
@@ -16,8 +16,10 @@
 import com.sonicwall.appliance.util.ConfigurationInfo;
 import com.sonicwall.appliance.util.MySQLDatabaseUpgrade;
 import com.sonicwall.appliance.util.ReportDatabaseRebuildUtil;
+import com.sonicwall.appliance.util.SecurityPatchUtil;
 import com.sonicwall.sgms.common.util.CommonConstants;
 import com.sonicwall.sgms.util.ConfigFileReaderUtil;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.ProductizationUtil;
 import com.sonicwall.sgms.util.SharedUtils;
 import com.sonicwall.sgms.util.SysInfo;
@@ -1060,6 +1062,10 @@
             SharedUtils.writeFile(dbug, " -> Start/Stop services for Windows setup Completed.\n", doAppend);
         }
         DatabaseUpdate.closeConnection();
+        int redundantConsole = isRedundantConsole ? 1 : 0;
+        String serial = ConfigurationInfo.getSerialNumber();
+        String result = SecurityPatchUtil.getReference().applySecurityPatchesForUpgrade(applianceRole, redundantConsole, serial, dbug);
+        SharedUtils.writeFile(dbug, " -> S-patch response : " + result + "\n", doAppend);
         SharedUtils.setDbUpdateRunning(false);
         if (ApplianceDefinitionFileReader.IB_DATABASE_ENGINE.equalsIgnoreCase("postgres") && reportDbMigrartionFlag.equalsIgnoreCase("yes") && (conn = dbManager.openConnection()) != null) {
             String summStatus = dbManager.getCosmoParam(conn, "report.db.summarystatus_" + schedulerIP);
@@ -1104,8 +1110,7 @@
                                 throwable = null;
                                 try (Statement stmt = conn.createStatement();){
                                     try {
-                                        String S_STRING = "2D2624C80F73C1B77C4A091581F3AD25";
-                                        stmt.executeUpdate("ALTER USER postgres WITH PASSWORD '" + TEAV.decryptText(S_STRING) + "'");
+                                        stmt.executeUpdate("ALTER USER postgres WITH PASSWORD '" + KeyStotreUtil.getValueFromKeystore("pg_admin_password") + "'");
                                         SharedUtils.writeFile(dbug, " -> Report database super user password set succesfully.\n", true);
                                     }
                                     catch (Exception e) {
@@ -3500,6 +3505,8 @@
         } else if (mountDir != null && mountDir.trim().length() > 0 && !mountDir.endsWith(File.separator)) {
             mountDir = mountDir + File.separator;
         }
+        KeyStotreUtil.df = new SimpleDateFormat("MMYYYYddHHmm");
+        KeyStotreUtil.df.setTimeZone(TimeZone.getTimeZone("IST"));
         vecLogErrorCDC = new Vector();
     }
 }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/util/DetectInjection.java decompiled-9.3.9330/com/sonicwall/appliance/util/DetectInjection.java
--- decompiled-9.3.9320/com/sonicwall/appliance/util/DetectInjection.java	2023-09-08 15:13:11.681712329 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/util/DetectInjection.java	2023-09-08 15:14:38.600242784 -0700
@@ -147,7 +147,7 @@
         }
         boolean valid = XSSValidator.isValid(decStr);
         LogUtil.debugOut((Object)("paramName = " + paramName + " strValue = " + strValue), 5);
-        LogUtil.debugOut((Object)("Is this param ignoreable? " + Pattern.matches(IGNORE_PARAM_REG_EX, paramName)), 3);
+        LogUtil.debugOut((Object)("Is this param: '" + paramName + "' ignoreable? " + Pattern.matches(IGNORE_PARAM_REG_EX, paramName)), 5);
         if (Pattern.matches(IGNORE_PARAM_REG_EX, paramName)) {
             LogUtil.debugOut((Object)("Ignoring the paramName " + paramName), 3);
             return false;
@@ -195,7 +195,7 @@
                 if (!strValue.toLowerCase().replace(" ", "").contains(method.toLowerCase())) continue;
                 return true;
             }
-            if (!Pattern.compile(method.toLowerCase().trim() + "[\\W]").matcher(strValue.toLowerCase().replace(" ", "")).find()) continue;
+            if (!Pattern.compile(method.toLowerCase().trim() + "[\\(\\{\\[\\.]").matcher(strValue.toLowerCase().replace(" ", "")).find()) continue;
             LogUtil.debugOut((Object)("Detecting Injection in paramName : " + paramName + " ,paramValue : " + strValue), 3);
             return true;
         }
Only in decompiled-9.3.9330/com/sonicwall/appliance/util: SecurityPatchUtil.java
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/appliance/util/wizard/InstallCustomizationWizard.java decompiled-9.3.9330/com/sonicwall/appliance/util/wizard/InstallCustomizationWizard.java
--- decompiled-9.3.9320/com/sonicwall/appliance/util/wizard/InstallCustomizationWizard.java	2023-09-08 15:13:11.692712754 -0700
+++ decompiled-9.3.9330/com/sonicwall/appliance/util/wizard/InstallCustomizationWizard.java	2023-09-08 15:14:38.611229068 -0700
@@ -16,13 +16,13 @@
 import com.sonicwall.appliance.util.wizard.RoleConfigWizard;
 import com.sonicwall.appliance.util.wizard.WizardStep;
 import com.sonicwall.sgms.logging.shared.ETypeStore;
+import com.sonicwall.sgms.util.AESUtil;
 import com.sonicwall.sgms.util.BASE64Encoder;
+import com.sonicwall.sgms.util.Base64;
 import com.sonicwall.sgms.util.ConfigFileReaderUtil;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.ProductizationUtil;
 import com.sonicwall.sgms.util.TEAV;
-import com.sonicwall.ws.resource.file.ConfigurationSettings;
-import com.sonicwall.ws.servlet.auth.HttpDigestAuthenticator;
-import com.sonicwall.ws.util.HashUtil;
 import com.sonicwall.ws.util.WebServiceUtil;
 import java.io.IOException;
 import java.util.GregorianCalendar;
@@ -564,7 +564,11 @@
                     configValue = value.toString();
                     return configValue.replaceAll("^\"|\"$", "");
                 }
-                if (!configType.equalsIgnoreCase(key) || !key.equals("primaryConsolePasswordHash")) continue;
+                if (configType.equalsIgnoreCase(key) && key.equals("primaryConsolePasswordHash")) {
+                    configValue = value.toString();
+                    return configValue.replaceAll("^\"|\"$", "");
+                }
+                if (!configType.equalsIgnoreCase(key) || !key.equals("id")) continue;
                 configValue = value.toString();
                 return configValue.replaceAll("^\"|\"$", "");
             }
@@ -640,43 +644,30 @@
         return "" + calendar.get(1) + calendar.get(2) + calendar.get(5);
     }
 
-    private static String getSecurityCode(String serial) {
-        return HashUtil.SHA(serial + HashUtil.SHA(InstallCustomizationWizard.getUtcDateStr()));
-    }
-
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      * Enabled aggressive block sorting
      * Enabled unnecessary exception pruning
      * Enabled aggressive exception aggregation
      */
-    private String fetchConfigurationSettingsFromPrimary(String hostIPOrName, String type) {
+    private String fetchConfigurationSettingsFromPrimary(String hostIPOrName, String type, String password) {
         LogUtil.debugOut((Object)"InstallCustomizationWizard.fetchConfigurationSettingsFromPrimary() enter ", 1);
         String wsResult1 = "";
         try {
             HashMap<String, String> map = new HashMap<String, String>();
             String userName = "Agent";
             String realm = "localdomain";
-            String password = InstallCustomizationWizard.getSecurityCode(userName);
             String method = "GET";
             String uri = "/ws/file/";
             String qop = "auth";
             String nonce = new BASE64Encoder().encode(userName.getBytes());
-            String nc = "00000001";
-            String cnonce = "0a4f113b";
-            String opaque = "5ccc069c403ebaf9f0171e9517f40e41";
+            String nc = KeyStotreUtil.getValueFromKeystore(KeyStotreUtil.NC);
+            String cnonce = KeyStotreUtil.getValueFromKeystore(KeyStotreUtil.CN);
+            String opaque = KeyStotreUtil.getValueFromKeystore(KeyStotreUtil.OP);
             try {
                 method = "GET";
-                password = InstallCustomizationWizard.getSecurityCode(userName);
-                ConfigurationSettings msqr = new ConfigurationSettings();
-                ConfigurationSettings.MyServletRequest msr = new ConfigurationSettings.MyServletRequest(new ConfigurationSettings());
-                HttpDigestAuthenticator digestAuth1 = new HttpDigestAuthenticator(msr);
-                digestAuth1.setUsername(userName);
-                digestAuth1.setPassword("");
-                String response1 = HttpDigestAuthenticator.generateDigest(false, userName, realm, password, method, uri, qop, nonce, nc, cnonce);
-                LogUtil.debugOut((Object)("InstallCustomizationWizard.fetchConfigurationSettingsFromPrimary(): response digest " + response1), 1);
-                LogUtil.debugOut((Object)("InstallCustomizationWizard.fetchConfigurationSettingsFromPrimary(): username=" + userName + ", realm=" + realm + ", password=" + password + ", method=" + method + ",uri=" + uri + ",qop=" + qop + ",nonce=" + nonce + ",nc=" + nc + ",cnonce=" + cnonce), 1);
-                map.put("Authorization", "Digest username=\"" + userName + "\",realm=\"" + realm + "\",nonce=\"" + nonce + "\",uri=\"" + uri + "\",qop=" + qop + ",nc=\"" + nc + "\",cnonce=\"" + cnonce + "\",response=\"" + response1 + "\",opaque=\"" + opaque + "\",method=" + method);
+                String encPwd = Base64.encodeUsingJdk8(password.getBytes());
+                map.put("Authorization", InstallCustomizationWizard.getBasicAuthenticationHeader(password));
                 WebServiceUtil util1 = new WebServiceUtil("https://" + hostIPOrName + "/ws/file/configsettings/" + type, 2, "user", "password");
                 util1.setHeaders(map);
                 LogUtil.debugOut((Object)"InstallCustomizationWizard.fetchConfigurationSettingsFromPrimary(): AFTER GET request", 1);
@@ -687,13 +678,17 @@
                 String webServiceCallStatus = json.get("status").toString();
                 webServiceCallStatus = webServiceCallStatus.replaceAll("^\"|\"$", "");
                 String webServiceResultContent = json.get("message").toString();
+                md md_obj = new md(password);
+                md_obj.calc();
+                String hashPassword = Base64.encodeUsingJdk8(md_obj.toString().getBytes());
+                String webServiceResultContentDecrypted = AESUtil.decryptWithKey(webServiceResultContent.replaceAll("\"", ""), hashPassword);
                 if (!"success".equalsIgnoreCase(webServiceCallStatus)) {
                     return "Error while fetching Configurtion settings from primary host.";
                 }
-                if (webServiceResultContent == null) return webServiceResultContent;
-                if (webServiceResultContent.indexOf("Error") == -1) return webServiceResultContent;
-                LogUtil.debugOut((Object)("InstallCustomizationWizard.fetchConfigurationSettingsFromPrimary(): An error occured while fetching configuration details from Primary host: " + webServiceResultContent), 1);
-                return webServiceResultContent;
+                if (webServiceResultContentDecrypted == null) return webServiceResultContentDecrypted;
+                if (webServiceResultContentDecrypted.indexOf("Error") == -1) return webServiceResultContentDecrypted;
+                LogUtil.debugOut((Object)("InstallCustomizationWizard.fetchConfigurationSettingsFromPrimary(): An error occured while fetching configuration details from Primary host: " + webServiceResultContentDecrypted), 1);
+                return webServiceResultContentDecrypted;
             }
             catch (IOException ioe) {
                 LogUtil.logError(ioe, "while fetching Config settings from webservice ConfigurationSettings hosted at " + hostIPOrName, "fetchConfigurationSettingsFromPrimary", "InstallCustomizationWizard");
@@ -709,6 +704,11 @@
         }
     }
 
+    private static final String getBasicAuthenticationHeader(String password) {
+        String valueToEncode = "admin:" + password;
+        return "Basic " + new String(Base64.encode(valueToEncode.getBytes()));
+    }
+
     private void setCustomModeRoleConfigurationValues() {
         String outputjson = this.configSettingsFromPrimary.replace("\\", "");
         outputjson = outputjson.replaceAll("^\"|\"$", "");
@@ -896,8 +896,9 @@
 
     public boolean authenticateAgentConsolePairing(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
         LogUtil.debugOut((Object)"InstallCustomizationWizard.fetchAuthInfo(): Install mode custom, fetch primary console auth info", 3);
-        String authInfo = this.fetchConfigurationSettingsFromPrimary(request.getParameter("hostIPOrName"), "AUTH");
         String pcAccessPassword = request.getParameter("primaryConsoleAccessPassword");
+        String authInfo = this.fetchConfigurationSettingsFromPrimary(request.getParameter("hostIPOrName"), "AUTH", pcAccessPassword);
+        LogUtil.debugOut((Object)("InstallCustomizationWizard.fetchAuthInfo() : authInfo = " + authInfo), 3);
         if (displayPassword.equals(pcAccessPassword)) {
             pcAccessPassword = this.primaryConsoleAccessPassword;
         } else {
@@ -937,7 +938,7 @@
         if (!this.authenticateAgentConsolePairing(request, response)) {
             return;
         }
-        this.configSettingsFromPrimary = this.fetchConfigurationSettingsFromPrimary(request.getParameter("hostIPOrName"), "CONFIG");
+        this.configSettingsFromPrimary = this.fetchConfigurationSettingsFromPrimary(request.getParameter("hostIPOrName"), "CONFIG", this.primaryConsoleAccessPassword);
         request.setAttribute("configDataFromPrimaryFetchStatus", CONFIGDATAFETCHSUCCESS);
         if (this.configSettingsFromPrimary.indexOf("Error") != -1) {
             response.getWriter().write(this.configSettingsFromPrimary);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/event/manager/EventMgmtManager.java decompiled-9.3.9330/com/sonicwall/event/manager/EventMgmtManager.java
--- decompiled-9.3.9320/com/sonicwall/event/manager/EventMgmtManager.java	2023-09-08 15:13:12.304736432 -0700
+++ decompiled-9.3.9330/com/sonicwall/event/manager/EventMgmtManager.java	2023-09-08 15:14:39.183514583 -0700
@@ -29,8 +29,12 @@
 import java.sql.SQLException;
 import java.sql.Statement;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Enumeration;
 import java.util.Hashtable;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Set;
 import java.util.Vector;
 
 public class EventMgmtManager
@@ -1317,23 +1321,30 @@
         boolean bNeedNodeID = panel.equals("0") || panel.equals("2");
         StringBuffer sbQuery = new StringBuffer("SELECT " + AlertInfoData.getColumnName(AlertInfoData.ALERTID) + (bNeedNodeID ? ", id " : " "));
         sbQuery.append("FROM " + DataBaseConnectionPool.getTablePrefix() + ALERTS_TABLE + " ");
-        sbQuery.append("WHERE panel = " + pool.delimitDBColumnValue(panel) + " ");
+        sbQuery.append("WHERE panel = ? ");
+        ArrayList<String> psValues = new ArrayList<String>();
+        psValues.add(panel);
         if (bNeedNodeID && strTOU.length() > 0 && vecUnitsInANode != null && vecUnitsInANode.size() > 0) {
             sbQuery.append(" AND ");
             if (vecUnitsInANode.size() == 1) {
-                sbQuery.append(" ID = " + pool.delimitDBColumnValue((String)vecUnitsInANode.elementAt(0)) + "");
+                sbQuery.append(" ID = ?");
+                psValues.add((String)vecUnitsInANode.elementAt(0));
             } else {
-                Vector<String> vec = this.getValuesInsertedForInClause(vecUnitsInANode, true);
-                if (vec.size() > 1) {
+                LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause(vecUnitsInANode);
+                if (inClauseMap.size() > 1) {
                     sbQuery.append("(");
                 }
-                for (int j = 0; j < vec.size(); ++j) {
+                Set<String> keySet = inClauseMap.keySet();
+                int j = 0;
+                for (String questionMarks : keySet) {
                     if (j > 0) {
                         sbQuery.append(" OR ");
                     }
-                    sbQuery.append("ID IN (" + vec.elementAt(j) + ")");
+                    sbQuery.append("ID IN (" + questionMarks.substring(1, questionMarks.length()) + ")");
+                    psValues.addAll((Collection)inClauseMap.get(questionMarks));
+                    ++j;
                 }
-                if (vec.size() > 1) {
+                if (inClauseMap.size() > 1) {
                     sbQuery.append(")");
                 }
             }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/base/FirewallInfo.java decompiled-9.3.9330/com/sonicwall/sgms/base/FirewallInfo.java
--- decompiled-9.3.9320/com/sonicwall/sgms/base/FirewallInfo.java	2023-09-08 15:13:14.703081549 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/base/FirewallInfo.java	2023-09-08 15:14:41.628462122 -0700
@@ -10,6 +10,7 @@
 import com.sonicwall.sgms.logging.shared.ETypeStore;
 import com.sonicwall.sgms.manager.ParamInfo;
 import com.sonicwall.sgms.manager.ParamsManager;
+import com.sonicwall.sgms.policyengine.util.EngineUtil;
 import com.sonicwall.sgms.util.SGMSUtil;
 import java.sql.ResultSet;
 import java.util.Map;
@@ -18,6 +19,8 @@
 import java.util.concurrent.ConcurrentHashMap;
 
 public class FirewallInfo {
+    private static final String POLICY_ENABLE_MODE_VALUE = "on";
+    private static final String POLICY_PREFS_TYPE_VALUE = "4";
     private static Object m_threadCheckCache = null;
     private static Map<String, FirewallInfo> firewallInfoHashMap = new ConcurrentHashMap<String, FirewallInfo>();
     private String unitId;
@@ -27,7 +30,9 @@
     private boolean isValid;
     private String displayName;
     private String domainID;
-    private static String[] queryColumns = new String[]{"ID", "SERIAL", "FVERSION", "MODELCODE", "NODE_NAME", "DOMAINID"};
+    private String enableGlobalMode;
+    private String PREFS_TYPE;
+    private static String[] queryColumns = new String[]{"ID", "SERIAL", "FVERSION", "MODELCODE", "NODE_NAME", "DOMAINID", "enableGlobalMode", "PREFS_TYPE"};
     private static String[] queryKeyId = new String[]{"ID"};
     private static String[] queryKeySerial = new String[]{"SERIAL"};
     private static ParamsManager paramsManager = null;
@@ -80,6 +85,17 @@
         return FirewallInfo.getReferenceByUnitId(unitId).supportsFeature(featureId);
     }
 
+    public static boolean isUnitInPolicyMode(String unitId) {
+        if (!EngineUtil.isUnitNode(unitId)) {
+            return false;
+        }
+        FirewallInfo fInfo = FirewallInfo.getReferenceByUnitId(unitId);
+        if (fInfo.getEnableGlobalMode() != null) {
+            return fInfo.getEnableGlobalMode().equalsIgnoreCase(POLICY_ENABLE_MODE_VALUE) && fInfo.getPREFS_TYPE().equalsIgnoreCase(POLICY_PREFS_TYPE_VALUE);
+        }
+        return false;
+    }
+
     public boolean supportsKeyword(String keyword) {
         return this.isValid() && this.getFirmwareVersion().supportsKeyword(keyword);
     }
@@ -145,6 +161,14 @@
         return this.domainID;
     }
 
+    public String getEnableGlobalMode() {
+        return this.enableGlobalMode;
+    }
+
+    public String getPREFS_TYPE() {
+        return this.PREFS_TYPE;
+    }
+
     public void setModelCode(ModelCode modelCode) {
         this.modelCode = modelCode;
     }
@@ -173,6 +197,14 @@
         this.domainID = domainID;
     }
 
+    private void setEnableGlobalMode(String mode) {
+        this.enableGlobalMode = mode;
+    }
+
+    private void setPREFS_TYPE(String type) {
+        this.PREFS_TYPE = type;
+    }
+
     private FirewallInfo(String lookupKey) {
         if (paramsManager == null) {
             paramsManager = (ParamsManager)ParamsManager.getReference();
@@ -194,6 +226,8 @@
                 this.setIsValid(true);
                 this.setUnitDisplayName(unitRow[4]);
                 this.setUnitDomainID(unitRow[5]);
+                this.setEnableGlobalMode(unitRow[6]);
+                this.setPREFS_TYPE(unitRow[7]);
             }
         }
         catch (Exception e) {
@@ -208,7 +242,7 @@
     }
 
     private void setInvalidAttributes() {
-        SGMSUtil.debugOut((Object)"setInvalidAttributes() called.", ETypeStore.FWFeature);
+        SGMSUtil.debugOut("setInvalidAttributes() called.", 5, ETypeStore.FWFeature);
         this.setUnitId("");
         this.setSerial("");
         this.setFirmwareVersion(FirmwareVersion.getReference("Unknown"));
@@ -307,7 +341,7 @@
                 try {
                     SGMSUtil.debugOut("FirewallInfo.CheckCacheThread(): Starting run.");
                     if (firewallInfoHashMap == null) break block10;
-                    StringBuilder query = new StringBuilder("SELECT ID, SERIAL, FVERSION, MODELCODE, NODE_NAME, DOMAINID FROM ").append(tableName);
+                    StringBuilder query = new StringBuilder("SELECT ID, SERIAL, FVERSION, MODELCODE, NODE_NAME, DOMAINID, enableGlobalMode, PREFS_TYPE FROM ").append(tableName);
                     if (DataBaseConnectionPool.isSQLServer()) {
                         query.append(" WITH(NOLOCK)");
                     }
@@ -325,6 +359,8 @@
                                     fwInfo.setIsValid(true);
                                     fwInfo.setUnitDisplayName(rs.getString(5));
                                     fwInfo.setUnitDomainID(rs.getString(6));
+                                    fwInfo.setEnableGlobalMode(rs.getString(7));
+                                    fwInfo.setPREFS_TYPE(rs.getString(8));
                                     firewallInfoHashMap.put(fwInfo.getUnitId(), fwInfo);
                                     firewallInfoHashMap.put(fwInfo.getSerial(), fwInfo);
                                 }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/base/FirmwareVersion.java decompiled-9.3.9330/com/sonicwall/sgms/base/FirmwareVersion.java
--- decompiled-9.3.9320/com/sonicwall/sgms/base/FirmwareVersion.java	2023-09-08 15:13:14.675122466 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/base/FirmwareVersion.java	2023-09-08 15:14:41.607488308 -0700
@@ -199,6 +199,10 @@
         return this.isAtLeast(major, minor, revision, 0);
     }
 
+    public boolean isSame(int major, int minor, int revision, int patch) {
+        return this.getMajor() == major && this.getMinor() == minor && this.getRevision() == revision && this.getPatch() == patch;
+    }
+
     public boolean isOlderThan(int major, int minor, int revision, int patch) {
         return this.getMajor() < major || this.getMajor() == major && this.getMinor() < minor || this.getMajor() == major && this.getMinor() == minor && this.getRevision() < revision || this.getMajor() == major && this.getMinor() == minor && this.getRevision() == revision && this.getPatch() < patch;
     }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/bean/User.java decompiled-9.3.9330/com/sonicwall/sgms/bean/User.java
--- decompiled-9.3.9320/com/sonicwall/sgms/bean/User.java	2023-09-08 15:13:13.475781735 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/bean/User.java	2023-09-08 15:14:40.407985859 -0700
@@ -42,6 +42,7 @@
     private String autoSaveDashboard = "";
     private String audio = "";
     private String appSelShow = "";
+    private String is2faEnabled = "";
 
     private User(String userId, String fName, String dispName, String password, String controls, String defaultViewId, String sessUserName, String domainId, String utType, String authServerId) {
         this.userId = userId;
@@ -268,6 +269,10 @@
         this.isUpdateReportReceiver = isUpdateReportReceiver;
     }
 
+    public void setIs2faEnabled(String is2faEnabled) {
+        this.is2faEnabled = is2faEnabled;
+    }
+
     public String getDisabled() {
         return this.disabled;
     }
@@ -288,6 +293,10 @@
         return this.isUpdateReportReceiver;
     }
 
+    public String getIs2faEnabled() {
+        return this.is2faEnabled;
+    }
+
     public int hashCode() {
         int prime = 31;
         int result = 1;
@@ -568,6 +577,7 @@
         String active;
         String updateReportReceiver;
         String userTypeId;
+        String is2faEnabled;
 
         public UserBuilder(String userId, String domainId) {
             this.userId = userId;
@@ -725,6 +735,11 @@
             return this;
         }
 
+        public UserBuilder is2faEnabled(String is2faEnabled) {
+            this.is2faEnabled = is2faEnabled;
+            return this;
+        }
+
         public User createUser() {
             User user2 = new User(this.userId, this.fName, this.dispName, this.password, this.controls, this.defaultViewId, this.sessUserName, this.domainId, this.utType, this.authServerId);
             user2.setUserTypeId(this.userTypeId);
@@ -748,6 +763,7 @@
             user2.setScheduleId(this.scheduleId);
             user2.setActive(this.active);
             user2.setIsUpdateReportReceiver(this.updateReportReceiver);
+            user2.setIs2faEnabled(this.is2faEnabled);
             return user2;
         }
     }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/cli/server/SSLServer.java decompiled-9.3.9330/com/sonicwall/sgms/cli/server/SSLServer.java
--- decompiled-9.3.9320/com/sonicwall/sgms/cli/server/SSLServer.java	2023-09-08 15:13:13.674789434 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/cli/server/SSLServer.java	2023-09-08 15:14:40.600745203 -0700
@@ -221,6 +221,7 @@
         SSLServerSocketFactory sslServerSocketFactory = this.sslContext.getServerSocketFactory();
         this.serverSocket = (SSLServerSocket)sslServerSocketFactory.createServerSocket(this.port);
         this.serverSocket.setEnabledProtocols(CommonConstants.SSL_ENABLED_PROTOCOLS);
+        this.serverSocket.setEnabledCipherSuites(CommonConstants.SSL_CIPHER_SUITES_TLS_ARR);
     }
 
     public void init() throws Exception {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/common/util/CommonConstants.java decompiled-9.3.9330/com/sonicwall/sgms/common/util/CommonConstants.java
--- decompiled-9.3.9320/com/sonicwall/sgms/common/util/CommonConstants.java	2023-09-08 15:13:14.058804291 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/common/util/CommonConstants.java	2023-09-08 15:14:40.978273867 -0700
@@ -5,8 +5,8 @@
 
 public class CommonConstants {
     public static String version = "9.3";
-    public static String buildNumber = "9320";
-    public static long internalBuildNumber = 1296L;
+    public static String buildNumber = "9330";
+    public static long internalBuildNumber = 1377L;
     public static String patchLevel = "0000";
     public static final int dbVersion = 2;
     public static final String EPRS = "eprs";
@@ -112,6 +112,7 @@
     public static final String SSL_CONTEXT_PROTOCOL = "TLSv1.2";
     public static final String[] SSL_ENABLED_PROTOCOLS = new String[]{"TLSv1.3", "TLSv1.2"};
     public static final String SSL_CIPHER_SUITES = "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA";
+    public static final String[] SSL_CIPHER_SUITES_TLS_ARR = new String[]{"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"};
     public static final String PRODUCT_DISPLAYVERSION_HOSTED = "Cloud";
     public static final String PRODUCT_DISPLAYVERSION_EPRS = "2.3";
     public static final String OPERATOR_SIGN_PERCENT = "%";
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/common/util/ScreenUtil.java decompiled-9.3.9330/com/sonicwall/sgms/common/util/ScreenUtil.java
--- decompiled-9.3.9320/com/sonicwall/sgms/common/util/ScreenUtil.java	2023-09-08 15:13:14.064804523 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/common/util/ScreenUtil.java	2023-09-08 15:14:40.987262645 -0700
@@ -67,13 +67,7 @@
         if (contentType != null && contentType.indexOf("multipart/form-data") != -1) {
             return;
         }
-        String subAction = req.getParameter("subaction");
-        boolean inheritSubAction = false;
-        if (subAction != null && subAction.trim().length() > 0 && subAction.equalsIgnoreCase("inherit")) {
-            inheritSubAction = true;
-        }
         String method = req.getMethod();
-        if (!inheritSubAction) {
             if (method.equalsIgnoreCase("post") && contentType != null && contentType.indexOf("application/json") != -1) {
                 String paramValue = ((SgmsHttpRequestWrapper)req).getBody();
                 JSONObject bodyJson = new JSONObject(paramValue);
@@ -84,13 +78,12 @@
                     String paramValue;
                     String paramName = paramNames.nextElement();
                     if (!m_objDetectInjection.detectInjection(paramName, paramValue = req.getParameter(paramName)) || !m_objDetectInjection.detectJSMethods(paramName, paramValue) && ScreenUtil.handleSafeParam(req, paramName)) continue;
-                    ServletException e = new ServletException("InjectionAttempt:" + paramName + ":" + paramValue);
+                ServletException e = new ServletException("InjectionAttempt:" + paramName);
                     ApplicationLog.getReference().log("ScreenUtil", "detectInjection", e);
                     throw e;
                 }
             }
         }
-    }
 
     private static void parseJsonObject(JSONObject jsonData) throws ServletException {
         for (String paramName : jsonData.keySet()) {
@@ -115,6 +108,18 @@
                     throw e;
                 }
             }
+            if (paramValue.toString().trim().startsWith("[")) {
+                try {
+                    JSONArray jsonArray = new JSONArray(paramValue.toString());
+                    ScreenUtil.parseJsonArray(jsonArray);
+                    continue;
+                }
+                catch (JSONException err) {
+                    ServletException e = new ServletException("Error in JSON string");
+                    ApplicationLog.getReference().log("ScreenUtil", "detectInjection", e);
+                    throw e;
+                }
+            }
             if (!m_objDetectInjection.detectInjection(paramName, paramValue.toString())) continue;
             ServletException e = new ServletException("InjectionAttempt from POST body params : " + paramName);
             ApplicationLog.getReference().log("ScreenUtil", "detectInjection", e);
@@ -162,7 +167,7 @@
             List<String> values = entry.getValue();
             for (String paramValue : values) {
                 if (!m_objDetectInjection.detectInjection(paramName, paramValue) || ScreenUtil.handleSafeParam(req, paramName)) continue;
-                ServletException e = new ServletException("InjectionAttempt:" + paramName + ":" + paramValue);
+                ServletException e = new ServletException("InjectionAttempt:" + paramName);
                 ApplicationLog.getReference().log("ScreenUtil", "detectInjectionInDependencyRequest", e);
                 throw e;
             }
@@ -217,7 +222,7 @@
                 String paramName = paramNameArray[j];
                 String paramValue = paramValueArray[j];
                 if (!m_objDetectInjection.detectInjection(paramName, paramValue) || ScreenUtil.handleSafeParam(req, paramName)) continue;
-                ServletException e = new ServletException("InjectionAttempt:" + paramName + ":" + paramValue);
+                ServletException e = new ServletException("InjectionAttempt:" + paramName);
                 ApplicationLog.getReference().log("ScreenUtil", "detectInjectionInInheritance", e);
                 throw e;
             }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/daemons/Firewall.java decompiled-9.3.9330/com/sonicwall/sgms/daemons/Firewall.java
--- decompiled-9.3.9320/com/sonicwall/sgms/daemons/Firewall.java	2023-09-08 15:13:12.742753377 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/daemons/Firewall.java	2023-09-08 15:14:39.675899851 -0700
@@ -23,6 +23,7 @@
 import com.sonicwall.sgms.util.SimpleXmlParser;
 import com.sonicwall.sgms.util.md;
 import com.sonicwall.viewpoint.bean.ReportTimeZones;
+import com.sonicwall.ws.util.WebServiceUtil;
 import java.io.BufferedOutputStream;
 import java.io.BufferedReader;
 import java.io.File;
@@ -318,6 +319,29 @@
         return this.nvp.put(name, value);
     }
 
+    public String performeGetCall(String path) {
+        String client = (this.isHTTPSAccessed() ? "https://" : "http://") + this.get("ip") + ":" + this.get("port");
+        try {
+            return WebServiceUtil.perormApiGetCall(client, path, (String)this.nvp.get("user"), (String)this.nvp.get("password"));
+        }
+        catch (Exception e) {
+            SGMSUtil.logError(null, this.get("serial") + " Unable to Access Firewall API.", "getFirewallState", "Firewall");
+            return null;
+        }
+    }
+
+    public String performePostCall(String path, String postData) {
+        String client = (this.isHTTPSAccessed() ? "https://" : "http://") + this.get("ip") + ":" + this.get("port");
+        SGMSUtil.debugOut((Object)("Firewall: performPostCall(): ========= PERFORM POST CALL: " + client), 1);
+        try {
+            return WebServiceUtil.perormApiPostCall(client, path, (String)this.nvp.get("user"), (String)this.nvp.get("password"), postData);
+        }
+        catch (Exception e) {
+            SGMSUtil.logError(null, this.get("serial") + "Firewall: performPostCall(): ERROR(): ========= Unable to Access Firewall API.", "getFirewallState", "Firewall" + e);
+            return null;
+        }
+    }
+
     public boolean setOnDiff(String name, String testValue) {
         if (name == null) {
             return false;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/daemons/tasks/DynamicInfoGetterTask.java decompiled-9.3.9330/com/sonicwall/sgms/daemons/tasks/DynamicInfoGetterTask.java
--- decompiled-9.3.9320/com/sonicwall/sgms/daemons/tasks/DynamicInfoGetterTask.java	2023-09-08 15:13:12.634749199 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/daemons/tasks/DynamicInfoGetterTask.java	2023-09-08 15:14:39.553053222 -0700
@@ -4,6 +4,8 @@
 package com.sonicwall.sgms.daemons.tasks;
 
 import com.google.gson.Gson;
+import com.google.gson.JsonObject;
+import com.google.gson.JsonParser;
 import com.google.gson.reflect.TypeToken;
 import com.sonicwall.sgms.base.FirmwareVersion;
 import com.sonicwall.sgms.daemons.Firewall;
@@ -1478,6 +1480,121 @@
                             return false;
                         }
                         results = rawfile;
+                    } else if (action.equalsIgnoreCase("connection-status")) {
+                        String path = "/api/sonicos/reporting/firewall/connection-status";
+                        String json = this.firewall.performeGetCall(path);
+                        if (json == null) {
+                            this.se.setError(-3);
+                            this.scheduler.schedulerTaskMgr.handleExecuteTaskResult(this.task, this.se);
+                            return false;
+                        }
+                        results = json;
+                    } else if (action.equalsIgnoreCase("storageState")) {
+                        String pathDiagnostic = "/api/sonicos/reporting/sysfile/diagdata";
+                        String pathConfBackup = "/api/sonicos/dynamic-file/getFwExpList.json?type=1";
+                        String pathPrimaryStorage = "/api/sonicos/reporting/status/storage";
+                        String pathLog = "/api/sonicos/reporting/sysfile/log";
+                        String json1 = this.firewall.performeGetCall(pathDiagnostic);
+                        String json2 = this.firewall.performeGetCall(pathConfBackup);
+                        String json3 = this.firewall.performeGetCall(pathPrimaryStorage);
+                        String json4 = this.firewall.performeGetCall(pathLog);
+                        if (json1 == null || json2 == null || json3 == null || json4 == null) {
+                            this.se.setError(-3);
+                            this.scheduler.schedulerTaskMgr.handleExecuteTaskResult(this.task, this.se);
+                            return false;
+                        }
+                        JsonObject jsonObject = new JsonObject();
+                        jsonObject.add("diagdata", new JsonParser().parse(json1).getAsJsonArray());
+                        jsonObject.add("config", new JsonParser().parse(json2).getAsJsonObject());
+                        jsonObject.add("storage", new JsonParser().parse(json3).getAsJsonObject());
+                        jsonObject.add("log", new JsonParser().parse(json4).getAsJsonArray());
+                        results = jsonObject.toString();
+                    } else if (action.equalsIgnoreCase("getRFAnalysisView")) {
+                        String path = "/api/sonicos/reporting/sonicpoint/rf/analysis/score";
+                        String json = this.firewall.performeGetCall(path);
+                        String rawfile = this.firewall.getFile("getRFAnalysisView.json?curSonicPoint=00:00:00:00:00:00");
+                        if (rawfile == null || json == null) {
+                            this.se.setError(-3);
+                            this.scheduler.schedulerTaskMgr.handleExecuteTaskResult(this.task, this.se);
+                            return false;
+                        }
+                        JsonObject jsonObject = new JsonObject();
+                        jsonObject.add("rfScore", new JsonParser().parse(json).getAsJsonArray());
+                        jsonObject.add("details", new JsonParser().parse(rawfile).getAsJsonObject());
+                        results = jsonObject.toString();
+                    } else if (action.equalsIgnoreCase("getWWanStatus")) {
+                        String path1 = "/api/sonicos/reporting/wwan";
+                        String path2 = "/api/sonicos/reporting/interfaces/ipv4/ip/name/U0";
+                        String json1 = this.firewall.performeGetCall(path1);
+                        String json2 = this.firewall.performeGetCall(path2);
+                        if (json2 == null || json1 == null) {
+                            this.se.setError(-3);
+                            this.scheduler.schedulerTaskMgr.handleExecuteTaskResult(this.task, this.se);
+                            return false;
+                        }
+                        JsonObject jsonObject = new JsonObject();
+                        jsonObject.add("wwan", new JsonParser().parse(json1).getAsJsonArray());
+                        jsonObject.add("u0", new JsonParser().parse(json2).getAsJsonObject());
+                        results = jsonObject.toString();
+                    } else if (action.equalsIgnoreCase("getScanningHistory")) {
+                        String path1 = "/api/sonicos/capture-atp-wrapper";
+                        String postData = indValues.elementAt(3);
+                        String json1 = this.firewall.performePostCall(path1, postData);
+                        SGMSUtil.debugOut((Object)("DynamicInfoGetterTask getScanningHistory(): ========= JSON Response " + json1), 1);
+                        if (json1 == null) {
+                            this.se.setError(-3);
+                            this.scheduler.schedulerTaskMgr.handleExecuteTaskResult(this.task, this.se);
+                            return false;
+                        }
+                        JsonObject jsonObject = new JsonObject();
+                        jsonObject.add("scanningHistory", new JsonParser().parse(json1).getAsJsonObject());
+                        results = jsonObject.toString();
+                    } else if (action.equalsIgnoreCase("getSwitchDiagnostics")) {
+                        String path1 = "/api/sonicos/dynamic-file/getSwitchDiagPortStatus.json";
+                        String path2 = "/api/sonicos/dynamic-file/getSwitchDiagPortCounter.json";
+                        String json1 = this.firewall.performeGetCall(path1);
+                        String json2 = this.firewall.performeGetCall(path2);
+                        if (json2 == null || json1 == null) {
+                            this.se.setError(-3);
+                            this.scheduler.schedulerTaskMgr.handleExecuteTaskResult(this.task, this.se);
+                            return false;
+                        }
+                        JsonObject jsonObject = new JsonObject();
+                        jsonObject.add("portStatus", new JsonParser().parse(json1).getAsJsonArray());
+                        jsonObject.add("portCounter", new JsonParser().parse(json2).getAsJsonArray());
+                        results = jsonObject.toString();
+                    } else if (action.equalsIgnoreCase("getWlanSonicWaveBle")) {
+                        String path1 = "/api/sonicos/reporting/sonicpoint/status";
+                        String path2 = "/api/sonicos/dynamic-file/getWlanSonicWaveBle.json?spMac=00:00:00:00:00:00&uri=/api/scan/data";
+                        String json1 = this.firewall.performeGetCall(path1);
+                        String json2 = this.firewall.performeGetCall(path2);
+                        if (json2 == null || json1 == null) {
+                            this.se.setError(-3);
+                            this.scheduler.schedulerTaskMgr.handleExecuteTaskResult(this.task, this.se);
+                            return false;
+                        }
+                        JsonObject jsonObject = new JsonObject();
+                        jsonObject.add("status", new JsonParser().parse(json1).getAsJsonArray());
+                        jsonObject.add("ble", new JsonParser().parse(json2).getAsJsonObject());
+                        results = jsonObject.toString();
+                    } else if (action.equals("getSpUsbModemStatus")) {
+                        String path = "/api/sonicos/dynamic-file/getSpUsbModemStatus.json";
+                        String json = this.firewall.performeGetCall(path);
+                        if (json == null) {
+                            this.se.setError(-3);
+                            this.scheduler.schedulerTaskMgr.handleExecuteTaskResult(this.task, this.se);
+                            return false;
+                        }
+                        results = json;
+                    } else if (action.equals("getGuestUserStatus")) {
+                        String path = "/api/sonicos/dynamic-file/getGuestUserStatus.json";
+                        String json = this.firewall.performeGetCall(path);
+                        if (json == null) {
+                            this.se.setError(-3);
+                            this.scheduler.schedulerTaskMgr.handleExecuteTaskResult(this.task, this.se);
+                            return false;
+                        }
+                        results = json;
                     }
                 }
             }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/dea/DEA.java decompiled-9.3.9330/com/sonicwall/sgms/dea/DEA.java
--- decompiled-9.3.9320/com/sonicwall/sgms/dea/DEA.java	2023-09-08 15:13:13.114767769 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/dea/DEA.java	2023-09-08 15:14:40.066412306 -0700
@@ -34,6 +34,7 @@
 import com.sonicwall.sgms.util.TEAV;
 import com.sonicwall.sgms.util.prdb.PRDB;
 import java.sql.SQLException;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.HashMap;
@@ -65,6 +66,7 @@
     private static ASpywareManager asmanager;
     private static CSMManager csmManager;
     private static WAFManager wafManager;
+    private static SimpleDateFormat signatureTSFormat;
     public static String[] AC_COLS;
     public static String[] DEAKEYS_COLS;
     private String[] GAV_SERVICE_TYPES = new String[]{"GAV"};
@@ -606,12 +608,33 @@
         SimpleError se = new SimpleError(-17);
         String timeAvail = null;
         timeAvail = deaClient.newGAVSignaturesAvailable();
+        Date signatureAvailableDate = null;
+        try {
+            if (timeAvail != null && !timeAvail.equals("0")) {
+                signatureAvailableDate = signatureTSFormat.parse(timeAvail);
+            }
+        }
+        catch (Exception e) {
+            SGMSUtil.debugOut((Object)("refreshGAVSignatures signatureAvailaleTime error: " + timeAvail), 1);
+        }
         String lastUpdateGAVStr = sgmsutil.getCosmoParam("GAVLU");
-        boolean timeForUpdate = false;
-        if (!(timeAvail == null || timeAvail.equals("0") || lastUpdateGAVStr != null && !lastUpdateGAVStr.equals("") && lastUpdateGAVStr.equalsIgnoreCase(timeAvail))) {
-            timeForUpdate = true;
+        Date lastUpdateDate = null;
+        try {
+            if (lastUpdateGAVStr != null && !lastUpdateGAVStr.equals("0")) {
+                lastUpdateDate = signatureTSFormat.parse(lastUpdateGAVStr);
+            }
         }
+        catch (Exception e) {
+            SGMSUtil.debugOut((Object)("refreshGAVSignatures lastSignatureUpdate error: " + lastUpdateGAVStr), 1);
+        }
+        SGMSUtil.debugOut((Object)("refreshGAVSignatures lastUpdateGAVStr : " + lastUpdateGAVStr + ", timeAvail = " + timeAvail), 1);
+        boolean timeForUpdate = lastUpdateDate == null || signatureAvailableDate != null && signatureAvailableDate.after(lastUpdateDate) || new Date().getTime() - lastUpdateDate.getTime() > 86400000L;
+        SGMSUtil.debugOut((Object)("refreshGAVSignatures lastUpdateGAVStr : " + lastUpdateGAVStr + ", timeAvail = " + timeAvail + ", timeForUpdate = " + timeForUpdate), 1);
         if (timeForUpdate) {
+            if (signatureAvailableDate == null || lastUpdateDate == null || signatureAvailableDate.before(lastUpdateDate)) {
+                timeAvail = signatureTSFormat.format(new Date());
+                SGMSUtil.debugOut((Object)("refreshGAVSignatures timeAvail will be reset to = " + timeAvail), 1);
+            }
             GAVSignature[] signatures = null;
             try {
                 signatures = deaClient.getGAVSignatures();
@@ -952,6 +975,7 @@
     }
 
     static {
+        signatureTSFormat = new SimpleDateFormat("yyyyMMddHHmmss");
         AC_COLS = new String[]{"AC_DESC", "SORT_ORDER", "OFFER_ID"};
         DEAKEYS_COLS = new String[]{"EPAID", "KEY1", "KEY2", "SALT1", "SALT2"};
     }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/filters/SecurityFilter.java decompiled-9.3.9330/com/sonicwall/sgms/filters/SecurityFilter.java
--- decompiled-9.3.9320/com/sonicwall/sgms/filters/SecurityFilter.java	2023-09-08 15:13:12.480743241 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/filters/SecurityFilter.java	2023-09-08 15:14:39.347310088 -0700
@@ -24,6 +24,7 @@
     @Override
     public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException {
         HttpServletRequest httpRequest = (HttpServletRequest)req;
+        httpRequest.setCharacterEncoding("UTF-8");
         String method = httpRequest.getMethod();
         String contentType = httpRequest.getContentType();
         if (method.equalsIgnoreCase("post") && contentType != null && contentType.indexOf("application/json") != -1) {
Only in decompiled-9.3.9330/com/sonicwall/sgms/filters: SessionValidationFilter.java
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBCommonConstants.java decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBCommonConstants.java
--- decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBCommonConstants.java	2023-09-08 15:13:12.826756627 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBCommonConstants.java	2023-09-08 15:14:39.750806332 -0700
@@ -6,7 +6,7 @@
 public class SBCommonConstants {
     static final String currentVersion = "9.3";
     static final String currentVersionWithoutPeriods = "9.3".replaceAll("\\.", "");
-    static final String[] previousVersionsWithoutPeriods = new String[]{"93", "91", "90", "92", "87"};
+    static final String[] previousVersionsWithoutPeriods = new String[]{"91", "90", "92", "87"};
     static final String[] gmsvpVersions = new String[]{"9.3", "9.2", "9.1", "9.0", "8.7", "8.6", "8.5", "8.4", "8.3", "8.2", "8.1", "8.0", "7.2", "7.1", "7.0", "6.6", "6.5", "6.0", "5.1"};
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBDetectVersion.java decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBDetectVersion.java
--- decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBDetectVersion.java	2023-09-08 15:13:12.836757014 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBDetectVersion.java	2023-09-08 15:14:39.763790122 -0700
@@ -389,6 +389,7 @@
                 u.addFileToClasspath(this.installDir + "etc\\mysql-connector.jar");
                 u.addFileToClasspath(this.installDir + "etc\\bouncy_castle.jar");
                 u.addFileToClasspath(this.installDir + "etc\\bouncy_castle_pkix.jar");
+                u.addFileToClasspath(this.installDir + "etc\\commons-codec-1.14.jar");
             } else {
                 u.addFileToClasspath(this.installDir + "etc/mysql-connector.jar");
             }
@@ -441,6 +442,56 @@
     }
 
     /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    private String getVersionInfoFromDatabase() throws Exception {
+        Connection conn = null;
+        Statement stmt = null;
+        ResultSet rs = null;
+        String versionFound = "";
+        try {
+            conn = SGMSUtil.createConnection();
+            String query = "SELECT paramValue FROM  " + DataBaseConnectionPool.getTablePrefix() + "sgms_config WHERE paramName = 'SGMSDBVersion'";
+            if (conn != null) {
+                stmt = conn.createStatement();
+                rs = stmt.executeQuery(query);
+                while (rs != null && rs.next()) {
+                    String version = rs.getString(1);
+                    if (version == null || version.length() <= 0) continue;
+                    versionFound = version;
+                }
+            }
+        }
+        finally {
+            if (rs != null) {
+                try {
+                    rs.close();
+                }
+                catch (SQLException e1) {
+                    e1.printStackTrace();
+                }
+            }
+            if (stmt != null) {
+                try {
+                    stmt.close();
+                }
+                catch (SQLException e1) {
+                    e1.printStackTrace();
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.close();
+                }
+                catch (SQLException e1) {
+                    e1.printStackTrace();
+                }
+            }
+        }
+        return versionFound;
+    }
+
+    /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     private String buildSoftwareUpdateInfoRequest(String epaId, String version, String priSerialNo, String secSerialNo, String latteSerial, File configFile) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBFreshInstall.java decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBFreshInstall.java
--- decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBFreshInstall.java	2023-09-08 15:13:12.828756704 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBFreshInstall.java	2023-09-08 15:14:39.751805085 -0700
@@ -544,7 +544,7 @@
         outStream.newLine();
         outStream.write("mkdir backup");
         outStream.newLine();
-        String cmd = "call " + this.installDir + "jre\\bin\\java -DconfigFile=" + this.installDir + "conf\\sgmsConfig.xml -cp " + this.installDir + "bin\\Sprinta2000.jar;" + this.installDir + "etc\\dnsjava-2.0.6.jar;" + this.installDir + "etc\\bouncy_castle.jar;" + this.installDir + "etc\\bouncy_castle_pkix.jar;" + this.installDir + "etc\\mysql-connector.jar;" + this.installDir + "etc\\jep-2.3.0.jar;" + this.installDir + "Tomcat\\shared\\lib\\sharedUtil.jar;" + this.installDir + "Tomcat\\lib\\servlet-api.jar;" + this.installDir + "Tomcat\\webapps\\sgms\\WEB-INF\\classes;" + this.installDir + "Scheduler\\sgmssched.jar com/sonicwall/sgms/util/uninstallBkp " + this.installDir + "backup";
+        String cmd = "call " + this.installDir + "jre\\bin\\java -DconfigFile=" + this.installDir + "conf\\sgmsConfig.xml -cp " + this.installDir + "bin\\Sprinta2000.jar;" + this.installDir + "etc\\dnsjava-2.0.6.jar;" + this.installDir + "etc\\bouncy_castle.jar;" + this.installDir + "etc\\bouncy_castle_pkix.jar;" + this.installDir + "etc\\mysql-connector.jar;" + this.installDir + "etc\\jep-2.3.0.jar;" + this.installDir + "etc\\commons-codec-1.14.jar;" + this.installDir + "Tomcat\\shared\\lib\\sharedUtil.jar;" + this.installDir + "Tomcat\\lib\\servlet-api.jar;" + this.installDir + "Tomcat\\webapps\\sgms\\WEB-INF\\classes;" + this.installDir + "Scheduler\\sgmssched.jar com/sonicwall/sgms/util/uninstallBkp " + this.installDir + "backup";
         outStream.write(cmd);
         outStream.newLine();
         outStream.write("erase /f /q \"" + this.desktopDir + this.shortCutName + "\"");
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBStopServices.java decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBStopServices.java
--- decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBStopServices.java	2023-09-08 15:13:12.829756743 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBStopServices.java	2023-09-08 15:14:39.752803838 -0700
@@ -565,7 +565,7 @@
             outStream.write("mkdir backup");
             outStream.newLine();
             String sgmsFile = this.isWindows ? (productType.startsWith("GMSVP") ? this.installDir + "conf\\" : "c:\\") + "sgmsConfig.xml" : "/sgmsConfig.xml";
-            String cmd = "call " + this.installDir + "jre\\bin\\java -DconfigFile=" + sgmsFile + " -cp " + this.installDir + "bin\\Sprinta2000.jar;" + this.installDir + "etc\\dnsjava-2.0.6.jar;" + this.installDir + "etc\\bouncy_castle.jar;" + this.installDir + "etc\\bouncy_castle_pkix.jar;" + this.installDir + "etc\\mysql-connector.jar;" + this.installDir + "etc\\jep-2.3.0.jar;" + this.installDir + "Tomcat\\shared\\lib\\sharedUtil.jar;" + this.installDir + "Tomcat\\webapps\\sgms\\WEB-INF\\classes;" + this.installDir + "Tomcat\\lib\\servlet-api.jar;" + this.installDir + "Scheduler\\sgmssched.jar com/sonicwall/sgms/util/uninstallBkp " + this.installDir + "backup";
+            String cmd = "call " + this.installDir + "jre\\bin\\java -DconfigFile=" + sgmsFile + " -cp " + this.installDir + "bin\\Sprinta2000.jar;" + this.installDir + "etc\\dnsjava-2.0.6.jar;" + this.installDir + "etc\\bouncy_castle.jar;" + this.installDir + "etc\\bouncy_castle_pkix.jar;" + this.installDir + "etc\\mysql-connector.jar;" + this.installDir + "etc\\jep-2.3.0.jar;" + this.installDir + "etc\\commons-codec-1.14.jar;" + this.installDir + "Tomcat\\shared\\lib\\sharedUtil.jar;" + this.installDir + "Tomcat\\webapps\\sgms\\WEB-INF\\classes;" + this.installDir + "Tomcat\\lib\\servlet-api.jar;" + this.installDir + "Scheduler\\sgmssched.jar com/sonicwall/sgms/util/uninstallBkp " + this.installDir + "backup";
             outStream.write(cmd);
             outStream.newLine();
             if (productType.startsWith("GMSVP")) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBUpgradeInstall.java decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBUpgradeInstall.java
--- decompiled-9.3.9320/com/sonicwall/sgms/InstallAnywhere/SBUpgradeInstall.java	2023-09-08 15:13:12.830756782 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/InstallAnywhere/SBUpgradeInstall.java	2023-09-08 15:14:39.753802592 -0700
@@ -166,23 +166,6 @@
             }
         }
         String previousVersion = this.getPreviousVersion(this.upgrade);
-        if (this.isWindows) {
-            SimpleRegistryManager srm = (SimpleRegistryManager)ip.getService(SimpleRegistryManager.class);
-            String keyPath = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\SonicWall Universal Management Suite " + previousVersion;
-            String keyPath2 = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\SonicWall Universal Management Suite " + previousVersion;
-            try {
-                srm.deleteRegistryKey(keyPath);
-            }
-            catch (Exception e) {
-                System.out.println("Could not delete key " + keyPath + " because " + e.getMessage());
-            }
-            try {
-                srm.deleteRegistryKey(keyPath2);
-            }
-            catch (Exception e) {
-                System.out.println("Could not delete key " + keyPath2 + " because " + e.getMessage());
-            }
-        }
         try {
             this.updateUnixStartupScripts();
         }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/license/OfflineLicenseWebService.java decompiled-9.3.9330/com/sonicwall/sgms/license/OfflineLicenseWebService.java
--- decompiled-9.3.9320/com/sonicwall/sgms/license/OfflineLicenseWebService.java	2023-09-08 15:13:13.136768620 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/license/OfflineLicenseWebService.java	2023-09-08 15:14:40.091381133 -0700
@@ -26,7 +26,6 @@
 import com.sonicwall.sgms.util.SimpleErrorException;
 import com.sonicwall.ws.servlet.auth.HttpDigestAuthenticator;
 import com.sonicwall.ws.util.AuthServletRequest;
-import com.sonicwall.ws.util.HashUtil;
 import com.sonicwall.ws.util.WebServiceUtil;
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
@@ -80,15 +79,6 @@
         return instances;
     }
 
-    public String getSecurityCode(String serial) {
-        String currentUtcDate = OfflineLicenseWebService.getUtcDateStr();
-        if (lastUtcDate == null || !lastUtcDate.equals(currentUtcDate)) {
-            securityCode = HashUtil.SHA(serial + HashUtil.SHA(currentUtcDate));
-            lastUtcDate = currentUtcDate;
-        }
-        return securityCode;
-    }
-
     private static String getUtcDateStr() {
         if (calendar == null) {
             calendar = new GregorianCalendar();
@@ -114,7 +104,7 @@
         digestAuth.setPassword("");
         String userName = serial;
         String realm = "localdomain";
-        String password = this.getSecurityCode(serial);
+        String password = SGMSUtil.createSecurityCode(serial);
         String method = "GET";
         String uri = "/ws/licensemanager/offlinelicense/";
         String qop = "auth";
@@ -405,7 +395,7 @@
             digestAuth.setPassword("");
             String userName = serial;
             String realm = "localdomain";
-            String password = this.getSecurityCode(serial);
+            String password = SGMSUtil.createSecurityCode(serial);
             String method = "POST";
             String uri = "/ws/licensemanager/offlinelicense/";
             String qop = "auth";
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/ActivationCodesManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/ActivationCodesManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/ActivationCodesManager.java	2023-09-08 15:13:14.020802821 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/ActivationCodesManager.java	2023-09-08 15:14:40.930333720 -0700
@@ -19,6 +19,7 @@
 import com.sonicwall.sgms.util.SimpleError;
 import java.sql.ResultSet;
 import java.sql.SQLException;
+import java.util.ArrayList;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.Hashtable;
@@ -127,7 +128,8 @@
     public synchronized String getCategoryDescription(String type) throws SQLException {
         String tableName1 = this.constructSecondaryTableName("AC_CATEGORIES");
         String query = "SELECT CATEGORY_DESC FROM " + tableName1;
-        Vector vector = this.getQueryResults(query = query + " WHERE CATEGORY_NAME LIKE '" + type + "%'");
+        query = query + " WHERE CATEGORY_NAME LIKE ?";
+        Vector vector = this.getQueryResultsPS(query, new String[]{type});
         if (vector.size() > 0) {
             String[] temp = (String[])vector.elementAt(0);
             return temp[0];
@@ -160,8 +162,8 @@
 
     public synchronized String getCategoryName(String description) throws SQLException {
         String tableName1 = this.constructSecondaryTableName("AC_CATEGORIES");
-        String query = "SELECT CATEGORY_NAME FROM " + tableName1 + " WHERE CATEGORY_DESC='" + description + "'";
-        Vector vector = this.getQueryResults(query);
+        String query = "SELECT CATEGORY_NAME FROM " + tableName1 + " WHERE CATEGORY_DESC=?";
+        Vector vector = this.getQueryResultsPS(query, new String[]{description});
         if (vector.size() > 0) {
             String[] temp = (String[])vector.elementAt(0);
             return temp[0];
@@ -172,8 +174,8 @@
 
     public synchronized String getActivationCategoryTypeDescription(String type) throws SQLException {
         String tableName1 = this.constructSecondaryTableName("AC_DESC");
-        String query = "SELECT AC_DESC FROM " + tableName1 + " WHERE AC_TYPE ='" + type + "'";
-        Vector vector = this.getQueryResults(query);
+        String query = "SELECT AC_DESC FROM " + tableName1 + " WHERE AC_TYPE =?";
+        Vector vector = this.getQueryResultsPS(query, new String[]{type});
         int nrows = vector.size();
         String str = new String();
         for (int i = 0; i < nrows; ++i) {
@@ -201,15 +203,19 @@
     }
 
     public synchronized String[] getActivationCategoryTypes(String service_type, int to_nodes, boolean pre65only) throws SQLException {
+        ArrayList<String> values = new ArrayList<String>();
         String tableName1 = this.constructSecondaryTableName("AC_DESC");
         StringBuffer query = new StringBuffer("SELECT AC_TYPE FROM ").append(tableName1);
-        query.append(" WHERE SERVICE_TYPE = ").append(pool.delimitDBColumnValue(service_type));
+        query.append(" WHERE SERVICE_TYPE = ?");
+        values.add(service_type);
         if (to_nodes > 0) {
-            query.append(" AND NODES = ").append(pool.delimitDBColumnValue(Integer.toString(to_nodes)));
-            query.append(" OR (NODES - BASE_NODES) = ").append(pool.delimitDBColumnValue(Integer.toString(to_nodes)));
+            query.append(" AND NODES = ?");
+            values.add(Integer.toString(to_nodes));
+            query.append(" OR (NODES - BASE_NODES) = ?");
+            values.add(Integer.toString(to_nodes));
         }
         query.append(" ORDER BY SORT_ORDER, AC_TYPE");
-        Vector<String[]> vector = this.getQueryResults(query.toString());
+        Vector<String[]> vector = this.getQueryResultsPS(query.toString(), values.toArray(new String[values.size()]));
         if (pre65only) {
             Vector<String[]> pre65_vector = new Vector<String[]>();
             for (int i = 0; i < vector.size(); ++i) {
@@ -249,8 +255,9 @@
     public synchronized int[] getNumberOfActivationCodesAvailable(String[] activation_type, String domainID) throws SQLException {
         int[] num = new int[activation_type.length];
         for (int i = 0; i < activation_type.length; ++i) {
-            String query = "SELECT COUNT(CODE) FROM " + tableName + " WHERE CATEGORY='" + activation_type[i] + "'";
-            Vector vector = this.getQueryResults(query = query + " AND PENDING=0 AND domainID='" + domainID + "'");
+            String query = "SELECT COUNT(CODE) FROM " + tableName + " WHERE CATEGORY= ?";
+            query = query + " AND PENDING=0 AND domainID=?";
+            Vector vector = this.getQueryResultsPS(query, new String[]{activation_type[i], domainID});
             if (vector == null) {
                 num[i] = 0;
                 continue;
@@ -262,8 +269,8 @@
     }
 
     public synchronized int[] getActivationCodes(String activation_type) throws SQLException, Exception {
-        String query = "SELECT CODE FROM " + tableName + " WHERE CATEGORY='" + activation_type + "'";
-        Vector vector = this.getQueryResults(query);
+        String query = "SELECT CODE FROM " + tableName + " WHERE CATEGORY=?";
+        Vector vector = this.getQueryResultsPS(query, new String[]{activation_type});
         int nrows = vector.size();
         int[] codes = new int[nrows];
         for (int i = 0; i < nrows; ++i) {
@@ -275,31 +282,38 @@
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Loose catch block
      */
     public String getActivationCodeDescription(String activation_type) {
-        String desc = null;
+        ResultSet rs;
+        String desc;
+        block4: {
+            desc = null;
         String tableName1 = this.constructSecondaryTableName("AC_DESC");
-        String query = "SELECT AC_DESC FROM " + tableName1 + " WHERE AC_TYPE='" + activation_type + "'";
-        ResultSet rs = null;
+            String query = "SELECT AC_DESC FROM " + tableName1 + " WHERE AC_TYPE=?";
+            rs = null;
         try {
-            rs = ActivationCodesManager.executeQuery(query);
-            if (rs.next()) {
+                rs = ActivationCodesManager.executeQueryPS(query, new String[]{activation_type});
+                if (!rs.next()) break block4;
                 desc = ActivationCodesManager.getValidString(rs, 1);
             }
-        }
         catch (SQLException sQLException) {
-        }
-        finally {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
+            }
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return desc;
     }
 
     public synchronized String[] getActivationCodesAvailable(String activation_type, String domainID) throws SQLException {
-        String query = "SELECT CODE FROM " + tableName + " WHERE CATEGORY='" + activation_type + "'";
+        String query = "SELECT CODE FROM " + tableName + " WHERE CATEGORY= ?";
         query = query + " AND PENDING=0";
-        query = query + " AND DOMAINID= '" + domainID + "'";
-        Vector vector = this.getQueryResults(query);
+        query = query + " AND DOMAINID= ?";
+        Vector vector = this.getQueryResultsPS(query, new String[]{activation_type, domainID});
         int nrows = vector.size();
         String[] codes = new String[nrows];
         for (int i = 0; i < nrows; ++i) {
@@ -315,8 +329,8 @@
     public synchronized String[] getActivationCodesAvailable(String activation_category, String activation_type, String domainID) throws SQLException, Exception {
         String category_name = this.getCategoryName(activation_category);
         String tableName1 = this.constructSecondaryTableName("AC_DESC");
-        String query = "SELECT AC_TYPE FROM " + tableName1 + " WHERE AC_DESC='" + activation_type + "' AND AC_TYPE LIKE '" + category_name + "%'";
-        Vector vector = this.getQueryResults(query);
+        String query = "SELECT AC_TYPE FROM " + tableName1 + " WHERE AC_DESC=? AND AC_TYPE LIKE '" + category_name + "%'";
+        Vector vector = this.getQueryResultsPS(query, new String[]{activation_type});
         int nrows = vector.size();
         String category2 = new String();
         for (int i = 0; i < nrows; ++i) {
@@ -338,9 +352,9 @@
                 sb.append("SELECT CODE FROM ").append(tableName);
                 sb.append(" WHERE PENDING=0");
                 sb.append(" AND CATEGORY = ").append(pool.delimitDBColumnValue(dea_descs[i][0]));
-                sb.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+                sb.append(" AND domainID = ?");
                 sb.append(" ORDER BY CATEGORY");
-                Vector vector = this.getQueryResults(sb.toString());
+                Vector vector = this.getQueryResultsPS(sb.toString(), new String[]{domainID});
                 for (int j = 0; j < vector.size(); ++j) {
                     String[] temp = (String[])vector.elementAt(j);
                     sb.setLength(0);
@@ -358,9 +372,9 @@
             sb.append("SELECT CODE, CATEGORY FROM ").append(tableName);
             sb.append(" WHERE PENDING=0");
             sb.append(" AND CATEGORY LIKE ").append(pool.delimitDBColumnValue(category2 + "%"));
-            sb.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+            sb.append(" AND domainID = ?");
             sb.append(" ORDER BY CATEGORY");
-            Vector vector = this.getQueryResults(sb.toString());
+            Vector vector = this.getQueryResultsPS(sb.toString(), new String[]{domainID});
             for (int i = 0; i < vector.size(); ++i) {
                 String[] temp = (String[])vector.elementAt(i);
                 String type = temp[1];
@@ -381,10 +395,10 @@
         String category_name = this.getCategoryName(activation_category);
         String tableName1 = this.constructSecondaryTableName("AC_DESC");
         StringBuffer query = new StringBuffer("SELECT AC_TYPE FROM ").append(tableName1);
-        query.append(" WHERE AC_DESC = ").append(pool.delimitDBColumnValue(activation_type));
+        query.append(" WHERE AC_DESC = ?");
         query.append(" AND (AC_TYPE LIKE ").append(pool.delimitDBColumnValue(category_name + "%"));
         query.append(" OR SERVICE_TYPE = ").append(pool.delimitDBColumnValue(category_name)).append(")");
-        Vector vector = this.getQueryResults(query.toString());
+        Vector vector = this.getQueryResultsPS(query.toString(), new String[]{activation_type});
         int nrows = vector.size();
         String category2 = new String();
         for (int i = 0; i < nrows; ++i) {
@@ -400,8 +414,8 @@
         String[] insertfields = new String[]{columns[0], columns[1], columns[3], columns[4]};
         String[] insertvalues = new String[]{code, category2, user_id, domainID};
         try {
-            String selectQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE CODE = '" + code + "'";
-            int count = this.getCount(selectQuery);
+            String selectQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE CODE = ?";
+            int count = this.getCountPS(selectQuery, new String[]{code});
             if (count > 0) {
                 SGMSUtil.debugOut("ActivationCodesManager:addActivationCode() - Code Already Exists: " + code);
                 se = new SimpleError(-39);
@@ -490,8 +504,8 @@
         String[] deletefields = new String[]{columns[0]};
         String[] deletevalues = new String[]{code};
         try {
-            String query = "SELECT COUNT(*) FROM " + tableName + " WHERE CODE='" + code + "'";
-            Vector vector = this.getQueryResults(query);
+            String query = "SELECT COUNT(*) FROM " + tableName + " WHERE CODE=?";
+            Vector vector = this.getQueryResultsPS(query, new String[]{code});
             int num = 0;
             if (vector != null) {
                 String[] temp = (String[])vector.elementAt(0);
@@ -540,8 +554,8 @@
     }
 
     public int getActivationCodeState(String code) throws SQLException {
-        String query = "SELECT PENDING FROM " + tableName + " WHERE CODE ='" + code + "'";
-        Vector vector = this.getQueryResults(query);
+        String query = "SELECT PENDING FROM " + tableName + " WHERE CODE =?";
+        Vector vector = this.getQueryResultsPS(query, new String[]{code});
         int nrows = vector.size();
         int state = 0;
         for (int i = 0; i < nrows; ++i) {
@@ -582,26 +596,34 @@
     public Vector getUsedActivationCodes(String serial, int sort_order, String domainID) {
         Vector<String[]> v = new Vector<String[]>();
         ResultSet rs = null;
+        ArrayList<String> values = new ArrayList<String>();
         StringBuffer sb = new StringBuffer("SELECT CODE, SERVICENAME, FWSERIAL, domainID FROM ");
         sb.append(this.constructSecondaryTableName("USED_ACCODES"));
-        sb.append(" WHERE domainID=").append(pool.delimitDBColumnValue(domainID));
+        sb.append(" WHERE domainID=?");
+        values.add(domainID);
         if (serial != null) {
-            sb.append(" AND FWSERIAL = ").append(pool.delimitDBColumnValue(serial));
+            sb.append(" AND FWSERIAL = ?");
+            values.add(serial);
         }
         sb.append(USED_ACCODES_ORDER_SQL[sort_order]);
         try {
-            rs = ActivationCodesManager.executeQuery(sb.toString());
+            rs = ActivationCodesManager.executeQueryPS(sb.toString(), values.toArray(new String[values.size()]));
             while (rs.next()) {
                 String[] used_accode_row = new String[]{ActivationCodesManager.getValidString(rs, 1), ActivationCodesManager.getValidString(rs, 2), ActivationCodesManager.getValidString(rs, 3), ActivationCodesManager.getValidString(rs, 4)};
                 v.addElement(used_accode_row);
             }
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.debugOut("ActivationCodesManager.getUsedActivationCodes() : " + sb.toString() + " " + sqle.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return v;
     }
 
@@ -643,10 +665,10 @@
     public String[] getModelCodes(String category_name) {
         String tableName1 = this.constructSecondaryTableName("AC_MODELS");
         String query = "SELECT MODEL_CODE FROM " + tableName1;
-        query = query + " WHERE ALLOWED_UPGRADES LIKE '%" + category_name + "%'";
+        query = query + " WHERE ALLOWED_UPGRADES LIKE ?";
         String[] model_codes = null;
         try {
-            Vector vector = this.getQueryResults(query);
+            Vector vector = this.getQueryResultsPS(query, new String[]{"%" + category_name + "%"});
             int nrows = vector.size();
             model_codes = new String[nrows];
             for (int i = 0; i < nrows; ++i) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/AutoSGMSLoginManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/AutoSGMSLoginManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/AutoSGMSLoginManager.java	2023-09-08 15:13:13.924799106 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/AutoSGMSLoginManager.java	2023-09-08 15:14:40.834453424 -0700
@@ -4,10 +4,10 @@
 package com.sonicwall.sgms.manager;
 
 import com.sonicwall.sgms.database.DataBaseConnectionPool;
-import com.sonicwall.sgms.manager.TableManager;
 import com.sonicwall.sgms.manager.UserManager;
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.sgms.util.TEAV;
+import com.sonicwall.viewpoint.common.service.ConfigurationService;
 import java.io.File;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
@@ -22,8 +22,7 @@
 import java.util.Vector;
 import org.apache.commons.io.FileUtils;
 
-public class AutoSGMSLoginManager
-extends TableManager {
+public class AutoSGMSLoginManager {
     private static String APPLIANCE_AUTH = "auth.txt";
     private static HashMap<String, String> applianceAuthMap = new HashMap();
     private static volatile AutoSGMSLoginManager INSTANCE = null;
@@ -47,7 +46,6 @@
     }
 
     private AutoSGMSLoginManager() {
-        this.init();
         su = new SGMSUtil(DataBaseConnectionPool.getReference());
         um = (UserManager)UserManager.getReference(DataBaseConnectionPool.getReference());
     }
@@ -67,7 +65,7 @@
             String passwordHash = "";
             ResultSet set = null;
             try {
-                set = AutoSGMSLoginManager.executeQuery("SELECT PASSWORD FROM " + DataBaseConnectionPool.getTablePrefix() + "USERS WHERE ID='admin' AND domainID = '" + "DMN0000000000000000000000001" + "'");
+                set = su.executeQuery("SELECT PASSWORD FROM " + DataBaseConnectionPool.getTablePrefix() + "USERS WHERE ID='admin' AND domainID = '" + "DMN0000000000000000000000001" + "'");
                 if (set.next()) {
                     passwordHash = set.getString(1);
                 }
@@ -100,7 +98,7 @@
         String currentPasswordHash = "";
         ResultSet set = null;
         try {
-            set = AutoSGMSLoginManager.executeQuery("SELECT PASSWORD FROM " + DataBaseConnectionPool.getTablePrefix() + "USERS WHERE ID='admin' AND domainID = '" + "DMN0000000000000000000000001" + "'");
+            set = su.executeQuery("SELECT PASSWORD FROM " + DataBaseConnectionPool.getTablePrefix() + "USERS WHERE ID='admin' AND domainID = '" + "DMN0000000000000000000000001" + "'");
             if (set.next()) {
                 currentPasswordHash = set.getString(1);
             }
@@ -134,7 +132,7 @@
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
             datePwdChanged = sdf.format(new Date());
             String query = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "USERS SET PASSWORD = '" + md5Password + "' , DATEPWDCHANGED = " + (DataBaseConnectionPool.isOracle() ? "TO_DATE(TO_CHAR(SYS_EXTRACT_UTC(CURRENT_TIMESTAMP), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')" : (DataBaseConnectionPool.isSQLServer() ? "GETUTCDATE()" : "UTC_TIMESTAMP()")) + "  WHERE ID = '" + "admin" + "'  AND DOMAINID = '" + "DMN0000000000000000000000001" + "'";
-            this.executeUpdate(query);
+            su.executeUpdate(query);
             return true;
         }
         catch (Exception ex) {
@@ -143,9 +141,27 @@
         }
     }
 
+    public boolean change2faConfig(String is2faEnabled, String secretKey, String emergCode) {
+        try {
+            SGMSUtil.debugOut((Object)"AutoSGMSLoginManager.change2faConfig(): Validating SGMS Sync", 3);
+            if (is2faEnabled != null && is2faEnabled.equals("2")) {
+                um.confirmFirst2faLogin("", "admin", "DMN0000000000000000000000001");
+            } else {
+                um.reset2faForUser("", "admin", "DMN0000000000000000000000001", is2faEnabled, secretKey, emergCode);
+            }
+            return true;
+        }
+        catch (Exception e) {
+            return false;
+        }
+    }
+
     public void syncAppliancePasswordOnStartup() {
         new Thread(new Runnable(){
 
+            /*
+             * WARNING - Removed try catching itself - possible behaviour change.
+             */
             @Override
             public void run() {
                 while (!DataBaseConnectionPool.isPoolAvailable()) {
@@ -158,20 +174,28 @@
                     AutoSGMSLoginManager.this.extractAuthFile();
                     boolean superUserEntryAvailable = false;
                     while (!superUserEntryAvailable) {
+                        ResultSet res = null;
                         try {
-                            ResultSet res = TableManager.executeQuery("SELECT COUNT(*) FROM " + DataBaseConnectionPool.getTablePrefix() + "USERS WHERE ID = '" + "admin" + "'  AND DOMAINID = '" + "DMN0000000000000000000000001" + "'");
+                            res = su.executeQuery("SELECT COUNT(*) FROM " + DataBaseConnectionPool.getTablePrefix() + "USERS WHERE ID = '" + "admin" + "'  AND DOMAINID = '" + "DMN0000000000000000000000001" + "'");
                             if (res.next()) {
                                 boolean bl = superUserEntryAvailable = res.getInt(1) > 0;
                             }
-                            if (superUserEntryAvailable) continue;
+                            if (!superUserEntryAvailable) {
                             Thread.sleep(1000L);
                         }
+                            DataBaseConnectionPool.freeResultSet(res);
+                        }
                         catch (InterruptedException | SQLException ex) {
                             SGMSUtil.debugOut("AutoSGMSLoginManager.syncAppliancePasswordOnStartup: Exception while queriying for Super User entry in Users table.\n" + ex);
                             try {
                                 Thread.sleep(1000L);
                             }
-                            catch (InterruptedException interruptedException) {}
+                            catch (InterruptedException interruptedException) {
+                                // empty catch block
+                            }
+                        }
+                        finally {
+                            DataBaseConnectionPool.freeResultSet(res);
                         }
                     }
                     if (superUserEntryAvailable && applianceAuthMap.containsKey("password")) {
@@ -188,7 +212,7 @@
     private void extractAuthFile() {
         HashMap<String, String> hashMap = applianceAuthMap;
         synchronized (hashMap) {
-            String strPathConf = Paths.get(this.getInstallDir(), new String[0]).resolve("conf").toAbsolutePath().toString();
+            String strPathConf = Paths.get(ConfigurationService.getSetting("installDir"), new String[0]).resolve("conf").toAbsolutePath().toString();
             File file = new File(strPathConf, APPLIANCE_AUTH);
             String buffer = null;
             try {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/CertManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/CertManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/CertManager.java	2023-09-08 15:13:14.005802240 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/CertManager.java	2023-09-08 15:14:40.912356164 -0700
@@ -450,11 +450,12 @@
 
     public String getPrefix(String tableName) throws SQLException {
         String prefix = "";
-        String query = "SELECT PREFIX_VALUE FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS_GROUP_INFO WHERE TABLE_NAME = " + pool.delimitDBColumnValue(tableName);
+        String query = "SELECT PREFIX_VALUE FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS_GROUP_INFO WHERE TABLE_NAME = ?";
         SGMSUtil.debugOut((Object)("CertManager: Prefix query: " + query), 3);
         ResultSet rs = null;
+        String[] queryValues = new String[]{tableName};
         try {
-            rs = CertManager.executeQuery(query);
+            rs = CertManager.executeQueryPS(query, queryValues);
             if (rs.next() && (prefix = rs.getString("PREFIX_VALUE")) == null) {
                 prefix = "";
             }
@@ -471,11 +472,12 @@
 
     public Vector getCertInfo(String unitID) throws SQLException {
         Vector<String[]> vecData = new Vector<String[]>();
-        String query = "SELECT certname, DELETED, crl_url, validity, crl_is_required, cert_hash, cert_type FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE built_in = " + pool.delimitDBColumnValue("No") + " AND ID LIKE " + pool.delimitDBColumnValue(unitID);
+        String query = "SELECT certname, DELETED, crl_url, validity, crl_is_required, cert_hash, cert_type FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE built_in = " + pool.delimitDBColumnValue("No") + " AND ID LIKE ?";
         SGMSUtil.debugOut((Object)("CertManager: getCertInfo query: " + query), 3);
         ResultSet rs = null;
         try {
-            rs = CertManager.executeQuery(query);
+            String[] queryValues = new String[]{unitID};
+            rs = CertManager.executeQueryPS(query, queryValues);
             while (rs.next()) {
                 String[] array = new String[7];
                 String str = rs.getString("certname");
@@ -517,12 +519,16 @@
             }
         }
         catch (SQLException sqe) {
+            try {
             SGMSUtil.debugOut("CertManager.getCertInfo(), query: " + query + "\n" + sqe.getMessage());
             throw sqe;
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return vecData;
     }
 
@@ -594,11 +600,12 @@
 
     public String getCACertName(String strHash) throws SQLException {
         String strName = strHash;
-        String query = "SELECT certname FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE cert_hash LIKE " + pool.delimitDBColumnValue(strHash);
+        String query = "SELECT certname FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE cert_hash LIKE ?";
+        String[] queryValues = new String[]{strName};
         SGMSUtil.debugOut((Object)("CertManager: getCACertName query: " + query), 3);
         ResultSet rs = null;
         try {
-            rs = CertManager.executeQuery(query);
+            rs = CertManager.executeQueryPS(query, queryValues);
             while (rs.next()) {
                 String hash = rs.getString("certname");
                 if (hash == null) continue;
@@ -620,11 +627,12 @@
      */
     public String getCertPrefsFileName(String unitid, String cert) {
         String prefsFileName = "";
-        String query = "SELECT certname FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE ID LIKE " + pool.delimitDBColumnValue(unitid) + " AND cert_data LIKE " + pool.delimitDBColumnValue(cert);
+        String query = "SELECT certname FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE ID LIKE ? AND cert_data LIKE ?";
+        String[] queryValues = new String[]{unitid, cert};
         SGMSUtil.debugOut((Object)("CertManager: getCertPrefsFileName query: " + query), 3);
         ResultSet rs = null;
         try {
-            rs = CertManager.executeQuery(query);
+            rs = CertManager.executeQueryPS(query, queryValues);
             while (rs.next()) {
                 prefsFileName = rs.getString("certname");
                 prefsFileName = SGMSUtil.urlDecode(prefsFileName);
@@ -645,12 +653,13 @@
     public Vector<String> getUnitsValidLocalCerts(String unitid) {
         Vector<String> vecLocalCerts = new Vector<String>();
         StringBuilder query = new StringBuilder("SELECT cert_data FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(CERTS_TABLE_NAME);
-        query.append(" WHERE ID LIKE ").append(pool.delimitDBColumnValue(unitid)).append(" AND validity = ").append(pool.delimitDBColumnValue("1"));
+        query.append(" WHERE ID LIKE ? AND validity = ").append(pool.delimitDBColumnValue("1"));
         query.append(" AND DELETED = '0' AND cert_type = 'Local certificate' AND built_in = 'No' ");
         SGMSUtil.debugOut((Object)("CertManager: getUnitsValidLocalCerts query: " + query), 3);
         ResultSet rs = null;
+        String[] queryValues = new String[]{unitid};
         try {
-            rs = CertManager.executeQuery(query.toString());
+            rs = CertManager.executeQueryPS(query.toString(), queryValues);
             while (rs.next()) {
                 String certData = rs.getString("cert_data");
                 if (certData == null) continue;
@@ -658,11 +667,16 @@
             }
         }
         catch (SQLException sqe) {
+            try {
             SGMSUtil.debugOut("CertManager.getUnitsValidLocalCerts(), query: " + query + "\n" + sqe.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return vecLocalCerts;
     }
 
@@ -671,11 +685,11 @@
      */
     public Vector<String> getUnitsCaCerts(String unitid) {
         Vector<String> vecCaCerts = new Vector<String>();
-        String query = "SELECT cert_data FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE ID LIKE " + pool.delimitDBColumnValue(unitid) + " AND DELETED = '0' AND cert_type = 'CA certificate' AND built_in = 'No'";
-        SGMSUtil.debugOut((Object)("CertManager: getUnitsCaCerts query: " + query), 3);
+        String query = "SELECT cert_data FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE ID LIKE ? AND DELETED = '0' AND cert_type = 'CA certificate' AND built_in = 'No'";
         ResultSet rs = null;
+        String[] queryValues = new String[]{unitid};
         try {
-            rs = CertManager.executeQuery(query);
+            rs = CertManager.executeQueryPS(query, queryValues);
             while (rs.next()) {
                 String certData = rs.getString("cert_data");
                 if (certData == null) continue;
@@ -696,11 +710,11 @@
      */
     public Vector<String> getLocalCertsNamesList(String unitid) {
         Vector<String> localCertsList = new Vector<String>();
-        String query = "SELECT certname FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE ID LIKE " + pool.delimitDBColumnValue(unitid) + " AND validity = " + pool.delimitDBColumnValue("1") + " AND DELETED = '0' AND cert_type = 'Local certificate' AND built_in = 'No'";
-        SGMSUtil.debugOut((Object)("CertManager: getLocalCertsNamesList query: " + query), 3);
+        String query = "SELECT certname FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME + " WHERE ID LIKE ? AND validity = " + pool.delimitDBColumnValue("1") + " AND DELETED = '0' AND cert_type = 'Local certificate' AND built_in = 'No'";
         ResultSet rs = null;
+        String[] queryValues = new String[]{unitid};
         try {
-            rs = CertManager.executeQuery(query);
+            rs = CertManager.executeQueryPS(query, queryValues);
             while (rs.next()) {
                 String certName = rs.getString("certname");
                 if (certName == null) continue;
@@ -719,11 +733,11 @@
 
     public String getCMPForCert(String unitID, String strName) throws SQLException {
         String strCMP = null;
-        String query = "SELECT UPPER(serial) FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE ID = " + pool.delimitDBColumnValue(unitID);
-        SGMSUtil.debugOut((Object)("CertManager: getCMPForCert query: " + query), 3);
+        String query = "SELECT UPPER(serial) FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE ID = ?";
+        String[] queryValues = new String[]{unitID};
         ResultSet rs = null;
         try {
-            rs = CertManager.executeQuery(query);
+            rs = CertManager.executeQueryPS(query, queryValues);
             while (rs.next()) {
                 String pw = CertManager.getValidString(rs, 1);
                 if (pw == null) continue;
@@ -775,10 +789,11 @@
         String query = null;
         query = "SELECT * FROM " + DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME;
         if (certName != null && certName.trim().length() > 0) {
-            query = query + " WHERE CERTNAME = '" + certName + "'";
+            query = query + " WHERE CERTNAME = ?";
         }
+        String[] queryValues = new String[]{certName};
         try {
-            rs = CertManager.executeQuery(query);
+            rs = CertManager.executeQueryPS(query, queryValues);
             while (rs.next()) {
                 CertificateInfoData cid = new CertificateInfoData();
                 cid.setCertType(rs.getString(CertTableColumns.CERT_TYPE.name()));
@@ -957,23 +972,29 @@
     }
 
     public boolean certExists(String id, String certName) throws SQLException {
+        boolean bl;
         String certsTableName = DataBaseConnectionPool.getTablePrefix() + CERTS_TABLE_NAME;
         StringBuffer sb = new StringBuffer("SELECT certname FROM ").append(certsTableName);
-        sb.append(" WHERE id = '").append(id).append("' AND certname = '").append(certName).append("'");
+        sb.append(" WHERE id = ? AND certname = ?");
+        String[] queryValues = new String[]{id, certName};
         ResultSet rs = null;
         try {
-            rs = CertManager.executeQuery(sb.toString());
-            boolean bl = rs.next();
-            return bl;
+            rs = CertManager.executeQueryPS(sb.toString(), queryValues);
+            bl = rs.next();
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.debugOut("CertManager.certExists(), query: " + sb.toString() + "\n" + sqle.getMessage());
             throw sqle;
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
     }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+        return bl;
+    }
 
     public void addCACert(X509Certificate certificate, String nodeID) {
         if (nodeID == null || nodeID.isEmpty()) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/ChangeDisplayManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/ChangeDisplayManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/ChangeDisplayManager.java	2023-09-08 15:13:13.974801041 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/ChangeDisplayManager.java	2023-09-08 15:14:40.877399806 -0700
@@ -24,11 +24,13 @@
 import com.sonicwall.sgms.workflow.model.ManifestData;
 import com.sonicwall.sgms.workflow.util.WorkFlowUtil;
 import java.sql.Connection;
+import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.sql.Statement;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -306,8 +308,10 @@
     private List<String> fetchScreenIDs(List<String> changeOrderIDs, String colName, String nodeID) {
         StringBuilder query = new StringBuilder();
         query.append("SELECT DISTINCT SCREENID, S.PARENT_ID, S.REPORT_ORDER FROM ").append(CHANGES_TABLE).append(" C, ").append(DataBaseConnectionPool.getTablePrefix()).append("SCREENS S").append(" WHERE ").append(colName).append(" IN (");
+        ArrayList<String> values = new ArrayList<String>();
         for (String id : changeOrderIDs) {
-            query.append("'").append(id).append("',");
+            query.append("?,");
+            values.add(id);
         }
         query.deleteCharAt(query.length() - 1);
         query.append(")");
@@ -317,7 +321,7 @@
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ChangeDisplayManager.getAllScreenIDsForChangeOrder(): Query: " + query.toString()), 2);
-            rs = ChangeDisplayManager.executeQuery(query.toString());
+            rs = ChangeDisplayManager.executeQueryPS(query.toString(), values.toArray(new String[values.size()]));
             while (rs.next()) {
                 String screenID = rs.getString("SCREENID");
                 screenIDList.add(screenID);
@@ -597,6 +601,19 @@
         return sb.toString();
     }
 
+    private List<String> getNodeList(String nodeID) {
+        GroupNodeID gnID;
+        String[] parents;
+        ArrayList<String> sb = new ArrayList<String>();
+        sb.add(nodeID);
+        if (EngineUtil.isGroupNode(nodeID) && null != (parents = (gnID = new GroupNodeID(nodeID)).getParents())) {
+            for (String p : parents) {
+                sb.add(p);
+            }
+        }
+        return sb;
+    }
+
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
@@ -810,22 +827,26 @@
         ParamsManager PM = (ParamsManager)ParamsManager.getReference(pool);
         String[] params = this.getPrefsFileNames(origTableName);
         StringBuilder columns = this.getColumns(PM.getActualColumnNames(params));
-        String nodeIdsInQuery = this.formNodeID(nodeID);
+        List<String> nodeList = this.getNodeList(nodeID);
+        String nodeIdsInQuery = String.join((CharSequence)",", Collections.nCopies(nodeList.size(), "?"));
         if ("SW_SAS".equals(origTableName) && !nodeID.startsWith("UT")) {
-            StringBuilder sb = new StringBuilder();
-            sb.append("'").append(nodeID).append("'");
-            nodeIdsInQuery = sb.toString();
+            nodeList.clear();
+            nodeList.add(nodeID);
+            nodeIdsInQuery = "?";
         }
         StringBuilder select = new StringBuilder("SELECT POLICY_ID, ID, DELETED, ").append((CharSequence)columns).append(" FROM ").append(tempTableName).append(" WHERE ID IN (").append(nodeIdsInQuery).append(") ").append(myWhereClause).append(" ORDER BY ").append(mySort).append(mySortOrder.equals("1") ? " ASC" : " DESC");
         SGMSUtil.debugOut((Object)("Query being used to load: " + select.toString()), 3);
         ArrayList<Map<String, String>> rows = new ArrayList<Map<String, String>>();
-        Statement stmt = null;
+        PreparedStatement stmt = null;
         ResultSet rs = null;
         ArrayList<Map<String, String>> deletedRows = new ArrayList<Map<String, String>>();
         boolean isGroupNode = EngineUtil.isGroupNode(nodeID);
         try {
-            stmt = con.createStatement();
-            rs = stmt.executeQuery(select.toString());
+            stmt = con.prepareStatement(select.toString());
+            for (int i = 0; i < nodeList.size(); ++i) {
+                stmt.setString(i + 1, nodeList.get(i));
+            }
+            rs = stmt.executeQuery();
             while (rs.next()) {
                 HashMap<String, String> paramValues = new HashMap<String, String>();
                 String string = rs.getString("POLICY_ID");
@@ -931,7 +952,9 @@
         for (String tableName : tableNames) {
             String[] params = this.getPrefsFileNames(tableName);
             StringBuilder columns = this.getColumns(PM.getActualColumnNames(params));
-            StringBuilder select = new StringBuilder("SELECT ").append((CharSequence)columns).append(" FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(tableName).append(" WHERE ID IN (").append(this.formNodeID(nodeID)).append(")");
+            StringBuilder select = new StringBuilder("SELECT ").append((CharSequence)columns).append(" FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(tableName).append(" WHERE ID IN (");
+            List<String> nodeList = this.getNodeList(nodeID);
+            select.append(String.join((CharSequence)",", Collections.nCopies(nodeList.size(), "?"))).append(")");
             if (null != paramsMap && !paramsMap.isEmpty()) {
                 String[] sigParams = PM.getSignificantPrefsFileNames(tableName);
                 if (tableName.equalsIgnoreCase("SW_ROUTE_OBJECTS")) {
@@ -946,10 +969,13 @@
             SGMSUtil.debugOut((Object)("Query being used to load: " + select.toString()), 3);
             Connection con = DataBaseConnectionPool.getReference().requestConnection();
             ArrayList rows = new ArrayList();
-            Statement stmt = null;
+            PreparedStatement stmt = null;
             try {
-                stmt = con.createStatement();
-                ResultSet rs = stmt.executeQuery(select.toString());
+                stmt = con.prepareStatement(select.toString());
+                for (int i = 0; i < nodeList.size(); ++i) {
+                    stmt.setString(i + 1, nodeList.get(i));
+                }
+                ResultSet rs = stmt.executeQuery();
                 while (rs.next()) {
                     HashMap<String, String> paramValues = new HashMap<String, String>();
                     for (String param3 : params) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/DashboardManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/DashboardManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/DashboardManager.java	2023-09-08 15:13:14.019802782 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/DashboardManager.java	2023-09-08 15:14:40.929334966 -0700
@@ -47,6 +47,7 @@
 import com.sonicwall.sgms.tenant.license.TenantUnitLicenseService;
 import com.sonicwall.sgms.util.ApplicationLog;
 import com.sonicwall.sgms.util.DashboardUtils;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.ProductizationUtil;
 import com.sonicwall.sgms.util.SA;
 import com.sonicwall.sgms.util.SGMSUtil;
@@ -110,7 +111,7 @@
     private static final String VIEWS_TABLE = "SGMS_VIEWS";
     private static final String RSS_FEEDS_TABLE = "DEFAULT_RSS_FEEDS";
     public static final String FLEX_CUSTOM_AUTH_USERNAME = "gmsFlexClient";
-    private static final String FLEX_CUSTOM_AUTH_PASSWORD = "zxbrkyw7t395jdpqmdgh8304hswhc3f9";
+    private static final String FLEX_CUSTOM_AUTH_PASSWORD = KeyStotreUtil.getValueFromKeystore("gms_tomcat_flex_client_password_key");
     private static String[] passwdFragment = null;
     private static final String column_sep = "##";
     private static final String component_sep = "$$";
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/DEAManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/DEAManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/DEAManager.java	2023-09-08 15:13:13.997801931 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/DEAManager.java	2023-09-08 15:14:40.904366139 -0700
@@ -151,21 +151,27 @@
         Vector<String[]> v = new Vector<String[]>();
         StringBuffer sb = new StringBuffer("SELECT XFRFROM, XFRTO, XFRDESC");
         sb.append(" FROM ").append(tableName_xfrs);
-        sb.append(" WHERE XFRFROM = ").append(pool.delimitDBColumnValue(service_type));
+        sb.append(" WHERE XFRFROM = ?");
+        String[] queryValues = new String[]{service_type};
         ResultSet rs = null;
         try {
-            rs = DEAManager.executeQuery(sb.toString());
+            rs = DEAManager.executeQueryPS(sb.toString(), queryValues);
             while (rs.next()) {
                 row = new String[]{DEAManager.getValidString(rs, 1), DEAManager.getValidString(rs, 2), DEAManager.getValidString(rs, 3)};
                 v.addElement(row);
             }
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.debugOut("DEAManager:getXfrsForServiceType() SQLException: " + sqle.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         if (v.size() > 0) {
             xfr_data = new String[3][v.size()];
             for (int i = 0; i < xfr_data[0].length; ++i) {
@@ -207,14 +213,18 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public DEAAvailableService getServiceFromName(String name) {
-        DEAAvailableService service = null;
+        ResultSet rs;
+        DEAAvailableService service;
+        block4: {
+            service = null;
         StringBuffer sb = new StringBuffer("SELECT SERVICE_TYPE, SERVICE_DESC, FREETRIAL, SUBSCRIBE, UPGRADE, RENEW");
         sb.append(" FROM ").append(tableName_services);
-        sb.append(" WHERE SERVICE_TYPE = ").append(pool.delimitDBColumnValue(name));
-        ResultSet rs = null;
+            sb.append(" WHERE SERVICE_TYPE = ?");
+            String[] queryValues = new String[]{name};
+            rs = null;
         try {
-            rs = DEAManager.executeQuery(sb.toString());
-            if (rs.next()) {
+                rs = DEAManager.executeQueryPS(sb.toString(), queryValues);
+                if (!rs.next()) break block4;
                 service = new DEAAvailableService();
                 service.dea_service_type = DEAManager.getValidString(rs, 1);
                 service.dea_service_desc = DEAManager.getValidString(rs, 2);
@@ -223,13 +233,18 @@
                 service.upgrade_available = DEAManager.getValidString(rs, 5).equals("1");
                 service.renew_available = DEAManager.getValidString(rs, 6).equals("1");
             }
-        }
         catch (SQLException sqle) {
+                try {
             SGMSUtil.debugOut("DEAManager:getServiceFromName() SQLException: " + sqle.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
         }
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+            }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return service;
     }
 
@@ -237,14 +252,18 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public DEAAvailableService getServiceFromDesc(String description) {
-        DEAAvailableService service = null;
+        ResultSet rs;
+        DEAAvailableService service;
+        block4: {
+            service = null;
         StringBuffer sb = new StringBuffer("SELECT SERVICE_TYPE, SERVICE_DESC, FREETRIAL, SUBSCRIBE, UPGRADE, RENEW");
         sb.append(" FROM ").append(tableName_services);
-        sb.append(" WHERE SERVICE_DESC = ").append(pool.delimitDBColumnValue(description));
-        ResultSet rs = null;
+            sb.append(" WHERE SERVICE_DESC = ?");
+            String[] queryValues = new String[]{description};
+            rs = null;
         try {
-            rs = DEAManager.executeQuery(sb.toString());
-            if (rs.next()) {
+                rs = DEAManager.executeQueryPS(sb.toString(), queryValues);
+                if (!rs.next()) break block4;
                 service = new DEAAvailableService();
                 service.dea_service_type = DEAManager.getValidString(rs, 1);
                 service.dea_service_desc = DEAManager.getValidString(rs, 2);
@@ -253,13 +272,18 @@
                 service.upgrade_available = DEAManager.getValidString(rs, 5).equals("1");
                 service.renew_available = DEAManager.getValidString(rs, 6).equals("1");
             }
-        }
         catch (SQLException sqle) {
+                try {
             SGMSUtil.debugOut("DEAManager:getServiceFromDesc() SQLException: " + sqle.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return service;
     }
 
@@ -298,30 +322,35 @@
         String[][] ac_codes = null;
         StringBuffer sb = new StringBuffer("SELECT AC_TYPE, AC_DESC, SORT_ORDER, BASE_NODES, NODES, NODE_DELTA");
         sb.append(" FROM ").append(tableName_acdesc);
-        sb.append(" WHERE SERVICE_TYPE = ").append(pool.delimitDBColumnValue(dea_service_type));
+        sb.append(" WHERE SERVICE_TYPE = ?");
         if (dea_service_type.equals("NODEUPGR") && newNodeCount == 999) {
             newNodeCount = -1;
         }
         if (newNodeCount > 0) {
-            sb.append(" AND (NODES = ").append(pool.delimitDBColumnValue(Integer.toString(newNodeCount)));
-            sb.append(" OR (NODES - BASE_NODES) = ").append(pool.delimitDBColumnValue(Integer.toString(newNodeCount))).append(")");
+            sb.append(" AND (NODES = ? OR (NODES - BASE_NODES) = ?)");
         }
         sb.append(" ORDER BY SORT_ORDER, AC_TYPE");
         ResultSet rs = null;
         Vector<String[]> v = new Vector<String[]>();
         try {
-            rs = DEAManager.executeQuery(sb.toString());
+            String[] queryValues = newNodeCount > 0 ? new String[]{dea_service_type, Integer.toString(newNodeCount), Integer.toString(newNodeCount)} : new String[]{dea_service_type};
+            rs = DEAManager.executeQueryPS(sb.toString(), queryValues);
             while (rs.next()) {
                 String[] row = new String[]{DEAManager.getValidString(rs, 1), DEAManager.getValidString(rs, 2), DEAManager.getValidString(rs, 3), DEAManager.getValidString(rs, 4), DEAManager.getValidString(rs, 5), DEAManager.getValidString(rs, 6)};
                 v.addElement(row);
             }
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.debugOut("DEAManager:getActivationCodes4Service() SQLException: " + sqle.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         if (v.size() > 0) {
             ac_codes = new String[v.size()][];
             for (int i = 0; i < v.size(); ++i) {
@@ -431,12 +460,11 @@
         }
         StringBuffer sb_update = new StringBuffer("update ");
         sb_update.append(tableName_services);
-        sb_update.append(" set UPGRADE_TO = ");
-        sb_update.append(pool.delimitDBColumnValue(sb_delta.toString()));
-        sb_update.append(" where SERVICE_TYPE = ");
-        sb_update.append(pool.delimitDBColumnValue(dea_service_type));
+        sb_update.append(" SET UPGRADE_TO = ?");
+        sb_update.append(" WHERE SERVICE_TYPE = ?");
+        String[] queryValues = new String[]{sb_delta.toString(), dea_service_type};
         try {
-            this.executeUpdate(sb_update.toString());
+            this.executeUpdatePS(sb_update.toString(), queryValues);
         }
         catch (SQLException sQLException) {
             // empty catch block
@@ -714,11 +742,11 @@
             StringBuffer sb = new StringBuffer();
             sb.append("SELECT fwSerial FROM ").append(tableName_unitdata);
             if (serviceTypes.length == 1) {
-                sb.append(" WHERE SERVICE_TYPE = ").append(pool.delimitDBColumnValue(serviceTypes[0]));
+                sb.append(" WHERE SERVICE_TYPE = ?");
             } else {
                 sb.append(" WHERE SERVICE_TYPE IN (");
                 for (int i = 0; i < serviceTypes.length; ++i) {
-                    sb.append(pool.delimitDBColumnValue(serviceTypes[i]));
+                    sb.append("?");
                     if (i < serviceTypes.length - 1) {
                         sb.append(",");
                         continue;
@@ -727,7 +755,8 @@
                 }
             }
             sb.append(" AND STATUS IN ('S','F')");
-            rs = DEAManager.executeQuery(sb.toString());
+            String[] queryValues = serviceTypes;
+            rs = DEAManager.executeQueryPS(sb.toString(), queryValues);
             while (rs.next()) {
                 listOfUnits.addElement(rs.getString(1));
             }
@@ -764,13 +793,14 @@
                 deaQuery.append(" FROM ");
                 deaQuery.append(DataBaseConnectionPool.getTablePrefix() + "PARAMS p ");
                 deaQuery.append("WHERE ");
-                deaQuery.append("p.id = " + pool.delimitDBColumnValue(nodeID));
+                deaQuery.append("p.id = ?");
             } else if (strFromClause != null && strFromClause.length() > 0) {
                 deaQuery.append(strFromClause);
             }
             Vector vecResults = new Vector();
             try {
-                vecResults = this.getQueryResults(deaQuery.toString());
+                String[] queryValues = new String[]{nodeID};
+                vecResults = this.getQueryResultsPS(deaQuery.toString(), queryValues);
                 for (int i = 0; i < vecResults.size(); ++i) {
                     String[] array = (String[])vecResults.elementAt(i);
                     if (array == null) continue;
@@ -784,7 +814,7 @@
                     }
                 }
             }
-            catch (SQLException i) {}
+            catch (SQLException queryValues) {}
         } else {
             int ctr = 0;
             String[] COLS = new String[]{"ID", "SERIAL", "SERVICE_TYPE", "STATUS", "EXPIRY", "NODECOUNT", "USABLE_ACCODES", "FREETRIAL", "SUBSCRIBE", "UPGRADE", "RENEW"};
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/DefaultTaskManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/DefaultTaskManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/DefaultTaskManager.java	2023-09-08 15:13:14.017802704 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/DefaultTaskManager.java	2023-09-08 15:14:40.927337460 -0700
@@ -445,8 +445,11 @@
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Enabled force condition propagation
+     * Lifted jumps to return sites
      */
-    private Map<String, Map<String, String>> getFirewallInfos(String unitIDs) {
+    public Map<String, Map<String, String>> getFirewallInfos(String unitIDs) {
+        Map<String, Map<String, String>> map;
         String[] columns = new String[]{"IS_UNIT", "EXECUTED_TASKS"};
         StringBuilder sb = new StringBuilder("SELECT P.ID");
         for (String column : columns) {
@@ -454,25 +457,42 @@
         }
         sb.append(" FROM ").append(PARAMS_TABLE_NAME).append(" AS P, ").append(SW_IND_PARAMS6_TABLE_NAME).append(" AS I");
         sb.append(" WHERE IS_UNIT > ").append(0).append(" AND P.ID = I.ID");
+        ArrayList<String> values = new ArrayList<String>();
         if (null != unitIDs) {
-            sb.append(" AND P.ID IN ('").append(unitIDs).append("')");
+            sb.append(" AND P.ID IN (");
+            int i = 0;
+            for (String str : unitIDs.split("', '")) {
+                if (i != 0) {
+                    sb.append(",");
+                }
+                sb.append("?");
+                values.add(str);
+                ++i;
+            }
+            sb.append(")");
         }
         ResultSet rs = null;
         try {
-            rs = DefaultTaskManager.executeQuery(sb.toString());
-            Map<String, Map<String, String>> map = this.getFirewallInfos(rs, columns);
-            return map;
+            rs = DefaultTaskManager.executeQueryPS(sb.toString(), values.toArray(new String[values.size()]));
+            map = this.getFirewallInfos(rs, columns);
+            if (rs == null) return map;
         }
         catch (SQLException e) {
+            try {
             SGMSUtil.debugOut("DefaultTaskManager.getFirewallInfos: Error occured while retrieving the firewall info from the database.");
+                if (rs == null) return null;
         }
-        finally {
-            if (rs != null) {
+            catch (Throwable throwable) {
+                if (rs == null) throw throwable;
                 rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
             }
-        }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
         return null;
     }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+        return map;
+    }
 
     private Map<String, Map<String, String>> getFirewallInfos(ResultSet rs, String[] columns) throws SQLException {
         HashMap<String, Map<String, String>> firewallInfos = new HashMap<String, Map<String, String>>();
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/DiagnosticManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/DiagnosticManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/DiagnosticManager.java	2023-09-08 15:13:13.967800770 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/DiagnosticManager.java	2023-09-08 15:14:40.870408535 -0700
@@ -332,8 +332,8 @@
 
     protected SimpleError updateSnapShotStatus(String ssdata_tablename, int new_status) {
         try {
-            String updateString = new String("UPDATE " + this.getTableName() + " SET SSDATA_STATUS = " + pool.delimitDBColumnValue(Integer.toString(new_status)) + " WHERE SSDATA_TABLENAME = " + pool.delimitDBColumnValue(ssdata_tablename));
-            this.executeUpdate(updateString);
+            String updateString = new String("UPDATE " + this.getTableName() + " SET SSDATA_STATUS = ? WHERE SSDATA_TABLENAME = ?");
+            this.executeUpdatePS(updateString, new String[]{Integer.toString(new_status), ssdata_tablename});
         }
         catch (SQLException sqe) {
             log.log("DiagnosticManager", "completeSnapShotData", sqe);
@@ -448,8 +448,8 @@
         Vector<String[]> ssInfo = new Vector<String[]>();
         ResultSet rs = null;
         try {
-            String queryString = new String("SELECT * FROM " + this.getTableName() + " WHERE SS_ID = " + pool.delimitDBColumnValue(ssid));
-            rs = DiagnosticManager.executeQuery(queryString);
+            String queryString = new String("SELECT * FROM " + this.getTableName() + " WHERE SS_ID = ?");
+            rs = DiagnosticManager.executeQueryPS(queryString, new String[]{ssid});
             while (rs.next()) {
                 String[] rowData = new String[DIAG_SNAPSHOT_COLUMNS.length];
                 for (int i = 0; i < rowData.length; ++i) {
@@ -846,17 +846,15 @@
                 try {
                     str = null;
                     str = "SELECT CONVERT(INT, CONVERT(DEC(15), SUM(SIZE)) * CONVERT(VARCHAR(11),8192) / 1048576) FROM ";
-                    str = str + DataBaseConnectionPool.getTablePrefix() + "SYSFILES WHERE RTRIM(UPPER(NAME)) LIKE ";
-                    str = str + DiagnosticManager.pool.delimitDBColumnValue(strDBName);
-                    rs = DiagnosticManager.executeQuery(str);
+                    str = str + DataBaseConnectionPool.getTablePrefix() + "SYSFILES WHERE RTRIM(UPPER(NAME)) LIKE ?";
+                    rs = DiagnosticManager.executeQueryPS(str, new String[]{strDBName});
                     if (rs.next() && (size = rs.getString(1)) == null) {
                         size = "";
                     }
                     rs = DataBaseConnectionPool.freeResultSet(rs);
                     str = "SELECT CONVERT(INT,CONVERT(DEC(15), SUM(SIZE)) * CONVERT(VARCHAR(11),8192) / 1048576) FROM ";
-                    str = str + DataBaseConnectionPool.getTablePrefix() + "SYSFILES WHERE RTRIM(UPPER(NAME)) LIKE ";
-                    rs = DiagnosticManager.executeQuery(str = str + DiagnosticManager.pool.delimitDBColumnValue(strDBName + "_LOG"));
-                    if (!rs.next() || (log_size = rs.getString(1)) != null) ** GOTO lbl24
+                    rs = DiagnosticManager.executeQueryPS(str = str + DataBaseConnectionPool.getTablePrefix() + "SYSFILES WHERE RTRIM(UPPER(NAME)) LIKE ?", new String[]{strDBName + "_LOG"});
+                    if (!rs.next() || (log_size = rs.getString(1)) != null) ** GOTO lbl22
                     log_size = "";
                 }
                 catch (SQLException sqe) {
@@ -870,7 +868,7 @@
                     }
                     rs = DataBaseConnectionPool.freeResultSet(rs);
                 }
-lbl24:
+lbl22:
                 // 2 sources
 
                 rs = DataBaseConnectionPool.freeResultSet(rs);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/DomainManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/DomainManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/DomainManager.java	2023-09-08 15:13:13.987801544 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/DomainManager.java	2023-09-08 15:14:40.892381102 -0700
@@ -59,6 +59,7 @@
     private static final String SELECT_ALL_QUERY = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).toString();
     private static final String DOMAINID_PREFIX = "DMN";
     public static final String LOCAL_DOMAIN_ID = "DMN0000000000000000000000001";
+    public static final String LOCAL_DOMAIN = "LocalDomain";
     private static final String[] RELATED_TABLES = new String[]{"userpasswords", "sgms_sessions", "SGMS_VIEWS", "UNIT_PERMS", "SCRN_PERMS", "USERS_MOTD", "MGMT_FW_FILTER_PERMS", "TASKS", "ALERTS", "THRESHOLDS", "THRESHOLDELEMENTS", "SCHEDULES", "SCHEDULEGROUPS", "SEVERITIES", "MGMT_FW_FILTER", "MGMT_FW_FILTER_DATA", "AUTH_SERVERS", "CUSTOM_GROUPS"};
     private static final LogsManager LOGS_MANAGER = (LogsManager)LogsManager.getReference();
     public static final String DEFAULT_DOMAIN_ID = "defaultDomainID";
@@ -96,9 +97,8 @@
             SGMSUtil.debugOut("Invalid domainID supplied: " + domainID);
             return null;
         }
-        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ").append("ID").append(" = ");
-        query.append("'").append(domainID).append("'");
-        List<DomainInfo> domainInfoList = this.getDomains(query.toString());
+        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ").append("ID").append(" = ?");
+        List<DomainInfo> domainInfoList = this.getDomains(query.toString(), domainID);
         if (domainInfoList != null && domainInfoList.size() == 1) {
             return domainInfoList.get(0);
         }
@@ -106,9 +106,8 @@
     }
 
     public DomainInfo getDomainInfoByName(String domainName) {
-        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ").append("DOMAIN_NAME").append(" = ");
-        query.append("'").append(domainName).append("'");
-        List<DomainInfo> domainInfoList = this.getDomains(query.toString());
+        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ").append("DOMAIN_NAME").append(" = ?");
+        List<DomainInfo> domainInfoList = this.getDomains(query.toString(), domainName);
         if (domainInfoList != null && domainInfoList.size() == 1) {
             return domainInfoList.get(0);
         }
@@ -116,9 +115,8 @@
     }
 
     public DomainInfo getDomainInfoByAlias(String alias) {
-        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ").append("ALIAS").append(" = ");
-        query.append("'").append(alias).append("'");
-        List<DomainInfo> domainInfoList = this.getDomains(query.toString());
+        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ").append("ALIAS").append(" = ?");
+        List<DomainInfo> domainInfoList = this.getDomains(query.toString(), alias);
         if (domainInfoList != null && domainInfoList.size() == 1) {
             return domainInfoList.get(0);
         }
@@ -126,9 +124,8 @@
     }
 
     public DomainInfo getDomainInfoByTenantSerial(String tenantSerial) {
-        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ").append("TENANT_SERIAL").append(" = ");
-        query.append("'").append(tenantSerial).append("'");
-        List<DomainInfo> domainInfoList = this.getDomains(query.toString());
+        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ").append("TENANT_SERIAL").append(" = ?");
+        List<DomainInfo> domainInfoList = this.getDomains(query.toString(), tenantSerial);
         if (domainInfoList != null && domainInfoList.size() == 1) {
             return domainInfoList.get(0);
         }
@@ -154,6 +151,44 @@
         return new ArrayList<DomainInfo>();
     }
 
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    private List<DomainInfo> getDomains(String query, String arg) {
+        ResultSet rs = null;
+        try {
+            rs = DomainManager.executeQueryWithValue(query, arg);
+            List<DomainInfo> list = this.getDomainInfos(rs);
+            return list;
+        }
+        catch (SQLException e) {
+            SGMSUtil.debugOut("\nError occured when retrieving the domains from the database.");
+        }
+        finally {
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+        }
+        return new ArrayList<DomainInfo>();
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    private List<DomainInfo> getDomains(String query, String[] args) {
+        ResultSet rs = null;
+        try {
+            rs = DomainManager.executeQueryPS(query, args);
+            List<DomainInfo> list = this.getDomainInfos(rs);
+            return list;
+        }
+        catch (SQLException e) {
+            SGMSUtil.debugOut("\nError occured when retrieving the domains from the database.");
+        }
+        finally {
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+        }
+        return new ArrayList<DomainInfo>();
+    }
+
     private List<DomainInfo> getDomainInfos(ResultSet rs) throws SQLException {
         ArrayList<DomainInfo> domainsList = new ArrayList<DomainInfo>();
         String alias = null;
@@ -267,15 +302,17 @@
         StringBuilder query = new StringBuilder("SELECT TENANT_SERIAL, serial FROM ");
         query.append(PARAMS_TABLE_NAME).append(" p,").append(DOMAINS_TABLE_NAME).append(" d");
         query.append(" WHERE IS_UNIT > ").append(0).append(" AND p.domainID = d.id");
+        String[] arr = new String[]{};
         if (null != sn && !sn.isEmpty()) {
-            query.append(" AND serial = '" + sn + "'");
+            query.append(" AND serial = ?");
+            arr = new String[]{sn};
         }
         HashMap<String, List<String>> tenantNodeSerialsMap = new HashMap<String, List<String>>();
         String tenantSerial = null;
         String nodeSerial = null;
         ResultSet rs = null;
         try {
-            rs = DomainManager.executeQuery(query.toString());
+            rs = DomainManager.executeQueryPS(query.toString(), arr);
             while (rs.next()) {
                 List<String> nodeSerials;
                 tenantSerial = rs.getString(1);
@@ -291,11 +328,16 @@
             }
         }
         catch (SQLException e) {
+            try {
             SGMSUtil.debugOut("\nError occured when fetching tenant and node serials");
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return tenantNodeSerialsMap;
     }
 
@@ -395,8 +437,8 @@
                 hmTemplateManager.deleteTemplatesForDomain(tmpDomainID);
                 this.deleteWorkFlowRelatedData(tmpDomainID);
                 this.deleteTemplateRelatedData(tmpDomainID);
-                StringBuffer sb = new StringBuffer("DELETE FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ID = '").append(tmpDomainID).append("'");
-                this.executeUpdate(sb.toString());
+                StringBuffer sb = new StringBuffer("DELETE FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ID = ?");
+                this.executeUpdatePS(sb.toString(), tmpDomainID);
             }
         }
         catch (SQLException e) {
@@ -439,8 +481,8 @@
 
     private void deleteRelatedTableData(String domainID) throws SQLException {
         for (int i = 0; i < RELATED_TABLES.length; ++i) {
-            StringBuffer sb = new StringBuffer("DELETE FROM ").append(DataBaseConnectionPool.getTablePrefix() + RELATED_TABLES[i]).append(" WHERE domainID = '").append(domainID).append("'");
-            this.executeUpdate(sb.toString());
+            StringBuffer sb = new StringBuffer("DELETE FROM ").append(DataBaseConnectionPool.getTablePrefix() + RELATED_TABLES[i]).append(" WHERE domainID = ?");
+            this.executeUpdatePS(sb.toString(), domainID);
         }
         EventMgmtManager evtMgr = (EventMgmtManager)EventMgmtManager.getReference();
         evtMgr.removeOrphanedContents();
@@ -469,11 +511,11 @@
         }
         String id = domainInfo.getId();
         String userID = domainInfo.getLastUpdatedBy();
-        StringBuilder sb = new StringBuilder("UPDATE ").append(DOMAINS_TABLE_NAME).append(" SET DOMAIN_NAME='").append(name).append("', LAST_UPDATED='").append(domainInfo.getLastUpdated()).append("'").append(", LAST_UPDATEDBY='").append(userID).append("', ALIAS='").append(domainInfo.getAlias()).append("'");
-        sb.append(" WHERE ID='").append(id).append("'");
+        StringBuilder sb = new StringBuilder("UPDATE ").append(DOMAINS_TABLE_NAME).append(" SET DOMAIN_NAME= ? , LAST_UPDATED= ? ").append(", LAST_UPDATEDBY= ? , ALIAS= ? ");
+        sb.append(" WHERE ID= ? ");
         int rowCount = 0;
         try {
-            rowCount = this.executeUpdate(sb.toString());
+            rowCount = this.executeUpdatePS(sb.toString(), new String[]{name, domainInfo.getLastUpdated(), userID, domainInfo.getAlias(), id});
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("\nError occured when updating the domain \"" + name + "\" in the database.");
@@ -545,9 +587,9 @@
     }
 
     public void unhideAdmin(String domainID, String domainName) {
-        String query = new StringBuffer("UPDATE ").append(DOMAINS_TABLE_NAME).append(" SET isAdminHidden='0' WHERE ID='").append(domainID).append("'").toString();
+        String query = new StringBuffer("UPDATE ").append(DOMAINS_TABLE_NAME).append(" SET isAdminHidden='0' WHERE ID= ? ").toString();
         try {
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, domainID);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("\nError occured while unhiding the admin for the domain \"" + domainName + "\" in the database.");
@@ -555,9 +597,9 @@
     }
 
     public void setDefaultAdminUser(String userID, String domainID) {
-        String query = new StringBuffer("UPDATE ").append(DOMAINS_TABLE_NAME).append(" SET default_admin_user='").append(userID).append("' WHERE ID='").append(domainID).append("'").toString();
+        String query = new StringBuffer("UPDATE ").append(DOMAINS_TABLE_NAME).append(" SET default_admin_user= ?").append(" WHERE ID= ?").toString();
         try {
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, new String[]{userID, domainID});
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("\nError occured while setting the default admin user for the domain \"" + domainID + "\" in the database.");
@@ -631,12 +673,17 @@
         }
         SGMSUtil.debugOut((Object)(domainInfo.getDomainName() + " is Admin? " + isAdmin), 4);
         try {
-            sb.append(", ALIAS, DEFAULT_ADMIN_USER").append(SGMSUtil.isHosted() ? ", TENANT_SERIAL)" : ")").append(" VALUES('").append(id).append("', '").append(name).append("', '").append(domainInfo.getLastUpdated()).append("', '").append(domainInfo.getLastUpdatedBy()).append("','").append(isAdminFlag).append("','").append(domainInfo.getAlias()).append("','").append(domainInfo.getAdminUserID());
+            ArrayList<String> values = new ArrayList<String>();
+            sb.append(", ALIAS, DEFAULT_ADMIN_USER").append(SGMSUtil.isHosted() ? ", TENANT_SERIAL)" : ")").append(" VALUES('").append(id).append("', ?").append(", '").append(domainInfo.getLastUpdated()).append("', '").append(domainInfo.getLastUpdatedBy()).append("','").append(isAdminFlag).append("', ?").append(", ? ");
+            values.add(name);
+            values.add(domainInfo.getAlias());
+            values.add(domainInfo.getAdminUserID());
             if (SGMSUtil.isHosted()) {
-                sb.append("','").append(name);
+                sb.append(",").append(name);
+                values.add(name);
             }
-            sb.append("')");
-            rowCount = this.executeUpdate(sb.toString());
+            sb.append(")");
+            rowCount = this.executeUpdatePS(sb.toString(), values.toArray(new String[values.size()]));
             SGMSUtil.debugOut((Object)(domainInfo.getDomainName() + " Inserted rows:  " + rowCount), 4);
             this.addMotd(domainInfo);
             SGMSUtil.debugOut((Object)(domainInfo.getDomainName() + " After addMotd call. "), 4);
@@ -709,8 +756,8 @@
 
     private void addMotd(DomainInfo domainInfo) throws SQLException {
         String lastUpdated = domainInfo.getLastUpdated();
-        String motdQuery = new StringBuffer("INSERT INTO ").append(USERS_MOTD_TABLE_NAME).append(" (ID, domainID, motd, msg_format, motd_enabled, startDate, endDate, last_updated, LAST_UPDATEDBY) VALUES ").append(" ('").append(domainInfo.getDomainName()).append("', '").append(domainInfo.getId()).append("', '").append("").append("', '").append("0").append("', '").append("1").append("', '").append(lastUpdated).append("', '").append(lastUpdated).append("', '").append(lastUpdated).append("', '").append(domainInfo.getLastUpdatedBy()).append("')").toString();
-        this.executeUpdate(motdQuery);
+        String motdQuery = new StringBuffer("INSERT INTO ").append(USERS_MOTD_TABLE_NAME).append(" (ID, domainID, motd, msg_format, motd_enabled, startDate, endDate, last_updated, LAST_UPDATEDBY) VALUES ").append(" ( ? ").append(", ? ").append(", '").append("").append("', '").append("0").append("', '").append("1").append("', '").append(lastUpdated).append("', '").append(lastUpdated).append("', '").append(lastUpdated).append("', '").append(domainInfo.getLastUpdatedBy()).append("')").toString();
+        this.executeUpdatePS(motdQuery, new String[]{domainInfo.getDomainName(), domainInfo.getId()});
     }
 
     private String[] addDomainViews(String domainID, String lastUpdated, String lastUpdatedBy) {
@@ -1040,13 +1087,17 @@
     }
 
     public List<DomainInfo> searchDomains(String searchParam, String searchParamValue, String userID, String domainID) {
-        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ID IN (SELECT domainID from ").append(AUTH_SERVERS_TABLE_NAME).append(" WHERE ").append(searchParam).append("='").append(searchParamValue).append("'");
+        StringBuffer query = new StringBuffer("SELECT * FROM ").append(DOMAINS_TABLE_NAME).append(" WHERE ID IN (SELECT domainID from ").append(AUTH_SERVERS_TABLE_NAME).append(" WHERE ").append(searchParam).append("= ?");
         UserManager USER_MANAGER = (UserManager)UserManager.getReference();
+        String[] args = null;
         if (!USER_MANAGER.isUserSuperAdmin(userID, domainID)) {
-            query.append(" AND domainID='").append(domainID).append("'");
+            query.append(" AND domainID= ?");
+            args = new String[]{searchParamValue, domainID};
+        } else {
+            args = new String[]{searchParamValue};
         }
         query.append(")").toString();
-        return this.getDomains(query.toString());
+        return this.getDomains(query.toString(), args);
     }
 
     public List<DomainInfo> searchDomains(String searchParam, String operator, String searchParamValue, String userID, String domainID) {
@@ -1060,21 +1111,33 @@
     private List<DomainInfo> search(String searchParam, String operator, String searchParamValue, StringBuffer query, String userID, String domainID) {
         String escapeSearchParamValue = searchParamValue;
         escapeSearchParamValue = DataBaseConnectionPool.isMySQL() ? SGMSUtil.replaceString(searchParamValue, "_", "\\\\_") : SGMSUtil.replaceString(searchParamValue, "_", "[_]");
+        String val = null;
         if (operator.equals("equals")) {
-            query.append("='").append(searchParamValue).append("'");
+            query.append("= ?");
+            val = searchParamValue;
         } else if (operator.equals("startsWith")) {
-            query.append(" LIKE '").append(escapeSearchParamValue).append("%'");
+            query.append(" LIKE ?");
+            val = escapeSearchParamValue + "%";
         } else if (operator.equals("endsWith")) {
-            query.append(" LIKE '%").append(escapeSearchParamValue).append("'");
+            query.append(" LIKE ?");
+            val = "%" + escapeSearchParamValue;
         } else if (operator.equals("contains")) {
-            query.append(" LIKE '%").append(escapeSearchParamValue).append("%'");
+            query.append(" LIKE ?");
+            val = "%" + escapeSearchParamValue + "%";
+        } else {
+            query.append(" LIKE ?");
+            val = "%" + escapeSearchParamValue + "%";
         }
+        String[] args = null;
         UserManager USER_MANAGER = (UserManager)UserManager.getReference();
         if (!USER_MANAGER.isUserSuperAdmin(userID, domainID)) {
-            query.append(" AND domainID='").append(domainID).append("'");
+            query.append(" AND domainID= ?");
+            args = new String[]{val, domainID};
+        } else {
+            args = new String[]{val};
         }
         query.append(")");
-        return this.getDomains(query.toString());
+        return this.getDomains(query.toString(), args);
     }
 
     public String getAllDomainNameToIDMapJSArrayString() {
@@ -1210,8 +1273,8 @@
                 tmpAuthServerID = authServerIDs[i];
                 if (tmpAuthServerID.trim().length() <= 0) continue;
                 this.deleteUsers("authServerID", tmpAuthServerID, curDomainID, sessionID);
-                StringBuffer sb = new StringBuffer("DELETE FROM ").append(AUTH_SERVERS_TABLE_NAME).append(" WHERE ID = '").append(tmpAuthServerID).append("'");
-                this.executeUpdate(sb.toString());
+                StringBuffer sb = new StringBuffer("DELETE FROM ").append(AUTH_SERVERS_TABLE_NAME).append(" WHERE ID = ?");
+                this.executeUpdatePS(sb.toString(), tmpAuthServerID);
             }
         }
         catch (SQLException e) {
@@ -1224,11 +1287,11 @@
 
     private void deleteUsers(String colName, String colValue, String domainID, String sessionID) throws SQLException {
         UserManager USER_MANAGER = (UserManager)UserManager.getReference();
-        StringBuffer selQuery = new StringBuffer("SELECT ID FROM ").append(USERS_TABLE_NAME).append(" WHERE ").append(colName).append("='").append(colValue).append("'");
+        StringBuffer selQuery = new StringBuffer("SELECT ID FROM ").append(USERS_TABLE_NAME).append(" WHERE ").append(colName).append("= ?");
         ResultSet rs = null;
         DomainInfo domainInfo = this.getDomainInfoByID(domainID);
         try {
-            rs = DomainManager.executeQuery(selQuery.toString());
+            rs = DomainManager.executeQueryWithValue(selQuery.toString(), colValue);
             while (rs.next()) {
                 String userID = DomainManager.getValidString(rs, "ID");
                 boolean bLogCreation = true;
@@ -1239,32 +1302,45 @@
             }
         }
         catch (SQLException e) {
+            try {
             throw e;
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
     }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+    }
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public boolean isRemoteUser(String userID, String domainID) {
-        StringBuffer sb = new StringBuffer("SELECT AUTH_SERVER_NAME FROM ").append(AUTH_SERVERS_TABLE_NAME).append(" WHERE ID=(SELECT AUTHSERVERID FROM ").append(USERS_TABLE_NAME).append(" WHERE DOMAINID='").append(domainID).append("' AND ID='").append(userID).append("')");
-        ResultSet rs = null;
-        try {
-            rs = DomainManager.executeQuery(sb.toString());
-            if (rs.next()) {
-                boolean bl = !"LocalAuthServer".equals(rs.getString("AUTH_SERVER_NAME"));
-                return bl;
-            }
+        ResultSet rs;
+        block4: {
+            boolean bl;
+            StringBuffer sb = new StringBuffer("SELECT AUTH_SERVER_NAME FROM ").append(AUTH_SERVERS_TABLE_NAME).append(" WHERE ID=(SELECT AUTHSERVERID FROM ").append(USERS_TABLE_NAME).append(" WHERE DOMAINID= ?").append(" AND ID= ? )");
+            rs = null;
+            try {
+                rs = DomainManager.executeQueryPS(sb.toString(), new String[]{domainID, userID});
+                if (!rs.next()) break block4;
+                bl = !"LocalAuthServer".equals(rs.getString("AUTH_SERVER_NAME"));
         }
         catch (SQLException e) {
+                try {
             SGMSUtil.debugOut("\nError occured when checking for remote user from the database.");
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+            return bl;
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return false;
     }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/DynamicConfigManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/DynamicConfigManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/DynamicConfigManager.java	2023-09-08 15:13:14.031803246 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/DynamicConfigManager.java	2023-09-08 15:14:40.942318757 -0700
@@ -30,6 +30,7 @@
     }
 
     public synchronized void refresh() {
+        try {
         List<String[]> allConfigs = this.readAllFromDB();
         this.sqliConfigs = this.collectDynamicConfigsByType(allConfigs, "SQLi");
         this.xssConfigs = this.collectDynamicConfigsByType(allConfigs, "XSS");
@@ -37,24 +38,41 @@
         this.javascriptMethods = this.collectJavascriptMethods();
         SGMSUtil.debugOut((Object)"DynamicConfigManager:refresh() - Refreshed dynamic configs successfully", 3);
     }
+        catch (Exception e) {
+            SGMSUtil.debugOut((Object)"DynamicConfigManager:refresh() - Refresh Failed", 1);
+            SGMSUtil.printStackTrace(e);
+        }
+    }
 
     public static DynamicConfigManager getInstance() {
         return INSTANCE;
     }
 
     public Set<String> getSqliDynamicConfigs() {
+        if (this.sqliConfigs.isEmpty()) {
+            this.refresh();
+        }
         return this.sqliConfigs;
     }
 
     public Set<String> getXssDynamicConfigs() {
+        if (this.xssConfigs.isEmpty()) {
+            this.refresh();
+        }
         return this.xssConfigs;
     }
 
     public Map<String, char[]> getAllowedCharsDynamicConfigs() {
+        if (this.allowedCharsConfigs.isEmpty()) {
+            this.refresh();
+        }
         return this.allowedCharsConfigs;
     }
 
     public Set<String> getJavascriptMethods() {
+        if (this.javascriptMethods.isEmpty()) {
+            this.javascriptMethods = this.collectJavascriptMethods();
+        }
         return this.javascriptMethods;
     }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/FilterManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/FilterManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/FilterManager.java	2023-09-08 15:13:13.950800112 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/FilterManager.java	2023-09-08 15:14:40.854428485 -0700
@@ -144,8 +144,8 @@
             owner_userid = null;
             rs = null;
             try {
-                String queryString = new String("SELECT OWNER_USERID FROM " + this.getTableName() + " WHERE FILTERNAME = " + pool.delimitDBColumnValue(filtername) + " AND domainID=" + pool.delimitDBColumnValue(domainID));
-                rs = FilterManager.executeQuery(queryString);
+                String queryString = new String("SELECT OWNER_USERID FROM " + this.getTableName() + " WHERE FILTERNAME = ? AND domainID = ?");
+                rs = FilterManager.executeQueryPS(queryString, new String[]{filtername, domainID});
                 if (!rs.next()) break block4;
                 owner_userid = FilterManager.getValidString(rs, 1);
             }
@@ -294,11 +294,11 @@
         try {
             StringBuffer query = new StringBuffer();
             query.append("SELECT SCRN_ID FROM ").append(dataTableName);
-            query.append(" WHERE FILTERNAME = ").append(pool.delimitDBColumnValue(filtername));
-            query.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+            query.append(" WHERE FILTERNAME = ?");
+            query.append(" AND domainID = ?");
             query.append(" ORDER BY SCRN_ID");
             SGMSUtil.debugOut("Query to fetch screens: " + query);
-            rs = FilterManager.executeQuery(query.toString());
+            rs = FilterManager.executeQueryPS(query.toString(), new String[]{filtername, domainID});
             while (rs.next()) {
                 v.addElement(FilterManager.getValidString(rs, 1));
             }
@@ -423,10 +423,10 @@
                     break block10;
                 }
                 StringBuffer query_sb = new StringBuffer("SELECT PERMS FROM ").append(permsTableName);
-                query_sb.append(" WHERE FILTERNAME = ").append(pool.delimitDBColumnValue(filtername));
-                query_sb.append(" AND USERID = ").append(pool.delimitDBColumnValue(userid));
-                query_sb.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
-                rs = FilterManager.executeQuery(query_sb.toString());
+                query_sb.append(" WHERE FILTERNAME = ?");
+                query_sb.append(" AND USERID = ?");
+                query_sb.append(" AND domainID = ?");
+                rs = FilterManager.executeQueryPS(query_sb.toString(), new String[]{filtername, userid, domainID});
                 if (rs.next()) {
                     String perm = FilterManager.getValidString(rs, 1);
                     if (perm.equals("1")) {
@@ -438,11 +438,11 @@
                 if (filter_access != NO_ACCESS || (cols = this.userManager.getUserData("", userid, domainID)) == null) break block10;
                 String usertype = cols[1];
                 query_sb = new StringBuffer("SELECT PERMS FROM ").append(permsTableName);
-                query_sb.append(" WHERE FILTERNAME = ").append(pool.delimitDBColumnValue(filtername));
-                query_sb.append(" AND USERID = ").append(pool.delimitDBColumnValue(usertype));
-                query_sb.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+                query_sb.append(" WHERE FILTERNAME = ?");
+                query_sb.append(" AND USERID = ?");
+                query_sb.append(" AND domainID = ?");
                 rs = DataBaseConnectionPool.freeResultSet(rs);
-                rs = FilterManager.executeQuery(query_sb.toString());
+                rs = FilterManager.executeQueryPS(query_sb.toString(), new String[]{filtername, usertype, domainID});
                 if (!rs.next()) break block10;
                 String perm = FilterManager.getValidString(rs, 1);
                 if (perm.equals("1")) {
@@ -479,6 +479,7 @@
         ResultSet rs = null;
         try {
             StringBuffer query_sb = new StringBuffer("SELECT DISTINCT FILTERNAME FROM ").append(permsTableName);
+            String[] values = null;
             if (!this.userManager.isUserSuperAdmin(userid, domainID)) {
                 if (includeUserTypeAccess) {
                     String usertype = "NOTAVAILABLE";
@@ -491,18 +492,20 @@
                     catch (SQLException sQLException) {
                         // empty catch block
                     }
-                    query_sb.append(" WHERE (USERID = ").append(pool.delimitDBColumnValue(userid));
-                    query_sb.append(" OR USERID = ").append(pool.delimitDBColumnValue(usertype)).append(")");
-                    query_sb.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+                    query_sb.append(" WHERE (USERID = ? ");
+                    query_sb.append(" OR USERID = ? ").append(")");
+                    query_sb.append(" AND domainID = ? ");
+                    values = new String[]{userid, usertype, domainID};
                 } else {
-                    query_sb.append(" WHERE USERID = ").append(pool.delimitDBColumnValue(userid));
-                    query_sb.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+                    query_sb.append(" WHERE USERID = ? ");
+                    query_sb.append(" AND domainID = ? ");
+                    values = new String[]{userid, domainID};
                 }
                 if (!includeReadOnly) {
                     query_sb.append(" AND PERMS = ").append(pool.delimitDBColumnValue("1"));
                 }
             }
-            rs = FilterManager.executeQuery(query_sb.toString());
+            rs = FilterManager.executeQueryPS(query_sb.toString(), values);
             while (rs.next()) {
                 String filtername = FilterManager.getValidString(rs, 1);
                 if (default_filtername == null && filtername.equalsIgnoreCase(userid)) {
@@ -1675,10 +1678,10 @@
     public List<String> getVisibleOnlyForInheritUIScreenFields(int screen_id) {
         ResultSet rs = null;
         LinkedList<String> visibleInInheritUIList = new LinkedList<String>();
-        String query = "SELECT PARAM_NAME from " + DataBaseConnectionPool.getTablePrefix() + "SUB_POLICY WHERE SCREEN_ID=" + screen_id + " AND visibleInInheritUI='1'";
+        String query = "SELECT PARAM_NAME from " + DataBaseConnectionPool.getTablePrefix() + "SUB_POLICY WHERE SCREEN_ID = ? AND visibleInInheritUI='1'";
         try {
             SGMSUtil su = new SGMSUtil(pool);
-            rs = su.executeQuery(query);
+            rs = SGMSUtil.executeQueryPS(query, new String[]{String.valueOf(screen_id)});
             while (rs.next()) {
                 visibleInInheritUIList.add(TableManager.getValidString(rs, 1));
             }
@@ -1902,11 +1905,11 @@
     public String getArrayTblDisplayName(String tableName) {
         String displayName = "";
         if (this.arrTblDisplayNameMap.get(tableName = this.removeDBSpecificPrefix(tableName)) == null) {
-            String query = "SELECT DISPLAY_NAME FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS_GROUP_INFO WHERE TABLE_NAME = " + pool.delimitDBColumnValue(tableName);
+            String query = "SELECT DISPLAY_NAME FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS_GROUP_INFO WHERE TABLE_NAME = ?";
             SGMSUtil.debugOut((Object)("PARAMSMANAGER: getArrayTblDisplayName query: " + query), 2);
             ResultSet rs = null;
             try {
-                rs = FilterManager.executeQuery(query);
+                rs = FilterManager.executeQueryWithValue(query, tableName);
                 if (rs.next() && (displayName = rs.getString("DISPLAY_NAME")) == null) {
                     displayName = "";
                 }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/FirmwareManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/FirmwareManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/FirmwareManager.java	2023-09-08 15:13:14.027803091 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/FirmwareManager.java	2023-09-08 15:14:40.937324991 -0700
@@ -101,16 +101,23 @@
     public int getNonEnglishFirmwareCount(int nTOU, String domainID) {
         ResultSet rs;
         int count;
-        block4: {
+        block6: {
             count = -1;
             String query = "SELECT count(*) FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS ";
-            query = query + "WHERE displayversion NOT LIKE '%Unknown%' AND displayversion LIKE '% - %' AND displayversion NOT LIKE '%- English%' AND DOMAINID = '" + domainID + "' ";
-            query = nTOU == 0 ? query + "AND is_unit > 0" : query + "AND is_unit = " + pool.delimitDBColumnValue(String.valueOf(nTOU));
+            query = query + "WHERE displayversion NOT LIKE '%Unknown%' AND displayversion LIKE '% - %' AND displayversion NOT LIKE '%- English%' AND DOMAINID = ? ";
+            String[] values = null;
+            if (nTOU == 0) {
+                query = query + "AND is_unit > 0";
+                values = new String[]{domainID};
+            } else {
+                query = query + "AND is_unit = ?";
+                values = new String[]{domainID, String.valueOf(nTOU)};
+            }
             rs = null;
             try {
                 SGMSUtil.debugOut((Object)("FirmwareManager:getNonEnglishFirmwareCount(): Query: " + query), 2);
-                rs = FirmwareManager.executeQuery(query);
-                if (!rs.next()) break block4;
+                rs = FirmwareManager.executeQueryPS(query, values);
+                if (!rs.next()) break block6;
                 count = rs.getInt(1);
             }
             catch (SQLException sqe) {
@@ -149,8 +156,8 @@
         String[] values = new String[]{"", "", ""};
         ResultSet rs = null;
         try {
-            String queryString = new String("SELECT latest_firmware_version, backup_versionDisplay, backup_date FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_PARAMS4 p4, " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_PARAMS8 p8  WHERE p4.ID = p8.ID AND p4.ID = " + pool.delimitDBColumnValue(nodeID));
-            rs = FirmwareManager.executeQuery(queryString);
+            String queryString = new String("SELECT latest_firmware_version, backup_versionDisplay, backup_date FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_PARAMS4 p4, " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_PARAMS8 p8  WHERE p4.ID = p8.ID AND p4.ID = ?");
+            rs = FirmwareManager.executeQueryWithValue(queryString, nodeID);
             while (rs.next()) {
                 values[0] = FirmwareManager.getValidString(rs, "latest_firmware_version");
                 values[1] = FirmwareManager.getValidString(rs, "backup_versionDisplay");
@@ -292,10 +299,10 @@
             String strTOU = String.valueOf(1);
             rs = null;
             rs1 = null;
-            String query = "SELECT modelCode, displayversion, fVersion, is_unit from " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE ID = " + pool.delimitDBColumnValue(nodeId);
+            String query = "SELECT modelCode, displayversion, fVersion, is_unit from " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE ID = ?";
             try {
                 SGMSUtil.debugOut((Object)("FirmwareManager:getFirmwareVersionforUpgrade: Query (1): " + query), 2);
-                rs = FirmwareManager.executeQuery(query);
+                rs = FirmwareManager.executeQueryWithValue(query, nodeId);
                 while (rs.next()) {
                     currModelCode = FirmwareManager.getValidString(rs, "modelCode");
                     dVersion = FirmwareManager.getValidString(rs, "displayversion");
@@ -1116,7 +1123,7 @@
         SGMSUtil.debugOut("FirmwareManager:getLatestFirmwareFromDrive: Existing firmware version on unit if firmware prefix exists: " + originalVersionFormat, 1, ETypeStore.FIRMWARE_UPGRADE_DEBUG);
         for (int i = 0; i < firmwareImageList.length; ++i) {
             String strFirmwareName = firmwareImageList[i];
-            if (!strFirmwareName.toLowerCase().startsWith(strFirmwareType.toLowerCase())) continue;
+            if (!strFirmwareName.toLowerCase().replaceAll("(-|_)", "").startsWith(strFirmwareType.toLowerCase().replaceAll("(-|_)", ""))) continue;
             String temp = "";
             boolean beginIgnoring = false;
             for (int k = 0; k < strFirmwareName.length(); ++k) {
@@ -1183,17 +1190,38 @@
                     SGMSUtil.debugOut("FirmwareManager:getLatestFirmwareFromDrive: foundNewFirmware if firmware prefix tag not exists: " + foundNewFirmware, 1, ETypeStore.FIRMWARE_UPGRADE_DEBUG);
                     continue;
                 }
-                String partialLocalFMName = strFirmwareName.substring(strFirmwareType.length());
+                String partialLocalFMName = strFirmwareName.substring(strFirmwareType.length() - 1);
+                if (!Character.isDigit(partialLocalFMName.charAt(0))) {
+                    partialLocalFMName = partialLocalFMName.substring(1);
+                }
                 SGMSUtil.debugOut("FirmwareManager:getLatestFirmwareFromDrive: partialLocalFMName: " + partialLocalFMName, 1, ETypeStore.FIRMWARE_UPGRADE_DEBUG);
                 String localFileFMVer = partialLocalFMName.substring(0, partialLocalFMName.lastIndexOf("."));
+                String localFileLastOct = "";
+                if (localFileFMVer.startsWith("7")) {
+                    localFileLastOct = localFileFMVer.substring(localFileFMVer.indexOf("-") + 1);
+                    if ((localFileFMVer = localFileFMVer.substring(0, localFileFMVer.indexOf("-"))).split("\\.").length < 4) {
+                        localFileFMVer = localFileFMVer + ".0";
+                    }
+                } else {
+                    if (lastOctet.contains("-")) {
+                        lastOctet = lastOctet.substring(lastOctet.indexOf("-"));
+                    }
+                    localFileLastOct = localFileFMVer.substring(localFileFMVer.indexOf("-"));
+                }
                 if (localFileFMVer.indexOf("_") > -1) {
                     localFileFMVer = localFileFMVer.substring(0, localFileFMVer.indexOf("_"));
                 }
                 SGMSUtil.debugOut("FirmwareManager:getLatestFirmwareFromDrive: localFileFMVer: " + localFileFMVer, 1, ETypeStore.FIRMWARE_UPGRADE_DEBUG);
                 SGMSUtil.debugOut("FirmwareManager:getLatestFirmwareFromDrive: finalFileFMVer: " + finalFileFMVer, 1, ETypeStore.FIRMWARE_UPGRADE_DEBUG);
-                FirmwareVersion fvUnit = FirmwareVersion.getReference(localFileFMVer);
-                FirmwareVersion fvFile = FirmwareVersion.getReference(finalFileFMVer);
-                if (fvUnit.isOlderThan(fvFile.getMajor(), fvFile.getMinor(), fvFile.getRevision(), fvFile.getPatch())) continue;
+                FirmwareVersion fvUnit = FirmwareVersion.getReference(finalFileFMVer);
+                FirmwareVersion fvFile = FirmwareVersion.getReference(localFileFMVer);
+                if (fvUnit.isOlderThan(fvFile.getMajor(), fvFile.getMinor(), fvFile.getRevision(), fvFile.getPatch())) {
+                    finalFileFMVer = localFileFMVer;
+                    foundNewFirmware = true;
+                    filename = firmwareImageList[i];
+                    continue;
+                }
+                if (!fvUnit.isSame(fvFile.getMajor(), fvFile.getMinor(), fvFile.getRevision(), fvFile.getPatch()) || FirmwareManager.compareFWVerLastOctet(FirmwareManager.getBuildNum(lastOctet), FirmwareManager.getBuildNum(localFileLastOct)) != 1) continue;
                 finalFileFMVer = localFileFMVer;
                 foundNewFirmware = true;
                 filename = firmwareImageList[i];
@@ -1215,6 +1243,53 @@
         return se;
     }
 
+    public static int compareFWVerLastOctet(String[] lastOctet1, String[] lastOctet2) {
+        int result = -1;
+        if (lastOctet1.length == 0 && lastOctet2.length == 0) {
+            return 0;
+        }
+        if (lastOctet2.length == 0) {
+            return -1;
+        }
+        if (lastOctet1.length == 0 && lastOctet2.length != 0) {
+            return 1;
+        }
+        for (int i = 0; i < lastOctet1.length; ++i) {
+            if (i >= lastOctet2.length) continue;
+            if (Integer.parseInt(lastOctet1[i]) < Integer.parseInt(lastOctet2[i])) {
+                return 1;
+            }
+            if (Integer.parseInt(lastOctet1[i]) == Integer.parseInt(lastOctet2[i])) {
+                result = -1;
+                continue;
+            }
+            return -1;
+        }
+        return result;
+    }
+
+    public static String[] getBuildNum(String lastOctet) {
+        String result = "";
+        String str = "";
+        for (int i = 0; i < lastOctet.length(); ++i) {
+            if (Character.isDigit(lastOctet.charAt(i))) {
+                str = str + lastOctet.charAt(i);
+                continue;
+            }
+            if (!str.equals("0") && !str.equals("")) {
+                result = result + str + ",";
+            }
+            str = "";
+        }
+        if (str != "0" && str != "") {
+            result = result + str;
+        }
+        if (result.endsWith(",")) {
+            result = result.substring(0, result.length() - 1);
+        }
+        return result.split(",");
+    }
+
     public String getStandardOrEnhanced(String fversion) {
         try {
             if (Integer.parseInt(fversion.substring(0, 2)) >= 22) {
@@ -1409,7 +1484,7 @@
             boolean bRetVal = true;
             if (taskManager.getTaskMethod(task) == 71) {
                 msg = "backup";
-                bRetVal = fw.postConfiguration(postData.toString(), true, fw.getCGITag(6));
+                bRetVal = fw.isGen7FW() ? fw.postConfiguration("device=0&prefSticky=false&prefsComment=&cgiaction=backupFwPrefsNow", true, fw.getCGITag(3)) : fw.postConfiguration(postData.toString(), true, fw.getCGITag(6));
             } else if (taskManager.getTaskMethod(task) == 72) {
                 msg = "restore";
                 bRetVal = fw.postConfiguration(postData.toString(), true, fw.getCGITag(7));
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/FlowManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/FlowManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/FlowManager.java	2023-09-08 15:13:13.952800190 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/FlowManager.java	2023-09-08 15:14:40.855427238 -0700
@@ -69,8 +69,8 @@
     }
 
     public String[] getNodeNames(String id) throws SQLException {
-        String query = "SELECT node_name from " + DataBaseConnectionPool.getTablePrefix() + "params p, " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 s where s.flowserver_id  = " + Integer.parseInt(id) + " AND p.IS_UNIT > " + 0 + " AND p.id = s.id";
-        Vector vector = this.getQueryResults(query);
+        String query = "SELECT node_name from " + DataBaseConnectionPool.getTablePrefix() + "params p, " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 s where s.flowserver_id  = ? AND p.IS_UNIT > " + 0 + " AND p.id = s.id";
+        Vector vector = this.getQueryResultsPS(query, new String[]{id});
         String[] str = new String[vector.size()];
         for (int i = 0; i < vector.size(); ++i) {
             String[] row = (String[])vector.elementAt(i);
@@ -82,14 +82,14 @@
     public boolean getCurrentState(String id) throws SQLException {
         String query = "SELECT DISTINCT g.ipAddress ";
         query = query + "FROM " + DataBaseConnectionPool.getTablePrefix() + "gmsvpinstances g, " + DataBaseConnectionPool.getTablePrefix() + "appflows a WHERE ";
-        query = query + "g.ipAddress = a.ipAddress and g.serial IS NOT NULL AND g.appRole <> 'FFA' AND a.flowID = " + Integer.parseInt(id) + " AND ";
+        query = query + "g.ipAddress = a.ipAddress and g.serial IS NOT NULL AND g.appRole <> 'FFA' AND a.flowID = ? AND ";
         if (DataBaseConnectionPool.isSQLServer()) {
             query = query + "DATEDIFF(SECOND,a.synctime,getdate()) ";
         } else if (DataBaseConnectionPool.isMySQL()) {
             query = query + "TIMESTAMPDIFF(SECOND,a.synctime,now()) ";
         }
         query = query + "< 1787819";
-        return this.getQueryResults(query).size() > 0;
+        return this.getQueryResultsPS(query, new String[]{id}).size() > 0;
     }
 
     public boolean IsFlowAgentInstalled() throws SQLException {
@@ -413,8 +413,8 @@
         StringBuilder query = new StringBuilder();
         try {
             SGMSUtil.debugOut((Object)("FlowManager.updateFlowRestartFlag():Inside the method " + appflowIP), 1);
-            query.append("update ").append(DataBaseConnectionPool.getTablePrefix()).append("appflows ").append(" set restart_flag = 1").append(" where ipaddress = '").append(appflowIP).append("'");
-            this.executeUpdate(query.toString());
+            query.append("update ").append(DataBaseConnectionPool.getTablePrefix()).append("appflows ").append(" set restart_flag = 1").append(" where ipaddress = ?");
+            FlowManager.executeQueryPS(query.toString(), new String[]{appflowIP});
         }
         catch (SQLException ex) {
             SGMSUtil.logError(ex, ex.getMessage(), "updateFlowRestartFlag", "FlowManager");
@@ -430,8 +430,8 @@
         StringBuilder str = new StringBuilder();
         try {
             SGMSUtil.debugOut((Object)"FlowManager.getSandwichFirewalls():Inside the method", 1);
-            query.append("select serial from ").append(DataBaseConnectionPool.getTablePrefix()).append("params where fwsSandwichSerial = '").append(sandwichSerial).append("'");
-            rs = FlowManager.executeQuery(query.toString());
+            query.append("select serial from ").append(DataBaseConnectionPool.getTablePrefix()).append("params where fwsSandwichSerial = ?");
+            rs = FlowManager.executeQueryPS(query.toString(), new String[]{sandwichSerial});
             while (rs != null && rs.next()) {
                 String serial = rs.getString(1);
                 if (excludeSerial != null && serial.equals(excludeSerial)) continue;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/FwdyndataManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/FwdyndataManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/FwdyndataManager.java	2023-09-08 15:13:13.963800615 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/FwdyndataManager.java	2023-09-08 15:14:40.865414769 -0700
@@ -182,9 +182,10 @@
         block9: {
             dyn_data = null;
             rs = null;
+            String[] dataVal = new String[]{unitId, sessionId, ownerScreenId};
             try {
-                String queryString = new String("SELECT DYNDATA, LAST_UPDATED FROM " + this.getTableName() + " WHERE UNITID = " + pool.delimitDBColumnValue(unitId) + " AND SESSIONID = " + pool.delimitDBColumnValue(sessionId) + " AND DATAOWNER = " + pool.delimitDBColumnValue(ownerScreenId));
-                rs = FwdyndataManager.executeQuery(queryString);
+                String queryString = new String("SELECT DYNDATA, LAST_UPDATED FROM " + this.getTableName() + " WHERE UNITID = ? AND SESSIONID = ? AND DATAOWNER = ?");
+                rs = FwdyndataManager.executeQueryPS(queryString, dataVal);
                 if (!rs.next()) break block9;
                 dyn_data = new String[2];
                 if (DataBaseConnectionPool.isOracle()) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/HMManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/HMManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/HMManager.java	2023-09-08 15:13:13.907798449 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/HMManager.java	2023-09-08 15:14:40.814478362 -0700
@@ -9,7 +9,6 @@
 import com.sonicwall.sgms.util.GMSHMConstants;
 import com.sonicwall.sgms.util.SGMSUtil;
 import java.sql.Date;
-import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -103,19 +102,21 @@
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Unable to fully structure code
      */
     public ArrayList<HMRecordStatus> getRecordList(ArrayList<String> sessionIdsList, ArrayList<String> unitIdList, ArrayList<String> statusList) {
-        int i;
         SGMSUtil.debugOut((Object)"HMManager.getRecordList(): Method Entry", 2);
-        ArrayList<HMRecordStatus> recordList = new ArrayList<HMRecordStatus>();
-        StringBuffer queryBuf = new StringBuffer("SELECT * FROM ");
-        queryBuf.append(SESSIONS_TABLE);
+        recordList = new ArrayList<HMRecordStatus>();
+        queryBuf = new StringBuffer("SELECT * FROM ");
+        queryBuf.append(HMManager.SESSIONS_TABLE);
         queryBuf.append(" WHERE SESSIONID IN (");
+        queryValues = new ArrayList<String>();
         for (i = 0; i < sessionIdsList.size(); ++i) {
             if (i != 0) {
                 queryBuf.append(",");
             }
-            queryBuf.append(pool.delimitDBColumnValue(sessionIdsList.get(i)));
+            queryBuf.append("?");
+            queryValues.add(sessionIdsList.get(i));
         }
         queryBuf.append(")");
         if (unitIdList != null && !unitIdList.isEmpty()) {
@@ -124,7 +125,8 @@
                 if (i != 0) {
                     queryBuf.append(",");
                 }
-                queryBuf.append(pool.delimitDBColumnValue(unitIdList.get(i)));
+                queryBuf.append("?");
+                queryValues.add(unitIdList.get(i));
             }
             queryBuf.append(")");
         }
@@ -134,15 +136,18 @@
                 if (i != 0) {
                     queryBuf.append(",");
                 }
-                queryBuf.append(pool.delimitDBColumnValue(statusList.get(i)));
+                queryBuf.append("?");
+                queryValues.add(statusList.get(i));
             }
             queryBuf.append(")");
         }
-        ResultSet rs = null;
-        HMRecordStatus hmRecord = null;
+        rs = null;
+        hmRecord = null;
         SGMSUtil.debugOut((Object)("HMManager.getRecordList(): Select Query is: " + queryBuf.toString()), 2);
         try {
-            rs = HMManager.executeQuery(queryBuf.toString());
+            qstr = queryBuf.toString();
+            queryValuesArr = queryValues.toArray(new String[0]);
+            rs = HMManager.executeQueryPS(qstr, queryValuesArr);
             if (rs != null) {
                 while (rs.next()) {
                     hmRecord = new HMRecordStatus();
@@ -154,14 +159,41 @@
                     recordList.add(hmRecord);
                 }
             }
+            ** if (rs == null) goto lbl-1000
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.debugOut("HMManager.getRecordList(): SQLException occured during select query: " + sqle.getMessage());
+                ** if (rs == null) goto lbl-1000
         }
-        finally {
+            catch (Throwable var11_13) {
             if (rs != null) {
                 DataBaseConnectionPool.freeResultSet(rs);
             }
+                throw var11_13;
+            }
+lbl-1000:
+            // 1 sources
+
+            {
+                DataBaseConnectionPool.freeResultSet(rs);
+            }
+lbl-1000:
+            // 2 sources
+
+            {
+            }
+        }
+lbl-1000:
+        // 1 sources
+
+        {
+            DataBaseConnectionPool.freeResultSet(rs);
+        }
+lbl-1000:
+        // 2 sources
+
+        {
         }
         SGMSUtil.debugOut((Object)"HMManager.getRecordList(): Method Exit", 2);
         return recordList;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/IPSManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/IPSManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/IPSManager.java	2023-09-08 15:13:13.960800499 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/IPSManager.java	2023-09-08 15:14:40.862418510 -0700
@@ -29,8 +29,10 @@
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Hashtable;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.Set;
 import java.util.StringTokenizer;
 import java.util.Vector;
 import java.util.stream.Collectors;
@@ -395,16 +397,20 @@
      */
     public Vector getChildListForGivenCategory(HttpServletRequest request, String node_id, String categoryId, int pri, String sigId, String whereClause, boolean isCategory, String tableSortColName, int tableSortInverted) {
         StringBuffer qry = new StringBuffer("");
+        ArrayList<String> queryValues = new ArrayList<String>();
         if (isCategory) {
-            qry.append("SELECT signatureName,signatureid,priority,categoryId,direction FROM " + tableName + " " + whereClause + (whereClause.length() > 0 ? " AND " : " WHERE ") + "CATEGORYID = '" + categoryId + "'");
+            qry.append("SELECT signatureName,signatureid,priority,categoryId,direction FROM " + tableName + " " + whereClause + (whereClause.length() > 0 ? " AND " : " WHERE ") + "CATEGORYID = ?");
+            queryValues.add(categoryId);
             if (pri != 0) {
-                qry.append(" AND priority = '" + new Integer(pri).toString() + "'");
+                qry.append(" AND priority = ?");
+                queryValues.add(String.valueOf(pri));
             }
             if (tableSortColName != null && tableSortColName.trim().length() > 0) {
                 qry.append(" ORDER BY " + tableSortColName + (tableSortInverted == 0 ? " asc" : " desc"));
             }
         } else {
-            qry.append("SELECT signatureName,signatureid,priority,categoryId,direction FROM " + tableName + " WHERE SIGNATUREID = '" + sigId + "'");
+            qry.append("SELECT signatureName,signatureid,priority,categoryId,direction FROM " + tableName + " WHERE SIGNATUREID = ?");
+            queryValues.add(sigId);
         }
         SGMSUtil.debugOut((Object)("Query to get child list for given category or signature id: " + qry.toString()), 3);
         Vector allAttrForChildCategories = new Vector();
@@ -424,7 +430,7 @@
         Vector<String> dirValueList = new Vector<String>();
         ResultSet rs = null;
         try {
-            rs = IPSManager.executeQuery(qry.toString());
+            rs = IPSManager.executeQueryPS(qry.toString(), queryValues.toArray(new String[0]));
             while (rs.next()) {
                 signatureNameList.addElement(rs.getString(1));
                 signatureIdList.addElement(rs.getString(2));
@@ -505,9 +511,10 @@
                 int count = this.getCount(" SELECT count(*) FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SIGNATURES WHERE id = '" + node_id + "'");
                 if (count > 0) {
                     rs = DataBaseConnectionPool.freeResultSet(rs);
-                    qry = new StringBuffer("SELECT idpSigId,idpDBDetect,idpDBPrevent,idpRuleUserInclude,idpRuleUserExclude,idpAddressInclude,idpAddressExclude,idpSchedulePrevent,idpUseCategoryLRT,idpSignatureLRT FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SIGNATURES WHERE id = '" + node_id + "'");
+                    qry = new StringBuffer("SELECT idpSigId,idpDBDetect,idpDBPrevent,idpRuleUserInclude,idpRuleUserExclude,idpAddressInclude,idpAddressExclude,idpSchedulePrevent,idpUseCategoryLRT,idpSignatureLRT FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SIGNATURES WHERE id = ?");
                     SGMSUtil.debugOut("Qry to get signatures for that row: " + qry.toString());
-                    rs = IPSManager.executeQuery(qry.toString());
+                    queryValues.add(node_id);
+                    rs = IPSManager.executeQueryPS(qry.toString(), queryValues.toArray(new String[0]));
                     while (rs.next()) {
                         sigIdValues.addElement(rs.getString(1));
                         idpDetectValues.addElement(rs.getString(2));
@@ -551,12 +558,17 @@
             allAttrForChildCategories.addElement(dirValueList);
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.printStackTrace(sqle);
             SGMSUtil.debugOut("Exception in getChildListForGivenCategory(): " + sqle.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return allAttrForChildCategories;
     }
 
@@ -568,11 +580,14 @@
         qry.append("SELECT S.signatureName, S.signatureid, S.priority, S.cId, S.CATEGORYID, A.APPID, A.APPNAME, S.DIRECTION FROM " + tableName);
         qry.append(" AS S, ").append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES AS C, ");
         qry.append(appsTableName).append(" AS A WHERE C.TYPE = 2 AND C.CID = S.CID AND A.APPID = S.APPID AND A.CID = S.CID");
+        ArrayList<String> queryValues = new ArrayList<String>();
         if (null != cID) {
-            qry.append(" AND S.CID = '").append(cID).append("'");
+            qry.append(" AND S.CID = ?");
+            queryValues.add(cID);
         }
         if (null != appID) {
-            qry.append(" AND S.APPID = '").append(appID).append("'");
+            qry.append(" AND S.APPID = ?");
+            queryValues.add(appID);
         }
         if (tableSortColName != null && tableSortColName.trim().length() > 0) {
             qry.append(" ORDER BY " + tableSortColName + (tableSortInverted == 0 ? " asc" : " desc"));
@@ -598,7 +613,7 @@
         Vector<String> directionList = new Vector<String>();
         ResultSet rs = null;
         try {
-            rs = IPSManager.executeQuery(qry.toString());
+            rs = IPSManager.executeQueryPS(qry.toString(), queryValues.toArray(new String[0]));
             while (rs.next()) {
                 signatureNameList.addElement(rs.getString(1));
                 signatureIdList.addElement(rs.getString(2));
@@ -693,9 +708,10 @@
                 int count = this.getCount(" SELECT count(*) FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SIGNATURES WHERE id = '" + node_id + "'");
                 if (count > 0) {
                     rs = DataBaseConnectionPool.freeResultSet(rs);
-                    qry = new StringBuffer("SELECT idpSigId,idpDBDetect,idpDBPrevent,idpRuleUserInclude,idpRuleUserExclude,idpAddressInclude,idpAddressExclude,idpSchedulePrevent,idpUseCategoryLRT,idpSignatureLRT FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SIGNATURES WHERE id = '" + node_id + "'");
+                    qry = new StringBuffer("SELECT idpSigId,idpDBDetect,idpDBPrevent,idpRuleUserInclude,idpRuleUserExclude,idpAddressInclude,idpAddressExclude,idpSchedulePrevent,idpUseCategoryLRT,idpSignatureLRT FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SIGNATURES WHERE id = ?");
                     SGMSUtil.debugOut("Qry to get signatures for that row: " + qry.toString());
-                    rs = IPSManager.executeQuery(qry.toString());
+                    queryValues.add(node_id);
+                    rs = IPSManager.executeQueryPS(qry.toString(), queryValues.toArray(new String[0]));
                     while (rs.next()) {
                         sigIdValues.addElement(rs.getString(1));
                         idpDetectValues.addElement(rs.getString(2));
@@ -742,12 +758,17 @@
             allAttributes.addElement(priList);
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.printStackTrace(sqle);
             SGMSUtil.debugOut("Exception in getSigListForGivenApp(): " + sqle.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return allAttributes;
     }
 
@@ -759,11 +780,14 @@
         qry.append("SELECT A.APPID, A.APPNAME, A.CID, C.CATEGORYID FROM " + appsTableName);
         qry.append(" AS A, ").append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES AS C");
         qry.append(" WHERE C.CID = A.CID");
+        ArrayList<String> queryValues = new ArrayList<String>();
         if (null != cID) {
-            qry.append(" AND A.CID = '").append(cID).append("'");
+            qry.append(" AND A.CID = ?");
+            queryValues.add(cID);
         }
         if (null != appID) {
-            qry.append(" AND A.APPID = '").append(appID).append("'");
+            qry.append(" AND A.APPID = ?");
+            queryValues.add(appID);
         }
         if (tableSortColName != null && tableSortColName.trim().length() > 0) {
             qry.append(" ORDER BY " + tableSortColName + (tableSortInverted == 0 ? " asc" : " desc"));
@@ -786,7 +810,7 @@
         Vector<String> appNameList = new Vector<String>();
         ResultSet rs = null;
         try {
-            rs = IPSManager.executeQuery(qry.toString());
+            rs = IPSManager.executeQueryPS(qry.toString(), queryValues.toArray(new String[0]));
             while (rs.next()) {
                 appIdList.addElement(rs.getString(1));
                 appNameList.addElement(rs.getString(2));
@@ -878,9 +902,9 @@
                 int count = this.getCount(" SELECT count(*) FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_APPLICATIONS WHERE id = '" + node_id + "'");
                 if (count > 0) {
                     rs = DataBaseConnectionPool.freeResultSet(rs);
-                    qry = new StringBuffer("SELECT appid,acApplicationPrevent,acApplicationDetect,acApplicationUserInc,acApplicationUserExc,acApplicationAddrInc,acApplicationAddrExc,acApplicationSchPrev,acUseApplicationLRT,acApplicationSigLRT FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_APPLICATIONS WHERE id = '" + node_id + "'");
+                    qry = new StringBuffer("SELECT appid,acApplicationPrevent,acApplicationDetect,acApplicationUserInc,acApplicationUserExc,acApplicationAddrInc,acApplicationAddrExc,acApplicationSchPrev,acUseApplicationLRT,acApplicationSigLRT FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_APPLICATIONS WHERE id = ?");
                     SGMSUtil.debugOut("Qry to get applications for that row: " + qry.toString());
-                    rs = IPSManager.executeQuery(qry.toString());
+                    rs = IPSManager.executeQueryPS(qry.toString(), new String[]{node_id});
                     while (rs.next()) {
                         appIdValues.addElement(rs.getString(1));
                         acApplicationPreventValues.addElement(rs.getString(2));
@@ -923,12 +947,17 @@
             allAttributes.addElement(appNameList);
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.printStackTrace(sqle);
             SGMSUtil.debugOut("Exception in getAppListForGivenCategory(): " + sqle.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return allAttributes;
     }
 
@@ -1096,12 +1125,13 @@
                         break block13;
                     }
                 }
-                qry = new StringBuffer("SELECT cid,idpCategoryPrevent,idpCategoryDetect,idpCategoryUserInclude,idpCategoryUserExclude,idpCategoryAddressInclude,idpCategoryAddressExclude,idpCategorySchedulePrevent,idpUseGlobalLRT,idpCategoryLRT,acUseGlobalLRT FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_IPS_CATEGORIES WHERE id = '" + node_id + "'");
+                qry = new StringBuffer("SELECT cid,idpCategoryPrevent,idpCategoryDetect,idpCategoryUserInclude,idpCategoryUserExclude,idpCategoryAddressInclude,idpCategoryAddressExclude,idpCategorySchedulePrevent,idpUseGlobalLRT,idpCategoryLRT,acUseGlobalLRT FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_IPS_CATEGORIES WHERE id = ?");
+                String[] queryValues = new String[]{node_id};
                 if (catName != null && cidList.size() > 0) {
                     qry.append(" AND cid = '").append((String)cidList.elementAt(0)).append("'");
                 }
                 SGMSUtil.debugOut("Qry to get category for that row: " + qry.toString());
-                rs = IPSManager.executeQuery(qry.toString());
+                rs = IPSManager.executeQueryPS(qry.toString(), queryValues);
                 while (rs.next()) {
                     String catCid = rs.getString(1);
                     int cidIndex = cidList.indexOf(catCid);
@@ -1368,22 +1398,29 @@
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Loose catch block
      */
     public String whereClauseForSignatureList(String domainID, String node_id) {
-        ResultSet rs = null;
+        String rangeStr;
+        ResultSet rs;
+        block13: {
+            rs = null;
         StringBuffer queryStr = new StringBuffer();
-        String rangeStr = "";
+            rangeStr = "";
         DataBaseConnectionPool dbpool = DataBaseConnectionPool.getReference();
+            ArrayList<String> queryValues = new ArrayList<String>();
         queryStr.append("SELECT ipsSigList FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_IPSSIGLIST WHERE ID ");
         if (!(null == domainID || domainID.isEmpty() || node_id.startsWith("UT") || SGMSUtil.isHosted() && domainID.equals("DMN0000000000000000000000001"))) {
-            queryStr.append("IN (SELECT id FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE domainID = '" + domainID + "')");
+                queryStr.append("IN (SELECT id FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE domainID = ?");
+                queryValues.add(domainID);
         } else {
-            queryStr.append("= '" + node_id + "'");
+                queryStr.append("= ?");
+                queryValues.add(node_id);
         }
         SGMSUtil.debugOut((Object)("IPSManager.whereClauseForSignatureList: Query: " + queryStr.toString()), 3);
         try {
-            rs = IPSManager.executeQuery(queryStr.toString());
-            if (rs != null) {
+                rs = IPSManager.executeQueryPS(queryStr.toString(), queryValues.toArray(new String[0]));
+                if (rs == null) break block13;
                 ArrayList<String> list = new ArrayList<String>();
                 int ctr = 0;
                 String str = "";
@@ -1398,18 +1435,24 @@
                 List listUnique = list.stream().distinct().collect(Collectors.toList());
                 rangeStr = listUnique.stream().collect(Collectors.joining(","));
             }
-        }
         catch (SQLException sqle) {
             SGMSUtil.printStackTrace(sqle);
             SGMSUtil.debugOut("IPSManager.whereClauseForSignatureList: SQLException while retrieving ipsSigList info from params2 table: " + sqle.getMessage());
+                rs = DataBaseConnectionPool.freeResultSet(rs);
         }
         catch (Exception e) {
             SGMSUtil.printStackTrace(e);
             SGMSUtil.debugOut("IPSManager.whereClauseForSignatureList: Exception while retrieving ipsSigList info from params2 table: " + e.getMessage());
+                {
+                    catch (Throwable throwable) {
+                        rs = DataBaseConnectionPool.freeResultSet(rs);
+                        throw throwable;
+                    }
         }
-        finally {
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         StringBuffer sbFinalClause = new StringBuffer();
         SGMSUtil.debugOut((Object)("IPSManager.whereClauseForSignatureList: Range str: " + rangeStr), 3);
         if (rangeStr != null && !rangeStr.equalsIgnoreCase("null") && rangeStr.trim().length() > 0) {
@@ -1481,8 +1524,9 @@
         ResultSet rs = null;
         try {
             StringBuffer query = new StringBuffer();
-            query.append(" SELECT CID, CATEGORYID, TYPE, CATDESC FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES WHERE TYPE = '").append(type).append("' ORDER BY CATEGORYID");
-            rs = IPSManager.executeQuery(query.toString());
+            query.append(" SELECT CID, CATEGORYID, TYPE, CATDESC FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES WHERE TYPE = ? ORDER BY CATEGORYID");
+            String[] queryValues = new String[]{type};
+            rs = IPSManager.executeQueryPS(query.toString(), queryValues);
             IPSCategory cat = null;
             while (rs.next()) {
                 cat = new IPSCategory();
@@ -1522,9 +1566,11 @@
         try {
             StringBuffer sbQuery = new StringBuffer();
             sbQuery.append(" SELECT CID, CATEGORYID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES WHERE TYPE = '").append(type).append("'");
-            Vector vecQuery = this.getQueryForInClauseIDs(cIDs, "CID", sbQuery);
-            for (String query : vecQuery) {
-                rs = IPSManager.executeQuery(query.toString());
+            TableManager.ResultPair<Vector<String>, Vector<List<String>>> resultPair = this.getQueryForInClauseIDs(cIDs, "CID", sbQuery);
+            for (int i = 0; i < ((Vector)resultPair.keys).size(); ++i) {
+                String query = (String)((Vector)resultPair.keys).elementAt(i);
+                List psValues = (List)((Vector)resultPair.values).elementAt(i);
+                rs = IPSManager.executeQueryPS(query, psValues.toArray(new String[psValues.size()]));
                 while (rs.next()) {
                     String cId = rs.getString(1);
                     String category2 = rs.getString(2);
@@ -1562,8 +1608,9 @@
             rs = null;
             try {
                 StringBuffer query = new StringBuffer();
-                query.append(" SELECT CID, CATEGORYID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES WHERE cID = '").append(cID).append("'");
-                rs = IPSManager.executeQuery(query.toString());
+                query.append(" SELECT CID, CATEGORYID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES WHERE cID = ?");
+                String[] queryValues = new String[]{cID};
+                rs = IPSManager.executeQueryPS(query.toString(), queryValues);
                 if (!rs.next()) break block4;
                 String cId = rs.getString(1);
                 String category2 = rs.getString(2);
@@ -1605,9 +1652,11 @@
             if (null != cID && cID.trim().length() > 0) {
                 sbQuery.append(" AND S.CID = ").append(cID);
             }
-            Vector vecQuery = this.getQueryForInClauseIDs(sigIDs, "S.SIGNATUREID", sbQuery);
-            for (String query : vecQuery) {
-                rs = IPSManager.executeQuery(query.toString());
+            TableManager.ResultPair<Vector<String>, Vector<List<String>>> resultPair = this.getQueryForInClauseIDs(sigIDs, "S.SIGNATUREID", sbQuery);
+            for (int i = 0; i < ((Vector)resultPair.keys).size(); ++i) {
+                String query = (String)((Vector)resultPair.keys).elementAt(i);
+                List psValues = (List)((Vector)resultPair.values).elementAt(i);
+                rs = IPSManager.executeQueryPS(query, psValues.toArray(new String[psValues.size()]));
                 while (rs.next()) {
                     String cName = rs.getString(1);
                     String sId = rs.getString(2);
@@ -1737,11 +1786,13 @@
         try {
             StringBuffer query = new StringBuffer();
             query.append("SELECT APPID, APPNAME, CID, RISK FROM ").append(appsTableName);
+            String[] queryValues = null;
             if (null != cID && cID.trim().length() > 0) {
-                query.append(" WHERE CID = ").append(cID);
+                query.append(" WHERE CID = ?");
+                queryValues = new String[]{cID};
             }
             query.append(" ORDER BY APPNAME");
-            rs = IPSManager.executeQuery(query.toString());
+            rs = IPSManager.executeQueryPS(query.toString(), queryValues);
             ApplicationInfo app = null;
             while (rs.next()) {
                 app = new ApplicationInfo();
@@ -1784,9 +1835,11 @@
             if (null != cID && cID.trim().length() > 0) {
                 sbQuery.append(" AND A.CID = ").append(cID);
             }
-            Vector vecQuery = this.getQueryForInClauseIDs(appIDs, "A.APPID", sbQuery);
-            for (String query : vecQuery) {
-                rs = IPSManager.executeQuery(query.toString());
+            TableManager.ResultPair<Vector<String>, Vector<List<String>>> resultPair = this.getQueryForInClauseIDs(appIDs, "A.APPID", sbQuery);
+            for (int i = 0; i < ((Vector)resultPair.keys).size(); ++i) {
+                String query = (String)((Vector)resultPair.keys).elementAt(i);
+                List psValues = (List)((Vector)resultPair.values).elementAt(i);
+                rs = IPSManager.executeQueryPS(query, psValues.toArray(new String[psValues.size()]));
                 while (rs.next()) {
                     String cName = rs.getString(1);
                     String appID = rs.getString(2);
@@ -1830,9 +1883,11 @@
             if (null != appID && appID.trim().length() > 0) {
                 sbQuery.append(" AND S.APPID = ").append(appID);
             }
-            Vector vecQuery = this.getQueryForInClauseIDs(sigIDs, "S.SIGNATUREID", sbQuery);
-            for (String query : vecQuery) {
-                rs = IPSManager.executeQuery(query.toString());
+            TableManager.ResultPair<Vector<String>, Vector<List<String>>> resultPair = this.getQueryForInClauseIDs(sigIDs, "S.SIGNATUREID", sbQuery);
+            for (int i = 0; i < ((Vector)resultPair.keys).size(); ++i) {
+                String query = (String)((Vector)resultPair.keys).elementAt(i);
+                List psValues = (List)((Vector)resultPair.values).elementAt(i);
+                rs = IPSManager.executeQueryPS(query, psValues.toArray(new String[psValues.size()]));
                 while (rs.next()) {
                     String cName = rs.getString(1);
                     String sId = rs.getString(2);
@@ -1859,8 +1914,9 @@
         return data;
     }
 
-    private Vector getQueryForInClauseIDs(String ids, String colName, StringBuffer sbQuery) {
+    private TableManager.ResultPair<Vector<String>, Vector<List<String>>> getQueryForInClauseIDs(String ids, String colName, StringBuffer sbQuery) {
         Vector<String> vecQuery = new Vector<String>();
+        Vector<List<String>> vecValues = new Vector<List<String>>();
         if (null != ids && ids.trim().length() > 0) {
             sbQuery.append(" AND ").append(colName).append(" IN (");
             Vector<String> vecIDs = new Vector<String>();
@@ -1869,14 +1925,19 @@
             for (int i = 0; i < count; ++i) {
                 vecIDs.addElement(st.nextToken());
             }
-            Vector<String> vec = this.getValuesInsertedForInClause(vecIDs, true);
-            for (String inClause : vec) {
+            LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause(vecIDs);
+            Set<String> keySet = inClauseMap.keySet();
+            for (String questionMarks : keySet) {
+                String inClause = questionMarks.substring(1, questionMarks.length());
                 vecQuery.addElement(sbQuery.toString() + inClause + ")");
+                List<String> psValues = inClauseMap.get(questionMarks);
+                vecValues.addElement(psValues);
             }
         } else {
             vecQuery.addElement(sbQuery.toString());
+            vecValues.addElement(new ArrayList());
         }
-        return vecQuery;
+        return new TableManager.ResultPair<Vector<String>, Vector<List<String>>>(this, vecQuery, vecValues);
     }
 
     /*
@@ -1886,10 +1947,11 @@
         StringBuffer sb = new StringBuffer("SELECT TYPE FROM ");
         sb.append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES");
         sb.append(" WHERE CID IN (SELECT CID FROM ").append(tableName);
-        sb.append(" WHERE SIGNATUREID = ").append(signId).append(")");
+        sb.append(" WHERE SIGNATUREID = ?)");
         ResultSet rs = null;
+        String[] queryValues = new String[]{signId};
         try {
-            rs = IPSManager.executeQuery(sb.toString());
+            rs = IPSManager.executeQueryPS(sb.toString(), queryValues);
             if (rs.next()) {
                 String string = rs.getString(1);
                 return string;
@@ -1910,32 +1972,46 @@
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Enabled force condition propagation
+     * Lifted jumps to return sites
      */
     public String getCategoryType(String cid) {
+        String string;
+        ResultSet rs;
+        block5: {
         StringBuffer sb = new StringBuffer("SELECT TYPE FROM ");
         sb.append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES");
         sb.append(" WHERE CID IN (SELECT CID FROM ").append(tableName);
-        sb.append(" WHERE CID = ").append(cid).append(")");
-        ResultSet rs = null;
-        try {
-            rs = IPSManager.executeQuery(sb.toString());
-            if (rs.next()) {
-                String string = rs.getString(1);
-                return string;
+            sb.append(" WHERE CID = ?)");
+            rs = null;
+            String[] queryValues = new String[]{cid};
+            rs = IPSManager.executeQueryPS(sb.toString(), queryValues);
+            if (!rs.next()) break block5;
+            String string2 = rs.getString(1);
+            if (rs == null) return string2;
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+            return string2;
             }
-            String string = TYPE_INVALID;
-            return string;
+        try {
+            string = TYPE_INVALID;
+            if (rs == null) return string;
         }
         catch (SQLException e) {
+            try {
             SGMSUtil.debugOut("Exception while retrieving Category type for a given Category id from SIGNATURES table: " + e.getMessage());
+                if (rs == null) return TYPE_IPS;
         }
-        finally {
-            if (rs != null) {
+            catch (Throwable throwable) {
+                if (rs == null) throw throwable;
                 rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
             }
-        }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
         return TYPE_IPS;
     }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+        return string;
+    }
 
     public void resetACSettings(String nodeID, String viewid, ApplianceInfoData aidTypeOfUnit) {
         ViewsManager vwm = (ViewsManager)ViewsManager.getReference(pool);
@@ -1976,8 +2052,9 @@
         String cId = "";
         try {
             StringBuffer query = new StringBuffer();
-            query.append(" SELECT CID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("IPS_CATEGORIES WHERE CATEGORYID = '").append(categoryName).append("'");
-            rs = IPSManager.executeQuery(query.toString());
+            String selectQuery = "SELECT CID FROM " + DataBaseConnectionPool.getTablePrefix() + "IPS_CATEGORIES WHERE CATEGORYID = ?";
+            String[] queryValues = new String[]{categoryName};
+            rs = IPSManager.executeQueryPS(selectQuery, queryValues);
             while (rs.next()) {
                 cId = rs.getString(1);
             }
@@ -2011,24 +2088,30 @@
         try {
             StringBuffer sbQuery = new StringBuffer();
             sbQuery.append(" SELECT A.APPID, A.APPNAME, S.SIGNATUREID, S.SIGNATURENAME, S.CATEGORYID, S.TECH, S.RISK FROM ").append(tableName).append(" AS S, ").append(appsTableName).append(" AS A ").append(" WHERE S.APPID = A.APPID ");
+            ArrayList<String> queryValues = new ArrayList<String>();
             if (null != risks && risks.trim().length() > 0) {
-                sbQuery.append(" AND S.RISK IN (").append(risks).append(")");
+                sbQuery.append(" AND S.RISK IN (?)");
+                queryValues.add(risks);
             }
             if (null != techs && techs.trim().length() > 0) {
-                sbQuery.append(" AND S.TECH IN (").append(techs).append(")");
+                sbQuery.append(" AND S.TECH IN (?)");
+                queryValues.add(techs);
             }
             if (null != cIDs && cIDs.trim().length() > 0) {
-                sbQuery.append(" AND S.CID IN (").append(cIDs).append(")");
+                sbQuery.append(" AND S.CID IN (?)");
+                queryValues.add(cIDs);
             }
             if (null != search && search.trim().length() > 0) {
-                sbQuery.append(" AND (A.APPNAME LIKE '%").append(search).append("%' OR S.SIGNATURENAME LIKE '%").append(search).append("%')");
+                sbQuery.append(" AND (A.APPNAME LIKE ? OR S.SIGNATURENAME LIKE ?)");
+                queryValues.add("%" + search + "%");
+                queryValues.add("%" + search + "%");
             }
             if (orderBy == null || orderBy.trim().length() == 0) {
                 sbQuery.append(" ORDER BY A.APPNAME asc");
             } else {
                 sbQuery.append(" ORDER BY " + orderBy + (sortOrder == 0 ? " asc" : " desc"));
             }
-            rs = IPSManager.executeQuery(sbQuery.toString());
+            rs = IPSManager.executeQueryPS(sbQuery.toString(), queryValues.toArray(new String[0]));
             while (rs.next()) {
                 IPSSignature signature = new IPSSignature();
                 signature.signatureAppID = rs.getString(1);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/LDAPEntryManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/LDAPEntryManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/LDAPEntryManager.java	2023-09-08 15:13:13.913798681 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/LDAPEntryManager.java	2023-09-08 15:14:40.823467140 -0700
@@ -209,10 +209,10 @@
     private Set<LDAPUserInfo> getGroupEntries(String nodeID, String sessionID, int source) {
         HashSet<LDAPUserInfo> groups = new HashSet<LDAPUserInfo>();
         ResultSet rs = null;
-        StringBuilder query = new StringBuilder("SELECT GROUP_TOKEN, LOCATION, NAME, GROUPTYPE, MEMBERS");
-        query.append(" FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(SW_LDAP_GROUP_ENTRIES).append(" WHERE ID = '").append(nodeID).append("'").append(" AND SESSION_ID = '").append(sessionID).append("' AND SOURCE = '").append(source).append("'");
+        String query = "SELECT GROUP_TOKEN, LOCATION, NAME, GROUPTYPE, MEMBERS FROM " + DataBaseConnectionPool.getTablePrefix() + SW_LDAP_GROUP_ENTRIES + " WHERE ID = ? AND SESSION_ID = ? AND SOURCE = ?";
+        String[] queryValues = new String[]{nodeID, sessionID, String.valueOf(source)};
         try {
-            rs = LDAPEntryManager.executeQuery(query.toString());
+            rs = LDAPEntryManager.executeQueryPS(query.toString(), queryValues);
             while (rs.next()) {
                 LDAPUserInfo grp = new LDAPUserInfo();
                 grp.setName(SGMSUtil.urlDecode(rs.getString("NAME")));
@@ -337,13 +337,17 @@
     }
 
     public boolean clearEntryTable(String nodeID, String sessionID, int source, String tableName) {
+        String[] queryValues;
         StringBuilder sb = new StringBuilder();
-        sb.append("DELETE FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(tableName).append(" WHERE ID = '").append(nodeID).append("' AND SESSION_ID = '").append(sessionID).append("'");
+        sb.append("DELETE FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(tableName).append(" WHERE ID = ? AND SESSION_ID = ?");
         if (source != -1) {
-            sb.append(" AND SOURCE = '").append(source).append("'");
+            sb.append("AND SOURCE = ?");
+            queryValues = new String[]{nodeID, sessionID, String.valueOf(source)};
+        } else {
+            queryValues = new String[]{nodeID, sessionID};
         }
         try {
-            this.executeUpdate(sb.toString());
+            this.executeUpdatePS(sb.toString(), queryValues);
             SGMSUtil.debugOut("Cleared LDAP entry table: " + tableName);
         }
         catch (SQLException e) {
@@ -356,15 +360,26 @@
 
     public boolean clearLDAPEntryTable(String nodeID, String sessionID, int source, String tableName, String[] ldapServers) {
         StringBuilder sb = new StringBuilder();
-        sb.append("DELETE FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(tableName).append(" WHERE ID = '").append(nodeID).append("' AND SESSION_ID = '").append(sessionID).append("'");
+        sb.append("DELETE FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(tableName).append(" WHERE ID = ? AND SESSION_ID = ?");
+        ArrayList<String> queryValues = new ArrayList<String>();
+        queryValues.add(nodeID);
+        queryValues.add(sessionID);
         if (source != -1) {
-            sb.append(" AND SOURCE = '").append(source).append("'");
+            sb.append(" AND SOURCE = ?");
+            queryValues.add(String.valueOf(source));
+        }
+        if (ldapServers != null && ldapServers.length > 0) {
+            sb.append(" AND LDAP_SERVER IN (");
+            for (int i = 0; i < ldapServers.length; ++i) {
+                sb.append("?");
+                queryValues.add(ldapServers[i]);
+                if (i >= ldapServers.length - 1) continue;
+                sb.append(",");
         }
-        if (null != ldapServers && ldapServers.length > 0) {
-            sb.append(" AND LDAP_SERVER in (").append(StringUtils.join((Object[])ldapServers, ",")).append(")");
+            sb.append(")");
         }
         try {
-            this.executeUpdate(sb.toString());
+            this.executeUpdatePS(sb.toString(), queryValues.toArray(new String[0]));
             SGMSUtil.debugOut("Cleared LDAP entry table: " + tableName);
         }
         catch (SQLException e) {
@@ -385,11 +400,12 @@
             query.append(", MEMBERS");
         }
         query.append(", GROUP_TOKEN, IMMUTABLE_ID, GROUPTYPE, MEMBER_COUNT");
-        query.append(" FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(SW_LDAP_GROUP_ENTRIES).append(" WHERE ID = '").append(nodeID).append("'").append(" AND SESSION_ID = '").append(sessionID).append("'").append(" AND SOURCE = '").append(source).append("'");
+        query.append(" FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(SW_LDAP_GROUP_ENTRIES).append(" WHERE ID = ? AND SESSION_ID = ? AND SOURCE = ?");
+        String[] queryValues = new String[]{nodeID, sessionID, String.valueOf(source)};
         ResultSet rs = null;
         LinkedList<LDAPUserInfo> list = new LinkedList<LDAPUserInfo>();
         try {
-            rs = LDAPEntryManager.executeQuery(query.toString());
+            rs = LDAPEntryManager.executeQueryPS(query.toString(), queryValues);
             while (rs.next()) {
                 LDAPUserInfo info = new LDAPUserInfo();
                 info.setName(SGMSUtil.urlDecode(rs.getString("NAME")));
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/LDAPUserManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/LDAPUserManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/LDAPUserManager.java	2023-09-08 15:13:13.900798178 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/LDAPUserManager.java	2023-09-08 15:14:40.808485843 -0700
@@ -2624,14 +2624,14 @@
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
-    private List<LDAPUserInfo> fetchCurrentUserGroups(String nodeID, String directoryType) {
+    public List<LDAPUserInfo> fetchCurrentUserGroups(String nodeID, String directoryType) {
         StringBuilder query = new StringBuilder();
-        query.append("SELECT userGroupObjId, userGroupObjGroupType, userGroupObjLdapLocn FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_LOCAL_GROUPS WHERE ID='").append(nodeID).append("'");
-        query.append(" AND userGroupObjDirectoryType='").append(directoryType).append("'");
+        query.append("SELECT userGroupObjId, userGroupObjGroupType, userGroupObjLdapLocn FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_LOCAL_GROUPS WHERE ID= ?");
+        query.append(" AND userGroupObjDirectoryType= ?");
         LinkedList<LDAPUserInfo> list = new LinkedList<LDAPUserInfo>();
         ResultSet rs = null;
         try {
-            rs = LDAPUserManager.executeQuery(query.toString());
+            rs = LDAPUserManager.executeQueryPS(query.toString(), new String[]{nodeID, directoryType});
             while (rs.next()) {
                 LDAPUserInfo grp = new LDAPUserInfo();
                 grp.setName(SGMSUtil.urlDecode(rs.getString("userGroupObjId")));
@@ -2642,14 +2642,20 @@
             }
         }
         catch (SQLException e) {
+            List<LDAPUserInfo> list2;
+            try {
             log.log("LDAPUserManager", "fetchCurrentUserGroups", e);
             SGMSUtil.debugOut("\nError occured when fetching user groups from database." + e.getMessage());
-            List<LDAPUserInfo> list2 = null;
-            return list2;
+                list2 = null;
+            }
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
-        finally {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+            return list2;
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         SGMSUtil.debugOut((Object)("LDAPUserManager.fetchCurrentUserGroups(): Number of groups: " + list.size()), 3);
         return list;
     }
@@ -2802,13 +2808,13 @@
         return mirorInfoHolder;
     }
 
-    private boolean updateLastSyncTime(String nodeID, String directoryType) {
+    public boolean updateLastSyncTime(String nodeID, String directoryType) {
         SGMSUtil.debugOut((Object)("LDAPUserManager.fetchLDAPUsers(): entered for Node:" + nodeID + " Directory type: " + directoryType), 4);
         try {
             StringBuilder query = new StringBuilder("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS8 SET ");
             query.append(DIRECTORY_TYPE_LDAP.equals(directoryType) ? "LAST_LDAP_SYNC" : "LAST_GOOGLE_SYNC").append("= ").append(pool.delimitDBColumnValue(LDAPUserManager.toSqlDate(new Date())));
-            query.append(" WHERE ID ='").append(nodeID).append("'");
-            int updateCount = this.executeUpdate(query.toString());
+            query.append(" WHERE ID = ?");
+            int updateCount = this.executeUpdatePS(query.toString(), nodeID);
             return 1 == updateCount;
         }
         catch (Exception e) {
@@ -3021,9 +3027,9 @@
         try {
             StringBuilder query = new StringBuilder("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS8 SET ");
             query.append(columnName).append(" = ").append(pool.delimitDBColumnValue(LDAPUserManager.toSqlDate(new Date())));
-            query.append(" WHERE ID ='").append(nodeID).append("'");
+            query.append(" WHERE ID = ?");
             SGMSUtil.debugOut((Object)("LDAPusermanager: setEntryTime: " + query.toString()), 3);
-            this.executeUpdate(query.toString());
+            this.executeUpdatePS(query.toString(), nodeID);
         }
         catch (Exception e) {
             log.log("LDAPUserManager", "setEntryTime", e);
@@ -3041,8 +3047,8 @@
             rs = null;
             dateValue = null;
             try {
-                StringBuilder selquery = new StringBuilder("SELECT ID,").append(columnName).append(" FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS8 WHERE ID = '").append(nodeID).append("' AND ").append(columnName).append(" IS NOT NULL");
-                rs = LDAPUserManager.executeQuery(selquery.toString());
+                StringBuilder selquery = new StringBuilder("SELECT ID,").append(columnName).append(" FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS8 WHERE ID = ? AND ").append(columnName).append(" IS NOT NULL");
+                rs = LDAPUserManager.executeQueryWithValue(selquery.toString(), nodeID);
                 if (!rs.next()) break block4;
                 String dt = rs.getString(columnName);
                 dateValue = SGMSUtil.getDateInTimeZone(ParamsManager.fromSqlDate(dt), "UTC", null);
@@ -3066,10 +3072,10 @@
     public void updateSchemaInfo(String nodeID, String schemaName) {
         try {
             StringBuilder query = new StringBuilder("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS8 SET");
-            query.append(" ldapSchemaName = '").append(schemaName).append("'");
-            query.append(" WHERE ID ='").append(nodeID).append("'");
+            query.append(" ldapSchemaName = ?");
+            query.append(" WHERE ID = ?");
             SGMSUtil.debugOut((Object)("LDAPUserManager: updateSchemaInfo: " + query.toString()), 3);
-            this.executeUpdate(query.toString());
+            this.executeUpdatePS(query.toString(), new String[]{schemaName, nodeID});
         }
         catch (Exception e) {
             log.log("LDAPUserManager", "updateSchemaInfo", e);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/LiveMonitorManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/LiveMonitorManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/LiveMonitorManager.java	2023-09-08 15:13:13.926799184 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/LiveMonitorManager.java	2023-09-08 15:14:40.836450930 -0700
@@ -396,22 +396,27 @@
      */
     public String getLiveMonitorRefreshInterval(String userID, String domainID) throws SQLException {
         String liveMonitorRefreshInterval = "";
-        String query = "SELECT liveMonitorRefreshInterval FROM " + DataBaseConnectionPool.getTablePrefix() + USERS_TABLE + " WHERE id = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "SELECT liveMonitorRefreshInterval FROM " + DataBaseConnectionPool.getTablePrefix() + USERS_TABLE + " WHERE id = ? AND domainID = ?";
         SGMSUtil.debugOut((Object)("LiveMonitorManager: getLiveMonitorRefreshInterval query: " + query), 3);
         ResultSet rs = null;
         try {
-            rs = LiveMonitorManager.executeQuery(query);
+            rs = LiveMonitorManager.executeQueryPS(query, new String[]{userID, domainID});
             while (rs.next()) {
                 liveMonitorRefreshInterval = rs.getString("liveMonitorRefreshInterval");
             }
         }
         catch (SQLException sqe) {
+            try {
             SGMSUtil.debugOut("AlertMonitorManager.getLiveMonitorRefreshInterval(), query: " + query + "\n" + sqe.getMessage());
             SGMSUtil.printStackTrace(sqe);
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return liveMonitorRefreshInterval;
     }
 
@@ -420,22 +425,27 @@
      */
     public String getLiveMonitorBarStatus(String userID, String domainID) throws SQLException {
         String liveMonitorBarAutoHideStatus = "";
-        String query = "SELECT liveMonitorBarAutoHideStatus FROM " + DataBaseConnectionPool.getTablePrefix() + USERS_TABLE + " WHERE id = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "SELECT liveMonitorBarAutoHideStatus FROM " + DataBaseConnectionPool.getTablePrefix() + USERS_TABLE + " WHERE id = ? AND domainID = ?";
         SGMSUtil.debugOut((Object)("LiveMonitorManager: getLiveMonitorBarStatus query: " + query), 3);
         ResultSet rs = null;
         try {
-            rs = LiveMonitorManager.executeQuery(query);
+            rs = LiveMonitorManager.executeQueryPS(query, new String[]{userID, domainID});
             while (rs.next()) {
                 liveMonitorBarAutoHideStatus = rs.getString("liveMonitorBarAutoHideStatus");
             }
         }
         catch (SQLException sqe) {
+            try {
             SGMSUtil.debugOut("LiveMonitorManager.getLiveMonitorBarStatus(), query: " + query + "\n" + sqe.getMessage());
             SGMSUtil.printStackTrace(sqe);
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return liveMonitorBarAutoHideStatus;
     }
 
@@ -1140,22 +1150,27 @@
      */
     public String getLiveMonitorAutoScrollStatus(String userID, String domainID) throws SQLException {
         String liveMonitorAutoScrollStatus = "";
-        String query = "SELECT liveMonitorAutoScrollStatus FROM " + DataBaseConnectionPool.getTablePrefix() + USERS_TABLE + " WHERE id = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "SELECT liveMonitorAutoScrollStatus FROM " + DataBaseConnectionPool.getTablePrefix() + USERS_TABLE + " WHERE id = ? AND domainID = ?";
         SGMSUtil.debugOut((Object)("LiveMonitorManager: getLiveMonitorAutoScrollStatus query: " + query), 3);
         ResultSet rs = null;
         try {
-            rs = LiveMonitorManager.executeQuery(query);
+            rs = LiveMonitorManager.executeQueryPS(query, new String[]{userID, domainID});
             while (rs.next()) {
                 liveMonitorAutoScrollStatus = rs.getString("liveMonitorAutoScrollStatus");
             }
         }
         catch (SQLException sqe) {
+            try {
             SGMSUtil.debugOut("LiveMonitorManager.getLiveMonitorAutoScrollStatus(), query: " + query + "\n" + sqe.getMessage());
             SGMSUtil.printStackTrace(sqe);
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return liveMonitorAutoScrollStatus;
     }
 
@@ -1759,6 +1774,7 @@
         String SW_IND_HM_PARAMSTableName = DataBaseConnectionPool.getTablePrefix() + "SW_IND_HM_PARAMS";
         String unitPermsTableName = DataBaseConnectionPool.getTablePrefix() + "UNIT_PERMS";
         String[] columns = new String[]{paramsTableName + ".ID", "SERIAL", "NODE_NAME"};
+        ArrayList<String> psValues = new ArrayList<String>();
         StringBuffer query = new StringBuffer("SELECT ");
         for (int j = 0; j < columns.length; ++j) {
             query.append(columns[j]);
@@ -1770,16 +1786,19 @@
         if (!isUserSuperAdmin) {
             if (!isAdministrator) {
                 query.append(" AND " + paramsTableName + ".id IN (SELECT unit_id from " + unitPermsTableName);
-                query.append(" WHERE user_id = '" + userID + "' AND domainID='" + domainID + "')");
+                query.append(" WHERE user_id = ? AND domainID= ?)");
+                psValues.add(userID);
+                psValues.add(domainID);
             }
-            query.append(" AND ( domainID=" + pool.delimitDBColumnValue(domainID) + ")");
+            query.append(" AND ( domainID=?)");
+            psValues.add(domainID);
         }
         query.append(" AND " + paramsTableName + ".id = " + params1TableName + ".id AND " + paramsTableName + ".id = " + SW_IND_PARAMS4TableName + ".id AND " + paramsTableName + ".id = " + SW_IND_PARAMS5TableName + ".id AND " + paramsTableName + ".id = " + SW_IND_HM_PARAMSTableName + ".id");
         query.append(" ORDER BY NODE_NAME");
         SGMSUtil.debugOut("LiveMonitorManager: getUnitsForUser: Query: " + query);
         ArrayList<LiveMonitorUnitObjectInfo> unitList = new ArrayList<LiveMonitorUnitObjectInfo>();
         try {
-            Vector rows = this.getQueryResults(query.toString());
+            Vector rows = this.getQueryResultsPS(query.toString(), psValues.toArray(new String[psValues.size()]));
             for (int i = 0; i < rows.size(); ++i) {
                 String[] temp = (String[])rows.elementAt(i);
                 LiveMonitorUnitObjectInfo liveMonitorUnitInfo = new LiveMonitorUnitObjectInfo();
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/LogsManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/LogsManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/LogsManager.java	2023-09-08 15:13:13.911798603 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/LogsManager.java	2023-09-08 15:14:40.820470880 -0700
@@ -21,6 +21,7 @@
 import java.net.UnknownHostException;
 import java.sql.ResultSet;
 import java.sql.SQLException;
+import java.util.ArrayList;
 import java.util.StringTokenizer;
 import java.util.Vector;
 import java.util.logging.Level;
@@ -652,9 +653,11 @@
             tableName = this.constructTableName();
         }
         StringBuffer update_str = new StringBuffer("DELETE FROM " + tableName + " WHERE ( ");
+        ArrayList<String> psValues = new ArrayList<String>();
         int nfields = keyfields.length;
         for (int i = 0; i < nfields; ++i) {
-            update_str.append(keyfields[i] + operations[i] + pool.delimitDBColumnValue(keyvalues[i]));
+            update_str.append(keyfields[i] + operations[i] + "?");
+            psValues.add(keyvalues[i]);
             if (nfields < 2 || i == nfields - 1) continue;
             update_str.append(" AND ");
         }
@@ -667,12 +670,15 @@
             String unitPermsTableName = DataBaseConnectionPool.getTablePrefix() + "UNIT_PERMS";
             update_str.append(" OR node_id IN (SELECT serial from " + paramsTableName);
             update_str.append(" WHERE (serial = node_id) AND id IN (SELECT unit_id from " + unitPermsTableName);
-            update_str.append(" WHERE user_id = '" + user_id + "' AND domainID='").append(domainID).append("') AND (domainID='").append(domainID).append("'))");
+            update_str.append(" WHERE user_id = ? AND domainID=?").append(") AND (domainID=?").append("))");
+            psValues.add(user_id);
+            psValues.add(domainID);
+            psValues.add(domainID);
         }
         update_str.append(") ");
         update_str.append(" AND ( (changeorder_id = '' OR changeorder_id = NULL) AND (changeid = '' OR changeid = NULL) )");
         try {
-            this.executeUpdate(new String(update_str));
+            this.executeUpdatePS(new String(update_str), psValues.toArray(new String[psValues.size()]));
         }
         catch (SQLException e) {
             pool.reConnectIfNeeded(e, false);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/ModelInfodataManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/ModelInfodataManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/ModelInfodataManager.java	2023-09-08 15:13:14.000802047 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/ModelInfodataManager.java	2023-09-08 15:14:40.907362399 -0700
@@ -176,9 +176,9 @@
             rs = null;
             try {
                 String modelCode = ParamsManager.getModelCode(unitID);
-                query = "SELECT " + featureName + " FROM " + DataBaseConnectionPool.getTablePrefix() + "AC_MODELS WHERE MODEL_CODE=" + pool.delimitDBColumnValue(modelCode);
+                query = "SELECT " + featureName + " FROM " + DataBaseConnectionPool.getTablePrefix() + "AC_MODELS WHERE MODEL_CODE=?";
                 SGMSUtil.debugOut((Object)("ModelInfodataManager:getFeatureValue: Query to get the value of the feature for the unit is: " + query), 2);
-                rs = ModelInfodataManager.executeQuery(query);
+                rs = ModelInfodataManager.executeQueryPS(query, new String[]{modelCode});
                 if (!rs.next()) break block5;
                 result = ModelInfodataManager.getValidString(rs, 1);
             }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/MonitorManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/MonitorManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/MonitorManager.java	2023-09-08 15:13:14.008802356 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/MonitorManager.java	2023-09-08 15:14:40.916351176 -0700
@@ -26,10 +26,16 @@
 import com.sonicwall.sgms.util.VPNUtil;
 import java.sql.ResultSet;
 import java.sql.SQLException;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.Hashtable;
+import java.util.LinkedHashMap;
+import java.util.List;
 import java.util.Objects;
+import java.util.Set;
 import java.util.Vector;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
@@ -577,9 +583,9 @@
         Vector<String> saNames = new Vector<String>();
         try {
             String query = "SELECT DISTINCT SA_NAME FROM " + DataBaseConnectionPool.getTablePrefix() + "MON_TUNNEL_STATUS";
-            query = query + " WHERE FW_SERIAL = " + pool.delimitDBColumnValue(serialNum);
+            query = query + " WHERE FW_SERIAL = ?";
             SGMSUtil.debugOut((Object)("MonitorManager:getAllSaNames() - Query \n" + query), 2);
-            Vector vector = this.getQueryResults(query);
+            Vector vector = this.getQueryResultsPS(query, new String[]{serialNum});
             for (int i = 0; i < vector.size(); ++i) {
                 String[] temp = (String[])vector.elementAt(i);
                 saNames.addElement(temp[0]);
@@ -596,10 +602,10 @@
         Vector<String> saNames = new Vector<String>();
         try {
             String query = "SELECT DISTINCT SA_NAME FROM " + DataBaseConnectionPool.getTablePrefix() + "MON_TUNNEL_STATUS";
-            query = query + " WHERE FW_SERIAL = " + pool.delimitDBColumnValue(serialNum);
+            query = query + " WHERE FW_SERIAL = ? ";
             query = query + " AND SA_STATUS = '1'";
             SGMSUtil.debugOut((Object)("MonitorManager:getUpSaNames() - Query \n" + query), 2);
-            Vector vector = this.getQueryResults(query);
+            Vector vector = this.getQueryResultsPS(query, new String[]{serialNum});
             for (int i = 0; i < vector.size(); ++i) {
                 String[] temp = (String[])vector.elementAt(i);
                 saNames.addElement(temp[0]);
@@ -616,10 +622,10 @@
         Vector<String> saNames = new Vector<String>();
         try {
             String query = "SELECT DISTINCT SA_NAME FROM " + DataBaseConnectionPool.getTablePrefix() + "MON_TUNNEL_STATUS";
-            query = query + " WHERE FW_SERIAL = " + pool.delimitDBColumnValue(serialNum);
+            query = query + " WHERE FW_SERIAL = ? ";
             query = query + " AND SA_STATUS = '0'";
             SGMSUtil.debugOut((Object)("MonitorManager:getDownSaNames() - Query \n" + query), 2);
-            Vector vector = this.getQueryResults(query);
+            Vector vector = this.getQueryResultsPS(query, new String[]{serialNum});
             for (int i = 0; i < vector.size(); ++i) {
                 String[] temp = (String[])vector.elementAt(i);
                 saNames.addElement(temp[0]);
@@ -919,10 +925,14 @@
             sbQuery.append("SELECT SRC_ADDR_BEGIN, SRC_ADDR_END, DST_ADDR_BEGIN, DST_ADDR_END, SA_STATUS, LAST_UPDATED, ");
             sbQuery.append("SA_NAME, GATEWAY, DHCP_CENTRAL_TUNNEL, FrgPktsIn, FrgPktsOut, BytOut, CrtTime, PktsOut, ExpTime, BytIn, PktsIn, FW_SERIAL, ID, IKEINSPI ");
             sbQuery.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "MON_TUNNEL_STATUS WHERE ID IN (");
-            Vector<String> vec = this.getValuesInsertedForInClause(vecTunnelIDs, true);
+            LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause(vecTunnelIDs);
+            Set keySet = inClauseMap.keySet();
+            ArrayList psValues = new ArrayList();
             Vector<String> vecQuery = new Vector<String>();
-            for (String inClause : vec) {
-                vecQuery.addElement(sbQuery.toString() + inClause + ")");
+            for (String questionMarks : keySet) {
+                String query = String.join((CharSequence)",", Collections.nCopies(((List)inClauseMap.get(questionMarks)).size(), "?"));
+                psValues.add(inClauseMap.get(questionMarks));
+                vecQuery.addElement(sbQuery.toString() + query + ")");
             }
             StringBuffer src_addr_begin = new StringBuffer("");
             StringBuffer src_addr_end = new StringBuffer("");
@@ -946,12 +956,12 @@
             String ikeInSpi = "";
             String prevKey = null;
             String currKey = null;
-            for (String query : vecQuery) {
+            for (int i = 0; i < vecQuery.size(); ++i) {
                 ResultSet rs;
                 block12: {
                     rs = null;
-                    SGMSUtil.debugOut((Object)("MonitorManager:getSaInfo() - Query \n" + query), 2);
-                    rs = MonitorManager.executeQuery(query);
+                    SGMSUtil.debugOut((Object)("MonitorManager:getSaInfo() - Query \n" + (String)vecQuery.get(i)), 2);
+                    rs = MonitorManager.executeQueryPS((String)vecQuery.get(i), ((List)psValues.get(i)).toArray(new String[((List)psValues.get(i)).size()]));
                     if (rs != null) break block12;
                     rs = DataBaseConnectionPool.freeResultSet(rs);
                     continue;
@@ -1069,6 +1079,7 @@
                     continue;
                 }
                 rs = DataBaseConnectionPool.freeResultSet(rs);
+                continue;
             }
             return infoMap;
         }
@@ -1200,23 +1211,29 @@
     }
 
     public int getTunnelCount(String displayOption, Vector serials) {
-        Vector<String> inclauses;
+        LinkedHashMap<String, List<String>> inClauseMap;
         int totalCount = 0;
         StringBuffer query = new StringBuffer();
         query.append("SELECT count(1) FROM " + DataBaseConnectionPool.getTablePrefix() + "mon_tunnel_status ").append("WHERE id NOT in ").append("(SELECT id FROM " + DataBaseConnectionPool.getTablePrefix() + "mon_tunnel_status ").append("WHERE (src_addr_begin = NULL or src_addr_begin = '0.0.0.0') ").append("AND   (src_addr_end = NULL or src_addr_end = '0.0.0.0') ").append("AND   (dst_addr_begin = NULL or dst_addr_begin = '0.0.0.0') ").append("AND   (dst_addr_end = NULL or dst_addr_end = '0.0.0.0')) ");
         if (displayOption != null) {
             query.append("AND sa_status = " + DataBaseConnectionPool.getReference().delimitDBColumnValue(displayOption));
         }
-        if ((inclauses = this.getValuesInsertedForInClause(serials, true)).size() != 0) {
+        if ((inClauseMap = this.getValuesInsertedForInClause(serials)).size() != 0) {
             query.append(" AND ");
         }
-        for (int i = 0; i < inclauses.size(); ++i) {
-            query.append("fw_serial IN (" + inclauses.get(i) + ") ");
-            if (i + 1 == inclauses.size()) continue;
+        Set keySet = inClauseMap.keySet();
+        int i = 0;
+        ArrayList psValues = new ArrayList();
+        for (String questionMarks : keySet) {
+            query.append("fw_serial IN (" + String.join((CharSequence)",", Collections.nCopies(((List)inClauseMap.get(questionMarks)).size(), "?")) + ") ");
+            psValues.addAll((Collection)inClauseMap.get(questionMarks));
+            if (i + 1 != keySet.size()) {
             query.append("OR ");
         }
+            ++i;
+        }
         SGMSUtil.debugOut((Object)("MonitorManager:getTunnelCounts() - query \n" + query), 3);
-        totalCount = this.getCount(query.toString());
+        totalCount = this.getCountPS(query.toString(), psValues.toArray(new String[psValues.size()]));
         return totalCount;
     }
 
@@ -1232,15 +1249,28 @@
             for (int i = 0; i < infoNodes.size(); ++i) {
                 serials.add((String)infoNodes.get(i).getClientObj().get(2));
             }
-            Vector<String> inclauses = this.getValuesInsertedForInClause(serials, true);
-            if (inclauses.size() != 0) {
+            LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause(serials);
+            if (inClauseMap.size() != 0) {
                 query.append(" AND ");
             }
-            for (int i = 0; i < inclauses.size(); ++i) {
-                query.append("fw_serial IN (" + inclauses.get(i) + ") ");
-                if (i + 1 == inclauses.size()) continue;
+            Set keySet = inClauseMap.keySet();
+            int i = 0;
+            for (String questionMarks : keySet) {
+                query.append("fw_serial IN (");
+                int j = 0;
+                for (String str : (List)inClauseMap.get(questionMarks)) {
+                    query.append(pool.delimitDBColumnValue(str));
+                    if (j + 1 != keySet.size()) {
+                        query.append(", ");
+                    }
+                    ++j;
+                }
+                query.append(") ");
+                if (i + 1 != keySet.size()) {
                 query.append("OR ");
             }
+                ++i;
+            }
             query.append(" ORDER BY FW_SERIAL, SA_NAME, SA_STATUS, GATEWAY");
             SGMSUtil.debugOut((Object)("MonitorManager:getTunnelInfoByPage() - query \n" + query), 3);
             Vector result = this.getNRows(query.toString(), pageNumber * pageSize - pageSize + 1, pageSize);
@@ -1258,7 +1288,7 @@
                     firewall.addChild(sa);
                 }
                 Vector<String> tunnelInfo = new Vector<String>();
-                for (int i = 2; i < row.length; ++i) {
+                for (i = 2; i < row.length; ++i) {
                     if (row[2] == null || row[2].equalsIgnoreCase("null")) {
                         row[2] = "0.0.0.0";
                     }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/NetworkManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/NetworkManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/NetworkManager.java	2023-09-08 15:13:13.984801428 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/NetworkManager.java	2023-09-08 15:14:40.889384843 -0700
@@ -227,7 +227,7 @@
         try {
             qBuf.append("SELECT iface_ifnum, iface_name, interface_Zone, iface_type, iface_phys_type, iface_vlan_tag, iface_vlan_parent, iface_ipVersion ");
             qBuf.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_INTERFACES ");
-            qBuf.append("WHERE ID = " + pool.delimitDBColumnValue(unit_id) + " ");
+            qBuf.append("WHERE ID = ? ");
             if (ifTypes != null) {
                 qBuf.append("AND iface_phys_type IN (");
                 for (int i = 0; i < ifTypes.length; ++i) {
@@ -239,7 +239,7 @@
                 qBuf.append(") ");
             }
             qBuf.append("ORDER BY sequenceNo");
-            rs = NetworkManager.executeQuery(qBuf.toString());
+            rs = NetworkManager.executeQueryWithValue(qBuf.toString(), unit_id);
             while (rs.next()) {
                 String[] str = new String[8];
                 for (int i = 0; i < str.length; ++i) {
@@ -300,7 +300,7 @@
         try {
             qBuf.append("SELECT iface_ifnum, iface_name, interface_Zone, iface_type, iface_phys_type, iface_vlan_tag, iface_ipVersion ");
             qBuf.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_INTERFACES ");
-            qBuf.append("WHERE ID = " + pool.delimitDBColumnValue(unit_id) + " ");
+            qBuf.append("WHERE ID = ? ");
             if (ifTypes != null) {
                 qBuf.append("AND iface_phys_type IN (");
                 for (int i = 0; i < ifTypes.length; ++i) {
@@ -312,7 +312,7 @@
                 qBuf.append(") ");
             }
             qBuf.append("ORDER BY sequenceNo");
-            rs = NetworkManager.executeQuery(qBuf.toString());
+            rs = NetworkManager.executeQueryWithValue(qBuf.toString(), unit_id);
             while (rs.next()) {
                 String[] str = new String[7];
                 for (int i = 0; i < str.length; ++i) {
@@ -398,9 +398,9 @@
                 query.append("iface_l2tp_dyn_ip, iface_l2tp_ip, iface_l2tp_global_ip, ");
                 query.append("iface_pppoe_dyn_ip, iface_pppoe_loc_ip, if_pppoe_session_ip, dialup_ip, iface_lan_ip ");
                 query.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_INTERFACES ");
-                query.append("WHERE iface_ifnum = " + pool.delimitDBColumnValue(ifNum) + " AND iface_ipVersion = '0' AND ID = " + pool.delimitDBColumnValue(unitid));
+                query.append("WHERE iface_ifnum = ? AND iface_ipVersion = '0' AND ID = ?");
                 SGMSUtil.debugOut((Object)("NetworkManager.getIPForBoundToIface(), query " + query.toString()), 3);
-                rs = NetworkManager.executeQuery(query.toString());
+                rs = NetworkManager.executeQueryPS(query.toString(), new String[]{ifNum, unitid});
                 String ifaceType = PHYS_TYPE_MODEM;
                 if (rs.next()) {
                     ifaceType = NetworkManager.getValidString(rs, "iface_type");
@@ -472,8 +472,8 @@
                 query.append("iface_l2tp_dyn_ip, iface_l2tp_ip, iface_l2tp_global_ip, ");
                 query.append("iface_pppoe_dyn_ip, iface_pppoe_loc_ip, if_pppoe_session_ip, dialup_ip ");
                 query.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_INTERFACES ");
-                query.append("WHERE iface_priwan = '1' AND ID = " + pool.delimitDBColumnValue(unitid));
-                rs = NetworkManager.executeQuery(query.toString());
+                query.append("WHERE iface_priwan = '1' AND ID = ?");
+                rs = NetworkManager.executeQueryWithValue(query.toString(), unitid);
                 String ifaceType = PHYS_TYPE_MODEM;
                 if (rs.next()) {
                     ifaceType = NetworkManager.getValidString(rs, "iface_type");
@@ -541,8 +541,8 @@
                 query.append("iface_l2tp_dyn_ip, iface_l2tp_ip, iface_l2tp_global_ip, ");
                 query.append("iface_pppoe_dyn_ip, iface_pppoe_loc_ip, if_pppoe_session_ip, dialup_ip ");
                 query.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_INTERFACES ");
-                query.append("WHERE iface_priwan = '1' AND iface_ipVersion = '1' AND ID = " + pool.delimitDBColumnValue(unitid));
-                rs = NetworkManager.executeQuery(query.toString());
+                query.append("WHERE iface_priwan = '1' AND iface_ipVersion = '1' AND ID = ?");
+                rs = NetworkManager.executeQueryWithValue(query.toString(), unitid);
                 String ifaceType = PHYS_TYPE_VIRTUAL;
                 if (rs.next()) {
                     ifaceType = NetworkManager.getValidString(rs, "iface_type");
@@ -600,17 +600,19 @@
             if (keyFields.size() > 0) {
                 query.append("AND (");
             }
+            ArrayList<String> values = new ArrayList<String>();
             for (int i = 0; i < keyFields.size(); ++i) {
                 if (i > 0) {
                     query.append(" OR ");
                 }
                 query.append("p." + (String)keyFields.elementAt(i));
-                query.append(" LIKE " + pool.delimitDBColumnValue("%" + (String)keyValues.elementAt(i) + "%"));
+                query.append(" LIKE ? ");
+                values.add("%" + (String)keyValues.elementAt(i) + "%");
             }
             if (keyFields.size() > 0) {
                 query.append(")");
             }
-            rs = NetworkManager.executeQuery(query.toString());
+            rs = NetworkManager.executeQueryPS(query.toString(), values.toArray(new String[values.size()]));
             String ifaceType = PHYS_TYPE_MODEM;
             String ipAddress = "";
             while (rs.next()) {
@@ -673,8 +675,8 @@
                 query.append("iface_pppoe_dyn_ip, iface_pppoe_loc_ip, if_pppoe_session_ip, if_pppoe_session_ipmask, ");
                 query.append("dialup_ip, dialup_mask ");
                 query.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_INTERFACES ");
-                query.append("WHERE iface_priwan = '1' and ID = " + pool.delimitDBColumnValue(unitid));
-                rs = NetworkManager.executeQuery(query.toString());
+                query.append("WHERE iface_priwan = '1' and ID = ?");
+                rs = NetworkManager.executeQueryWithValue(query.toString(), unitid);
                 String ifaceType = PHYS_TYPE_MODEM;
                 if (rs.next()) {
                     ifaceType = NetworkManager.getValidString(rs, "iface_type");
@@ -731,8 +733,8 @@
                 return false;
             }
             qBuf.append("SELECT iface_type FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_INTERFACES ");
-            qBuf.append("WHERE iface_priwan = '1' and ID = " + pool.delimitDBColumnValue(unitid));
-            rs = NetworkManager.executeQuery(qBuf.toString());
+            qBuf.append("WHERE iface_priwan = '1' and ID = ?");
+            rs = NetworkManager.executeQueryWithValue(qBuf.toString(), unitid);
             String ifaceType = PHYS_TYPE_MODEM;
             if (rs.next()) {
                 ifaceType = NetworkManager.getValidString(rs, "iface_type");
@@ -776,8 +778,8 @@
                 return false;
             }
             qBuf.append("SELECT iface_type FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_INTERFACES ");
-            qBuf.append("WHERE iface_priwan = '1' AND iface_ipVersion = '1' and ID = " + pool.delimitDBColumnValue(unitid));
-            rs = NetworkManager.executeQuery(qBuf.toString());
+            qBuf.append("WHERE iface_priwan = '1' AND iface_ipVersion = '1' and ID = ?");
+            rs = NetworkManager.executeQueryWithValue(qBuf.toString(), unitid);
             String ifaceType = PHYS_TYPE_VIRTUAL;
             if (rs.next()) {
                 ifaceType = NetworkManager.getValidString(rs, "iface_type");
@@ -1066,10 +1068,10 @@
             try {
                 qBuf.append("SELECT eth_bwm_enable, eth_ibwm_enable ");
                 qBuf.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_INTERFACES ");
-                qBuf.append("WHERE iface_type IN('1','2','3','4','5','10') and ID = " + pool.delimitDBColumnValue(nodeid));
+                qBuf.append("WHERE iface_type IN('1','2','3','4','5','10') and ID = ?");
                 qBuf.append(" AND DELETED = 0");
                 SGMSUtil.debugOut("NetworkManager.getBWM(), query " + qBuf.toString());
-                rs = NetworkManager.executeQuery(qBuf.toString());
+                rs = NetworkManager.executeQueryWithValue(qBuf.toString(), nodeid);
                 if (rs == null) break block11;
                 String ebwm = "";
                 String ibwm = "";
@@ -1376,14 +1378,14 @@
         try {
             int i;
             qBuf.append("SELECT iface_ifnum, iface_name, iface_type, interface_Zone ");
-            qBuf.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "sw_interfaces WHERE ID = " + pool.delimitDBColumnValue(nodeId));
+            qBuf.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "sw_interfaces WHERE ID = ?");
             if ((nodeId.indexOf(61) != -1 || nodeId.indexOf(58) != -1) && nodeId.charAt(0) != '0') {
                 String[] parents = new GroupNodeID(nodeId).getParents();
                 for (i = 0; i < parents.length; ++i) {
                     qBuf.append(" OR ID = ").append(pool.delimitDBColumnValue(parents[i]));
                 }
             }
-            rs = NetworkManager.executeQuery(qBuf.toString());
+            rs = NetworkManager.executeQueryWithValue(qBuf.toString(), nodeId);
             while (rs.next()) {
                 String[] str = new String[4];
                 for (i = 0; i < str.length; ++i) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/NodePermissionsManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/NodePermissionsManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/NodePermissionsManager.java	2023-09-08 15:13:13.935799532 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/NodePermissionsManager.java	2023-09-08 15:14:40.845439708 -0700
@@ -41,11 +41,13 @@
 import java.sql.SQLException;
 import java.sql.Statement;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Hashtable;
+import java.util.LinkedHashMap;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.ListIterator;
@@ -288,12 +290,19 @@
         for (String id : vecDeleteUnitIDs) {
             vecUnitIDs.addElement(id);
         }
-        String strBegin = "DELETE FROM " + this.unitPermsTable + " WHERE USER_ID = " + pool.delimitDBColumnValue(userID) + " AND UNIT_ID IN (";
-        String strEnd = ") AND domainID=" + pool.delimitDBColumnValue(domainID);
-        Vector<String> vecDelQuery = this.getValuesInsertedForInClause(vecUnitIDs, true);
-        for (String query : vecDelQuery) {
+        String strBegin = "DELETE FROM " + this.unitPermsTable + " WHERE USER_ID = ? AND UNIT_ID IN (";
+        String strEnd = ") AND domainID = ?";
+        LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause(vecUnitIDs);
+        Set keySet = inClauseMap.keySet();
+        ArrayList<String> psValues = null;
+        for (String questionMarks : keySet) {
+            psValues = new ArrayList<String>();
+            psValues.add(userID);
+            String query = String.join((CharSequence)",", Collections.nCopies(((List)inClauseMap.get(questionMarks)).size(), "?"));
+            psValues.addAll((Collection)inClauseMap.get(questionMarks));
+            psValues.add(domainID);
             SGMSUtil.debugOut((Object)("NodePermissionsManager.getFirewallsInANodeForUser(): Query: " + strBegin + query + strEnd), 2);
-            this.executeUpdate(strBegin + query + strEnd);
+            this.executeUpdatePS(strBegin + query + strEnd, psValues.toArray(new String[psValues.size()]));
         }
         StringBuffer sbQuery = new StringBuffer("");
         sbQuery.append("INSERT INTO " + this.unitPermsTable + " (USER_ID, UNIT_ID, PERMS, domainID) ");
@@ -336,17 +345,17 @@
         Connection conn;
         ResultSet rs1;
         block15: {
-            String query = new StringBuffer("SELECT ID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("USERS WHERE USER_TYPE_ID = ").append(pool.delimitDBColumnValue(userID)).append(" AND domainID=").append(pool.delimitDBColumnValue(domainID)).toString();
+            String query = new StringBuffer("SELECT ID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("USERS WHERE USER_TYPE_ID = ?").append(" AND domainID = ?").toString();
             String delQuery = new StringBuffer("DELETE FROM ").append(this.unitPermsTable).append(" WHERE USER_ID IN ( ").append(query).append(")").toString();
-            this.executeUpdate(delQuery);
+            this.executeUpdatePS(delQuery, new String[]{userID, domainID});
             ResultSet rs = null;
             rs1 = null;
             conn = null;
             pstmt = null;
             try {
-                rs = NodePermissionsManager.executeQuery(query);
-                String selQuery = new StringBuffer("SELECT UNIT_ID FROM ").append(this.unitPermsTable).append(" WHERE USER_ID = ").append(pool.delimitDBColumnValue(userID)).append(" AND domainID=").append(pool.delimitDBColumnValue(domainID)).toString();
-                rs1 = NodePermissionsManager.executeQuery(selQuery);
+                rs = NodePermissionsManager.executeQueryPS(query, new String[]{userID, domainID});
+                String selQuery = new StringBuffer("SELECT UNIT_ID FROM ").append(this.unitPermsTable).append(" WHERE USER_ID = ?").append(" AND domainID = ?").toString();
+                rs1 = NodePermissionsManager.executeQueryPS(selQuery, new String[]{userID, domainID});
                 vecAddUnitIDs = new Vector();
                 while (rs1.next()) {
                     vecAddUnitIDs.addElement(rs1.getString("UNIT_ID"));
@@ -615,8 +624,8 @@
                 categoryMap = this.getCategoryMapFromResultSet(rs, legacyFormatRequested, out, true, jsonRequested, jsonStoreType);
                 domainID = "undefined".equals(domainID) ? viewDate.getColumnValue(4) : domainID;
                 query = new StringBuilder("select NAME, DISPLAY_NAME FROM ").append(DataBaseConnectionPool.getTablePrefix()).append(" CUSTOM_GROUPS ");
-                query.append("WHERE domainID = '").append(domainID).append("'");
-                cg_rs = NodePermissionsManager.executeQuery(query.toString());
+                query.append("WHERE domainID = ?");
+                cg_rs = NodePermissionsManager.executeQueryWithValue(query.toString(), domainID);
                 categoryMap.putAll(this.getCategoryMapFromResultSet(cg_rs, legacyFormatRequested, out, false, jsonRequested, jsonStoreType));
                 if (!jsonRequested || jsonStoreType != 3) break block179;
                 out.print("]");
@@ -2194,14 +2203,17 @@
         ParamsManager paramsManager = (ParamsManager)ParamsManager.getReference(pool);
         String query = "";
         try {
+            ArrayList<String> values = new ArrayList<String>();
             query = "DELETE FROM " + this.unitPermsTable + " WHERE USER_ID IN (";
             for (int i = 0; i < vecUsers.size(); ++i) {
                 if (i > 0) {
                     query = query + ",";
                 }
-                query = query + pool.delimitDBColumnValue(vecUsers.elementAt(i));
+                query = query + "?";
+                values.add(vecUsers.elementAt(i));
             }
-            query = query + ") AND domainID = " + pool.delimitDBColumnValue(domainID);
+            query = query + ") AND domainID = ?";
+            values.add(domainID);
             if (unitSerialNumber != null) {
                 String unitID = unitSerialNumber;
                 if (!unitSerialNumber.toUpperCase().startsWith("UT") && !unitSerialNumber.toUpperCase().startsWith("DEV")) {
@@ -2209,7 +2221,7 @@
                 }
                 query = query + " AND UNIT_ID = " + pool.delimitDBColumnValue(unitID);
             }
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, values.toArray(new String[values.size()]));
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("NodePermissionsManager.removeUnitPermissions(): Exception occurred: " + e.getMessage());
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/ParamsManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/ParamsManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/ParamsManager.java	2023-09-08 15:13:13.956800344 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/ParamsManager.java	2023-09-08 15:14:40.861419757 -0700
@@ -303,10 +303,10 @@
         try {
             StringBuffer query = new StringBuffer();
             query.append("SELECT PREFS_FILE_NAME FROM ").append(paramsInfoTable).toString();
-            query.append(" WHERE ENCRYPTED = ").append(pool.delimitDBColumnValue(encrypt));
-            query.append(" AND TABLE_NAME = ").append(pool.delimitDBColumnValue(tableName));
+            query.append(" WHERE ENCRYPTED = ? ");
+            query.append(" AND TABLE_NAME = ? ");
             SGMSUtil.debugOut((Object)("ParamsManager.getArrayPrefNamesForEncryption(): Select query is: " + query.toString()), 3);
-            rs = ParamsManager.executeQuery(query.toString());
+            rs = ParamsManager.executeQueryPS(query.toString(), new String[]{encrypt, tableName});
             while (rs.next()) {
                 v.addElement(ParamsManager.getValidString(rs, 1));
             }
@@ -710,12 +710,12 @@
         String result;
         block4: {
             String query = "";
-            query = ParamsManager.getNatEnabled(unit_id) ? "SELECT nat_mTo1PubAddr FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(unit_id) : "SELECT ipAddr FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(unit_id);
+            query = ParamsManager.getNatEnabled(unit_id) ? "SELECT nat_mTo1PubAddr FROM " + tableName + " WHERE ID = ?" : "SELECT ipAddr FROM " + tableName + " WHERE ID = ?";
             result = null;
             rs = null;
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.getWanIPAddr(): Select query is: " + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, unit_id);
                 if (!rs.next()) break block4;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -786,12 +786,12 @@
     }
 
     public String getNodeDisplayName(String sessionID, String nodeID) throws SQLException {
-        String query = "SELECT NODE_NAME FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(nodeID);
+        String query = "SELECT NODE_NAME FROM " + tableName + " WHERE ID = ?";
         String result = null;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getNodeDisplayName(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs.next()) {
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -882,12 +882,12 @@
     }
 
     public String getUnitDisplayNameFromSN(String sessionID, String serialnumber) throws SQLException {
-        String query = "SELECT NODE_NAME FROM " + tableName + " WHERE serial = " + pool.delimitDBColumnValue(serialnumber);
+        String query = "SELECT NODE_NAME FROM " + tableName + " WHERE serial = ?";
         String result = null;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getUnitDisplayFromSN(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, serialnumber);
             if (rs.next()) {
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -910,14 +910,14 @@
         StringBuffer sb = new StringBuffer("SELECT EmailAddr1,EmailAddr2 FROM ");
         sb.append(DataBaseConnectionPool.getTablePrefix()).append("PARAMS,");
         sb.append(DataBaseConnectionPool.getTablePrefix()).append("PARAMS1");
-        sb.append(" WHERE serial = ").append(pool.delimitDBColumnValue(serialnumber));
+        sb.append(" WHERE serial = ?");
         sb.append(" AND ").append(DataBaseConnectionPool.getTablePrefix()).append("PARAMS.ID = ");
         sb.append(DataBaseConnectionPool.getTablePrefix()).append("PARAMS1.ID");
         String result = null;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getUnitEmailAddrFromSN: Select query is: " + sb.toString()), 3);
-            rs = ParamsManager.executeQuery(sb.toString());
+            rs = ParamsManager.executeQueryWithValue(sb.toString(), serialnumber);
             if (rs.next() && ((result = ParamsManager.getValidString(rs, 1)) == null || result.trim().length() == 0)) {
                 result = ParamsManager.getValidString(rs, 2);
             }
@@ -944,10 +944,10 @@
     public String[] getNodeInfoFromSN(String sessionID, String serialnumber) throws SQLException {
         ResultSet rs = null;
         String[] result = null;
-        String query = "SELECT ID, DOMAINID, IS_UNIT, NODE_NAME FROM " + tableName + " WHERE serial = " + pool.delimitDBColumnValue(serialnumber);
+        String query = "SELECT ID, DOMAINID, IS_UNIT, NODE_NAME FROM " + tableName + " WHERE serial = ?";
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getNodeInfoFromSN(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, serialnumber);
             if (rs.next()) {
                 result = new String[]{ParamsManager.getValidString(rs, 1), ParamsManager.getValidString(rs, 2), ParamsManager.getValidString(rs, 3), ParamsManager.getValidString(rs, 4)};
             }
@@ -967,12 +967,12 @@
     }
 
     public String getSerialNumberFromNodeId(String sessionID, String nodeID) throws SQLException {
-        String query = "SELECT serial FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(nodeID);
+        String query = "SELECT serial FROM " + tableName + " WHERE ID = ?";
         String result = null;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getSerialNumberFromNodeId(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs.next()) {
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -1018,11 +1018,11 @@
         ResultSet rs;
         String query;
         block6: {
-            query = "SELECT ipAddr FROM " + tableName + " WHERE id =" + pool.delimitDBColumnValue(nodeid);
+            query = "SELECT ipAddr FROM " + tableName + " WHERE id =?";
             String result = null;
             rs = null;
             SGMSUtil.debugOut((Object)("ParamsManager.isUnitAcquired(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeid);
             if (rs.next()) {
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -1063,12 +1063,12 @@
             }
             StringBuffer sb = new StringBuffer("SELECT enableUnitEmailEventDest");
             sb.append(" FROM ").append(tableName).append("2");
-            sb.append(" WHERE ID = ").append(pool.delimitDBColumnValue(nodeid));
+            sb.append(" WHERE ID = ?");
             rs = null;
             enableUnitEmailEventDest = false;
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.unitEmailDestAddr(): Select query is: " + sb.toString()), 3);
-                rs = ParamsManager.executeQuery(sb.toString());
+                rs = ParamsManager.executeQueryWithValue(sb.toString(), nodeid);
                 if (rs == null || !rs.next()) break block5;
                 String value = ParamsManager.getValidString(rs, 1);
                 enableUnitEmailEventDest = value != null && value.equals("1");
@@ -1141,14 +1141,18 @@
 
     public Vector listOfNodeIds(int tou, String domainID) throws SQLException {
         StringBuffer query = new StringBuffer("");
+        String[] values = null;
         query.append("SELECT ID FROM " + tableName + " WHERE IS_UNIT");
         query.append(tou == 0 ? " > " : " = ");
-        query.append(pool.delimitDBColumnValue(String.valueOf(tou)));
+        query.append("?");
         if (domainID != null) {
-            query.append(" AND domainID = " + pool.delimitDBColumnValue(domainID));
+            query.append(" AND domainID = ?");
+            values = new String[]{String.valueOf(tou), domainID};
+        } else {
+            values = new String[]{String.valueOf(tou)};
         }
         SGMSUtil.debugOut((Object)("ParamsManager.listOfNodeIds(): Fetch query is: " + query.toString()), 3);
-        Vector vector = this.getQueryResults(query.toString());
+        Vector vector = this.getQueryResultsPS(query.toString(), values);
         int nrows = vector.size();
         Vector<String> result = new Vector<String>();
         for (int i = 0; i < nrows; ++i) {
@@ -1238,14 +1242,21 @@
             return nodesFound;
         }
         boolean bSearchWANIP = wanIP.length() > 0;
+        String[] values = new String[searchParams.size()];
         String query = "SELECT node_name, nat_mTo1PubAddr, ipAddr FROM " + tableName;
         query = query + " WHERE is_unit > 0";
         for (int i = 0; i < searchParams.size(); ++i) {
-            query = DataBaseConnectionPool.isOracle() ? query + " AND lower(" + searchParams.elementAt(i) + ") LIKE '%" + ((String)searchValues.elementAt(i)).toLowerCase() + "%'" : query + " AND " + searchParams.elementAt(i) + " LIKE '%" + searchValues.elementAt(i) + "%'";
+            if (DataBaseConnectionPool.isOracle()) {
+                query = query + " AND lower(" + searchParams.elementAt(i) + ") LIKE ?";
+                values[i] = "%" + ((String)searchValues.elementAt(i)).toLowerCase() + "%";
+                continue;
+            }
+            query = query + " AND " + searchParams.elementAt(i) + " LIKE ?";
+            values[i] = "%" + searchValues.elementAt(i) + "%";
         }
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.findNodes(): Select query is: " + query), 3);
-            Vector vector = this.getQueryResults(query);
+            Vector vector = this.getQueryResultsPS(query, values);
             for (int i = 0; i < vector.size(); ++i) {
                 String[] temp = (String[])vector.elementAt(i);
                 if (bSearchWANIP) {
@@ -1393,14 +1404,15 @@
 
     public Vector<String> getMatchLocalUsers(String userID, String parentID, String tableName) throws SQLException {
         StringBuffer sb = new StringBuffer("SELECT UserObjId FROM ").append(DataBaseConnectionPool.getTablePrefix() + tableName);
-        sb.append(" WHERE UserObjId = ").append(pool.delimitDBColumnValue(userID));
-        sb.append(" AND ID = ").append(pool.delimitDBColumnValue(parentID));
+        sb.append(" WHERE UserObjId = ?");
+        sb.append(" AND ID = ?");
         sb.append(" AND DELETED = ").append("0");
         ResultSet rs = null;
         Vector<String> matchLocalUsers = new Vector<String>();
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getMatchLocalUsers(): Select query is: " + sb.toString()), 3);
-            rs = ParamsManager.executeQuery(sb.toString());
+            String[] values = new String[]{userID, parentID};
+            rs = ParamsManager.executeQueryPS(sb.toString(), values);
             while (rs.next()) {
                 String userId = ParamsManager.getValidString(rs, 1);
                 matchLocalUsers.addElement(userId);
@@ -1528,7 +1540,7 @@
             sbQuery.append("WHERE " + tableName + ".ID = " + extendedTableName + ".ID AND " + tableName + ".ID = " + extendedTableName2 + ".ID AND ");
             sbQuery.append("IS_UNIT > 0 AND UPPER(fVersion) NOT LIKE 'UNKNOWN' AND ");
             if (domainID != null && domainID.length() > 0) {
-                sbQuery.append("domainID = '" + domainID + "' AND ");
+                sbQuery.append("domainID = ? AND ");
             }
             sbQuery.append(nIter == DOWNUNITS ? "(state = 0 OR missedReportsStatus = 'Down') AND " : "state != 0 AND missedReportsStatus = 'Up' AND ");
             sbQuery.append(!DataBaseConnectionPool.isSQLServer() ? "LENGTH(ipAddr) > 4 " : "LEN(ipAddr) > 4 ");
@@ -1538,7 +1550,7 @@
             sbQuery.append("ORDER BY " + tableName + ".ID");
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.getUnitsDownForReporting(): Select query is: " + sbQuery.toString()), 3);
-                rs = ParamsManager.executeQuery(sbQuery.toString());
+                rs = domainID != null && domainID.length() > 0 ? ParamsManager.executeQueryWithValue(sbQuery.toString(), domainID) : ParamsManager.executeQuery(sbQuery.toString());
                 while (rs.next()) {
                     sbValues.setLength(0);
                     String unitID = ParamsManager.getValidString(rs, "ID");
@@ -1727,26 +1739,34 @@
             paramTable.sqlSnip.append(paramName);
         }
         for (String tableName : tables.keySet()) {
+            block10: {
             TableData tableParams = (TableData)tables.get(tableName);
             StringBuffer query = new StringBuffer("SELECT ");
             query.append(tableParams.sqlSnip).append(" FROM ");
-            query.append(DataBaseConnectionPool.getTablePrefix() + tableName + " WHERE ID = " + pool.delimitDBColumnValue(nodeID));
+                query.append(DataBaseConnectionPool.getTablePrefix() + tableName + " WHERE ID = ?");
             SGMSUtil.debugOut((Object)("ParamsManager.getParamValues(): Query to retrieve paramsValues is: " + query.toString()), 3);
             try {
-                rs = ParamsManager.executeQuery(query.toString());
-                if (!rs.next()) continue;
+                    rs = ParamsManager.executeQueryWithValue(query.toString(), nodeID);
+                    if (!rs.next()) break block10;
                 for (int parmCnt = 0; parmCnt < tableParams.params.size(); ++parmCnt) {
                     String name = tableParams.params.elementAt(parmCnt);
                     values.put(name, rs.getString(name));
                 }
             }
             catch (SQLException sqe) {
+                    try {
                 SGMSUtil.debugOut("ParamsManager.getParamValues(): SQLException occured for the query: " + query.toString() + "\nError: " + sqe.getMessage());
                 SGMSUtil.printStackTrace(sqe);
             }
-            finally {
+                    catch (Throwable throwable) {
+                        rs = DataBaseConnectionPool.freeResultSet(rs);
+                        throw throwable;
+                    }
                 rs = DataBaseConnectionPool.freeResultSet(rs);
+                    continue;
+                }
             }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
         }
         return values;
     }
@@ -1800,7 +1820,7 @@
                 if (selectNameList.length() <= 0) continue;
                 executeQuery.append("SELECT ");
                 executeQuery.append(selectNameList.substring(0, selectNameList.length() - 1));
-                executeQuery.append(" FROM " + DataBaseConnectionPool.getTablePrefix() + multipleParamList.elementAt(i) + " WHERE ID = " + pool.delimitDBColumnValue(nodeID));
+                executeQuery.append(" FROM " + DataBaseConnectionPool.getTablePrefix() + multipleParamList.elementAt(i) + " WHERE ID = ?");
                 SGMSUtil.debugOut((Object)executeQuery.toString(), 3);
                 String[] tempSeqArray = selectNumList.split(",");
                 for (int j = 0; j < tempSeqArray.length; ++j) {
@@ -1810,7 +1830,7 @@
                 try {
                     String[] attrCount = selectNameList.split(",");
                     SGMSUtil.debugOut((Object)("ParamsManager.getDataFromMultipleParamsTables(): Select query to retrieve paramNames is: " + executeQuery.toString()), 3);
-                    rs = ParamsManager.executeQuery(executeQuery.toString());
+                    rs = ParamsManager.executeQueryWithValue(executeQuery.toString(), nodeID);
                     if (!rs.next()) break block13;
                     for (int k = 1; k <= attrCount.length; ++k) {
                         paramValues[++paramCount] = rs.getString(k);
@@ -1903,9 +1923,9 @@
             if (nameValueUpdatePair.length() <= 0) continue;
             executeQuery.append("UPDATE " + DataBaseConnectionPool.getTablePrefix() + multipleParamList.elementAt(i));
             executeQuery.append(" SET " + nameValueUpdatePair.substring(0, nameValueUpdatePair.length() - 1));
-            executeQuery.append(" WHERE ID = " + pool.delimitDBColumnValue(nodeID));
+            executeQuery.append(" WHERE ID = ?");
             SGMSUtil.debugOut((Object)("ParamsManager.updateMultipleParamsTables(): Update query is: " + executeQuery.toString()), 3);
-            this.executeUpdate(executeQuery.toString());
+            this.executeUpdatePS(executeQuery.toString(), nodeID);
         }
     }
 
@@ -2303,10 +2323,10 @@
 
     public Vector getActiveFirewalls(String schedulerId) throws SQLException {
         if (!schedulerId.equals("0")) {
-            String query = "select node_name from " + tableName + " where   (SLAVE_ID = " + Integer.parseInt(schedulerId) + ") AND (globalMgtUseStandbySa = 0) AND (IS_UNIT > " + 0 + ") OR (globalMgtUseStandbySa = 1) AND (STANDBY_SLAVE_ID = " + Integer.parseInt(schedulerId) + ") AND (IS_UNIT > " + 0 + ")";
+            String query = "select node_name from " + tableName + " where   (SLAVE_ID = ? ) AND (globalMgtUseStandbySa = 0) AND (IS_UNIT > " + 0 + ") OR (globalMgtUseStandbySa = 1) AND (STANDBY_SLAVE_ID = ? ) AND (IS_UNIT > " + 0 + ")";
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.getActiveFirewalls(): Select query is: " + query), 3);
-                Vector v = this.getQueryResults(query);
+                Vector v = this.getQueryResultsPS(query, new String[]{schedulerId, schedulerId});
                 if (v != null && v.size() == 0) {
                     v = null;
                 }
@@ -2362,10 +2382,10 @@
     }
 
     public Vector getPasswordEncrypt(String nodeID, Connection conn) throws SQLException {
-        String query = "select password, password_enc from " + tableName + " where id = '" + nodeID + "'";
+        String query = "select password, password_enc from " + tableName + " where id = ?";
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getPasswordEncrypt(): Select query is:" + query), 3);
-            Vector v = this.getQueryResults(query, conn);
+            Vector v = this.getQueryResultsPS(query, conn, new String[]{nodeID});
             return v;
         }
         catch (SQLException e) {
@@ -2469,10 +2489,10 @@
     }
 
     public Vector<String[]> getIpAddrPassword(String nodeID) throws SQLException {
-        String query = "select managedAddress, password, managedAtWAN, ipAddr, password_enc, is_unit, msgId from " + tableName + " where id = '" + nodeID + "'";
+        String query = "select managedAddress, password, managedAtWAN, ipAddr, password_enc, is_unit, msgId from " + tableName + " where id = ?";
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getIpAddrPassword(): Select query is: " + query), 3);
-            Vector v = this.getQueryResults(query);
+            Vector v = this.getQueryResultsPS(query, new String[]{nodeID});
             return v;
         }
         catch (SQLException e) {
@@ -2525,12 +2545,12 @@
 
     public static String getModelCode(String nodeID) throws SQLException {
         String string;
-        String query = "SELECT modelCode FROM " + tableName + " WHERE id = '" + nodeID + "'";
+        String query = "SELECT modelCode FROM " + tableName + " WHERE id = ?";
         ResultSet rs = null;
         try {
             String modelCode = "";
             SGMSUtil.debugOut((Object)("ParamsManager.getModelCode(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs.next()) {
                 modelCode = ParamsManager.getValidString(rs, "modelCode");
             }
@@ -2561,10 +2581,10 @@
         String string;
         ResultSet rs = null;
         String modelCode = "";
-        String query = "SELECT modelCode FROM " + tableName + " WHERE serial = '" + serial + "'";
+        String query = "SELECT modelCode FROM " + tableName + " WHERE serial = ?";
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getModelCodeForSerial(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, serial);
             if (rs.next()) {
                 modelCode = ParamsManager.getValidString(rs, "modelCode");
             }
@@ -2602,9 +2622,9 @@
             rs = null;
             region = "";
             try {
-                query = "SELECT REGION FROM " + DataBaseConnectionPool.getTablePrefix() + "AC_MODELS WHERE MODEL_CODE = " + pool.delimitDBColumnValue(modelCode);
+                query = "SELECT REGION FROM " + DataBaseConnectionPool.getTablePrefix() + "AC_MODELS WHERE MODEL_CODE = ?";
                 SGMSUtil.debugOut((Object)("ParamsManager.getModelRegion(): Select query is: " + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, modelCode);
                 if (!rs.next()) break block4;
                 region = ParamsManager.getValidString(rs, "region");
             }
@@ -2634,9 +2654,9 @@
             rs = null;
             name = "";
             try {
-                query = "SELECT model_name FROM " + DataBaseConnectionPool.getTablePrefix() + "AC_MODELS WHERE MODEL_CODE = " + pool.delimitDBColumnValue(modelCode);
+                query = "SELECT model_name FROM " + DataBaseConnectionPool.getTablePrefix() + "AC_MODELS WHERE MODEL_CODE = ?";
                 SGMSUtil.debugOut((Object)("ParamsManager.getModelName(): Select query is: " + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, modelCode);
                 if (!rs.next()) break block4;
                 name = ParamsManager.getValidString(rs, "model_name");
             }
@@ -2691,12 +2711,12 @@
 
     public static String getFirmwareVersion(String nodeID) throws SQLException {
         String string;
-        String query = "SELECT fVersion FROM " + tableName + " WHERE id = '" + nodeID + "'";
+        String query = "SELECT fVersion FROM " + tableName + " WHERE id = ?";
         ResultSet rs = null;
         try {
             String fVersion = "";
             SGMSUtil.debugOut((Object)("ParamsManager.getFirmwareVersion(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs.next()) {
                 fVersion = ParamsManager.getValidString(rs, "fVersion");
             }
@@ -2725,12 +2745,12 @@
 
     public static String getFirmwareDisplayVersion(String nodeID) throws SQLException {
         String string;
-        String query = "SELECT displayVersion FROM " + tableName + " WHERE id = '" + nodeID + "'";
+        String query = "SELECT displayVersion FROM " + tableName + " WHERE id = ?";
         ResultSet rs = null;
         try {
             String displayVersion = "";
             SGMSUtil.debugOut((Object)("ParamsManager.getFirmwareDisplayVersion(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs.next()) {
                 displayVersion = ParamsManager.getValidString(rs, "displayVersion");
             }
@@ -2804,12 +2824,12 @@
         ResultSet rs;
         String result;
         block5: {
-            String query = "SELECT nat_manyToOneOn FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(unit_id);
+            String query = "SELECT nat_manyToOneOn FROM " + tableName + " WHERE ID = ?";
             result = "";
             rs = null;
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.getNatEnabled(): Select query is: " + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, unit_id);
                 if (!rs.next()) break block5;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -2838,12 +2858,12 @@
         ResultSet rs;
         String result;
         block7: {
-            String query = "SELECT vpn FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(unit_id);
+            String query = "SELECT vpn FROM " + tableName + " WHERE ID = ?";
             result = "";
             rs = null;
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.getVpnEnabled(): Select query is: " + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, unit_id);
                 if (!rs.next()) break block7;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -2906,11 +2926,11 @@
     }
 
     public boolean getDHCPEnabled(String unit_id) {
-        String query = "SELECT nat_manyToOneOn, dhClient_active, PPPOEEnabled, PPPoEDynamicLocalIP, L2TPClientEnabled, L2tpClientIslocalDynamicIP, pptpClientEnabled FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(unit_id);
+        String query = "SELECT nat_manyToOneOn, dhClient_active, PPPOEEnabled, PPPoEDynamicLocalIP, L2TPClientEnabled, L2tpClientIslocalDynamicIP, pptpClientEnabled FROM " + tableName + " WHERE ID = ?";
         try {
             boolean bDynamic = false;
             SGMSUtil.debugOut((Object)("ParamsManager.getDHCPEnabled(): Select query is: " + query), 3);
-            Vector vector = this.getQueryResults(query);
+            Vector vector = this.getQueryResultsPS(query, new String[]{unit_id});
             String[] temp = (String[])vector.elementAt(0);
             String nat_manyToOneOn = temp[0];
             String dhClient_active = temp[1];
@@ -3052,12 +3072,12 @@
         ResultSet rs;
         String result;
         block4: {
-            String query = "SELECT PPPOEUserName FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(unit_id);
+            String query = "SELECT PPPOEUserName FROM " + tableName + " WHERE ID = ?";
             result = "";
             rs = null;
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.getPPOEEnabled(): Select query is: " + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, unit_id);
                 if (!rs.next()) break block4;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -3083,12 +3103,12 @@
         ResultSet rs;
         String result;
         block4: {
-            String query = "SELECT haupgraded FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(unit_id);
+            String query = "SELECT haupgraded FROM " + tableName + " WHERE ID = ?";
             result = "";
             rs = null;
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.getHAUpgraded(): Select query is: " + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, unit_id);
                 if (!rs.next()) break block4;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -3114,12 +3134,12 @@
         ResultSet rs;
         String result;
         block4: {
-            String query = "SELECT aspEnableService FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_PARAMS4 WHERE ID = " + pool.delimitDBColumnValue(unit_id);
+            String query = "SELECT aspEnableService FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_PARAMS4 WHERE ID = ?";
             result = "";
             rs = null;
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.getASPEnable(): Select query is: " + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, unit_id);
                 if (!rs.next()) break block4;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -3281,9 +3301,9 @@
         Vector<String> units = null;
         String query = "SELECT ID FROM " + tableName + " WHERE";
         query = query + " IS_UNIT > 0";
-        query = query + " AND LSG_NAME = '" + lsgName + "'";
+        query = query + " AND LSG_NAME = ?";
         SGMSUtil.debugOut((Object)("ParamsManager.avGetUnitsInLSG(): Select query is: " + query), 3);
-        Vector vector = this.getQueryResults(query);
+        Vector vector = this.getQueryResultsPS(query, new String[]{lsgName});
         int nrows = vector.size();
         units = new Vector<String>();
         for (int i = 0; i < nrows; ++i) {
@@ -3296,10 +3316,10 @@
 
     public void avChangeLSGName(String oldName, String newName) throws SQLException {
         if (oldName != null && !oldName.equals("") && newName != null && !newName.equals("")) {
-            String query = "UPDATE " + tableName + " SET LSG_NAME = '" + newName + "'";
-            query = query + " WHERE LSG_NAME = '" + oldName + "'";
+            String query = "UPDATE " + tableName + " SET LSG_NAME = ? ";
+            query = query + " WHERE LSG_NAME = ?";
             SGMSUtil.debugOut((Object)("ParamsManager.avChangeLSGName(): Update query is: " + query), 3);
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, new String[]{newName, oldName});
         }
     }
 
@@ -3310,14 +3330,14 @@
         if (oldName != null && !oldName.equals("") && newName != null && !newName.equals("")) {
             String query = "";
             if (serviceType.equals("Antivirus")) {
-                query = "UPDATE " + tableName + " SET LSG_NAME = '" + newName + "'";
-                query = query + " WHERE LSG_NAME = '" + oldName + "'";
+                query = "UPDATE " + tableName + " SET LSG_NAME = ?";
+                query = query + " WHERE LSG_NAME = ?";
             } else if (serviceType.equals("VPNCS")) {
-                query = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "PARAMS2 SET VPNCS_LSG_NAME = '" + newName + "'";
-                query = query + " WHERE VPNCS_LSG_NAME = '" + oldName + "'";
+                query = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "PARAMS2 SET VPNCS_LSG_NAME = ?";
+                query = query + " WHERE VPNCS_LSG_NAME = ?";
             }
             SGMSUtil.debugOut((Object)("ParamsManager.changeLicenseSharingGroupName(): Select query is: " + query), 2);
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, new String[]{newName, oldName});
         }
     }
 
@@ -3329,12 +3349,12 @@
         if (lsgName != null && !lsgName.equals("")) {
             String query = "";
             if (serviceType.equals("Antivirus")) {
-                query = "SELECT LSG_SNO FROM " + tableName + " WHERE LSG_NAME = '" + lsgName + "'";
+                query = "SELECT LSG_SNO FROM " + tableName + " WHERE LSG_NAME = ?";
             } else if (serviceType.equals("VPNCS")) {
-                query = "SELECT VPNCS_LSG_SNO FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS2 WHERE VPNCS_LSG_NAME = '" + lsgName + "'";
+                query = "SELECT VPNCS_LSG_SNO FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS2 WHERE VPNCS_LSG_NAME = ?";
             }
             SGMSUtil.debugOut((Object)("ParamsManager.getLSGSerialNumber(): Select query is: " + query), 3);
-            Vector vector = this.getQueryResults(query);
+            Vector vector = this.getQueryResultsPS(query, new String[]{lsgName});
             if (vector == null || vector.size() == 0) {
                 return null;
             }
@@ -3354,12 +3374,12 @@
         if (lsgSerialNum != null && !lsgSerialNum.equals("")) {
             String query = "";
             if (serviceType.equals("Antivirus")) {
-                query = "SELECT LSG_NAME FROM " + tableName + " WHERE LSG_SNO = '" + lsgSerialNum + "'";
+                query = "SELECT LSG_NAME FROM " + tableName + " WHERE LSG_SNO = ?";
             } else if (serviceType.equals("VPNCS")) {
-                query = "SELECT VPNCS_LSG_NAME FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS2 WHERE VPNCS_LSG_SNO = '" + lsgSerialNum + "'";
+                query = "SELECT VPNCS_LSG_NAME FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS2 WHERE VPNCS_LSG_SNO = ?";
             }
             SGMSUtil.debugOut((Object)("ParamsManager.getLSGName(): Select query is:" + query), 3);
-            Vector vector = this.getQueryResults(query);
+            Vector vector = this.getQueryResultsPS(query, new String[]{lsgSerialNum});
             if (vector == null || vector.size() == 0) {
                 return null;
             }
@@ -3373,9 +3393,9 @@
 
     public String getUnitLSGSerialNumber(String unitID) throws SQLException {
         String serialNum = null;
-        String query = "SELECT LSG_SNO FROM " + tableName + " WHERE ID = '" + unitID + "'";
+        String query = "SELECT LSG_SNO FROM " + tableName + " WHERE ID = ?";
         SGMSUtil.debugOut((Object)("ParamsManager.getUnitLSGSerialNumber(): Select query is: " + query), 3);
-        Vector vector = this.getQueryResults(query);
+        Vector vector = this.getQueryResultsPS(query, new String[]{unitID});
         if (vector == null || vector.size() == 0) {
             return null;
         }
@@ -3390,9 +3410,9 @@
         Vector<String> units = null;
         String query = "SELECT ID FROM " + tableName + " WHERE";
         query = query + " IS_UNIT > 0";
-        query = query + " AND LSG_SNO = '" + lsgSerialNum + "'";
+        query = query + " AND LSG_SNO = ?";
         SGMSUtil.debugOut((Object)("ParamsManager.avGetMemberIDs(): Select query is: " + query), 3);
-        Vector vector = this.getQueryResults(query);
+        Vector vector = this.getQueryResultsPS(query, new String[]{lsgSerialNum});
         int nrows = vector.size();
         units = new Vector<String>();
         for (int i = 0; i < nrows; ++i) {
@@ -3577,9 +3597,9 @@
             result = "";
             rs = null;
             try {
-                query = "SELECT cfl_expiry FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE ID = " + pool.delimitDBColumnValue(unit_id);
+                query = "SELECT cfl_expiry FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE ID = ?";
                 SGMSUtil.debugOut((Object)("ParamsManager.hasValidCFL(): Select query is :" + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, unit_id);
                 if (!rs.next()) break block8;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -3661,9 +3681,9 @@
         String query = "";
         ResultSet rs = null;
         try {
-            query = "SELECT p.id FROM " + tableName + " p, " + DataBaseConnectionPool.getTablePrefix() + "AC_MODELS a WHERE modelcode = model_code and a.dmz = " + pool.delimitDBColumnValue(dmzValue);
+            query = "SELECT p.id FROM " + tableName + " p, " + DataBaseConnectionPool.getTablePrefix() + "AC_MODELS a WHERE modelcode = model_code and a.dmz = ?";
             SGMSUtil.debugOut((Object)("ParamsManager.getFirewallsForDMZ(): Select query is :" + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, dmzValue);
             while (rs.next()) {
                 vecFW.addElement(ParamsManager.getValidString(rs, 1));
             }
@@ -3704,9 +3724,9 @@
             rs = null;
             try {
                 if (level == null || level.equals("3")) {
-                    query = "SELECT cf_method FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS1 WHERE ID = " + pool.delimitDBColumnValue(nodeid);
+                    query = "SELECT cf_method FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS1 WHERE ID = ?";
                     SGMSUtil.debugOut((Object)("ParamsManager.getCFLMethod(): Select query is: " + query), 3);
-                    rs = ParamsManager.executeQuery(query);
+                    rs = ParamsManager.executeQueryWithValue(query, nodeid);
                     if (rs.next()) {
                         result = ParamsManager.getValidString(rs, 1);
                     }
@@ -3747,9 +3767,9 @@
             policyAssigned = "Via User and Zone Screens";
             try {
                 if (level == null || level.equals("3")) {
-                    String query = "SELECT cfs_Policy_Assign FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_PARAMS6 WHERE ID = " + pool.delimitDBColumnValue(nodeid);
+                    String query = "SELECT cfs_Policy_Assign FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_PARAMS6 WHERE ID = ?";
                     SGMSUtil.debugOut((Object)("ParamsManager.getPolicyAssigned(): Select query is: " + query), 3);
-                    rs = ParamsManager.executeQuery(query);
+                    rs = ParamsManager.executeQueryWithValue(query, nodeid);
                     if (rs.next()) {
                         result = ParamsManager.getValidString(rs, 1);
                     }
@@ -3801,12 +3821,12 @@
     }
 
     public int getNumberOfNodes(String sessionID, String nodeID) throws SQLException {
-        String query = new StringBuffer("SELECT nodes FROM ").append(tableName).append(" WHERE ID= ") + pool.delimitDBColumnValue(nodeID);
+        String query = new StringBuffer("SELECT nodes FROM ").append(tableName).append(" WHERE ID= ?").toString();
         int result = 0;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getNumberOfNodes(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs.next()) {
                 result = rs.getInt(1);
             }
@@ -4098,9 +4118,9 @@
                     req.setAttribute("logPrefs_logMask_11", (String)valueMap.get("logPrefs_logMask_11"));
                     req.setAttribute("logPrefs_logMask_14", (String)valueMap.get("logPrefs_logMask_14"));
                     Vector syslogServers = new Vector();
-                    String syslogServerQuery = "SELECT auxSyslogName, auxSyslogPort FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SYSLOG_SERVER WHERE ID='" + nodeID + "'";
+                    String syslogServerQuery = "SELECT auxSyslogName, auxSyslogPort FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SYSLOG_SERVER WHERE ID = ?";
                     SGMSUtil.debugOut((Object)("ParamsManager.displayStatusPage(): syslogServer select query is: " + syslogServerQuery), 3);
-                    rs = ParamsManager.executeQuery(syslogServerQuery);
+                    rs = ParamsManager.executeQueryWithValue(syslogServerQuery, nodeID);
                     while (rs.next()) {
                         serverInfo = new HashMap<String, String>();
                         serverInfo.put("name", ParamsManager.getValidString(rs, 1));
@@ -4212,12 +4232,12 @@
      * Lifted jumps to return sites
      */
     public boolean getSyslogServerInfo(String nodeId) {
-        String syslogServerQuery = "SELECT DISTINCT SCHEDULER_IP, auxSyslogPort FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SYSLOG_SERVER SSS, " + DataBaseConnectionPool.getTablePrefix() + " PERF_SYSLOG_COLLECTOR PSC WHERE SSS.ID='" + nodeId + "' and SSS.auxSyslogName=PSC.SCHEDULER_IP";
+        String syslogServerQuery = "SELECT DISTINCT SCHEDULER_IP, auxSyslogPort FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SYSLOG_SERVER SSS, " + DataBaseConnectionPool.getTablePrefix() + " PERF_SYSLOG_COLLECTOR PSC WHERE SSS.ID = ? and SSS.auxSyslogName=PSC.SCHEDULER_IP";
         ResultSet rs = null;
         boolean found = false;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getSyslogServerInfo(): Select query is: " + syslogServerQuery), 3);
-            rs = ParamsManager.executeQuery(syslogServerQuery);
+            rs = ParamsManager.executeQueryWithValue(syslogServerQuery, nodeId);
             found = rs.next();
             if (rs == null) return found;
         }
@@ -4279,9 +4299,10 @@
                         String userid = "";
                         String CUSTOM = "C_G_";
                         StringBuffer grpFields = new StringBuffer();
-                        String query = new StringBuffer("SELECT USERID FROM ").append(sgmsViewTable).append(" WHERE view_name = '" + viewName + "' AND domainID='").append(domainID).append("'").toString();
+                        String query = new StringBuffer("SELECT USERID FROM ").append(sgmsViewTable).append(" WHERE view_name = ? AND domainID = ?").toString();
                         SGMSUtil.debugOut((Object)("ParamsManager.appletGetCustomGroupInfoOfNode(): Select query to retrieve userId is: " + query), 3);
-                        rs = ParamsManager.executeQuery(query);
+                        String[] values = new String[]{viewName, domainID};
+                        rs = ParamsManager.executeQueryPS(query, values);
                         while (rs.next()) {
                             userid = nodeID + ":" + ParamsManager.getValidString(rs, 1);
                         }
@@ -4292,9 +4313,9 @@
                         }
                         String finalGrpFlds = grpFields.toString();
                         finalGrpFlds = finalGrpFlds.substring(0, finalGrpFlds.length() - 1);
-                        query = new StringBuffer("SELECT " + finalGrpFlds + " FROM ").append(tableName).append(" WHERE ID = '" + userid + "'").toString();
+                        query = new StringBuffer("SELECT " + finalGrpFlds + " FROM ").append(tableName).append(" WHERE ID = ?").toString();
                         SGMSUtil.debugOut((Object)("ParamsManager.appletGetCustomGroupInfoOfNode(): Select query to retrieve group fields is: " + query), 3);
-                        rs = ParamsManager.executeQuery(query);
+                        rs = ParamsManager.executeQueryWithValue(query, userid);
                         while (rs.next()) {
                             for (int i = 1; i <= 10; ++i) {
                                 if (ParamsManager.getValidString(rs, i) == null) continue;
@@ -4311,9 +4332,9 @@
                             nodeMemberOf.put(pair.substring(0, indexEquals), pair.substring(indexEquals + 1));
                         }
                     }
-                    String query = new StringBuffer("SELECT NAME, DEFAULT_VALUE FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("CUSTOM_GROUPS").append(" WHERE domainID = '").append(domainID).append("'").toString();
+                    String query = new StringBuffer("SELECT NAME, DEFAULT_VALUE FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("CUSTOM_GROUPS").append(" WHERE domainID = ?").toString();
                     SGMSUtil.debugOut((Object)("ParamsManager.appletGetCustomGroupInfoOfNode(): Select query to retrieve prefFieldNames and their default values is: " + query), 3);
-                    rs = ParamsManager.executeQuery(query);
+                    rs = ParamsManager.executeQueryWithValue(query, domainID);
                     while (rs.next()) {
                         String prefs_file_name = ParamsManager.getValidString(rs, 1);
                         String currentValue = (String)nodeMemberOf.get(prefs_file_name);
@@ -4329,10 +4350,10 @@
                     return;
                 }
                 try {
-                    String query = new StringBuffer("SELECT NAME FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("CUSTOM_GROUPS WHERE domainID = '").append(domainID).append("'").toString();
+                    String query = new StringBuffer("SELECT NAME FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("CUSTOM_GROUPS WHERE domainID = ?").toString();
                     String query2 = "SELECT ";
                     SGMSUtil.debugOut((Object)("ParamsManager.appletGetCustomGroupInfoOfNode(): Select query to retrieve pref fields is: " + query), 3);
-                    rs = ParamsManager.executeQuery(query);
+                    rs = ParamsManager.executeQueryWithValue(query, domainID);
                     while (rs.next()) {
                         String prefs_file_name = ParamsManager.getValidString(rs, "NAME");
                         query2 = query2 + prefs_file_name + ",";
@@ -4342,11 +4363,11 @@
                     }
                     rs = DataBaseConnectionPool.freeResultSet(rs);
                     if (listBox) {
-                        query2 = query2 + " FROM " + tableName + " WHERE ID = '" + nodeID + "'";
+                        query2 = query2 + " FROM " + tableName + " WHERE ID = ?";
                         ResultSetMetaData rsmd = null;
                         int nColumns = 0;
                         SGMSUtil.debugOut((Object)("ParamsManager.appletGetCustomGroupInfoOfNode(): Select query to retrieve pref field value for listBox type field is: " + query2), 3);
-                        rs = ParamsManager.executeQuery(query2);
+                        rs = ParamsManager.executeQueryWithValue(query2, nodeID);
                         String value = null;
                         String nullString = "";
                         while (rs.next()) {
@@ -4365,9 +4386,9 @@
                         rs = DataBaseConnectionPool.freeResultSet(rs);
                         break block28;
                     }
-                    query2 = query2 + "ID FROM " + tableName + " WHERE ID = '" + nodeID + "'";
+                    query2 = query2 + "ID FROM " + tableName + " WHERE ID = ?";
                     SGMSUtil.debugOut((Object)("ParamsManager.appletGetCustomGroupInfoOfNode(): Select query to retrieve pref field value for non-listBox type pref fields is: " + query2), 3);
-                    this.sendQueryResultToApplet(out, query2);
+                    this.sendQueryResultToApplet(out, query2, new String[]{nodeID});
                 }
                 catch (SQLException sqe) {
                     SGMSUtil.debugOut("ParamsManager.appletGetCustomGroupInfoOfNode(): SQLException occured: " + sqe.getMessage());
@@ -4781,10 +4802,10 @@
         block5: {
             SGMSUtil.debugOut((Object)("ParamsManager.isFlowServerAssignedForNode(): nodeID is: " + nodeID), 3);
             query = new StringBuilder();
-            query.append("SELECT DISTINCT flowID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("appflows a, ").append(DataBaseConnectionPool.getTablePrefix()).append("GMSVPINSTANCES g, ").append(DataBaseConnectionPool.getTablePrefix()).append("sw_ind_params7  p7 ").append("WHERE a.flowID = p7.flowserver_id AND (g.appRole= 'FS' OR g.appRole= 'FA') AND a.ipAddress = g.ipAddress AND p7.id=").append(pool.delimitDBColumnValue(nodeID));
+            query.append("SELECT DISTINCT flowID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("appflows a, ").append(DataBaseConnectionPool.getTablePrefix()).append("GMSVPINSTANCES g, ").append(DataBaseConnectionPool.getTablePrefix()).append("sw_ind_params7  p7 ").append("WHERE a.flowID = p7.flowserver_id AND (g.appRole= 'FS' OR g.appRole= 'FA') AND a.ipAddress = g.ipAddress AND p7.id = ?");
             rs = null;
             SGMSUtil.debugOut((Object)("ParamsManager.isFlowServerAssignedForNode(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query.toString());
+            rs = ParamsManager.executeQueryWithValue(query.toString(), nodeID);
             if (rs == null || !rs.next()) break block5;
             boolean bl2 = true;
             rs = DataBaseConnectionPool.freeResultSet(rs);
@@ -4819,11 +4840,11 @@
             return this.getAvailableFirewallSandwich();
         }
         StringBuilder query = new StringBuilder();
-        query.append("SELECT DISTINCT(CONCAT(UPPER(sandwich),'#ATT$', fwsSandwichSerial)) fws FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("sw_ind_params7 p7, ").append(DataBaseConnectionPool.getTablePrefix()).append("params p ").append("WHERE p.id LIKE 'UT%' AND p7.id = p.id  AND p7.flowserver_id = (").append("select flowserver_id from sw_ind_params7 where id=").append(pool.delimitDBColumnValue(nodeID)).append(")");
+        query.append("SELECT DISTINCT(CONCAT(UPPER(sandwich),'#ATT$', fwsSandwichSerial)) fws FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("sw_ind_params7 p7, ").append(DataBaseConnectionPool.getTablePrefix()).append("params p ").append("WHERE p.id LIKE 'UT%' AND p7.id = p.id  AND p7.flowserver_id = (").append("select flowserver_id from sw_ind_params7 where id = ? ").append(")");
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getAvailableFirewallSandwich(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query.toString());
+            rs = ParamsManager.executeQueryWithValue(query.toString(), nodeID);
             boolean noneFWSGroup = false;
             while (rs != null && rs.next()) {
                 availableFWSList.append(rs.getString("fws")).append(OBJECT_DELIMITER);
@@ -6528,8 +6549,9 @@
             try {
                 StringBuffer query = new StringBuffer("SELECT p.id, domainid, is_unit, node_name, serial, rma_svctransfer_history ");
                 query.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS p, " + DataBaseConnectionPool.getTablePrefix() + "SW_IND_HISTORY h ");
-                query.append("WHERE p.id = h.id AND (serial = '" + serial + "' OR rma_svctransfer_history LIKE '%" + serial + "%') ORDER BY serial");
-                rs = ParamsManager.executeQuery(query.toString());
+                query.append("WHERE p.id = h.id AND (serial = ? OR rma_svctransfer_history LIKE ? ) ORDER BY serial");
+                String[] values = new String[]{serial, "%" + serial + "%"};
+                rs = ParamsManager.executeQueryPS(query.toString(), values);
                 if (!rs.next()) break block4;
                 arrNodeInfo = new String[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)};
             }
@@ -6712,9 +6734,9 @@
             fwdyndataMgr.removeUnitFwdyndata(nodeInfo[0]);
         }
         try {
-            String string = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "DOMAINS SET prdbAssociatedCnt = -1 WHERE id = '" + domainID + "'";
+            String string = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "DOMAINS SET prdbAssociatedCnt = -1 WHERE id = ?";
             SGMSUtil.debugOut("ParamsManager: deleteUnits(): Query to update associate unit count: " + string);
-            this.executeUpdate(string);
+            this.executeUpdatePS(string, new String[]{domainID});
         }
         catch (SQLException sQLException) {
             SGMSUtil.debugOut("ParamsManager.deleteUnits() - Unit counter reset failed for domain id " + domainID + " with exception: " + sQLException.getMessage());
@@ -6947,9 +6969,9 @@
 
     public int deleteFromVpngAppliances(String id, String dbPrefix, String tablename, Connection conn) throws SQLException {
         StringBuffer update_str = new StringBuffer("DELETE FROM " + dbPrefix + "" + tablename + " WHERE serial_num IN (SELECT SERIAL FROM " + dbPrefix + "params WHERE is_unit > " + 0 + " AND id = ");
-        update_str.append(pool.delimitDBColumnValue(id)).append(")");
+        update_str.append("? )");
         SGMSUtil.debugOut((Object)("TableManager:deleteFromVpngAppliances delete: " + update_str.toString()), 3);
-        return conn == null ? this.executeUpdate(new String(update_str)) : this.executeUpdate(new String(update_str), conn);
+        return conn == null ? this.executeUpdatePS(new String(update_str.toString()), new String[]{id}) : this.executeUpdatePS(new String(update_str), new String[]{id}, conn);
     }
 
     /*
@@ -8162,19 +8184,22 @@
         for (int i = 1; i < fieldNames.length; ++i) {
             query.append(" , ").append(fieldNames[i]);
         }
-        query.append(" FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_INTERFACES").append(" WHERE ID = '").append(fwId).append("' AND ").append(" iface_ipVersion = '0' ").append(" AND ");
+        query.append(" FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_INTERFACES").append(" WHERE ID = ? AND ").append(" iface_ipVersion = '0' ").append(" AND ");
         ResultSet rs = null;
         String ifaceName2 = null;
+        String[] values = null;
         if (interfaceName.indexOf(47) == -1) {
-            query.append(" iface_name = ").append(pool.delimitDBColumnValue(interfaceName));
+            query.append(" iface_name = ? ");
+            values = new String[]{fwId, interfaceName};
         } else {
             String ifaceName1 = interfaceName.substring(0, interfaceName.indexOf(47));
             ifaceName2 = interfaceName.substring(interfaceName.indexOf(47) + 1, interfaceName.length());
-            query.append(" (iface_name = ").append(pool.delimitDBColumnValue(ifaceName1)).append(" OR iface_name = ").append(pool.delimitDBColumnValue(ifaceName2)).append(")");
+            query.append(" (iface_name = ?").append(" OR iface_name = ? ").append(")");
+            values = new String[]{fwId, ifaceName1, ifaceName2};
         }
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getUnitInterfaceValues(): Select query is :" + query), 3);
-            rs = ParamsManager.executeQuery(query.toString());
+            rs = ParamsManager.executeQueryPS(query.toString(), values);
             while (rs.next()) {
                 for (int i = 0; i < fieldNames.length; ++i) {
                     String value = ParamsManager.getValidString(rs, fieldNames[i]);
@@ -8467,10 +8492,10 @@
         ResultSet rs = null;
         Vector<String> id = null;
         String vpnGwWanIpAddressFromDb = null;
-        String query = "SELECT id FROM " + DataBaseConnectionPool.getTablePrefix() + "SCHEDULERS  where ipAddress = '" + schedulerIP + "'";
+        String query = "SELECT id FROM " + DataBaseConnectionPool.getTablePrefix() + "SCHEDULERS  where ipAddress = ?";
         SGMSUtil.debugOut((Object)("ParamsManager.validateScheduler(): Query to get scheduler: " + query), 2);
         try {
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, schedulerIP);
             int count = 0;
             id = new Vector<String>();
             while (rs.next()) {
@@ -8852,6 +8877,7 @@
         if (fields == null || fields.length == 0) {
             return values;
         }
+        ArrayList<String> args = new ArrayList<String>();
         StringBuffer query = new StringBuffer("SELECT Prefs_file_name, encrypted, encryptColumn FROM ");
         query.append(paramsInfoTable + " WHERE Prefs_file_name IN (");
         for (int i = 0; i < fields.length; ++i) {
@@ -8860,13 +8886,14 @@
             if (i != 0) {
                 query.append(", ");
             }
-            query.append(pool.delimitDBColumnValue(fields[i]));
+            query.append(" ? ");
+            args.add(fields[i]);
         }
         query.append(")");
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getPCIEncryptedFields():Query to get the encrypted value for the fields is: " + query.toString()), 2);
-            rs = ParamsManager.executeQuery(query.toString());
+            rs = ParamsManager.executeQueryPS(query.toString(), (String[])args.stream().toArray(String[]::new));
             while (rs.next()) {
                 String name = ParamsManager.getValidString(rs, 1);
                 String[] value = new String[2];
@@ -9216,12 +9243,13 @@
         try {
             StringBuffer query = new StringBuffer("SELECT p.id, s.displayName ");
             query.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "schedulers s, " + DataBaseConnectionPool.getTablePrefix() + "params p ");
-            query.append("WHERE p.is_unit > 0 AND s.id = " + schedID + " AND ");
-            query.append("((p.slave_id = " + schedID + " AND globalMgtUseStandbySa = 0) ");
-            query.append("OR (p.standby_slave_id = " + schedID + " AND globalMgtUseStandbySa = 1)) ");
+            query.append("WHERE p.is_unit > 0 AND s.id = ? AND ");
+            query.append("((p.slave_id = ? AND globalMgtUseStandbySa = 0) ");
+            query.append("OR (p.standby_slave_id = ? AND globalMgtUseStandbySa = 1)) ");
             query.append("ORDER BY s.displayName");
             SGMSUtil.debugOut((Object)("ParamsManager: reloadSchedViewColumnForSched(): Query to retrieve data from schedulers: \n" + query.toString()), 2);
-            rs = ParamsManager.executeQuery(query.toString());
+            String[] values = new String[]{schedID, schedID, schedID};
+            rs = ParamsManager.executeQueryPS(query.toString(), values);
             while (rs.next()) {
                 String unit_id = ParamsManager.getValidString(rs, 1);
                 String dispName = ParamsManager.getValidString(rs, 2);
@@ -9285,9 +9313,9 @@
         try {
             if (!bSlaveResolved) {
                 StringBuffer query = new StringBuffer("SELECT slave_id, standby_slave_id, globalMgtUseStandbySa ");
-                query.append("FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(unitID));
+                query.append("FROM " + tableName + " WHERE ID = ? ");
                 SGMSUtil.debugOut((Object)("ParamsManager.reloadSchedViewColumnForUnit(): Query to retrieve slave info: " + query), 2);
-                rs = ParamsManager.executeQuery(query.toString());
+                rs = ParamsManager.executeQueryWithValue(query.toString(), unitID);
                 while (rs.next()) {
                     int slave_id = rs.getInt(1);
                     int standby_slave_id = rs.getInt(2);
@@ -9301,10 +9329,11 @@
             }
             StringBuffer updateQuery = new StringBuffer("UPDATE " + DataBaseConnectionPool.getTablePrefix() + "PARAMS1 SET schedView = ");
             updateQuery.append("(SELECT displayName FROM " + DataBaseConnectionPool.getTablePrefix() + "SCHEDULERS ");
-            updateQuery.append("WHERE ID = '" + slaveID + "') ");
-            updateQuery.append("WHERE ID = '" + unitID + "'");
+            updateQuery.append("WHERE ID = ? ) ");
+            updateQuery.append("WHERE ID = ? ");
             SGMSUtil.debugOut((Object)("ParamsManager: reloadSchedViewColumnForUnit(): Query to update schedView name for newly added unit:\n" + updateQuery.toString()), 2);
-            this.executeUpdate(updateQuery.toString().trim());
+            String[] values = new String[]{String.valueOf(slaveID), unitID};
+            this.executeUpdatePS(updateQuery.toString().trim(), values);
         }
         catch (SQLException e) {
             try {
@@ -9470,6 +9499,7 @@
 
     public static boolean isFirmwareVersionAtleast(String unitid, int majRel, int minRel, int patRel) {
         boolean bAtleast = false;
+        if (unitid != null) {
         try {
             String fVersion = unitid.startsWith("UT") ? ParamsManager.getFirmwareVersion(unitid) : unitid;
             bAtleast = ParamsManager.isFirmwareVersionStringAtleast(fVersion, majRel, minRel, patRel);
@@ -9478,6 +9508,7 @@
             SGMSUtil.debugOut((Object)("ParamsManager.isFirmwareVersionAtleast: SQLException occured while checking fimwareVersion: " + esql.getMessage()), 1);
             log.log("ParamsManager", "isFirmwareVersionAtleast", esql.getMessage());
         }
+        }
         return bAtleast;
     }
 
@@ -9542,9 +9573,9 @@
                 query = "";
                 String result = "";
                 rs = null;
-                query = "SELECT syncDirty FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS1 WHERE id = " + pool.delimitDBColumnValue(unit_id);
+                query = "SELECT syncDirty FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS1 WHERE id = ?";
                 SGMSUtil.debugOut((Object)("ParamsManager.isSyncDirty(): Select query to retrieve syncDirty value for the unit: " + query), 2);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, unit_id);
                 if (!rs.next()) break block5;
                 result = ParamsManager.getValidString(rs, 1);
                 if (!result.equals("1")) break block6;
@@ -9752,11 +9783,11 @@
         if (prefsColumnNames == null) {
             ResultSet rs;
             block6: {
-                String query = "SELECT PREFS_FILE_NAME FROM " + paramsInfoTable + " WHERE TABLE_NAME = " + pool.delimitDBColumnValue(tableName) + " AND PARAM_SOURCE = '0'";
+                String query = "SELECT PREFS_FILE_NAME FROM " + paramsInfoTable + " WHERE TABLE_NAME = ? AND PARAM_SOURCE = '0'";
                 rs = null;
                 try {
                     SGMSUtil.debugOut((Object)("ParamsManager.getPrefsColumnNames(): Select query to get the prefs names from paramsInfo table: " + query), 2);
-                    rs = ParamsManager.executeQuery(query, true);
+                    rs = ParamsManager.executeQueryPS(query, new String[]{tableName}, true);
                     rs.last();
                     int numRows = rs.getRow();
                     rs.beforeFirst();
@@ -9852,12 +9883,12 @@
 
     public String getApplianceDomainID(String nodeID) throws SQLException {
         String string;
-        String query = "SELECT domainID FROM " + tableName + " WHERE id = '" + nodeID + "'";
+        String query = "SELECT domainID FROM " + tableName + " WHERE id = ?";
         ResultSet rs = null;
         try {
             String domainID = "";
             SGMSUtil.debugOut((Object)("ParamsManager.getApplianceDomainID(): Select query for retrieving appliance domainID: " + query), 2);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs.next()) {
                 domainID = ParamsManager.getValidString(rs, "domainID");
             }
@@ -9993,9 +10024,9 @@
             String query = "";
             rs = null;
             try {
-                query = "SELECT USERRADIUSSELECT FROM " + tableName + " WHERE ID=" + pool.delimitDBColumnValue(nodeID);
+                query = "SELECT USERRADIUSSELECT FROM " + tableName + " WHERE ID = ?";
                 SGMSUtil.debugOut((Object)("ParamsManager.getUserRadiusSelection(): Select query to retrieve selection made for Authentication logon: " + query), 2);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, nodeID);
                 if (!rs.next()) break block6;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -10028,9 +10059,9 @@
             String query = "";
             rs = null;
             try {
-                query = "SELECT RADIUSUSERGROUPMETHOD FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS2 WHERE ID=" + pool.delimitDBColumnValue(nodeID);
+                query = "SELECT RADIUSUSERGROUPMETHOD FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS2 WHERE ID = ?";
                 SGMSUtil.debugOut((Object)("ParamsManager.getRadiusUserGrpMethod(): Select query to retrieve selection made for the mechanishm for setting user group memberships for RADIUS users: " + query), 2);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, nodeID);
                 if (!rs.next()) break block5;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -10059,9 +10090,9 @@
         try {
             StringBuilder sb = new StringBuilder("SELECT POLICY_ID,");
             sb.append(queryFields).append(" FROM ").append(DataBaseConnectionPool.getTablePrefix());
-            sb.append(table).append(" WHERE ID='").append(nodeId).append("'");
+            sb.append(table).append(" WHERE ID = ?");
             SGMSUtil.debugOut((Object)("ParamsManager.getArrayParamValuesForGivenNode(): Select query to retrieve array type param values for a node is: " + sb.toString()), 2);
-            rs = sgmsUtil.executeQuery(sb.toString());
+            rs = SGMSUtil.executeQueryPS(sb.toString(), new String[]{nodeId});
             int fields2len = fields2 == null ? 0 : fields2.length;
             SGMSUtil.debugOut((Object)("ParamsManager.getArrayParamValuesForGivenNode(): Array Values for the node: " + nodeId), 3);
             while (rs.next()) {
@@ -10208,12 +10239,12 @@
         String result;
         block4: {
             SGMSUtil.debugOut((Object)"ParamsManager.getApplianceTypeForUnit(): Method Entry", 2);
-            String query = "SELECT IS_UNIT FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(unitId);
+            String query = "SELECT IS_UNIT FROM " + tableName + " WHERE ID = ?";
             result = null;
             rs = null;
             try {
                 SGMSUtil.debugOut((Object)("ParamsManager.getApplianceTypeForUnit(): Select query is: " + query), 3);
-                rs = ParamsManager.executeQuery(query);
+                rs = ParamsManager.executeQueryWithValue(query, unitId);
                 if (!rs.next()) break block4;
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -10273,15 +10304,18 @@
         String paramsTableName = this.getTableName();
         String unitPermsTableName = DataBaseConnectionPool.getTablePrefix() + "UNIT_PERMS";
         StringBuffer query = new StringBuffer("SELECT ID FROM ").append(tableName).append(" WHERE IS_UNIT > 0");
+        String[] values = null;
         if (!isUserSuperAdmin) {
             if (!isAdministrator) {
                 query.append(" AND " + paramsTableName + ".id IN (SELECT unit_id from " + unitPermsTableName);
-                query.append(" WHERE user_id = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID) + " )");
+                query.append(" WHERE user_id = ? AND domainID = ? )");
             }
-            query.append(" AND ( domainID = " + pool.delimitDBColumnValue(domainID) + ")");
+            query.append(" AND ( domainID = ? )");
+            values = !isAdministrator ? new String[]{userID, domainID, domainID} : new String[]{userID, domainID};
         }
         SGMSUtil.debugOut((Object)("ParamsManager.getSerialNumberFromNodeId(): Select query is: " + query), 3);
-        Vector vector = this.getQueryResults(query.toString());
+        Vector vector = null;
+        vector = !isUserSuperAdmin ? this.getQueryResultsPS(query.toString(), values) : this.getQueryResults(query.toString());
         int nrows = vector.size();
         Vector<String> result = new Vector<String>();
         for (int i = 0; i < nrows; ++i) {
@@ -10299,12 +10333,12 @@
     }
 
     public String getFlowServerIPFromNodeId(String sessionID, String nodeID) throws SQLException {
-        String query = "SELECT ipAddress FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 p, " + DataBaseConnectionPool.getTablePrefix() + "appFlows a WHERE p.ID = " + pool.delimitDBColumnValue(nodeID) + " and (p.flowserver_id = a.flowID  OR p.standby_flowserver_id = a.flowID)";
+        String query = "SELECT ipAddress FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 p, " + DataBaseConnectionPool.getTablePrefix() + "appFlows a WHERE p.ID = ? and (p.flowserver_id = a.flowID  OR p.standby_flowserver_id = a.flowID)";
         String result = null;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getFlowServerIPFromNodeId(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs.next()) {
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -10324,12 +10358,12 @@
     }
 
     public String getFlowAgentIPFromNodeId(String sessionID, String nodeID) throws SQLException {
-        String query = "SELECT ipAddress FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 p, " + DataBaseConnectionPool.getTablePrefix() + "appFlows a WHERE p.ID = " + pool.delimitDBColumnValue(nodeID) + " and (p.flowserver_id = a.flowID  OR p.flowserver_id = a.flowID + 10000)";
+        String query = "SELECT ipAddress FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 p, " + DataBaseConnectionPool.getTablePrefix() + "appFlows a WHERE p.ID = ? and (p.flowserver_id = a.flowID  OR p.flowserver_id = a.flowID + 10000)";
         String result = null;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getFlowServerIPFromNodeId(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs.next()) {
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -10349,12 +10383,12 @@
     }
 
     public String getFlowServerIP(String sessionID, String nodeID, String colName) throws SQLException {
-        String query = "SELECT " + colName + " FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 p, " + DataBaseConnectionPool.getTablePrefix() + "appFlows a WHERE p.ID = " + pool.delimitDBColumnValue(nodeID) + " and (p.flowserver_id = a.flowID  OR p.standby_flowserver_id = a.flowID)";
+        String query = "SELECT " + colName + " FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 p, " + DataBaseConnectionPool.getTablePrefix() + "appFlows a WHERE p.ID = ? and (p.flowserver_id = a.flowID  OR p.standby_flowserver_id = a.flowID)";
         String result = null;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getFlowServerIP(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs != null && rs.next()) {
                 result = ParamsManager.getValidString(rs, 1);
             }
@@ -10374,12 +10408,12 @@
     }
 
     public String[] getFlowServerIP(String sessionID, String nodeID) throws SQLException {
-        String query = "SELECT vpnGwIpAddress, flow_remote_ip, flowID, ipAddress FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 p, " + DataBaseConnectionPool.getTablePrefix() + "appFlows a WHERE p.ID = " + pool.delimitDBColumnValue(nodeID) + " and (p.flowserver_id = a.flowID OR p.flowserver_id = a.flowId + 10000 )";
+        String query = "SELECT vpnGwIpAddress, flow_remote_ip, flowID, ipAddress FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 p, " + DataBaseConnectionPool.getTablePrefix() + "appFlows a WHERE p.ID = ? and (p.flowserver_id = a.flowID OR p.flowserver_id = a.flowId + 10000 )";
         String[] result = new String[4];
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getFlowServerIP(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryWithValue(query, nodeID);
             if (rs != null && rs.next()) {
                 result[0] = rs.getString(1);
                 result[1] = rs.getString(2);
@@ -10698,11 +10732,11 @@
                         StringBuffer sb = new StringBuffer("");
                         sb.append("SELECT " + DataBaseConnectionPool.getTablePrefix() + table + ".ID ");
                         sb.append("FROM " + DataBaseConnectionPool.getTablePrefix() + table + " ");
-                        sb.append("WHERE ID=" + pool.delimitDBColumnValue(ID));
+                        sb.append("WHERE ID = ?");
                         if (isDebugLevelTwo) {
                             SGMSUtil.debugOut((Object)("ParamsManager.updateNonArrayParamsAtGroupLevel(): Processing UPDATE_NONARRAY- Query to check if the row exists: " + sb.toString()), 2);
                         }
-                        if ((results = ParamsManager.executeQuery(sb.toString())).next()) {
+                        if ((results = ParamsManager.executeQueryWithValue(sb.toString(), ID)).next()) {
                             results = DataBaseConnectionPool.freeResultSet(results);
                             sb.setLength(0);
                             sb.append("UPDATE " + DataBaseConnectionPool.getTablePrefix() + table + " SET ");
@@ -10715,11 +10749,11 @@
                                 sb.append(DataBaseConnectionPool.getTablePrefix() + table + "." + SET_PARAM_NAMES[i] + "=" + pool.delimitDBColumnValue(SET_PARAM_VALUES[i]));
                                 sb.append("," + DataBaseConnectionPool.getTablePrefix() + table + "." + SET_PARAM_NAMES[i] + "_TS=" + pool.delimitDBColumnValue(current_date));
                             }
-                            sb.append(" WHERE ID=" + pool.delimitDBColumnValue(ID));
+                            sb.append(" WHERE ID = ?");
                             if (isDebugLevelTwo) {
                                 SGMSUtil.debugOut((Object)("ParamsManager.updateNonArrayParamsAtGroupLevel(): Processing UPDATE_NONARRAY- Update query: " + sb.toString()), 2);
                             }
-                            this.executeUpdate(sb.toString());
+                            this.executeUpdatePS(sb.toString(), new String[]{ID});
                             continue;
                         }
                         sb.setLength(0);
@@ -10953,13 +10987,22 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public boolean reAssignFlowAgent(String flowServerIP, String nodeID, String sessionID, String flowConfiguration, String reportingMode) {
-        block26: {
+        block20: {
             int flowId = 0;
             ResultSet rs = null;
             try {
                 StringBuilder query;
-                String existingFlowIP = this.getFlowServerIPFromNodeId(null, nodeID);
-                String serial = this.getSerialNumberFromNodeId(sessionID, nodeID);
+                boolean isRunUpdate;
+                String serial;
+                String existingFlowIP;
+                block26: {
+                    block22: {
+                        block25: {
+                            block23: {
+                                String sandwichSerial;
+                                block21: {
+                                    existingFlowIP = this.getFlowServerIPFromNodeId(null, nodeID);
+                                    serial = this.getSerialNumberFromNodeId(sessionID, nodeID);
                 String existingFlowConfiguration = this.getFlowConfigurationSetting(nodeID);
                 if (existingFlowConfiguration.equals("0")) {
                     existingFlowConfiguration = "manual";
@@ -10977,27 +11020,32 @@
                 }
                 if (flowServerIP.equalsIgnoreCase(existingFlowIP)) {
                     SGMSUtil.debugOut((Object)"ParamsManager.reAssignFlowAgent(): No change in agent ", 1);
-                    break block26;
+                                        break block20;
                 }
-                boolean isRunUpdate = false;
-                if (!flowServerIP.equalsIgnoreCase("none") && !flowServerIP.equalsIgnoreCase("false")) {
-                    if (existingFlowIP != null && existingFlowIP.length() > 0) {
+                                    isRunUpdate = false;
+                                    if (flowServerIP.equalsIgnoreCase("none") || flowServerIP.equalsIgnoreCase("false")) break block22;
+                                    if (existingFlowIP == null || existingFlowIP.length() <= 0) break block23;
                         this.deregisterSerialFromFlowAgent(serial, existingFlowIP, nodeID, 0);
                         query = new StringBuilder();
-                        query.append("SELECT fwsSandwichSerial FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("params where id = '").append(nodeID).append("'");
-                        String sandwichSerial = null;
+                                    query.append("SELECT fwsSandwichSerial FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("params where id = ?");
+                                    sandwichSerial = null;
                         try {
-                            rs = ParamsManager.executeQuery(query.toString());
-                            if (rs != null) {
+                                        rs = ParamsManager.executeQueryPS(query.toString(), new String[]{nodeID});
+                                        if (rs == null) break block21;
                                 sandwichSerial = rs.getString(1);
                             }
-                        }
                         catch (Exception e) {
+                                        try {
                             sandwichSerial = null;
                         }
-                        finally {
+                                        catch (Throwable throwable) {
+                                            rs = DataBaseConnectionPool.freeResultSet(rs);
+                                            throw throwable;
+                                        }
                             rs = DataBaseConnectionPool.freeResultSet(rs);
                         }
+                                }
+                                rs = DataBaseConnectionPool.freeResultSet(rs);
                         FlowManager manager = new FlowManager();
                         SGMSUtil.debugOut("ParamsManager.reAssignFlowAgent() : sandwichserial " + sandwichSerial);
                         if (sandwichSerial != null && !sandwichSerial.equals("0")) {
@@ -11011,38 +11059,40 @@
                                 manager.deregisterSandwichFromAF(sandwichSerial, existingFlowIP);
                             }
                             query = new StringBuilder();
-                            query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("params SET fwsSandwichSerial = 0").append(" WHERE ID = ").append("'" + nodeID + "'");
-                            this.executeUpdate(query.toString().trim());
+                                    query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("params SET fwsSandwichSerial = 0").append(" WHERE ID = ?");
+                                    this.executeUpdatePS(query.toString().trim(), new String[]{nodeID});
                             manager.updateFlowRestartFlag(existingFlowIP);
                             isRunUpdate = false;
                         } else {
                             isRunUpdate = true;
                         }
-                    } else {
+                                break block25;
+                            }
                         isRunUpdate = true;
                         FlowUtil.getInstance().updateFlowRegStatus(nodeID, 0);
                     }
                     query = new StringBuilder();
                     SGMSUtil sgmsUtil = new SGMSUtil(DataBaseConnectionPool.getReference());
-                    query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS10 SET reporting_mode = ").append(sgmsUtil.getReportType()).append(" WHERE ID = ").append("'" + nodeID + "'");
-                    this.executeUpdate(query.toString().trim());
+                        query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS10 SET reporting_mode = ").append(sgmsUtil.getReportType()).append(" WHERE ID = ?");
+                        this.executeUpdatePS(query.toString().trim(), new String[]{nodeID});
                     flowId = this.getAppFlowId(flowServerIP, true);
-                } else {
+                        break block26;
+                    }
                     isRunUpdate = true;
                 }
                 if (isRunUpdate) {
                     query = new StringBuilder();
-                    query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS7 SET FLOWSERVER_ID = ").append(flowId).append(", STANDBY_FLOWSERVER_ID = ").append(flowId).append(", FLOW_REG_STATUS = 0 WHERE ID = ").append("'" + nodeID + "'");
+                    query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS7 SET FLOWSERVER_ID = ").append(flowId).append(", STANDBY_FLOWSERVER_ID = ").append(flowId).append(", FLOW_REG_STATUS = 0 WHERE ID = ?");
                     SGMSUtil.debugOut((Object)("ParamsManager.reAssignFlowAgent(): update Query for flow server :\n" + query.toString()), 2);
-                    this.executeUpdate(query.toString().trim());
+                    this.executeUpdatePS(query.toString().trim(), new String[]{nodeID});
                 } else if (flowServerIP.equalsIgnoreCase("none")) {
                     if (existingFlowIP != null && existingFlowIP.length() > 0) {
                         this.deregisterSerialFromFlowAgent(serial, existingFlowIP, nodeID, 0);
                         FlowUtil.getInstance().updateFlowRegStatus(nodeID, 0);
                     }
                     query = new StringBuilder();
-                    query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS10 SET reporting_mode = ").append(reportingMode).append(" WHERE ID = ").append("'" + nodeID + "'");
-                    this.executeUpdate(query.toString().trim());
+                    query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS10 SET reporting_mode = ").append(reportingMode).append(" WHERE ID = ?");
+                    this.executeUpdatePS(query.toString().trim(), new String[]{nodeID});
                 }
             }
             catch (SQLException e) {
@@ -11060,24 +11110,28 @@
         Connection conn;
         StringBuilder query;
         int appId;
-        block5: {
+        block6: {
             appId = 0;
             query = new StringBuilder();
-            query.append("select a.flowID from ").append(DataBaseConnectionPool.getTablePrefix()).append("gmsvpinstances g, ").append(DataBaseConnectionPool.getTablePrefix()).append("appflows a where g.ipAddress = a.ipAddress and g.serial is not null and (a.ipAddress = '").append(appFlowIp).append("'");
+            query.append("select a.flowID from ").append(DataBaseConnectionPool.getTablePrefix()).append("gmsvpinstances g, ").append(DataBaseConnectionPool.getTablePrefix()).append("appflows a where g.ipAddress = a.ipAddress and g.serial is not null and (a.ipAddress = ? ");
             if (flag) {
-                query.append(" or a.vpnGwWanIpAddress = '").append(appFlowIp).append("'");
+                query.append(" or a.vpnGwWanIpAddress = ? ");
             }
             query.append(")");
             SGMSUtil.debugOut("ParamsManager.getAppFlowId(): query " + query.toString());
             conn = null;
-            Statement stmt = null;
+            PreparedStatement stmt = null;
             rs = null;
             try {
                 conn = pool.requestConnection();
-                stmt = conn.createStatement();
+                stmt = conn.prepareStatement(query.toString());
+                stmt.setString(1, appFlowIp);
+                if (flag) {
+                    stmt.setString(2, appFlowIp);
+                }
                 DataBaseConnectionPool.addLeakingStatement(stmt);
-                rs = stmt.executeQuery(query.toString());
-                if (rs == null || !rs.next()) break block5;
+                rs = stmt.executeQuery();
+                if (rs == null || !rs.next()) break block6;
                 appId = rs.getInt(1);
             }
             catch (SQLException e) {
@@ -11179,23 +11233,26 @@
             }
         }
         StringBuilder query = new StringBuilder();
-        query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS7 SET FLOWSERVER_ID = ").append(agentId).append(", STANDBY_FLOWSERVER_ID = ").append(agentId).append(" WHERE ID = ").append("'" + nodeID + "'");
+        query.append("UPDATE ").append(DataBaseConnectionPool.getTablePrefix()).append("SW_IND_PARAMS7 SET FLOWSERVER_ID = ?").append(", STANDBY_FLOWSERVER_ID = ?").append(" WHERE ID = ?");
         SGMSUtil.debugOut((Object)("ParamsManager.deregisterSerialFromFlowAgent(): update Query for flow server :\n" + query.toString()), 2);
-        this.executeUpdate(query.toString().trim());
+        this.executeUpdatePS(query.toString().trim(), new String[]{String.valueOf(agentId), String.valueOf(agentId), nodeID});
     }
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public void updateAppFlowId(String nodeId, int appId) {
-        String query = "update " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 set flowserver_id = " + appId + ", standby_flowserver_id = " + appId + " where id = '" + nodeId + "'";
+        String query = "update " + DataBaseConnectionPool.getTablePrefix() + "sw_ind_params7 set flowserver_id = ?, standby_flowserver_id = ? where id = ?";
         SGMSUtil.debugOut((Object)("ParamsManager.updateAppFlowId() : query is " + query), 2);
         Connection conn = null;
-        Statement stmt = null;
+        PreparedStatement stmt = null;
         try {
             conn = pool.requestConnection();
-            stmt = conn.createStatement();
-            stmt.executeUpdate(query);
+            stmt = conn.prepareStatement(query);
+            stmt.setInt(1, appId);
+            stmt.setInt(2, appId);
+            stmt.setString(3, nodeId);
+            stmt.executeUpdate();
         }
         catch (SQLException e) {
             SGMSUtil.debugOut(" query " + query.toString() + " " + e.getMessage());
@@ -11243,8 +11300,8 @@
 
     public String getFlowServerIPAddress(String id) throws SQLException {
         StringBuilder ipname = new StringBuilder();
-        String query = "select a.ipAddress, a.vpnGwWanIpAddress, g.name from " + DataBaseConnectionPool.getTablePrefix() + "gmsvpinstances g, " + DataBaseConnectionPool.getTablePrefix() + "appflows a where g.ipAddress = a.ipAddress and g.serial is not null and flowID = '" + id + "'";
-        Vector vector = this.getQueryResults(query);
+        String query = "select a.ipAddress, a.vpnGwWanIpAddress, g.name from " + DataBaseConnectionPool.getTablePrefix() + "gmsvpinstances g, " + DataBaseConnectionPool.getTablePrefix() + "appflows a where g.ipAddress = a.ipAddress and g.serial is not null and flowID = ?";
+        Vector vector = this.getQueryResultsPS(query, new String[]{id});
         if (vector != null && vector.size() > 0) {
             String[] temp = (String[])vector.elementAt(0);
             ipname.append(temp[2]).append(" ( ");
@@ -11441,9 +11498,9 @@
             appFlowConnections = -1;
             try {
                 int reportingFlowFlag;
-                query.append("SELECT REP_FLOWCONNPS, REP_FLOWCPBL FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("AC_MODELS WHERE MODEL_CODE = ").append(pool.delimitDBColumnValue(modelCode));
+                query.append("SELECT REP_FLOWCONNPS, REP_FLOWCPBL FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("AC_MODELS WHERE MODEL_CODE = ?");
                 SGMSUtil.debugOut((Object)("ParamsManager.getReportFlowConnPS(): Select query is: " + query), 1);
-                rs = ParamsManager.executeQuery(query.toString());
+                rs = ParamsManager.executeQueryWithValue(query.toString(), modelCode);
                 if (rs == null || !rs.next() || (reportingFlowFlag = rs.getInt(2)) != 1) break block4;
                 appFlowConnections = rs.getInt(1);
             }
@@ -11469,12 +11526,12 @@
      * Lifted jumps to return sites
      */
     public String getAddrObjInfo(String sessionID, String nodeId, String addrObjId) throws SQLException {
-        String query = "SELECT addrObjZone, addrObjIp1  FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_addr_objects WHERE addrObjId = " + pool.delimitDBColumnValue(addrObjId) + " and ID = " + pool.delimitDBColumnValue(nodeId);
+        String query = "SELECT addrObjZone, addrObjIp1  FROM  " + DataBaseConnectionPool.getTablePrefix() + "sw_addr_objects WHERE addrObjId = ? and ID = ?";
         String result = "";
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getAddrObjInfo(): Select query is: " + query), 1);
-            rs = ParamsManager.executeQuery(query);
+            rs = ParamsManager.executeQueryPS(query, new String[]{addrObjId, nodeId});
             if (rs != null && rs.next()) {
                 result = rs.getString(1);
                 result = result + ";" + rs.getString(2);
@@ -12083,12 +12140,12 @@
 
     public int getFlowFromSandwichName(String sessionID, String nodeID) throws SQLException {
         StringBuilder query = new StringBuilder();
-        query.append("SELECT flowserver_id FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("sw_ind_params7 s7, ").append(DataBaseConnectionPool.getTablePrefix()).append("params p WHERE p.id = s7.id AND sandwich = ").append(pool.delimitDBColumnValue(nodeID));
+        query.append("SELECT flowserver_id FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("sw_ind_params7 s7, ").append(DataBaseConnectionPool.getTablePrefix()).append("params p WHERE p.id = s7.id AND sandwich = ?");
         int result = -1;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getFlowFromSandwichName(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query.toString());
+            rs = ParamsManager.executeQueryWithValue(query.toString(), nodeID);
             if (rs != null && rs.next()) {
                 result = rs.getInt(1);
             }
@@ -12109,12 +12166,12 @@
 
     public String getSerialFromSandwichName(String sessionID, String nodeID) throws SQLException {
         StringBuilder query = new StringBuilder();
-        query.append("SELECT p.fwsSandwichSerial FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("params p WHERE sandwich = ").append(pool.delimitDBColumnValue(nodeID));
+        query.append("SELECT p.fwsSandwichSerial FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("params p WHERE sandwich = ?");
         String result = null;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getSerialFromSandwichName(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query.toString());
+            rs = ParamsManager.executeQueryWithValue(query.toString(), nodeID);
             if (rs != null && rs.next()) {
                 result = rs.getString(1);
             }
@@ -12135,12 +12192,12 @@
 
     public String getFlowIPFromSandwichName(String sessionID, String nodeID) throws SQLException {
         StringBuilder query = new StringBuilder();
-        query.append("SELECT a.ipaddress FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("sw_ind_params7 s7, ").append(DataBaseConnectionPool.getTablePrefix()).append("appflows a, ").append(DataBaseConnectionPool.getTablePrefix()).append("params p WHERE p.id = s7.id AND s7.flowserver_id = a.flowid AND sandwich = ").append(pool.delimitDBColumnValue(nodeID));
+        query.append("SELECT a.ipaddress FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("sw_ind_params7 s7, ").append(DataBaseConnectionPool.getTablePrefix()).append("appflows a, ").append(DataBaseConnectionPool.getTablePrefix()).append("params p WHERE p.id = s7.id AND s7.flowserver_id = a.flowid AND sandwich = ?");
         String result = null;
         ResultSet rs = null;
         try {
             SGMSUtil.debugOut((Object)("ParamsManager.getFlowIPFromSandwichName(): Select query is: " + query), 3);
-            rs = ParamsManager.executeQuery(query.toString());
+            rs = ParamsManager.executeQueryWithValue(query.toString(), nodeID);
             if (rs != null && rs.next()) {
                 result = rs.getString(1);
             }
@@ -12225,8 +12282,8 @@
         StringBuilder str = new StringBuilder();
         try {
             SGMSUtil.debugOut((Object)"ParamsManager.getSandwichFirewallsForSerials():Inside the method", 1);
-            query.append("select serial from ").append(DataBaseConnectionPool.getTablePrefix()).append("params where fwsSandwichSerial = '").append(sandwichSerial).append("'");
-            rs = ParamsManager.executeQuery(query.toString());
+            query.append("select serial from ").append(DataBaseConnectionPool.getTablePrefix()).append("params where fwsSandwichSerial = ?");
+            rs = ParamsManager.executeQueryWithValue(query.toString(), sandwichSerial);
             while (rs != null && rs.next()) {
                 String serial = rs.getString(1);
                 if (Objects.isNull(serial) || excludeSerial != null && excludeSerial.contains(serial)) continue;
@@ -12252,8 +12309,8 @@
     }
 
     public String[] getFlowAnalyticsSerialList(String domainID) throws SQLException {
-        String query = "select friendly_name, analyzer_serial  from " + DataBaseConnectionPool.getTablePrefix() + "analyzers a " + (DataBaseConnectionPool.isSQLServer() ? " WITH (NOLOCK) " : "") + " where domainID = '" + domainID + "'";
-        Vector vector = this.getQueryResults(query);
+        String query = "select friendly_name, analyzer_serial  from " + DataBaseConnectionPool.getTablePrefix() + "analyzers a " + (DataBaseConnectionPool.isSQLServer() ? " WITH (NOLOCK) " : "") + " where domainID = ?";
+        Vector vector = this.getQueryResultsPS(query, new String[]{domainID});
         String[] ip_addresses = new String[vector.size()];
         StringBuilder ipname = null;
         for (int i = 0; i < vector.size(); ++i) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/SchedulerManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/SchedulerManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/SchedulerManager.java	2023-09-08 15:13:14.026803053 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/SchedulerManager.java	2023-09-08 15:14:40.936326238 -0700
@@ -13,6 +13,7 @@
 import com.sonicwall.sgms.util.SimpleError;
 import java.sql.ResultSet;
 import java.sql.SQLException;
+import java.util.ArrayList;
 import java.util.Date;
 import java.util.Random;
 import java.util.Stack;
@@ -196,8 +197,8 @@
 
     public void dbDeleteScheduler(String ipAddr) {
         try {
-            String update_str = "DELETE FROM " + tableName + " WHERE ipAddress = '" + ipAddr + "'";
-            this.executeUpdate(update_str);
+            String update_str = "DELETE FROM " + tableName + " WHERE ipAddress = ?";
+            this.executeUpdatePS(update_str, new String[]{ipAddr});
         }
         catch (SQLException e) {
             pool.reConnectIfNeeded(e, false);
@@ -619,7 +620,7 @@
     public String getSlaveIPAddress(String id) throws SQLException {
         String ip = "";
         String query = "SELECT ipAddress FROM " + tableName;
-        Vector vector = this.getQueryResults(query = query + " WHERE id = '" + id + "'");
+        Vector vector = this.getQueryResultsPS(query = query + " WHERE id = ?", new String[]{id});
         if (vector != null && vector.size() > 0) {
             String[] temp = (String[])vector.elementAt(0);
             ip = temp[0];
@@ -646,11 +647,12 @@
     }
 
     public String getSlaveID(String ip) throws SQLException {
+        String[] ipVal = new String[]{ip};
         String id = "";
         String query = "SELECT id FROM " + tableName;
-        query = query + " WHERE ipAddress = '" + ip + "'";
+        query = query + " WHERE ipAddress = ?";
         try {
-            Vector vector = this.getQueryResults(query);
+            Vector vector = this.getQueryResultsPS(query, ipVal);
             String[] temp = (String[])vector.elementAt(0);
             id = temp[0];
         }
@@ -739,12 +741,15 @@
     }
 
     public void setSavePrefsForGWFlag(String ipAddress, String strSave) {
-        String updateQuery = "UPDATE " + tableName + " SET SavePrefsForGW = " + pool.delimitDBColumnValue(strSave);
+        ArrayList<String> psValue = new ArrayList<String>();
+        String updateQuery = "UPDATE " + tableName + " SET SavePrefsForGW = ?";
+        psValue.add(strSave);
         if (ipAddress != null) {
-            updateQuery = updateQuery + " WHERE ipAddress = " + pool.delimitDBColumnValue(ipAddress.trim());
+            updateQuery = updateQuery + " WHERE ipAddress = ?";
+            psValue.add(ipAddress.trim());
         }
         try {
-            this.executeUpdate(updateQuery);
+            this.executeUpdatePS(updateQuery, psValue.toArray(new String[psValue.size()]));
         }
         catch (SQLException e) {
             pool.reConnectIfNeeded(e, false);
@@ -753,6 +758,7 @@
     }
 
     public String[] getParametersForSlave(Vector<String> columns, String ip) throws SQLException {
+        String[] ipVal = new String[]{ip};
         String query = "SELECT ";
         for (int i = 0; i < columns.size(); ++i) {
             query = query + columns.elementAt(i);
@@ -762,7 +768,7 @@
             query = query + " ";
         }
         query = query + "FROM " + tableName;
-        Vector vector = this.getQueryResults(query = query + " WHERE ipAddress='" + ip + "'");
+        Vector vector = this.getQueryResultsPS(query = query + " WHERE ipAddress= ?", ipVal);
         int nrows = vector.size();
         if (nrows == 0) {
             return null;
@@ -776,8 +782,8 @@
     }
 
     public String[] getSlave(String id, String type) throws SQLException {
-        String query = "SELECT node_name from " + DataBaseConnectionPool.getTablePrefix() + "params where " + type + "=" + Integer.parseInt(id) + " AND IS_UNIT > " + 0;
-        Vector vector = this.getQueryResults(query);
+        String query = "SELECT node_name from " + DataBaseConnectionPool.getTablePrefix() + "params where " + type + "=? AND IS_UNIT > " + 0;
+        Vector vector = this.getQueryResultsPS(query, new String[]{id});
         String[] str = new String[vector.size()];
         for (int i = 0; i < vector.size(); ++i) {
             String[] row = (String[])vector.elementAt(i);
@@ -789,15 +795,15 @@
     public synchronized void updateExecutionSchedule(String id, Date executeTime, boolean immediate) throws SQLException {
         String query;
         if (immediate) {
-            String query2 = "UPDATE " + tableName + " set agent_doImmediately = '1' where id = '" + id + " '";
-            this.executeUpdate(query2);
+            String query2 = "UPDATE " + tableName + " set agent_doImmediately = '1' where id = ?";
+            this.executeUpdatePS(query2, new String[]{id});
             return;
         }
         String timezone = null;
         try {
             query = "SELECT agent_timezone FROM " + tableName + " WHERE ";
-            query = query + "id = '" + id + "'";
-            Vector vector = this.getQueryResults(query);
+            query = query + "id = ?";
+            Vector vector = this.getQueryResultsPS(query, new String[]{id});
             String[] temp = (String[])vector.elementAt(0);
             timezone = temp[0];
         }
@@ -807,8 +813,8 @@
         executeTime = SGMSUtil.getDateInTimeZone(executeTime, timezone, "UTC");
         query = "UPDATE " + tableName + " set agent_execute_time = " + pool.delimitDBColumnValue(SchedulerManager.toSqlDate(executeTime));
         query = query + ", agent_doImmediately = '0'";
-        query = query + " where id = '" + id + " '";
-        this.executeUpdate(query);
+        query = query + " where id = ?";
+        this.executeUpdatePS(query, new String[]{id});
     }
 
     public boolean getDownMostly(String id) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/ScreenPermissionsManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/ScreenPermissionsManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/ScreenPermissionsManager.java	2023-09-08 15:13:14.006802279 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/ScreenPermissionsManager.java	2023-09-08 15:14:40.914353670 -0700
@@ -26,7 +26,6 @@
 import com.sonicwall.sgms.util.ApplicationLog;
 import com.sonicwall.sgms.util.ProductizationUtil;
 import com.sonicwall.sgms.util.SGMSUtil;
-import com.sonicwall.sgms.util.SimpleError;
 import com.sonicwall.sgms.workflow.preview.Screen;
 import com.sonicwall.viewpoint.granular.GranularReportUtil;
 import com.sonicwall.ws.service.DistributionService;
@@ -289,10 +288,10 @@
         try {
             StringBuffer query = new StringBuffer();
             query.append("SELECT SCRN_ID FROM ").append(tableName);
-            query.append(" WHERE USER_ID LIKE ").append(pool.delimitDBColumnValue(userID));
+            query.append(" WHERE USER_ID LIKE ? ");
             query.append(" AND PERMS != ").append(pool.delimitDBColumnValue(Integer.toString(0)));
-            query.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
-            rs = ScreenPermissionsManager.executeQuery(query.toString());
+            query.append(" AND domainID = ? ");
+            rs = ScreenPermissionsManager.executeQueryPS(query.toString(), new String[]{userID, domainID});
             while (rs.next()) {
                 v1.addElement(ScreenPermissionsManager.getValidString(rs, 1));
             }
@@ -386,8 +385,8 @@
             }
             sql.append(")");
         }
-        sql.append(" AND " + tableName + "." + columns[0] + " LIKE '" + userID + "' ");
-        sql.append(" AND " + tableName + "." + columns[3] + "='" + domainID + "' ");
+        sql.append(" AND " + tableName + "." + columns[0] + " LIKE ? ");
+        sql.append(" AND " + tableName + "." + columns[3] + "= ? ");
         sql.append(" AND " + colScreens[2] + " <> 0");
         sql.append(" AND " + colScreens[5] + " = " + Integer.toString(panelID));
         if (!unitScreen && !subUnitScreen) {
@@ -445,7 +444,7 @@
         }
         sql.append(" ORDER BY " + colScreens[2] + "," + colScreens[19] + " ASC");
         SGMSUtil.debugOut((Object)("Get all permission SQL query: " + sql.toString()), 2);
-        return this.getQueryResults(sql.toString());
+        return this.getQueryResultsPS(sql.toString(), new String[]{userID, domainID});
     }
 
     /*
@@ -458,11 +457,11 @@
         DataBaseConnectionPool pool = DataBaseConnectionPool.getReference();
         try {
             sb.append("SELECT count(*) FROM " + DataBaseConnectionPool.getTablePrefix() + "SCRN_PERMS ");
-            sb.append("WHERE user_id = " + pool.delimitDBColumnValue(userID) + " ");
-            sb.append("AND domainid = " + pool.delimitDBColumnValue(domainID) + " ");
-            sb.append("AND scrn_id IN (SELECT id FROM " + DataBaseConnectionPool.getTablePrefix() + "screens WHERE panel = " + pool.delimitDBColumnValue(panel) + ")");
+            sb.append("WHERE user_id = ? ");
+            sb.append("AND domainid = ? ");
+            sb.append("AND scrn_id IN (SELECT id FROM " + DataBaseConnectionPool.getTablePrefix() + "screens WHERE panel = ? )");
             SGMSUtil.debugOut("ScreenPermissionsManager: Executing Query: " + sb.toString());
-            rs = ScreenPermissionsManager.executeQuery(sb.toString());
+            rs = ScreenPermissionsManager.executeQueryPS(sb.toString(), new String[]{userID, domainID, panel});
             rs.next();
             cnt = rs.getInt(1);
         }
@@ -490,8 +489,8 @@
         DataBaseConnectionPool pool = DataBaseConnectionPool.getReference();
         try {
             sb.append("SELECT sc.typeOfUnits, COUNT(*) FROM " + DataBaseConnectionPool.getTablePrefix() + "SCRN_PERMS p, " + DataBaseConnectionPool.getTablePrefix() + "screens sc ");
-            sb.append("WHERE p.user_id = " + pool.delimitDBColumnValue(userID) + " ");
-            sb.append(" AND p.domainid = " + pool.delimitDBColumnValue(domainID) + " ");
+            sb.append("WHERE p.user_id = ? ");
+            sb.append(" AND p.domainid = ? ");
             if (this.productUtil.isVPS()) {
                 sb.append(" AND ").append("sc." + colScreens[14]).append(" IN ('COM', 'VPS')");
             } else if (this.productUtil.isFA()) {
@@ -505,7 +504,7 @@
             }
             sb.append(" AND p.scrn_id  = sc.id AND sc.panel IN (" + pool.delimitDBColumnValue("0") + "," + pool.delimitDBColumnValue("4") + "," + pool.delimitDBColumnValue("5") + "," + pool.delimitDBColumnValue("6") + "," + pool.delimitDBColumnValue("7") + ")  GROUP BY sc.typeOfUnits");
             SGMSUtil.debugOut("ScreenPermissionsManager: Executing Query: " + sb.toString());
-            rs = ScreenPermissionsManager.executeQuery(sb.toString());
+            rs = ScreenPermissionsManager.executeQueryPS(sb.toString(), new String[]{userID, domainID});
             while (rs.next()) {
                 countMap.put(new Integer(rs.getInt(1)), new Integer(rs.getInt(2)));
             }
@@ -1051,12 +1050,14 @@
         }
         boolean isSonicOS5 = false;
         boolean isSonicOS59 = false;
+        boolean isSoincOS70 = false;
         try {
             if (unitScreen && nodeID != null) {
                 String fVersion = ParamsManager.getFirmwareVersion(nodeID);
                 FirmwareVersion f = FirmwareVersion.getReference(fVersion);
                 isSonicOS5 = f.isAtLeast(25, 0, 0, 0);
                 isSonicOS59 = f.isAtLeast(25, 9, 0, 0);
+                isSoincOS70 = f.isAtLeast(27, 0, 0, 0);
             }
         }
         catch (Exception e) {
@@ -1093,6 +1094,9 @@
                     if (null != screenGroup) {
                         screens[i6][1] = screens[i6][1].substring(0, modemIndex) + screenGroup + screens[i6][1].substring(modemIndex + 5);
                     }
+                    if (isSoincOS70) {
+                        screens[i6][1] = "WWAN";
+                    }
                 }
                 screens[i6][21] = screens[i6][21] == null || screens[i6][21].length() == 0 ? screens[i6][1] : screens[i6][21];
                 screen4 = new ScreenNG(Long.parseLong(screens[i6][0]), screens[i6][1], screens[i6][3] + proxyStr, screens[i6][4], Integer.parseInt(screens[i6][5]), "temp.htm", screens[i6][21], Long.parseLong(screens[i6][19]));
@@ -1388,17 +1392,17 @@
     }
 
     public boolean setScreenPermissionsForUserAsUserType(String sessionID, String id, String userTypeID, String domainID) {
-        String query = "SELECT COUNT(*) FROM " + tableName + " WHERE USER_ID = '" + userTypeID + "' AND domainID='" + domainID + "'";
-        int nrows = this.getCount(query);
+        String query = "SELECT COUNT(*) FROM " + tableName + " WHERE USER_ID = ? AND domainID= ?";
+        int nrows = this.getCountPS(query, new String[]{userTypeID, domainID});
         if (nrows == 0) {
             return true;
         }
         StringBuffer queryBuf = new StringBuffer("INSERT INTO " + tableName + " ");
-        queryBuf.append("(USER_ID, SCRN_ID, PERMS, domainID) SELECT '" + id + "',  SCRN_ID, PERMS, domainID FROM ");
-        queryBuf.append(tableName + " WHERE USER_ID LIKE '" + userTypeID + "' AND domainID='" + domainID + "'");
+        queryBuf.append("(USER_ID, SCRN_ID, PERMS, domainID) SELECT ? ,  SCRN_ID, PERMS, domainID FROM ");
+        queryBuf.append(tableName + " WHERE USER_ID LIKE ? AND domainID = ?");
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(queryBuf.toString());
+            rowsUpdated = this.executeUpdatePS(queryBuf.toString(), new String[]{id, userTypeID, domainID});
         }
         catch (SQLException se) {
             SGMSUtil.debugOut("\n\nError occured when updating Screen permissions for User \"" + id + "\n");
@@ -1410,46 +1414,72 @@
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Unable to fully structure code
+     * Enabled aggressive block sorting
+     * Enabled unnecessary exception pruning
+     * Enabled aggressive exception aggregation
      */
     public boolean changeUserScreenPermission(String sessionID, String userID, String scrn_id, int intPerm, PrintWriter out, String domainID) throws IOException {
-        if ("18100".equals(scrn_id) && intPerm != 1) {
-            if (userID.startsWith("UT")) {
-                String q = new StringBuffer("SELECT ID FROM ").append(usersTable).append(" WHERE USER_TYPE_ID LIKE '").append(userID).append("'").append(" AND domainID='").append(domainID).append("'").toString();
-                ResultSet rs = null;
+        block9: {
+            block10: {
+                if (!"18100".equals(scrn_id) || intPerm == 1) break block9;
+                if (!userID.startsWith("UT")) break block10;
+                q = new StringBuffer("SELECT ID FROM ").append(ScreenPermissionsManager.usersTable).append(" WHERE USER_TYPE_ID LIKE ? ").append(" AND domainID = ? ").toString();
+                rs = null;
                 try {
-                    rs = ScreenPermissionsManager.executeQuery(q.toString());
+                    rs = ScreenPermissionsManager.executeQueryPS(q.toString(), new String[]{userID, domainID});
                     while (rs.next()) {
                         if (!this.checkForApprovalGroups(ScreenPermissionsManager.getValidString(rs, "ID"), domainID, out)) continue;
-                        boolean bl = false;
-                        return bl;
+                        var9_9 = false;
+                        ** GOTO lbl19
                     }
+                    ** GOTO lbl21
                 }
                 catch (SQLException e) {
+                    try {
                     SGMSUtil.debugOut("\n\nSQL exception occured while fetching Users of type" + userID + "\n Stacktrace: " + e.getStackTrace().toString());
                 }
-                finally {
+                    catch (Throwable var10_12) {
+                        rs = DataBaseConnectionPool.freeResultSet(rs);
+                        throw var10_12;
+                    }
+lbl19:
+                    // 1 sources
+
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    return var9_9;
+lbl21:
+                    // 1 sources
+
                     rs = DataBaseConnectionPool.freeResultSet(rs);
+                    break block9;
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    break block9;
+                }
                 }
-            } else if (this.checkForApprovalGroups(userID, domainID, out)) {
+            if (this.checkForApprovalGroups(userID, domainID, out)) {
                 return false;
             }
         }
-        String query = new StringBuffer("DELETE FROM ").append(tableName).append(" WHERE (USER_ID LIKE '").append(userID).append("' OR ").append("USER_ID IN (SELECT ID FROM ").append(usersTable).append(" WHERE USER_TYPE_ID LIKE '").append(userID).append("'").append(" AND domainID='").append(domainID).append("'))").append(" AND domainID='").append(domainID).append("' ").append("AND SCRN_ID LIKE '").append(scrn_id).append("'").toString();
-        if (intPerm < 0) {
-            FilterManager fm = (FilterManager)FilterManager.getReference(pool);
-            String[] filters = fm.getFiltersForUserId(userID, false, false, false, domainID);
+        values = null;
+        query = new StringBuffer("DELETE FROM ").append(ScreenPermissionsManager.tableName).append(" WHERE (USER_ID LIKE ? OR ").append("USER_ID IN (SELECT ID FROM ").append(ScreenPermissionsManager.usersTable).append(" WHERE USER_TYPE_ID LIKE ? AND domainID = ? ))").append(" AND domainID = ? ").append("AND SCRN_ID LIKE ? ").toString();
+        values = new String[]{userID, userID, domainID, domainID, scrn_id};
+        if (intPerm >= 0) {
+            this.sendUpdateResultToAppletPS(out, query, values);
+            query = new StringBuffer("INSERT INTO ").append(ScreenPermissionsManager.tableName).append(" (USER_ID, SCRN_ID, PERMS, domainID) ").append("SELECT ID, ? , ? , ? FROM ").append(ScreenPermissionsManager.usersTable).append(" WHERE (USER_TYPE_ID LIKE ? or ID LIKE ? ) AND domainID = ? ").toString();
+            values = new String[]{scrn_id, String.valueOf(intPerm), domainID, userID, userID, domainID};
+            return this.sendUpdateResultToAppletPS(out, query, values);
+        }
+        fm = (FilterManager)FilterManager.getReference(ScreenPermissionsManager.pool);
+        filters = fm.getFiltersForUserId(userID, false, false, false, domainID);
             if (filters != null) {
-                for (int i = 0; i < filters.length; ++i) {
-                    SimpleError se = fm.removeScreen(filters[i], scrn_id, domainID);
+            for (i = 0; i < filters.length; ++i) {
+                se = fm.removeScreen(filters[i], scrn_id, domainID);
                     if (se.success()) continue;
-                    log.log("ScreenPermissionsManager", "changeUserScreenPermission", "Error: " + se.getException().getMessage() + "\nMessage: Could not remove permission from Filter " + filters[i] + " for screenid  " + scrn_id + ".");
-                }
+                ScreenPermissionsManager.log.log("ScreenPermissionsManager", "changeUserScreenPermission", "Error: " + se.getException().getMessage() + "\nMessage: Could not remove permission from Filter " + filters[i] + " for screenid  " + scrn_id + ".");
             }
-            return this.sendUpdateResultToApplet(out, query);
         }
-        this.sendUpdateResultToApplet(out, query);
-        query = new StringBuffer("INSERT INTO ").append(tableName).append(" (USER_ID, SCRN_ID, PERMS, domainID) ").append("SELECT ID, '").append(scrn_id).append("','").append(intPerm).append("','").append(domainID).append("' FROM ").append(usersTable).append(" WHERE (USER_TYPE_ID LIKE '").append(userID).append("' or ID LIKE '").append(userID).append("') AND domainID='").append(domainID).append("'").toString();
-        return this.sendUpdateResultToApplet(out, query);
+        return this.sendUpdateResultToAppletPS(out, query, values);
     }
 
     /*
@@ -1609,6 +1639,7 @@
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Loose catch block
      */
     public void appletChangeScreenPermission(String sessionID, HttpServletRequest req, HttpServletResponse res) throws IOException {
         PrintWriter out = null;
@@ -1625,18 +1656,22 @@
         String userID = req.getParameter("userID");
         int intPerm = Integer.parseInt(perm) - 1;
         this.changeUserScreenPermission(sessionID, id, scrn_id, intPerm, out, domainID);
+        String[] values = null;
         StringBuffer query = new StringBuffer("SELECT ID FROM " + this.screensTable + " WHERE ");
         if (panel != null && panel.length() > 0 && strTOU != null && strTOU.length() > 0) {
-            query.append("PANEL = " + panel + " AND TYPEOFUNITS = " + pool.delimitDBColumnValue(strTOU));
+            query.append("PANEL = ? AND TYPEOFUNITS = ? ");
+            values = new String[]{panel, strTOU};
         } else if (panel != null && panel.length() > 0) {
-            query.append("PANEL = " + panel);
+            query.append("PANEL = ? ");
+            values = new String[]{panel};
         } else {
-            query.append("PARENT_ID = " + scrn_id);
+            query.append("PARENT_ID = ? ");
+            values = new String[]{scrn_id};
         }
         this.appendServiceName(query, this.isSPLScreen(userID, domainID));
         ResultSet rs = null;
         try {
-            rs = ScreenPermissionsManager.executeQuery(query.toString());
+            rs = ScreenPermissionsManager.executeQueryPS(query.toString(), values);
             Vector<String> ids = new Vector<String>();
             while (rs.next()) {
                 ids.addElement(ScreenPermissionsManager.getValidString(rs, "ID"));
@@ -1648,37 +1683,48 @@
             }
         }
         catch (SQLException sQLException) {
-        }
-        finally {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
     }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+    }
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Loose catch block
      */
     public List<String> getScreensUnderPanel(String panel, String strTOU, String scrn_id) {
         ArrayList<String> ids = new ArrayList<String>();
+        String[] values = null;
         StringBuffer query = new StringBuffer("SELECT ID FROM " + this.screensTable + " WHERE ");
         if (panel != null && panel.length() > 0 && strTOU != null && strTOU.length() > 0) {
-            query.append("PANEL = " + panel + " AND TYPEOFUNITS = " + pool.delimitDBColumnValue(strTOU));
+            query.append("PANEL = ? AND TYPEOFUNITS = ? ");
+            values = new String[]{panel, strTOU};
         } else if (panel != null && panel.length() > 0) {
-            query.append("PANEL = " + panel);
+            query.append("PANEL = ? ");
+            values = new String[]{panel};
         } else {
-            query.append("PARENT_ID = " + scrn_id);
+            query.append("PARENT_ID = ? ");
+            values = new String[]{scrn_id};
         }
         ResultSet rs = null;
         try {
-            rs = ScreenPermissionsManager.executeQuery(query.toString());
+            rs = ScreenPermissionsManager.executeQueryPS(query.toString(), values);
             while (rs.next()) {
                 ids.add(ScreenPermissionsManager.getValidString(rs, "ID"));
             }
         }
         catch (SQLException sQLException) {
-        }
-        finally {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return ids;
     }
 
@@ -1690,8 +1736,8 @@
         }
         String user_id = req.getParameter("user_id");
         String domainID = req.getParameter("domainID");
-        String query = new StringBuffer("SELECT SCRN_ID as scrn_id, PERMS as perms FROM ").append(tableName).append(" WHERE USER_ID LIKE '").append(user_id).append("' AND domainID='").append(domainID).append("'").toString();
-        this.sendQueryResultToApplet(out, query);
+        String query = new StringBuffer("SELECT SCRN_ID as scrn_id, PERMS as perms FROM ").append(tableName).append(" WHERE USER_ID LIKE ? AND domainID= ?").toString();
+        this.sendQueryResultToApplet(out, query, new String[]{user_id, domainID});
     }
 
     public String[][] getScreenInfo(String[] wherefields, String[] wherevals, String[][] addConds, String[] columns, String tablename, boolean subUnitScreen) throws SQLException {
@@ -1884,9 +1930,9 @@
         try {
             StringBuffer query = new StringBuffer();
             query.append("SELECT " + colScreens[0] + ", " + colScreens[1] + ", " + colScreens[2] + " FROM ").append(this.screensTable);
-            query.append(" WHERE " + colScreens[0] + " = ").append(pool.delimitDBColumnValue(Integer.toString(screenId)));
+            query.append(" WHERE " + colScreens[0] + " = ? ");
             query.append(" OR " + colScreens[0] + " = ").append("( SELECT " + colScreens[2] + " FROM ").append(this.screensTable);
-            query.append(" WHERE " + colScreens[0] + " = ").append(pool.delimitDBColumnValue(Integer.toString(screenId)));
+            query.append(" WHERE " + colScreens[0] + " = ? ");
             query.append(" AND " + colScreens[14] + " IN ");
             if (this.productUtil.isFA()) {
                 query.append("('COM', 'FA')");
@@ -1895,7 +1941,7 @@
             }
             query.append(") ORDER BY PARENT_ID");
             SGMSUtil.debugOut("ScreenPermissionsManager: Executing Query: " + query.toString());
-            rs = ScreenPermissionsManager.executeQuery(query.toString());
+            rs = ScreenPermissionsManager.executeQueryPS(query.toString(), new String[]{Integer.toString(screenId), Integer.toString(screenId)});
             while (rs.next()) {
                 String sName = rs.getString(colScreens[1]);
                 String p_id = rs.getString(colScreens[2]);
@@ -2002,20 +2048,25 @@
     public String getScreenIdForURL(String screenURL) {
         String screenId = "";
         StringBuffer queryBuf = new StringBuffer();
-        queryBuf.append("SELECT ID FROM " + this.screensTable + " WHERE URL LIKE '" + screenURL + "%'");
+        queryBuf.append("SELECT ID FROM " + this.screensTable + " WHERE URL LIKE ?");
         ResultSet rs = null;
         try {
-            rs = ScreenPermissionsManager.executeQuery(queryBuf.toString());
+            rs = ScreenPermissionsManager.executeQueryPS(queryBuf.toString(), new String[]{screenURL + "%"});
             while (rs.next()) {
                 screenId = ScreenPermissionsManager.getValidString(rs, "ID");
             }
         }
         catch (SQLException se) {
+            try {
             SGMSUtil.debugOut("\nError getting screen information from database for screen path \"" + screenURL + "\n");
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return screenId;
     }
 }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/SessionManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/SessionManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/SessionManager.java	2023-09-08 15:13:13.990801660 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/SessionManager.java	2023-09-08 15:14:40.896376115 -0700
@@ -154,12 +154,16 @@
         if (isWebSession) {
             ResultSet rs = null;
             try {
-                rs = SessionManager.executeQuery("SELECT option_data FROM " + DataBaseConnectionPool.getTablePrefix() + "sgms_user_settings WHERE user_id = " + pool.delimitDBColumnValue(id) + " AND domain_id = " + pool.delimitDBColumnValue(domainID));
+                String query = "SELECT option_data FROM " + DataBaseConnectionPool.getTablePrefix() + "sgms_user_settings WHERE user_id = ? AND domain_id = ?";
+                String[] queryValues = new String[]{id, domainID};
+                rs = SessionManager.executeQueryPS(query, queryValues);
                 if (rs.next()) {
                     ret = rs.getString(1);
                 } else {
                     DataBaseConnectionPool.freeResultSet(rs);
-                    rs = SessionManager.executeQuery("SELECT option_data FROM " + DataBaseConnectionPool.getTablePrefix() + "sgms_user_settings WHERE user_id = " + pool.delimitDBColumnValue("DEFAULT") + " AND domain_id = " + pool.delimitDBColumnValue(domainID));
+                    String defaultQuery = "SELECT option_data FROM " + DataBaseConnectionPool.getTablePrefix() + "sgms_user_settings WHERE user_id = ? AND domain_id = ?";
+                    String[] defaultQueryValues = new String[]{"DEFAULT", domainID};
+                    rs = SessionManager.executeQueryPS(defaultQuery, defaultQueryValues);
                     if (rs.next()) {
                         ret = rs.getString(1);
                     }
@@ -390,12 +394,14 @@
     }
 
     public synchronized String[][] dumpSessionTable(String request_sessionid, String domainID) throws SQLException {
+        String[] queryValues = null;
         String query = "SELECT SESSIONID,USERID,LASTACCESS,IPADDRESS,LOGINTIME,domainID FROM " + tableName;
         if (domainID != null && domainID.trim().length() != 0) {
-            query = query + " WHERE domainID='" + domainID + "'";
+            query = query + " WHERE domainID = ?";
+            queryValues = new String[]{domainID};
         }
         query = query + " ORDER BY LASTACCESS";
-        Vector vector = this.getQueryResults(query);
+        Vector vector = this.getQueryResultsPS(query, queryValues);
         int nrows = vector.size();
         String[][] str = new String[nrows][columns.length];
         for (int i = 0; i < nrows; ++i) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/SettingsManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/SettingsManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/SettingsManager.java	2023-09-08 15:13:13.994801815 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/SettingsManager.java	2023-09-08 15:14:40.900371127 -0700
@@ -371,8 +371,8 @@
         Vector<String> v_prefs_fVersion = new Vector<String>();
         ResultSet rs = null;
         try {
-            String queryString = new String("SELECT PREFS_NAME, PREFS_CREATED, fDisplayVersion FROM " + this.getTableName() + " WHERE ID = " + pool.delimitDBColumnValue(unit_id) + " ORDER BY PREFS_CREATED DESC");
-            rs = SettingsManager.executeQuery(queryString);
+            String queryString = new String("SELECT PREFS_NAME, PREFS_CREATED, fDisplayVersion FROM " + this.getTableName() + " WHERE ID = ? ORDER BY PREFS_CREATED DESC");
+            rs = SettingsManager.executeQueryPS(queryString, new String[]{unit_id});
             while (rs.next()) {
                 v_prefs_names.addElement(SettingsManager.getValidString(rs, 1));
                 v_prefs_times.addElement(SettingsManager.getValidString(rs, 2));
@@ -481,8 +481,8 @@
                 fos = null;
                 rs = null;
                 String enc = "";
-                String queryString = new String("SELECT PREFS, prefs_enc FROM " + this.getTableName() + " WHERE ID = " + pool.delimitDBColumnValue(unit_id) + " AND PREFS_NAME = " + pool.delimitDBColumnValue(prefs_name));
-                rs = SettingsManager.executeQuery(queryString);
+                String queryString = new String("SELECT PREFS, prefs_enc FROM " + this.getTableName() + " WHERE ID = ? AND PREFS_NAME = ?");
+                rs = SettingsManager.executeQueryPS(queryString, new String[]{unit_id, prefs_name});
                 if (rs.next()) {
                     int n;
                     fEnc = File.createTempFile("tmp_" + unit_id, String.valueOf(new Date().getTime()) + "_prefs_enc", new File(this.installDir + "Temp"));
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/TableManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/TableManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/TableManager.java	2023-09-08 15:13:13.919798913 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/TableManager.java	2023-09-08 15:14:40.830458411 -0700
@@ -30,16 +30,19 @@
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collection;
 import java.util.Date;
 import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.Hashtable;
 import java.util.Iterator;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Locale;
 import java.util.Map;
 import java.util.Random;
 import java.util.ResourceBundle;
+import java.util.Set;
 import java.util.Vector;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
@@ -254,6 +257,7 @@
         return this.getQueryResults(query, null);
     }
 
+    @Deprecated
     public Vector getQueryResults(String query, Connection conn) throws SQLException {
         ResultSet rs = null;
         ResultSetMetaData rsmd = null;
@@ -376,6 +380,7 @@
 
     public Vector<String[]> getRowsOrderedByInVector(Hashtable<String, Object> keytable, String[] columns, String[] orderby, String tablename, boolean firstRowOnly, Connection conn) throws SQLException {
         int i;
+        ArrayList<Object> psValues = new ArrayList<Object>();
         StringBuffer query_str = new StringBuffer("SELECT ").append(columns[0]);
         for (i = 1; i < columns.length; ++i) {
             query_str.append(COMA + columns[i]);
@@ -396,6 +401,7 @@
                     }
                     objVals = vec;
                 }
+                Object delimeted = null;
                 if (objVals instanceof Vector) {
                     keyVals = objVals;
                     if (keyVals == null || ((Vector)keyVals).size() <= 0) continue;
@@ -403,19 +409,25 @@
                         query_str.append(AND);
                     }
                     if (((Vector)keyVals).size() == 1) {
-                        query_str.append(key + " = " + pool.delimitDBColumnValue((String)((Vector)keyVals).elementAt(0)) + "");
+                        delimeted = (String)((Vector)keyVals).elementAt(0);
+                        query_str.append(key + " = ? ");
+                        psValues.add(delimeted);
                     } else {
-                        Vector<String> vec = this.getValuesInsertedForInClause((Vector<String>)keyVals, true);
-                        if (vec.size() > 1) {
+                        LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause((Vector<String>)keyVals);
+                        if (inClauseMap.size() > 1) {
                             query_str.append("(");
                         }
-                        for (int j = 0; j < vec.size(); ++j) {
+                        Set<String> keySet = inClauseMap.keySet();
+                        int j = 0;
+                        for (String questionMarks : keySet) {
                             if (j > 0) {
                                 query_str.append(" OR ");
                             }
-                            query_str.append(key + " IN (" + vec.elementAt(j) + ")");
+                            query_str.append(key + " IN (" + questionMarks.substring(1, questionMarks.length()) + ")");
+                            psValues.addAll((Collection)inClauseMap.get(questionMarks));
+                            ++j;
                         }
-                        if (vec.size() > 1) {
+                        if (inClauseMap.size() > 1) {
                             query_str.append(")");
                         }
                     }
@@ -427,7 +439,9 @@
                     if (ctr > 0) {
                         query_str.append(AND);
                     }
-                    query_str.append(key + " = " + ((Integer)keyVals).toString() + "");
+                    delimeted = ((Integer)keyVals).toString();
+                    query_str.append(key + " = ?");
+                    psValues.add(delimeted);
                     ++ctr;
                     continue;
                 }
@@ -436,7 +450,9 @@
                 if (ctr > 0) {
                     query_str.append(AND);
                 }
-                query_str.append(key + " = " + pool.delimitDBColumnValue((String)keyVals) + "");
+                delimeted = keyVals;
+                query_str.append(key + " = ?");
+                psValues.add(delimeted);
                 ++ctr;
             }
         }
@@ -453,7 +469,7 @@
         Vector<String[]> rows_vector = new Vector<String[]>();
         try {
             String query = TableManager.replaceWithIsNull(new String(query_str));
-            ResultSet resultSet = rs = conn == null ? TableManager.executeQuery(query) : TableManager.executeQuery(query, conn);
+            ResultSet resultSet = rs = conn == null ? TableManager.executeQueryPS(query, psValues.toArray(new String[psValues.size()])) : TableManager.executeQueryPS(query, psValues.toArray(new String[psValues.size()]), conn);
             while (rs.next()) {
                 String[] row = new String[columns.length];
                 for (int i2 = 0; i2 < row.length; ++i2) {
@@ -496,6 +512,8 @@
 
     public String[][] getSubRange(String[] wherefields, String[] wherevals, boolean needToUseLikeClause, String[] columns, String tablename) throws SQLException {
         StringBuffer query_str = new StringBuffer("SELECT ").append(columns[0]);
+        ArrayList<String> psValues = new ArrayList<String>();
+        String delimeted = null;
         for (int i = 1; i < columns.length; ++i) {
             query_str.append(COMA + columns[i]);
         }
@@ -503,14 +521,20 @@
         int nfields = wherefields.length;
         if (nfields >= 2) {
             for (int i = 0; i <= nfields - 2; ++i) {
-                query_str.append(wherefields[i] + (needToUseLikeClause ? " LIKE " : " = ") + pool.delimitDBColumnValue(wherevals[i]) + AND);
-            }
-            query_str.append(wherefields[nfields - 1] + (needToUseLikeClause ? " LIKE " : " = ") + pool.delimitDBColumnValue(wherevals[nfields - 1]));
+                delimeted = wherevals[i];
+                query_str.append(wherefields[i] + (needToUseLikeClause ? " LIKE ?" : " = ?") + AND);
+                psValues.add(delimeted);
+            }
+            delimeted = wherevals[nfields - 1];
+            query_str.append(wherefields[nfields - 1] + (needToUseLikeClause ? " LIKE ?" : " = ?"));
+            psValues.add(delimeted);
         } else {
-            query_str.append(wherefields[0] + (needToUseLikeClause ? " LIKE " : " = ") + pool.delimitDBColumnValue(wherevals[0]));
+            delimeted = wherevals[0];
+            query_str.append(wherefields[0] + (needToUseLikeClause ? " LIKE ?" : " = ?"));
+            psValues.add(delimeted);
         }
         ResultSet rs = null;
-        rs = TableManager.executeQuery(new String(query_str));
+        rs = TableManager.executeQueryPS(query_str.toString(), psValues.toArray(new String[psValues.size()]));
         Vector<String[]> vector = new Vector<String[]>();
         String[] fields = new String[columns.length];
         try {
@@ -543,6 +567,7 @@
         return this.getNRows(query, startIndex, numRows);
     }
 
+    @Deprecated
     public Vector getNRows(String query, int startIndex, int numRows) throws SQLException {
         if (startIndex == 0) {
             return null;
@@ -693,22 +718,27 @@
     @Override
     public int updateColumn(String[] keyfields, String[] keyvalues, String column, String value, String tablename, Connection connection) throws SQLException {
         int nrows = 0;
-        String delimited = pool.delimitDBColumnValue(value);
+        String delimited = value;
         int nfields = keyfields.length;
-        StringBuffer update_str = new StringBuffer("UPDATE " + tablename + " SET last_updated=" + pool.delimitDBColumnValue(TableManager.toSqlDate(SGMSUtil.getDateInTimeZone(new Date(), null, "UTC"))) + " , " + column + "=" + delimited + WHERE);
+        ArrayList<String> psValues = new ArrayList<String>();
+        StringBuffer update_str = new StringBuffer("UPDATE " + tablename + " SET last_updated=" + pool.delimitDBColumnValue(TableManager.toSqlDate(SGMSUtil.getDateInTimeZone(new Date(), null, "UTC"))) + " , " + column + "= ? WHERE ");
+        psValues.add(delimited);
         if (nfields >= 2) {
             for (int i = 0; i <= nfields - 2; ++i) {
-                delimited = pool.delimitDBColumnValue(keyvalues[i]);
-                update_str.append(keyfields[i] + "=" + delimited + AND);
-            }
-            delimited = pool.delimitDBColumnValue(keyvalues[nfields - 1]);
-            update_str.append(keyfields[nfields - 1] + "=" + delimited);
+                delimited = keyvalues[i];
+                update_str.append(keyfields[i] + "= ? AND ");
+                psValues.add(delimited);
+            }
+            delimited = keyvalues[nfields - 1];
+            update_str.append(keyfields[nfields - 1] + "=? ");
+            psValues.add(delimited);
         } else {
-            delimited = pool.delimitDBColumnValue(keyvalues[0]);
-            update_str.append(keyfields[0] + "=" + delimited);
+            delimited = keyvalues[0];
+            update_str.append(keyfields[0] + "=?");
+            psValues.add(delimited);
         }
         SGMSUtil.debugOut((Object)("TableManager: updateColumn update: " + update_str.toString()), 3);
-        nrows = connection == null ? this.executeUpdate(update_str.toString()) : this.executeUpdate(update_str.toString(), connection);
+        nrows = connection == null ? this.executeUpdatePS(update_str.toString(), psValues.toArray(new String[psValues.size()])) : this.executeUpdatePS(update_str.toString(), psValues.toArray(new String[psValues.size()]), connection);
         return nrows;
     }
 
@@ -751,10 +781,14 @@
         }
         try {
             StringBuffer query = new StringBuffer("");
+            String delimeter = null;
+            ArrayList<String> psValues = new ArrayList<String>();
             query.append("UPDATE " + tableName + " ");
             query.append("SET last_updated = " + pool.delimitDBColumnValue(TableManager.toSqlDate(SGMSUtil.getDateInTimeZone(new Date(), null, "UTC"))));
             for (int i = 0; i < cols.length; ++i) {
-                query.append(", " + cols[i] + " = " + pool.delimitDBColumnValue(values[i]));
+                delimeter = values[i];
+                query.append(", " + cols[i] + " = ?");
+                psValues.add(delimeter);
             }
             if (keyTable != null && keyTable.size() > 0) {
                 query.append(WHERE);
@@ -778,19 +812,25 @@
                             query.append(AND);
                         }
                         if (((Vector)keyVals).size() == 1) {
-                            query.append(key + " = " + pool.delimitDBColumnValue((String)((Vector)keyVals).elementAt(0)) + "");
+                            delimeter = (String)((Vector)keyVals).elementAt(0);
+                            query.append(key + " = ?");
+                            psValues.add(delimeter);
                         } else {
-                            Vector<String> vec = this.getValuesInsertedForInClause((Vector<String>)keyVals, true);
-                            if (vec.size() > 1) {
+                            LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause((Vector<String>)keyVals);
+                            if (inClauseMap.size() > 1) {
                                 query.append("(");
                             }
-                            for (int j = 0; j < vec.size(); ++j) {
+                            Set<String> keySet = inClauseMap.keySet();
+                            int j = 0;
+                            for (String questionMarks : keySet) {
                                 if (j > 0) {
                                     query.append(" OR ");
                                 }
-                                query.append(key + " IN (" + vec.elementAt(j) + ")");
+                                query.append(key + " IN (" + questionMarks.substring(1, questionMarks.length()) + ")");
+                                psValues.addAll((Collection)inClauseMap.get(questionMarks));
+                                ++j;
                             }
-                            if (vec.size() > 1) {
+                            if (inClauseMap.size() > 1) {
                                 query.append(")");
                             }
                         }
@@ -802,7 +842,9 @@
                         if (ctr > 0) {
                             query.append(AND);
                         }
-                        query.append(key + " = " + ((Integer)keyVals).toString() + "");
+                        delimeter = ((Integer)keyVals).toString();
+                        query.append(key + " = ?");
+                        psValues.add(delimeter);
                         ++ctr;
                         continue;
                     }
@@ -811,12 +853,14 @@
                     if (ctr > 0) {
                         query.append(AND);
                     }
-                    query.append(key + " = " + pool.delimitDBColumnValue((String)keyVals) + "");
+                    delimeter = pool.delimitDBColumnValue((String)keyVals);
+                    query.append(key + " = ?");
+                    psValues.add(delimeter);
                     ++ctr;
                 }
             }
             SGMSUtil.debugOut((Object)("updateColumnsUsingIn(): QUERY: " + query.toString()), 3);
-            nRows = connection == null ? this.executeUpdate(query.toString()) : this.executeUpdate(query.toString(), connection);
+            nRows = connection == null ? this.executeUpdatePS(query.toString(), psValues.toArray(new String[psValues.size()])) : this.executeUpdatePS(query.toString(), psValues.toArray(new String[psValues.size()]), connection);
         }
         catch (SQLException sqle) {
             throw sqle;
@@ -833,15 +877,21 @@
     }
 
     public void updateAllRows(String[] cols, String[] values, String tablename) throws SQLException {
-        StringBuffer update_str = new StringBuffer("UPDATE " + tablename + " SET " + cols[0] + "= " + pool.delimitDBColumnValue(values[0]));
+        ArrayList<String> psValues = new ArrayList<String>();
+        String delimited = pool.delimitDBColumnValue(values[0]);
+        StringBuffer update_str = new StringBuffer("UPDATE " + tablename + " SET " + cols[0] + "= ?");
+        psValues.add(delimited);
         for (int i = 1; i < cols.length; ++i) {
-            update_str.append(", " + cols[i] + "= " + pool.delimitDBColumnValue(values[i]));
+            delimited = values[i];
+            update_str.append(", " + cols[i] + "= ?");
+            psValues.add(delimited);
         }
         update_str.append(", last_updated=" + pool.delimitDBColumnValue(TableManager.toSqlDate(SGMSUtil.getDateInTimeZone(new Date(), null, "UTC"))));
         SGMSUtil.debugOut((Object)("TableManager: updateAllRows update: " + update_str.toString()), 3);
-        this.executeUpdate(new String(update_str));
+        this.executeUpdatePS(update_str.toString(), psValues.toArray(new String[psValues.size()]));
     }
 
+    @Deprecated
     public int[] batchUpdate(Hashtable rows) throws SQLException {
         String[] sqlInsUpd = new String[rows.size()];
         for (int j = 0; j < rows.size(); ++j) {
@@ -914,6 +964,7 @@
         }
     }
 
+    @Deprecated
     public int[] batchUpdate(ArrayList<String> batchSqls) throws SQLException {
         if (batchSqls == null || batchSqls.isEmpty()) {
             return null;
@@ -983,21 +1034,31 @@
         session_str.append(", last_updated");
         session_str.append(") VALUES (");
         int nvalues = values.length;
+        String delimeted = null;
+        ArrayList<String> psValues = new ArrayList<String>();
         if (nvalues >= 2) {
             for (int i = 0; i <= nvalues - 2; ++i) {
-                session_str.append(pool.delimitDBColumnValue(values[i]) + COMA);
-            }
-            session_str.append(pool.delimitDBColumnValue(values[nvalues - 1]));
+                delimeted = values[i];
+                session_str.append("?,");
+                psValues.add(delimeted);
+            }
+            delimeted = values[nvalues - 1];
+            session_str.append("?");
+            psValues.add(delimeted);
         } else {
-            session_str.append(pool.delimitDBColumnValue(values[0]));
-        }
-        session_str.append(" ," + pool.delimitDBColumnValue(TableManager.toSqlDate(SGMSUtil.getDateInTimeZone(new Date(), null, "UTC"))));
+            delimeted = values[0];
+            session_str.append("?");
+            psValues.add(delimeted);
+        }
+        delimeted = TableManager.toSqlDate(SGMSUtil.getDateInTimeZone(new Date(), null, "UTC"));
+        session_str.append(" ,?");
+        psValues.add(delimeted);
         session_str.append(")");
         SGMSUtil.debugOut((Object)("TableManager: insertNewRowFields insert: " + session_str.toString()), 3);
         if (conn == null) {
-            this.executeUpdate(new String(session_str));
+            this.executeUpdatePS(session_str.toString(), psValues.toArray(new String[psValues.size()]));
         } else {
-            this.executeUpdate(new String(session_str), conn);
+            this.executeUpdatePS(session_str.toString(), psValues.toArray(new String[psValues.size()]), conn);
         }
     }
 
@@ -1009,16 +1070,24 @@
     public int deleteRow(String[] keyfields, String[] keyvalues, String tablename, Connection conn) throws SQLException {
         StringBuffer update_str = new StringBuffer("DELETE FROM " + tablename + WHERE);
         int nfields = keyfields.length;
+        String delimeted = null;
+        ArrayList<String> psValues = new ArrayList<String>();
         if (nfields >= 2) {
             for (int i = 0; i <= nfields - 2; ++i) {
-                update_str.append(keyfields[i] + "= " + pool.delimitDBColumnValue(keyvalues[i]) + AND);
-            }
-            update_str.append(keyfields[nfields - 1] + "= " + pool.delimitDBColumnValue(keyvalues[nfields - 1]));
+                delimeted = keyvalues[i];
+                update_str.append(keyfields[i] + "= ? AND ");
+                psValues.add(delimeted);
+            }
+            delimeted = keyvalues[nfields - 1];
+            update_str.append(keyfields[nfields - 1] + "= ?");
+            psValues.add(delimeted);
         } else {
-            update_str.append(keyfields[0] + "= " + pool.delimitDBColumnValue(keyvalues[0]));
+            delimeted = keyvalues[0];
+            update_str.append(keyfields[0] + "= ?");
+            psValues.add(delimeted);
         }
         SGMSUtil.debugOut((Object)("TableManager: deleteRow delete: " + update_str.toString()), 3);
-        return conn == null ? this.executeUpdate(new String(update_str)) : this.executeUpdate(new String(update_str), conn);
+        return conn == null ? this.executeUpdatePS(update_str.toString(), psValues.toArray(new String[psValues.size()])) : this.executeUpdatePS(update_str.toString(), psValues.toArray(new String[psValues.size()]), conn);
     }
 
     public int deleteAllRows(String tablename) throws SQLException {
@@ -1034,6 +1103,8 @@
         }
         try {
             StringBuffer query = new StringBuffer("");
+            String delimeter = null;
+            ArrayList<String> psValues = new ArrayList<String>();
             query.append("DELETE FROM " + tableName);
             if (keyTable != null && keyTable.size() > 0) {
                 query.append(WHERE);
@@ -1057,19 +1128,25 @@
                             query.append(AND);
                         }
                         if (((Vector)keyVals).size() == 1) {
-                            query.append(key + " = " + pool.delimitDBColumnValue((String)((Vector)keyVals).elementAt(0)) + "");
+                            delimeter = pool.delimitDBColumnValue((String)((Vector)keyVals).elementAt(0));
+                            query.append(key + " = ?");
+                            psValues.add(delimeter);
                         } else {
-                            Vector<String> vec = this.getValuesInsertedForInClause((Vector<String>)keyVals, true);
-                            if (vec.size() > 1) {
+                            LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause((Vector<String>)keyVals);
+                            if (inClauseMap.size() > 1) {
                                 query.append("(");
                             }
-                            for (int j = 0; j < vec.size(); ++j) {
+                            Set<String> keySet = inClauseMap.keySet();
+                            int j = 0;
+                            for (String questionMarks : keySet) {
                                 if (j > 0) {
                                     query.append(" OR ");
                                 }
-                                query.append(key + " IN (" + vec.elementAt(j) + ")");
+                                query.append(key + " IN (" + questionMarks.substring(1, questionMarks.length()) + ")");
+                                psValues.addAll((Collection)inClauseMap.get(questionMarks));
+                                ++j;
                             }
-                            if (vec.size() > 1) {
+                            if (inClauseMap.size() > 1) {
                                 query.append(")");
                             }
                         }
@@ -1081,7 +1158,9 @@
                         if (ctr > 0) {
                             query.append(AND);
                         }
-                        query.append(key + " = " + ((Integer)keyVals).toString() + "");
+                        delimeter = ((Integer)keyVals).toString();
+                        query.append(key + " = ?");
+                        psValues.add(delimeter);
                         ++ctr;
                         continue;
                     }
@@ -1090,12 +1169,14 @@
                     if (ctr > 0) {
                         query.append(AND);
                     }
-                    query.append(key + " = " + pool.delimitDBColumnValue((String)keyVals) + "");
+                    delimeter = pool.delimitDBColumnValue((String)keyVals);
+                    query.append(key + " = ?");
+                    psValues.add(delimeter);
                     ++ctr;
                 }
             }
             SGMSUtil.debugOut((Object)("deleteUsingIn(): QUERY: " + query.toString()), 3);
-            this.executeUpdate(query.toString());
+            this.executeUpdatePS(query.toString(), psValues.toArray(new String[psValues.size()]));
         }
         catch (SQLException sqle) {
             bRetVal = false;
@@ -1269,6 +1350,7 @@
         return this.getTagContents(doc, tagname);
     }
 
+    @Deprecated
     public int getCount(String query, Connection connection) {
         return this.getCount(query);
     }
@@ -1276,6 +1358,7 @@
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
+    @Deprecated
     public int getCount(String query) {
         ResultSet rs = null;
         try {
@@ -1299,7 +1382,7 @@
     }
 
     public synchronized String uniqueID(String table, String column, String prefix) {
-        String query = "SELECT COUNT(*) FROM " + table + WHERE + column + " LIKE '" + prefix;
+        String query = "SELECT COUNT(*) FROM " + table + (DataBaseConnectionPool.isSQLServer() ? " with (NOLOCK)" : "") + WHERE + column + " LIKE ?";
         int nAttempts = 25;
         int random = 0;
         try {
@@ -1317,7 +1400,8 @@
         Random rand = new Random();
         while (--nAttempts > 0) {
             String str = String.valueOf(time - (long)random);
-            if (this.getCount(query + str + "%' ") == 0) {
+            String[] psValues = new String[]{prefix + str + "%"};
+            if (this.getCountPS(query, psValues) == 0) {
                 return id.append(str).append(serialNumber.trim()).toString();
             }
             random = rand.nextInt(60000) + 1;
@@ -1325,19 +1409,15 @@
         return null;
     }
 
-    protected void sendQueryResultToApplet(PrintWriter out, String query, Connection connection) throws IOException {
-        this.sendQueryResultToApplet(out, query);
-    }
-
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
-    protected void sendQueryResultToApplet(PrintWriter out, String query) throws IOException {
+    protected void sendQueryResultToApplet(PrintWriter out, String query, String[] psValue) throws IOException {
         ResultSet rs = null;
         ResultSetMetaData rsmd = null;
         int nColumns = 0;
         try {
-            rs = TableManager.executeQuery(query);
+            rs = TableManager.executeQueryPS(query, psValue);
             int nRows = 0;
             String value = null;
             String nullString = "";
@@ -1367,19 +1447,18 @@
         }
     }
 
-    protected void sendQueryResultToAppletSingleLine(PrintWriter out, String query, Connection connection) throws IOException {
-        this.sendQueryResultToAppletSingleLine(out, query);
-    }
-
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
-    protected void sendQueryResultToAppletSingleLine(PrintWriter out, String query) throws IOException {
+    protected void sendQueryResultToAppletSingleLinePS(PrintWriter out, String query, String[] values) throws IOException {
+        if (values == null) {
+            values = new String[]{};
+        }
         ResultSet rs = null;
         ResultSetMetaData rsmd = null;
         int nColumns = 0;
         try {
-            rs = TableManager.executeQuery(query);
+            rs = TableManager.executeQueryPS(query, values);
             String value = null;
             String nullString = "";
             while (rs.next()) {
@@ -1408,10 +1487,12 @@
         }
     }
 
+    @Deprecated
     public boolean sendUpdateResultToApplet(PrintWriter out, String query, Connection connection) throws IOException {
         return this.sendUpdateResultToApplet(out, query);
     }
 
+    @Deprecated
     public boolean sendUpdateResultToApplet(PrintWriter out, String query) throws IOException {
         try {
             int nRows = this.executeUpdate(query);
@@ -1499,6 +1580,11 @@
         return TableManager.executeQueryPS(querystr, values, false, null);
     }
 
+    public static ResultSet executeQueryWithValue(String querystr, String value) throws SQLException {
+        String[] values = new String[]{value};
+        return TableManager.executeQueryPS(querystr, values, false, null);
+    }
+
     protected static ResultSet executeQueryPS(String querystr, String[] values, boolean scrollable) throws SQLException {
         return TableManager.executeQueryPS(querystr, values, scrollable, null);
     }
@@ -1656,6 +1742,21 @@
         }
     }
 
+    public int executeUpdatePS(String updatestr, String value) throws SQLException {
+        Connection connection = pool.requestConnection();
+        try {
+            String[] values = new String[]{value};
+            int n = this.executeUpdatePS(updatestr, values, connection);
+            return n;
+        }
+        catch (SQLException e) {
+            throw e;
+        }
+        finally {
+            pool.freeConnection(connection);
+        }
+    }
+
     public int executeUpdate(String updatestr) throws SQLException {
         updatestr = TableManager.replaceWithIsNull(updatestr);
         Connection connection = pool.requestConnection();
@@ -1967,11 +2068,11 @@
         StringBuffer valBuf = new StringBuffer();
         String list = "";
         int count = 0;
-        qry = !DataBaseConnectionPool.isSQLServer() ? "SELECT DISTINCT(" + prefs_file_name + ") FROM " + tableName + " WHERE LENGTH(" + prefs_file_name + ") > 0 AND domainID = '" + domainId + "' ORDER BY " + prefs_file_name : "SELECT DISTINCT(" + prefs_file_name + ") FROM " + tableName + " WHERE LEN(" + prefs_file_name + ") > 0 AND domainID = '" + domainId + "' ORDER BY " + prefs_file_name;
+        qry = !DataBaseConnectionPool.isSQLServer() ? "SELECT DISTINCT(" + prefs_file_name + ") FROM " + tableName + " WHERE LENGTH(" + prefs_file_name + ") > 0 AND domainID = ? ORDER BY " + prefs_file_name : "SELECT DISTINCT(" + prefs_file_name + ") FROM " + tableName + " WHERE LEN(" + prefs_file_name + ") > 0 AND domainID = ? ORDER BY " + prefs_file_name;
         SGMSUtil.debugOut("Query to Get Distinct List of prefs_file_name in Params:" + qry);
         ResultSet rs = null;
         try {
-            rs = TableManager.executeQuery(qry);
+            rs = TableManager.executeQueryPS(qry, new String[]{domainId});
             while (rs.next()) {
                 String prefsVal = rs.getString(1);
                 if (prefsVal.equalsIgnoreCase(prefsDefValue)) {
@@ -1988,11 +2089,16 @@
             out.println(list);
         }
         catch (SQLException e) {
+            try {
             SGMSUtil.debugOut("\nSQLException thrown for: " + qry + e.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
     }
 
     public String createRandomHexNumber(int len) {
@@ -2119,26 +2225,32 @@
         return resultstr;
     }
 
-    public Vector<String> getValuesInsertedForInClause(Vector<String> vecValues, boolean bTreatValuesAsString) {
-        Vector<String> vecQuery = new Vector<String>();
+    protected LinkedHashMap<String, List<String>> getValuesInsertedForInClause(Vector<String> vecValues) {
+        LinkedHashMap<String, List<String>> inCaluseMap = new LinkedHashMap<String, List<String>>();
         int ctr = 0;
         StringBuffer sbQuery = new StringBuffer("");
+        String delimeted = null;
+        ArrayList<String> psValues = new ArrayList<String>();
         for (String id : vecValues) {
             ++ctr;
             if (sbQuery.length() > 0) {
                 sbQuery.append(COMA);
             }
-            sbQuery.append(bTreatValuesAsString ? pool.delimitDBColumnValue(id) : id);
+            delimeted = id;
+            sbQuery.append("?");
+            psValues.add(delimeted);
             if (ctr < 1000 || sbQuery.length() <= 0) continue;
-            vecQuery.addElement(sbQuery.toString());
+            inCaluseMap.put(inCaluseMap.size() + sbQuery.toString(), psValues);
             sbQuery.setLength(0);
+            delimeted = null;
+            psValues = new ArrayList();
             ctr = 0;
         }
         if (sbQuery.length() > 0) {
-            vecQuery.addElement(sbQuery.toString());
+            inCaluseMap.put(inCaluseMap.size() + sbQuery.toString(), psValues);
             sbQuery.setLength(0);
         }
-        return vecQuery;
+        return inCaluseMap;
     }
 
     public static String getResourceBundleString(String resourceName, HttpServletRequest req) {
@@ -2159,7 +2271,6 @@
     }
 
     public List<List<String>> getRows(Map<String, List<String>> colInfoMap, String tablename) throws SQLException {
-        int i;
         if (colInfoMap.size() == 0) {
             return null;
         }
@@ -2173,28 +2284,35 @@
         }
         StringBuffer query = new StringBuffer("SELECT ").append(columns.get(0));
         int colLen = columns.size();
-        for (i = 1; i < colLen; ++i) {
+        for (int i = 1; i < colLen; ++i) {
             query.append(", " + columns.get(i));
         }
         query.append(" FROM " + tablename);
+        if (DataBaseConnectionPool.isSQLServer()) {
+            query.append(" with (NOLOCK) ");
+        }
+        String delimeted = null;
+        ArrayList<String> psValues = new ArrayList<String>();
         if (keyFields != null && keyFields.size() > 0) {
             int keyFieldsSize = keyFields.size();
             if (operators != null && keyFieldsSize != operators.size() || keyValues != null && keyFieldsSize != keyValues.size()) {
                 return null;
             }
             query.append(WHERE);
-            for (int i2 = 0; i2 < keyFields.size(); ++i2) {
-                if (i2 > 0) {
+            for (int i = 0; i < keyFields.size(); ++i) {
+                if (i > 0) {
                     query.append(AND);
                 }
-                query.append(keyFields.get(i2)).append(" ");
-                query.append(operators.get(i2)).append(" ");
-                query.append(QUOTE).append(keyValues.get(i2)).append(QUOTE);
+                query.append(keyFields.get(i)).append(" ");
+                query.append(operators.get(i)).append(" ");
+                delimeted = keyValues.get(i);
+                query.append("?");
+                psValues.add(delimeted);
             }
         }
         if (orderBy != null && orderBy.size() > 0) {
             query.append(" ORDER BY ");
-            for (i = 0; i < orderBy.size(); ++i) {
+            for (int i = 0; i < orderBy.size(); ++i) {
                 if (i > 0) {
                     query.append(", ");
                 }
@@ -2204,21 +2322,25 @@
         ResultSet rs = null;
         ArrayList<List<String>> rows = new ArrayList<List<String>>();
         try {
-            rs = TableManager.executeQuery(query.toString());
+            rs = TableManager.executeQueryPS(query.toString(), psValues.toArray(new String[psValues.size()]));
             while (rs.next()) {
                 ArrayList<String> row = new ArrayList<String>();
-                for (int i3 = 0; i3 < colLen; ++i3) {
-                    row.add(TableManager.getValidString(rs, columns.get(i3)));
+                for (int i = 0; i < colLen; ++i) {
+                    row.add(TableManager.getValidString(rs, columns.get(i)));
                 }
                 rows.add(row);
             }
         }
         catch (SQLException e) {
+            try {
             throw e;
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return rows;
     }
 
@@ -2240,5 +2362,15 @@
         objDictionaryLock = new Object();
         configFileHashtable = null;
     }
+
+    class ResultPair<K, V> {
+        public K keys;
+        public V values;
+
+        public ResultPair(K k, V v) {
+            this.keys = k;
+            this.values = v;
+        }
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/TaskManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/TaskManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/TaskManager.java	2023-09-08 15:13:13.921798990 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/TaskManager.java	2023-09-08 15:14:40.832455917 -0700
@@ -35,10 +35,13 @@
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Calendar;
+import java.util.Collection;
+import java.util.Collections;
 import java.util.Date;
 import java.util.GregorianCalendar;
 import java.util.HashMap;
 import java.util.Hashtable;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.StringTokenizer;
@@ -246,8 +249,8 @@
 
     public Vector getTaskListFromUnitId(String id) throws SQLException {
         Vector<Object> taskList = new Vector<Object>();
-        String query = new String("select TASKID from " + DataBaseConnectionPool.getTablePrefix() + "TASKS where UNITID='" + id + "' AND (CHANGEID IS NULL OR CHANGEID = '')");
-        ResultSet rs = TaskManager.executeQuery(query);
+        String query = new String("select TASKID from " + DataBaseConnectionPool.getTablePrefix() + "TASKS where UNITID= ? AND (CHANGEID IS NULL OR CHANGEID = '')");
+        ResultSet rs = TaskManager.executeQueryWithValue(query, id);
         while (rs.next()) {
             taskList.addElement(this.createNewTask(TaskManager.getValidString(rs, TASKID)));
         }
@@ -441,16 +444,21 @@
     public synchronized String[] getAllTaskIdsForUser(String domainID, String user_id, boolean isSuperAdmin, boolean isAdministrator) throws SQLException {
         String unitPermsTableName = DataBaseConnectionPool.getTablePrefix() + "UNIT_PERMS";
         StringBuilder query = new StringBuilder("SELECT TASKID FROM ").append(tableName);
+        ArrayList<String> values = new ArrayList<String>();
         if (!isSuperAdmin) {
             query.append(" WHERE ").append("(");
             if (!isAdministrator) {
                 query.append(tableName + ".UNITID IN (SELECT UNIT_ID FROM ").append(unitPermsTableName);
-                query.append(" WHERE USER_ID = '").append(user_id).append("' AND ").append("domainID = '" + domainID + "') ").append("OR ").append("TASK_USERID = '").append(user_id).append("' AND ");
+                query.append(" WHERE USER_ID = ? AND ").append("domainID = ? ) ").append("OR ").append("TASK_USERID = ? ").append(" AND ");
+                values.add(user_id);
+                values.add(domainID);
+                values.add(user_id);
             }
-            query.append(tableName + "." + DOMAINID).append("='").append(domainID).append("') ");
+            query.append(tableName + "." + DOMAINID).append("= ?) ");
             query.append("AND (CHANGEID IS NULL OR CHANGEID = '')");
+            values.add(domainID);
         }
-        Vector vector = this.getQueryResults(query.toString());
+        Vector vector = this.getQueryResultsPS(query.toString(), values.toArray(new String[values.size()]));
         int nrows = vector.size();
         String[] result = new String[nrows];
         for (int i = 0; i < nrows; ++i) {
@@ -618,9 +626,9 @@
         Hashtable<String, String> ht = new Hashtable<String, String>();
         ResultSet rs = null;
         try {
-            String query = "SELECT TASKID, UNITID FROM " + tableName + " WHERE TASK_METHOD=" + taskMethod;
+            String query = "SELECT TASKID, UNITID FROM " + tableName + " WHERE TASK_METHOD= ?";
             SGMSUtil.debugOut((Object)("- Query: " + query), 2);
-            rs = TaskManager.executeQuery(query);
+            rs = TaskManager.executeQueryWithValue(query, String.valueOf(taskMethod));
             while (rs.next()) {
                 ht.put(TaskManager.getValidString(rs, 2), TaskManager.getValidString(rs, 1));
             }
@@ -845,11 +853,11 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static boolean checkIfTaskExists(String taskID) {
-        String query = "SELECT * FROM " + tableName + " where " + TASKID + "='" + taskID + "'";
+        String query = "SELECT * FROM " + tableName + " where " + TASKID + "= ?";
         ResultSet rs = null;
         try {
             boolean retValue;
-            rs = TaskManager.executeQuery(query);
+            rs = TaskManager.executeQueryWithValue(query, taskID);
             boolean bl = retValue = rs.next();
             return bl;
         }
@@ -890,10 +898,14 @@
             } else {
                 return -1;
             }
-            Vector<String> vecDelQuery = this.getValuesInsertedForInClause(IDs, true);
-            for (String query : vecDelQuery) {
+            LinkedHashMap<String, List<String>> vecDelQuery = this.getValuesInsertedForInClause(IDs);
+            ArrayList psValues = null;
+            for (String questionMarks : vecDelQuery.keySet()) {
+                psValues = new ArrayList();
+                String query = String.join((CharSequence)",", Collections.nCopies(((List)vecDelQuery.get(questionMarks)).size(), "?"));
+                psValues.addAll((Collection)vecDelQuery.get(questionMarks));
                 SGMSUtil.debugOut((Object)("Delete Tasks Query: " + deletestr + query + ")"), 2);
-                this.executeUpdate(deletestr + query + ")");
+                this.executeUpdatePS(deletestr + query + ")", psValues.toArray(new String[psValues.size()]));
             }
             this.deleteImgReferences();
         }
@@ -939,8 +951,9 @@
         if (imageList.size() > 0) {
             imgQuery = new StringBuffer(" DOWNLOAD != " + pool.delimitDBColumnValue(download));
             imgQuery.append(" AND FIRMWAREIMGID NOT IN (");
-            Vector<String> vecDelQuery = this.getValuesInsertedForInClause(imageList, true);
-            for (String query : vecDelQuery) {
+            LinkedHashMap<String, List<String>> vecDelQuery = this.getValuesInsertedForInClause(imageList);
+            for (String questionMarks : vecDelQuery.keySet()) {
+                String query = String.join((CharSequence)",", (Iterable)vecDelQuery.get(questionMarks));
                 vecDeleteQuery.addElement(imgQuery.toString() + query + ")");
             }
         } else {
@@ -1008,7 +1021,6 @@
     }
 
     public boolean setTasksExecuteImmediately(Vector task_ids, boolean execute, String domainID) throws SQLException {
-        int i;
         if (task_ids.size() == 0) {
             return false;
         }
@@ -1018,13 +1030,18 @@
         } else {
             query.append("'0'");
         }
-        query.append(" WHERE TASKID IN ('");
-        for (i = 0; i < task_ids.size() - 1; ++i) {
-            query.append(task_ids.elementAt(i) + "','");
+        query.append(" WHERE TASKID IN (");
+        ArrayList<String> values = new ArrayList<String>();
+        for (int i = 0; i < task_ids.size(); ++i) {
+            if (i > 0) {
+                query.append(", ");
+            }
+            query.append("?");
+            values.add((String)task_ids.elementAt(i));
         }
-        query.append(task_ids.elementAt(i) + "')");
+        query.append(")");
         SGMSUtil.debugOut((Object)("query = " + query.toString()), 3);
-        this.executeUpdate(query.toString());
+        this.executeUpdatePS(query.toString(), values.toArray(new String[values.size()]));
         boolean logged = false;
         for (int k = 0; k < task_ids.size(); ++k) {
             if (TaskManager.checkIfTaskExists((String)task_ids.elementAt(k))) {
@@ -1149,17 +1166,17 @@
     public synchronized void setExecuteTime(String taskID, Date executeDate, String timeZone) throws SQLException {
         String updatestr = new String();
         executeDate = SGMSUtil.getDateInTimeZone(executeDate, timeZone, "UTC");
-        updatestr = "UPDATE " + tableName + " set EXECUTE_TIME=" + pool.delimitDBColumnValue(TaskManager.toSqlDate(executeDate)) + " where TASKID='" + taskID + "'";
+        updatestr = "UPDATE " + tableName + " set EXECUTE_TIME= ? where TASKID= ?";
         SGMSUtil.debugOut((Object)updatestr, 3);
-        this.executeUpdate(updatestr);
+        this.executeUpdatePS(updatestr, new String[]{TaskManager.toSqlDate(executeDate), taskID});
     }
 
     public synchronized Date getTaskExecutionTime(String taskID) {
         Date executionDate = null;
         try {
             String query = "SELECT EXECUTE_TIME FROM " + tableName;
-            query = query + " WHERE TASKID = '" + taskID + "'";
-            Vector vector = this.getQueryResults(query);
+            query = query + " WHERE TASKID = ?";
+            Vector vector = this.getQueryResultsPS(query, new String[]{taskID});
             String executionDateStr = "";
             for (int i = 0; i < vector.size(); ++i) {
                 String[] temp = (String[])vector.elementAt(i);
@@ -1623,8 +1640,8 @@
 
         private SgmsTask(String taskID) throws SQLException {
             String getquery = new String();
-            getquery = "SELECT TASKID,domainID,TASK_USERID,UNITID,NODEID,TIME_CREATED,TIME_ATTEMPTED,LAST_ERROR_STRING,DESCRIPTION,N_ATTEMPTS,TASK_METHOD,DELETE_METHOD,SET_PARAM_NAMES,SET_PARAM_VALUES,SET_PARAM_EXTRA,ADD_PARAM_NAMES,ADD_PARAM_VALUES,ADD_PARAM_EXTRA,DEL_PARAM_EXTRA,DEL_PARAM_VALUES,DEL_PARAM_NAMES,DOIMMEDIATELY,STATE,RESYNC ,EXECUTE_TIME,TASKCHECKPOINT,FW_UPDATE_STRING, FWSERIAL, CHANGEID FROM " + DataBaseConnectionPool.getTablePrefix() + "TASKS WHERE " + TaskManager.TASKID + "='" + taskID + "'";
-            ResultSet rs = TableManager.executeQuery(getquery);
+            getquery = "SELECT TASKID,domainID,TASK_USERID,UNITID,NODEID,TIME_CREATED,TIME_ATTEMPTED,LAST_ERROR_STRING,DESCRIPTION,N_ATTEMPTS,TASK_METHOD,DELETE_METHOD,SET_PARAM_NAMES,SET_PARAM_VALUES,SET_PARAM_EXTRA,ADD_PARAM_NAMES,ADD_PARAM_VALUES,ADD_PARAM_EXTRA,DEL_PARAM_EXTRA,DEL_PARAM_VALUES,DEL_PARAM_NAMES,DOIMMEDIATELY,STATE,RESYNC ,EXECUTE_TIME,TASKCHECKPOINT,FW_UPDATE_STRING, FWSERIAL, CHANGEID FROM " + DataBaseConnectionPool.getTablePrefix() + "TASKS WHERE " + TaskManager.TASKID + "= ?";
+            ResultSet rs = TableManager.executeQueryWithValue(getquery, taskID);
             if (rs.next()) {
                 this.taskID = TableManager.getValidString(rs, TaskManager.TASKID);
                 this.taskUserID = TableManager.getValidString(rs, TaskManager.TASK_USERID);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/TrapTableManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/TrapTableManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/TrapTableManager.java	2023-09-08 15:13:13.945799919 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/TrapTableManager.java	2023-09-08 15:14:40.849434720 -0700
@@ -103,10 +103,11 @@
     public TrapMgrInfo getTrapMgrInfo(String ip) throws SQLException {
         TrapMgrInfo trapMgrInfo;
         block4: {
+            String[] ipVal = new String[]{ip};
             StringBuffer querysb = new StringBuffer("SELECT * FROM ");
-            querysb.append(tableName).append(" WHERE listenip = ").append(pool.delimitDBColumnValue(ip));
+            querysb.append(tableName).append(" WHERE listenip = ?");
             trapMgrInfo = null;
-            Vector vector = this.getQueryResults(querysb.toString());
+            Vector vector = this.getQueryResultsPS(querysb.toString(), ipVal);
             if (vector == null || vector.size() <= 0) break block4;
             String[] row = (String[])vector.elementAt(0);
             trapMgrInfo = new TrapMgrInfo();
@@ -226,15 +227,16 @@
             StringBuffer sb = new StringBuffer("UPDATE ");
             sb.append(tableName);
             sb.append(" SET ");
-            sb.append("sendip0 = ").append(pool.delimitDBColumnValue(options[0]));
-            sb.append(", sendip1 = ").append(pool.delimitDBColumnValue(options[1]));
-            sb.append(", sendip2 = ").append(pool.delimitDBColumnValue(options[2]));
-            sb.append(", sendip3 = ").append(pool.delimitDBColumnValue(options[3]));
-            sb.append(", enableTrapFwd = ").append(pool.delimitDBColumnValue(options[4]));
-            sb.append(", enableTrapEmail = ").append(pool.delimitDBColumnValue(options[5]));
-            sb.append(" WHERE listenIP = ").append(pool.delimitDBColumnValue(ip));
+            sb.append("sendip0 = ?");
+            sb.append(", sendip1 = ?");
+            sb.append(", sendip2 = ?");
+            sb.append(", sendip3 = ?");
+            sb.append(", enableTrapFwd = ?");
+            sb.append(", enableTrapEmail = ?");
+            sb.append(" WHERE listenIP = ?");
+            String[] psValue = new String[]{options[0], options[1], options[2], options[3], options[4], options[5], ip};
             try {
-                this.executeUpdate(sb.toString());
+                this.executeUpdatePS(sb.toString(), psValue);
                 return true;
             }
             catch (SQLException sQLException) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/UserManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/UserManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/UserManager.java	2023-09-08 15:13:13.992801737 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/UserManager.java	2023-09-08 15:14:40.898373621 -0700
@@ -38,6 +38,7 @@
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.sgms.util.SGMSUtil2;
 import com.sonicwall.sgms.util.SimpleError;
+import com.sonicwall.sgms.util.TwoFactAuthUtil;
 import com.sonicwall.sgms.util.md;
 import com.sonicwall.viewpoint.usr.parser.USRCommonXMLParser;
 import com.sonicwall.viewpoint.usr.util.USRUtil;
@@ -51,8 +52,12 @@
 import java.text.ParseException;
 import java.text.ParsePosition;
 import java.text.SimpleDateFormat;
+import java.time.LocalDateTime;
+import java.time.ZoneOffset;
+import java.time.format.DateTimeFormatter;
 import java.util.ArrayList;
 import java.util.Calendar;
+import java.util.Collection;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.LinkedHashMap;
@@ -60,8 +65,10 @@
 import java.util.Locale;
 import java.util.Map;
 import java.util.Random;
+import java.util.Set;
 import java.util.StringTokenizer;
 import java.util.Vector;
+import java.util.concurrent.TimeUnit;
 import javax.security.auth.login.LoginException;
 import javax.servlet.RequestDispatcher;
 import javax.servlet.ServletContext;
@@ -86,6 +93,9 @@
     public static final int REPORT_ROWS_PER_SCREEN = 6;
     public static final int REPORT_USERS_WHOLE_NAMEIP_SRCH = 7;
     public static final int REPORT_BIDIRECTIONAL = 8;
+    public static final String DISABLE_2FA_LOGIN = "0";
+    public static final String ENABLE_2FA_LOGIN = "1";
+    public static final String CONFIRM_FIRST_2FA_LOGIN = "2";
     public static UserManager userManager = null;
     public static String tableName = null;
     public static String usersMotdTable = null;
@@ -101,7 +111,7 @@
     protected static ParamsManager pm = null;
     protected static FilterManager fm = null;
     protected static SGMSUtil su = null;
-    public static final String[] columns = new String[]{"ID", "USER_TYPE_ID", "PASSWORD", "FNAME", "MNAME", "LNAME", "STOCK", "PHONE", "FAX", "EMAIL1", "EMAIL2", "COMMENTS", "CREATION_DATE", "IDLE_TIMEOUT", "LAST_LOGIN", "DISABLED", "CONTROLS", "VIEW_ID", "COMMENTS_ENABLED", "AUDIO", "APPSELSHOW", "NEEDPWDCHANGE", "AUTODELETE", "ACTIVETILL", "SCHEDULEID", "ACTIVE", "DOMAINID", "AUTOSAVEDASHBOARD", "DAYS_TO_STORE_SCHED_REPORTS", "PAGER", "DATEPWDCHANGED", "SCHEDULEID", "AUTHSERVERID", "ISSUPERADMIN"};
+    public static final String[] columns = new String[]{"ID", "USER_TYPE_ID", "PASSWORD", "FNAME", "MNAME", "LNAME", "STOCK", "PHONE", "FAX", "EMAIL1", "EMAIL2", "COMMENTS", "CREATION_DATE", "IDLE_TIMEOUT", "LAST_LOGIN", "DISABLED", "CONTROLS", "VIEW_ID", "COMMENTS_ENABLED", "AUDIO", "APPSELSHOW", "NEEDPWDCHANGE", "AUTODELETE", "ACTIVETILL", "SCHEDULEID", "ACTIVE", "DOMAINID", "AUTOSAVEDASHBOARD", "DAYS_TO_STORE_SCHED_REPORTS", "PAGER", "DATEPWDCHANGED", "SCHEDULEID", "AUTHSERVERID", "ISSUPERADMIN", "IS2FA_ENABLED", "EMERGENCY_CODE", "SECRET_KEY", "KEEP_LOG_IN", "EMAIL_OTP", "EMAIL_OTP_TS"};
     public static final String[] keyFields = new String[]{"ID", "DOMAINID"};
     public static final int ID = 0;
     public static final int USER_TYPE_ID = 1;
@@ -131,6 +141,12 @@
     public static final int ACTIVE = 25;
     public static final int DOMAINID = 26;
     public static final int AUTOSAVEDASHBOARD = 27;
+    public static final int IS2FA_ENABLED = 34;
+    public static final int EMERGENCY_CODE = 35;
+    public static final int SECRET_KEY = 36;
+    public static final int KEEP_LOG_IN = 37;
+    public static final int EMAIL_OTP = 38;
+    public static final int EMAIL_OTP_TS = 39;
 
     public static void main(String[] args) {
         DataBaseConnectionPool.setDataBaseType((byte)1);
@@ -253,11 +269,11 @@
             logsManager.addNewLogWarning("", user2, resourceBundle.getString("LOGS_FAILED_LOGIN") + SGMSUtil2.unescapeUserID(user2) + " (Invalid User)", remoteAddr, domainID);
             return false;
         }
-        if (row[15].equals("1")) {
+        if (row[15].equals(ENABLE_2FA_LOGIN)) {
             logsManager.addNewLogWarning("", user2, resourceBundle.getString("LOGS_FAILED_LOGIN") + SGMSUtil2.unescapeUserID(user2) + " (Account Disabled)", remoteAddr, domainID);
             return false;
         }
-        if (password != null && password.length() > 0 && encryptionType != null && !encryptionType.equals("2")) {
+        if (password != null && password.length() > 0 && encryptionType != null && !encryptionType.equals(CONFIRM_FIRST_2FA_LOGIN)) {
             md mdc = new md(password);
             mdc.calc();
             password = mdc.toString();
@@ -279,7 +295,7 @@
         String[] row = null;
         try {
             row = this.getRow(keyFields, keyvals, columns, tableName);
-            if (row != null && row.length > 0 && !row[15].equals("1")) {
+            if (row != null && row.length > 0 && !row[15].equals(ENABLE_2FA_LOGIN)) {
                 hash = row[2];
             }
         }
@@ -323,7 +339,7 @@
             }
             return false;
         }
-        if (row[15].equals("1")) {
+        if (row[15].equals(ENABLE_2FA_LOGIN)) {
             if (logToConsole) {
                 logsManager.addNewLogWarning("", id, resourceBundle.getString("LOGS_FAILED_LOGIN") + SGMSUtil2.unescapeUserID(id) + " (Account Disabled)", remoteAddr, domainID);
             }
@@ -337,7 +353,7 @@
             Date current_time = new Date();
             String datestring = pool.getDBDateString(current_time);
             this.updateColumn(keyFields, keyvals, columns[14], datestring, tableName);
-            if (logToConsole) {
+            if (logToConsole && row[34] == DISABLE_2FA_LOGIN) {
                 logsManager.addNewLogFYI("", id, resourceBundle.getString("LOGS_SUCCESSFUL_LOGIN") + SGMSUtil2.unescapeUserID(id), remoteAddr, domainID);
             }
             return true;
@@ -373,20 +389,22 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public synchronized boolean addUser(String request_sessionid, String id, String usertypename, String viewName, String password, String firstname, String middlename, String lastname, boolean stock, String phone, String fax, String email1, String email2, String comment, String timeout, boolean disabled, boolean needPwdChange, boolean autoDelete, String activeTill, String scheduleID, boolean active, String domainID, boolean bLogCreation) {
-        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE ID = '" + id + "' AND domainID = '" + domainID + "'";
-        if (this.getCount(existsQuery) > 0) {
+        String[] psValues = new String[]{id, domainID};
+        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+        if (this.getCountPS(existsQuery, psValues) > 0) {
             SGMSUtil.debugOut("\nError: Cannot add User \"" + SGMSUtil2.unescapeUserID(id) + "\" since User already exists in the domain " + domainID + ". ");
             return false;
         }
-        String query = "SELECT ID, VIEW_ID, CONTROLS, usertypeType FROM " + tableName + " WHERE FNAME = '" + usertypename + "' AND";
-        query = query + " USER_TYPE_ID IS NULL AND DOMAINID = '" + domainID + "'";
+        String[] psValues2 = new String[]{usertypename, domainID};
+        String query = "SELECT ID, VIEW_ID, CONTROLS, usertypeType FROM " + tableName + " WHERE FNAME = ? AND";
+        query = query + " USER_TYPE_ID IS NULL AND DOMAINID = ?";
         ResultSet rs = null;
         String userTypeID = "";
         String viewID = "";
         String controls = "";
         String utType = String.valueOf(0);
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues2);
             rs.next();
             userTypeID = UserManager.getValidString(rs, "ID");
             viewID = UserManager.getValidString(rs, "VIEW_ID");
@@ -417,9 +435,10 @@
             if (SGMSUtil.isEPRS() && viewName.equals("ECAV View")) {
                 viewID = this.uniqueID(tableName, "ID", "VW");
                 query = "INSERT INTO " + viewsTable + " (ID,VIEW_NAME,USERID,domainID,VISIBLE_TO_ALL)";
-                query = query + " VALUES ('" + viewID + "','" + viewName + "','" + id + "','" + domainID + "','0')";
+                query = query + " VALUES (?,?,?,?,?)";
+                String[] psValuesForInsert = new String[]{viewID, viewName, id, domainID, DISABLE_2FA_LOGIN};
                 try {
-                    this.executeUpdate(query);
+                    this.executeUpdatePS(query, psValuesForInsert);
                 }
                 catch (SQLException se) {
                     se.getMessage();
@@ -427,9 +446,10 @@
                     return false;
                 }
             }
-            query = "SELECT ID FROM " + viewsTable + " WHERE VIEW_NAME = '" + viewName + "' AND DOMAINID = '" + domainID + "'";
+            query = "SELECT ID FROM " + viewsTable + " WHERE VIEW_NAME = ? AND DOMAINID = ?";
+            String[] psValuesFoSelect = new String[]{viewName, domainID};
             try {
-                rs = UserManager.executeQuery(query);
+                rs = UserManager.executeQueryPS(query, psValuesFoSelect);
                 rs.next();
                 viewID = UserManager.getValidString(rs, "ID");
             }
@@ -456,14 +476,14 @@
         newrow[4] = SGMSUtil.escapeSingleQuotesForSQL(firstname);
         newrow[5] = SGMSUtil.escapeSingleQuotesForSQL(middlename);
         newrow[6] = SGMSUtil.escapeSingleQuotesForSQL(lastname);
-        newrow[7] = stock ? "1" : "0";
+        newrow[7] = stock ? ENABLE_2FA_LOGIN : DISABLE_2FA_LOGIN;
         newrow[8] = phone;
         newrow[9] = fax;
         newrow[10] = email1;
         newrow[11] = email2;
         newrow[12] = comment;
         newrow[13] = timeout;
-        newrow[14] = disabled ? "1" : "0";
+        newrow[14] = disabled ? ENABLE_2FA_LOGIN : DISABLE_2FA_LOGIN;
         newrow[15] = controls;
         newrow[16] = domainID;
         newrow[17] = utType;
@@ -521,7 +541,7 @@
             i_obj.intValue();
         }
         catch (NumberFormatException nf2) {
-            timeout_str = "0";
+            timeout_str = DISABLE_2FA_LOGIN;
         }
         try {
             b_obj = new Boolean(disabled_str);
@@ -583,9 +603,10 @@
         String datePwdChanged = "";
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         datePwdChanged = sdf.format(new Date());
-        String query = "UPDATE " + tableName + " SET PASSWORD = '" + password + "' , DATEPWDCHANGED = " + (DataBaseConnectionPool.isOracle() ? "TO_DATE(TO_CHAR(SYS_EXTRACT_UTC(CURRENT_TIMESTAMP), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')" : (DataBaseConnectionPool.isSQLServer() ? "GETUTCDATE()" : "UTC_TIMESTAMP()")) + "  WHERE ID = '" + userID + "'  AND DOMAINID = '" + domainID + "'";
+        String query = "UPDATE " + tableName + " SET PASSWORD = ? , DATEPWDCHANGED = " + (DataBaseConnectionPool.isOracle() ? "TO_DATE(TO_CHAR(SYS_EXTRACT_UTC(CURRENT_TIMESTAMP), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')" : (DataBaseConnectionPool.isSQLServer() ? "GETUTCDATE()" : "UTC_TIMESTAMP()")) + "  WHERE ID = ?  AND DOMAINID = ?";
+        String[] psValues = new String[]{password, userID, domainID};
         try {
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, psValues);
             return new SimpleError(1);
         }
         catch (SQLException sqe) {
@@ -597,12 +618,13 @@
 
     public int setNeedPwdChangeValue(String userID, String value, String domainID) {
         if (value == null || value.trim().length() == 0) {
-            value = "0";
+            value = DISABLE_2FA_LOGIN;
         }
-        String query = "UPDATE " + tableName + " SET needPwdChange = " + pool.delimitDBColumnValue(value) + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET needPwdChange = ? WHERE ID = ? AND domainID = ?";
         int i = 0;
+        String[] psValues = new String[]{value, userID, domainID};
         try {
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException sqle) {
             SGMSUtil.debugOut("SQLException: UserManager.setNeedPwdChangeValue(): " + sqle.getMessage());
@@ -612,15 +634,16 @@
 
     public int removeUserLockout(String userID, String disabled, String lockoutCounter, String domainID) {
         if (lockoutCounter == null || lockoutCounter.trim().length() == 0) {
-            lockoutCounter = "0";
+            lockoutCounter = DISABLE_2FA_LOGIN;
         }
         if (disabled == null || disabled.trim().length() == 0) {
-            disabled = "0";
+            disabled = DISABLE_2FA_LOGIN;
         }
-        String query = "UPDATE " + tableName + " SET lockoutCounter = " + pool.delimitDBColumnValue(lockoutCounter) + " , disabled = " + pool.delimitDBColumnValue(disabled) + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET lockoutCounter = ? , disabled = ? WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{lockoutCounter, disabled, userID, domainID};
         int i = 0;
         try {
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException sqle) {
             SGMSUtil.debugOut("SQLException: UserManager.removeUserLockout(): " + sqle.getMessage());
@@ -630,12 +653,13 @@
 
     public int setLockoutCounterValue(String userID, String lockoutCounter, String domainID) {
         if (lockoutCounter == null || lockoutCounter.trim().length() == 0) {
-            lockoutCounter = "0";
+            lockoutCounter = DISABLE_2FA_LOGIN;
         }
-        String query = "UPDATE " + tableName + " SET lockoutCounter = " + pool.delimitDBColumnValue(lockoutCounter) + " , last_updated = " + pool.delimitDBColumnValue(pool.getDBDateString(new Date())) + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET lockoutCounter = ? , last_updated = " + pool.delimitDBColumnValue(pool.getDBDateString(new Date())) + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{lockoutCounter, userID, domainID};
         int i = 0;
         try {
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException sqle) {
             SGMSUtil.debugOut("SQLException: UserManager.setLockoutCounterValue(): " + sqle.getMessage());
@@ -645,12 +669,13 @@
 
     public int setUserDisabledValue(String userID, String value, String domainID) {
         if (value == null || value.trim().length() == 0) {
-            value = "0";
+            value = DISABLE_2FA_LOGIN;
         }
-        String query = "UPDATE " + tableName + " SET disabled = " + pool.delimitDBColumnValue(value) + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET disabled = ? WHERE ID = ? AND domainID = ?";
+        String[] psValue = new String[]{value, userID, domainID};
         int i = 0;
         try {
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValue);
         }
         catch (SQLException sqle) {
             SGMSUtil.debugOut("SQLException: UserManager.setUserDisabledValue(): " + sqle.getMessage());
@@ -663,17 +688,17 @@
         String domainID = (String)session.getAttribute("domainID");
         String sessionID = session.getId();
         String reversibleHashedStr = req.getParameter("reversibleHashed");
-        boolean isReversibleHashed = reversibleHashedStr == null || !reversibleHashedStr.equals("0");
+        boolean isReversibleHashed = reversibleHashedStr == null || !reversibleHashedStr.equals(DISABLE_2FA_LOGIN);
         boolean bSucceeded = true;
         String updatepw = req.getParameter("updatepw");
-        if (updatepw != null && updatepw.equals("1")) {
+        if (updatepw != null && updatepw.equals(ENABLE_2FA_LOGIN)) {
             long current;
             Long creationTime = (Long)session.getAttribute("hashseedcreationtime");
             long created = creationTime;
             if (created + 120L > (current = new Date().getTime() / 1000L)) {
                 SimpleError se = this.setPasswordForUser(userID, sessionID, req.getParameter("clientHash"), req.getParameter("clientHash2"), (String)session.getAttribute("hashseed"), domainID, isReversibleHashed);
                 if (se.getCode() == 1) {
-                    this.setNeedPwdChangeValue(userID, "0", domainID);
+                    this.setNeedPwdChangeValue(userID, DISABLE_2FA_LOGIN, domainID);
                     logsManager.addNewLogFYI("", userID, resourceBundle.getString("LOGS_PASSWD_CHANGED") + "(" + SGMSUtil2.unescapeUserID(userID) + ")", "", domainID);
                     req.setAttribute("messagetype", 100);
                     req.setAttribute("message", UserManager.getResourceBundleString("PASSWORD_CHANGED", req));
@@ -896,7 +921,7 @@
             StringTokenizer st = new StringTokenizer(result, ":");
             int ctr = 0;
             while (st.hasMoreTokens()) {
-                if (st.nextToken().trim().equals("1")) {
+                if (st.nextToken().trim().equals(ENABLE_2FA_LOGIN)) {
                     controls[ctr] = true;
                 }
                 ++ctr;
@@ -914,24 +939,35 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getControlInfo(String userID, String domainID) {
-        String controls = "";
-        String query = "SELECT " + (ProductizationUtil.getInstance().isVPS() ? "VP_CONTROLS" : "CONTROLS") + " FROM " + tableName + " WHERE ID LIKE '" + userID + "'";
+        ResultSet rs;
+        String controls;
+        block5: {
+            controls = "";
+            ArrayList<String> values = new ArrayList<String>();
+            String query = "SELECT " + (ProductizationUtil.getInstance().isVPS() ? "VP_CONTROLS" : "CONTROLS") + " FROM " + tableName + " WHERE ID LIKE ?";
+            values.add(userID);
         if (domainID != null) {
-            query = query + " AND domainID LIKE '" + domainID + "'";
+                query = query + " AND domainID LIKE ?";
+                values.add(domainID);
         }
-        ResultSet rs = null;
+            rs = null;
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs.next()) {
+                rs = UserManager.executeQueryPS(query, values.toArray(new String[values.size()]));
+                if (!rs.next()) break block5;
                 controls = UserManager.getValidString(rs, 1);
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut("UserManager: getUserControlsInfoInArray() error " + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return controls;
     }
 
@@ -947,7 +983,7 @@
             return false;
         }
         String[] sControls = this.parseControlsToArray(controls);
-        return "1".equals(sControls[controlIndex]);
+        return ENABLE_2FA_LOGIN.equals(sControls[controlIndex]);
     }
 
     public String[] parseControlsToArray(String controls) {
@@ -1011,10 +1047,11 @@
         if (value) {
             enabled = 1;
         }
-        String query = "UPDATE " + tableName + " SET enable_session_popup = '" + enabled + "' WHERE ID = '" + userID + "'" + " AND domainID='" + domainID + "'";
+        String query = "UPDATE " + tableName + " SET enable_session_popup = ? WHERE ID = ? AND domainID=?";
+        String[] psValues = new String[]{String.valueOf(enabled), userID, domainID};
         int i = 0;
         try {
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException sqe) {
             SGMSUtil.debugOut("UserManager.setSessionPopupEnabled() error " + sqe.getMessage());
@@ -1050,10 +1087,11 @@
         if (value == null || value.trim().length() == 0) {
             value = String.valueOf(0);
         }
-        String query = "UPDATE " + tableName + " SET dockingValue = " + pool.delimitDBColumnValue(value) + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET dockingValue = ? WHERE ID = ? AND domainID = ?";
         int i = 0;
+        String[] psValues = new String[]{value, userID, domainID};
         try {
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException sqle) {
             SGMSUtil.debugOut("SQLException: UserManager.setDockingValue(): " + sqle.getMessage());
@@ -1103,10 +1141,10 @@
                     rs = DataBaseConnectionPool.freeResultSet(rs);
                     query = "SELECT COUNT(*) FROM " + viewsTable;
                     if (this.getCount(query) > 0) {
-                        String string = "1";
+                        String string = ENABLE_2FA_LOGIN;
                         return string;
                     }
-                    String string = "0";
+                    String string = DISABLE_2FA_LOGIN;
                     return string;
                 }
                 String string = temp;
@@ -1119,7 +1157,7 @@
         finally {
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
-        return "1";
+        return ENABLE_2FA_LOGIN;
     }
 
     public void setViewIDForUser(String sessionID, String userID, String viewID, String domainID) {
@@ -1131,10 +1169,10 @@
         catch (SQLException sQLException) {
             // empty catch block
         }
-        String query = "UPDATE " + tableName + " SET VIEW_ID = '" + viewID + "' WHERE ID = '" + userID + "'";
-        query = query + " AND domainID='" + domainID + "'";
+        String query = "UPDATE " + tableName + " SET VIEW_ID = ? WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{viewID, userID, domainID};
         try {
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, psValues);
             logsManager.addNewLogFYI("", userID, "Default View set to " + viewName + " for user: " + SGMSUtil2.unescapeUserID(userID) + ".", "", domainID);
         }
         catch (SQLException sqe) {
@@ -1144,11 +1182,12 @@
     }
 
     public int setMsgsPerScreenForUser(String sessionID, String userID, String msgsPerScreen, String domainID) {
-        String query = "UPDATE " + tableName + " SET MSGS_PER_SCREEN = '" + msgsPerScreen + "' WHERE ID = '" + userID + "'" + " AND domainID='" + domainID + "'";
+        String query = "UPDATE " + tableName + " SET MSGS_PER_SCREEN = ? WHERE ID = ? AND domainID = ?";
         int i = 0;
+        String[] psValue = new String[]{msgsPerScreen, userID, domainID};
         try {
             SGMSUtil.debugOut((Object)("UserManager.setMsgsPerScreenForUser() query " + query), 2);
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValue);
         }
         catch (SQLException sqe) {
             SGMSUtil.printStackTrace(sqe);
@@ -1158,10 +1197,11 @@
     }
 
     public int setTasksPerScreenForUser(String sessionID, String userID, String tasksPerScreen, String domainID) {
-        String query = "UPDATE " + tableName + " SET TASKS_PER_SCREEN = '" + tasksPerScreen + "' WHERE ID = '" + userID + "'" + " AND domainID='" + domainID + "'";
+        String query = "UPDATE " + tableName + " SET TASKS_PER_SCREEN = ? WHERE ID = ? AND domainID = ?";
         int i = 0;
+        String[] psValue = new String[]{tasksPerScreen, userID, domainID};
         try {
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValue);
         }
         catch (SQLException sqe) {
             SGMSUtil.debugOut("UserManager.setMsgsPerScreenForUser() error " + sqe.getMessage());
@@ -1170,10 +1210,11 @@
     }
 
     public int setReportSchedulesPerScreenForUser(String sessionID, String userID, String schedsPerScreen, String domainID) {
-        String query = "UPDATE " + tableName + " SET SCHEDS_PER_SCREEN = '" + schedsPerScreen + "' WHERE ID = '" + userID + "'" + " AND domainID = '" + domainID + "'";
+        String query = "UPDATE " + tableName + " SET SCHEDS_PER_SCREEN = ? WHERE ID = ? AND domainID = ?";
         int i = 0;
+        String[] psValue = new String[]{schedsPerScreen, userID, domainID};
         try {
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValue);
         }
         catch (SQLException sqe) {
             SGMSUtil.debugOut("UserManager.setReportSchedulesPerScreenForUser() error " + sqe.getMessage());
@@ -1186,10 +1227,11 @@
      * Lifted jumps to return sites
      */
     public boolean setUserControlsInfo(String userID, String domainID, String[] controls) {
-        String query = "SELECT CONTROLS FROM " + tableName + " WHERE ID LIKE '" + userID + "'";
+        String query = "SELECT CONTROLS FROM " + tableName + " WHERE ID LIKE ?";
+        String[] psValue = new String[]{userID};
         Vector result = new Vector();
         try {
-            result = this.getQueryResults(query);
+            result = this.getQueryResultsPS(query, psValue);
         }
         catch (SQLException se) {
             se.getMessage();
@@ -1214,17 +1256,18 @@
             } else {
                 newControls.append(controls[i]);
                 if (i == 15) {
-                    String string = strLogDataPrivacySettingsState = controls[i].equals("1") ? "Enabled" : "Disabled";
+                    String string = strLogDataPrivacySettingsState = controls[i].equals(ENABLE_2FA_LOGIN) ? "Enabled" : "Disabled";
                 }
             }
             if (i >= numTokens - 1) continue;
             newControls.append(":");
         }
-        StringBuffer queryBuf = new StringBuffer("UPDATE " + tableName + " SET CONTROLS = '");
-        queryBuf.append(newControls.toString() + "' WHERE ID LIKE '" + userID + "'");
+        StringBuffer queryBuf = new StringBuffer("UPDATE " + tableName + " SET CONTROLS = ?");
+        queryBuf.append(" WHERE ID LIKE ?");
+        String[] psValueUpdate = new String[]{newControls.toString(), userID};
         try {
             String msg;
-            if (this.executeUpdate(queryBuf.toString()) <= 0) return true;
+            if (this.executeUpdatePS(queryBuf.toString(), psValueUpdate) <= 0) return true;
             if (strLogDataPrivacySettingsState != null) {
                 msg = "Data Privacy: Can Unmask Data control has been " + strLogDataPrivacySettingsState + " for user: " + SGMSUtil2.unescapeUserID(userID);
                 logsManager.addNewLogFYI("", userID, msg, "", domainID);
@@ -1247,12 +1290,13 @@
         ResultSet rs;
         block4: {
             boolean bl;
-            String query = new StringBuffer("SELECT FNAME FROM " + tableName + " WHERE ID LIKE ").append("(SELECT USER_TYPE_ID FROM " + tableName + " WHERE ID LIKE '").append(userID).append("' AND domainID='").append(domainID).append("') AND domainID='").append(domainID).append("'").toString();
+            String query = new StringBuffer("SELECT FNAME FROM " + tableName + " WHERE ID LIKE ").append("(SELECT USER_TYPE_ID FROM " + tableName + " WHERE ID LIKE ?").append(" AND domainID=?").append(") AND domainID=?").toString();
+            String[] psValue = new String[]{userID, domainID, domainID};
             rs = null;
             try {
                 String utid;
                 SGMSUtil.debugOut((Object)("UserManager.isUserAdministrator() query " + query), 2);
-                rs = UserManager.executeQuery(query);
+                rs = UserManager.executeQueryPS(query, psValue);
                 if (!rs.next() || (utid = UserManager.getValidString(rs, "FNAME")) == null || !utid.equalsIgnoreCase("Administrators")) break block4;
                 bl = true;
             }
@@ -1302,21 +1346,33 @@
                 query.append(cols[i]);
             }
             query.append(" FROM " + tableName + " WHERE ");
+            ArrayList<String> psValues = new ArrayList<String>();
             if (vecIDs == null || vecIDs.size() == 0) {
                 query.append("user_type_id IS NOT NULL");
             } else {
-                Vector<String> v = this.getValuesInsertedForInClause(vecIDs, true);
-                for (int j = 0; j < v.size(); ++j) {
+                LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause(vecIDs);
+                if (inClauseMap.size() > 1) {
+                    query.append("(");
+                }
+                Set<String> keySet = inClauseMap.keySet();
+                int j = 0;
+                for (String questionMarks : keySet) {
                     if (j > 0) {
                         query.append(" OR ");
                     }
-                    query.append("ID IN (" + v.elementAt(j) + ")");
+                    query.append("ID IN (" + questionMarks.substring(1, questionMarks.length()) + ")");
+                    psValues.addAll((Collection)inClauseMap.get(questionMarks));
+                    ++j;
+                }
+                if (inClauseMap.size() > 1) {
+                    query.append(")");
                 }
             }
             if (domainID != null) {
-                query.append(" AND domainID = '" + domainID + "' ");
+                query.append(" AND domainID = ?");
+                psValues.add(domainID);
             }
-            rs = UserManager.executeQuery(query.toString());
+            rs = UserManager.executeQueryPS(query.toString(), psValues.toArray(new String[psValues.size()]));
             while (rs.next()) {
                 String[] arr = new String[cols.length];
                 for (int i = 0; i < cols.length; ++i) {
@@ -1356,10 +1412,12 @@
             }
             query.append(" FROM " + tableName + " WHERE ");
             query.append("substring(controls, " + (2 * controlIndex + 1) + ",1) = '" + controlValue + "'");
+            ArrayList<String> values = new ArrayList<String>();
             if (domainID != null) {
-                query.append(" AND domainID = '" + domainID + "' ");
+                query.append(" AND domainID = ?");
+                values.add(domainID);
             }
-            rs = UserManager.executeQuery(query.toString());
+            rs = UserManager.executeQueryPS(query.toString(), values.toArray(new String[values.size()]));
             while (rs.next()) {
                 String[] arr = new String[cols.length];
                 for (int i = 0; i < cols.length; ++i) {
@@ -1390,48 +1448,90 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getUserTypeIDForUser(String userTypeName) {
-        StringBuffer queryBuf = new StringBuffer("SELECT ID FROM " + tableName + " WHERE FNAME = '" + userTypeName + "' AND");
+        StringBuffer queryBuf = new StringBuffer("SELECT ID FROM " + tableName + " WHERE FNAME = ? AND");
         queryBuf.append(" USER_TYPE_ID IS NULL");
+        String[] psValue = new String[]{userTypeName};
         ResultSet rs = null;
         String userTypeID = null;
         try {
-            rs = UserManager.executeQuery(queryBuf.toString());
+            rs = UserManager.executeQueryPS(queryBuf.toString(), psValue);
             rs.next();
             userTypeID = UserManager.getValidString(rs, "ID");
         }
         catch (SQLException se) {
+            try {
             se.getMessage();
             SGMSUtil.debugOut("\n\nError getting User Type ID for the User type \"" + userTypeName + "\" from database.");
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return userTypeID;
     }
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
+    public Vector<String> getUsersByType(String domainID, String userTypeId) {
+        StringBuffer queryBuf = new StringBuffer("SELECT ID FROM ").append(tableName);
+        queryBuf.append(" WHERE USER_TYPE_ID =?");
+        queryBuf.append(" AND domainID=?");
+        String[] psValue = new String[]{userTypeId, domainID};
+        ResultSet rs = null;
+        Vector<String> v = new Vector<String>();
+        try {
+            rs = UserManager.executeQueryPS(queryBuf.toString(), psValue);
+            while (rs.next()) {
+                v.addElement(UserManager.getValidString(rs, 1));
+            }
+        }
+        catch (Exception e) {
+            try {
+                SGMSUtil.debugOut("\n\nError getting user by type from database: " + e.getMessage());
+            }
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+        return v;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
     public String[][] getUserTypes(String userID, String domainID) {
         StringBuffer queryBuf = new StringBuffer("SELECT FNAME, ID, domainID FROM ").append(tableName);
         queryBuf.append(" WHERE USER_TYPE_ID IS NULL");
-        queryBuf.append(" AND domainID='").append(domainID).append("'");
+        queryBuf.append(" AND domainID=?");
+        String[] psValue = new String[]{domainID};
         ResultSet rs = null;
         Vector<String[]> v = new Vector<String[]>();
         String[] userType_entry = null;
         try {
-            rs = UserManager.executeQuery(queryBuf.toString());
+            rs = UserManager.executeQueryPS(queryBuf.toString(), psValue);
             while (rs.next()) {
                 userType_entry = new String[]{UserManager.getValidString(rs, 1), UserManager.getValidString(rs, 2), UserManager.getValidString(rs, 3)};
                 v.addElement(userType_entry);
             }
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.debugOut("\n\nError getting UserType(s) from database: " + sqle.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         String[][] userTypesArray = null;
         if (v.size() > 0) {
             userTypesArray = new String[v.size()][3];
@@ -1448,9 +1548,10 @@
     public String getUserTypeID(String userID, String domainID) {
         ResultSet rs = null;
         String userTypeID = null;
-        String query = "SELECT USER_TYPE_ID FROM " + tableName + " WHERE ID = '" + userID + "' AND domainID='" + domainID + "'";
+        String query = "SELECT USER_TYPE_ID FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+        String[] psValue = new String[]{userID, domainID};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValue);
             while (rs.next()) {
                 userTypeID = UserManager.getValidString(rs, "USER_TYPE_ID");
             }
@@ -1470,9 +1571,10 @@
     public String getUserType(String userID, String domainID) {
         ResultSet rs = null;
         String userType2 = null;
-        String query = "SELECT fname FROM " + tableName + " WHERE id = (SELECT user_type_id FROM " + tableName + " WHERE id = '" + userID + "' AND domainID = '" + domainID + "')";
+        String query = "SELECT fname FROM " + tableName + " WHERE id = (SELECT user_type_id FROM " + tableName + " WHERE id = ? AND domainID = ?)";
+        String[] psValue = new String[]{userID, domainID};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValue);
             if (rs.next()) {
                 userType2 = UserManager.getValidString(rs, "fname");
             }
@@ -1492,9 +1594,10 @@
     public String getUserTypeType(String userID, String domainID) {
         ResultSet rs = null;
         String usertypeType = null;
-        String query = "SELECT usertypeType FROM " + tableName + " WHERE id = (SELECT user_type_id FROM " + tableName + " WHERE id = '" + userID + "' AND domainID = '" + domainID + "')";
+        String query = "SELECT usertypeType FROM " + tableName + " WHERE id = (SELECT user_type_id FROM " + tableName + " WHERE id = ? AND domainID = ?)";
+        String[] psValue = new String[]{userID, domainID};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValue);
             if (rs.next()) {
                 usertypeType = UserManager.getValidString(rs, "usertypeType");
             }
@@ -1512,33 +1615,50 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public boolean isActive(String userID, String domainID) {
-        boolean isActive = false;
-        ResultSet rs = null;
-        String disabled = "0";
-        String active = "0";
+        Date activeTillDate;
+        String active;
+        ResultSet rs;
+        boolean isActive;
+        block9: {
+            isActive = false;
+            rs = null;
+            String disabled = DISABLE_2FA_LOGIN;
+            active = DISABLE_2FA_LOGIN;
         String activeTill = null;
-        Date activeTillDate = SGMSUtil.getDateInTimeZone(new Date(), null, "UTC");
+            activeTillDate = SGMSUtil.getDateInTimeZone(new Date(), null, "UTC");
         String query = null;
-        query = domainID != null && !domainID.equals("") ? "SELECT disabled, active, activeTill FROM " + tableName + " WHERE id =  '" + userID + "' and domainID = '" + domainID + "'" : "SELECT disabled, active, activeTill FROM " + tableName + " WHERE id =  '" + userID + "'";
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs.next()) {
+                String[] psValue;
+                if (domainID != null && !domainID.equals("")) {
+                    query = "SELECT disabled, active, activeTill FROM " + tableName + " WHERE id =  ? and domainID = ?";
+                    psValue = new String[]{userID, domainID};
+                    rs = UserManager.executeQueryPS(query, psValue);
+                } else {
+                    query = "SELECT disabled, active, activeTill FROM " + tableName + " WHERE id =  ?";
+                    psValue = new String[]{userID};
+                    rs = UserManager.executeQueryPS(query, psValue);
+                }
+                if (!rs.next()) break block9;
                 disabled = UserManager.getValidString(rs, "disabled");
                 active = UserManager.getValidString(rs, "active");
                 activeTill = UserManager.getValidString(rs, "activeTill");
-                if (activeTill != null && !activeTill.equals("")) {
+                if (activeTill == null || activeTill.equals("")) break block9;
                     activeTillDate = UserManager.fromSqlDate(activeTill);
                 }
-            }
-        }
         catch (Exception ex) {
+                try {
             SGMSUtil.debugOut("Error occured retrieving info for pci info\n" + ex.getMessage());
             isActive = false;
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
-        if (active.equals("0")) {
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+        if (active.equals(DISABLE_2FA_LOGIN)) {
             Calendar activeDate = Calendar.getInstance();
             activeDate.setTime(activeTillDate);
             activeDate.set(10, 0);
@@ -1557,7 +1677,7 @@
                 isActive = true;
             }
         } else {
-            isActive = active.equals("1");
+            isActive = active.equals(ENABLE_2FA_LOGIN);
         }
         return isActive;
     }
@@ -1567,15 +1687,16 @@
      */
     public boolean check90DayPwdRotation(String userID, String domainID) {
         boolean needPasswordChange = false;
-        String numDaysToChangePwd = su.getCosmoParam("numDaysToChangePassword", "0");
+        String numDaysToChangePwd = su.getCosmoParam("numDaysToChangePassword", DISABLE_2FA_LOGIN);
         int numDays = Integer.parseInt(numDaysToChangePwd.trim());
         ResultSet rs = null;
-        String query = "SELECT ID, datePwdchanged FROM " + tableName + " WHERE id =  '" + userID + "' AND domainID =  '" + domainID + "'";
+        String query = "SELECT ID, datePwdchanged FROM " + tableName + " WHERE id = ? AND domainID =  ?";
+        String[] psValue = new String[]{userID, domainID};
         String datePwdChanged = null;
         String user2 = null;
         Date pwdChanged = SGMSUtil.getDateInTimeZone(new Date(), null, "UTC");
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValue);
             if (rs.next()) {
                 user2 = UserManager.getValidString(rs, "ID");
                 datePwdChanged = UserManager.getValidString(rs, "datePwdchanged");
@@ -1634,13 +1755,13 @@
      */
     public void deleteInactiveUsers() throws SQLException {
         String query = "SELECT ID, autoDelete, last_login, creation_date, domainID  FROM " + tableName + " WHERE autoDelete = '1'";
-        String autoDelete = "0";
+        String autoDelete = DISABLE_2FA_LOGIN;
         String user2 = "";
         String domainID = null;
         ResultSet rs = null;
         String lastLogin = "";
         String creationDate = "";
-        String numInactiveDays = su.getCosmoParam("numInactiveDaysForDelete", "0");
+        String numInactiveDays = su.getCosmoParam("numInactiveDaysForDelete", DISABLE_2FA_LOGIN);
         int numDaysForDelete = Integer.parseInt(numInactiveDays.trim());
         try {
             rs = UserManager.executeQuery(query);
@@ -1650,7 +1771,7 @@
                 autoDelete = UserManager.getValidString(rs, "autoDelete");
                 lastLogin = UserManager.getValidString(rs, "last_login");
                 creationDate = UserManager.getValidString(rs, "creation_date");
-                if (!autoDelete.equals("1")) continue;
+                if (!autoDelete.equals(ENABLE_2FA_LOGIN)) continue;
                 Date last_login = null;
                 try {
                     last_login = UserManager.fromSqlDate(lastLogin);
@@ -1685,17 +1806,18 @@
     }
 
     public void deleteUser(String userID, String domainID) {
+        String[] psValue = new String[]{userID, domainID};
         try {
-            String delUsers = new StringBuffer("DELETE FROM ").append(tableName).append(" WHERE ID LIKE '").append(userID).append("'").append(" AND domainID = '").append(domainID).append("'").toString();
-            this.executeUpdate(delUsers);
+            String delUsers = new StringBuffer("DELETE FROM ").append(tableName).append(" WHERE ID LIKE ?").append(" AND domainID = ?").toString();
+            this.executeUpdatePS(delUsers, psValue);
         }
         catch (SQLException sqe) {
             log.log("UserManager", "deleteUser", sqe);
             SGMSUtil.debugOut("UserManager:deleteUser() exception: " + sqe.getMessage());
         }
         try {
-            String delUserPasswords = new StringBuffer("DELETE FROM ").append(userPasswordsTable).append(" WHERE ID LIKE '").append(userID).append("'").append(" AND domainID = '").append(domainID).append("'").toString();
-            this.executeUpdate(delUserPasswords);
+            String delUserPasswords = new StringBuffer("DELETE FROM ").append(userPasswordsTable).append(" WHERE ID LIKE ?").append(" AND domainID = ?").toString();
+            this.executeUpdatePS(delUserPasswords, psValue);
         }
         catch (SQLException sqe) {
             log.log("UserManager", "deleteUserPasswords", sqe);
@@ -1801,11 +1923,12 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getUserPassword(String userID, String domainID) {
+        String[] psValue = new String[]{userID, domainID};
         ResultSet rs = null;
         String password = "";
-        String query = "SELECT password FROM " + tableName + " WHERE id = '" + userID + "' AND domainID = '" + domainID + "'";
+        String query = "SELECT password FROM " + tableName + " WHERE id = ? AND domainID = ?";
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValue);
             while (rs.next()) {
                 password = UserManager.getValidString(rs, "password");
             }
@@ -1824,10 +1947,11 @@
      */
     public String[] getLockoutInfo(String userId, String domainID) throws SQLException {
         String[] fields = new String[4];
-        String query = "SELECT disabled,lockoutcounter,last_updated, needPwdChange FROM " + tableName + " WHERE id =  '" + userId + "' AND domainID =  '" + domainID + "'";
+        String query = "SELECT disabled,lockoutcounter,last_updated, needPwdChange FROM " + tableName + " WHERE id =  ? AND domainID = ?";
+        String[] psValue = new String[]{userId, domainID};
         ResultSet rs = null;
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValue);
             if (rs.next()) {
                 fields[0] = UserManager.getValidString(rs, "disabled");
                 fields[1] = UserManager.getValidString(rs, "lockoutcounter");
@@ -1851,26 +1975,34 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public Vector getUserPasswords(String userID, String domainID) throws SQLException {
-        Vector<String[]> vecRows = new Vector<String[]>();
-        ResultSet rs = null;
-        String query = "SELECT password  FROM " + userPasswordsTable + " WHERE id =  '" + userID + "' AND domainID =  '" + domainID + "'";
+        ResultSet rs;
+        Vector<String[]> vecRows;
+        block5: {
+            vecRows = new Vector<String[]>();
+            rs = null;
+            String query = "SELECT password  FROM " + userPasswordsTable + " WHERE id =  ? AND domainID = ?";
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs != null) {
+                rs = UserManager.executeQueryPS(query, new String[]{userID, domainID});
+                if (rs == null) break block5;
                 while (rs.next()) {
                     String[] columns = new String[2];
                     columns[0] = UserManager.getValidString(rs, "password");
                     vecRows.addElement(columns);
                 }
             }
-        }
         catch (Exception e) {
+                try {
             SGMSUtil.debugOut("Error occured retrieving the last five user passwords for the user\n" + e.getMessage());
             vecRows = null;
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return vecRows;
     }
 
@@ -1878,34 +2010,42 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public void addUserPassword(String userID, String domainID) {
+        ResultSet rs;
+        block5: {
         Vector vecRows = new Vector();
-        ResultSet rs = null;
-        String query = "SELECT password  FROM " + tableName + " WHERE id =  '" + userID + "' AND domainID =  '" + domainID + "'";
+            rs = null;
+            String query = "SELECT password  FROM " + tableName + " WHERE id = ? AND domainID = ?";
         String password = null;
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs != null) {
+                rs = UserManager.executeQueryPS(query, new String[]{userID, domainID});
+                if (rs == null) break block5;
                 while (rs.next()) {
                     password = UserManager.getValidString(rs, "password");
                 }
             }
-        }
         catch (Exception e) {
+                try {
             SGMSUtil.debugOut("Error occured retrieving the password for the user from users table\n" + e.getMessage());
             password = null;
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
     }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+    }
 
     public int setUserPassword(String userID, String password, String domainID) {
         String query = "";
         int i = 0;
         try {
             query = "INSERT INTO " + userPasswordsTable + " (ID, PASSWORD, LAST_UPDATED, domainID )";
-            query = query + " VALUES ('" + userID + "', '" + password + "', " + (DataBaseConnectionPool.isOracle() ? "TO_DATE(TO_CHAR(SYS_EXTRACT_UTC(CURRENT_TIMESTAMP), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')" : (DataBaseConnectionPool.isSQLServer() ? "GETUTCDATE()" : "UTC_TIMESTAMP()")) + " , '" + domainID + "')";
-            i = this.executeUpdate(query);
+            query = query + " VALUES (?, ?, " + (DataBaseConnectionPool.isOracle() ? "TO_DATE(TO_CHAR(SYS_EXTRACT_UTC(CURRENT_TIMESTAMP), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')" : (DataBaseConnectionPool.isSQLServer() ? "GETUTCDATE()" : "UTC_TIMESTAMP()")) + " , ?)";
+            String[] psValue = new String[]{userID, password, domainID};
+            i = this.executeUpdatePS(query, psValue);
         }
         catch (SQLException sqle) {
             SGMSUtil.debugOut("SQLException: UserManager.setUserPassword(): " + sqle.getMessage());
@@ -1920,13 +2060,15 @@
         ResultSet rs = null;
         try {
             String lastUpdated = "";
-            String query = "SELECT MIN(last_updated)  FROM " + userPasswordsTable + " WHERE id = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
-            rs = UserManager.executeQuery(query);
+            String query = "SELECT MIN(last_updated)  FROM " + userPasswordsTable + " WHERE id = ? AND domainID = ?";
+            String[] psValues = new String[]{userID, domainID};
+            rs = UserManager.executeQueryPS(query, psValues);
             while (rs.next()) {
                 lastUpdated = UserManager.getValidString(rs, 1);
             }
-            String updateString = new String(" UPDATE " + userPasswordsTable + " SET  PASSWORD = " + pool.delimitDBColumnValue(password) + " , LAST_UPDATED = " + (DataBaseConnectionPool.isOracle() ? "TO_DATE(TO_CHAR(SYS_EXTRACT_UTC(CURRENT_TIMESTAMP), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')" : (DataBaseConnectionPool.isSQLServer() ? "GETUTCDATE()" : "UTC_TIMESTAMP()"))) + " WHERE last_updated = " + pool.delimitDBColumnValue(lastUpdated);
-            this.executeUpdate(updateString);
+            String updateString = new String(" UPDATE " + userPasswordsTable + " SET  PASSWORD = ? , LAST_UPDATED = " + (DataBaseConnectionPool.isOracle() ? "TO_DATE(TO_CHAR(SYS_EXTRACT_UTC(CURRENT_TIMESTAMP), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')" : (DataBaseConnectionPool.isSQLServer() ? "GETUTCDATE()" : "UTC_TIMESTAMP()"))) + " WHERE last_updated = ?";
+            String[] psValuesForUpdate = new String[]{password, lastUpdated};
+            this.executeUpdatePS(updateString, psValuesForUpdate);
         }
         catch (SQLException sqe) {
             try {
@@ -1943,9 +2085,10 @@
     }
 
     public SimpleError removeUserPassword(String userID, String domainID, String password) {
-        String query = "DELETE FROM " + userPasswordsTable + " WHERE ID LIKE '" + userID + " AND domainID =  '" + domainID + "'' AND PASSWORD = '" + password + "'";
+        String query = "DELETE FROM " + userPasswordsTable + " WHERE ID LIKE ? AND domainID = ? AND PASSWORD = ?";
+        String[] psValues = new String[]{userID, domainID, password};
         try {
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, psValues);
         }
         catch (SQLException sqe) {
             log.log("UserManager", "removeUserPassword", sqe);
@@ -1960,10 +2103,11 @@
      */
     public String getNeedPwdChange(String userID, String domainID) {
         ResultSet rs = null;
-        String needPwdChange = "0";
-        String query = "SELECT needPwdChange FROM " + tableName + " WHERE id =  " + pool.delimitDBColumnValue(userID) + " AND domainID =  " + pool.delimitDBColumnValue(domainID);
+        String needPwdChange = DISABLE_2FA_LOGIN;
+        String query = "SELECT needPwdChange FROM " + tableName + " WHERE id =  ? AND domainID =  ?";
+        String[] psValues = new String[]{userID, domainID};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues);
             while (rs.next()) {
                 needPwdChange = UserManager.getValidString(rs, "needPwdChange");
             }
@@ -1982,10 +2126,11 @@
      */
     public String getScheduleID(String userID, String domainID) {
         ResultSet rs = null;
-        String scheduleid = "0";
-        String query = "SELECT scheduleid FROM " + tableName + " WHERE id =  '" + userID + "' AND domainID =  '" + domainID + "'";
+        String scheduleid = DISABLE_2FA_LOGIN;
+        String query = "SELECT scheduleid FROM " + tableName + " WHERE id =  ? AND domainID = ?";
+        String[] psValues = new String[]{userID, domainID};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues);
             while (rs.next()) {
                 scheduleid = UserManager.getValidString(rs, "scheduleid");
             }
@@ -2004,10 +2149,11 @@
      */
     public String getLockoutCounter(String userID, String domainID) {
         ResultSet rs = null;
-        String lockoutCounter = "0";
-        String query = "SELECT lockoutCounter FROM " + tableName + " WHERE id =  '" + userID + "' AND domainID =  '" + domainID + "'";
+        String lockoutCounter = DISABLE_2FA_LOGIN;
+        String query = "SELECT lockoutCounter FROM " + tableName + " WHERE id =  ? AND domainID = ?";
+        String[] psValues = new String[]{userID, domainID};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues);
             while (rs.next()) {
                 lockoutCounter = UserManager.getValidString(rs, "lockoutCounter");
             }
@@ -2026,10 +2172,11 @@
      */
     public String getDisabledValue(String userID, String domainID) {
         ResultSet rs = null;
-        String disabled = "0";
-        String query = "SELECT disabled FROM " + tableName + " WHERE id =  '" + userID + "' AND domainID =  '" + domainID + "'";
+        String disabled = DISABLE_2FA_LOGIN;
+        String query = "SELECT disabled FROM " + tableName + " WHERE id =  ? AND domainID = ?";
+        String[] psValues = new String[]{userID, domainID};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues);
             while (rs.next()) {
                 disabled = UserManager.getValidString(rs, "disabled");
             }
@@ -2055,7 +2202,7 @@
     public void appletUserGeneralInfo(String sessionID, HttpServletResponse res, String userID, String domainID) throws IOException {
         WorkFlowManager wfManager = WorkFlowManager.getInstance();
         boolean isUserAnApprover = wfManager.isUserAnApprover(userID, domainID);
-        String isApprover = isUserAnApprover ? "1" : "0";
+        String isApprover = isUserAnApprover ? ENABLE_2FA_LOGIN : DISABLE_2FA_LOGIN;
         PrintWriter out = null;
         out = this.setupAppletResponse(sessionID, res);
         if (out == null) {
@@ -2064,11 +2211,11 @@
         String query = null;
         if (DataBaseConnectionPool.isOracle()) {
             String activeTillStr = "TO_CHAR(ACTIVETILL,'yyyy-MM-dd') \"activetill\"";
-            query = new StringBuffer("SELECT " + activeTillStr + ", FNAME \"fname\" , MNAME \"mi\" , LNAME \"lname\" , ").append("PHONE \"phone\", FAX \"fax\", EMAIL1 \"email1\" , ").append("EMAIL2 \"email2\" , COMMENTS \"comment\" , CREATION_DATE \"date\", ").append("PAGER \"pager\" , IDLE_TIMEOUT \"idleTimeout\", VIEW_ID \"viewid\", DISABLED \"disabled\" , LAST_LOGIN  \"last\", USER_TYPE_ID \"userTypeID\", ").append("NEEDPWDCHANGE \"needpwdchange\", AUTODELETE \"autodelete\", SCHEDULEID \"scheduleid\", ACTIVE \"active\" FROM ").append(tableName).append(" WHERE ID LIKE '").append(userID).append("' AND ").append("domainID='").append(domainID).append("'").toString();
+            query = new StringBuffer("SELECT " + activeTillStr + ", FNAME \"fname\" , MNAME \"mi\" , LNAME \"lname\" , ").append("PHONE \"phone\", FAX \"fax\", EMAIL1 \"email1\" , ").append("EMAIL2 \"email2\" , COMMENTS \"comment\" , CREATION_DATE \"date\", ").append("PAGER \"pager\" , IDLE_TIMEOUT \"idleTimeout\", VIEW_ID \"viewid\", DISABLED \"disabled\" , LAST_LOGIN  \"last\", USER_TYPE_ID \"userTypeID\", ").append("NEEDPWDCHANGE \"needpwdchange\", AUTODELETE \"autodelete\", SCHEDULEID \"scheduleid\", IS2FA_ENABLED \"is2faEnabled\", ACTIVE \"active\" FROM ").append(tableName).append(" WHERE ID LIKE '").append(userID).append("' AND ").append("domainID='").append(domainID).append("'").toString();
         } else {
-            query = new StringBuffer("SELECT FNAME AS fname, MNAME AS mi, LNAME AS lname, ").append("PHONE AS phone, FAX AS fax, EMAIL1 AS email1, ").append("EMAIL2 AS email2, IDLE_TIMEOUT AS idleTimeout, COMMENTS AS comment,ISSUPERADMIN AS isSuperAdmin,CREATION_DATE AS date, ").append("PAGER AS pager, VIEW_ID AS viewid, DISABLED as disabled, LAST_LOGIN AS last, USER_TYPE_ID as userTypeID, ").append("NEEDPWDCHANGE as needpwdchange, AUTODELETE as autodelete, SCHEDULEID as scheduleid, ACTIVETILL as activetill , ACTIVE as active, ").append("authServerID as authServerID, DAYS_TO_STORE_SCHED_REPORTS as daysToStore,").append(isApprover).append(" AS isApprover FROM ").append(tableName).append(" WHERE ID LIKE '").append(userID).append("' AND ").append("domainID='").append(domainID).append("'").toString();
+            query = new StringBuffer("SELECT FNAME AS fname, MNAME AS mi, LNAME AS lname, ").append("PHONE AS phone, FAX AS fax, EMAIL1 AS email1, ").append("EMAIL2 AS email2, IDLE_TIMEOUT AS idleTimeout, COMMENTS AS comment,ISSUPERADMIN AS isSuperAdmin,CREATION_DATE AS date, ").append("PAGER AS pager, VIEW_ID AS viewid, DISABLED as disabled, LAST_LOGIN AS last, USER_TYPE_ID as userTypeID, ").append("NEEDPWDCHANGE as needpwdchange, AUTODELETE as autodelete, SCHEDULEID as scheduleid, ACTIVETILL as activetill , ACTIVE as active, ").append("authServerID as authServerID, DAYS_TO_STORE_SCHED_REPORTS as daysToStore, IS2FA_ENABLED as is2faEnabled, ").append(isApprover).append(" AS isApprover FROM ").append(tableName).append(" WHERE ID LIKE ?").append(" AND ").append("domainID=?").toString();
         }
-        this.sendQueryResultToApplet(out, query);
+        this.sendQueryResultToApplet(out, query, new String[]{userID, domainID});
     }
 
     public void appletUserTypeGeneralInfo(String sessionID, HttpServletResponse res, String userTypeID) throws IOException {
@@ -2082,9 +2229,9 @@
             String activeTillStr = "TO_CHAR(ACTIVETILL,'yyyy-MM-dd') \"activetill\"";
             query = new StringBuffer("SELECT " + activeTillStr + ", FNAME \"name\"  , COMMENTS \"comment\" , ").append("CREATION_DATE \"date\", VIEW_ID \"viewid\", SCHEDULEID \"scheduleid\", NEEDPWDCHANGE \"needpwdchange\", AUTODELETE \"autodelete\", ACTIVE\"active\"  FROM ").append(tableName).append(" WHERE ID LIKE '").append(userTypeID).append("'").toString();
         } else {
-            query = new StringBuffer("SELECT FNAME AS name, COMMENTS AS comment, ").append("CREATION_DATE AS date, VIEW_ID AS viewid, SCHEDULEID as scheduleid, NEEDPWDCHANGE as needpwdchange, AUTODELETE as autodelete, ACTIVETILL as activetill, ACTIVE as active, authServerID FROM ").append(tableName).append(" WHERE ID LIKE '").append(userTypeID).append("'").toString();
+            query = new StringBuffer("SELECT FNAME AS name, COMMENTS AS comment, ").append("CREATION_DATE AS date, VIEW_ID AS viewid, SCHEDULEID as scheduleid, NEEDPWDCHANGE as needpwdchange, AUTODELETE as autodelete, ACTIVETILL as activetill, ACTIVE as active, authServerID, IS2FA_ENABLED as is2faEnabled FROM ").append(tableName).append(" WHERE ID LIKE ?").toString();
         }
-        this.sendQueryResultToApplet(out, query);
+        this.sendQueryResultToApplet(out, query, new String[]{userTypeID});
     }
 
     public synchronized void appletGetUsersList(String sessionID, HttpServletRequest req, HttpServletResponse res) throws IOException {
@@ -2105,13 +2252,18 @@
         catch (Exception e) {
             SGMSUtil.debugOut("UserManager:appletGetUsersList() exception: " + e.getMessage());
         }
+        ArrayList<String> psValue = new ArrayList<String>();
         String query = "SELECT ID FROM " + tableName + " WHERE ID NOT LIKE 'UT%'";
-        query = query + " AND ID <> '" + userID + "'";
-        query = query + " AND USER_TYPE_ID <> '" + adminUserTypeID + "' AND domainID='" + domainID + "'";
+        query = query + " AND ID <> ?";
+        psValue.add(userID);
+        query = query + " AND USER_TYPE_ID <> ? AND domainID=?";
+        psValue.add(adminUserTypeID);
+        psValue.add(domainID);
         if (userTypeID != null && !userTypeID.equals(adminUserTypeID)) {
-            query = query + " AND USER_TYPE_ID = '" + userTypeID + "'";
+            query = query + " AND USER_TYPE_ID = ?";
+            psValue.add(userTypeID);
         }
-        this.sendQueryResultToApplet(out, query);
+        this.sendQueryResultToApplet(out, query, psValue.toArray(new String[psValue.size()]));
     }
 
     /*
@@ -2119,20 +2271,25 @@
      */
     private String getAdminUserTypeID(String domainID) {
         String adminUserTypeID = null;
-        String query = new StringBuffer("SELECT ID FROM ").append(tableName).append(" WHERE FNAME='Administrators' AND ").append("domainID='").append(domainID).append("'").toString();
+        String query = new StringBuffer("SELECT ID FROM ").append(tableName).append(" WHERE FNAME='Administrators' AND ").append("domainID=?").toString();
         ResultSet rs = null;
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, new String[]{domainID});
             while (rs.next()) {
                 adminUserTypeID = UserManager.getValidString(rs, "ID");
             }
         }
         catch (Exception e) {
+            try {
             SGMSUtil.debugOut("Error occured retrieving user-type-id information for the user\n" + e.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return adminUserTypeID;
     }
 
@@ -2146,8 +2303,8 @@
         if (out == null) {
             return;
         }
-        String query = "SELECT u.id, t.fname FROM " + tableName + " u, " + tableName + " t, " + viewsTable + " v WHERE u.user_type_id = t.id AND u.view_id = v.id AND v.id = '" + id + "'";
-        this.sendQueryResultToApplet(out, query);
+        String query = "SELECT u.id, t.fname FROM " + tableName + " u, " + tableName + " t, " + viewsTable + " v WHERE u.user_type_id = t.id AND u.view_id = v.id AND v.id = ?";
+        this.sendQueryResultToApplet(out, query, new String[]{id});
     }
 
     /*
@@ -2163,30 +2320,36 @@
             SGMSUtil.debugOut("UserManager:validateNonAdminUserList() exception: " + e.getMessage());
         }
         String query = "SELECT ID FROM " + tableName + " WHERE ID NOT LIKE 'UT%'";
-        query = query + " AND ID <> '" + userID + "'";
-        query = query + " AND USER_TYPE_ID <> '" + userTypeID + "'";
+        query = query + " AND ID <> ?";
+        query = query + " AND USER_TYPE_ID <> ?";
         Vector<String> validUserList = new Vector<String>();
         ResultSet rs = null;
         try {
-            rs = UserManager.executeQuery(query);
-            block7: while (rs.next()) {
+            rs = UserManager.executeQueryPS(query, new String[]{userID, userTypeID});
+            block6: while (rs.next()) {
                 String nonAdminUser = rs.getString(1);
                 for (int i = 0; i < userList.size(); ++i) {
                     if (!nonAdminUser.equalsIgnoreCase((String)userList.elementAt(i))) continue;
                     validUserList.addElement(nonAdminUser);
-                    continue block7;
+                    continue block6;
                 }
             }
         }
         catch (SQLException sqe) {
+            Vector vector;
+            try {
             SGMSUtil.debugOut(sqe.getMessage());
             pool.reConnectIfNeeded(sqe, false);
-            Vector vector = new Vector();
-            return vector;
+                vector = new Vector();
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+            return vector;
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return validUserList;
     }
 
@@ -2197,9 +2360,8 @@
         }
         domainManager.setDefaultAdminUser(newUserID, domainID);
         try {
-            String query = "SELECT CONTROLS, STOCK FROM " + tableName + " WHERE ID ='";
-            query = query + userID + "' AND domainID='" + domainID + "'";
-            Vector vector = this.getQueryResults(query);
+            String query = "SELECT CONTROLS, STOCK FROM " + tableName + " WHERE ID = ? AND domainID=?";
+            Vector vector = this.getQueryResultsPS(query, new String[]{userID, domainID});
             if (vector == null) {
                 return false;
             }
@@ -2208,7 +2370,7 @@
             String stock = temp[1];
             this.setControlsForUser(newUserID, domainID, controls);
             this.setStockForUser(newUserID, domainID, stock);
-            this.setStockForUser(userID, domainID, "0");
+            this.setStockForUser(userID, domainID, DISABLE_2FA_LOGIN);
             ScreenPermissionsManager spm = (ScreenPermissionsManager)ScreenPermissionsManager.getReference(pool);
             spm.deletePermissions(newUserID, domainID);
             boolean result = spm.setScreenPermissionsForUserAsUserType(null, newUserID, userID, domainID);
@@ -2229,8 +2391,8 @@
         }
         try {
             String query = "SELECT ID, CONTROLS FROM " + tableName + " WHERE ID IN ";
-            query = query + "(SELECT USER_TYPE_ID FROM " + tableName + " WHERE ID = '" + userID + "' AND domainID='" + domainID + "')";
-            Vector vector = this.getQueryResults(query);
+            query = query + "(SELECT USER_TYPE_ID FROM " + tableName + " WHERE ID = ? AND domainID=?";
+            Vector vector = this.getQueryResultsPS(query, new String[]{userID, domainID});
             if (vector == null) {
                 return false;
             }
@@ -2259,10 +2421,10 @@
 
     private void setControlsForUser(String userID, String domainID, String controls) throws SQLException {
         String query = "UPDATE " + tableName + " SET CONTROLS = '" + controls + "'";
-        if (this.executeUpdate(query = query + " WHERE ID = '" + userID + "' AND domainID='" + domainID + "'") > 0) {
+        if (this.executeUpdatePS(query = query + " WHERE ID = ? AND domainID = ?", new String[]{userID, domainID}) > 0) {
             String[] arr = this.parseControlsToArray(controls);
             if (arr != null) {
-                String msg = "Data Privacy: Can Unmask Data control has been " + (arr[15].equals("1") ? "Enabled" : "Disabled") + " for user: " + SGMSUtil2.unescapeUserID(userID);
+                String msg = "Data Privacy: Can Unmask Data control has been " + (arr[15].equals(ENABLE_2FA_LOGIN) ? "Enabled" : "Disabled") + " for user: " + SGMSUtil2.unescapeUserID(userID);
                 logsManager.addNewLogFYI("", userID, msg, "", domainID);
             }
             logsManager.addNewLogFYI("", userID, "Action Permissions have been updated for user: " + SGMSUtil2.unescapeUserID(userID), "", domainID);
@@ -2270,9 +2432,9 @@
     }
 
     private void setStockForUser(String userID, String domainID, String stock) throws SQLException {
-        String query = "UPDATE " + tableName + " SET STOCK = '" + stock + "'";
-        query = query + " WHERE ID = '" + userID + "' AND domainID='" + domainID + "'";
-        this.executeUpdate(query);
+        String query = "UPDATE " + tableName + " SET STOCK = ?";
+        query = query + " WHERE ID =? AND domainID=?";
+        this.executeUpdatePS(query, new String[]{stock, userID, domainID});
     }
 
     private boolean setUnitPermissionsForUserAsUserType(String id, String userTypeID, String domainID) {
@@ -2280,17 +2442,17 @@
         if (!this.removeExistingUnitsFromUser(id, unitPermsTableName, domainID)) {
             return false;
         }
-        String query = "SELECT COUNT(*) FROM " + unitPermsTableName + " WHERE USER_ID = " + pool.delimitDBColumnValue(userTypeID) + " AND domainID=" + pool.delimitDBColumnValue(domainID);
-        int nrows = this.getCount(query);
+        String query = "SELECT COUNT(*) FROM " + unitPermsTableName + " WHERE USER_ID = ? AND domainID= ?";
+        int nrows = this.getCountPS(query, new String[]{userTypeID, domainID});
         if (nrows == 0) {
             return true;
         }
         StringBuffer queryBuf = new StringBuffer("INSERT INTO " + unitPermsTableName + " ");
         queryBuf.append("(USER_ID, UNIT_ID, PERMS, domainID) SELECT " + pool.delimitDBColumnValue(id) + ", UNIT_ID, PERMS, domainID FROM ");
-        queryBuf.append(unitPermsTableName + " WHERE USER_ID LIKE " + pool.delimitDBColumnValue(userTypeID) + " AND domainID=" + pool.delimitDBColumnValue(domainID));
+        queryBuf.append(unitPermsTableName + " WHERE USER_ID LIKE ? AND domainID= ?");
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(queryBuf.toString());
+            rowsUpdated = this.executeUpdatePS(queryBuf.toString(), new String[]{userTypeID, domainID});
         }
         catch (SQLException se) {
             SGMSUtil.debugOut("\n\nError occured while inheriting Unit permissions for User \"" + id + "\n");
@@ -2301,8 +2463,8 @@
 
     private boolean removeExistingUnitsFromUser(String userID, String unitPermsTableName, String domainID) {
         try {
-            String query = new StringBuffer("DELETE FROM ").append(unitPermsTableName).append(" WHERE USER_ID = ").append(pool.delimitDBColumnValue(userID)).append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID)).toString();
-            this.executeUpdate(query);
+            String query = new StringBuffer("DELETE FROM ").append(unitPermsTableName).append(" WHERE USER_ID = ?").append(" AND domainID = ?").toString();
+            this.executeUpdatePS(query, new String[]{userID, domainID});
         }
         catch (SQLException se) {
             SGMSUtil.debugOut("\n\nError occured while inheriting Unit permissions for User \"" + userID + "\n");
@@ -2347,6 +2509,7 @@
         String activeTill = modifyUser.getActiveTill();
         String scheduleID = modifyUser.getScheduleId();
         String active = modifyUser.getActive();
+        String is2faEnabled = modifyUser.getIs2faEnabled();
         try {
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
             Date d = sdf.parse(activeTill, new ParsePosition(0));
@@ -2362,24 +2525,65 @@
         if (commentAttr != null) {
             comment = commentAttr;
         }
-        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET FNAME = '").append(fname).append("', MNAME = '").append(mi).append("', LNAME = '").append(lname).append("', PHONE = '").append(phone).append("', FAX = '").append(fax).append("', IDLE_TIMEOUT = '").append(idleTimeout).append("', DAYS_TO_STORE_SCHED_REPORTS = '").append(daystoStore).append("', EMAIL1 = '").append(email1).append("', EMAIL2 = '").append(email2).append("', PAGER = '").append(pager).append("', VIEW_ID = '").append(viewid).append("', ISSUPERADMIN = '").append(isSuperAdmin).append("', authServerID = '").append(authServerID).append("', DISABLED = '").append(disabled).append("', NEEDPWDCHANGE = '").append(needPwdChange).append("', AUTODELETE = '").append(autoDelete).append("', ACTIVETILL = ").append(pool.delimitDBColumnValue(activeTill)).append(", ACTIVE = '").append(active).append("', SCHEDULEID = '").append(scheduleID).append("', COMMENTS = '").append(comment).append("' ").append(password == null ? "" : new StringBuffer(", PASSWORD = '").append(password).append("' ").toString()).append(datePwdChanged == null ? "" : new StringBuffer(", DATEPWDCHANGED = ").append(DataBaseConnectionPool.isOracle() ? "TO_DATE(TO_CHAR(SYS_EXTRACT_UTC(CURRENT_TIMESTAMP), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')" : (DataBaseConnectionPool.isSQLServer() ? "GETUTCDATE()" : "UTC_TIMESTAMP()")).toString()).append("WHERE ID LIKE '").append(userId).append("'").append(" AND domainID='").append(domainID).append("'").toString();
-        if ("0".equals(disabled)) {
+        ArrayList<String> psValue = new ArrayList<String>();
+        psValue.add(fname);
+        psValue.add(mi);
+        psValue.add(lname);
+        psValue.add(phone);
+        psValue.add(fax);
+        psValue.add(idleTimeout);
+        psValue.add(daystoStore);
+        psValue.add(email1);
+        psValue.add(email2);
+        psValue.add(pager);
+        psValue.add(viewid);
+        psValue.add(isSuperAdmin);
+        psValue.add(authServerID);
+        psValue.add(disabled);
+        psValue.add(needPwdChange);
+        psValue.add(autoDelete);
+        psValue.add(activeTill);
+        psValue.add(active);
+        psValue.add(scheduleID);
+        psValue.add(comment);
+        StringBuffer query = new StringBuffer("UPDATE ").append(tableName).append(" SET FNAME = ?").append(", MNAME = ?").append(", LNAME = ?").append(", PHONE = ?").append(", FAX = ?").append(", IDLE_TIMEOUT = ?").append(", DAYS_TO_STORE_SCHED_REPORTS = ?").append(", EMAIL1 = ?").append(", EMAIL2 = ?").append(", PAGER = ?").append(", VIEW_ID = ?").append(", ISSUPERADMIN = ?").append(", authServerID = ?").append(", DISABLED = ?").append(", NEEDPWDCHANGE = ?").append(", AUTODELETE = ?").append(", ACTIVETILL = ?").append(", ACTIVE = ?").append(", SCHEDULEID = ?").append(", COMMENTS = ?");
+        if (!is2faEnabled.equals("")) {
+            query.append(", IS2FA_ENABLED = ?");
+            psValue.add(is2faEnabled);
+        }
+        if (is2faEnabled.equals(ENABLE_2FA_LOGIN)) {
+            query.append(", SECRET_KEY =  ?");
+            psValue.add(TwoFactAuthUtil.generateBase32Secret());
+            query.append(", EMERGENCY_CODE =  ?");
+            psValue.add(TwoFactAuthUtil.generateBaseSecret(8));
+        }
+        if (password != null) {
+            query.append(", PASSWORD = ?");
+            psValue.add(password);
+        }
+        if (datePwdChanged != null) {
+            query.append(", DATEPWDCHANGED = ").append(DataBaseConnectionPool.isOracle() ? "TO_DATE(TO_CHAR(SYS_EXTRACT_UTC(CURRENT_TIMESTAMP), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')" : (DataBaseConnectionPool.isSQLServer() ? "GETUTCDATE()" : "UTC_TIMESTAMP()"));
+        }
+        query.append("WHERE ID LIKE ?").append(" AND domainID=?");
+        psValue.add(userId);
+        psValue.add(domainID);
+        if (DISABLE_2FA_LOGIN.equals(disabled)) {
             this.setLockoutCounterValue(userId, null, domainID);
         }
-        if ("1".equals(isSuperAdmin) && "1".equals(isUpdateReportReceiver = modifyUser.getIsUpdateReportReceiver())) {
+        if (ENABLE_2FA_LOGIN.equals(isSuperAdmin) && ENABLE_2FA_LOGIN.equals(isUpdateReportReceiver = modifyUser.getIsUpdateReportReceiver())) {
             this.updateReportReceiverAddresses(email1);
         }
         String logMessage = "";
         if (password != null && password.length() > 0) {
             logMessage = logMessage + resourceBundle.getString("LOGS_PASSWD_CHANGED");
         }
-        if (disabled != null && disabled.equals("1")) {
+        if (disabled != null && disabled.equals(ENABLE_2FA_LOGIN)) {
             logMessage = logMessage + "SGMS User account has been disabled ";
         }
         if (logMessage.length() == 0) {
             logMessage = "SGMS User account information has been successfully updated ";
         }
-        if (this.sendUpdateResultToApplet(out, query)) {
+        if (this.sendUpdateResultToAppletPS(out, query.toString(), psValue.toArray(new String[psValue.size()]))) {
             logsManager.addNewLogFYI("", userId, logMessage + "(" + SGMSUtil2.unescapeUserID(userId) + ").", "", domainID);
         } else {
             logsManager.addNewLogWarning("", userId, resourceBundle.getString("LOGS_PASSWD_NOT_CHANGED") + "(" + SGMSUtil2.unescapeUserID(userId) + ").", "", domainID);
@@ -2401,6 +2605,7 @@
         String autodelete = req.getParameter("autodelete");
         String activetill = req.getParameter("activetill");
         String active = req.getParameter("active");
+        String is2faEnabled = req.getParameter("is2faEnabled");
         String domainID = req.getParameter("domainID");
         try {
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
@@ -2414,10 +2619,27 @@
         if (commentAttr != null) {
             comment = commentAttr;
         }
-        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET COMMENTS = '").append(comment).append("', VIEW_ID = '").append(viewid).append("', SCHEDULEID = '").append(scheduleid).append("', ACTIVETILL = ").append(pool.delimitDBColumnValue(activetill)).append(", ACTIVE = '").append(active).append("', AUTODELETE = '").append(autodelete).append("' WHERE (ID LIKE '").append(id).append("'").append(" OR USER_TYPE_ID LIKE '").append(id).append("'").append(" ) AND domainID ='").append(domainID).append("'").toString();
-        String queryPwd = new StringBuffer("UPDATE ").append(tableName).append(" SET NEEDPWDCHANGE = '").append(needpwdchange).append("' WHERE (ID LIKE '").append(id).append("'").append(" OR USER_TYPE_ID LIKE '").append(id).append("'").append(" ) AND domainID ='").append(domainID).append("' AND (authServerID IS NULL OR authServerID NOT IN (SELECT ID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("auth_servers").append(" WHERE host_type IN ('0', '1', '2')))").toString();
-        try {
-            this.executeUpdate(queryPwd);
+        String[] psValue = new String[]{comment, viewid, scheduleid, activetill, active, autodelete, is2faEnabled, id, id, domainID};
+        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET COMMENTS = ?").append(", VIEW_ID = ?").append(", SCHEDULEID = ?").append(", ACTIVETILL = ?").append(", ACTIVE = ?").append(", AUTODELETE = ?").append(", IS2FA_ENABLED = ?").append(" WHERE (ID LIKE ?").append(" OR USER_TYPE_ID LIKE ?").append(" ) AND domainID =?").toString();
+        String[] psValuePwd = new String[]{needpwdchange, id, id, domainID};
+        String queryPwd = new StringBuffer("UPDATE ").append(tableName).append(" SET NEEDPWDCHANGE = ?").append(" WHERE (ID LIKE ?").append(" OR USER_TYPE_ID LIKE ?").append(" ) AND domainID =?").append(" AND (authServerID IS NULL OR authServerID NOT IN (SELECT ID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("auth_servers").append(" WHERE host_type IN ('0', '1', '2')))").toString();
+        try {
+            this.executeUpdatePS(queryPwd, psValuePwd);
+            if (is2faEnabled.equals(ENABLE_2FA_LOGIN)) {
+                Vector<String> users = this.getUsersByType(domainID, id);
+                StringBuffer twoFaUpdateQuery = null;
+                for (String user2 : users) {
+                    String eCode = TwoFactAuthUtil.generateBaseSecret(8);
+                    String secretKey = TwoFactAuthUtil.generateBase32Secret();
+                    String[] psValue2fa = new String[]{eCode, secretKey, user2, domainID};
+                    twoFaUpdateQuery = new StringBuffer("UPDATE ").append(tableName).append(" SET EMERGENCY_CODE = ?").append(", SECRET_KEY = ?").append(" WHERE ID = ?").append(" AND domainID = ?");
+                    this.executeUpdatePS(twoFaUpdateQuery.toString(), psValue2fa);
+                    if (!this.isUserSuperAdmin(user2, "DMN0000000000000000000000001") || !"admin".equalsIgnoreCase(user2) || !"DMN0000000000000000000000001".equalsIgnoreCase(domainID)) continue;
+                    req.setAttribute("EMERGENCY_CODE", eCode);
+                    req.setAttribute("SECRET_KEY", secretKey);
+                    this.sync2FAConfigWithAppliance(req, res);
+                }
+            }
         }
         catch (SQLException e) {
             if (out != null) {
@@ -2425,7 +2647,7 @@
             }
             SGMSUtil.debugOut(e.getMessage());
         }
-        if (this.sendUpdateResultToApplet(out, query)) {
+        if (this.sendUpdateResultToAppletPS(out, query, psValue)) {
             String curDomainID;
             String name = req.getParameter("name");
             String domainName = req.getParameter("domainName");
@@ -2448,22 +2670,23 @@
         String id = req.getParameter("id");
         String name = req.getParameter("name");
         String domainId = req.getParameter("domainID");
-        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE ID = '" + name + "' and domainID = '" + domainId + "'";
-        if (this.getCount(existsQuery) > 0) {
+        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE ID = ? and domainID = ?";
+        String[] psValue = new String[]{name, domainId};
+        if (this.getCountPS(existsQuery, psValue) > 0) {
             out.println("ERROR: User '" + name + "' already exists.");
             return;
         }
-        String update = "UPDATE " + screenPermsTable + " SET USER_ID = '" + name + "' WHERE USER_ID LIKE '" + id + "' and domainID = '" + domainId + "'";
+        String update = "UPDATE " + screenPermsTable + " SET USER_ID = ? WHERE USER_ID LIKE ? and domainID = ?";
         try {
-            this.executeUpdate(update);
-            update = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "UNIT_PERMS SET USER_ID = '" + name + "' WHERE USER_ID LIKE '" + id + "' and domainID = '" + domainId + "'";
-            this.executeUpdate(update);
+            this.executeUpdatePS(update, new String[]{name, id, domainId});
+            update = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "UNIT_PERMS SET USER_ID = ? WHERE USER_ID LIKE ? and domainID = ?";
+            this.executeUpdatePS(update, new String[]{name, id, domainId});
         }
         catch (SQLException sQLException) {
             // empty catch block
         }
-        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET ID = '").append(name).append("' WHERE ID LIKE '").append(id).append("'").append(" and domainID = '" + domainId + "'").toString();
-        this.sendUpdateResultToApplet(out, query);
+        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET ID = ?").append(" WHERE ID LIKE ?").append(" and domainID = ?").toString();
+        this.sendUpdateResultToAppletPS(out, query, new String[]{name, id, domainId});
     }
 
     public void appletRenameUserType(String sessionID, HttpServletRequest req, HttpServletResponse res) throws IOException {
@@ -2475,13 +2698,13 @@
         String id = req.getParameter("id");
         String name = req.getParameter("name");
         String domainId = req.getParameter("domainID");
-        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE FNAME = '" + name + "' and domainID = '" + domainId + "'";
-        if (this.getCount(existsQuery) > 0) {
+        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE FNAME = ? and domainID = ?";
+        if (this.getCountPS(existsQuery, new String[]{name, domainId}) > 0) {
             out.println("ERROR: User Type '" + name + "' already exists.");
             return;
         }
-        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET FNAME = '").append(name).append("' WHERE ID LIKE '").append(id).append("'").append(" and domainID = '" + domainId + "'").toString();
-        this.sendUpdateResultToApplet(out, query);
+        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET FNAME = ?").append(" WHERE ID LIKE ?").append(" and domainID = ?").toString();
+        this.sendUpdateResultToAppletPS(out, query, new String[]{name, id, domainId});
     }
 
     public void appletDeleteUser(String sessionID, HttpServletRequest req, HttpServletResponse res) throws IOException {
@@ -2503,10 +2726,10 @@
         catch (SQLException e) {
             log.log("UserManager", "appletDeleteUser", e);
         }
-        String query = new StringBuffer("DELETE FROM ").append(usrReportsTable).append(" WHERE user_id = '").append(id).append("' AND domain_id='").append(domainID).append("'").toString();
-        this.sendUpdateResultToApplet(out, query);
-        query = new StringBuffer("DELETE FROM ").append(tableName).append(" WHERE (ID LIKE '").append(id).append("' OR USER_TYPE_ID LIKE '").append(id).append("') AND domainID='").append(domainID).append("'").toString();
-        this.sendUpdateResultToApplet(out, query);
+        String query = new StringBuffer("DELETE FROM ").append(usrReportsTable).append(" WHERE user_id = ?").append(" AND domain_id=?").toString();
+        this.sendUpdateResultToAppletPS(out, query, new String[]{id, domainID});
+        query = new StringBuffer("DELETE FROM ").append(tableName).append(" WHERE (ID LIKE ?").append(" OR USER_TYPE_ID LIKE ?").append(") AND domainID=?").toString();
+        this.sendUpdateResultToAppletPS(out, query, new String[]{id, id, domainID});
         this.cleanUpUserData(id, sessUserName, domainID);
         this.cleanUpWorkFlowData(id, domainID);
         if (usersForUserType != null) {
@@ -2527,8 +2750,8 @@
         String id = req.getParameter("id");
         HttpSession session = req.getSession(false);
         String domainID = (String)session.getAttribute("domainID");
-        String query = new StringBuffer("DELETE FROM ").append(tableName).append(" WHERE ID LIKE '").append(id).append("' OR USER_TYPE_ID LIKE '").append(id).append("'").append(" AND domainID = '").append(domainID).append("'").toString();
-        this.sendUpdateResultToApplet(out, query);
+        String query = new StringBuffer("DELETE FROM ").append(tableName).append(" WHERE ID LIKE ?").append(" OR USER_TYPE_ID LIKE ?").append(" AND domainID = ?").toString();
+        this.sendUpdateResultToAppletPS(out, query, new String[]{id, id, domainID});
         if (fm == null) {
             fm = (FilterManager)FilterManager.getReference(pool);
         }
@@ -2561,8 +2784,8 @@
     }
 
     public synchronized boolean addSupportUserType(String sessUserName, String name, String domainID) throws IOException {
-        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE FNAME = '" + name + "' AND domainID = '" + domainID + "'";
-        if (this.getCount(existsQuery) > 0) {
+        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE FNAME = ? AND domainID = ?";
+        if (this.getCountPS(existsQuery, new String[]{name, domainID}) > 0) {
             return false;
         }
         this.appletAddUserType(sessUserName, name, domainID, null);
@@ -2575,8 +2798,8 @@
     }
 
     public synchronized void appletAddUserType(String sessUserName, String name, String domainID, PrintWriter out) throws IOException {
-        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE FNAME = '" + name + "' AND domainID = '" + domainID + "'";
-        if (this.getCount(existsQuery) > 0) {
+        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE FNAME = ? AND domainID = ?";
+        if (this.getCountPS(existsQuery, new String[]{name, domainID}) > 0) {
             if (null != out) {
                 out.println("ERROR: User Type '" + name + "' already exists.");
             }
@@ -2590,22 +2813,22 @@
             return;
         }
         StringBuffer queryBuf = new StringBuffer("INSERT INTO " + tableName + " (ID, FNAME, domainID, controls) ");
-        queryBuf.append("VALUES ('" + unique + "', '" + name + "', '" + domainID + "', '0:0:0:0:0:0:0:0:0:0:0:0:0:0:1:0:0:0')");
+        queryBuf.append("VALUES (?, ?, ?, ?)");
         try {
-            this.executeUpdate(queryBuf.toString());
+            this.executeUpdatePS(queryBuf.toString(), new String[]{unique, name, domainID, "0:0:0:0:0:0:0:0:0:0:0:0:0:0:1:0:0:0"});
         }
         catch (SQLException sqle) {
             log.log("UserManager", "appletAddUserType", "Error adding :  User type" + name);
         }
         if (null != out) {
-            this.sendUpdateResultToApplet(out, queryBuf.toString());
+            this.sendUpdateResultToAppletPS(out, queryBuf.toString(), new String[]{unique, name, domainID, "0:0:0:0:0:0:0:0:0:0:0:0:0:0:1:0:0:0"});
             out.println(unique);
         }
-        queryBuf = new StringBuffer("SELECT ").append(DataBaseConnectionPool.isSQLServer() ? " TOP 1 " : "").append("ID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("sgms_views WHERE domainID = '").append(domainID).append("' ORDER BY ID").append(DataBaseConnectionPool.isMySQL() ? " LIMIT 1" : "");
+        queryBuf = new StringBuffer("SELECT ").append(DataBaseConnectionPool.isSQLServer() ? " TOP 1 " : "").append("ID FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("sgms_views WHERE domainID = ?").append(" ORDER BY ID").append(DataBaseConnectionPool.isMySQL() ? " LIMIT 1" : "");
         String defaultViewID = "";
         try {
             String[] row;
-            Vector v = this.getQueryResults(queryBuf.toString());
+            Vector v = this.getQueryResultsPS(queryBuf.toString(), new String[]{domainID});
             if (v.size() > 0 && (row = (String[])v.get(0)).length > 0 && (defaultViewID = row[0]).length() > 0) {
                 this.updateColumn(new String[]{"ID"}, new String[]{unique}, "VIEW_ID", defaultViewID, tableName);
             }
@@ -2650,7 +2873,7 @@
             }
         }
         String string = addUser.getfName() != null ? addUser.getfName() : (fName = dispName != null ? dispName : userId);
-        if ("admin".equals(userId) && "1".equals((domainInfo = domainManager.getDomainInfoByID(domainID)).isAdminHidden())) {
+        if ("admin".equals(userId) && ENABLE_2FA_LOGIN.equals((domainInfo = domainManager.getDomainInfoByID(domainID)).isAdminHidden())) {
             domainManager.unhideAdmin(domainID, domainInfo.getDomainName());
             this.setAuthServerID(authServerID, "admin", domainID, domainInfo.getDomainName());
             try {
@@ -2659,34 +2882,86 @@
             catch (SQLException e) {
                 log.log("UserManager", "appletAddUser", "Error: " + e + "\nMessage: Could not update the password for the user " + "admin");
             }
-            out.println("1");
+            out.println(ENABLE_2FA_LOGIN);
             return;
         }
-        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE ID = '" + userId + "' AND domainID = '" + domainID + "'";
-        if (this.getCount(existsQuery) > 0) {
+        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+        if (this.getCountPS(existsQuery, new String[]{userId, domainID}) > 0) {
             out.println("ERROR: User '" + dispName + "' already exists in this domain.");
             return;
         }
         StringBuffer queryBuf = new StringBuffer("INSERT INTO " + tableName + " ");
-        queryBuf.append("(ID, domainID, PASSWORD, USER_TYPE_ID, VIEW_ID, FNAME, LNAME, EMAIL1, CONTROLS, usertypeType, authServerID) VALUES ('");
-        queryBuf.append(userId + "', '" + domainID + "', '" + password + "', '" + userTypeId + "', '" + defaultViewID + "', '" + fName + "', '" + (lName != null ? lName : "") + "', '" + (email1 != null ? email1 : "") + "', '" + controls + "', '" + utType + "', '" + authServerID + "')");
+        queryBuf.append("(ID, domainID, PASSWORD, USER_TYPE_ID, VIEW_ID, FNAME, LNAME, EMAIL1, CONTROLS, usertypeType, authServerID) VALUES (?,?,?,?,?,?,?,?,?,?,?)");
         this.setUserPassword(userId, password, domainID);
-        if (this.sendUpdateResultToApplet(out, queryBuf.toString())) {
+        if (this.sendUpdateResultToAppletPS(out, queryBuf.toString(), new String[]{userId, domainID, password, userTypeId, defaultViewID, fName, lName != null ? lName : "", email1 != null ? email1 : "", controls, utType, authServerID})) {
             queryBuf = new StringBuffer("INSERT INTO " + screenPermsTable + " ");
             queryBuf.append("(USER_ID, SCRN_ID, PERMS, domainID) SELECT '" + userId + "',  SCRN_ID, PERMS, domainID FROM ");
-            queryBuf.append(screenPermsTable + " WHERE USER_ID LIKE '" + userTypeId + "'");
-            queryBuf.append(" AND domainID='").append(domainID).append("'");
-            this.sendUpdateResultToApplet(null, queryBuf.toString());
+            queryBuf.append(screenPermsTable + " WHERE USER_ID LIKE ?");
+            queryBuf.append(" AND domainID=?");
+            this.sendUpdateResultToAppletPS(null, queryBuf.toString(), new String[]{userTypeId, domainID});
             String unitPermsTableName = DataBaseConnectionPool.getTablePrefix() + "UNIT_PERMS";
             queryBuf = new StringBuffer("INSERT INTO " + unitPermsTableName + " ");
             queryBuf.append("(USER_ID, UNIT_ID, PERMS, domainID) (SELECT '" + userId + "',  UNIT_ID, PERMS, domainID FROM ");
-            queryBuf.append(unitPermsTableName + " WHERE USER_ID LIKE '" + userTypeId);
-            queryBuf.append("' AND domainID='").append(domainID).append("')");
-            this.sendUpdateResultToApplet(null, queryBuf.toString());
+            queryBuf.append(unitPermsTableName + " WHERE USER_ID LIKE ?");
+            queryBuf.append(" AND domainID=?");
+            this.sendUpdateResultToAppletPS(null, queryBuf.toString(), new String[]{userTypeId, domainID});
         }
         this.initNewUser(userId, sessUserName, userTypeId, domainID);
     }
 
+    public int reset2faForUser(String sessionID, String user2, String domainID) {
+        SGMSUtil.debugOut((Object)"UserManager.reset2faForUser(3):", 3);
+        String[] colName = new String[]{columns[34], columns[36], columns[35]};
+        String[] colValue = new String[]{ENABLE_2FA_LOGIN, TwoFactAuthUtil.generateBase32Secret(), TwoFactAuthUtil.generateBaseSecret(8)};
+        try {
+            return userManager.setUserData(sessionID, user2, colName, colValue, domainID);
+        }
+        catch (SQLException e) {
+            SGMSUtil.debugOut((Object)("UserManager.reset2faForUser(): Failed - " + e.getMessage()), 3);
+            return 0;
+        }
+    }
+
+    public int reset2faForUser(String sessionID, String user2, String domainID, String is2faEnabled, String secret, String emergCode) {
+        SGMSUtil.debugOut((Object)"UserManager.reset2faForUser(6):", 3);
+        String[] colName = new String[]{columns[34], columns[36], columns[35]};
+        String[] colValue = new String[]{is2faEnabled, secret, emergCode};
+        try {
+            return userManager.setUserData(sessionID, user2, colName, colValue, domainID);
+        }
+        catch (SQLException e) {
+            SGMSUtil.debugOut((Object)("UserManager.reset2faForUser(): Failed - " + e.getMessage()), 3);
+            return 0;
+        }
+    }
+
+    public synchronized int confirmFirst2faLogin(String sessionID, String ID, String domainID) {
+        SGMSUtil.debugOut((Object)"UserManager.confirmFirst2faLogin():", 3);
+        String[] colName = new String[]{columns[34]};
+        String[] colValue = new String[]{CONFIRM_FIRST_2FA_LOGIN};
+        try {
+            return userManager.setUserData(sessionID, ID, colName, colValue, domainID);
+        }
+        catch (SQLException e) {
+            SGMSUtil.debugOut((Object)("UserManager.confirmFirst2faLogin(): Failed - " + e.getMessage()), 3);
+            return 0;
+        }
+    }
+
+    public synchronized int set2faByEmail(String sessionID, String ID, String domainID, String OTP) {
+        SGMSUtil.debugOut((Object)"UserManager.set2faByEmail():", 3);
+        String[] colName = new String[]{columns[38], columns[39]};
+        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
+        String[] colValue = new String[]{OTP, LocalDateTime.now(ZoneOffset.UTC).format(formatter)};
+        try {
+            return userManager.setUserData(sessionID, ID, colName, colValue, domainID);
+        }
+        catch (SQLException e) {
+            SGMSUtil.debugOut((Object)("UserManager.set2faByEmail(): Failed - " + e.getMessage()), 3);
+            return 0;
+        }
+    }
+
     public void appletDuplicateUser(String sessionID, HttpServletRequest req, HttpServletResponse res) throws IOException {
         DomainInfo domainInfo;
         PrintWriter out = null;
@@ -2713,7 +2988,7 @@
         } else {
             password = null;
         }
-        if ("admin".equals(name) && "1".equals((domainInfo = domainManager.getDomainInfoByID(domainID)).isAdminHidden())) {
+        if ("admin".equals(name) && ENABLE_2FA_LOGIN.equals((domainInfo = domainManager.getDomainInfoByID(domainID)).isAdminHidden())) {
             domainManager.unhideAdmin(domainID, domainInfo.getDomainName());
             this.setAuthServerID(authServerID, "admin", domainID, domainInfo.getDomainName());
             try {
@@ -2722,11 +2997,11 @@
             catch (SQLException e) {
                 log.log("UserManager", "appletDuplicateUser", "Error: " + e + "\nMessage: Could not update the password for the user " + "admin");
             }
-            out.println("1");
+            out.println(ENABLE_2FA_LOGIN);
             return;
         }
-        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE ID = '" + name + "' AND domainID = '" + domainID + "'";
-        if (this.getCount(existsQuery) > 0) {
+        String existsQuery = "SELECT COUNT(*) FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+        if (this.getCountPS(existsQuery, new String[]{name, domainID}) > 0) {
             out.println("ERROR: User '" + dispName + "' already exists. Please choose a different name\nfor creating a duplicate user");
             return;
         }
@@ -2745,17 +3020,17 @@
         queryBuf.append(name + "', '" + password + "', USER_TYPE_ID, VIEW_ID, '" + (dispName != null ? dispName : name) + "', '', '', STOCK, '', '', '" + email1 + "', ");
         queryBuf.append("'', '', '', IDLE_TIMEOUT, DISABLED, MSGS_PER_SCREEN, TASKS_PER_SCREEN, CONTROLS, ");
         queryBuf.append("NEEDPWDCHANGE, AUTODELETE, ACTIVETILL, ACTIVE, SCHEDULEID, domainID, usertypeType, ISSUPERADMIN, ").append("'").append(authServerID).append("' ");
-        queryBuf.append("FROM " + tableName + " WHERE ID = '" + id + "' AND domainID = '" + domainID + "')");
-        if (this.sendUpdateResultToApplet(out, queryBuf.toString())) {
+        queryBuf.append("FROM " + tableName + " WHERE ID = ? AND domainID = ?)");
+        if (this.sendUpdateResultToAppletPS(out, queryBuf.toString(), new String[]{id, domainID})) {
             queryBuf = new StringBuffer("INSERT INTO " + screenPermsTable + " ");
             queryBuf.append("(USER_ID, SCRN_ID, PERMS, DOMAINID) (SELECT '" + name + "',  SCRN_ID, PERMS, DOMAINID FROM ");
-            queryBuf.append(screenPermsTable + " WHERE USER_ID LIKE '" + id + "' AND DOMAINID = '" + domainID + "')");
-            this.sendUpdateResultToApplet(null, queryBuf.toString());
+            queryBuf.append(screenPermsTable + " WHERE USER_ID LIKE ? AND DOMAINID = ?)");
+            this.sendUpdateResultToAppletPS(null, queryBuf.toString(), new String[]{id, domainID});
             String unitPermsTableName = DataBaseConnectionPool.getTablePrefix() + "UNIT_PERMS";
             queryBuf = new StringBuffer("INSERT INTO " + unitPermsTableName + " ");
             queryBuf.append("(USER_ID, UNIT_ID, PERMS, DOMAINID) (SELECT '" + name + "',  UNIT_ID, PERMS, DOMAINID FROM ");
-            queryBuf.append(unitPermsTableName + " WHERE USER_ID LIKE '" + id + "' AND DOMAINID = '" + domainID + "')");
-            this.sendUpdateResultToApplet(null, queryBuf.toString());
+            queryBuf.append(unitPermsTableName + " WHERE USER_ID LIKE ? AND DOMAINID = ?)");
+            this.sendUpdateResultToAppletPS(null, queryBuf.toString(), new String[]{id, domainID});
         }
         this.initNewUser(name, sessUserName, id, domainID);
     }
@@ -2778,7 +3053,7 @@
                 paramsTblName = paramsTblName.toLowerCase(new Locale(this.language_code, this.country_code));
                 if (paramsTableName.equals(paramsTblName)) {
                     rowFields = new String[]{"ID", "IS_UNIT"};
-                    rowValues = new String[]{"0:" + userName, "0"};
+                    rowValues = new String[]{"0:" + userName, DISABLE_2FA_LOGIN};
                 } else {
                     rowFields = new String[]{"ID"};
                     rowValues = new String[]{"0:" + userName};
@@ -2824,16 +3099,18 @@
             sbQuery.setLength(0);
             sbQuery.append("DELETE FROM " + DataBaseConnectionPool.getTablePrefix() + tblName + " WHERE ");
             int ctr = 0;
+            ArrayList<String> psValue = new ArrayList<String>();
             for (ApplianceInfoData aid : ail) {
                 if (ctr > 0) {
                     sbQuery.append(" OR ");
                 }
-                sbQuery.append(" ID LIKE " + pool.delimitDBColumnValue("%:" + userName + aid.getSuffix() + "@" + domainID));
+                sbQuery.append(" ID LIKE ?");
+                psValue.add("%:" + userName + aid.getSuffix() + "@" + domainID);
                 ++ctr;
             }
             SGMSUtil.debugOut("UserManager: cleanUpUserData: Delete Query (IND): " + sbQuery.toString());
             try {
-                this.executeUpdate(sbQuery.toString());
+                this.executeUpdatePS(sbQuery.toString(), psValue.toArray(new String[psValue.size()]));
             }
             catch (SQLException sqle) {
                 log.log("UserManager", "cleanUpUserData", "Error: " + sqle + "\nMessage: User " + SGMSUtil2.unescapeUserID(userName) + " could not be deleted from the Params table.");
@@ -2847,15 +3124,17 @@
                     sbQuery.setLength(0);
                     sbQuery.append("DELETE FROM " + DataBaseConnectionPool.getTablePrefix() + tblName + " WHERE ");
                     int ctr = 0;
+                    ArrayList<String> psValue = new ArrayList<String>();
                     for (ApplianceInfoData aid : ail) {
                         if (ctr > 0) {
                             sbQuery.append(" OR ");
                         }
-                        sbQuery.append(" ID LIKE " + pool.delimitDBColumnValue("%:" + userName + aid.getSuffix() + "@" + domainID));
+                        sbQuery.append(" ID LIKE ?");
+                        psValue.add("%:" + userName + aid.getSuffix() + "@" + domainID);
                         ++ctr;
                     }
                     SGMSUtil.debugOut("UserManager: cleanUpUserData: Delete Query (ARR): " + sbQuery.toString());
-                    this.executeUpdate(sbQuery.toString());
+                    this.executeUpdatePS(sbQuery.toString(), psValue.toArray(new String[psValue.size()]));
                 }
                 catch (SQLException sqle) {
                     log.log("UserManager", "cleanUpUserData", "Error: " + sqle + "\nMessage: Array table entries for user " + SGMSUtil2.unescapeUserID(userName) + " in table " + tblName + " could not be deleted.");
@@ -2888,8 +3167,8 @@
             }
         }
         try {
-            String delUserMotd = new StringBuffer("DELETE FROM ").append(usersMotdTable).append(" WHERE (ID LIKE '").append(userName).append("' OR USER_TYPE_ID LIKE '").append(userName).append("') AND domainID='").append(domainID).append("'").toString();
-            this.executeUpdate(delUserMotd);
+            String delUserMotd = new StringBuffer("DELETE FROM ").append(usersMotdTable).append(" WHERE (ID LIKE ? OR USER_TYPE_ID LIKE ?) AND domainID=?").toString();
+            this.executeUpdatePS(delUserMotd, new String[]{userName, userName, domainID});
         }
         catch (SQLException sqe) {
             log.log("UserManager", "cleanUpUserData", sqe);
@@ -3072,8 +3351,8 @@
         if (out == null) {
             return;
         }
-        String query = "SELECT CONTROLS FROM " + tableName + " WHERE ID LIKE '" + userID + "' AND domainID='" + domainID + "'";
-        this.sendQueryResultToApplet(out, query);
+        String query = "SELECT CONTROLS FROM " + tableName + " WHERE ID LIKE ? AND domainID=?";
+        this.sendQueryResultToApplet(out, query, new String[]{userID, domainID});
     }
 
     public void appletUserTypeControlsInfo(String sessionID, HttpServletResponse res, String userTypeID, String domainID) throws IOException {
@@ -3082,8 +3361,8 @@
         if (out == null) {
             return;
         }
-        String query = "SELECT CONTROLS FROM " + tableName + " WHERE ID LIKE '" + userTypeID + "' AND domainID='" + domainID + "'";
-        this.sendQueryResultToApplet(out, query);
+        String query = "SELECT CONTROLS FROM " + tableName + " WHERE ID LIKE ? AND domainID=?";
+        this.sendQueryResultToApplet(out, query, new String[]{userTypeID, domainID});
     }
 
     public void appletUpdateUserControlsInfo(String sessionID, HttpServletRequest req, HttpServletResponse res) throws IOException {
@@ -3095,18 +3374,22 @@
         String id = req.getParameter("id");
         String data = req.getParameter("value");
         String domainID = req.getParameter("domainID");
-        StringBuffer query = new StringBuffer("UPDATE " + tableName + " SET CONTROLS = '");
-        query.append(data + "' WHERE ID LIKE '" + id + "'");
+        ArrayList<String> psValues = new ArrayList<String>();
+        StringBuffer query = new StringBuffer("UPDATE " + tableName + " SET CONTROLS = ?");
+        query.append(" WHERE ID LIKE ?");
+        psValues.add(data);
+        psValues.add(id);
         if (domainID != null && domainID.length() > 0) {
-            query.append(" AND domainID = '" + domainID + "'");
+            query.append(" AND domainID = ?");
+            psValues.add(domainID);
         }
-        if (this.sendUpdateResultToApplet(out, query.toString())) {
+        if (this.sendUpdateResultToAppletPS(out, query.toString(), psValues.toArray(new String[psValues.size()]))) {
             HttpSession session = req.getSession();
             String curUserID = (String)session.getAttribute("sgmsuser");
             String curDomainID = (String)session.getAttribute("domainID");
             String[] arr = this.parseControlsToArray(data);
             if (arr != null) {
-                String msg = "Data Privacy: Can Unmask Data control has been " + (arr[15].equals("1") ? "Enabled" : "Disabled") + " for user: " + SGMSUtil2.unescapeUserID(id);
+                String msg = "Data Privacy: Can Unmask Data control has been " + (arr[15].equals(ENABLE_2FA_LOGIN) ? "Enabled" : "Disabled") + " for user: " + SGMSUtil2.unescapeUserID(id);
                 logsManager.addNewLogFYI("", curUserID, msg, "", curDomainID);
             }
             logsManager.addNewLogFYI("", curUserID, "Action Permissions have been updated for user: " + SGMSUtil2.unescapeUserID(id), "", curDomainID);
@@ -3121,9 +3404,9 @@
         }
         String id = req.getParameter("id");
         String data = req.getParameter("value");
-        StringBuffer query = new StringBuffer("UPDATE " + tableName + " SET CONTROLS = '" + data + "' ");
-        query.append("WHERE ID LIKE '" + id + "' OR USER_TYPE_ID LIKE '" + id + "' AND ID NOT LIKE 'admin' AND issuperadmin != '1'");
-        if (this.sendUpdateResultToApplet(out, query.toString())) {
+        StringBuffer query = new StringBuffer("UPDATE " + tableName + " SET CONTROLS = ? ");
+        query.append("WHERE ID LIKE ? OR USER_TYPE_ID LIKE ? AND ID NOT LIKE 'admin' AND issuperadmin != '1'");
+        if (this.sendUpdateResultToAppletPS(out, query.toString(), new String[]{data, id, id})) {
             HttpSession session = req.getSession();
             String curUserID = (String)session.getAttribute("sgmsuser");
             String curDomainID = (String)session.getAttribute("domainID");
@@ -3139,7 +3422,7 @@
             }
             String[] arr = this.parseControlsToArray(data);
             if (arr != null) {
-                String msg = "Data Privacy: Can Unmask Data control has been " + (arr[15].equals("1") ? "Enabled" : "Disabled") + " for user type: " + name;
+                String msg = "Data Privacy: Can Unmask Data control has been " + (arr[15].equals(ENABLE_2FA_LOGIN) ? "Enabled" : "Disabled") + " for user type: " + name;
                 logsManager.addNewLogFYI("", curUserID, msg, "", curDomainID);
             }
             logsManager.addNewLogFYI("", curUserID, "Action Permissions have been updated for user type: " + name, "", curDomainID);
@@ -3148,13 +3431,13 @@
 
     public void appletUserControlsInfo(String sessionID, HttpServletResponse res) throws IOException {
         String userID = this.getUserID(sessionID, parser);
-        String query = "SELECT CONTROLS FROM " + tableName + " WHERE ID LIKE '" + userID + "'";
+        String query = "SELECT CONTROLS FROM " + tableName + " WHERE ID LIKE ?";
         PrintWriter out = null;
         out = this.setupAppletResponse(sessionID, res);
         if (out == null) {
             return;
         }
-        this.sendQueryResultToAppletSingleLine(out, query);
+        this.sendQueryResultToAppletSingleLinePS(out, query, new String[]{userID});
     }
 
     /*
@@ -3184,34 +3467,54 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getUserAppSelShowFlag(String sessionID, String domainID) {
-        String appSelShow = "";
+        ResultSet rs;
+        String appSelShow;
+        block7: {
+            appSelShow = "";
         String userID = this.getUserID(sessionID, parser);
-        String query = "SELECT appSelShow FROM " + tableName + " WHERE ID LIKE '" + userID + "'";
+            String query = "SELECT appSelShow FROM " + tableName + " WHERE ID LIKE ?";
         if (domainID != null) {
-            query = query + " AND domainID LIKE '" + domainID + "'";
+                query = query + " AND domainID LIKE ?";
         }
-        ResultSet rs = null;
+            rs = null;
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs.next()) {
-                appSelShow = UserManager.getValidString(rs, 1);
+                String[] stringArray;
+                if (domainID != null) {
+                    String[] stringArray2 = new String[2];
+                    stringArray2[0] = userID;
+                    stringArray = stringArray2;
+                    stringArray2[1] = domainID;
+                } else {
+                    String[] stringArray3 = new String[1];
+                    stringArray = stringArray3;
+                    stringArray3[0] = userID;
             }
+                rs = UserManager.executeQueryPS(query, stringArray);
+                if (!rs.next()) break block7;
+                appSelShow = UserManager.getValidString(rs, 1);
         }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut("UserManager: getUserAppSelShowFlag() error " + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return appSelShow;
     }
 
     public void setMotdEnabled(String enabled, String user2) {
-        StringBuffer query = new StringBuffer("UPDATE ").append(usersMotdTable).append(" set motd_enabled=").append(pool.delimitDBColumnValue(enabled));
-        query.append(" where ID=").append(pool.delimitDBColumnValue(user2));
+        StringBuffer query = new StringBuffer("UPDATE ").append(usersMotdTable).append(" set motd_enabled=?");
+        query.append(" where ID=?");
+        String[] psValues = new String[]{enabled, user2};
         SGMSUtil.debugOut((Object)("UserManager.setMotdEnable: " + query), 3);
         try {
-            this.executeUpdate(query.toString());
+            this.executeUpdatePS(query.toString(), psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.setMotd: " + query + " Error:" + e);
@@ -3344,7 +3647,7 @@
                 motd = UserManager.getValidString(rs, "motd");
                 motd = new String(Base64.decode(motd.toCharArray()));
                 String format = UserManager.getValidString(rs, "msg_format");
-                if (format.equals("0")) {
+                if (format.equals(DISABLE_2FA_LOGIN)) {
                     motd = StringEscapeUtils.escapeHtml4(motd);
                 }
                 motd_settings.addElement(motd);
@@ -3384,7 +3687,7 @@
     public static String[] redisplayMotd(String user2, String domainID) {
         String[] result = new String[2];
         String motd = "";
-        String format = "0";
+        String format = DISABLE_2FA_LOGIN;
         ResultSet rs = null;
         String query = "SELECT motd, msg_format, motd_enabled FROM " + usersMotdTable + " where ID=" + pool.delimitDBColumnValue(user2) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
         SGMSUtil.debugOut((Object)("UserManager.redisplayMotd: " + query), 3);
@@ -3397,7 +3700,7 @@
                 }
                 format = UserManager.getValidString(rs, "msg_format");
                 result[1] = UserManager.getValidString(rs, "motd_enabled");
-                if (!format.equals("0")) continue;
+                if (!format.equals(DISABLE_2FA_LOGIN)) continue;
                 motd = StringEscapeUtils.escapeHtml4(motd);
             }
         }
@@ -3412,7 +3715,7 @@
         }
         result[0] = motd;
         if (result[1] == null) {
-            result[1] = "0";
+            result[1] = DISABLE_2FA_LOGIN;
         }
         return result;
     }
@@ -3422,29 +3725,35 @@
      */
     public String getUserDefaultChartTypeStr(String sessionID, String userID, String domainID) {
         String defaultChartTypeStr = null;
-        String query = "SELECT screenDefaultChartTypes FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "SELECT screenDefaultChartTypes FROM " + tableName + " WHERE ID = ? AND domainID = ?";
         ResultSet rs = null;
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, new String[]{userID, domainID});
             while (rs.next()) {
                 defaultChartTypeStr = UserManager.getValidString(rs, 1);
             }
         }
         catch (SQLException sqe) {
+            try {
             SGMSUtil.debugOut("UserManager.getUserDefaultChartTypeStr() error: " + sqe.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return defaultChartTypeStr;
     }
 
     public boolean setUserDefaultChartTypeStr(String sessionID, String userID, String defaultChartTypeStr, String domainID) {
         StringBuffer queryBuf = new StringBuffer();
-        queryBuf.append("UPDATE ").append(tableName).append(" SET screenDefaultChartTypes = ").append(pool.delimitDBColumnValue(defaultChartTypeStr)).append(" where ID=").append(pool.delimitDBColumnValue(userID)).append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+        queryBuf.append("UPDATE ").append(tableName).append(" SET screenDefaultChartTypes = ?").append(" where ID=?").append(" AND domainID=?");
         int rowsUpdated = 0;
+        String[] psValues = new String[]{defaultChartTypeStr, userID, domainID};
         try {
-            rowsUpdated = this.executeUpdate(queryBuf.toString());
+            rowsUpdated = this.executeUpdatePS(queryBuf.toString(), psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.setUserDefaultChartTypeStr: " + queryBuf.toString() + "\nError:" + e);
@@ -3494,11 +3803,12 @@
         if (fieldName.equals("")) {
             return false;
         }
-        String query = "UPDATE " + tableName + " SET " + fieldName + " = " + pool.delimitDBColumnValue(paramValue);
-        query = query + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET " + fieldName + " = ?";
+        query = query + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{paramValue, userID, domainID};
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(query);
+            rowsUpdated = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.updateUserReportSettings: " + query + "\nError:" + e);
@@ -3510,7 +3820,10 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getUserReportSettings(String sessionID, String userID, int paramType, String domainID) {
-        String value = null;
+        ResultSet rs;
+        String value;
+        block15: {
+            value = null;
         String fieldName = "";
         switch (paramType) {
             case 1: {
@@ -3552,29 +3865,35 @@
         if (fieldName.equals("")) {
             return null;
         }
-        String query = "SELECT " + fieldName + " FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
-        ResultSet rs = null;
+            String query = "SELECT " + fieldName + " FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+            rs = null;
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs.next()) {
+                rs = UserManager.executeQueryPS(query, new String[]{userID, domainID});
+                if (!rs.next()) break block15;
                 value = UserManager.getValidString(rs, 1);
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut("UserManager.getUserReportSettings() error: " + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return value;
     }
 
     public boolean updateUserReportsViewType(String sessionID, String userID, String viewType, String domainID) {
-        String query = "UPDATE " + tableName + " SET REPORT_VIEW_TYPE = " + pool.delimitDBColumnValue(viewType);
-        query = query + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET REPORT_VIEW_TYPE = ?";
+        query = query + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{viewType, userID, domainID};
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(query);
+            rowsUpdated = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.updateUserReportsViewType: " + query + "\nError:" + e);
@@ -3586,21 +3905,29 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getUserReportsViewType(String sessionID, String userID, String domainID) {
-        int value = 0;
-        String query = "SELECT REPORT_VIEW_TYPE FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
-        ResultSet rs = null;
+        ResultSet rs;
+        int value;
+        block4: {
+            value = 0;
+            String query = "SELECT REPORT_VIEW_TYPE FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+            rs = null;
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs.next()) {
+                rs = UserManager.executeQueryPS(query, new String[]{userID, domainID});
+                if (!rs.next()) break block4;
                 value = rs.getInt(1);
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut("UserManager.getUserReportsViewType() error: " + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return Integer.toString(value);
     }
 
@@ -3608,21 +3935,29 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getUserReportsSitesList(String sessionID, String userID, String domainID) {
-        String value = "";
-        String query = "SELECT REPORT_SITES_LIST FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
-        ResultSet rs = null;
+        ResultSet rs;
+        String value;
+        block4: {
+            value = "";
+            String query = "SELECT REPORT_SITES_LIST FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+            rs = null;
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs.next()) {
+                rs = UserManager.executeQueryPS(query, new String[]{userID, domainID});
+                if (!rs.next()) break block4;
                 value = rs.getString(1);
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut("UserManager.getUserReportsSitesList() error: " + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return value;
     }
 
@@ -3630,21 +3965,29 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getUserReportsSrcInterface(String sessionID, String userID, String domainID) {
-        String value = "";
-        String query = "SELECT SRC_INTERFACE FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
-        ResultSet rs = null;
+        ResultSet rs;
+        String value;
+        block4: {
+            value = "";
+            String query = "SELECT SRC_INTERFACE FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+            rs = null;
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs.next()) {
+                rs = UserManager.executeQueryPS(query, new String[]{userID, domainID});
+                if (!rs.next()) break block4;
                 value = rs.getString(1);
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut("UserManager.getUserReportsSitesList() error: " + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return value;
     }
 
@@ -3652,21 +3995,29 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getUserReportsDstInterface(String sessionID, String userID, String domainID) {
-        String value = "";
-        String query = "SELECT DST_INTERFACE FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
-        ResultSet rs = null;
+        ResultSet rs;
+        String value;
+        block4: {
+            value = "";
+            String query = "SELECT DST_INTERFACE FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+            rs = null;
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs.next()) {
+                rs = UserManager.executeQueryPS(query, new String[]{userID, domainID});
+                if (!rs.next()) break block4;
                 value = rs.getString(1);
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut("UserManager.getUserReportsSitesList() error: " + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return value;
     }
 
@@ -3674,30 +4025,39 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getUserReportsUsersList(String sessionID, String userID, String domainID) {
-        String value = "";
-        String query = "SELECT REPORT_USERS_LIST FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID, true) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
-        ResultSet rs = null;
+        ResultSet rs;
+        String value;
+        block4: {
+            value = "";
+            String query = "SELECT REPORT_USERS_LIST FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID, true) + " AND domainID = ?";
+            rs = null;
         try {
-            rs = UserManager.executeQuery(query);
-            if (rs.next()) {
+                rs = UserManager.executeQueryPS(query, new String[]{domainID});
+                if (!rs.next()) break block4;
                 value = rs.getString(1);
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut("UserManager.getUserReportsUsersList() error: " + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return value;
     }
 
     public boolean updateUserReportsSitesList(String sessionID, String userID, String siteList, String domainID) {
-        String query = "UPDATE " + tableName + " SET REPORT_SITES_LIST = " + pool.delimitDBColumnValue(siteList);
-        query = query + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET REPORT_SITES_LIST = ?";
+        query = query + " WHERE ID = ? AND domainID = ?";
+        String[] psValue = new String[]{siteList, userID, domainID};
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(query);
+            rowsUpdated = this.executeUpdatePS(query, psValue);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.updateUserReportsSitesList: " + query + "\nError:" + e);
@@ -3706,11 +4066,12 @@
     }
 
     public boolean updateUserReportsUsersList(String sessionID, String userID, String userList, String domainID) {
-        String query = "UPDATE " + tableName + " SET REPORT_USERS_LIST = " + pool.delimitDBColumnValue(userList);
-        query = query + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET REPORT_USERS_LIST = ?";
+        query = query + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{userList, userID, domainID};
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(query);
+            rowsUpdated = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.updateUserReportsUsersList: " + query + "\nError:" + e);
@@ -3719,11 +4080,12 @@
     }
 
     public boolean updateUserReportsSrcInterface(String sessionID, String userID, String srcInterface, String domainID) {
-        String query = "UPDATE " + tableName + " SET SRC_INTERFACE = " + pool.delimitDBColumnValue(srcInterface);
-        query = query + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET SRC_INTERFACE = ?";
+        query = query + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{srcInterface, userID, domainID};
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(query);
+            rowsUpdated = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.updateUserReportsSrcInterface: " + query + "\nError:" + e);
@@ -3732,11 +4094,12 @@
     }
 
     public boolean updateUserReportsDstInterface(String sessionID, String userID, String dstInterface, String domainID) {
-        String query = "UPDATE " + tableName + " SET DST_INTERFACE = " + pool.delimitDBColumnValue(dstInterface);
-        query = query + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET DST_INTERFACE = ?";
+        query = query + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{dstInterface, userID, domainID};
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(query);
+            rowsUpdated = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.updateUserReportsDstInterface: " + query + "\nError:" + e);
@@ -3749,10 +4112,11 @@
      */
     public String getUserStartHourSettings(String sessionID, String userID, String domainID) {
         String value = "";
-        String query = "SELECT REPORT_START_HOUR FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "SELECT REPORT_START_HOUR FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{userID, domainID};
         ResultSet rs = null;
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues);
             if (rs.next()) {
                 value = rs.getString(1);
             }
@@ -3771,10 +4135,11 @@
      */
     public String getUserEndHourSettings(String sessionID, String userID, String domainID) {
         String value = "";
-        String query = "SELECT REPORT_END_HOUR FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "SELECT REPORT_END_HOUR FROM " + tableName + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{userID, domainID};
         ResultSet rs = null;
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues);
             if (rs.next()) {
                 value = rs.getString(1);
             }
@@ -3789,11 +4154,12 @@
     }
 
     public boolean updateUserStartHourSettings(String sessionID, String userID, String startHour, String domainID) {
-        String query = "UPDATE " + tableName + " SET REPORT_START_HOUR = " + pool.delimitDBColumnValue(startHour);
-        query = query + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET REPORT_START_HOUR = ?";
+        query = query + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{startHour, userID, domainID};
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(query);
+            rowsUpdated = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.updateUserStartHourSettings: " + query + "\nError:" + e);
@@ -3802,11 +4168,12 @@
     }
 
     public boolean updateUserEndHourSettings(String sessionID, String userID, String endHour, String domainID) {
-        String query = "UPDATE " + tableName + " SET REPORT_END_HOUR = " + pool.delimitDBColumnValue(endHour);
-        query = query + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET REPORT_END_HOUR = ?";
+        query = query + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{endHour, userID, domainID};
         int rowsUpdated = 0;
         try {
-            rowsUpdated = this.executeUpdate(query);
+            rowsUpdated = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("UserManager.updateUserEndHourSettings: " + query + "\nError:" + e);
@@ -3820,9 +4187,10 @@
     public String getItemsCountPerPage(String userID) {
         ResultSet rs = null;
         String itemsPerPage = "10";
-        String query = "SELECT itemsPerPage FROM " + tableName + " WHERE ID = " + pool.delimitDBColumnValue(userID);
+        String query = "SELECT itemsPerPage FROM " + tableName + " WHERE ID = ?";
+        String[] psValues = new String[]{userID};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues);
             while (rs.next()) {
                 itemsPerPage = rs.getString(1);
             }
@@ -3840,11 +4208,12 @@
     }
 
     public int setItemsCountPerPage(String userID, String count, String domainID) {
-        String query = "UPDATE " + tableName + " SET itemsPerPage = " + pool.delimitDBColumnValue(count);
-        query = query + " WHERE ID = " + pool.delimitDBColumnValue(userID) + " AND domainID = " + pool.delimitDBColumnValue(domainID);
+        String query = "UPDATE " + tableName + " SET itemsPerPage = ?";
+        query = query + " WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{count, userID, domainID};
         int i = 0;
         try {
-            i = this.executeUpdate(query);
+            i = this.executeUpdatePS(query, psValues);
         }
         catch (SQLException sqe) {
             SGMSUtil.debugOut("UserManager.setItemsCountPerPage() error " + sqe.getMessage());
@@ -3861,9 +4230,10 @@
         String currentUT = req.getParameter("currentUT");
         String newUT = req.getParameter("newUT");
         String newUTType = req.getParameter("newUTType");
-        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET USER_TYPE_ID = ").append(pool.delimitDBColumnValue(userType2)).append(", usertypeType = ").append(pool.delimitDBColumnValue(newUTType)).append(", ISSUPERADMIN = ").append(pool.delimitDBColumnValue("0")).append(" WHERE ID = ").append(pool.delimitDBColumnValue(id)).append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID)).toString();
+        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET USER_TYPE_ID = ?").append(", usertypeType = ?").append(", ISSUPERADMIN = ?").append(" WHERE ID = ?").append(" AND domainID = ?").toString();
+        String[] psValues = new String[]{userType2, newUTType, DISABLE_2FA_LOGIN, id, domainID};
         try {
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, psValues);
         }
         catch (SQLException sqe) {
             SGMSUtil.debugOut("UserManager.appletMoveUser() error " + sqe.getMessage());
@@ -3874,7 +4244,7 @@
         }
         if (retainPerms && currentUT.equalsIgnoreCase("Administrators")) {
             String[] controls = new String[18];
-            controls[11] = "0";
+            controls[11] = DISABLE_2FA_LOGIN;
             if (!this.setUserControlsInfo(id, domainID, controls)) {
                 SGMSUtil.debugOut("UserManager.appletMoveUser() error: An error occured while updating user action permissions.");
                 return false;
@@ -3895,8 +4265,9 @@
 
     public List<String> getDomainIDByUserId(String userId) throws SQLException, IllegalArgumentException {
         userId = SGMSUtil2.escapeUserID(userId);
-        String query = "SELECT domainID FROM " + tableName + " WHERE ID = '" + userId + "'";
-        ResultSet rs = UserManager.executeQuery(query);
+        String query = "SELECT domainID FROM " + tableName + " WHERE ID = ?";
+        String[] psValues = new String[]{userId};
+        ResultSet rs = UserManager.executeQueryPS(query, psValues);
         ArrayList<String> domainIDs = new ArrayList<String>();
         while (rs.next()) {
             domainIDs.add(UserManager.getValidString(rs, "domainID"));
@@ -3911,12 +4282,13 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public boolean isUserSuperAdmin(String userID, String domainID) {
-        String query = new StringBuffer("SELECT ISSUPERADMIN FROM " + tableName + " WHERE ID LIKE '").append(userID).append("' AND domainID='").append(domainID).append("'").toString();
+        String query = new StringBuffer("SELECT ISSUPERADMIN FROM " + tableName + " WHERE ID LIKE ?").append(" AND domainID=?").toString();
+        String[] psValues = new String[]{userID, domainID};
         ResultSet rs = null;
         try {
             String utid;
-            rs = UserManager.executeQuery(query);
-            if (rs.next() && (utid = UserManager.getValidString(rs, "ISSUPERADMIN")) != null && utid.equals("1")) {
+            rs = UserManager.executeQueryPS(query, psValues);
+            if (rs.next() && (utid = UserManager.getValidString(rs, "ISSUPERADMIN")) != null && utid.equals(ENABLE_2FA_LOGIN)) {
                 boolean bl = true;
                 return bl;
             }
@@ -3947,9 +4319,10 @@
         if (domainID == null || domainID.equals("")) {
             return false;
         }
-        query = new StringBuffer("SELECT id FROM ").append(tableName).append(" WHERE id = ").append(pool.delimitDBColumnValue(userID)).append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID)).toString();
+        query = new StringBuffer("SELECT id FROM ").append(tableName).append(" WHERE id = ?").append(" AND domainID = ?").toString();
+        String[] psValues = new String[]{userID, domainID};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues);
             if (rs.next()) {
                 accountExists = true;
             }
@@ -3970,9 +4343,10 @@
     public String getAuthServerID(String userID, String domainID) {
         if (domainID != null && null != userID) {
             ResultSet rs = null;
-            String query = new StringBuffer("SELECT authServerID FROM ").append(tableName).append(" WHERE id = ").append(pool.delimitDBColumnValue(userID)).append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID)).toString();
+            String query = new StringBuffer("SELECT authServerID FROM ").append(tableName).append(" WHERE id = ?").append(" AND domainID = ?").toString();
+            String[] psValue = new String[]{userID, domainID};
             try {
-                rs = UserManager.executeQuery(query);
+                rs = UserManager.executeQueryPS(query, psValue);
                 if (rs.next()) {
                     String string = rs.getString("authServerID");
                     return string;
@@ -3994,9 +4368,10 @@
     public HashMap getSMTPParamsWarningSettings() {
         HashMap<String, String> map = new HashMap<String, String>();
         ResultSet rs = null;
-        String query = new StringBuffer("SELECT smtpParamWarningLastShowTime,doNotShowSMTPParamsWarning FROM ").append(tableName).append(" WHERE id = ").append(pool.delimitDBColumnValue("admin")).append(" AND domainID = ").append(pool.delimitDBColumnValue("DMN0000000000000000000000001")).toString();
+        String query = new StringBuffer("SELECT smtpParamWarningLastShowTime,doNotShowSMTPParamsWarning FROM ").append(tableName).append(" WHERE id = ?").append(" AND domainID = ?").toString();
+        String[] psValues = new String[]{"admin", "DMN0000000000000000000000001"};
         try {
-            rs = UserManager.executeQuery(query);
+            rs = UserManager.executeQueryPS(query, psValues);
             if (rs.next()) {
                 map.put("smtpParamWarningLastShowTime", UserManager.getValidString(rs, "smtpParamWarningLastShowTime"));
                 map.put("doNotShowSMTPParamsWarning", UserManager.getValidString(rs, "doNotShowSMTPParamsWarning"));
@@ -4052,9 +4427,10 @@
     }
 
     public void setAuthServerID(String authServerID, String userID, String domainID, String domainName) {
-        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET authServerID='").append(authServerID).append("' WHERE ID='").append(userID).append("' AND domainID='").append(domainID).append("'").toString();
+        String query = new StringBuffer("UPDATE ").append(tableName).append(" SET authServerID=?").append(" WHERE ID=?").append(" AND domainID=?").toString();
+        String[] psValues = new String[]{authServerID, userID, domainID};
         try {
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, psValues);
         }
         catch (SQLException e) {
             SGMSUtil.debugOut("\nError occured while setting the auth server id for the user \"" + SGMSUtil2.unescapeUserID(userID) + "\" of the domain \"" + domainName + "\" in the database.");
@@ -4105,9 +4481,10 @@
     }
 
     public void updateReportReceiverAddresses(String receiverAddr) {
-        String query = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "VP_EMAIL_RECEIVERS set  emailaddr='" + receiverAddr + "' WHERE type = 10";
+        String query = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "VP_EMAIL_RECEIVERS set  emailaddr=? WHERE type = 10";
+        String[] psValues = new String[]{receiverAddr};
         try {
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, psValues);
         }
         catch (Exception ex) {
             SGMSUtil.debugOut("Error occured in UserManager.updateReportReceiverAddresses().\n" + ex.getMessage());
@@ -4125,15 +4502,16 @@
     public void setHMRecordBarAutoHideStatus(String userID, String domainID, String autoHide) {
         SGMSUtil.debugOut((Object)"UserManager.setHMRecordBarAutoHideStatus(): Method Entry ", 2);
         if (autoHide == null || autoHide.trim().length() <= 0) {
-            autoHide = "0";
+            autoHide = DISABLE_2FA_LOGIN;
         }
         StringBuffer queryBuf = new StringBuffer("UPDATE ").append(tableName);
-        queryBuf.append(" SET hmRecordBarAutoHideStatus = ").append(pool.delimitDBColumnValue(autoHide));
-        queryBuf.append(" WHERE id = ").append(pool.delimitDBColumnValue(userID));
-        queryBuf.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+        queryBuf.append(" SET hmRecordBarAutoHideStatus = ?");
+        queryBuf.append(" WHERE id = ?");
+        queryBuf.append(" AND domainID = ?");
         SGMSUtil.debugOut((Object)("UserManager.setHMRecordBarAutoHideStatus(): Update Query is: " + queryBuf.toString()), 2);
+        String[] psValues = new String[]{autoHide, userID, domainID};
         try {
-            this.executeUpdate(queryBuf.toString());
+            this.executeUpdatePS(queryBuf.toString(), psValues);
         }
         catch (SQLException sqle) {
             SGMSUtil.debugOut("UserManager.setHMRecordBarAutoHideStatus(): SQLException occured while updating HMRecordBarAutoHideStatus: " + sqle.getMessage());
@@ -4146,24 +4524,30 @@
      */
     public String getHMRecordBarAutoHideStatus(String userID, String domainID) {
         SGMSUtil.debugOut((Object)"UserManager.getHMRecordBarAutoHideStatus(): Method Entry ", 2);
-        String hmRecordBarAutoHideStatus = "0";
+        String hmRecordBarAutoHideStatus = DISABLE_2FA_LOGIN;
         StringBuffer queryBuf = new StringBuffer("SELECT hmRecordBarAutoHideStatus FROM ").append(tableName);
-        queryBuf.append(" WHERE id = ").append(pool.delimitDBColumnValue(userID));
-        queryBuf.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+        queryBuf.append(" WHERE id = ?");
+        queryBuf.append(" AND domainID = ?");
         SGMSUtil.debugOut((Object)("UserManager.getHMRecordBarAutoHideStatus(): Select query is: " + queryBuf.toString()), 2);
+        String[] psValues = new String[]{userID, domainID};
         ResultSet rs = null;
         try {
-            rs = UserManager.executeQuery(queryBuf.toString());
+            rs = UserManager.executeQueryPS(queryBuf.toString(), psValues);
             while (rs.next()) {
                 hmRecordBarAutoHideStatus = UserManager.getValidString(rs, "hmRecordBarAutoHideStatus");
             }
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.debugOut("UserManager.getHMRecordBarAutoHideStatus(): SQLException occured while retrieving hmRecordBarAutoHIdeStatus: ");
         }
-        finally {
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         SGMSUtil.debugOut((Object)"UserManager.getHMRecordBarAutoHideStatus(): Method Exit ", 2);
         return hmRecordBarAutoHideStatus;
     }
@@ -4175,12 +4559,13 @@
             status = 0;
         }
         StringBuffer queryBuf = new StringBuffer("UPDATE ").append(tableName);
-        queryBuf.append(" SET uzoneFirstTimeKeepOpen = ").append(status);
-        queryBuf.append(" WHERE id = ").append(pool.delimitDBColumnValue(userID));
-        queryBuf.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+        queryBuf.append(" SET uzoneFirstTimeKeepOpen = ?");
+        queryBuf.append(" WHERE id = ?");
+        queryBuf.append(" AND domainID = ?");
         SGMSUtil.debugOut((Object)("UserManager.setUzoneFirstTimeKeepOpenStatus(): Update Query is: " + queryBuf.toString()), 2);
+        String[] psValues = new String[]{String.valueOf(status), userID, domainID};
         try {
-            this.executeUpdate(queryBuf.toString());
+            this.executeUpdatePS(queryBuf.toString(), psValues);
         }
         catch (SQLException sqle) {
             SGMSUtil.debugOut("UserManager.setUzoneFirstTimeKeepOpenStatus(): SQLException occured while updating uzoneFirstTimeKeepOpen: " + sqle.getMessage());
@@ -4192,25 +4577,34 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public boolean isUzoneFirstTimeKeepOpen(String userID, String domainID) {
+        ResultSet rs;
+        int uzoneFirstTimeKeepOpen;
+        block4: {
         SGMSUtil.debugOut((Object)"UserManager.isUzoneFirstTimeKeepOpen(): Method Entry ", 2);
-        int uzoneFirstTimeKeepOpen = 0;
+            uzoneFirstTimeKeepOpen = 0;
         StringBuffer queryBuf = new StringBuffer("SELECT uzoneFirstTimeKeepOpen FROM ").append(tableName);
-        queryBuf.append(" WHERE id = ").append(pool.delimitDBColumnValue(userID));
-        queryBuf.append(" AND domainID = ").append(pool.delimitDBColumnValue(domainID));
+            queryBuf.append(" WHERE id = ?");
+            queryBuf.append(" AND domainID = ?");
         SGMSUtil.debugOut((Object)("UserManager.isUzoneFirstTimeKeepOpen(): Select query is: " + queryBuf.toString()), 2);
-        ResultSet rs = null;
+            String[] psValues = new String[]{userID, domainID};
+            rs = null;
         try {
-            rs = UserManager.executeQuery(queryBuf.toString());
-            if (rs.next()) {
+                rs = UserManager.executeQueryPS(queryBuf.toString(), psValues);
+                if (!rs.next()) break block4;
                 uzoneFirstTimeKeepOpen = rs.getInt("uzoneFirstTimeKeepOpen");
             }
-        }
         catch (SQLException sqle) {
+                try {
             SGMSUtil.debugOut("UserManager.isUzoneFirstTimeKeepOpen(): SQLException occured while retrieving uzoneFirstTimeKeepOpen: ");
         }
-        finally {
+                catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
         }
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+            }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         SGMSUtil.debugOut((Object)"UserManager.isUzoneFirstTimeKeepOpen(): Method Exit ", 2);
         return uzoneFirstTimeKeepOpen == 1;
     }
@@ -4368,7 +4762,7 @@
 
     public void setDataPrivacyUnmaskedForUserInSession(String userID, String domainID, HttpSession session, String remoteAddr) {
         if (session != null) {
-            session.setAttribute("dataPrivacyUnmasked", "1");
+            session.setAttribute("dataPrivacyUnmasked", ENABLE_2FA_LOGIN);
             logsManager.addNewLogFYI("", userID, "Data Privacy: " + resourceBundle.getString("LOGS_DATA_PRIVACY_UNMASKED") + SGMSUtil2.unescapeUserID(userID), remoteAddr, domainID);
         }
     }
@@ -4626,21 +5020,33 @@
                 query.append(cols[i]);
             }
             query.append(" FROM " + tableName + " WHERE ");
+            ArrayList<String> psValues = new ArrayList<String>();
             if (userIDs == null || userIDs.size() == 0) {
                 query.append("user_type_id IS NOT NULL");
             } else {
-                Vector<String> v = this.getValuesInsertedForInClause(new Vector<String>(userIDs), true);
-                for (int j = 0; j < v.size(); ++j) {
+                LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause(new Vector<String>(userIDs));
+                if (inClauseMap.size() > 1) {
+                    query.append("(");
+                }
+                Set<String> keySet = inClauseMap.keySet();
+                int j = 0;
+                for (String questionMarks : keySet) {
                     if (j > 0) {
                         query.append(" OR ");
                     }
-                    query.append("ID IN (" + v.elementAt(j) + ")");
+                    query.append("ID IN (" + questionMarks.substring(1, questionMarks.length()) + ")");
+                    psValues.addAll((Collection)inClauseMap.get(questionMarks));
+                    ++j;
+                }
+                if (inClauseMap.size() > 1) {
+                    query.append(")");
                 }
             }
             if (domainID != null) {
-                query.append(" AND domainID = '" + domainID + "' ");
+                query.append(" AND domainID = ? ");
+                psValues.add(domainID);
             }
-            rs = UserManager.executeQuery(query.toString());
+            rs = UserManager.executeQueryPS(query.toString(), psValues.toArray(new String[psValues.size()]));
             while (rs.next()) {
                 String[] arr = new String[cols.length];
                 for (int i = 0; i < cols.length; ++i) {
@@ -4724,13 +5130,14 @@
         linebreak = cr ? "\n" : ";";
         boolean domainScope = domainId != null && !domainId.isEmpty();
         ResultSet rs = null;
-        String query1 = "SELECT ID, FNAME, STOCK, domainID, usertypeType FROM " + tableName + " WHERE USER_TYPE_ID IS NULL " + (domainScope ? " AND domainID = '" + domainId + "'" : "") + (userScope ? " AND ID <> 'UT000000000000'" : "") + " ORDER BY FNAME ASC";
+        String query1 = "SELECT ID, FNAME, STOCK, domainID, usertypeType FROM " + tableName + " WHERE USER_TYPE_ID IS NULL " + (domainScope ? " AND domainID = ?" : "") + (userScope ? " AND ID <> 'UT000000000000'" : "") + " ORDER BY FNAME ASC";
+        String[] psValues1 = new String[]{domainId};
         String query2 = null;
         List<DomainInfo> domains = DomainManager.getInstance().getAllDomains();
         HashMap<String, String> adminHiddenDomains = new HashMap<String, String>();
         for (DomainInfo info : domains) {
             String domainID = info.getId();
-            if (info.isAdminHidden().equals("1")) {
+            if (info.isAdminHidden().equals(ENABLE_2FA_LOGIN)) {
                 adminHiddenDomains.put(domainID, domainID);
             }
             if (domainScope && (!domainScope || !domainId.equalsIgnoreCase(domainID))) continue;
@@ -4739,21 +5146,27 @@
             break;
         }
         userList.append("END").append(linebreak);
-        query2 = DataBaseConnectionPool.isOracle() ? new StringBuffer("SELECT USER_TYPE_ID , ID , STOCK, domainID, usertypeType ").append("FROM " + tableName + " WHERE USER_TYPE_ID IS NOT NULL ").append(domainScope ? " AND domainID = '" + domainId + "' " : " ").append("ORDER BY USER_TYPE_ID, ID").toString() : new StringBuffer("SELECT USER_TYPE_ID AS UTID, ID AS UID, STOCK AS STOCK, domainID, usertypeType ").append("FROM " + tableName + " WHERE USER_TYPE_ID IS NOT NULL ").append(domainScope ? " AND domainID = '" + domainId + "' " : " ").append(userScope ? " AND USER_TYPE_ID <> 'UT000000000000' AND ID <> '" + userId + "' " : " ").append("ORDER BY UTID, UID").toString();
+        query2 = DataBaseConnectionPool.isOracle() ? new StringBuffer("SELECT USER_TYPE_ID , ID , STOCK, domainID, usertypeType ").append("FROM " + tableName + " WHERE USER_TYPE_ID IS NOT NULL ").append(domainScope ? " AND domainID = '" + domainId + "' " : " ").append("ORDER BY USER_TYPE_ID, ID").toString() : new StringBuffer("SELECT USER_TYPE_ID AS UTID, ID AS UID, STOCK AS STOCK, domainID, usertypeType ").append("FROM " + tableName + " WHERE USER_TYPE_ID IS NOT NULL ").append(domainScope ? " AND domainID = ? " : " ").append(userScope ? " AND USER_TYPE_ID <> 'UT000000000000' AND ID <> ? " : " ").append("ORDER BY UTID, UID").toString();
+        ArrayList<String> psValues = new ArrayList<String>();
+        if (domainScope) {
+            psValues.add(domainId);
+        }
+        if (userScope) {
+            psValues.add(userId);
+        }
         try {
-            String utid;
-            rs = UserManager.executeQuery(query1);
+            rs = domainScope ? UserManager.executeQueryPS(query1, psValues1) : UserManager.executeQuery(query1);
             while (rs.next()) {
                 userList.append(new StringBuffer(UserManager.getValidString(rs, "ID")).append(":").append(UserManager.getValidString(rs, "FNAME")).append(":").append(UserManager.getValidString(rs, "STOCK")).append(":").append(UserManager.getValidString(rs, "domainID")).append(":").append(UserManager.getValidString(rs, "usertypeType")).append(linebreak).toString());
             }
             rs = DataBaseConnectionPool.freeResultSet(rs);
             userList.append("END").append(linebreak);
-            rs = UserManager.executeQuery(query2);
+            rs = UserManager.executeQueryPS(query2, psValues.toArray(new String[psValues.size()]));
             String currentUT = null;
             Map<String, DomainInfo> domainsMap = domainManager.convertListToMap(domains);
             if (DataBaseConnectionPool.isOracle()) {
                 while (rs.next()) {
-                    utid = UserManager.getValidString(rs, "USER_TYPE_ID");
+                    String utid = UserManager.getValidString(rs, "USER_TYPE_ID");
                     if (currentUT == null) {
                         currentUT = new String(utid);
                         userList.append(currentUT).append(linebreak);
@@ -4769,7 +5182,7 @@
                 }
             } else {
                 while (rs.next()) {
-                    utid = UserManager.getValidString(rs, "UTID");
+                    String utid = UserManager.getValidString(rs, "UTID");
                     if (currentUT == null) {
                         currentUT = new String(utid);
                         userList.append(currentUT).append(linebreak);
@@ -4780,11 +5193,11 @@
                     }
                     String dbDomainID = UserManager.getValidString(rs, "domainID");
                     String dbUserID = UserManager.getValidString(rs, "UID");
-                    String isDomainAdminUser = "0";
+                    String isDomainAdminUser = DISABLE_2FA_LOGIN;
                     if ("admin".equals(dbUserID) && dbDomainID.equals(adminHiddenDomains.get(dbDomainID))) continue;
                     DomainInfo domainInfo = domainsMap.get(dbDomainID);
                     if (domainInfo.getAdminUserID() != null && domainInfo.getAdminUserID().equals(dbUserID)) {
-                        isDomainAdminUser = "1";
+                        isDomainAdminUser = ENABLE_2FA_LOGIN;
                     }
                     userList.append(new StringBuffer(dbUserID).append(":").append(UserManager.getValidString(rs, "STOCK")).append(":").append(dbDomainID).append(":").append(isDomainAdminUser).append(":").append(UserManager.getValidString(rs, "usertypeType")).append(linebreak).toString());
                 }
@@ -4793,13 +5206,19 @@
             userList.append("ENDALL");
         }
         catch (SQLException e) {
+            String string;
+            try {
             SGMSUtil.debugOut(e.getErrorCode() + " : " + e.getMessage() + " : State: " + e.getSQLState());
-            String string = userList.toString();
-            return string;
+                string = userList.toString();
+            }
+            catch (Throwable throwable) {
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
-        finally {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+            return string;
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return userList.toString();
     }
 
@@ -4814,11 +5233,12 @@
         LinkedHashMap<String, String[]> htUserTypes = new LinkedHashMap<String, String[]>();
         Vector<String> vecPendingUTs = new Vector<String>();
         Vector<String> vecCompletedUTs = new Vector<String>();
-        String queryUT = "SELECT ID, FNAME, STOCK, domainID, usertypeType FROM " + tableName + " WHERE USER_TYPE_ID IS NULL " + (domainScope ? " AND domainID = '" + domainId + "'" : "") + (userScope ? " AND ID <> 'UT000000000000'" : "") + " ORDER BY domainID, ID ASC";
+        String queryUT = "SELECT ID, FNAME, STOCK, domainID, usertypeType FROM " + tableName + " WHERE USER_TYPE_ID IS NULL " + (domainScope ? " AND domainID = ?" : "") + (userScope ? " AND ID <> 'UT000000000000'" : "") + " ORDER BY domainID, ID ASC";
+        String[] psValues = new String[]{domainId};
         SGMSUtil.debugOut((Object)("UserManager.getAllUsersJSON: Query UT: " + queryUT), 3);
         try {
             SGMSUtil.debugOut((Object)"UserManager.getAllUsersJSON: Contents of domain-usertype map:", 5);
-            rs = UserManager.executeQuery(queryUT);
+            rs = domainScope ? UserManager.executeQueryPS(queryUT, psValues) : UserManager.executeQuery(queryUT);
             while (rs.next()) {
                 String utKey = rs.getString(4) + "-" + rs.getString(1);
                 SGMSUtil.debugOut((Object)("UserManager.getAllUsersJSON: Key: " + utKey), 5);
@@ -4838,7 +5258,14 @@
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
         rs = DataBaseConnectionPool.freeResultSet(rs);
-        String queryU = "SELECT USER_TYPE_ID AS UTID, ID AS UID, STOCK AS STOCK, domainID, usertypeType, fName, lName, email1 FROM " + tableName + " WHERE USER_TYPE_ID IS NOT NULL " + (domainScope ? " AND domainID = '" + domainId + "' " : " ") + (userScope ? " AND USER_TYPE_ID <> 'UT000000000000' AND ID <> '" + userId + "' " : " ") + "ORDER BY domainID, UTID, fName, lName, UID";
+        String queryU = "SELECT USER_TYPE_ID AS UTID, ID AS UID, STOCK AS STOCK, domainID, usertypeType, fName, lName, email1 FROM " + tableName + " WHERE USER_TYPE_ID IS NOT NULL " + (domainScope ? " AND domainID = ? " : " ") + (userScope ? " AND USER_TYPE_ID <> 'UT000000000000' AND ID <> ? " : " ") + "ORDER BY domainID, UTID, fName, lName, UID";
+        ArrayList<String> psValuesU = new ArrayList<String>();
+        if (domainScope) {
+            psValuesU.add(domainId);
+        }
+        if (userScope) {
+            psValuesU.add(userId);
+        }
         SGMSUtil.debugOut((Object)("UserManager.getAllUsersJSON: Query U: " + queryU), 3);
         try {
             out.println("{");
@@ -4861,7 +5288,7 @@
             ResponseCounterObj objCtr = new ResponseCounterObj();
             ResponseUserObj objUsr = new ResponseUserObj();
             SGMSUtil.debugOut((Object)("UserManager.getAllUsersJSON: Counters (initially): " + objCtr.dCtr + "/" + objCtr.utCtr + "/" + objCtr.uCtr), 5);
-            rs = UserManager.executeQuery(queryU);
+            rs = UserManager.executeQueryPS(queryU, psValuesU.toArray(new String[psValuesU.size()]));
             while (rs.next()) {
                 objUsr.utID = rs.getString(1);
                 objUsr.uID = rs.getString(2);
@@ -5036,12 +5463,12 @@
         }
         if (null != objUsr.uID && !objUsr.uID.isEmpty()) {
             SGMSUtil.debugOut((Object)("UserManager.processUserJSON: uCtr (for comma): " + objCtr.dCtr + "/" + objCtr.utCtr + "/" + objCtr.uCtr), 5);
-            String isDomainAdmin = "0";
-            if ("admin".equals(objUsr.uID) && di.isAdminHidden().equals("1")) {
+            String isDomainAdmin = DISABLE_2FA_LOGIN;
+            if ("admin".equals(objUsr.uID) && di.isAdminHidden().equals(ENABLE_2FA_LOGIN)) {
                 return;
             }
             if (di.getAdminUserID() != null && di.getAdminUserID().equals(objUsr.uID)) {
-                isDomainAdmin = "1";
+                isDomainAdmin = ENABLE_2FA_LOGIN;
             }
             if (objCtr.uCtr > 0) {
                 out.println(",");
@@ -5095,7 +5522,7 @@
     public void syncPasswordWithAppliance(HttpServletRequest req, HttpServletResponse res, String newPassword) {
         RequestDispatcher dispatcher;
         String reversibleHashedStr = req.getParameter("reversibleHashed");
-        boolean isReversibleHashed = reversibleHashedStr == null || !reversibleHashedStr.equals("0");
+        boolean isReversibleHashed = reversibleHashedStr == null || !reversibleHashedStr.equals(DISABLE_2FA_LOGIN);
         String oldPW = req.getParameter("clientHash2");
         if (isReversibleHashed && null != oldPW) {
             newPassword = AuthenticateUtil.reverseChangePasswordHash(newPassword, oldPW, oldPW.length());
@@ -5115,6 +5542,19 @@
         }
     }
 
+    public void sync2FAConfigWithAppliance(HttpServletRequest req, HttpServletResponse res) {
+        RequestDispatcher dispatcher;
+        ServletContext context = req.getServletContext().getContext("/appliance");
+        if (null != context && null != (dispatcher = context.getRequestDispatcher("/autoApplianceLogin"))) {
+            try {
+                dispatcher.include(req, res);
+            }
+            catch (IOException | ServletException e) {
+                SGMSUtil.debugOut((Object)("EditUser:SyncPasswordWithAppliance(): Error while forwarding 2FA Config request to /appliance.\n" + e.getMessage()), 3);
+            }
+        }
+    }
+
     public boolean[] getControlsAsBooleanArray(String controlStr) {
         boolean[] controls = new boolean[18];
         for (int i = 0; i < controls.length; ++i) {
@@ -5128,7 +5568,7 @@
             StringTokenizer st = new StringTokenizer(controlStr, ":");
             int ctr = 0;
             while (st.hasMoreTokens()) {
-                if (st.nextToken().trim().equals("1")) {
+                if (st.nextToken().trim().equals(ENABLE_2FA_LOGIN)) {
                     controls[ctr] = true;
                 }
                 ++ctr;
@@ -5152,7 +5592,7 @@
         ArrayList<String> lockedUserSuperAdmin = new ArrayList<String>();
         Vector<String[]> lockedUsers = this.getLockedUsers(null, domainID, isSuperAdmin);
         SGMSUtil su = new SGMSUtil(pool);
-        String userLockoutMinutes = su.getCosmoParam("UserLockoutMinutes", "0");
+        String userLockoutMinutes = su.getCosmoParam("UserLockoutMinutes", DISABLE_2FA_LOGIN);
         Long lockoutMinutes = 0L;
         try {
             lockoutMinutes = Long.valueOf(userLockoutMinutes.trim());
@@ -5162,7 +5602,7 @@
         }
         for (String[] user2 : lockedUsers) {
             boolean isLockedUserSuperAdmin = this.isUserSuperAdmin(user2[0], user2[5]);
-            if ("2".equals(user2[6]) || isLockedUserSuperAdmin) {
+            if (CONFIRM_FIRST_2FA_LOGIN.equals(user2[6]) || isLockedUserSuperAdmin) {
                 long currLockoutMinutes;
                 long currentTimeUTC = SGMSUtil.getDateInTimeZone(new Date(), null, "UTC").getTime();
                 long last_updated = UserManager.fromSqlDate(user2[7]).getTime();
@@ -5183,7 +5623,7 @@
             disabled.add(user2[6]);
             lastUpdated.add(user2[7]);
             lastLoginIP.add(user2[8]);
-            lockedUserSuperAdmin.add(isLockedUserSuperAdmin ? "1" : "0");
+            lockedUserSuperAdmin.add(isLockedUserSuperAdmin ? ENABLE_2FA_LOGIN : DISABLE_2FA_LOGIN);
         }
         String commaID = "\"" + String.join((CharSequence)"\",\"", id.toArray(new String[id.size()])) + "\"";
         String commaType = "\"" + String.join((CharSequence)"\",\"", user_type.toArray(new String[user_type.size()])) + "\"";
@@ -5218,9 +5658,10 @@
         if (ipAddr == null || ipAddr.trim().length() == 0) {
             return;
         }
-        String query = "UPDATE " + tableName + " SET lastLoginIP = " + pool.delimitDBColumnValue(ipAddr) + " WHERE ID = " + pool.delimitDBColumnValue(user2) + " AND domainID = " + pool.delimitDBColumnValue(domainId);
+        String query = "UPDATE " + tableName + " SET lastLoginIP = ? WHERE ID = ? AND domainID = ?";
+        String[] psValues = new String[]{ipAddr, user2, domainId};
         try {
-            this.executeUpdate(query);
+            this.executeUpdatePS(query, psValues);
         }
         catch (SQLException sqle) {
             SGMSUtil.debugOut("SQLException: UserManager.setLastLoginIP(): " + sqle.getMessage());
@@ -5243,22 +5684,34 @@
                 query.append(cols[i]);
             }
             query.append(" FROM " + tableName + " WHERE ");
+            ArrayList<String> psValues = new ArrayList<String>();
             if (vecIDs == null || vecIDs.size() == 0) {
                 query.append("user_type_id IS NOT NULL");
             } else {
-                Vector<String> v = this.getValuesInsertedForInClause(vecIDs, true);
-                for (int j = 0; j < v.size(); ++j) {
+                LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause(vecIDs);
+                if (inClauseMap.size() > 1) {
+                    query.append("(");
+                }
+                Set<String> keySet = inClauseMap.keySet();
+                int j = 0;
+                for (String questionMarks : keySet) {
                     if (j > 0) {
                         query.append(" OR ");
                     }
-                    query.append("ID IN (" + v.elementAt(j) + ")");
+                    query.append("ID IN (" + questionMarks.substring(1, questionMarks.length()) + ")");
+                    psValues.addAll((Collection)inClauseMap.get(questionMarks));
+                    ++j;
+                }
+                if (inClauseMap.size() > 1) {
+                    query.append(")");
                 }
             }
             query.append(" AND DISABLED IN (2, 3)");
             if (domainID != null && !isSuperAdmin) {
-                query.append(" AND domainID = '" + domainID + "' ");
+                query.append(" AND domainID = ?");
+                psValues.add(domainID);
             }
-            rs = UserManager.executeQuery(query.toString());
+            rs = UserManager.executeQueryPS(query.toString(), psValues.toArray(new String[psValues.size()]));
             while (rs.next()) {
                 String[] arr = new String[cols.length];
                 for (int i = 0; i < cols.length; ++i) {
@@ -5299,6 +5752,46 @@
         return false;
     }
 
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    public User keepLogin(String token) {
+        ResultSet rs;
+        User user2;
+        block4: {
+            StringBuffer query = new StringBuffer("SELECT ID, DOMAINID, LAST_LOGIN FROM " + tableName + " WHERE  KEEP_LOG_IN = ?");
+            String[] psValues = new String[]{token};
+            user2 = null;
+            rs = null;
+            try {
+                SGMSUtil.debugOut((Object)("UserManager.isUserAdministrator() query " + query), 2);
+                rs = UserManager.executeQueryPS(query.toString(), psValues);
+                if (!rs.next()) break block4;
+                String userID = rs.getString(0);
+                String domainID = rs.getString(1);
+                java.sql.Date lastLogin = rs.getDate(2);
+                Date currentLogin = new Date();
+                long difference_In_Time = currentLogin.getTime() - lastLogin.getTime();
+                long difference_In_Days = TimeUnit.MILLISECONDS.toDays(difference_In_Time) % 365L;
+                if (userID == null || difference_In_Days >= 2L) break block4;
+                user2 = new User.UserBuilder(userID, domainID).createUser();
+            }
+            catch (SQLException e) {
+                try {
+                    SGMSUtil.debugOut(e.getErrorCode() + " : " + e.getMessage() + " : State: " + e.getSQLState());
+                    SGMSUtil.printStackTrace(e);
+                }
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+            }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+        return user2;
+    }
+
     private static class ResponseUserObj {
         protected String dID = null;
         protected String utID = null;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/VersionManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/VersionManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/VersionManager.java	2023-09-08 15:13:13.996801892 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/VersionManager.java	2023-09-08 15:14:40.902368633 -0700
@@ -130,14 +130,15 @@
             }
             ResultSet rs = null;
             try {
-                query = "SELECT latestversion, ip FROM " + tableName + " WHERE component=" + pool.delimitDBColumnValue(componenttype);
-                rs = VersionManager.executeQuery(query, true);
+                query = "SELECT latestversion, ip FROM " + tableName + " WHERE component=?";
+                rs = VersionManager.executeQueryPS(query, new String[]{componenttype}, true);
                 while (oldversion.length() < 3 && rs.next()) {
                     oldversion = VersionManager.getValidString(rs, "latestversion");
                 }
                 if (oldversion == null || oldversion.equals("")) {
-                    query = "INSERT INTO " + tableName + " (LATESTVERSION, READMEURL, FILENAME, RELEASEDATE, IP, COMPONENT, CURRENTVERSION, FILESIZE) VALUES (" + pool.delimitDBColumnValue(version) + "," + pool.delimitDBColumnValue(readmeurl) + "," + pool.delimitDBColumnValue(filename) + "," + pool.delimitDBColumnValue(releasedate) + ",''," + pool.delimitDBColumnValue(componenttype) + "," + pool.delimitDBColumnValue(CommonConstants.version) + "," + pool.delimitDBColumnValue(filesize) + ")";
-                    this.executeUpdate(query);
+                    query = "INSERT INTO " + tableName + " (LATESTVERSION, READMEURL, FILENAME, RELEASEDATE, IP, COMPONENT, CURRENTVERSION, FILESIZE) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
+                    String[] componetValue = new String[]{version, readmeurl, filename, releasedate, "", componenttype, CommonConstants.version, filesize};
+                    this.executeUpdatePS(query, componetValue);
                     tableColValues.addElement(new String[]{componenttype, filesize, releaseDateForEmail, readmeurl != null && readmeurl.length() > 0 ? "<a href=" + readmeurl + ">" + readmeurl + "</a>" : ""});
                 }
                 oldversion = "";
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/ViewsManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/ViewsManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/ViewsManager.java	2023-09-08 15:13:13.962800577 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/ViewsManager.java	2023-09-08 15:14:40.864416016 -0700
@@ -358,17 +358,17 @@
         if (out == null) {
             return;
         }
-        this.sendQueryResultToAppletSingleLine(out, query);
+        this.sendQueryResultToAppletSingleLinePS(out, query, new String[0]);
     }
 
     public void getCategoryByDomain(String sessionID, HttpServletResponse res, String domainID) throws IOException {
-        String query = new StringBuffer("SELECT NAME, DISPLAY_NAME, DEFAULT_VALUE FROM ").append(customGroupTable).append(" WHERE domainID = '").append(domainID).append("' ORDER BY DISPLAY_NAME ASC").toString();
+        String query = new StringBuffer("SELECT NAME, DISPLAY_NAME, DEFAULT_VALUE FROM ").append(customGroupTable).append(" WHERE domainID = ? ORDER BY DISPLAY_NAME ASC").toString();
         PrintWriter out = null;
         out = this.setupAppletResponse(sessionID, res);
         if (out == null) {
             return;
         }
-        this.sendQueryResultToAppletSingleLine(out, query);
+        this.sendQueryResultToAppletSingleLinePS(out, query, new String[]{domainID});
     }
 
     private Set<String[]> getCustomGroupByDomain(PrintWriter out, String domainID) {
@@ -598,7 +598,7 @@
         }
         String query = new StringBuffer("SELECT ID, VIEW_NAME, VISIBLE_TO_ALL, LEVEL_1_ID, LEVEL_1_OPERATOR, LEVEL_1_CONDITION, LEVEL_2_ID, LEVEL_2_OPERATOR, LEVEL_2_CONDITION, LEVEL_3_ID, LEVEL_3_OPERATOR, LEVEL_3_CONDITION, LEVEL_4_ID, LEVEL_4_OPERATOR, LEVEL_4_CONDITION, LEVEL_5_ID, LEVEL_5_OPERATOR, LEVEL_5_CONDITION, LEVEL_6_ID, LEVEL_6_OPERATOR, LEVEL_6_CONDITION, LEVEL_7_ID, LEVEL_7_OPERATOR, LEVEL_7_CONDITION, domainID FROM " + tableName).toString();
         query = this.getWhereClause(domainID, userID, query, sessionID);
-        this.sendQueryResultToAppletSingleLine(out, query);
+        this.sendQueryResultToAppletSingleLinePS(out, query, null);
     }
 
     private String getWhereClause(String domainID, String userID, String query, String sessionID) {
@@ -682,14 +682,14 @@
             return;
         }
         StringBuffer sqlquery = new StringBuffer("SELECT ID, VIEW_NAME FROM ").append(tableName).append(" WHERE ");
-        sqlquery.append("domainID='").append(domainID).append("'").toString();
+        sqlquery.append("domainID=?").toString();
         UserManager um = (UserManager)UserManager.getReference();
         boolean isAdmin = um.isUserAdministrator(sessionID, userID, domainID);
         if (!isAdmin) {
             sqlquery.append(" AND VISIBLE_TO_ALL = '1'");
         }
         SGMSUtil.debugOut("appletGetDefaultViewsList : " + sqlquery.toString());
-        this.sendQueryResultToAppletSingleLine(out, sqlquery.toString());
+        this.sendQueryResultToAppletSingleLinePS(out, sqlquery.toString(), new String[]{domainID});
     }
 
     public void appletGetSchedulesList(String sessionID, HttpServletResponse res, String domainID, String userID) throws IOException {
@@ -700,14 +700,14 @@
         }
         String scheduleTable = DataBaseConnectionPool.getTablePrefix() + "SCHEDULES";
         StringBuffer sqlquery = new StringBuffer("SELECT  SCHEDULEID, NAME FROM ").append(scheduleTable).append(" WHERE ");
-        sqlquery.append("domainID='").append(domainID).append("'").toString();
+        sqlquery.append("domainID=?").toString();
         UserManager um = (UserManager)UserManager.getReference();
         boolean isAdmin = um.isUserAdministrator(sessionID, userID, domainID);
         if (!isAdmin) {
             sqlquery.append(" AND VISIBLETOALL = '1'");
         }
         SGMSUtil.debugOut("appletGetSchedulesList" + sqlquery.toString());
-        this.sendQueryResultToAppletSingleLine(out, sqlquery.toString());
+        this.sendQueryResultToAppletSingleLinePS(out, sqlquery.toString(), new String[]{domainID});
     }
 
     public void appletGetSchedulesGroupList(String sessionID, HttpServletResponse res, String domainID, String userID) throws IOException {
@@ -718,14 +718,14 @@
             return;
         }
         StringBuffer sqlquery = new StringBuffer("SELECT SCHEDULEGROUPID, NAME FROM ").append(scheduleGroupTable).append(" WHERE ");
-        sqlquery.append("domainID='").append(domainID).append("'").toString();
+        sqlquery.append("domainID=?").toString();
         UserManager um = (UserManager)UserManager.getReference();
         boolean isAdmin = um.isUserAdministrator(sessionID, userID, domainID);
         if (!isAdmin) {
             sqlquery.append(" AND VISIBLETOALL = '1'");
         }
         SGMSUtil.debugOut("appletGetSchedulesGroupList" + sqlquery.toString());
-        this.sendQueryResultToAppletSingleLine(out, sqlquery.toString());
+        this.sendQueryResultToAppletSingleLinePS(out, sqlquery.toString(), new String[]{domainID});
     }
 
     public void deleteView(String sessionID, String viewID, HttpServletResponse res, String domainID) throws IOException {
@@ -897,8 +897,8 @@
         if (out == null) {
             return;
         }
-        String query = "SELECT VISIBLE_TO_ALL FROM " + tableName + " WHERE ID = '" + viewID + "'";
-        this.sendQueryResultToApplet(out, query);
+        String query = "SELECT VISIBLE_TO_ALL FROM " + tableName + " WHERE ID = ?";
+        this.sendQueryResultToApplet(out, query, new String[]{viewID});
     }
 
     /*
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/manager/VpnManager.java decompiled-9.3.9330/com/sonicwall/sgms/manager/VpnManager.java
--- decompiled-9.3.9320/com/sonicwall/sgms/manager/VpnManager.java	2023-09-08 15:13:14.010802434 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/manager/VpnManager.java	2023-09-08 15:14:40.918348683 -0700
@@ -48,13 +48,16 @@
 import java.sql.SQLException;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collection;
 import java.util.HashMap;
 import java.util.Hashtable;
 import java.util.Iterator;
+import java.util.LinkedHashMap;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
 import java.util.Objects;
+import java.util.Set;
 import java.util.StringTokenizer;
 import java.util.Vector;
 import javax.servlet.http.HttpServletRequest;
@@ -333,12 +336,12 @@
         LinkedList<String[]> saList = new LinkedList<String[]>();
         String sortColName = "";
         sortColName = tableSortCol == 2 ? "ipsecSaDisabled" : (tableSortCol == 4 ? "ipsecGwAddr" : "ipsecName");
-        qry.append("SELECT policy_id, ipsecName, ipsecSaDisabled, ipsecGwAddr,remoteUnit, ipsecP1DHGrp,ipsecAlgIdPh1,ipsecP2DHGrp,ipsecAlgo,ipsecInSPI,ipsecOutSPI, ipsecESPKey, ipsecAHKey,ipsecPh2CryptAlg, ipsecPh2AuthAlg, ipsecPh1CryptAlg, ipsecPh1AuthAlg,ipsecP1Exch,ipsecPh2Protocol FROM " + tableName + "  WHERE ID = " + pool.delimitDBColumnValue(node_id));
+        qry.append("SELECT policy_id, ipsecName, ipsecSaDisabled, ipsecGwAddr,remoteUnit, ipsecP1DHGrp,ipsecAlgIdPh1,ipsecP2DHGrp,ipsecAlgo,ipsecInSPI,ipsecOutSPI, ipsecESPKey, ipsecAHKey,ipsecPh2CryptAlg, ipsecPh2AuthAlg, ipsecPh1CryptAlg, ipsecPh1AuthAlg,ipsecP1Exch,ipsecPh2Protocol FROM " + tableName + "  WHERE ID = ? ");
         qry.append(" ORDER BY " + sortColName + " " + (tableSortInverted == 0 ? " asc" : " desc"));
         SGMSUtil.debugOut((Object)("Query to get list of SAs: " + qry.toString()), 3);
         ResultSet rs = null;
         try {
-            rs = VpnManager.executeQuery(qry.toString(), true);
+            rs = VpnManager.executeQueryPS(qry.toString(), new String[]{node_id});
             rs.last();
             int count = rs.getRow();
             rs.beforeFirst();
@@ -484,9 +487,9 @@
         Vector<String> sanames = new Vector<String>();
         ResultSet rs = null;
         try {
-            String query = "SELECT ipsecName FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ID = " + pool.delimitDBColumnValue(unitid) + this.getVpnSQLFilter(enhanced);
+            String query = "SELECT ipsecName FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ID = ?" + this.getVpnSQLFilter(enhanced);
             SGMSUtil.debugOut("VpnManager: getCurrentSaNames: colQuery:\n" + query, 2, ETypeStore.DBG_VPN);
-            rs = VpnManager.executeQuery(query);
+            rs = VpnManager.executeQueryPS(query, new String[]{unitid});
             while (rs.next()) {
                 String name = VpnManager.getValidString(rs, 1);
                 if (name == null || name.equals("")) continue;
@@ -847,9 +850,9 @@
                 }
             } else {
                 rs = null;
-                String query = "SELECT addrObjId, addrObjIdDisp, addrObjProperties, addrObjIpVersion, addrObjType FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_ADDR_OBJECTS WHERE ID = " + pool.delimitDBColumnValue(nodeid);
+                String query = "SELECT addrObjId, addrObjIdDisp, addrObjProperties, addrObjIpVersion, addrObjType FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_ADDR_OBJECTS WHERE ID = ?";
                 SGMSUtil.debugOut("VpnManager: getAddressObjectsForNodeID: colQuery:\n" + query, 3, ETypeStore.DBG_VPN);
-                rs = VpnManager.executeQuery(query);
+                rs = VpnManager.executeQueryPS(query, new String[]{nodeid});
                 while (rs.next()) {
                     String id = "";
                     String idDisp = "";
@@ -875,9 +878,9 @@
                     ipVersions = ipVersions + ipVersion + ",";
                     types = types + type + ",";
                 }
-                query = "SELECT addro_atomToGrp, addro_grpToGrp FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_ADDR_GROUPS WHERE ID = " + pool.delimitDBColumnValue(nodeid);
+                query = "SELECT addro_atomToGrp, addro_grpToGrp FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_ADDR_GROUPS WHERE ID = ?";
                 SGMSUtil.debugOut("VpnManager: getAddressObjectsForNodeID: colQuery:\n" + query, 3, ETypeStore.DBG_VPN);
-                rs = VpnManager.executeQuery(query);
+                rs = VpnManager.executeQueryPS(query, new String[]{nodeid});
                 while (rs.next()) {
                     String atomToGrp = "";
                     String grpToGrp = "";
@@ -1008,9 +1011,9 @@
         Vector<String> policyIDVector = new Vector<String>();
         ResultSet rs = null;
         try {
-            String query = "SELECT POLICY_ID FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ID = " + pool.delimitDBColumnValue(unitid);
+            String query = "SELECT POLICY_ID FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ID = ?";
             SGMSUtil.debugOut("VpnManager: getCurrentPolicyList: colQuery:\n" + query, 2, ETypeStore.DBG_VPN);
-            rs = VpnManager.executeQuery(query);
+            rs = VpnManager.executeQueryPS(query, new String[]{unitid});
             while (rs.next()) {
                 String policyID = VpnManager.getValidString(rs, 1);
                 if (policyID == null || policyID.equals("")) continue;
@@ -1117,23 +1120,31 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static boolean isFullMeshNetwork(String sa_name, String node_id, String viewUserId, String viewUserDomainId) {
-        String query = "SELECT meshNetwork from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID=" + pool.delimitDBColumnValue(node_id) + " OR ID= " + pool.delimitDBColumnValue(node_id + ":" + viewUserId + "@" + viewUserDomainId) + ") AND ipsecName=" + pool.delimitDBColumnValue(sa_name);
+        String meshNetwork;
+        ResultSet rs;
+        block4: {
+            String query = "SELECT meshNetwork from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID= ? OR ID= ?) AND ipsecName = ?";
         SGMSUtil.debugOut("VpnManager.isFullMeshNetwork(): Select query is: " + query, 3, ETypeStore.DBG_VPN);
-        ResultSet rs = null;
-        String meshNetwork = "0";
+            rs = null;
+            meshNetwork = "0";
         try {
-            rs = VpnManager.executeQuery(query);
-            if (rs.next()) {
+                rs = VpnManager.executeQueryPS(query, new String[]{node_id, node_id + ":" + viewUserId + "@" + viewUserDomainId, sa_name});
+                if (!rs.next()) break block4;
                 meshNetwork = VpnManager.getValidString(rs, "meshNetwork");
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut((Object)("VpnManager isFullMeshNetwork(): SQLExcepiton occured while retrieving mesh network flag: " + query + sqe.getMessage()), 1);
             log.log("VpnManager", "isFullMeshNetwork", query + "\n" + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return "1".equals(meshNetwork);
     }
 
@@ -1141,21 +1152,29 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public String getVpnDhcpTunnel(String node_id) {
-        String query = "SELECT vpnDhcpTunnel FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE ID = " + pool.delimitDBColumnValue(node_id.toLowerCase());
-        String result = null;
-        ResultSet rs = null;
+        ResultSet rs;
+        String result;
+        block4: {
+            String query = "SELECT vpnDhcpTunnel FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE ID = ?";
+            result = null;
+            rs = null;
         try {
-            rs = VpnManager.executeQuery(query);
-            if (rs.next()) {
+                rs = VpnManager.executeQueryPS(query, new String[]{node_id.toLowerCase()});
+                if (!rs.next()) break block4;
                 result = VpnManager.getValidString(rs, 1);
             }
-        }
         catch (SQLException e) {
+                try {
             SGMSUtil.debugOut("ParamsManager.getVpnDhcpTunnel(), query " + query + e.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
         }
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+            }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return result;
     }
 
@@ -1184,14 +1203,18 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static boolean isIkeSa(String sa_name, String remoteUnit, String node_id) {
-        String query = "SELECT ipsecInSPI, ipsecOutSPI from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ID=" + pool.delimitDBColumnValue(node_id) + " AND ipsecName=" + pool.delimitDBColumnValue(sa_name);
+        String query = "SELECT ipsecInSPI, ipsecOutSPI from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ID = ? AND ipsecName = ?";
+        String[] values = null;
         if (remoteUnit.length() > 0) {
-            query = query + " and remoteUnit=" + pool.delimitDBColumnValue(remoteUnit);
+            query = query + " and remoteUnit = ?";
+            values = new String[]{node_id, sa_name, remoteUnit};
+        } else {
+            values = new String[]{node_id, sa_name};
         }
         SGMSUtil.debugOut("VpnManager.isIkeSa(): query = " + query, 3, ETypeStore.DBG_VPN);
         ResultSet rs = null;
         try {
-            rs = VpnManager.executeQuery(query);
+            rs = VpnManager.executeQueryPS(query, values);
             if (rs.next()) {
                 String inspi = VpnManager.getValidString(rs, "ipsecInSPI");
                 String outspi = VpnManager.getValidString(rs, "ipsecOutSPI");
@@ -1232,14 +1255,18 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static boolean isSWCertModeSA(String sa_name, String remoteUnit, String node_id) {
-        String query = "SELECT ipsecInSPI, ipsecOutSPI from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ID=" + pool.delimitDBColumnValue(node_id) + " AND ipsecName=" + pool.delimitDBColumnValue(sa_name);
+        String query = "SELECT ipsecInSPI, ipsecOutSPI from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ID = ? AND ipsecName=?";
+        String[] values = null;
         if (remoteUnit.length() > 0) {
-            query = query + " and remoteUnit=" + pool.delimitDBColumnValue(remoteUnit);
+            query = query + " and remoteUnit = ?";
+            values = new String[]{node_id, sa_name, remoteUnit};
+        } else {
+            values = new String[]{node_id, sa_name};
         }
         SGMSUtil.debugOut("VpnManager.isSWCertModeSA(): query = " + query, 3, ETypeStore.DBG_VPN);
         ResultSet rs = null;
         try {
-            rs = VpnManager.executeQuery(query);
+            rs = VpnManager.executeQueryPS(query, values);
             if (rs.next()) {
                 String inspi = VpnManager.getValidString(rs, "ipsecInSPI");
                 String outspi = VpnManager.getValidString(rs, "ipsecOutSPI");
@@ -1272,23 +1299,31 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static String getVpnPolicyType(String sa_name, String node_id, String viewUserId, String viewUserDomainId) {
-        String query = "SELECT vpnPolicyType from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID=" + pool.delimitDBColumnValue(node_id) + " OR ID= " + pool.delimitDBColumnValue(node_id + ":" + viewUserId + "@" + viewUserDomainId) + ") AND ipsecName=" + pool.delimitDBColumnValue(sa_name);
+        String policyType;
+        ResultSet rs;
+        block4: {
+            String query = "SELECT vpnPolicyType from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID = ? OR ID = ?) AND ipsecName = ?";
         SGMSUtil.debugOut("VpnManager.getVpnPolicyType(): Select query is: " + query, 3, ETypeStore.DBG_VPN);
-        ResultSet rs = null;
-        String policyType = null;
+            rs = null;
+            policyType = null;
         try {
-            rs = VpnManager.executeQuery(query);
-            if (rs.next()) {
+                rs = VpnManager.executeQueryPS(query, new String[]{node_id, node_id + ":" + viewUserId + "@" + viewUserDomainId, sa_name});
+                if (!rs.next()) break block4;
                 policyType = VpnManager.getValidString(rs, "vpnPolicyType");
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut((Object)("VpnManager getVpnPolicyType(): SQLExcepiton occured while retrieving VPN Policy type: " + query + sqe.getMessage()), 1);
             log.log("VpnManager", "getVpnPolicyType", query + "\n" + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return policyType;
     }
 
@@ -1305,23 +1340,31 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static String getVpnIpsecVersion(String sa_name, String node_id, String viewUserId, String viewUserDomainId) {
-        String query = "SELECT ipsecVersion from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID=" + pool.delimitDBColumnValue(node_id) + " OR ID= " + pool.delimitDBColumnValue(node_id + ":" + viewUserId + "@" + viewUserDomainId) + ") AND ipsecName=" + pool.delimitDBColumnValue(sa_name);
+        String ipVersion;
+        ResultSet rs;
+        block4: {
+            String query = "SELECT ipsecVersion from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID= ? OR ID= ?) AND ipsecName=?";
         SGMSUtil.debugOut("VpnManager.getVpnIpsecVersion(): Select query is: " + query, 3, ETypeStore.DBG_VPN);
-        ResultSet rs = null;
-        String ipVersion = null;
+            rs = null;
+            ipVersion = null;
         try {
-            rs = VpnManager.executeQuery(query);
-            if (rs.next()) {
+                rs = VpnManager.executeQueryPS(query, new String[]{node_id, node_id + ":" + viewUserId + "@" + viewUserDomainId, sa_name});
+                if (!rs.next()) break block4;
                 ipVersion = VpnManager.getValidString(rs, "ipsecVersion");
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut((Object)("VpnManager getVpnIpsecVersion(): SQLExcepiton occured while retrieving VPN Policy IP Version: " + query + sqe.getMessage()), 1);
             log.log("VpnManager", "getVpnIpsecVersion", query + "\n" + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
         }
+                rs = DataBaseConnectionPool.freeResultSet(rs);
+            }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return ipVersion;
     }
 
@@ -1338,24 +1381,32 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static int getVpnMaxIpsecIndex(String node_id, String viewUserId, String viewUserDomainId) {
-        String query = "SELECT MAX(ipsecIndex) from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID=" + pool.delimitDBColumnValue(node_id) + " OR ID= " + pool.delimitDBColumnValue(node_id + ":" + viewUserId + "@" + viewUserDomainId) + ")";
+        String ipsecIndex;
+        ResultSet rs;
+        block4: {
+            String query = "SELECT MAX(ipsecIndex) from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID= ? OR ID= ?)";
         SGMSUtil.debugOut("VpnManager.getVpnIpsecVersion(): Select query is: " + query, 3, ETypeStore.DBG_VPN);
-        ResultSet rs = null;
-        String ipsecIndex = "0";
+            rs = null;
+            ipsecIndex = "0";
         try {
-            rs = VpnManager.executeQuery(query);
-            if (rs.next()) {
+                rs = VpnManager.executeQueryPS(query, new String[]{node_id, node_id + ":" + viewUserId + "@" + viewUserDomainId});
+                if (!rs.next()) break block4;
                 ipsecIndex = VpnManager.getValidString(rs, 1);
             }
-        }
         catch (SQLException sqe) {
+                try {
             ipsecIndex = "0";
             SGMSUtil.debugOut((Object)("VpnManager getVpnIpsecVersion(): SQLExcepiton occured while retrieving VPN Policy IP Version: " + query + sqe.getMessage()), 1);
             log.log("VpnManager", "getVpnIpsecVersion", query + "\n" + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         ipsecIndex = ipsecIndex.isEmpty() ? "0" : ipsecIndex;
         return Integer.valueOf(ipsecIndex);
     }
@@ -1382,14 +1433,18 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static String getVpnConfigurePageForSa(String sa_name, String remoteUnit, String node_id, String viewuserid, String viewuserdomainid) {
-        String query = "SELECT ipsecInSPI, ipsecOutSPI, ipsecIsAPClient, ipsecIsAPServer from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID=" + pool.delimitDBColumnValue(node_id) + " OR ID= " + pool.delimitDBColumnValue(node_id + ":" + viewuserid + "@" + viewuserdomainid) + ") AND ipsecName=" + pool.delimitDBColumnValue(sa_name);
+        String query = "SELECT ipsecInSPI, ipsecOutSPI, ipsecIsAPClient, ipsecIsAPServer from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE (ID= ? OR ID= ? ) AND ipsecName= ?";
+        String[] values = null;
         if (remoteUnit.length() > 0) {
-            query = query + " and remoteUnit=" + pool.delimitDBColumnValue(remoteUnit);
+            query = query + " and remoteUnit= ?";
+            values = new String[]{node_id, node_id + ":" + viewuserid + "@" + viewuserdomainid, sa_name, remoteUnit};
+        } else {
+            values = new String[]{node_id, node_id + ":" + viewuserid + "@" + viewuserdomainid, sa_name};
         }
         SGMSUtil.debugOut("VpnManager.getVpnConfigurePageForSa(): query = " + query, 2, ETypeStore.DBG_VPN);
         ResultSet rs = null;
         try {
-            rs = VpnManager.executeQuery(query);
+            rs = VpnManager.executeQueryPS(query, values);
             if (rs.next()) {
                 String inspi = VpnManager.getValidString(rs, "ipsecInSPI");
                 String outspi = VpnManager.getValidString(rs, "ipsecOutSPI");
@@ -1493,24 +1548,32 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static int getMaxSAs(String unitid) {
-        int maxSAs = 0;
+        ResultSet rs;
+        int maxSAs;
+        block4: {
+            maxSAs = 0;
         String result = "";
-        String query = "SELECT maxSAs FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS1 WHERE ID=" + pool.delimitDBColumnValue(unitid);
+            String query = "SELECT maxSAs FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS1 WHERE ID = ?";
         SGMSUtil.debugOut("VpnManager.getMaxSAs (maxSAs) query = " + query, 2, ETypeStore.DBG_VPN);
-        ResultSet rs = null;
+            rs = null;
         try {
-            rs = VpnManager.executeQuery(query);
-            if (rs.next() && (result = VpnManager.getValidString(rs, "maxSAs")) != null && !result.equals("")) {
+                rs = VpnManager.executeQueryPS(query, new String[]{unitid});
+                if (!rs.next() || (result = VpnManager.getValidString(rs, "maxSAs")) == null || result.equals("")) break block4;
                 maxSAs = Integer.parseInt(result);
             }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut((Object)("VpnManager getMaxSAs: " + query + sqe.getMessage()), 1);
             log.log("VpnManager", "getMaxSAs", query + "\n" + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return maxSAs;
     }
 
@@ -1551,49 +1614,69 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public int getRemainingSAsCount(String unitid) {
-        int maxSAs = 0;
-        int currentSAs = 0;
-        int currentTasks = 0;
+        ResultSet rs;
+        String query;
+        int currentTasks;
+        int currentSAs;
+        int maxSAs;
+        block6: {
+            maxSAs = 0;
+            currentSAs = 0;
+            currentTasks = 0;
         String result = "";
-        String query = "SELECT maxSAs FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS1 WHERE ID=" + pool.delimitDBColumnValue(unitid);
+            query = "SELECT maxSAs FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS1 WHERE ID=" + pool.delimitDBColumnValue(unitid);
         SGMSUtil.debugOut("VpnManager.getRemainingSAsCount (maxSAs) query = " + query, 3, ETypeStore.DBG_VPN);
-        ResultSet rs = null;
-        try {
-            rs = VpnManager.executeQuery(query);
+            rs = null;
+            rs = VpnManager.executeQueryPS(query, new String[]{unitid});
             if (rs.next() && (result = VpnManager.getValidString(rs, "maxSAs")) != null && !result.equals("")) {
                 maxSAs = Integer.parseInt(result);
             }
-            if (maxSAs == 0) {
+            if (maxSAs != 0) break block6;
                 int n = 0;
+            rs = DataBaseConnectionPool.freeResultSet(rs);
                 return n;
             }
+        try {
             query = "SELECT COUNT(*) FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS where id=" + pool.delimitDBColumnValue(unitid);
             SGMSUtil.debugOut("ParamsManager.getRemainingSAsCount (currentSAs) query = " + query, 3, ETypeStore.DBG_VPN);
             currentSAs = this.getCount(query);
             currentTasks = this.getVPNTaskCount(unitid);
         }
         catch (SQLException sqe) {
+            try {
             SGMSUtil.debugOut((Object)("ParamsManager getRemainingSAsCount: " + query + sqe.getMessage()), 1);
             log.log("ParamsManager", "getRemainingSAsCount", query + "\n" + sqe.getMessage());
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         SGMSUtil.debugOut("getRemainingSAsCount: unitid=" + unitid + " maxSAs=" + maxSAs + " currentSAs=" + currentSAs + " currentTasks=" + currentTasks, 3, ETypeStore.DBG_VPN);
         return maxSAs - currentSAs - currentTasks;
     }
 
     public String getInterconnectedSAField(String searchfield1, String searchvalue1, String searchfield2, String searchvalue2, String searchfield3, String searchvalue3, String returnfield) throws SQLException {
+        ResultSet rs = null;
+        ArrayList<String> values = new ArrayList<String>();
         String result = "";
-        String query = "SELECT " + returnfield + " from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS where LOWER(" + searchfield1 + ") LIKE " + pool.delimitDBColumnValue(searchvalue1.toLowerCase() + "%");
+        String query = "SELECT " + returnfield + " from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS where LOWER(?) LIKE ? ";
+        values.add(searchfield1);
+        values.add(searchvalue1.toLowerCase() + "%");
         if (searchfield2 != null) {
-            query = query + " AND LOWER(" + searchfield2 + ")=" + pool.delimitDBColumnValue(searchvalue2.toLowerCase());
+            query = query + " AND LOWER(?)=?";
+            values.add(searchfield2);
+            values.add(searchvalue2.toLowerCase());
         }
         if (searchfield3 != null) {
-            query = query + " AND LOWER(" + searchfield3 + ")=" + pool.delimitDBColumnValue(searchvalue3.toLowerCase());
+            query = query + " AND LOWER(?)=?";
+            values.add(searchfield3);
+            values.add(searchvalue3.toLowerCase());
         }
         SGMSUtil.debugOut("\ngetInterconnectedSAField: query = " + query + "\n", 3, ETypeStore.DBG_VPN);
-        ResultSet rs = VpnManager.executeQuery(query);
+        rs = VpnManager.executeQueryPS(query, values.toArray(new String[values.size()]));
         if (rs.next()) {
             result = VpnManager.getValidString(rs, 1);
         }
@@ -1620,45 +1703,52 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public void addTargetValuesToGroupSAPolicy(String userid, String domainid, String srcgrpid, String remoteid, String localAuth, String remoteAuth, String radius, String applyRules, String dhcpTunnel, String remoteNetBIOS, String keepAliveAt) {
-        StringBuffer query = new StringBuffer("SELECT POLICY_ID from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE LOWER(ID)=" + pool.delimitDBColumnValue(srcgrpid.toLowerCase() + ":" + userid.toLowerCase() + "@" + domainid) + " AND LOWER(remoteUnit)=" + pool.delimitDBColumnValue(remoteid.toLowerCase()));
+        ResultSet rs;
+        block4: {
+            StringBuffer query = new StringBuffer("SELECT POLICY_ID from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE LOWER(ID)= ? AND LOWER(remoteUnit)= ?");
         SGMSUtil.debugOut("ParamsManager.addTargetValuesToGroupSAPolicy(): query = " + query, 2, ETypeStore.DBG_VPN);
-        ResultSet rs = null;
+            rs = null;
         try {
             String policy_id;
-            rs = VpnManager.executeQuery(query.toString());
-            if (rs.next() && (policy_id = VpnManager.getValidString(rs, "POLICY_ID")) != null && !policy_id.equals("")) {
+                rs = VpnManager.executeQueryPS(query.toString(), new String[]{srcgrpid.toLowerCase() + ":" + userid.toLowerCase() + "@" + domainid, remoteid.toLowerCase()});
+                if (!rs.next() || (policy_id = VpnManager.getValidString(rs, "POLICY_ID")) == null || policy_id.equals("")) break block4;
                 query = new StringBuffer("UPDATE " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS");
-                query.append(" set remoteLocalAuth = " + pool.delimitDBColumnValue(localAuth));
-                query.append(", remoteRemoteAuth = " + pool.delimitDBColumnValue(remoteAuth));
-                query.append(", remoteRadiusAuth = " + pool.delimitDBColumnValue(radius));
-                query.append(", remoteApplyRules = " + pool.delimitDBColumnValue(applyRules));
-                query.append(", remoteDhcpTunnel = " + pool.delimitDBColumnValue(dhcpTunnel));
-                query.append(", keepAliveAt =" + pool.delimitDBColumnValue(keepAliveAt));
-                query.append(", remoteNetBIOS =" + pool.delimitDBColumnValue(remoteNetBIOS));
-                query.append(" WHERE POLICY_ID = " + pool.delimitDBColumnValue(policy_id));
+                query.append(" set remoteLocalAuth = ?");
+                query.append(", remoteRemoteAuth = ?");
+                query.append(", remoteRadiusAuth = ?");
+                query.append(", remoteApplyRules = ?");
+                query.append(", remoteDhcpTunnel = ?");
+                query.append(", keepAliveAt = ?");
+                query.append(", remoteNetBIOS = ?");
+                query.append(" WHERE POLICY_ID = ?");
+                String[] values = new String[]{localAuth, remoteAuth, radius, applyRules, dhcpTunnel, keepAliveAt, remoteNetBIOS, policy_id};
                 SGMSUtil.debugOut("ParamsManager.addTargetValuesToGroupSAPolicy(): query = " + query, 2, ETypeStore.DBG_VPN);
-                int rows = this.executeUpdate(query.toString());
-                if (rows == 0) {
+                int rows = this.executeUpdatePS(query.toString(), values);
+                if (rows != 0) break block4;
                     SGMSUtil.debugOut("ParamsManager addTargetValuesToGroupSAPolicy: group Policy update failed: " + query, 2, ETypeStore.DBG_VPN);
                     log.log("ParamsManager", "addTargetValuesToGroupSAPolicy", "Group Policy update failed: " + query);
                 }
-            }
-        }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.debugOut((Object)("ParamsManager addTargetValuesToGroupSAPolicy: " + query + sqe.getMessage()), 1);
             log.log("ParamsManager", "addTargetValuesToGroupSAPolicy", query + "\n" + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
     }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+    }
 
     public String getNodeSaNames(String sessionID, String nodeID) throws SQLException {
-        String query = "SELECT IPSECNAME FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE LOWER(ID) like '%" + nodeID.toLowerCase() + "%'  AND ipsecLocalDhcpTunnel = 1 AND (ipsecInSPI='1' AND ipsecOutSPI='1') OR (ipsecInSPI='2' AND ipsecOutSPI='2') OR (ipsecInSPI='5' AND ipsecOutSPI='5')";
+        String query = "SELECT IPSECNAME FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE LOWER(ID) LIKE ? AND ipsecLocalDhcpTunnel = 1 AND (ipsecInSPI='1' AND ipsecOutSPI='1') OR (ipsecInSPI='2' AND ipsecOutSPI='2') OR (ipsecInSPI='5' AND ipsecOutSPI='5')";
         String result = "";
         ResultSet rs = null;
         try {
-            rs = VpnManager.executeQuery(query);
+            rs = VpnManager.executeQueryPS(query, new String[]{"%" + nodeID.toLowerCase() + "%"});
             while (rs.next()) {
                 String currentSaName = VpnManager.getValidString(rs, 1);
                 if (currentSaName.indexOf("GroupVPN") != -1) continue;
@@ -1666,42 +1756,65 @@
             }
         }
         catch (SQLException e) {
+            try {
             SGMSUtil.debugOut("ParamsManager.getNodeSaNames(), query " + query + e.getMessage());
             throw e;
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
+            }
         }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return result;
     }
 
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
+     * Unable to fully structure code
+     * Enabled aggressive block sorting
+     * Enabled unnecessary exception pruning
+     * Enabled aggressive exception aggregation
      */
     public static boolean isDuplicateUfi(String nodeid, String ufi) {
-        String query = "";
-        query = "SELECT id, firewallid FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE LOWER(firewallid)=" + pool.delimitDBColumnValue(ufi.toLowerCase());
-        String id = null;
-        String firewallid = null;
-        ResultSet rs = null;
+        query = "";
+        query = "SELECT id, firewallid FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS WHERE LOWER(firewallid)= ?";
+        id = null;
+        firewallid = null;
+        rs = null;
         try {
-            rs = VpnManager.executeQuery(query);
+            rs = VpnManager.executeQueryPS(query, new String[]{ufi.toLowerCase()});
             while (rs.next()) {
                 id = VpnManager.getValidString(rs, 1);
                 firewallid = VpnManager.getValidString(rs, 2);
                 if (nodeid == null || firewallid == null || nodeid.equals("") || firewallid.equals("") || !firewallid.equals(ufi) || id.equalsIgnoreCase(nodeid)) continue;
-                boolean bl = true;
-                return bl;
+                var6_6 = true;
+                ** GOTO lbl22
             }
+            ** GOTO lbl24
         }
         catch (SQLException e) {
+            try {
             SGMSUtil.debugOut("ParamsManager.isDuplicateUfi(), query " + query + e.getMessage());
         }
-        finally {
+            catch (Throwable var7_8) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw var7_8;
         }
+lbl22:
+            // 1 sources
+
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+            return var6_6;
+lbl24:
+            // 1 sources
+
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+            return false;
+            rs = DataBaseConnectionPool.freeResultSet(rs);
         return false;
     }
+    }
 
     public String createEncryptionKey(String algo) {
         if (algo.equals("1") || algo.equals("2") || algo.equals("3") || algo.equals("4") || algo.equals("11")) {
@@ -2319,8 +2432,8 @@
         }
         try {
             SGMSUtil.debugOut("Processing Additional LAN SUBNETS for unit: " + unitid + "  keymode: " + keymode + "  append: " + append, 2, ETypeStore.DBG_VPN);
-            String query = "SELECT lanSubnetGateway,lanSubnetMask from " + DataBaseConnectionPool.getTablePrefix() + "SW_LANS where ID='" + unitid + "'";
-            rs = VpnManager.executeQuery(query);
+            String query = "SELECT lanSubnetGateway,lanSubnetMask from " + DataBaseConnectionPool.getTablePrefix() + "SW_LANS where ID= ?";
+            rs = VpnManager.executeQueryPS(query, new String[]{unitid});
             String[] tmpDN = new String[3];
             while (rs.next()) {
                 tmpDN[0] = VpnManager.getValidString(rs, "lanSubnetGateway");
@@ -3065,8 +3178,8 @@
                 boolean bl = false;
                 return bl;
             }
-            query = "DELETE FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS where ID=" + pool.delimitDBColumnValue(unitid);
-            this.executeUpdate(query);
+            query = "DELETE FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS where ID=?";
+            this.executeUpdatePS(query, new String[]{unitid});
             description = "Delete Interconnected SA to deleted unit: " + displayName;
             query = "Select * from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS where LOWER(remoteUnit)=" + pool.delimitDBColumnValue(serial.toLowerCase());
             rs = VpnManager.executeQuery(query);
@@ -4414,25 +4527,34 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public static boolean policyIsEnhanced(String ipsecname, String espkey) {
-        String query = "SELECT enhanced from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ipsecESPKey=" + pool.delimitDBColumnValue(espkey) + " AND ipsecName=" + pool.delimitDBColumnValue(ipsecname);
+        ResultSet rs;
+        block4: {
+            boolean bl;
+            String query = "SELECT enhanced from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE ipsecESPKey = ? AND ipsecName = ?";
         SGMSUtil.debugOut("VpnManager.policyIsEnhanced(): query = " + query, 3, ETypeStore.DBG_VPN);
-        ResultSet rs = null;
+            rs = null;
         try {
             String enhanced;
-            rs = VpnManager.executeQuery(query);
-            if (rs.next() && (enhanced = VpnManager.getValidString(rs, "enhanced")) != null && enhanced.equals("1")) {
-                boolean bl = true;
-                return bl;
-            }
+                rs = VpnManager.executeQueryPS(query, new String[]{espkey, ipsecname});
+                if (!rs.next() || (enhanced = VpnManager.getValidString(rs, "enhanced")) == null || !enhanced.equals("1")) break block4;
+                bl = true;
         }
         catch (SQLException sqe) {
+                try {
             SGMSUtil.printStackTrace(sqe);
             SGMSUtil.debugOut((Object)("VpnManager.policyIsEnhanced(): " + query + sqe.getMessage()), 1);
             log.log("VpnManager", "policyIsEnhanced", query + "\n" + sqe.getMessage());
         }
-        finally {
+                catch (Throwable throwable) {
+                    rs = DataBaseConnectionPool.freeResultSet(rs);
+                    throw throwable;
+                }
             rs = DataBaseConnectionPool.freeResultSet(rs);
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+            return bl;
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return false;
     }
 
@@ -4444,8 +4566,8 @@
         SGMSUtil.debugOut("Deleting dangling SAs from unit:" + unitid, 2, ETypeStore.DBG_VPN);
         ResultSet rs = null;
         try {
-            String query = "SELECT remoteUnit from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS where ID='" + unitid + "'";
-            rs = VpnManager.executeQuery(query);
+            String query = "SELECT remoteUnit from " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS where ID=?";
+            rs = VpnManager.executeQueryPS(query, new String[]{unitid});
             while (rs.next()) {
                 String ipsecname;
                 String nodeid;
@@ -4735,8 +4857,8 @@
             Vector<String> groupNodesForUpdate = new Vector<String>();
             try {
                 SGMSUtil sgmsUtil = new SGMSUtil(pool);
-                String qstr = "SELECT ID," + queryFields + " FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE remoteUnit=" + pool.delimitDBColumnValue(oSerialNumber);
-                rs = sgmsUtil.executeQuery(qstr);
+                String qstr = "SELECT ID," + queryFields + " FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS WHERE remoteUnit=?";
+                rs = VpnManager.executeQueryPS(qstr, new String[]{oSerialNumber});
                 paramValuesRow = new String[paramNames.length];
                 ArrayList<TaskReturnInfo> taskInfoList = new ArrayList<TaskReturnInfo>();
                 while (rs.next()) {
@@ -4773,11 +4895,16 @@
                 }
                 info.setTaskInfoList(taskInfoList);
                 if (groupNodesForUpdate.size() <= 0) break block14;
-                Vector<String> groupNodeIdVector = this.getValuesInsertedForInClause(groupNodesForUpdate, true);
-                for (int i = 0; i < groupNodeIdVector.size(); ++i) {
-                    String query = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS SET remoteUnit = " + pool.delimitDBColumnValue(nSerialNumber) + " WHERE   ID IN (" + groupNodeIdVector.elementAt(i) + ") AND remoteUnit = " + pool.delimitDBColumnValue(oSerialNumber);
+                LinkedHashMap<String, List<String>> inClauseMap = this.getValuesInsertedForInClause(groupNodesForUpdate);
+                Set<String> keySet = inClauseMap.keySet();
+                for (String questionMarks : keySet) {
+                    ArrayList<String> psValues = new ArrayList<String>();
+                    psValues.add(nSerialNumber);
+                    String query = "UPDATE " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS SET remoteUnit = ? WHERE  ID IN (" + questionMarks.substring(1, questionMarks.length()) + ") AND remoteUnit = ?";
+                    psValues.addAll((Collection)inClauseMap.get(questionMarks));
+                    psValues.add(oSerialNumber);
                     SGMSUtil.debugOut(query, 1, ETypeStore.DBG_VPN);
-                    sgmsUtil.executeUpdate(query);
+                    SGMSUtil.executeUpdatePS(query, psValues.toArray(new String[psValues.size()]));
                 }
             }
             catch (Exception sqle) {
@@ -4899,6 +5026,8 @@
         ParamsManager pm = (ParamsManager)ParamsManager.getReference(pool);
         ResultSet rs = null;
         try {
+            List psValue;
+            String query;
             String id = "";
             String sn = "";
             String saName = "";
@@ -4908,15 +5037,20 @@
             sbQuery.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "PARAMS p, ");
             sbQuery.append(DataBaseConnectionPool.getTablePrefix() + "PARAMS1 p1 ");
             sbQuery.append("WHERE p.id = p1.id AND p.id IN (");
-            Vector<String> vec = pm.getValuesInsertedForInClause(vecUnitIDs, true);
+            LinkedHashMap<String, List<String>> inClauseMap = pm.getValuesInsertedForInClause(vecUnitIDs);
             Vector<String> vecQuery = new Vector<String>();
-            for (String inClause : vec) {
-                vecQuery.addElement(sbQuery.toString() + inClause + ")");
+            Vector<List<String>> vecValues = new Vector<List<String>>();
+            Set<String> keySet = inClauseMap.keySet();
+            for (String questionMarks : keySet) {
+                vecQuery.addElement(sbQuery.toString() + questionMarks.substring(1, questionMarks.length()) + ")");
+                vecValues.add(inClauseMap.get(questionMarks));
             }
-            for (String query : vecQuery) {
+            for (int i = 0; i < vecQuery.size(); ++i) {
                 try {
+                    query = (String)vecQuery.elementAt(i);
+                    psValue = (List)vecValues.elementAt(i);
                     SGMSUtil.debugOut((Object)("VpnManager.loadData: Get Unit Info: " + query), 2);
-                    rs = su.executeQuery(query);
+                    rs = SGMSUtil.executeQueryPS(query, psValue.toArray(new String[psValue.size()]));
                     while (rs.next()) {
                         id = rs.getString("id");
                         sn = rs.getString("serial");
@@ -4937,9 +5071,11 @@
                         this.m_htNodeIDToSerial.put(id, sn);
                         this.m_htSerialToNodeID.put(sn, id);
                     }
+                    continue;
                 }
                 catch (SQLException sqle) {
                     SGMSUtil.debugOut("SQL Exception while fetching unit info: " + sqle.getMessage());
+                    continue;
                 }
                 finally {
                     rs = DataBaseConnectionPool.freeResultSet(rs);
@@ -4950,13 +5086,17 @@
             sbQuery.append("FROM " + DataBaseConnectionPool.getTablePrefix() + "SW_SAS ");
             sbQuery.append("WHERE ID IN (");
             vecQuery = new Vector();
-            for (String inClause : vec) {
-                vecQuery.addElement(sbQuery.toString() + inClause + ")");
+            vecValues = new Vector();
+            for (String questionMarks : keySet) {
+                vecQuery.addElement(sbQuery.toString() + questionMarks.substring(1, questionMarks.length()) + ")");
+                vecValues.add(inClauseMap.get(questionMarks));
             }
-            for (String query : vecQuery) {
+            for (int i = 0; i < vecQuery.size(); ++i) {
                 try {
+                    query = (String)vecQuery.elementAt(i);
+                    psValue = (List)vecValues.elementAt(i);
                     SGMSUtil.debugOut((Object)("VpnManager.loadData: Get SA Info: " + query), 2);
-                    rs = su.executeQuery(query);
+                    rs = SGMSUtil.executeQueryPS(query, psValue.toArray(new String[psValue.size()]));
                     while (rs.next()) {
                         id = rs.getString("id");
                         sn = this.getSerialNumberFromNodeId(id);
@@ -4966,12 +5106,15 @@
                         if (ui == null) continue;
                         ui.addSA(saName, sa);
                     }
+                    continue;
                 }
                 catch (SQLException sqle) {
                     SGMSUtil.debugOut("SQL Exception while fetching unit info: " + sqle.getMessage());
+                    continue;
                 }
                 catch (Exception eee) {
                     SGMSUtil.debugOut("Exception while fetching unit info: " + eee.getMessage());
+                    continue;
                 }
                 finally {
                     rs = DataBaseConnectionPool.freeResultSet(rs);
Only in decompiled-9.3.9330/com/sonicwall/sgms/policyengine/infer/common: CFSObjectTypeInference.java
Only in decompiled-9.3.9330/com/sonicwall/sgms/policyengine/validate/common: CFSObjectTypeValidator.java
Only in decompiled-9.3.9330/com/sonicwall/sgms/policyengine/validate/common: GlobalModeValidator.java
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/servlets/Authenticate.java decompiled-9.3.9330/com/sonicwall/sgms/servlets/Authenticate.java
--- decompiled-9.3.9320/com/sonicwall/sgms/servlets/Authenticate.java	2023-09-08 15:13:13.619787307 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/servlets/Authenticate.java	2023-09-08 15:14:40.539821265 -0700
@@ -3,14 +3,20 @@
  */
 package com.sonicwall.sgms.servlets;
 
+import com.google.zxing.WriterException;
 import com.sonicwall.event.manager.EventMgmtManager;
 import com.sonicwall.event.model.SchedulingInfoDataInf;
 import com.sonicwall.sgms.auth.JAASAuthenticator;
 import com.sonicwall.sgms.auth.MSWAuthenticator;
 import com.sonicwall.sgms.auth.UserPrincipals;
 import com.sonicwall.sgms.base.ApplianceInfoList;
+import com.sonicwall.sgms.base.DomainInfo;
 import com.sonicwall.sgms.base.LoginInfo;
+import com.sonicwall.sgms.bean.User;
 import com.sonicwall.sgms.database.DataBaseConnectionPool;
+import com.sonicwall.sgms.logging.shared.ETypeStore;
+import com.sonicwall.sgms.logging.shared.GenericMLogRecord;
+import com.sonicwall.sgms.logging.shared.GenericMLogger;
 import com.sonicwall.sgms.manager.DashboardManager;
 import com.sonicwall.sgms.manager.DomainManager;
 import com.sonicwall.sgms.manager.LogsManager;
@@ -26,15 +32,28 @@
 import com.sonicwall.sgms.util.ConfigFileReader;
 import com.sonicwall.sgms.util.ConfigFileReaderUtil;
 import com.sonicwall.sgms.util.Crypto;
+import com.sonicwall.sgms.util.KeyStotreUtil;
+import com.sonicwall.sgms.util.ProductizationUtil;
 import com.sonicwall.sgms.util.SGMSConstants;
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.sgms.util.SGMSUtil2;
+import com.sonicwall.sgms.util.SMTPClient;
 import com.sonicwall.sgms.util.SimpleSAXParser;
+import com.sonicwall.sgms.util.TEAV;
+import com.sonicwall.sgms.util.TwoFactAuthUtil;
 import com.sonicwall.sgms.util.prdb.AddUnitSaxHandler;
 import java.io.IOException;
 import java.io.StringReader;
+import java.security.GeneralSecurityException;
 import java.sql.SQLException;
 import java.text.MessageFormat;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.time.Duration;
+import java.time.LocalDateTime;
+import java.time.ZoneOffset;
+import java.time.format.DateTimeFormatter;
+import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Date;
 import java.util.HashMap;
@@ -42,8 +61,11 @@
 import java.util.LinkedHashMap;
 import java.util.Objects;
 import java.util.Optional;
+import java.util.TimeZone;
 import java.util.Vector;
+import java.util.logging.Level;
 import javax.security.auth.login.LoginException;
+import javax.servlet.ServletOutputStream;
 import javax.servlet.http.Cookie;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
@@ -53,11 +75,13 @@
 public class Authenticate
 extends SgmsBaseServlet {
     private static final long serialVersionUID = -5533892909292575128L;
-    public static long seedTimeout = 120L;
-    public static final String AUTHENTICATED_PAGE = new String("/mainPage?page=mainPage");
-    public static final String CHANGE_PASSWORD_PAGE = new String("/mainPage?page=mainPage");
-    private static boolean isfirstRun = true;
-    private static LogsManager logsManager = null;
+    public static long seedTimeout;
+    public static final String AUTHENTICATED_PAGE;
+    public static final String TWO_FA_PAGE;
+    public static final String CONFIRM_TWO_FA_PAGE;
+    public static final String CHANGE_PASSWORD_PAGE;
+    private static boolean isfirstRun;
+    private static LogsManager logsManager;
     private String allowedChars = "abcdefghijklmnopqrstuvwxyz0123456789-.\\";
     private boolean appendedAdditionalSpecialChars = false;
 
@@ -74,6 +98,7 @@
      */
     @Override
     protected synchronized void performLogin(HttpServletRequest req, HttpServletResponse res) {
+        is2FaEnabled = 0;
         session = req.getSession(false);
         req.changeSessionId();
         localeRequested = this.getLocale(req);
@@ -192,11 +217,79 @@
         pwdExists = true;
         needPwdChange = "0";
         chgPwdSuccess = true;
+        tokenVal = req.getParameter("KEEP_LOG_IN");
+        if (tokenVal != null && !tokenVal.isEmpty()) {
+            try {
+                this.validateOTP(req, res, user, domainInfo);
+            }
+            catch (IOException | GeneralSecurityException | SQLException | ParseException e1) {
+                e1.printStackTrace();
+            }
+        }
+        productUtil = ProductizationUtil.getInstance();
+        product = productUtil.getProduct();
+        req.setAttribute("PRODUCT_NAME", product.getProductName());
         action = req.getParameter("action");
-        if (action != null && action.equals("changePasswordHash")) {
+        if (action != null) {
+            if (action.equals("changePasswordHash")) {
             this.changePasswordHash(req, res);
             return;
         }
+            if (action.equals("confirm2FA")) {
+                try {
+                    req.setAttribute("user", user);
+                    req.setAttribute("ctlSGMSDomainId", domainID);
+                    req.setAttribute("ctlSGMSDomainName", domainName);
+                    this.validateOTP(req, res, user, domainInfo);
+                    return;
+                }
+                catch (IOException | GeneralSecurityException | SQLException | ParseException e) {
+                    SGMSUtil.debugOut((Object)("Authenticate.performLogin():  ERROR: " + e.getMessage()), 3);
+                    req.setAttribute("ERROR", e.getMessage());
+                    this.forwardToPage(req, res, Authenticate.TWO_FA_PAGE);
+                }
+            } else if (action.equals("getQrCode")) {
+                try {
+                    this.genertateQrCode(req, res, user, domainInfo);
+                    return;
+                }
+                catch (WriterException | IOException | SQLException e) {
+                    SGMSUtil.debugOut((Object)("Authenticate.performLogin():  ERROR: " + e.getMessage()), 3);
+                    req.setAttribute("ERROR", e.getMessage());
+                    this.forwardToPage(req, res, Authenticate.TWO_FA_PAGE);
+                }
+            } else {
+                if (action.equals("emergencyCode")) {
+                    try {
+                        this.getEmergencyCode(req, res, user, domainInfo);
+                        return;
+                    }
+                    catch (IOException | SQLException e) {
+                        SGMSUtil.debugOut((Object)("Authenticate.performLogin():  ERROR: " + e.getMessage()), 3);
+                        return;
+                    }
+                }
+                if (action.equalsIgnoreCase("email2fa")) {
+                    try {
+                        req.setAttribute("user", user);
+                        req.setAttribute("ctlSGMSDomainId", domainID);
+                        req.setAttribute("ctlSGMSDomainName", domainName);
+                        if (this.set2FAbyEmail(req, res, user, domainInfo)) {
+                            req.setAttribute("twoFAbyEmail", "1");
+                            req.setAttribute("EMAIL_2FA_MSG", "Authentication code Sent to mail will expire in 3 minutes");
+                        } else {
+                            req.setAttribute("EMAIL_2FA_MSG", "Unable to Send Email");
+                        }
+                    }
+                    catch (Exception e) {
+                        SGMSUtil.debugOut((Object)("Authenticate.performLogin():  ERROR: " + e.getMessage()), 3);
+                        req.setAttribute("EMAIL_2FA_MSG", "Unable to Send Email");
+                    }
+                    this.forwardToPage(req, res, Authenticate.CONFIRM_TWO_FA_PAGE);
+                    return;
+                }
+            }
+        }
         sbECMUnitXMLData = null;
         bExecuteAddUnitASync = false;
         bXMLAuthUserInMSW = false;
@@ -314,6 +407,28 @@
                 return;
             }
         }
+        emergencyCode = null;
+        try {
+            if (domainID == null) {
+                data = Authenticate.userManager.getUserData(session.getId(), user);
+                is2FaEnabled = Integer.parseInt(data[34]);
+                emergencyCode = data[35];
+            } else {
+                data = Authenticate.userManager.getUserData(session.getId(), user, domainID);
+                is2FaEnabled = Integer.parseInt(data[34]);
+                emergencyCode = data[35];
+            }
+        }
+        catch (SQLException e) {
+            Authenticate.log.log("Authenticate", "performLogin", " ERROR in 2FA :  [" + e.getMessage() + "] ");
+        }
+        if (is2FaEnabled != 0) {
+            req.setAttribute("JSP_PAGE_KEY", TEAV.encryptText(KeyStotreUtil.getValueFromKeystore("gms_twofa_page_auth_key")));
+        }
+        req.setAttribute("IS2FA_ENABLED", is2FaEnabled);
+        req.setAttribute("user", user);
+        req.setAttribute("ctlSGMSDomainId", domainID);
+        req.setAttribute("ctlSGMSDomainName", domainName);
         if (!ipValidated && domainInfo != null && user != null && Authenticate.userManager.isUserAdministrator(session.getId(), user, domainInfo.getId()) && !AddressUtil.isValidIPLogin(remoteAddr, domainInfo.getId())) {
             SGMSUtil.debugOut("Authenticate.performLogin():  ERROR: IP Address not within allowed range.");
             Authenticate.log.log("Authenticate", "performLogin", " ERROR: IP Address not within allowed range.");
@@ -520,7 +635,7 @@
                     this.forwardToLogin(req, res, Authenticate.getResourceBundleString("AUTH_LOGIN_FAILURE", req), 300);
                     return;
                 }
-                if (!valid || isPasswordHashed) ** GOTO lbl632
+                if (!valid || isPasswordHashed) ** GOTO lbl707
                 if (needPwdChange != null && needPwdChange.equals("0")) {
                     try {
                         needPwdChange = Authenticate.userManager.getNeedPwdChange(user, domainInfo.getId());
@@ -556,7 +671,7 @@
                     this.forwardToChangePassword(req, res, Authenticate.getResourceBundleString("PWD_CHANGE_SCREEN", req), 300);
                     return;
                 }
-                if (!isLocalTypeUser || bPerformXMLAuthWithMSW || (isValidPwd = SGMSUtil2.isValidPassword(password, enforcePwdSecurity.equals("1")))) ** GOTO lbl632
+                if (!isLocalTypeUser || bPerformXMLAuthWithMSW || (isValidPwd = SGMSUtil2.isValidPassword(password, enforcePwdSecurity.equals("1")))) ** GOTO lbl707
                 message = su.isPCIEnforced() != false ? Authenticate.getResourceBundleString("PWD_VALIDATION_FAILURE_FOR_PCI", req) : Authenticate.getResourceBundleString("PWD_VALIDATION_FAILURE", req);
                 SGMSUtil.debugOut("Authenticate.performLogin(): Forward to Change Password Screen (2): isLocalTypeUser:" + isLocalTypeUser + "; isValidPwd:" + isValidPwd);
                 req.setAttribute("user", SGMSUtil2.unescapeUserID(user));
@@ -730,18 +845,18 @@
                                     logMsg.append(" " + Authenticate.resourceBundle.getString("TO_USER_TYPE") + Authenticate.userManager.getUserType(user, domainInfo.getId()));
                                     Authenticate.logsManager.addNewLogFYI("", user, logMsg.toString(), req.getRemoteAddr(), domainInfo.getId());
                                 }
-                                if (!valid) ** GOTO lbl632
+                                if (!valid) ** GOTO lbl707
                                 Authenticate.logsManager.addNewLogFYI("", user, Authenticate.resourceBundle.getString("REMOTE_SUCCESSFUL_LOGIN") + SGMSUtil2.unescapeUserID(user), req.getRemoteAddr(), domainInfo.getId());
                                 if ("admin".equalsIgnoreCase(user) && domainInfo.isAdminHidden().equals("1")) {
                                     dm.unhideAdmin(domainInfo.getId(), domainInfo.getDomainName());
                                 }
-                                if (!userAccountExists || bXMLAuthUserInMSW) ** GOTO lbl632
+                                if (!userAccountExists || bXMLAuthUserInMSW) ** GOTO lbl707
                                 tmpAuthServerID = null != loginInfo && null != loginInfo.getAuthServerID() ? loginInfo.getAuthServerID() : null;
                                 Authenticate.userManager.updateUserProperties(session.getId(), user, domainInfo.getId(), userPrincipals, tmpAuthServerID);
                             }
                             xml = "<AUTHENTICATE>\n\t<requestSession>" + session.getId() + "</requestSession>\n\t<remoteAddr>" + req.getRemoteAddr() + "</remoteAddr>\n\t<ID>" + user + "</ID>\n\t<salt>" + seed + "</salt>\n\t<clienthash>" + password_seed_hash + "</clienthash>\n\t<DOMAINID>" + domainInfo.getId() + "</DOMAINID>\n</AUTHENTICATE>";
                             SGMSUtil.debugOut("Authenticate.performLogin(): xml = \n" + xml);
-                            if (valid) ** GOTO lbl632
+                            if (valid) ** GOTO lbl707
                             valid = Authenticate.userManager.authenticateInXML(xml);
                         }
                         catch (SQLException sqe) {
@@ -786,7 +901,7 @@
                 valid = false;
             }
         }
-lbl632:
+lbl707:
         // 11 sources
 
         if (valid && !userLockout) {
@@ -906,6 +1021,8 @@
         catch (Exception ex) {
             userType = null;
         }
+        sessionID = req.getSession().getId();
+        if (is2FaEnabled == 0) {
         SGMSUtil.debugOut("Authenticate.performLogin(): adding new session");
         session.setAttribute("sgmsuser", new String(user));
         session.setAttribute("usertype", new String(userType));
@@ -923,7 +1040,6 @@
             showDeploymentView = "true";
         }
         session.setAttribute("showDeploymentView", showDeploymentView);
-        sessionID = req.getSession().getId();
         ssocookie = new Cookie("SSOSESSIONID", sessionID);
         ssocookie.setPath("/");
         ssocookie.setSecure(true);
@@ -931,8 +1047,8 @@
         ssocookie.setDomain(cookieDomain);
         ssocookie.setHttpOnly(true);
         res.addCookie(ssocookie);
-        timezone_offset = req.getParameter("ctlTimezoneOffset");
-        if (timezone_offset == null) {
+        }
+        if ((timezone_offset = req.getParameter("ctlTimezoneOffset")) == null) {
             calendar = Calendar.getInstance();
             offset = 0 - (calendar.get(15) + calendar.get(16)) / 60000;
             timezone_offset = Integer.toString(offset);
@@ -941,8 +1057,7 @@
         try {
             xml = "<BEGIN_SESSION>\n\t<requestSession>" + session.getId() + "</requestSession>\n\t<userID>" + user + "</userID>\n\t<sessionID>" + session.getId() + "</sessionID>\n\t<ipAddress>" + req.getRemoteAddr() + "</ipAddress>\n\t<domainID>" + domainInfo.getId() + "</domainID>\n\t<webSession>true</webSession>\n</BEGIN_SESSION>";
             SGMSUtil.debugOut("Authenticate.performLogin(): xml = \n" + xml);
-            userSettings = Authenticate.sessionManager.beginSessionInXML(xml);
-            if (userSettings != null) {
+            if (is2FaEnabled == 0 && (userSettings = Authenticate.sessionManager.beginSessionInXML(xml)) != null) {
                 session.setAttribute("userSettings", userSettings);
             }
         }
@@ -1010,7 +1125,7 @@
                 try {
                     Thread.sleep(5000L);
                 }
-                catch (Exception var64_130) {}
+                catch (Exception var66_145) {}
             } else {
                 req.setAttribute("addecmunitxml", sbECMUnitXMLData);
                 this.forwardToPage(req, res, "/ecmprogress.jsp");
@@ -1020,7 +1135,18 @@
         if ((sgmsutil = new SGMSUtil(Authenticate.pool)).getCosmoParam("freshInstall") != null) {
             sgmsutil.deleteCosmoParam("freshInstall");
         }
+        if (valid && is2FaEnabled == 0) {
         this.forwardToPage(req, res, Authenticate.AUTHENTICATED_PAGE);
+        } else if (valid && is2FaEnabled == 1) {
+            if (emergencyCode != null) {
+                req.setAttribute("EMERGENCY_CODE", emergencyCode);
+            }
+            this.forwardToPage(req, res, Authenticate.TWO_FA_PAGE);
+        } else if (valid && is2FaEnabled == 2) {
+            this.forwardToPage(req, res, Authenticate.CONFIRM_TWO_FA_PAGE);
+        } else {
+            this.forwardToLogin(req, res, Authenticate.getResourceBundleString("AUTH_LOGIN_FAILURE", req), 300);
+        }
         if (Authenticate.isfirstRun) {
             this.updateWebServerParams(req);
             Authenticate.isfirstRun = false;
@@ -1045,6 +1171,237 @@
         return strUT;
     }
 
+    private void validateOTP(HttpServletRequest req, HttpServletResponse res, String user2, DomainInfo domainInfo) throws SQLException, GeneralSecurityException, IOException, ParseException {
+        String secretKey;
+        boolean result = false;
+        boolean confirm2FA = false;
+        boolean email2FA = false;
+        String tokenVal = req.getParameter("KEEP_LOG_IN");
+        String domainID = null;
+        String[] data = null;
+        int twoFAConf = 0;
+        String emCode = null;
+        String twoFAbyEmail = req.getParameter("twoFAbyEmail");
+        if (tokenVal != null && !tokenVal.isEmpty()) {
+            User userObj = userManager.keepLogin(tokenVal);
+            user2 = userObj.getUserId();
+            domainID = userObj.getDomainId();
+        } else {
+            String otp = req.getParameter("otp");
+            domainID = domainInfo.getId();
+            data = domainID != null ? userManager.getUserData(req.getSession().getId(), user2, domainID) : userManager.getUserData(req.getSession().getId(), user2);
+            twoFAConf = Integer.parseInt(data[34]);
+            secretKey = data[36];
+            res.setContentType("text/html");
+            emCode = data[35];
+            if (otp.length() != 6) {
+                result = emCode.equals(otp);
+            } else {
+                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
+                LocalDateTime t1 = LocalDateTime.parse(data[39], formatter).atOffset(ZoneOffset.UTC).toLocalDateTime();
+                LocalDateTime t2 = LocalDateTime.now(ZoneOffset.UTC);
+                long minutes = Math.abs(Duration.between(t2, t1).toMinutes());
+                result = data[38].equals(otp) && minutes <= 3L;
+                email2FA = result;
+                if (!email2FA) {
+                    confirm2FA = result = TwoFactAuthUtil.isValid(otp, secretKey);
+                }
+            }
+        }
+        if (result) {
+            logsManager.addNewLogFYI("", user2, resourceBundle.getString("REMOTE_SUCCESSFUL_LOGIN") + SGMSUtil2.unescapeUserID(user2) + " with 2FA" + (confirm2FA ? " Authenticator Code" : (email2FA ? " E-mail" : " Emergency Code")), req.getRemoteAddr(), domainInfo.getId());
+            if (data != null && data[34].equals("1") && confirm2FA) {
+                int cnf = userManager.confirmFirst2faLogin(req.getSession().getId(), user2, domainID);
+                if (userManager.isUserSuperAdmin(user2, domainID) && "admin".equalsIgnoreCase(user2) && "DMN0000000000000000000000001".equalsIgnoreCase(domainID)) {
+                    req.setAttribute("IS2FA_ENABLED", "2");
+                    userManager.sync2FAConfigWithAppliance(req, res);
+                }
+            } else if (data != null && !confirm2FA && !email2FA) {
+                String emergencyCode = TwoFactAuthUtil.generateBaseSecret(8);
+                secretKey = TwoFactAuthUtil.generateBase32Secret();
+                userManager.reset2faForUser(req.getSession().getId(), user2, domainID, "1", secretKey, emergencyCode);
+                logsManager.addNewLogFYI("", user2, resourceBundle.getString("TWOFA_EMERGENCY_CODE_RESET_MSG") + SGMSUtil2.unescapeUserID(user2), req.getRemoteAddr(), domainInfo.getId());
+                if (userManager.isUserSuperAdmin(user2, domainID) && "admin".equalsIgnoreCase(user2) && "DMN0000000000000000000000001".equalsIgnoreCase(domainID)) {
+                    req.setAttribute("EMERGENCY_CODE", emergencyCode);
+                    req.setAttribute("IS2FA_ENABLED", "1");
+                    req.setAttribute("SECRET_KEY", secretKey);
+                    userManager.sync2FAConfigWithAppliance(req, res);
+                }
+            }
+            String keepLogIn = req.getParameter("keepLogIn");
+            if (keepLogIn != null && keepLogIn.equals("1")) {
+                String[] token = new String[]{"thisIsForTesting"};
+                req.setAttribute("KEEP_LOG_IN", token);
+                String[] colName = new String[]{UserManager.columns[37]};
+                userManager.setUserData(req.getSession().getId(), domainID, colName, token, user2);
+            }
+            HttpSession session = req.getSession();
+            String sessionID = session.getId();
+            String userType2 = null;
+            try {
+                userType2 = userManager.getUserType(user2, domainID);
+            }
+            catch (Exception ex) {
+                userType2 = null;
+            }
+            String caller = req.getParameter("caller");
+            String pmUnitSerial = req.getParameter("pmUnitSerial");
+            SGMSUtil.debugOut("Authenticate.performLogin(): adding new session");
+            session.setAttribute("sgmsuser", new String(user2));
+            session.setAttribute("usertype", new String(userType2));
+            session.setAttribute("domainID", new String(domainID));
+            session.setAttribute("domainName", new String(domainInfo.getDomainName()));
+            if (null != caller) {
+                session.setAttribute("caller", new String(caller));
+            }
+            if (null != pmUnitSerial) {
+                session.setAttribute("pmUnitSerial", new String(pmUnitSerial));
+            }
+            session.setMaxInactiveInterval((int)this.getSessionTimeoutValue(session, user2, domainID));
+            String showDeploymentView = "false";
+            if (userManager.isUserSuperAdmin(user2, domainID) || userManager.isUserLocalDomainAdmin(user2, domainID)) {
+                showDeploymentView = "true";
+            }
+            session.setAttribute("showDeploymentView", showDeploymentView);
+            Cookie ssocookie = new Cookie("SSOSESSIONID", sessionID);
+            ssocookie.setPath("/");
+            ssocookie.setSecure(true);
+            String cookieDomain = req.getServerName();
+            ssocookie.setDomain(cookieDomain);
+            ssocookie.setHttpOnly(true);
+            res.addCookie(ssocookie);
+            String xml = "<BEGIN_SESSION>\n\t<requestSession>" + sessionID + "</requestSession>\n\t<userID>" + user2 + "</userID>\n\t<sessionID>" + sessionID + "</sessionID>\n\t<ipAddress>" + req.getRemoteAddr() + "</ipAddress>\n\t<domainID>" + domainID + "</domainID>\n\t<webSession>true</webSession>\n</BEGIN_SESSION>";
+            String userSettings = sessionManager.beginSessionInXML(xml);
+            if (userSettings != null) {
+                session.setAttribute("userSettings", userSettings);
+            }
+            this.forwardToPage(req, res, AUTHENTICATED_PAGE);
+        } else {
+            SGMSUtil.debugOut((Object)"Authenticate.performLogin():  ERROR: Incorrect Emergency Authentication Code.", 2);
+            if (twoFAbyEmail != null && twoFAbyEmail.equals("1")) {
+                req.setAttribute("twoFAbyEmail", "1");
+                req.setAttribute("ERR_MSG", "Invalid Authentication code. Please enter valid Authentication code.");
+            } else {
+                req.setAttribute("ERR_MSG", resourceBundle.getString("TWOFA_FAILED_LOGIN_MSG"));
+            }
+            logsManager.addNewLogFYI("", user2, resourceBundle.getString("REMOTE_FAILED_LOGIN") + SGMSUtil2.unescapeUserID(user2) + " with 2FA", req.getRemoteAddr(), domainInfo.getId());
+            if (twoFAConf == 1) {
+                if (emCode != null) {
+                    req.setAttribute("EMERGENCY_CODE", emCode);
+                }
+                this.forwardToPage(req, res, TWO_FA_PAGE);
+            } else if (twoFAConf == 2) {
+                this.forwardToPage(req, res, CONFIRM_TWO_FA_PAGE);
+            } else {
+                this.forwardToPage(req, res, AUTHENTICATED_PAGE);
+            }
+        }
+    }
+
+    public boolean set2FAbyEmail(HttpServletRequest req, HttpServletResponse res, final String user2, DomainInfo domainInfo) {
+        try {
+            final String otp = TwoFactAuthUtil.getOTP();
+            ArrayList<String> userList = new ArrayList<String>();
+            userList.add(user2);
+            final String[] userEmail = userManager.getUserEmailIDs(userList, domainInfo.getId()).get(0);
+            final String sessionid = req.getSession().getId();
+            final String domainID = domainInfo.getId();
+            new Thread(){
+
+                @Override
+                public void run() {
+                    boolean result = Authenticate.this.sendOtpByEmail(otp, userEmail, user2);
+                    if (result) {
+                        SgmsBaseServlet.userManager.set2faByEmail(sessionid, user2, domainID, otp);
+                    }
+                }
+            }.start();
+        }
+        catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+        return true;
+    }
+
+    private boolean sendOtpByEmail(String otp, String[] userEmail, String user2) {
+        DataBaseConnectionPool dbPool = DataBaseConnectionPool.getReference();
+        SGMSUtil sgmsUtil = new SGMSUtil(dbPool);
+        ProductizationUtil productUtil = ProductizationUtil.getInstance();
+        ProductizationUtil.PRODUCT product = productUtil.getProduct();
+        String fromAddress = sgmsUtil.getCosmoParam("adminEmail");
+        String toAddress = null;
+        if (userEmail[0] != null && !userEmail[0].isEmpty()) {
+            toAddress = userEmail[0];
+        }
+        if (userEmail[1] != null && !userEmail[1].isEmpty()) {
+            toAddress = userEmail[0];
+        }
+        if (toAddress == null) {
+            return false;
+        }
+        String smtpServer = sgmsUtil.getCosmoParam("smtp");
+        StringBuffer msg = new StringBuffer();
+        msg.append("\n").append(",\n Your One Time Password is " + otp + " and it will remain valid for next 3 mintutes.").append("\n \n Regards, \n " + fromAddress);
+        String subject = "GMS Login Authentication Code";
+        SMTPClient client = new SMTPClient(fromAddress, toAddress, smtpServer, msg.toString());
+        String smtpPort = sgmsUtil.getCosmoParam("smtpPort");
+        String emailTimeout = sgmsUtil.getCosmoParam("emailTimeout");
+        String smtpTLSEnabled = "0";
+        String smtpTLSEnabledParam = sgmsUtil.getCosmoParam("smtpTLSEnabled");
+        if (smtpTLSEnabledParam != null && !smtpTLSEnabledParam.trim().isEmpty()) {
+            smtpTLSEnabled = smtpTLSEnabledParam;
+        }
+        String smtpType = sgmsUtil.getCosmoParam("smtpType");
+        String smtpAuthUser = sgmsUtil.getCosmoParam("smtpAuthUser");
+        String smtpAuthPwd = sgmsUtil.getCosmoParam("smtpAuthPwd");
+        String Msg = "Authentication code Login Email from: " + fromAddress + " To: " + toAddress + " using mailServer: " + smtpServer + " through port: " + smtpPort;
+        GenericMLogRecord glr = GenericMLogger.getReference().createLogRecord(ETypeStore.getReference(ETypeStore.EVENT4EMAIL), Level.INFO, Msg);
+        glr.setSender(fromAddress);
+        glr.setRecipient(toAddress);
+        glr.setMailServer(smtpServer);
+        glr.setMailServerPort(smtpPort);
+        glr.setMailServerTLSEnabled(smtpTLSEnabled);
+        glr.setMailServerType(smtpType);
+        glr.setMailServerUser(smtpAuthUser);
+        glr.setMailServerPassword(smtpAuthPwd);
+        glr.setMessage(msg.toString());
+        glr.setSubject(subject);
+        glr.setFooter("Powered by ");
+        glr.setMailFormatType(2);
+        glr.setTableColData(null);
+        return client.sendLogMessage(glr, toAddress, product.getProductName());
+    }
+
+    private void getEmergencyCode(HttpServletRequest req, HttpServletResponse res, String user2, DomainInfo domainInfo) throws SQLException, IOException {
+        String domainID = domainInfo.getId();
+        String[] data = domainID != null ? userManager.getUserData(req.getSession().getId(), user2, domainID) : userManager.getUserData(req.getSession().getId(), user2);
+        if (data[34].equals("1")) {
+            res.setContentType("text/html");
+            res.getWriter().write("Emergency Code: " + data[35]);
+        }
+    }
+
+    private void genertateQrCode(HttpServletRequest req, HttpServletResponse res, String user2, DomainInfo domainInfo) throws SQLException, IOException, WriterException {
+        String domainID = domainInfo.getId();
+        String[] data = domainID != null ? userManager.getUserData(req.getSession().getId(), user2, domainID) : userManager.getUserData(req.getSession().getId(), user2);
+        String secretKey = data[36];
+        if (data[34].equals("1")) {
+            res.setContentType("image/png");
+            ServletOutputStream out = res.getOutputStream();
+            String host = SGMSUtil.getWebServiceHost();
+            if (host.startsWith("https://")) {
+                host = host.replace("https://", "");
+            }
+            if (host.contains(":")) {
+                host = host.substring(0, host.indexOf(":"));
+            }
+            out.write(TwoFactAuthUtil.generateQRCode(secretKey, user2 + "@" + domainInfo.getDomainName(), host));
+        } else {
+            res.setStatus(404);
+        }
+    }
+
     private boolean isUserTypeSupport(String strUserType) {
         boolean bSupportUserType = false;
         if (SGMSUtil.isHosted() && null != strUserType && (strUserType.equalsIgnoreCase("TSLEVEL1") || strUserType.equalsIgnoreCase("TSLEVEL2") || strUserType.equalsIgnoreCase("TSLEVEL3"))) {
@@ -1235,5 +1592,17 @@
         }
         return locale;
     }
+
+    static {
+        KeyStotreUtil.df = new SimpleDateFormat("MMYYYYddHHmm");
+        KeyStotreUtil.df.setTimeZone(TimeZone.getTimeZone("IST"));
+        seedTimeout = 120L;
+        AUTHENTICATED_PAGE = new String("/mainPage?page=mainPage");
+        TWO_FA_PAGE = new String("/twoFa.jsp");
+        CONFIRM_TWO_FA_PAGE = new String("/confirmTwoFa.jsp");
+        CHANGE_PASSWORD_PAGE = new String("/mainPage?page=mainPage");
+        isfirstRun = true;
+        logsManager = null;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/servlets/AutoSGMSLoginServlet.java decompiled-9.3.9330/com/sonicwall/sgms/servlets/AutoSGMSLoginServlet.java
--- decompiled-9.3.9320/com/sonicwall/sgms/servlets/AutoSGMSLoginServlet.java	2023-09-08 15:13:13.595786378 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/servlets/AutoSGMSLoginServlet.java	2023-09-08 15:14:40.515851192 -0700
@@ -105,9 +105,23 @@
             switch (action) {
                 case "admin_config": {
                     String newPassword = (String)req.getAttribute("newPassword");
-                    if (null == newPassword || newPassword.isEmpty()) break;
+                    if (null != newPassword && !newPassword.isEmpty()) {
                     manager.changePassword(newPassword);
                 }
+                    String is2faEnabled = req.getParameter("is2faEnabled");
+                    String secretKey = (String)req.getAttribute("SECRET_KEY");
+                    String emerCode = (String)req.getAttribute("EMERGENCY_CODE");
+                    SGMSUtil.debugOut((Object)"AutoSGMSLoginServlet.doPost(): SGMS Sync Recvd", 3);
+                    manager.change2faConfig(is2faEnabled, secretKey, emerCode);
+                    break;
+                }
+                case "confirm2FA": {
+                    String is2faEnabled = (String)req.getAttribute("IS2FA_ENABLED");
+                    String emerCode = (String)req.getAttribute("EMERGENCY_CODE");
+                    String secretKey = (String)req.getAttribute("SECRET_KEY");
+                    manager.change2faConfig(is2faEnabled, secretKey, emerCode);
+                    break;
+                }
             }
         }
     }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/servlets/EditUser.java decompiled-9.3.9330/com/sonicwall/sgms/servlets/EditUser.java
--- decompiled-9.3.9320/com/sonicwall/sgms/servlets/EditUser.java	2023-09-08 15:13:13.578785720 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/servlets/EditUser.java	2023-09-08 15:14:40.498872389 -0700
@@ -16,6 +16,7 @@
 import com.sonicwall.sgms.util.md;
 import java.io.IOException;
 import java.io.PrintWriter;
+import java.sql.SQLException;
 import java.util.Vector;
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServletRequest;
@@ -199,6 +200,7 @@
             }
         } else if (action.equals("updateUserGeneralInfo")) {
             String loggedInUserDomain;
+            boolean isUserSuperAdmin;
             String selectedDomainID = req.getParameter("domainID");
             if (null == selectedDomainID) {
                 selectedDomainID = domainID;
@@ -214,8 +216,21 @@
             String password = req.getParameter("pass");
             String userID = req.getParameter("id");
             String loggedInUser = (String)session.getAttribute("sgmsuser");
-            boolean isUserSuperAdmin = um.isUserSuperAdmin(userID, selectedDomainID);
-            if (isUserSuperAdmin && !um.isUserSuperAdmin(loggedInUser, loggedInUserDomain = (String)session.getAttribute("domainID"))) {
+            String userId = req.getParameter("id");
+            String is2faEnabled = req.getParameter("is2faEnabled");
+            if (is2faEnabled.equals("1")) {
+                try {
+                    String[] data = userManager.getUserData(sessionID, userId, domainID);
+                    String cur2faEnabled = data[34];
+                    if (cur2faEnabled.equals("1") || cur2faEnabled.equals("2")) {
+                        is2faEnabled = "";
+                    }
+                }
+                catch (SQLException e) {
+                    e.printStackTrace();
+                }
+            }
+            if ((isUserSuperAdmin = um.isUserSuperAdmin(userID, selectedDomainID)) && !um.isUserSuperAdmin(loggedInUser, loggedInUserDomain = (String)session.getAttribute("domainID"))) {
                 PrintWriter out = res.getWriter();
                 out.println("SuperAdminInfo");
                 return;
@@ -247,7 +262,6 @@
                 if (out == null) {
                     return;
                 }
-                String userId = req.getParameter("id");
                 String fname = req.getParameter("fname");
                 String mi = req.getParameter("mi");
                 String lname = req.getParameter("lname");
@@ -272,7 +286,7 @@
                 String scheduleID = req.getParameter("scheduleID");
                 String active = req.getParameter("active");
                 String isUpdateReportReceiver = req.getParameter("isUpdateReportReceiver");
-                User user2 = new User.UserBuilder(fname, mi, lname).userId(userId).phone(phone).fax(fax).idleTimeout(idleTimeout).domainId(domainId).daysToStore(daystoStore).authServerId(authServerID).email1(email1).email2(email2).pager(pager).viewId(viewid).comment(comment).isSuperAdmin(superAdmin).disabled(disabled).password(passwd).needPwdChange(needPwdChange).autoDelete(autoDelete).activeTill(activeTill).scheduleId(scheduleID).active(active).updateReportReceiver(isUpdateReportReceiver).createUser();
+                User user2 = new User.UserBuilder(fname, mi, lname).userId(userId).phone(phone).fax(fax).idleTimeout(idleTimeout).domainId(domainId).daysToStore(daystoStore).authServerId(authServerID).email1(email1).email2(email2).pager(pager).viewId(viewid).comment(comment).isSuperAdmin(superAdmin).disabled(disabled).password(passwd).needPwdChange(needPwdChange).autoDelete(autoDelete).activeTill(activeTill).scheduleId(scheduleID).active(active).updateReportReceiver(isUpdateReportReceiver).is2faEnabled(is2faEnabled).createUser();
                 try {
                     um.appletUpdateUserGeneralInfo(user2, out);
                 }
@@ -288,7 +302,6 @@
                 if (out == null) {
                     return;
                 }
-                String userId = req.getParameter("id");
                 String fname = req.getParameter("fname");
                 String mi = req.getParameter("mi");
                 String lname = req.getParameter("lname");
@@ -313,7 +326,7 @@
                 String scheduleID = req.getParameter("scheduleID");
                 String active = req.getParameter("active");
                 String isUpdateReportReceiver = req.getParameter("isUpdateReportReceiver");
-                User user3 = new User.UserBuilder(fname, mi, lname).userId(userId).phone(phone).fax(fax).idleTimeout(idleTimeout).domainId(domainId).daysToStore(daystoStore).authServerId(authServerID).email1(email1).email2(email2).pager(pager).viewId(viewid).comment(comment).isSuperAdmin(superAdmin).disabled(disabled).password(passwd).needPwdChange(needPwdChange).autoDelete(autoDelete).activeTill(activeTill).scheduleId(scheduleID).active(active).updateReportReceiver(isUpdateReportReceiver).createUser();
+                User user3 = new User.UserBuilder(fname, mi, lname).userId(userId).phone(phone).fax(fax).idleTimeout(idleTimeout).domainId(domainId).daysToStore(daystoStore).authServerId(authServerID).email1(email1).email2(email2).pager(pager).viewId(viewid).comment(comment).isSuperAdmin(superAdmin).disabled(disabled).password(passwd).needPwdChange(needPwdChange).autoDelete(autoDelete).activeTill(activeTill).scheduleId(scheduleID).active(active).updateReportReceiver(isUpdateReportReceiver).is2faEnabled(is2faEnabled).createUser();
                 try {
                     um.appletUpdateUserGeneralInfo(user3, out);
                 }
@@ -321,6 +334,29 @@
                     out.println(e.getMessage());
                 }
             }
+            if (is2faEnabled != null && !is2faEnabled.equals("0")) {
+                String[] data = null;
+                if (domainID != null) {
+                    try {
+                        data = um.getUserData(req.getSession().getId(), req.getParameter("id"), domainID);
+                    }
+                    catch (SQLException e) {
+                        e.printStackTrace();
+                    }
+                } else {
+                    try {
+                        data = um.getUserData(req.getSession().getId(), req.getParameter("id"));
+                    }
+                    catch (SQLException e) {
+                        e.printStackTrace();
+                    }
+                }
+                req.setAttribute(UserManager.columns[36], data[36]);
+                req.setAttribute(UserManager.columns[35], data[35]);
+            }
+            if (um.isUserSuperAdmin(userId, "DMN0000000000000000000000001") && "admin".equalsIgnoreCase(userId) && "DMN0000000000000000000000001".equalsIgnoreCase(domainID)) {
+                um.sync2FAConfigWithAppliance(req, res);
+            }
         } else if (action.equals("updateUserTypeGeneralInfo")) {
             if (!updatePermission) {
                 this.sendPermissionError(res);
@@ -489,6 +525,11 @@
             res.setHeader("Cache-Control", "no-cache");
             PrintWriter out = res.getWriter();
             out.println(isUserAdmin);
+        } else if (action.equals("reset2FA")) {
+            String userID = (String)session.getAttribute("sgmsuser");
+            int result = um.reset2faForUser(sessionID, userID, domainID);
+            PrintWriter out = res.getWriter();
+            out.println(result);
         }
     }
 
@@ -529,6 +570,7 @@
         ActionParam isFreshInstall7Action = new ActionParam("isFreshInstall7", "SuperUser=true DomainAdmin=true RegularUser=true", "SuperUser=true DomainAdmin=true RegularUser=true");
         ActionParam isDataPrivacyEnforcedAction = new ActionParam("isDataPrivacyEnforced", "SuperUser=true DomainAdmin=true RegularUser=true", "SuperUser=true DomainAdmin=true RegularUser=true");
         ActionParam isDomainAdminAction = new ActionParam("isDomainAdmin", "SuperUser=true DomainAdmin=true RegularUser=true", "SuperUser=true DomainAdmin=true RegularUser=true");
+        ActionParam reset2faAction = new ActionParam("reset2FA", "SuperUser=true DomainAdmin=true RegularUser=false", "SuperUser=true DomainAdmin=true RegularUser=false");
         this.supportedActions.add(noAction);
         this.supportedActions.add(updateNodesAction);
         this.supportedActions.add(getUserGeneralInfoAction);
@@ -561,6 +603,7 @@
         this.supportedActions.add(isFreshInstall7Action);
         this.supportedActions.add(isDataPrivacyEnforcedAction);
         this.supportedActions.add(isDomainAdminAction);
+        this.supportedActions.add(reset2faAction);
     }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/servlets/InitParameter.java decompiled-9.3.9330/com/sonicwall/sgms/servlets/InitParameter.java
--- decompiled-9.3.9320/com/sonicwall/sgms/servlets/InitParameter.java	2023-09-08 15:13:13.581785836 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/servlets/InitParameter.java	2023-09-08 15:14:40.500869895 -0700
@@ -77,7 +77,19 @@
         } else {
             SGMSUtil.debugOut("InitParameter.init(): " + htRes.get(ConfigFileReaderUtil.MSG).toString());
         }
-        HashMap configParameterRes = ConfigFileReaderUtil.getConfigParameter(ht, "dbtype");
+        HashMap configParameterRes = ConfigFileReaderUtil.getConfigParameter(ht, "installDir");
+        if (Boolean.parseBoolean(configParameterRes.get(ConfigFileReaderUtil.STATUS).toString())) {
+            String strDir = configParameterRes.get(ConfigFileReaderUtil.PARAM_VALUE).toString();
+            if (!strDir.equals("")) {
+                if (strDir.endsWith("/") || strDir.endsWith("\\")) {
+                    strDir = strDir.substring(0, strDir.length() - 1);
+                }
+                SharedUtils.INSTALL_PATH = installDir = strDir + File.separator;
+            }
+        } else {
+            SGMSUtil.debugOut("InitParameter.init(): " + configParameterRes.get(ConfigFileReaderUtil.MSG).toString());
+        }
+        configParameterRes = ConfigFileReaderUtil.getConfigParameter(ht, "dbtype");
         if (Boolean.parseBoolean(configParameterRes.get(ConfigFileReaderUtil.STATUS).toString())) {
             dbtype = configParameterRes.get(ConfigFileReaderUtil.PARAM_VALUE).toString();
         } else {
@@ -194,18 +206,6 @@
         }
         String debug = temp;
         SGMSUtil.setDebugMode(Integer.parseInt(temp));
-        configParameterRes = ConfigFileReaderUtil.getConfigParameter(ht, "installDir");
-        if (Boolean.parseBoolean(configParameterRes.get(ConfigFileReaderUtil.STATUS).toString())) {
-            String strDir = configParameterRes.get(ConfigFileReaderUtil.PARAM_VALUE).toString();
-            if (!strDir.equals("")) {
-                if (strDir.endsWith("/") || strDir.endsWith("\\")) {
-                    strDir = strDir.substring(0, strDir.length() - 1);
-                }
-                SharedUtils.INSTALL_PATH = installDir = strDir + File.separator;
-            }
-        } else {
-            SGMSUtil.debugOut("InitParameter.init(): " + configParameterRes.get(ConfigFileReaderUtil.MSG).toString());
-        }
         SGMSUtil.debugOut("SGMS init parameters-------------------------------------");
         SGMSUtil.debugOut("\tdbtype=" + dbtype);
         SGMSUtil.debugOut("\tdbhost=" + dbhost);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/servlets/mainPage.java decompiled-9.3.9330/com/sonicwall/sgms/servlets/mainPage.java
--- decompiled-9.3.9320/com/sonicwall/sgms/servlets/mainPage.java	2023-09-08 15:13:13.577785682 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/servlets/mainPage.java	2023-09-08 15:14:40.497873636 -0700
@@ -64,7 +64,6 @@
 import com.sonicwall.sgms.servlets.SgmsBaseServlet;
 import com.sonicwall.sgms.servlets.StatusUpdate;
 import com.sonicwall.sgms.template.repository.TemplateManager;
-import com.sonicwall.sgms.util.Base64;
 import com.sonicwall.sgms.util.ConfigFileReader;
 import com.sonicwall.sgms.util.ConfigFileReaderUtil;
 import com.sonicwall.sgms.util.MultipartRequestUtil;
@@ -89,6 +88,7 @@
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.text.SimpleDateFormat;
+import java.util.Base64;
 import java.util.Date;
 import java.util.Enumeration;
 import java.util.HashMap;
@@ -1144,7 +1144,7 @@
                         ScreenServiceUtil.showUnavailabilityPage("Client CF Enforcement", res);
                         return;
                     }
-                } else if (screen_id.equals("10497") || screen_id.equals("10498")) {
+                } else if (screen_id.equals("10497") || screen_id.equals("10498") || screen_id.equals("10499")) {
                     boolean isATPEnabled = this.isServiceEnabled(req, pm, node_id, "SBX");
                     boolean isIDPEnabled = this.isServiceEnabled(req, pm, node_id, "IDP");
                     if (!isATPEnabled || !isIDPEnabled) {
@@ -1375,7 +1375,7 @@
                     return;
                 }
             }
-            if (screen_id != null && session_id != null && node_id != null && level != null && (screen_id.equals("9060") || screen_id.equals("9065") || screen_id.equals("9069") || screen_id.equals("9070") || screen_id.equals("12011") || screen_id.equals("10880") || screen_id.equals("10455") || screen_id.equals("11520") || screen_id.equals("12035") || "12039".equals(screen_id) || screen_id.equals("12040") || screen_id.equals("10500") || screen_id.equals("11010") || screen_id.equals("11005") || "10882".equals(screen_id) || screen_id.equals("11020") || "12022".equals(screen_id) || "10883".equals(screen_id) || "12560".equals(screen_id) || "1028".equals(screen_id) || "10027".equals(screen_id) || "12920".equals(screen_id) || screen_id.equals("11007") || "12030".equals(screen_id))) {
+            if (screen_id != null && session_id != null && node_id != null && level != null && (screen_id.equals("9060") || screen_id.equals("9065") || screen_id.equals("9069") || screen_id.equals("9070") || screen_id.equals("12011") || screen_id.equals("10880") || screen_id.equals("10455") || screen_id.equals("11520") || screen_id.equals("12035") || "12039".equals(screen_id) || screen_id.equals("12040") || screen_id.equals("10500") || screen_id.equals("11010") || screen_id.equals("11005") || "10882".equals(screen_id) || screen_id.equals("11020") || "12022".equals(screen_id) || "10883".equals(screen_id) || "12560".equals(screen_id) || "1028".equals(screen_id) || "10027".equals(screen_id) || "12920".equals(screen_id) || screen_id.equals("11007") || "12030".equals(screen_id) || "10350".equals(screen_id) || "12065".equals(screen_id) || "12020".equals(screen_id) || "12070".equals(screen_id) || "12075".equals(screen_id) || "10495".equals(screen_id) || "10499".equals(screen_id) || "12220".equals(screen_id) || "12085".equals(screen_id))) {
                 if (!SGMSUtil.isEPRS() && (screen_id.equals("11010") || screen_id.equals("11020"))) {
                     String userRadiusSelection;
                     boolean showFlag = false;
@@ -2707,10 +2707,10 @@
         String parentID = req.getParameter("parent_id");
         String viewID = req.getParameter("view_id");
         String inheritOption = req.getParameter("inheritOption");
-        String fwuObjStr = req.getParameter("fwuObjs");
+        try {
+            String fwuObjStr = new String(Base64.getDecoder().decode(req.getParameter("fwuObjs")), "UTF-8");
         InheritanceDependencyHandler inheritanceDepHandler = new InheritanceDependencyHandler(nodeID, parentID, viewID, inheritOption);
         String retJsonStr = inheritanceDepHandler.processDependenciesAndGetJsonStr(fwuObjStr);
-        try {
             res.getWriter().write(retJsonStr);
         }
         catch (IOException e) {
@@ -2750,7 +2750,7 @@
                     pwd = rs.getString("PASSWORD");
                     String pwd_enc = rs.getString("PASSWORD_ENC");
                     pwd = "1".equals(pwd_enc) ? SGMSUtil.decrypt(pwd) : pwd;
-                    pwd = Base64.encodeUsingJdk8(pwd.getBytes());
+                    pwd = com.sonicwall.sgms.util.Base64.encodeUsingJdk8(pwd.getBytes());
                 }
             }
             catch (SQLException e) {
@@ -2886,10 +2886,10 @@
      */
     private JsonObject getSwitchProductModel(String model) {
         JsonObject obj = new JsonObject();
-        String sqlStr = "select productName, numIfaces, poeCapable, isNSeries from " + DataBaseConnectionPool.getTablePrefix() + "switch_product_model where productName = '" + model + "'";
+        String sqlStr = "select productName, numIfaces, poeCapable, isNSeries from " + DataBaseConnectionPool.getTablePrefix() + "switch_product_model where productName = ?";
         ResultSet rs = null;
         try {
-            rs = ParamsManager.executeQuery(sqlStr);
+            rs = ParamsManager.executeQueryPS(sqlStr, new String[]{model});
             while (rs.next()) {
                 obj.addProperty("model", rs.getString("productName"));
                 obj.addProperty("iface", rs.getString("numIfaces"));
@@ -2898,11 +2898,16 @@
             }
         }
         catch (SQLException sqle) {
+            try {
             SGMSUtil.debugOut("main page: Exception occured while retrieving data from table: SWITCH_PRODUCT_MODEL for Node ID");
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
         return obj;
     }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/tenant/license/TenantUnitLicenseService.java decompiled-9.3.9330/com/sonicwall/sgms/tenant/license/TenantUnitLicenseService.java
--- decompiled-9.3.9320/com/sonicwall/sgms/tenant/license/TenantUnitLicenseService.java	2023-09-08 15:13:12.449742042 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/tenant/license/TenantUnitLicenseService.java	2023-09-08 15:14:39.310356224 -0700
@@ -67,21 +67,28 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     private HashMap<String, TenantUnitLicense> readFromDB(String query) {
+        HashMap<String, TenantUnitLicense> hashMap;
         ResultSet rs = null;
         try {
-            rs = TableManager.executeQueryPS(query, null);
-            HashMap<String, TenantUnitLicense> hashMap = this.populateLicenses(rs);
-            return hashMap;
+            rs = TableManager.executeQueryPS(query, new String[0]);
+            hashMap = this.populateLicenses(rs);
         }
         catch (SQLException e) {
+            HashMap<String, TenantUnitLicense> hashMap2;
+            try {
             log.log("TenantUnitLicenseService", "readFromDB", e);
             SGMSUtil.debugOut("TenantUnitLicenseService:readFromDB(): Error while reading tenant unit licenses");
-            HashMap<String, TenantUnitLicense> hashMap = new HashMap<String, TenantUnitLicense>();
-            return hashMap;
+                hashMap2 = new HashMap<String, TenantUnitLicense>();
         }
-        finally {
+            catch (Throwable throwable) {
             rs = DataBaseConnectionPool.freeResultSet(rs);
+                throw throwable;
         }
+            rs = DataBaseConnectionPool.freeResultSet(rs);
+            return hashMap2;
+        }
+        rs = DataBaseConnectionPool.freeResultSet(rs);
+        return hashMap;
     }
 
     private HashMap<String, TenantUnitLicense> populateLicenses(ResultSet rs) throws SQLException {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/updaterd/StatusUpdateService.java decompiled-9.3.9330/com/sonicwall/sgms/updaterd/StatusUpdateService.java
--- decompiled-9.3.9320/com/sonicwall/sgms/updaterd/StatusUpdateService.java	2023-09-08 15:13:13.069766028 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/updaterd/StatusUpdateService.java	2023-09-08 15:14:40.015475899 -0700
@@ -463,8 +463,9 @@
         if (this.m_bDoUpdatesFirstRun) {
             this.m_bPerformAssociation = true;
             this.m_bPerformECMReleasesFetch = true;
-            String enforcePwdSecurity = sgmsUtil.getCosmoParam("enforcePasswordSecurity");
+            String enforcePwdSecurity = sgmsUtil.getCosmoParam("enforcePasswordSecurity", "1");
             if (enforcePwdSecurity != null && enforcePwdSecurity.equals("1")) {
+                sgmsUtil.setCosmoParam("enforcePasswordSecurity", "1");
                 sgmsUtil.setCosmoParam("CNEPVLS", SGMSUtil.encrypt("1"));
             }
         } else if (!this.m_bDoUpdatesFirstRun && this.m_bEpaidChanged) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/AESUtil.java decompiled-9.3.9330/com/sonicwall/sgms/util/AESUtil.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/AESUtil.java	2023-09-08 15:13:13.334776280 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/AESUtil.java	2023-09-08 15:14:40.299121773 -0700
@@ -3,68 +3,182 @@
  */
 package com.sonicwall.sgms.util;
 
-import com.sonicwall.sgms.util.SGMSUtil;
+import com.sonicwall.sgms.util.KeyStotreUtil;
+import java.io.IOException;
+import java.security.InvalidAlgorithmParameterException;
+import java.security.InvalidKeyException;
 import java.security.Key;
+import java.security.KeyFactory;
+import java.security.KeyStoreException;
+import java.security.NoSuchAlgorithmException;
+import java.security.PublicKey;
+import java.security.UnrecoverableKeyException;
+import java.security.cert.CertificateException;
+import java.security.spec.X509EncodedKeySpec;
+import java.text.SimpleDateFormat;
+import java.util.Base64;
+import java.util.TimeZone;
 import javax.crypto.Cipher;
+import javax.crypto.NoSuchPaddingException;
 import javax.crypto.spec.IvParameterSpec;
 import javax.crypto.spec.SecretKeySpec;
-import org.apache.commons.codec.binary.Base64;
 
-public class AESUtil {
-    private static final String key = "J7dKs+HRz7AQEgeYLbMTfA==";
-    private static final String initVectorStr = "dVTk1bnc3M8sDsJL7vfXnQ==";
+public class AESUtil
+extends KeyStotreUtil {
     private static Cipher encipher = null;
     private static Cipher decipher = null;
 
-    private AESUtil() {
+    protected AESUtil() {
     }
 
-    private static Cipher getCipherInstance(int mode) {
+    private static synchronized Cipher getDefaultCipherInstance(int mode) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, InvalidAlgorithmParameterException, UnrecoverableKeyException, KeyStoreException, CertificateException, IOException {
         Cipher cipher = null;
-        try {
-            byte[] initVector = Base64.decodeBase64(initVectorStr.getBytes("UTF-8"));
-            byte[] keyBytes = Base64.decodeBase64(key.getBytes("UTF-8"));
+        byte[] initVector = KeyStotreUtil.getBytesFromLocalKeyStore(AES_IV);
+        byte[] keyBytes = KeyStotreUtil.getBytesFromLocalKeyStore(AES_KEY);
             IvParameterSpec iv = new IvParameterSpec(initVector);
             SecretKeySpec skeySpec = new SecretKeySpec(keyBytes, "AES");
             cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
             cipher.init(mode, (Key)skeySpec, iv);
+        return cipher;
+    }
+
+    public static String encrypt(String plaintext) {
+        try {
+            byte[] initVector = org.apache.commons.codec.binary.Base64.decodeBase64(KeyStotreUtil.getValueFromKeystore(AES_IV).getBytes("UTF-8"));
+            byte[] keyBytes = org.apache.commons.codec.binary.Base64.decodeBase64(KeyStotreUtil.getValueFromKeystore(AES_KEY).getBytes("UTF-8"));
+            IvParameterSpec iv = new IvParameterSpec(initVector);
+            SecretKeySpec skeySpec = new SecretKeySpec(keyBytes, "AES");
+            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
+            cipher.init(1, (Key)skeySpec, iv);
+            byte[] encrypted = cipher.doFinal(plaintext.getBytes("UTF-8"));
+            encrypted = org.apache.commons.codec.binary.Base64.encodeBase64(encrypted);
+            return new String(encrypted, "UTF-8");
         }
         catch (Exception e) {
-            SGMSUtil.debugOut((Object)("Error occurred while Instantiating Cipher: " + e.getMessage()), 3);
-            SGMSUtil.printStackTrace(e);
+            System.err.println("Error : encrypt : " + e.getMessage());
+            return null;
         }
-        return cipher;
     }
 
-    public static String encrypt(String plaintext) {
+    public static String encryptLocal(String plaintext) {
+        try {
+            if (KeyStotreUtil.hasLocalKeyStore()) {
         if (encipher == null) {
-            encipher = AESUtil.getCipherInstance(1);
+                    encipher = AESUtil.getDefaultCipherInstance(1);
         }
-        try {
             byte[] encrypted = encipher.doFinal(plaintext.getBytes("UTF-8"));
-            encrypted = Base64.encodeBase64(encrypted);
+                encrypted = org.apache.commons.codec.binary.Base64.encodeBase64(encrypted);
             return new String(encrypted, "UTF-8");
         }
+        }
         catch (Exception ex) {
-            SGMSUtil.debugOut((Object)("Error occurred while Encrypting Data: " + ex.getMessage()), 3);
-            SGMSUtil.printStackTrace(ex);
+            System.err.println("Error : encryptLocal : " + ex.getMessage());
+            ex.printStackTrace();
+        }
+        return null;
+    }
+
+    public static String encryptWithKey(String plaintext, String encryptionKey) {
+        try {
+            byte[] initVector = KeyStotreUtil.reduceTo16(org.apache.commons.codec.binary.Base64.decodeBase64(AESUtil.reverse(encryptionKey).getBytes("UTF-8")));
+            byte[] keyBytes = KeyStotreUtil.reduceTo16(org.apache.commons.codec.binary.Base64.decodeBase64(encryptionKey.getBytes("UTF-8")));
+            IvParameterSpec iv = new IvParameterSpec(initVector);
+            SecretKeySpec skeySpec = new SecretKeySpec(keyBytes, "AES");
+            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
+            cipher.init(1, (Key)skeySpec, iv);
+            byte[] encrypted = cipher.doFinal(plaintext.getBytes("UTF-8"));
+            encrypted = org.apache.commons.codec.binary.Base64.encodeBase64(encrypted);
+            return new String(encrypted, "UTF-8");
+        }
+        catch (Exception e) {
+            System.err.println("Error : encryptWithKey : " + e.getMessage());
             return null;
         }
     }
 
-    public static String decrypt(String encrypted) {
+    public static String decryptLocal(String encrypted) {
+        try {
         if (decipher == null) {
-            decipher = AESUtil.getCipherInstance(2);
+                decipher = AESUtil.getDefaultCipherInstance(2);
+            }
+            byte[] original = decipher.doFinal(org.apache.commons.codec.binary.Base64.decodeBase64(encrypted.getBytes()));
+            return new String(original, "UTF-8");
+        }
+        catch (Exception e) {
+            System.err.println("Error : decryptLocal : " + e.getMessage());
+            return null;
+        }
         }
+
+    public static String decryptWithKey(String encrypted, String decryptionKey) {
+        try {
+            byte[] initVector = KeyStotreUtil.reduceTo16(org.apache.commons.codec.binary.Base64.decodeBase64(AESUtil.reverse(decryptionKey).getBytes("UTF-8")));
+            byte[] keyBytes = KeyStotreUtil.reduceTo16(org.apache.commons.codec.binary.Base64.decodeBase64(decryptionKey.getBytes("UTF-8")));
+            IvParameterSpec iv = new IvParameterSpec(initVector);
+            SecretKeySpec skeySpec = new SecretKeySpec(keyBytes, "AES");
+            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
+            cipher.init(2, (Key)skeySpec, iv);
+            byte[] original = cipher.doFinal(org.apache.commons.codec.binary.Base64.decodeBase64(encrypted.getBytes()));
+            return new String(original, "UTF-8");
+        }
+        catch (Exception e) {
+            System.err.println("Error : decryptWithKey : " + e.getMessage());
+            return null;
+        }
+    }
+
+    public static String decrypt(String encrypted) {
         try {
-            byte[] original = decipher.doFinal(Base64.decodeBase64(encrypted.getBytes()));
+            byte[] initVector = org.apache.commons.codec.binary.Base64.decodeBase64(KeyStotreUtil.getValueFromKeystore(AES_IV).getBytes("UTF-8"));
+            byte[] keyBytes = org.apache.commons.codec.binary.Base64.decodeBase64(KeyStotreUtil.getValueFromKeystore(AES_KEY).getBytes("UTF-8"));
+            IvParameterSpec iv = new IvParameterSpec(initVector);
+            SecretKeySpec skeySpec = new SecretKeySpec(keyBytes, "AES");
+            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
+            cipher.init(2, (Key)skeySpec, iv);
+            byte[] original = cipher.doFinal(org.apache.commons.codec.binary.Base64.decodeBase64(encrypted.getBytes()));
             return new String(original, "UTF-8");
         }
         catch (Exception e) {
-            SGMSUtil.debugOut((Object)("Error occurred while Decrypting Data: " + e.getMessage()), 3);
-            SGMSUtil.printStackTrace(e);
+            System.err.println("Error : decrypt--- : " + e.getMessage());
+            return null;
+        }
+    }
+
+    private static PublicKey getPublicKey() {
+        try {
+            String publicKeyString = KeyStotreUtil.getValueFromKeystore("gms_appliance_rsa_public_key");
+            byte[] publicKeyBytes = Base64.getDecoder().decode(publicKeyString);
+            X509EncodedKeySpec keySpec = new X509EncodedKeySpec(publicKeyBytes);
+            KeyFactory keyFactory = KeyFactory.getInstance("RSA");
+            return keyFactory.generatePublic(keySpec);
+        }
+        catch (Exception e) {
+            System.out.println("Public Key Error");
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    public static String decryptUsingRSA(byte[] text) {
+        try {
+            Cipher cipher = Cipher.getInstance("RSA");
+            cipher.init(2, AESUtil.getPublicKey());
+            return new String(cipher.doFinal(text));
+        }
+        catch (Exception e) {
+            System.out.println("encyrpt logic error");
+            e.printStackTrace();
             return null;
         }
     }
+
+    public static String decryptUsingRSA(String text) {
+        return AESUtil.decryptUsingRSA(Base64.getDecoder().decode(text));
+    }
+
+    static {
+        df = new SimpleDateFormat("MMYYYYddHHmm");
+        df.setTimeZone(TimeZone.getTimeZone("IST"));
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/DatabaseDomainUtil.java decompiled-9.3.9330/com/sonicwall/sgms/util/DatabaseDomainUtil.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/DatabaseDomainUtil.java	2023-09-08 15:13:13.202771174 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/DatabaseDomainUtil.java	2023-09-08 15:14:40.163291354 -0700
@@ -261,7 +261,7 @@
         String tableName = null;
         try {
             SGMSUtil.debugOut("Query - " + query);
-            rs = TableManager.executeQueryPS(query, null);
+            rs = TableManager.executeQuery(query);
             if (null != rs) {
                 while (rs.next()) {
                     tableName = DataBaseConnectionPool.getTablePrefix() + rs.getString(1);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/DataBaseWriter.java decompiled-9.3.9330/com/sonicwall/sgms/util/DataBaseWriter.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/DataBaseWriter.java	2023-09-08 15:13:13.385778253 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/DataBaseWriter.java	2023-09-08 15:14:40.341069403 -0700
@@ -5,12 +5,12 @@
 
 import com.sonicwall.sgms.database.DataBaseConnectionPool;
 import com.sonicwall.sgms.util.DataWriter;
+import com.sonicwall.sgms.util.InstanceIPAddressProvider;
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.sgms.util.SgmsException;
 import com.sonicwall.viewpoint.common.service.ConfigurationService;
 import com.sonicwall.viewpoint.common.service.DatabaseService;
 import com.sonicwall.viewpoint.common.service.InstanceMappingService;
-import com.sonicwall.viewpoint.ng.util.NGConstants;
 import com.sonicwall.viewpoint.ng.util.SummarizerRawTableUtil;
 import com.sonicwall.viewpoint.summarizedata.etl.ETLProcess;
 import com.sonicwall.viewpoint.summarizedata.etl.dao.ApplianceDAO;
@@ -20,6 +20,7 @@
 import com.sonicwall.viewpoint.summarizedata.etl.scheduler.NodeSummarizerTask;
 import com.sonicwall.viewpoint.summarizedata.service.ThisSummarizer;
 import com.sonicwall.viewpoint.summarizedata.service.ViewpointManager;
+import com.sonicwall.viewpoint.util.ViewpointUtil;
 import java.io.File;
 import java.io.IOException;
 import java.sql.Connection;
@@ -30,6 +31,7 @@
 import java.sql.SQLTimeoutException;
 import java.sql.Statement;
 import java.sql.Timestamp;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.HashMap;
@@ -47,6 +49,9 @@
     String syslogPath = null;
     private static ArrayList<String> rawSchemas = new ArrayList();
     private static HashSet<String> sgmsVpngSerialSummaryStatusTables = new HashSet();
+    private static SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");
+    private static SimpleDateFormat reportDateFormat = new SimpleDateFormat("yy-MM-dd");
+    private static Map<String, Integer> loadIntoDailyTableMap = new HashMap<String, Integer>();
 
     public DataBaseWriter(ConcurrentHashMap<String, LoadFileWriter> loadFiles, HashSet<String> uniqueDateStrings, String createTableDDL, HashMap<Long, ArrayList<String>> appliancesToDates) {
         this.loadFiles = loadFiles;
@@ -160,9 +165,9 @@
         Connection conn;
         int size;
         long startTime;
-        block90: {
+        block75: {
             LoadFileWriter loadFileWriter;
-            block91: {
+            block76: {
                 startTime = System.currentTimeMillis();
                 size = this.loadFiles.size();
                 conn = null;
@@ -196,24 +201,13 @@
                         throw ex;
                     }
                     boolean result = true;
+                    String dailyTableName = dateFormat.format(new Date());
+                    String reportDate = reportDateFormat.format(new Date());
+                    boolean loadIntoDailyTable = this.loadDataIntoDailyTable(new Date());
                     SGMSUtil.debugOut((Object)"DataBaseWriter.write() - starting file processing ", 5);
                     for (Map.Entry<String, LoadFileWriter> loadFile : this.loadFiles.entrySet()) {
-                        String fileName;
-                        block92: {
-                            String table;
-                            block95: {
-                                String prefix;
-                                block93: {
-                                    boolean isSerialSchemaEnabled;
-                                    block101: {
-                                        block100: {
-                                            block99: {
-                                                block98: {
-                                                    block97: {
-                                                        block96: {
-                                                            block94: {
                                                                 loadFileWriter = loadFile.getValue();
-                                                                fileName = loadFile.getKey();
+                        String fileName = loadFile.getKey();
                                                                 if (fileName.startsWith("common")) {
                                                                     yyyymm = fileName.replaceFirst("common_", "");
                                                                     serial = "public";
@@ -230,7 +224,7 @@
                                                                     loadFileWriter.writer.close();
                                                                 }
                                                                 boolean bl = result = fileName.startsWith("common") ? true : DataBaseWriter.outDatedFileCheck(yyyymm);
-                                                                if (!result) break block92;
+                        if (result) {
                                                                 if (!rawSchemas.contains(serial) && ETLProcess.isSerialSchemaEnabled) {
                                                                     String schemaExists = "f";
                                                                     try {
@@ -256,72 +250,20 @@
                                                                     }
                                                                     rawSchemas.add(serial);
                                                                 }
-                                                                table = (ETLProcess.isSerialSchemaEnabled ? "syslogs." + serial + "." : "") + "raw_" + yyyymm;
-                                                                prefix = "";
+                            String table = loadIntoDailyTable ? "raw_" + dailyTableName : "raw_" + yyyymm;
+                            SGMSUtil.debugOut((Object)("DataBaseWriter.write() Table and DailyTableNamee : " + table + " " + dailyTableName), 5);
+                            if (ETLProcess.isSerialSchemaEnabled) {
+                                table = "syslogs." + serial + "." + "raw_" + yyyymm;
+                            }
+                            String prefix = "";
                                                                 prefix = SummarizerRawTableUtil.getInstance().getPrefixFromRawTableVersion(ThisSummarizer.getInstance().getColumnValue(13), table);
                                                                 if (fileName.startsWith("common")) {
                                                                     prefix = SummarizerRawTableUtil.getInstance().getLeastVersionPrefixForMonth(loadFileWriter.yyyymm);
                                                                 }
-                                                                isSerialSchemaEnabled = SummarizerRawTableUtil.getInstance().isSerialSchemaEnabled();
-                                                                if (SGMSUtil.isEPRS()) break block93;
-                                                                if (!prefix.equalsIgnoreCase("V70")) break block94;
-                                                                this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V70 : NGConstants.CREATE_TABLE_V70_PG;
-                                                                break block95;
-                                                            }
-                                                            if (!prefix.equalsIgnoreCase("V72")) break block96;
-                                                            this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V72 : NGConstants.CREATE_TABLE_V72_PG;
-                                                            break block95;
-                                                        }
-                                                        if (!prefix.equalsIgnoreCase("V80")) break block97;
-                                                        this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V80 : NGConstants.CREATE_TABLE_V80_PG;
-                                                        break block95;
-                                                    }
-                                                    if (!prefix.equalsIgnoreCase("V81")) break block98;
-                                                    this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V81 : NGConstants.CREATE_TABLE_V81_PG;
-                                                    break block95;
-                                                }
-                                                if (!prefix.equalsIgnoreCase("V812")) break block99;
-                                                this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V812 : NGConstants.CREATE_TABLE_V812_PG;
-                                                break block95;
-                                            }
-                                            if (!prefix.equalsIgnoreCase("V82")) break block100;
-                                            this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V82 : NGConstants.CREATE_TABLE_V82_PG;
-                                            break block95;
-                                        }
-                                        if (!prefix.equalsIgnoreCase("V86")) break block101;
-                                        this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V86 : NGConstants.CREATE_TABLE_V86_PG;
-                                        break block95;
-                                    }
-                                    if (prefix.equalsIgnoreCase("V87") && isSerialSchemaEnabled) {
-                                        this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V87S : NGConstants.CREATE_TABLE_V87S_PG;
-                                        break block95;
-                                    } else if (prefix.equalsIgnoreCase("V87") && !isSerialSchemaEnabled) {
-                                        this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V87P : NGConstants.CREATE_TABLE_V87P_PG;
-                                    }
-                                    break block95;
-                                }
-                                if (prefix.equalsIgnoreCase("V70")) {
-                                    this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS : NGConstants.CREATE_TABLE_EPRS_PG;
-                                } else if (prefix.equalsIgnoreCase("V72")) {
-                                    this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_72 : NGConstants.CREATE_TABLE_EPRS_72_PG;
-                                } else if (prefix.equalsIgnoreCase("V80")) {
-                                    this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_80 : NGConstants.CREATE_TABLE_EPRS_80_PG;
-                                } else if (prefix.equalsIgnoreCase("V81")) {
-                                    this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_81 : NGConstants.CREATE_TABLE_EPRS_81_PG;
-                                } else if (prefix.equalsIgnoreCase("V812")) {
-                                    this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_812 : NGConstants.CREATE_TABLE_EPRS_812_PG;
-                                } else if (prefix.equalsIgnoreCase("V82")) {
-                                    String string = this.createTableDDL = this.ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_82 : NGConstants.CREATE_TABLE_EPRS_82_PG;
-                                }
-                            }
-                            if (this.ibdbengine.equalsIgnoreCase("mysql")) {
-                                String engine = DatabaseService.isDevMode() ? "ENGINE = MYISAM; " : "ENGINE = BRIGHTHOUSE DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci; ";
-                                pstmt = conn.prepareStatement(this.createTableDDL.replace("?", table) + engine);
-                            } else if (this.ibdbengine.equalsIgnoreCase("postgres")) {
-                                pstmt = conn.prepareStatement(this.createTableDDL.replace("?", table));
-                            }
-                            pstmt.execute();
-                            pstmt.close();
+                            boolean tableCreated = ViewpointUtil.createSummarizerRawTable(table, prefix);
+                            boolean optimizationInfoUpdated = loadIntoDailyTable ? ApplianceDAO.getInstance().updateOptimizationInfo(reportDate) : false;
+                            SGMSUtil.debugOut((Object)("DataBaseWriter.write() Table created successfully: " + table + " " + tableCreated), 5);
+                            SGMSUtil.debugOut((Object)("DataBaseWriter.write() Optimization Info table updated: " + optimizationInfoUpdated), 5);
                             if (this.ibdbengine.equalsIgnoreCase("mysql") && !DatabaseService.isDevMode()) {
                                 pstmt = conn.prepareStatement("SET @bh_dataformat='txt_variable'");
                                 pstmt.execute();
@@ -376,8 +318,8 @@
                         SGMSUtil.debugOut((Object)"DataBaseWriter.write(): Moving the File to Error Directory Since files are outdated ", 5);
                     }
                     returnValue = 100;
-                    if (loadFileWriter == null) break block90;
-                    if (loadFileWriter.writer == null) break block91;
+                    if (loadFileWriter == null) break block75;
+                    if (loadFileWriter.writer == null) break block76;
                 }
                 catch (SQLTimeoutException e) {
                     try {
@@ -397,7 +339,7 @@
                                 try {
                                     conn.rollback();
                                 }
-                                catch (SQLException ex) {
+                                catch (SQLException dailyTableName) {
                                     // empty catch block
                                 }
                             }
@@ -598,5 +540,66 @@
         }
         return directoryPath + fileName;
     }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     * Enabled aggressive block sorting
+     * Enabled unnecessary exception pruning
+     * Enabled aggressive exception aggregation
+     */
+    public boolean loadDataIntoDailyTable(Date date) {
+        int table_type;
+        block12: {
+            SGMSUtil sgmsUtil = new SGMSUtil(DataBaseConnectionPool.getReference());
+            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
+            String formattedDate = dateFormat.format(date);
+            table_type = Integer.parseInt(sgmsUtil.getCosmoParam("OPTIMIZATION_TYPE", "0"));
+            String query = null;
+            ResultSet rs = null;
+            SGMSUtil.debugOut((Object)("DataBaseWriter:loadDataIntoDailyTable() - OPTIMIZATION_TYPE value received from sgmsConfig - " + table_type), 1);
+            String serial = "";
+            InstanceIPAddressProvider ipAddressProvider = InstanceIPAddressProvider.getReference();
+            if (ipAddressProvider != null && ipAddressProvider.getOwnIPAddress() != null && !ipAddressProvider.getOwnSerial().isEmpty()) {
+                serial = ipAddressProvider.getOwnSerial();
+            } else {
+                SGMSUtil.debugOut((Object)"DataBaseWriter:loadDataIntoDailyTable(): [ERROR] Unable to get the serial number.", 1);
+            }
+            SGMSUtil.debugOut((Object)("DataBaseWriter:loadDataIntoDailyTable() - Serial Number: " + serial), 1);
+            String serialDateKey = serial + "_" + formattedDate;
+            if (loadIntoDailyTableMap.containsKey(serialDateKey)) {
+                table_type = loadIntoDailyTableMap.get(serialDateKey);
+                SGMSUtil.debugOut((Object)("DataBaseWriter:loadDataIntoDailyTable() - Entry found in map for key - " + serialDateKey + " table_type = " + table_type), 1);
+            } else {
+                try {
+                    query = "SELECT table_type FROM " + DataBaseConnectionPool.getTablePrefix() + "vpng_optimization_info, " + DataBaseConnectionPool.getTablePrefix() + "vp_report_dates WHERE report_date_id=id AND report_date= ? AND scheduler_instance = ?";
+                    String[] params = new String[]{dateFormat.format(date), serial};
+                    rs = SGMSUtil.executeQueryPS(query, params);
+                    SGMSUtil.debugOut("DataBaseWriter:monthlyDailyTableCheck -");
+                    if (rs.next()) {
+                        table_type = rs.getInt("table_type");
+                        SGMSUtil.debugOut((Object)("DataBaseWriter:loadDataIntoDailyTable() - Overwriting default table_type value from optimization table: " + table_type), 1);
+                        loadIntoDailyTableMap.put(serial + "_" + dateFormat.format(date), table_type);
+                    } else {
+                        SGMSUtil.debugOut((Object)("DataBaseWriter:loadDataIntoDailyTable() - Entry not found so taking default value of table_type = " + table_type), 1);
+                    }
+                    if (rs == null) break block12;
+                }
+                catch (Exception e) {
+                    SGMSUtil.debugOut("DataBaseWriter:monthlyDailyTableCheck - Exception in monthlyDailyTableCheck()" + e);
+                    break block12;
+                }
+                DataBaseConnectionPool.freeResultSet(rs);
+            }
+            break block12;
+            finally {
+                if (rs != null) {
+                    DataBaseConnectionPool.freeResultSet(rs);
+                }
+            }
+        }
+        boolean loadDataIntoDailyTable = table_type != 0;
+        SGMSUtil.debugOut((Object)("DataBaseWriter:loadDataIntoDailyTable() - Load data into daily table: " + loadDataIntoDailyTable + " Date: " + date.toString()), 1);
+        return loadDataIntoDailyTable;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/DetectInjection.java decompiled-9.3.9330/com/sonicwall/sgms/util/DetectInjection.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/DetectInjection.java	2023-09-08 15:13:13.263773534 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/DetectInjection.java	2023-09-08 15:14:40.225214045 -0700
@@ -226,7 +226,7 @@
         if (strValue != null && strValue.length() > 0) {
             String strValueUpperCase = strValue.toUpperCase();
             int singleQuoteIndex = strValueUpperCase.indexOf("'");
-            if (singleQuoteIndex > -1 && strValueUpperCase.indexOf(";", singleQuoteIndex) > -1 || strValueUpperCase.indexOf("CREATE ") > -1 || strValueUpperCase.indexOf("ALTER ") > -1 || strValueUpperCase.indexOf("DROP ") > -1 || strValueUpperCase.indexOf("TRUNCATE ") > -1 || strValueUpperCase.indexOf("COMMENT ") > -1 || strValueUpperCase.indexOf("RENAME ") > -1 || strValueUpperCase.indexOf("SELECT ") > -1 || strValueUpperCase.indexOf("SELECT(") > -1 || strValueUpperCase.indexOf("SELECT*") > -1 || strValueUpperCase.indexOf("SLEEP(") > -1 || strValueUpperCase.indexOf("INSERT ") > -1 || strValueUpperCase.indexOf("UPDATE ") > -1 || strValueUpperCase.indexOf("DELETE ") > -1 || strValueUpperCase.indexOf("MERGE ") > -1 || strValueUpperCase.indexOf("EXPLAIN ") > -1 || strValueUpperCase.indexOf("EXEC ") > -1 || strValueUpperCase.indexOf("GRANT ") > -1 || strValueUpperCase.indexOf("REVOKE ") > -1 || strValueUpperCase.indexOf("COMMIT ") > -1 || strValueUpperCase.indexOf("ROLLBACK ") > -1 || strValueUpperCase.indexOf("SAVEPOINT ") > -1 || strValueUpperCase.indexOf("TRANSACTION ") > -1 || strValueUpperCase.indexOf("WAITFOR ") > -1 || strValueUpperCase.indexOf("<SCRIPT") > -1) {
+            if (singleQuoteIndex > -1 && strValueUpperCase.indexOf(";", singleQuoteIndex) > -1 || strValueUpperCase.indexOf("CREATE ") > -1 || strValueUpperCase.indexOf("ALTER ") > -1 || strValueUpperCase.indexOf("DROP ") > -1 || strValueUpperCase.indexOf("TRUNCATE ") > -1 || strValueUpperCase.indexOf("COMMENT ") > -1 || strValueUpperCase.indexOf("RENAME ") > -1 || strValueUpperCase.indexOf("SELECT ") > -1 && strValueUpperCase.indexOf("FROM ", strValueUpperCase.indexOf("SELECT ")) > -1 || strValueUpperCase.indexOf("SELECT(") > -1 || strValueUpperCase.indexOf("SELECT*") > -1 || strValueUpperCase.indexOf("SLEEP(") > -1 || strValueUpperCase.indexOf("INSERT ") > -1 || strValueUpperCase.indexOf("UPDATE ") > -1 || strValueUpperCase.indexOf("DELETE ") > -1 && strValueUpperCase.indexOf("FROM ", strValueUpperCase.indexOf("DELETE ")) > -1 || strValueUpperCase.indexOf("MERGE ") > -1 || strValueUpperCase.indexOf("EXPLAIN ") > -1 || strValueUpperCase.indexOf("EXEC ") > -1 || strValueUpperCase.indexOf("GRANT ") > -1 || strValueUpperCase.indexOf("REVOKE ") > -1 || strValueUpperCase.indexOf("COMMIT ") > -1 || strValueUpperCase.indexOf("ROLLBACK ") > -1 || strValueUpperCase.indexOf("SAVEPOINT ") > -1 || strValueUpperCase.indexOf("TRANSACTION ") > -1 || strValueUpperCase.indexOf("WAITFOR ") > -1 || strValueUpperCase.indexOf("<SCRIPT") > -1) {
                 bDetected = true;
             } else {
                 int idxComma = strValue.indexOf(",");
@@ -267,9 +267,9 @@
             SGMSUtil.debugOut((Object)("XSS Dynamic configs seems to contain this paramName " + paramName + ", paramValue : " + strValue), 5);
             return false;
         }
-        SGMSUtil.debugOut((Object)("Is this param ignoreable? " + Pattern.matches(IGNORE_PARAM_REG_EX, paramName)), 3);
+        SGMSUtil.debugOut((Object)("Is this param: '" + paramName + "' ignoreable? " + Pattern.matches(IGNORE_PARAM_REG_EX, paramName)), 5);
         if (Pattern.matches(IGNORE_PARAM_REG_EX, paramName)) {
-            SGMSUtil.debugOut((Object)("Ignoring the paramName " + paramName), 3);
+            SGMSUtil.debugOut((Object)("Ignoring the paramName " + paramName), 5);
             return false;
         }
         return !valid;
@@ -315,7 +315,7 @@
                 if (!strValue.toLowerCase().replace(" ", "").contains(method.toLowerCase())) continue;
                 return true;
             }
-            if (!Pattern.compile(method.toLowerCase().trim() + "[\\W]").matcher(strValue.toLowerCase().replace(" ", "")).find()) continue;
+            if (!Pattern.compile(method.toLowerCase().trim() + "[\\(\\{\\[\\.]").matcher(strValue.toLowerCase().replace(" ", "")).find()) continue;
             SGMSUtil.debugOut((Object)("Detecting Injection in paramName : " + paramName + " ,paramValue : " + strValue), 3);
             return true;
         }
Only in decompiled-9.3.9330/com/sonicwall/sgms/util: KeyStotreUtil.java
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_en_US.java decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_en_US.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_en_US.java	2023-09-08 15:13:13.285774385 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_en_US.java	2023-09-08 15:14:40.248185366 -0700
@@ -7,7 +7,7 @@
 
 public class sgmsResources_en_US
 extends ListResourceBundle {
-    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "Appliance (Singular)"}, {"APPLIANCE_NAME_PLURAL", "Appliance (Plural)"}, {"APPLIANCE_DESC", "Description for the appliance"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewalls"}, {"SONICWALL_DESC", "Firewall Appliances"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMAs"}, {"SSLVPN_DESC", "SMA Appliances"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDPs"}, {"CDP_DESC", "CDP Appliances"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMAs"}, {"ESV_DESC", "Aventail SMA Appliances"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ESs"}, {"ESA_DESC", "Email Security Appliances"}, {"OTHERS_NAME", "OTHER"}, {"OTHERS_NAME_PLURAL", "OTHERS"}, {"OTHERS_DESC", "Other Appliances"}, {"MINUTE", "Minutes"}, {"TEST_STRING", "This is a test string - remove this before shipping"}, {"PROGRESS_ACTION_TIMED", "This action may take a while to complete"}, {"PROGRESS_PLEASE_WAIT", "Please Wait..."}, {"LOADING_PLEASE_WAIT", "Loading, please wait..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "You do not have Update Privileges on this Screen."}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "You do not have permissions to view any screens, please logout and contact your Administrator."}, {"UPDATE", "Update"}, {"RESET", "Reset"}, {"NO_PANEL_PERMISSIONS", "You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "Successfully synchronized Model Codes"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "Failed to synchronize Model Codes"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "Spooling of tasks has been initiated successfully."}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "Failure - No units available for applying the upgrade."}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "The following Activation Code has been successfully added - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "Activation Codes have been successfully added."}, {"ERROR_ADD_ACTIVATION_CODE", "Add Activation Code Error: The following Activation Code already exists - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "The following Activation Code has been successfully deleted - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "Activation Code(s) have been successfully deleted."}, {"ERROR_DELETE_ACTIVATION_CODE", "Delete Activation Code Error: The following Activation Code does not exist - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "Delete Activation Code Error: The following Activation Code(s) could not be deleted - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "The following activation code has been added to the SonicWall GMS database: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "The following activation code has been removed from the pool of available codes: "}, {"UPDATE_DB_MESSAGE", "The change was updated in the SonicWall GMS Database successfully."}, {"FAILURE_UPDATE_DB_MESSAGE", "Update Failed: The change could not be updated in the SonicWall GMS Database successfully."}, {"NO_UNITS_FOR_REGISTRATION", "No units for registration"}, {"FREE_TRAIL_NOT_APPLIED", "All units are either unregistered or already have a Subscription"}, {"AV_FAILURE_MESSAGE", "No Units available for Upgrade as well as Registration"}, {"AV_SUCCESS_MESSAGE", "Task(s) initiated successfully for upgrade as well as registration"}, {"AV_SUCCESS_UPGRADE", "Task(s) initiated successfully for Upgrade"}, {"AV_NO_SUCCESS_REG", "No Units available for Registration"}, {"AV_SUCCESS_REG", "Task has been initiated successfully for Registration"}, {"AV_NO_SUCCESS_UPGRADE", "No Units available for Upgrade"}, {"TASK_SUCCESS_MESSAGE", "Task has been initiated successfully"}, {"TASK_CMP_ERROR", "CMP Password can be changed at unit level only"}, {"TASK_ERROR_MESSAGE", "Tasks are not initiated successfully"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "No units available for the License Sharing operation."}, {"SGMS_EMAIL_BOTTOM_MSG1", "Powered by "}, {"SGMS_EMAIL_BOTTOM_MSG2", " Version "}, {"SGMS_EMAIL_BOTTOM_MSG3", " Serial: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " Server: "}, {"FIRMWARE_DOWNLOADED", "A new copy of firmware has been downloaded."}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " is expiring very soon for the following appliances.\nPlease contact SonicWall Sales to purchase activation codes for renewal of these subscriptions."}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "Subscription Expiration Information."}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "No expirations found."}, {"VERSION_MESSAGE", "SonicWall GMS Version#: "}, {"NUM_NODES_MESSAGE", "Number of nodes that can be managed by this SonicWall GMS: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "GMS Product Description: "}, {"DATABASE_TYPE_MESSAGE", "Database Type: "}, {"MODEL_TYPES_MESSAGE", "Number of nodes and Model Name: "}, {"NUM_AGENTS_MESSAGE", "Number of Agents in the system: "}, {"AGENT_IP_MESSAGE", "IP Address of the Agents: "}, {"UNKNOWN_MESSAGE", "Unknown"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "Unknown DATABASE"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "Invalid characters [<,\\,:] in unit name."}, {"PM_NAME_KEYWORD", " is a keyword and cannot be used to name a unit. Please use another name"}, {"PM_NAME_EXISTS_A", "Unit with the name '"}, {"PM_NAME_EXISTS_B", "' already exists "}, {"PM_UNKNOWN", "Unknown"}, {"PM_UNKNOWN_UNREGISTERED", "Unknown/Unregistered"}, {"PM_UNREGISTERED", "Not Registered"}, {"PM_YES", "Yes"}, {"PM_NO", "No"}, {"PM_ENABLED", "Enabled"}, {"PM_DISABLED", "Disabled"}, {"PM_NOTAVAILABLE", "Not Available"}, {"PM_UNLIMITED", "Unlimited"}, {"PM_CURRENT", "Current"}, {"PM_DEFAULT", "Default"}, {"PM_EXPIRED", "Expired"}, {"PM_UP", "Up"}, {"PM_DOWN", "Down"}, {"PM_NOT_ACQUIRED", "Not Acquired"}, {"PM_SINCE", " since "}, {"PM_NONE", "None"}, {"PM_N_A", "N/A"}, {"PM_NO_LICENSE", "No License"}, {"PM_MODEL", "Model"}, {"PM_SERIAL_NUM", "Serial Number"}, {"PM_DOMAIN", "Domain"}, {"PM_NUM_LAN_IPS", "Number of LAN IPs allowed"}, {"PM_HA", "High Availability"}, {"PM_DMZ_PORT", "DMZ Port"}, {"PM_NUM_WORKPORTS", "Number of WorkPort IPs allowed"}, {"PM_HOMEPORT", "HomePort"}, {"PM_WLAN_PORT", "WLAN Port"}, {"PM_OPT_PORT", "OPT Port"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN Upgrade"}, {"PM_VPN_CLIENTS", "Global VPN Clients"}, {"PM_IPS", "Intrusion Prevention Service"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "Gateway Anti-Virus"}, {"PM_FIRMWARE_VERSION", "Firmware Version"}, {"PM_REGISTRATION_CODE", "Registration Code"}, {"PM_CFS_SUB", "Content Filter List/Service"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "Anti-Virus"}, {"PM_WARRANTY", "Extended Warranty"}, {"PM_SW_STATUS", "Status"}, {"PM_SW_MANAGEDINSTANCE", "Managed by Instance"}, {"PM_TASKS_PENDING", "Tasks Pending"}, {"PM_LAST_LOG", "Last Log Entry"}, {"PM_SAS_CONFIG_INFO", "SA Configuration Information"}, {"PM_SAS_DEFINED", "Defined SAs"}, {"PM_SAS_ENABLED", "Enabled SAs"}, {"PM_SAS_AVAILABLE", "Available SAs"}, {"PM_SAS_REMAINING", "Remaining SAs"}, {"PM_SAS_INTERCONNECTED", "Interconnected SAs"}, {"PM_AGENT_ASSIGNED", "Agent Assigned"}, {"PM_PRIMARY_AGENT", "Primary Agent"}, {"PM_STANDBY_AGENT", "Standby Agent"}, {"PM_TUNNEL_MGMT", "Management Mode"}, {"PM_FW_ADDED_TO_GMS", "Unit added to SonicWall GMS on"}, {"PM_FW_UP_SINCE", "Unit Up since"}, {"PM_FW_DOWN_SINCE", "Unit Down since"}, {"PM_SW_IP", "SonicWall IP"}, {"PM_TIME_ZONE", "Time Zone"}, {"PM_SW_IN_SYSTEM", "in the System"}, {"PM_SW_IN_DMZ", "in the DMZ"}, {"PM_SW_IN_GROUP", "in the Group"}, {"PM_SW_UNREGISTERED", "that are Not Registered"}, {"PM_SW_VPN_UPGRADE", "with VPN Upgrade"}, {"PM_SW_VPN_CLIENT", "with Global VPN Client Upgrade"}, {"PM_SW_MSSP", "that support MSSP"}, {"PM_CFL_SUBSCRIPTION", "Content Filter List/Service"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "Anti-Virus"}, {"PM_HGMS_SUBSCRIPTION", "Cloud Services"}, {"PM_SUPPORT_SUBSCRIPTION", "Support"}, {"PM_EXTENDED_WARRANTY", "Extended Warranty"}, {"PM_UNITS_DOWN", "SonicWalls that are down"}, {"PM_PENDING_TASKS", "SonicWalls with Pending Tasks"}, {"PM_MANAGED_WITH_TUNNEL", "SonicWalls managed using Management Tunnel"}, {"PM_TASK_SPOOLED", "Task has been spooled to change the Host Name."}, {"PM_RAVLIN_MODEL", "Ravlin Model"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/Serial Number"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "Firmware Version"}, {"PM_HW_VERSION", "Hardware Version"}, {"PM_ROM_VERSION", "ROM Version"}, {"PM_SECURITY_ID", "Security ID"}, {"PM_RAVLIN_STATUS", "Ravlin Status"}, {"PM_TASKS_PENDING", "Tasks Pending"}, {"PM_AGENT_ASSIGNED", "Agent Assigned"}, {"PM_RAVLINS_IN_NODE", "Ravlins in the Node"}, {"PM_RAVLINS_DOWN", "Ravlins that are down"}, {"PM_RAVLINS_PENDING_TASKS", "Ravlins with Pending Tasks"}, {"PM_FIX_UNIT_ERROR", "Error occured while fixing unit "}, {"PM_MOD_UNIT_EXISTS", "Modified Unit already exists with the serial number"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "Modified Unit with the name"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "already exists "}, {"PM_ADD_ERR_PRIVILEGES", "ERROR: You do not have sufficient privileges to add unit."}, {"PM_UNIT_EXISTS", "Unit already exists with the serial number"}, {"PM_UNIT_NAME_EXISTS_A", "Unit with the name"}, {"PM_UNIT_NAME_EXISTS_B", "already exists in the domain "}, {"PM_ADD_UNIT_ERR", "Error adding the unit to the SonicWall Database."}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "Please enter a valid serial number.\nSerial number should be "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "characters long."}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "Serial number should contain only hexadecimal characters."}, {"PM_GET_PREFS_ERR", "Error retrieving the preferences file."}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "Unit is not licensed for Cloud services.\nPlease license any of the following services from MySonicWall.com before adding the unit to "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " is unable to obtain licensing information for this unit.\nPlease try again later."}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " is unable to communicate with MySonicWall.com to verify the licenses for this unit.\nPlease try again later."}, {"PM_LICENSED", "Licensed"}, {"PM_NOT_LICENSED", "Not Licensed"}, {"PM_IS_MSSP", "MSSP Unit"}, {"PM_SYSLOG_FORMAT", "Syslog Format"}, {"PM_STATUS_MSG_ONLY", "Status Messages Only"}, {"PM_SYSLOG_IN_UTC", "Logs in UTC"}, {"PM_VIEWPOINT_MODE", "Analyzer Mode Enabled"}, {"PM_NAME_RESOLUTION", "Name Resolution Mode"}, {"PM_ACCESS_MODE", "Access Mode"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS then NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"PM_CONNECTWISE_STATUS", "Connectwise Manage"}, {"PM_CONNECTWISE_NA", "Not Available"}, {"VM_PATCH_DETECTED_MSG1", " has detected availability of new software updates"}, {"VM_PATCH_DETECTED_MSG2", "Error emailing Admin new software update information. SMTP or Admin Email not configured."}, {"VM_PATCH_DETECTED_MSG3", " Software Updates Available\n\n"}, {"VM_NEW", "New "}, {"VM_PATCH_DETECTED_MSG4", "For release notes and download information, please login into your <a href=https://www.mysonicwall.com>MySonicWall.com</a> account"}, {"VM_SCREEN", " Screen."}, {"VM_PATCH_DETECTED_MSG5", " Component Patch Update check successful. New Component Updates found. Email sent to admin."}, {"VM_PATCH_DETECTED_MSG6", "Failed to download patch update "}, {"VM_FOR", " for "}, {"VM_ON", " on "}, {"VM_PATCH_DETECTED_MSG7", " component patch download aborted. Patch file already exists: "}, {"VM_PATCH_DETECTED_MSG8", " component patch download successful: "}, {"VM_PATCH_DETECTED_MSG9", "Error writing patch file "}, {"VM_PATCH_DETECTED_MSG10", " to disk."}, {"SDM_UPDATE_SUCCESS", "Update was a success."}, {"SDM_UPDATE_FAILURE", "Update failed."}, {"SDM_UPDATE_SPECIAL_FAILURE", "Failed to create tasks to delete SA(s)."}, {"SDM_UPDATE_INVALID", "Update request not valid."}, {"SDM_SCREEN_ID_INVALID", "screen ID is invalid"}, {"SDM_READY", "Ready"}, {"SDM_CGI_ERROR", "Error getting CGI_NAME for "}, {"SDM_DEFAULT_ERROR", "Error getting DEFAULT_VALUE for "}, {"SDM_INVALID_TARGET", "Error: source or destination group is invalid."}, {"SDM_METADATA_ERROR", "Error getting metadata for "}, {"SDM_DB_ERROR", "Error accessing SonicWall GMS database."}, {"SDM_NOVPN_ERROR", "VPN not enabled on this unit. Error creating VPN to unit "}, {"SDM_NO_TARGET_VPN_ERROR", "VPN not enabled on target. Error creating VPN to unit "}, {"SDM_NOSAS_ERROR", "No remaining SAs available on this unit. Error creating VPN to unit "}, {"SDM_NO_TARGET_SAS_ERROR", "No remaining SAs available on target. Error creating VPN to unit "}, {"SDM_NO_UNITS_ERROR", "No tasks created."}, {"SDM_NO_3RDPARTYCERTS_ERROR", "No valid 3rd party Local/CA Cert combination found. Skipping VPN SA to unit "}, {"SDM_DHCP_ERROR", "Dynamic addressing is enabled on both source and destination unit, so SA cannot be created. Skipping VPN SA creation. "}, {"SDM_NOAES_ERROR", "AES not available on this unit. Error creating VPN to unit "}, {"SDM_NO_TARGET_AES_ERROR", "AES not available on target. Error creating VPN to unit "}, {"SDM_DELETE_SUCCESS", "Delete was a success "}, {"SDM_DELETE_FAILURE", "Delete failed "}, {"SDM_AGENTNAME_INVALID", "Invalid character [<,\\,:,',@,#,*,$] in Agent name."}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "Task creation failed for Enhanced Interconnected VPNS SAs"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "Group update Failed for "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "Enhanced Interconnected VPN SAs"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "Standard Interconnected VPN SAs"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "Enhanced Non-Interconnected VPN SAs"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "Standard Non-Interconnected VPN SAs"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "Skipping SA creation for this unit since the firmware version on this unit does not support Tunnel Interface type"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "Scheduled Task to Execute on"}, {"PASSWORD_CHANGED", "SonicWall GMS password successfully changed."}, {"PASSWORD_NOT_CHANGED_A", "Incorrect old password specified.<BR>"}, {"PASSWORD_NOT_CHANGED_B", " Password unchanged."}, {"PASSWORD_NOT_CHANGED", "Incorrect old password specified. Password unchanged."}, {"LOGS_PASSWD_CHANGED", "Users login password has been successfully changed "}, {"LOGS_PASSWD_NOT_CHANGED", "System could not authenticate user to change login password "}, {"LOGS_ADDED_NEW_USER", "New User added to the SonicWall GMS database: "}, {"LOGS_ADDED_NEW_USER_TYPE", "New User Type added to the SonicWall GMS database: "}, {"LOGS_DELETED_USER", "User and corresponding information deleted from the SonicWall GMS database: "}, {"LOGS_DELETED_GROUP", "The following custom group and all views using this custom group have been deleted from the SonicWall GMS database: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "Custom Attribute Value ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") should contain only alpha-numeric characters"}, {"LOGS_ADD_CUSTOM_GROUP", "The following Custom Group Name / Default Value was added to the system: "}, {"LOGS_MOD_CUSTOM_GROUP", "The following Custom Group Name / Default Value was modified: "}, {"LOGS_DEL_CUSTOM_GROUP", "The following Custom Group was deleted from the system: "}, {"READY", "Ready"}, {"NAV_OF", " of "}, {"NAV_PREVIOUS", "Previous"}, {"NAV_NEXT", "Next"}, {"NAV_DISPLAYING", "Displaying"}, {"NAV_FIREWALLS", "Firewall(s)"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "You do not have Update Privileges on this Screen."}, {"ACT_WRONG_FILE_FORMAT", "Error: Wrong file format, could not add the codes."}, {"AUTH_INVALID_PARAMS", "Invalid parameters, please try again"}, {"AUTH_AUTHENTICATE", "Authenticate"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "login random number has been timed out"}, {"AUTH_LOGIN_TIMEOUT", "Login page has timed out, please try again"}, {"AUTH_LOGIN_FAILURE", "Login failed, please try again"}, {"AUTH_LOGIN_FAILURE_LOG", "login failed"}, {"NO_DOMAIN_SPECIFIED", "No Domain Name specified for Login"}, {"SPECIFY_DOMAIN", "Please specify a Domain Name for Login"}, {"INVALID_IP", "Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "Invalid Domain. Please specify a valid Domain Name"}, {"INVALID_ALIAS_MSG", "Invalid Alias. Please specify a valid Alias"}, {"REMOTE_SUCCESSFUL_LOGIN", "Successful login into the system by user: "}, {"REMOTE_FAILED_LOGIN", "Remote Authentication failed for user: "}, {"XML_REMOTE_FAILED_LOGIN", "XML based Remote Authentication failed for user: "}, {"NEW_USER_ADDED", "Added new user: "}, {"TO_USER_TYPE", "user type: "}, {"CLICK_TO_TRY_AGAIN", "Click here to try again"}, {"USER_LOCKED_OUT", "User has been locked out, contact administrator for details"}, {"USER_DISABLED", "User account is disabled, contact administrator for details"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "Remote Authentication failed. Please contact your GMS Administrator."}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "Remote Authentication failed. Please contact your GMS Administrator or try again."}, {"LDAP_AUTH_FAILED", "Remote Authentication failed"}, {"LDAP_USER_NOT_FOUND", "User not found or does not exist in the directory"}, {"LDAP_INVALID_CREDENTIALS", "Remote Authentication failed: Invalid Credentials"}, {"LDAP_COMMUNICATION_ERROR", "Unable to communicate with the directory or naming service"}, {"LDAP_ANONYMOUS_BIND_SET", "AnonymousBind is set as allowed for the domain "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "Check if the remote server allows Anonymous Binds."}, {"LDAP_INVALID_GROUPS_SPECIFIED", "Invalid Directory Groups Specified. Please contact your GMS Administrator."}, {"LDAP_INVALID_GROUP_MEMBER", "User is not a member of the allowed Directory Group(s)."}, {"RADIUS_UNKNOWN_HOST", "Unknown RADIUS Server Host."}, {"RADIUS_CONNECTION_TIMEOUT", "Connection timed out with the Remote RADIUS Server"}, {"RADIUS_FAILED_LOGIN", "Authentication Failed. Invalid Credentials."}, {"RADIUS_EXCEPTION", "RADIUS Exception occurred."}, {"RADIUS_INVALID_GROUP_MEMBER", "User is not a member of the allowed RADIUS group(s)."}, {"PWD_CHANGE_SCREEN", "Change Password."}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "Change Password as the length is not within the permitted range: 7 - 15 chars."}, {"PWD_VALIDATION_FAILURE", "Change Password as the length cannot exceed 15 chars."}, {"PWD_EXPIRATION", "Password needs to be changed every {0} days"}, {"PWD_CHANGE_NEXT_LOGIN", "Change password forced by administrator."}, {"PASSWORD_EXISTS", "Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "Could not read license file"}, {"CUI_UPGRADE_SUCCESS", "Upgrade Successful"}, {"CUI_UPGRADE_FAIL", "Upgrade failed: "}, {"CUI_SYNCH_SUCCESS", "Synchronize Successful"}, {"CUI_SYNCH_FAIL", "Synchronize failed: "}, {"CUI_PRORATE_SUCCESS", "ProRate Request Successful"}, {"CUI_PRORATE_FAIL", "ProRate Request failed: "}, {"CUI_CHANGE_PW_SUCCESS", "Success.  Password accepted by MySonicWall.com."}, {"CUI_CHANGE_PW_FAIL", "Failed.  Password was not accepted by MySonicWall.com: "}, {"CUI_EMAIL_SUCCESS", "The TechSupport Form was emailed to SonicWall GMS Support Center."}, {"CUI_EMAIL_FAIL", "There was a problem sending the TechSupport Report to the SonicWall GMS Support Center.<br>Please try later."}, {"CUI_SESSION_TERMINATED", " session has been terminated successfully."}, {"CUI_SESSIONS_TERMINATED", " sessions have been terminated successfully."}, {"CUI_NO_AGENTS", "No Agents Found."}, {"CUI_FILTER_ADDED", "Successfully added new filter "}, {"DIAG_DIAG_REQUEST_A", "Diagnostic request made at "}, {"DIAG_DIAG_REQUEST_B", " has been submitted."}, {"DIAG_DELETE_SUCCESS", "Delete(s) successful."}, {"DIAG_EMAIL_SUCCESS", "Email(s) successful."}, {"DIAG_UNIT_UNKNOWN", "'Unit name is not known'"}, {"DIAG_UNIT", "'Unit "}, {"VPN_DUPLICATE_UFI", "Update failed. Unique Firewall Identifier is not unique in SonicWall GMS."}, {"NO_LOGS_MESSAGE", "No Logs Found."}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "No logs found for the search criteria provided."}, {"LOG_START_SEARCH", "Start New Search"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "Your query for {0,number,integer} records is too large. Please limit your search criteria."}, {"SQL_EXCEPTION_ERROR_MESSAGE", "There was an error in the database connection. Please make sure the database is available and/or limit your search criteria."}, {"UNKNOWN_EXCEPTION_MESSAGE", "There was an error while executing your search. Please make sure the database is available and/or limit your search criteria."}, {"LOG_NEXT", "Next"}, {"LOG_PREVIOUS", "Previous"}, {"LOG_UPDATE_SUCCESS", "Update was a success"}, {"LOG_OF", " of "}, {"LOG_OF", " of "}, {"PREFS_SYNCHRONIZE_STARTED", "Synchronizing information with appliance initiated successfully."}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "Failed to synchronize appliance information, could not login to the appliance."}, {"MON_NO_PRIVILEGES", "You do not have sufficient privileges for this screen"}, {"MON_SYNC_TASK_CREATED", "Synchronize task created successfully"}, {"MON_SYNC_TASK_FAIL", "Failed to create synchronize task"}, {"MON_RENEGOTIATE_TASK_CREATED", "Renegotiate task(s) created successfully"}, {"MON_RENEGOTIATE_FAILED", "Failed to create renegotiate task"}, {"MON_NO_SELECTED", "No tunnels selected to Renegotiate"}, {"MON_REFRESH_CREATED", "Refresh statistics task(s) created successfully"}, {"MON_REFRESH_FAIL", "Failed to create refresh task for tunnel statistics"}, {"MON_NO_SELECTED_REFRESH", "No tunnels selected to refresh Statistics"}, {"MON_UPDATE_SUCCESS", "Update was a success"}, {"MON_UPDATE_FAIL", "Update failed"}, {"MON_NO_MONITORING", "Tunnels cannot be monitored."}, {"MON_NAME", "Name"}, {"MON_GATEWAY", "Gateway"}, {"MON_LAST_UPDATED", "Last Updated"}, {"MON_DEST_ADDR_RANGE", "Destination Address Range"}, {"MON_LOCAL_ADDR_RANGE", "Local Address Range"}, {"MON_NO_TUNNELS_FOUND", "No Tunnels Found."}, {"MON_TITLE", "VPN Tunnel Statistics"}, {"MON_DESCRIPTION", "Description"}, {"MON_VALUE", "Value"}, {"MON_CREATE_TIME", "Create Time"}, {"MON_VALID_UNTIL", "Tunnel Valid Until"}, {"MON_PACKETS_IN", "Packets In"}, {"MON_PACKETS_OUT", "Packets Out"}, {"MON_BYTES_IN", "Bytes In"}, {"MON_BYTES_OUT", "Bytes Out"}, {"MON_FRAGMENTS_IN", "Fragmented Packets In"}, {"MON_FRAGMENTS_OUT", "Fragmented Packets Out"}, {"MON_TUNNEL_ACTIVE", "Tunnel is active"}, {"REG_NO_PERMISSION", "You do not have Update Privileges on this Screen"}, {"REG_ERROR_RETRIEVING_COUNT", "Error retrieving count of registered/unregistered appliances"}, {"REG_CURRENT", "Current"}, {"REG_EXPIRED", "Expired"}, {"REG_NO_LICENSE", "No License"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "Firmware Image could not be uploaded"}, {"TASKS_SUCCESSFUL_DELETION", "The tasks have been successfully deleted from the database."}, {"TASKS_ERROR_DELETION", "Error: Could not delete the tasks."}, {"TASKS_EXECUTION_SET", "The tasks have been successfully set for immediate execution."}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "Unauthorized attempt to execute task"}, {"TASKS_ERROR_EXECUTION", "Error: Could not schedule the tasks for execution."}, {"TASK_DELETED_LOG_MESSAGE", "The following task has been deleted by user "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "Unauthorized attempt to delete task"}, {"NO_TASKS_MESSAGE", "No Tasks Found."}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "No tasks found for the search criteria provided."}, {"TASKS_RESCHEDULED", "Task(s) have been rescheduled successfully."}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "Unauthorized attempt to re-schedule task"}, {"TASKS_ERROR_RESCHEDULE", "Error: Could not reschedule the task(s)."}, {"IMMEDIATE_STRING", "IMMEDIATE"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "Local"}, {"AGENT_STRING", "Agent"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "The following task has been rescheduled by user "}, {"FROM_LOG_MESSAGE", " from "}, {"TO_LOG_MESSAGE", " to "}, {"IMMEDIATE_LOG_MESSAGE", "Immediate Execution"}, {"REG_PASSWORD_SUCCESS", "Success.  Password accepted by MySonicWall.com. Press update to continue."}, {"REG_PASSWORD_FAIL", "Failed.  Password was not accepted by MySonicWall.com: "}, {"LOGIN_MESSAGE", "Please login"}, {"LOGIN_DEFAULT_MESSAGE", "Use default User:'admin' and Password:'password' to login"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "Use default User:'admin' and Password: same as /appliance"}, {"LOGIN_DEMO_MESSAGE", "Please login using User:'demo' and Password:'password'"}, {"SETTINGSVPS_CHANGED", "Your Analyzer settings have been updated."}, {"SETTINGS_CHANGED", "Your settings have been updated."}, {"LOGS_USER_FORCEDOUT", " has forced the following user to logout of the system: "}, {"SLAVE_STATE_CHANGED_MESSAGE", "The Agent has been configured successfully to change its state."}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "Unsuccessful attempt: The state of the Agent could not be changed."}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "The Agent parameters have been updated successfully."}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "The Agent parameters could not be updated successfully."}, {"SCHEDULER_UP_STATE", "Up"}, {"SCHEDULER_DOWN_STATE", "Down"}, {"SCHEDULER_UNDETERMINED_STATE", "Undetermined"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "You do not have permission to update the Agent properties."}, {"SMTPSERVER_INVALID", "Invalid SMTP Server Address."}, {"APPLIANCE_MANAGE_FAILED", "Failed to change management preferences for appliances."}, {"EMPTY_SMTP_PWD", "SMTP Password cannot be empty"}, {"TREE_AGENT_STARTED", "Primary Agent should be in started state to be able to re-assign agents"}, {"TREE_STANDBY_STARTED", "Standby Agents should be in started state to be able to re-assign agents"}, {"TREE_LICENSE_EXCEEDED", "You do not have license to add any more appliances under management."}, {"TREE_IP_EMPTY", "IP cannot be empty. Please provide a valid IP address"}, {"TREE_AUTH_FAIL", "Appliance authentication failed; verify settings."}, {"TREE_NO_RESPONSE", "Appliance is unreachable; verify settings."}, {"TREE_FIREWALL_NOT_LICENSED", "Appliance not licensed for Analyzer."}, {"TREE_FIREWALL_STATE_ERROR", "Failed to retrieve appliance state information.\nAppliance's firmware may need to be updated."}, {"TREE_MODEL_FAIL", "Failed to retrieve model information"}, {"TREE_FIRMWARE_VERSION_FAIL", "Failed to retrieve firmware version"}, {"TREE_UNMATCHED_SERIAL", "Serial numbers do not match."}, {"TREE_TIMEZONE_FAIL", "Failed to retrieve timezone"}, {"TREE_UTC_FAIL", "Log messages are not in UTC format. Please change the appliance's timestamp format to UTC else the Reports generated will show wrong time"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "Please enable 'Enable ViewPoint Settings' option in Log>ViewPoint screen. This setting will change the following:\n\t1. Send Syslog in UTC\n\t2. Set 'Syslog Event Redundancy Filter' (seconds) to 0\n\t3. Set 'Syslog format' to Default"}, {"TREE_NO_SCHEDULER", "No scheduler found on the IP address specified, Unit has not been added"}, {"TREE_GET_PREFS_ERR", "Error retrieving the preferences file."}, {"TREE_FIREWALL_NOT_REGISTERED", "This appliance has not been registered.  Please visit MySonicWall.com and register the appliance before adding it to Analyzer."}, {"TREE_BACKEND_COMM_FAILURE", "Analyzer is unable to communicate with MySonicWall.com to verify the license.\nPlease check your network connection; the Analyzer server must be able to communicate with MySonicWall.com. "}, {"SU_DB_SIZE_EMAILBODY1", "The current database sizes are as follows: \n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\nNote: Max Database size limitation is 2GB \n\n \nThe following configuration change will affect overall size of the database usage:\n\tReduce the number of days setting for \"Days To Store Raw Data\" in Console Panel->Reports->Settings screen.\n\tReduce the number or days for  \"Days To Store Summarized Data\" setting in Console Panel->Reports->Summarizer screen."}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\nNote: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "Max Database size limitation is 2GB \n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\nThe following configuration change will affect overall size of the database usage:\n\tReduce the number of days setting for \"Days To Store Raw Data\" in Console Panel->Reports->Settings screen.\n\tReduce the number or days for  \"Days To Store Summarized Data\" setting in Console Panel->Reports->Summarizer screen."}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "WARNING:\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "Please verify if you have not setup your database on a maintenance backup plan or if an existing plan failed to clear the logs.\nIf you do not set your database on a maintenance plan, your transaction logs will continue to grow and fill up the entire hard disk, \nat which point your database and GMS system will not work. Secondly, in case of a database crash, you will not be able to restore your \ndatabase to a last known backup."}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: Database Healthcheck"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "Login to unit for license validation failed for appliance with serial "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", ". Please make sure that any of the settings required for login haven't been changed locally on the appliance. Use Modify Unit to reflect the changes in Analyzer", "License Validation by Analyzer"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "License Validation by Analyzer"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "Login to your appliance "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " for license validation failed and has exceeded grace period. Please make sure that any of the settings required for login haven't been changed locally on the appliance. Use Modify Unit to reflect the changes in Analyzer"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "Analyzer License Expired!"}, {"SU_LIC_EXPIRED_BODY1", "Your appliance "}, {"SU_LIC_EXPIRED_BODY2", " is not licensed for Analyzer. Please check the settings on the appliance"}, {"SU_LIC_EXPIRED_SUBJECT", "Analyzer License Expired!"}, {"LOGVIEW_WRONG_START_DT", "Wrong start date format. Date has to be in the form mm/dd/yyyy."}, {"LOGVIEW_WRONG_END_DT", "Wrong end date format. Date has to be in the form mm/dd/yyyy."}, {"LOGVIEW_ENDDT_LESS_STARTDT", "End date lesser than start date. Please input valid start and end dates."}, {"LOGVIEW_MSGS_PERSCRN", "Messages Per Screen"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "You are about to export {0,number,integer} log entries. Are you sure you want to do this? If not, please cancel this dialog and limit the search criteria."}, {"LOGVIEW_GOTO_MSG", "Go to Message Number"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "Show Messages Per Screen:"}, {"LOGVIEW_RANGE", "(Range: 10-100)"}, {"LOGVIEW_COL_DT", "Date"}, {"LOGVIEW_COL_MSG", "Message"}, {"LOGVIEW_COL_SEV", "Severity"}, {"LOGVIEW_COL_USER", "GMS User"}, {"LOGVIEW_COL_CO", "Change Order"}, {"LOGVIEW_COL_IP", "User IP"}, {"LOGVIEW_SEARCH_RESULTS", "Search Results"}, {"LOGVIEW_SEARCH_CRITERIA", "Search Criteria"}, {"LOGVIEW_EXPORT_LOGS", "Export Logs"}, {"LOGVIEW_CLEAR_LOGS", "Clear Search"}, {"LOGVIEW_SEARCH_LOGS", "Start Search"}, {"LOGVIEW_MATCH_CASE", "Match case"}, {"LOGVIEW_EXACT_PHRASE", "Exact Phrase"}, {"LOGVIEW_ANY_WORD", "Any Word"}, {"LOGVIEW_ALL_WORDS", "All Words"}, {"LOGVIEW_MSG", "Message contains:"}, {"LOGVIEW_CO", "Change Order:"}, {"LOGVIEW_TIME", "Select Time of logs: From:"}, {"LOGVIEW_TIME_TO", "To: "}, {"LOGVIEW_NODE_NAME", "SonicWall Node:"}, {"LOGVIEW_USER", "User: "}, {"LOGVIEW_SEV", "Severity: "}, {"LOGVIEW_CALENDAR", "Calendar"}, {"LOGVIEW_ALL", "All (Alert, Warning and Info)"}, {"LOGVIEW_ALERT_WARNING", "Alert and Warning"}, {"LOGVIEW_ALERT", "Alert"}, {"LOGVIEW_STR_FORMAT", "Search string format: user@domain.<br>For user only, enter user.<br>For domain only, enter @domain.<br><i>Note: If user value contains an @ character, terminate the search string with another @.</i>"}, {"HELPABOUT_VERSION", "Version:"}, {"HELPABOUT_LIC", "Licensed to:"}, {"HELPABOUT_SN", "Serial Number:"}, {"HELPABOUT_DBDRIVER", "Database Driver:"}, {"HELPABOUT_DBVERSION", "Database Version:"}, {"HELPABOUT_REPORT_DBVERSION", "Report Database Version:"}, {"LOGIN_TITLE", "Login"}, {"LOGIN_ISBLANK", " is blank. Please fill a value in."}, {"LOGIN_INVALIDID", "Invalid User ID specified."}, {"LOGIN_INVALIDID2", "User ID may contain only the following characters:"}, {"LOGIN_INVALIDID3", "Alphanumeric, .(Period), -(Hyphen), _(Underscore) and @(At)."}, {"LOGIN_INVALIDID4", "Please specify a User ID with the allowed characters."}, {"LOGIN_USERNAME", "Username"}, {"LOGIN_PASSWORD", "Password"}, {"LOGIN_LOGIN", "LOGIN"}, {"LOGIN_DOMAIN", "Domain"}, {"LOGIN_SWITCH_EN_US", "Switch to English UI"}, {"LOGIN_SWITCH_JA_JP", "Switch to Japanese UI"}, {"LOGIN_SWITCH_ZH_CN", "Switch to Simplified Chinese UI"}, {"LOGIN_SWITCH_ZH_TW", "Switch to Traditional Chinese UI"}, {"LOGIN_SWITCH_KO_KR", "Switch to Korean UI"}, {"LOGIN_SWITCH_PT_BR", "Switch to Brazilian Portugese UI"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "Logout"}, {"LOGOUT_VPMSG", "You have now successfully logged out of SonicWall Analyzer System."}, {"LOGOUT_VPMSG1", "To start a new SonicWall Analyzer Session, it is recommended that you close or exit this browser &nbsp<br>&nbsp and open a new instance of the browser."}, {"LOGOUT_GMSMSG", "You have now successfully logged out of SonicWall Global Management System. "}, {"LOGOUT_GMSMSG1", "To start a new SonicWall GMS session, it is recommended that you close or exit this browser &nbsp<br>&nbsp and open a new instance of the browser."}, {"SETTINGSUSER_CHANGE", "Change"}, {"SETTINGSUSER_OLD", "Current"}, {"SETTINGSUSER_PASSWORD", "Password"}, {"SETTINGSUSER_NEW", "New"}, {"SETTINGSUSER_CONFIRMMSG", "Confirm New Password"}, {"SETTINGSUSER_FAILMSG", " Password' and 'Confirm New Password' entries do not match."}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "Password must be at least 7 characters in length and consist of letters and/or numbers."}, {"INVALID_PASSWORD", "Invalid password specified."}, {"PWD_RULES", "Password should be created based on the following rules: "}, {"VALID_PWD_RULE_FOR_PCI", "    - At least 7 characters in length."}, {"MAX_PWD_LEN", "    - A maximum length of 15 characters is allowed."}, {"PWD_ALPHANUMERIC_CHARS", "    - May contain alphanumeric characters."}, {"PWD_SPCIAL_CHARS", "    - May contain special characters."}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "Please specify a password that meets the requirements."}, {"SETTINGSUSER_MISCSETTINGS", "Miscellaneous Settings"}, {"SETTINGSUSER_TIMEOUTPERIOD", "Timeout Period can be either -1 or in the range [5..120]. Please fill a valid number."}, {"SETTINGSUSER_NEVERTIMEOUT", "never times out"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "Inactivity Timeout"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "Appliance Selection Panel, Show:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "Icons"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "Text"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "Icons and Text (default)"}, {"MAX_ROWS_PER_SCREEN", "Max Rows Per Screen:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "Range: [10..100] (Applicable to non-reporting related paginated screens only)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "Max Rows Per Screen Value is out of valid range. Please enter a number between 10 and 100 inclusive."}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "Max Rows Per Screen Value is not a number. Please enter a valid number."}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "Auto Save Dashboard Settings:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1:Auto Save not enabled or Range:[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "Auto Save Dashboard Settings can be either -1 or in the range [1..60]. Please fill a valid number."}, {"CHANGEPASSWORD_OLD", "Current Password"}, {"CHANGEPASSWORD_NEW", "New Password"}, {"CHANGEPASSWORD_CONFIRM", "Confirm New Password"}, {"CHANGEPASSWORD_USER", "User"}, {"CUSTLOGSETTINGS_NOTE1", "Note: You can enter multiple email addresses separated by semicolon (\";\")"}, {"CUSTLOGSETTINGS_SECTITLE1", "E-Mail Alert Recipient Schedule"}, {"CUSTLOGSETTINGS_WEEKDAY", "Weekday:"}, {"CUSTLOGSETTINGS_SCHED1", "Schedule 1:"}, {"CUSTLOGSETTINGS_SCHED2", "Schedule 2:"}, {"CUSTLOGSETTINGS_SCHED3", "Schedule 3:"}, {"CUSTLOGSETTINGS_SAT", "Saturday"}, {"CUSTLOGSETTINGS_SUN", "Sunday"}, {"CUSTLOGSETTINGS_WEEKEND", "Weekend:"}, {"CUSTLOGSETTINGS_HRS", "hours"}, {"CUSTLOGSETTINGS_TO", "to"}, {"CUSTLOGSETTINGS_ALERTFMT", "E-Mail Alert Format Preference"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "Contains text, colors, images and links. Only compatible with HTML capable email software."}, {"CUSTLOGSETTINGS_TEXT", "Plain Text"}, {"CUSTLOGSETTINGS_TEXT_DESC", "Contains all the details in plain text. Compatible with all email software."}, {"CUSTLOGSETTINGS_PAGER", "Plain Text (Simple)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "Contains a short message in plain text. Ideal for Pagers, SMS (Short Message Service) and similar applications."}, {"LOGCONFIG_SECTITLE_1", "Delete"}, {"LOGCONFIG_SECTITLE_2", "Log Messages"}, {"LOGCONFIG_DELLABEL", "Delete Log Messages Older Than:"}, {"LOGCONFIG_MONTH", "Month"}, {"LOGCONFIG_DAY", "Day"}, {"LOGCONFIG_YEAR", "Year"}, {"LOGCONFIG_FORLABEL", "for"}, {"LOGCONFIG_DOMAIN", "Domain"}, {"SESSIONS_NOSESSALERT", "There is no session(s) to be ended."}, {"SESSIONS_NOSESSSELALERT", "Please select session(s) to be ended."}, {"SESSIONS_RUSUREALERT", "Are you sure you want to end the selected session(s)?"}, {"SESSIONS_TITLE", "Current Sessions"}, {"SESSIONS_COL1", "User Name"}, {"SESSIONS_COL2", "IP Address"}, {"SESSIONS_COL3", "Login Time"}, {"SESSIONS_COL4", "Last Access Time"}, {"SESSIONS_COL5", "Domain Name"}, {"SESSIONS_END", "End selected sessions"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP Server Address"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP Port"}, {"LOGINVPSSETTINGS_LABEL2", "Sender e-Mail Address"}, {"LOGINVPSSETTINGS_LABEL3", "Administrator e-Mail Address"}, {"LOGINVPSSETTINGS_LABEL3_5", "Use TLS"}, {"LOGINVPSSETTINGS_LABEL4", "Use Authentication"}, {"LOGINVPSSETTINGS_LABEL5", "User"}, {"LOGINVPSSETTINGS_LABEL6", "Password"}, {"LOGINVPSSETTINGS_NOTE", "Note: To change the recipient email addresses, please use the Console > Alerts > Base Settings"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "System Debug level:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "Setting debug levels allows for faster troubleshooting of potential application issues. This action creates debug log files on all the systems in this deployment and could hamper application performance and also fill up disk space. You should reset to <i>No Debug</i> for normal operation as soon as the potential issue has been resolved."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "Note: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;The debug level should only be set based on guidance from SonicWall Technical Support"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;The higher the debug level, the more the system resources that will be used up to generate debug data and in turn lower the overall system performance."}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "Sync Model Codes information now"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "Do you want to update the SMTP server addresses for all the existing Scheduled Reports with the new SMTP server address?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "Failed to Sync Model Codes information."}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "Show Legacy (pre Analyzer 7.0) Reports "}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "Enforce Password Security"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "Number of days to force password change"}, {"GENVPSSTATUS_INVALIDIP", "Incomplete appliance credentials available for a successful login at this time"}, {"GENVPSSTATUS_NODE", " Node: "}, {"GENVPSSTATUS_INFO", "Info"}, {"GENVPSSTATUS_SYSLOG", "Syslog Servers"}, {"GENVPSSTATUS_IPINFO", "IP Address"}, {"GENVPSSTATUS_PORT", "Port"}, {"GENVPSSTATUS_SYNCNOW", "Synchronize Settings With Appliance, And License Information With MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "Getting Started With Analyzer"}, {"GENVPSSTATUS_GETSTARTOPEN", "Open Getting Started Instructions In New Window"}, {"GENVPSSTATUS_LOGINTITLE", "Appliance Login"}, {"GENVPSSTATUS_LOGINHTTP", "Use Insecure login (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "Use Secure login (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "Login"}, {"GENVPSSTATUS_CATEGORIES", "Syslog Categories"}, {"GENVPSSTATUS_REFRESH_MSG", "Note: Status information is updated every 24 hours. To refresh the information, click on the link above. To change these settings, you must log into the appliance and update them manually."}, {"GENVPSSTATUS_LOG_TYPE", "Log Type"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "System Maintenance"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "System Errors"}, {"GENVPSSTATUS_BLOCKED_WEB", "Blocked Web Sites"}, {"GENVPSSTATUS_BLOCKED_JAVA", "Blocked Java etc."}, {"GENVPSSTATUS_USER_ACTIVITY", "User Activity"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP Stats"}, {"GENVPSSTATUS_ATTACKS", "Attacks"}, {"GENVPSSTATUS_DROPPED_TCP", "Dropped TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "Dropped UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "Dropped ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "Network Debug"}, {"GENVPSSTATUS_DENIED_LAN_IP", "Denied LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "Analyzer License Status"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;Please perform the following steps to resolve the \\\"Not Licensed\\\" issue:<br/>&nbsp;&nbsp;Step 1 - <a href=\"http://www.MySonicWall.com\" target=new>Click here to verify or activate the license on MySonicWall.com.</a><br/>&nbsp;&nbsp;Step 2 - If the license is active, <a href=\"javascript:synchronizeInfo();\">click here to synchronize license information.</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(There is a communication failure when trying to reach MySonicWall.com)<br/>&nbsp;&nbsp;Verify that the GMSVP Web Server is able to access www.MySonicWall.com."}, {"COMPONENT", "Description"}, {"COMPONENT_LC", "component"}, {"FILE_SIZE", "File Size (KB)"}, {"IP_ADDRESS", "IP Address"}, {"CURRENT_VERSION", "Current Version"}, {"LATEST_VERSION", "Latest Version"}, {"RELEASE_NOTES", "Release Notes"}, {"LAST_DOWNLOADED", "Last Downloaded"}, {"RELEASE_DATE", "Release Date"}, {"DOWNLD_NEW", "Download New "}, {"SOFTWARE_UPDATES", "Software Updates"}, {"DEL_SEL_COMPS_FROM_LIST", "Delete Selected Components from List"}, {"LIC_DELETE_MSG", "You cannot delete the"}, {"LIC_PATCH_MSG", "Patches are not available and will not be downloaded for the following components:"}, {"LIC_NEW_GMS_SW", "New GMS Software"}, {"LIC_CONSOLE", "Console"}, {"LIC_SELECT_COMPONENT", "Please select a component."}, {"CHAP_TESTING", "CHAP Testing"}, {"CHAP_RADIUS_TESTING_MSG", "Note that CHAP authentication will only work with a RADIUS server that supports it, and in some cases will require the server to be configured to store password reversibly."}, {"CHAP_LDAP_TESTING_MSG", "Note that CHAP authentication will only work with a server that supports retrieving user passwords via LDAP, and in some cases will require the LDAP server to be configured to store passwords reversibly."}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "Note too that CHAP is not possible with Microsoft Active Directory or Novell eDirectory"}, {"PERF_NO_SUMMARIZER", "No Summarizer Performance Metrics currently available."}, {"PERF_SUMMARIZER_INFO", "Summarizer Information"}, {"PERF_SUMMARIZER", "Summarizer"}, {"PERF_SYSLOG_INFO", "Data File Information"}, {"PERF_SYSLOG_FILE_TYPE", "Data File Type"}, {"PERF_FILE_STATS", "File Stats"}, {"PERF_OLDEST", "Oldest"}, {"PERF_PRD_LABEL", "Processed Files"}, {"PERF_SRC_LABEL", "Grouped Files"}, {"PERF_UNP_LABEL", "Unprocessed Files"}, {"PERF_NMM_LABEL", "Not Mine Files"}, {"PERF_IMF_LABEL", "Infected Files"}, {"PERF_ZIP_LABEL", "Archived Files"}, {"PERF_PRE_LABEL", "Invalid Log Files"}, {"PERF_UPE_LABEL", "Bad Upload Files"}, {"PERF_UPD_LABEL", "Uploaded Files"}, {"PERF_UPL_LABEL", "Upload Pending Files"}, {"PERF_RDB_LABEL", "Reporting Database"}, {"PERF_OPT_STATE_LABEL", "Optimization State"}, {"PERF_OPT_PENDING_LABEL", "Pending Optimization"}, {"PERF_OPT_TOTAL_LABEL", "Total Un-optimized days"}, {"PERF_BKP_LABEL", "Backup Files"}, {"PERF_FILE_ELEMENT", " Files - "}, {"PERF_THREAD_INFO", "Summarizer Process Details"}, {"PERF_NUM_THREADS", "Number of threads currently running"}, {"PERF_SUMMARIZER_IDLE", "Summarizer is idle."}, {"PERF_THREAD", "Thread"}, {"PERF_FIREWALL", "Appliance"}, {"PERF_FILE", "File"}, {"PERF_STATE", "State"}, {"PERF_START_TIME", "Started at"}, {"PERF_SUMMARIZER_STATS", "Summarizer Statistics"}, {"PERF_PAST_24", "Over the past 24 hours (since "}, {"PERF_PAST_7_DAYS", "Over the past 7 days (since "}, {"PERF_PAST_30_DAYS", "Over the past 30 days (since "}, {"PERF_NUM_SYSLOGS", "Number of Syslogs Summarized in "}, {"PERF_AVERAGE_PER_MINUTE", "Average Syslog Summarized Per Minute"}, {"PERF_NOT_ACTIVE", "No data has been summarized in the past 7 days"}, {"PERF_NO_GEN2", "Summarizer Performance Metrics are available for Distributed Summarizer configuration only"}, {"PERF_MEM_USAGE", "Summarizer Memory Consumption"}, {"PERF_LAST_RUN", "Last Run Time"}, {"PERF_NEXT_RUN", "Next Run Time"}, {"PERF_SUMMARIZER_STATISTICS", "Summarizer Status Over 7 days"}, {"PERF_SUMMARIZER_UTILIZATION", "Summarizer Utilization"}, {"PERF_TOTAL_RUN_TIME", "Average Run Time Per Day"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "Estimated Capacity"}, {"PERF_METRIC_SYSLOG", "(million syslog/day)"}, {"PERF_METRIC_XML", "(XML files/day)"}, {"PERF_TOTAL_LOAD", "Average Load"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "Average Syslog Summarized (million/day)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "Average XML Files Summarized Per Day"}, {"PERF_NO_DATA_SUMMARIZED", "No data has been summarized in the last 7 days"}, {"PERF_REPORTING_INFO", "Reporting Details"}, {"PERF_TOP_UNITS", "Summarizer Usage Top Appliances"}, {"PERF_UNIT_NAME", "Appliance"}, {"PERF_REPORTING_DB_SIZE", "Reporting Database Size"}, {"PERF_BACKUPS_DIR_SIZE", "Backup Directory Size"}, {"PERF_SYSLOG_DIR_SIZE", "Raw Data Directory Size"}, {"PERF_CACHE_SIZE", "Estimated Cache Size"}, {"PERF_BAD_DIR_SIZE", "Bad Data Directories Size"}, {"PERF_PER_SUMMARIZER_INFO", "Details For Summarizer At "}, {"PERF_AVG_UTILIZATION", "Average Summarizer Utilization"}, {"PERF_PEAK_UTILIZATION", "Peak Summarizer Utilization"}, {"NMM_DETAILS", "Syslogs sent by appliances that are not under Reporting and Management"}, {"NMM_SERIALS", "Serial # of appliances for Summarizer at "}, {"NO_NMM_SERIAL", "None"}, {"MISCONFIGURED_SERIALS", "Serial # of appliances that are misconfigured "}, {"NO_MISCONFIGURED_SERIALS", "None "}, {"NMM_MSG_NOTE", "Note: "}, {"NMM_MSG1", "* Login to the appliance and disable the syslogs"}, {"NMM_MSG2", "* If you dont have access to the appliance use the rules to the gateway to block the serials"}, {"NMM_MSG3", "* To Fix the misconfigured serials, login to the appliance and change the GMS Settings"}, {"NMM_MSG4", "* The serials listed here refresh every 12 hours"}, {"PERF_SUMMARIZER_STATUS", "Status"}, {"PERF_DEPLOYMENT_STATUS", "Deployment Status"}, {"PERF_MSG_HIGH_CAPACITY", "Summarizer operating at very high capacity, please re-assign units."}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "One (or more) of the summarizers in the deployment has exceeded its operating capacity over the past 7 days. Check the status column of the Summarizer Utilization section and please visit the GMS site for more information on how to manage your deployment."}, {"PERF_MSG_REASSIGN_UNITS", "Please re-assign units between agents."}, {"PERF_MSG_DISK_LOW", "Disk space insufficient, please add additional disks or increase disk allocation."}, {"PERF_MSG_DISK_LOW_RDB", "Disk space insufficient for reporting database, please add additional disks or increase disk allocation."}, {"PERF_MSG_CAPACITY_PLANNING", "Please visit the <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS web site</a> for more information on how to manage your deployment."}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "Note: The average load and estimated capacity are specific to the deployment and could vary across systems."}, {"PERF_OF", "of"}, {"PERF_ON_DISK", "on disk"}, {"PERF_OPT_EXPORT_PROGRESS", "Export in progress"}, {"PERF_OPT_EXPORT_DONE", "Export done"}, {"PERF_OPT_DELETE_PROGRESS", "Delete in progress"}, {"PERF_OPT_DELETE_DONE", "Delete done"}, {"PERF_OPT_IMPORT_PROGRESS", "Import in progress"}, {"PERF_OPT_QUEUED_UP", "Queued up"}, {"PERF_OPT_IDLE", "Idle"}, {"PERF_OPT_CURRENT", "Current"}, {"PERF_OPT_INFO", "Optimization Information"}, {"PERF_XML_FILE_INFO", "XML File Information"}, {"PERF_XML_LABEL", "Unprocessed XML files"}, {"PERF_XPG_LABEL", "Files in process"}, {"PERF_XPD_LABEL", "Archived files"}, {"PERF_XPE_LABEL", "Invalid files"}, {"ALERT_NO_ALERTS", "There are no active alerts for this section at this time."}, {"ALERT_DESCRIPTION", "Description"}, {"ALERT_NODE_NAME", "Unit Name"}, {"ALERT_SEVERITY", "Severity"}, {"ALERT_LISTING", "Alert Listing"}, {"CAL_SUN", "Sun"}, {"CAL_MON", "Mon"}, {"CAL_TUE", "Tue"}, {"CAL_WED", "Wed"}, {"CAL_THU", "Thu"}, {"CAL_FRI", "Fri"}, {"CAL_SAT", "Sat"}, {"CAL_JAN", "January"}, {"CAL_FEB", "February"}, {"CAL_MAR", "March"}, {"CAL_APR", "April"}, {"CAL_MAY", "May"}, {"CAL_JUN", "June"}, {"CAL_JUL", "July"}, {"CAL_AUG", "August"}, {"CAL_SEP", "September"}, {"CAL_OCT", "October"}, {"CAL_NOV", "November"}, {"CAL_DEC", "December"}, {Integer.toString(1), "Successful execution of task: "}, {Integer.toString(0), "Failure in executing task."}, {Integer.toString(42), "Successful execution of task returned with WARNINGS: "}, {Integer.toString(10), "Command executed successfully."}, {Integer.toString(-12), "Command execution failed partially or completely."}, {Integer.toString(-57), "Insufficient User privileges to perform this action."}, {Integer.toString(-58), "No information to process the command."}, {Integer.toString(-59), "The action can not be performed any time."}, {Integer.toString(-56), "Only users from the Administrator group of the LocalDomain have privileges to execute this command."}, {Integer.toString(2), "Successful check for new firmware performed, but no new firmware was available "}, {Integer.toString(3), "Backend operation has been previously performed successfully for task: "}, {Integer.toString(4), "Update database operation was successful for task: "}, {Integer.toString(5), "Units available for upgrade as well as registration"}, {Integer.toString(6), "Free trial has not been applied to the appliance"}, {Integer.toString(7), "Units available for Upgrade and not for Registration"}, {Integer.toString(8), "Units available for Registration and not for Upgrade"}, {Integer.toString(-1), "Some parameters of the Appliance were not configured correctly."}, {Integer.toString(-53), "Appliance does not support concurrent administrator logins."}, {Integer.toString(-63), "Missing appliance credentials to login."}, {Integer.toString(-69), "Waiting to obtain current login ip address."}, {Integer.toString(-70), "JVM OOM: Insufficient memory available to continue, will retry task in the next run"}, {Integer.toString(-64), "Unable to get authentication page of managed appliance for login."}, {Integer.toString(-64) + "_TT", "- The unit is not reachable at the managed address.\n- The unit does not support concurrent login,\n  verify if a browser is directly logged in to the unit."}, {Integer.toString(-65), "No response to login post."}, {Integer.toString(-83), "Login failed as the serial numbers do not match."}, {Integer.toString(-83) + "_TT", "- Serial number specified while adding the unit to GMS\n  does not match with that of the unit."}, {Integer.toString(-84), "Login failed as the login mode specified is invalid."}, {Integer.toString(-84) + "_TT", "- Login mode specified does not belong to the list\n  of permitted modes."}, {Integer.toString(-2), "The appliance username or password was incorrect."}, {Integer.toString(-918), "The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "The unit uses an SSL certificate having an MD5 signature which is no longer supported for Security Reasons. Please regenerate the certificate to manage this unit."}, {Integer.toString(-917), "The unit does not have a license to execute this task."}, {Integer.toString(-71), "Invalid access url to the unit."}, {Integer.toString(-71) + "_TT", "- IP Address may not have been obtained from the unit."}, {Integer.toString(-72), "Request for status xml failed."}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "Request for status xml failed, no response received."}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "Request for preference file failed."}, {Integer.toString(-950), "Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "Request for preference file failed, no response received."}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "Invalid preference file."}, {Integer.toString(-76) + "_TT", "- No preference file was received.\n- The obtained preference file could be corrupt.\n- The preference file could be incomplete."}, {Integer.toString(-77), "Unit acquire failed."}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "Received heartbeat message."}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "No heartbeat message received."}, {Integer.toString(-78) + "_TT", "- Heartbeat message was not sent from the unit.\n- Heartbeat message sent from the unit cannot reach GMS.\n- SA (tunnel) is not created on the GMS Gateway.\n- Rule to allow Syslog is not created on the GMS Gateway.\n- For Instance units - please follow the instructions outlined under Note: section in console-web services-distributed deployments."}, {Integer.toString(-79), "Received heartbeat messages cannot be decrypted."}, {Integer.toString(-79) + "_TT", "- Password specified while adding the unit to GMS\n  does not match with that of the unit."}, {Integer.toString(13), "Received syslog message."}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "No syslog message received."}, {Integer.toString(-81) + "_TT", "- Syslog message was not send from the unit.\n- Syslog message sent from the unit cannot reach GMS.\n- SA (tunnel) is not created on the GMS Gateway.\n- Rule to allow Syslog is not created on the GMS Gateway."}, {Integer.toString(-82), "Received syslog messages cannot be decrypted."}, {Integer.toString(-82) + "_TT", "- Password specified while adding the unit to GMS\n  does not match with that of the unit."}, {Integer.toString(12), "Unit added; waiting to be acquired."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "Unit modified; waiting to be acquired."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "Could not access the unit. The unit or the network could be down."}, {Integer.toString(-4), "Atleast one parameter for appliance configuration is incorrect."}, {Integer.toString(-5), "The SonicWall Registration web site could not be reached."}, {Integer.toString(-6), "The Activation code for Upgrade/Subscription is invalid."}, {Integer.toString(-7), "The appliance is not registered."}, {Integer.toString(-8), "The SonicWall GMS Registration site is down or could not be reached. Please check internet access from the SonicWall GMS Servers."}, {Integer.toString(-9), "No units are available for upgrade."}, {Integer.toString(-10), "Attempting to add an appliance that is already under SonicWall GMS management."}, {Integer.toString(-11), "Attempting to configure an invalid appliance."}, {Integer.toString(-15), "Attempting to create a Rule for a non-existent Service."}, {Integer.toString(-16), "SonicWall License violation."}, {Integer.toString(-17), "SonicWall GMS Internal Error."}, {Integer.toString(-18), "Error downloading the Content Filter List."}, {Integer.toString(-19), "Attempt to delete a Service for which a Rule exists."}, {Integer.toString(-47), "AV server could not be contacted"}, {Integer.toString(-20), "Internal AV Error"}, {Integer.toString(-21), "AV Task Pending"}, {Integer.toString(-22), "AV Activation Code is invalid."}, {Integer.toString(-23), "AV Activation Code is already in use."}, {Integer.toString(-24), "AV Password is incorrect."}, {Integer.toString(-25), "AV Renewal Count error."}, {Integer.toString(-26), "AV Renewal too soon."}, {Integer.toString(-27), "Attempt to manage appliance older than recommended."}, {Integer.toString(-28), "Auto Update Server is currently down or could not be reached."}, {Integer.toString(-85), "Manage system backup action failed."}, {Integer.toString(-29), "The firmware could not be uploaded to the appliance."}, {Integer.toString(-62), "Invalid firmware tried to be uploaded to the appliance."}, {Integer.toString(-60), "Maximum File size for a Firmware Upgrade is 4MB."}, {Integer.toString(-31), "Error writing firmware to the local disk."}, {Integer.toString(-30), "Error downloading firmware. Auto Update Server is currently unavailable or could not be reached."}, {Integer.toString(-32), "Database Access error."}, {Integer.toString(-33), "Error while configuring the appliance."}, {Integer.toString(-34), "Error while authenticating the user."}, {Integer.toString(-68), "Domain not Found or Invalid Domain Name."}, {Integer.toString(-35), "Error while updating the CMP password."}, {Integer.toString(-36), "No units available for registration."}, {Integer.toString(-37), "Either Anti-Virus Server could not be contacted, or an unknown error was reported by Anti-Virus Server."}, {Integer.toString(-38), "No units available for registration or upgrade."}, {Integer.toString(-39), "There was a problem adding an activation code to the database."}, {Integer.toString(-40), "Error deleting the activation code. There is no such activation code in the database."}, {Integer.toString(-41), "Unknown error deleting the activation code."}, {Integer.toString(-48), "Upgrade Failed"}, {Integer.toString(-49), "Denied access to execute CLI commands."}, {Integer.toString(-42), "The database could not be updated successfully."}, {Integer.toString(-43), "Email could not be sent to one or more addresses."}, {Integer.toString(-44), "TechSupport report could not be retrieved from the appliance."}, {Integer.toString(-45), "SPD File could not be retrieved from the appliance."}, {Integer.toString(-46), "Certificate File could not be retrieved from the appliance."}, {Integer.toString(-50), "Could not synchronize tunnel status monitoring information."}, {Integer.toString(-51), "RCF File could not be retrieved from the appliance."}, {Integer.toString(-52), "User account disabled; Failed login."}, {Integer.toString(-61), "Previously executed task needed a restart, will retry task in the next interval."}, {Integer.toString(-229), "To activate this service you must have valid subscription of Email Protection."}, {Integer.toString(-230), "Your Sonic OS version does not support clustering (multi-node subscription). Please upgrade or use a single-node key."}, {Integer.toString(-231), "You cannot mix activation keys of different WANOPT models."}, {Integer.toString(-232), "Your WANOPT Model does not support clustering (multi-node subscription)."}, {Integer.toString(-201), "Error with API parameters."}, {Integer.toString(-202), "User is already logged in."}, {Integer.toString(-203), "The SonicWall GMS API is not implemented in this release."}, {Integer.toString(-204), "Session does not exist."}, {Integer.toString(-205), "Quitting from SonicWall GMS Shell"}, {Integer.toString(-206), "API parameters are missing"}, {Integer.toString(-207), "No rows for this category"}, {Integer.toString(-208), "No activation codes provided"}, {Integer.toString(-209), "Activation Type not specified"}, {Integer.toString(-210), "The IP address is not valid; Unit has not been added."}, {Integer.toString(-211), "Length given is less than required; Unit has not been added."}, {Integer.toString(-212), "String can contain only hexadecimal characters; Unit has not been added."}, {Integer.toString(-213), "The IP Address of Standby Scheduler cannot be the same as for Primary Scheduler; Unit has not been added."}, {Integer.toString(-214), "No scheduler has been found at the specified IP address; Unit has not been added."}, {Integer.toString(-215), "There was an error adding the unit."}, {Integer.toString(-226), "You do not have a valid License."}, {Integer.toString(-225), "There was an error parsing the input XML"}, {Integer.toString(-228), "Invalid contents found in the input XML"}, {Integer.toString(-216), "Invalid or unknown report type. Don't know if it is a daily, weekly or monthly report"}, {Integer.toString(-217), "Invalid destination email address. At least one valid destination address should be provided"}, {Integer.toString(-218), "Invalid source email address"}, {Integer.toString(-219), "Invalid SMTP server address"}, {Integer.toString(-220), "Invalid report list. At least one valid report ID should be provided"}, {Integer.toString(-221), "Analyzer Scheduler IP Address registered in the database is invalid"}, {Integer.toString(-222), "Analyzer Scheduler Port Number registered in the database is invalid"}, {Integer.toString(-223), "Invalid or unknown report date. Report date provided should be in the format mm/dd/yyyy"}, {Integer.toString(-224), "The Schedule ID provided is not valid"}, {Integer.toString(-502), "Missing password for zip file password protection"}, {Integer.toString(-503), "Invalid Node provided. Either the serial Number(for unitNode) or the display name (for groupNode) should be specified."}, {Integer.toString(-10001), "There was a communication error"}, {Integer.toString(-10002), "There was an error parsing the input XML"}, {Integer.toString(-10005), "Unknown Component invoked"}, {Integer.toString(-10006), "Unknown AV method was invoked"}, {Integer.toString(-10011), "There was an attempt to upgrade AV after expiry."}, {Integer.toString(-10012), "There was an attempt to upgrade AV for an appliance that is not registered."}, {Integer.toString(-10013), "There was an attempt to renew AV for less nodes than it currently supports."}, {Integer.toString(-10014), "There was an attempt to renew AV too soon."}, {Integer.toString(-10020), "A previous task for changing AV password is pending."}, {Integer.toString(-10100), "There was an error communicating with the McAfee backend"}, {Integer.toString(-10101), "McAfee cannot find any records for this site."}, {Integer.toString(-10102), "McAfee cannot match old password for this site."}, {Integer.toString(-10103), "The AV site is already registered."}, {Integer.toString(-10200), "There was an error communicating with the AV database server"}, {Integer.toString(-10201), "The appliance serial number is already registered"}, {Integer.toString(-10202), "The license key provided is already in use"}, {Integer.toString(-10203), "Anti-Virus was never registered for this appliance"}, {Integer.toString(-10204), "Multiple keys provided must have same period"}, {Integer.toString(-10205), "Free trial key is not allowed for upgrade"}, {Integer.toString(-10206), "Illegal value provided for one or more parameters"}, {Integer.toString(-10210), "The serial number provided is not valid"}, {Integer.toString(-10211), "The license key provided is already registered"}, {Integer.toString(-10212), "The new password provided has invalid characters or is not 6 to 12 characters long"}, {Integer.toString(-10213), "The AntiVirus password provided is invalid"}, {Integer.toString(-10214), "The OEM code provided is invalid"}, {Integer.toString(-10215), "The WAN IP address provided is invalid"}, {Integer.toString(-10220), "A previous request for this appliance is still pending"}, {Integer.toString(-10250), "The appliance is already registered for AV and needs to be reactivated."}, {Integer.toString(-10251), "The appliance cannot be reactivated because of invalid password"}, {Integer.toString(-10260), "License Sharing Group Serial Number provided could not be found"}, {Integer.toString(-10261), "The License Sharing Group Serial Number provided is not valid"}, {Integer.toString(-10262), "Appliance is not a member of any License Sharing Group"}, {Integer.toString(-10263), "The appliance already has active Anti-Virus subscription and cannot be added to a License Sharing Group"}, {Integer.toString(-10264), "Appliance is not a member of this License Sharing Group"}, {Integer.toString(-10265), "Owner of the License Sharing Group cannot be removed"}, {Integer.toString(-10266), "Appliance is already a member of another License sharing Group"}, {Integer.toString(-10267), "New License Count provided exceeds the number of available License Sharing Group licenses"}, {Integer.toString(-10004), "One or more parameters for the Anti-Virus operation is missing"}, {Integer.toString(-10300), "Information provided about the Total Secure Partner could not be found"}, {Integer.toString(-10301), "Incorrect Total Secure Partner Password provided"}, {Integer.toString(-10303), "The AntiVirus license count provided is invalid"}, {Integer.toString(-10304), "There was an attempt to manage an appliance that is not assigned to the Total Secure Partner"}, {Integer.toString(-20000), "Unknown error communicating with backend registration server."}, {Integer.toString(-20101), "The requested  contact has already been registered for the user."}, {Integer.toString(-20102), "The requested contact could not be added for the user."}, {Integer.toString(-20106), "Unable to modify because user information was not be found."}, {Integer.toString(-20111), "Contact information was not found."}, {Integer.toString(-20112), "Contact information could not be modified."}, {Integer.toString(-20113), "Contact information could not be deleted."}, {Integer.toString(-20116), "Appliance is already registered to a different MySonicWall.com account."}, {Integer.toString(-20117), "Appliance specified was not found in the appliance registration system."}, {Integer.toString(-20118), "Appliance could not be registered by the backend registration system."}, {Integer.toString(-20119), "Status could not be retrieved for the specified appliance."}, {Integer.toString(-20121), "The specified appliance is not registered."}, {Integer.toString(-20122), "The specified activation key has already been used."}, {Integer.toString(-20123), "Invalid Activation Code was used."}, {Integer.toString(-20124), "Invalid Activation Code/Appliance combination was used."}, {Integer.toString(-20125), "The upgrade was not completed by the backend registration system."}, {Integer.toString(-20126), "The Activation was not completed by the backend registration system."}, {Integer.toString(-20131), "There was an error registering the wrong mac address of SonicWall GMS system."}, {Integer.toString(-20132), "The SonicWall GMS System is not registered."}, {Integer.toString(-20133), "The SonicWall GMS serial number specified is invalid."}, {Integer.toString(-20134), "The SonicWall GMS Status could not be retrieved by the backend registration system."}, {Integer.toString(-20135), "SonicWall GMS is already registered."}, {Integer.toString(-20136), "The backend registration system could not register your SonicWall GMS system."}, {Integer.toString(-20142), "The wrong mac address is already registered."}, {Integer.toString(-20143), "The available upgrades for SonicWall GMS could not be retireved by the backend registration system."}, {Integer.toString(-20144), "No base package duration was specified."}, {Integer.toString(-20145), "There was an error reading the base package system information in the backend registration system."}, {Integer.toString(-20146), "Node upgrade is not available for this product."}, {Integer.toString(-20147), "Your SonicWall GMS installation is already a retail version."}, {Integer.toString(-20148), "The appliance is not registered."}, {Integer.toString(-20149), "There was an error retrieving information about the SonicWall GMS system in the backend registration server."}, {Integer.toString(-20150), "The specified SonicWall GMS serial number is not registered to the user."}, {Integer.toString(-20151), "There was an error inserting the reporting information in the backend registration system."}, {Integer.toString(-20152), "Invalid SonicWall GMS serial number and user name combination."}, {Integer.toString(-20153), "There was an error in the backend registration system when upgrading SonicWall GMS for ViewPoint integration."}, {Integer.toString(-20154), "Either the appliance is not registered or an invalid username was specified."}, {Integer.toString(-20155), "Either the base contract for this service is not activated or it has expired."}, {Integer.toString(-20201), "Internal Error: The XML input to the backend system was invalid."}, {Integer.toString(-20202), "Internal Error: No username specified in the input."}, {Integer.toString(-20203), "Password specified for the SonicWall GMS Registration system interface is invalid."}, {Integer.toString(-20204), "Internal Error: Invalid method requested to the backend registration system."}, {Integer.toString(-20205), "Internal Error: Invalid XML version requested to the backend registration system."}, {Integer.toString(-20401), "Internal Error: There was a database error in the backend registration system."}, {Integer.toString(-20402), "Internal Error: There was a registry error in the backend registration system."}, {Integer.toString(-20403), "Internal Error: There was a component error in the backend registration system."}, {Integer.toString(-20404), "Internal Error: There was a procedure error in the backend registration system."}, {Integer.toString(-20140), "PKI information for the specified appliance was not found in the backend registration system."}, {Integer.toString(-20141), "PKI service has not been activated for the specified appliance."}, {Integer.toString(-227), "Not enough memory for file upload. Please upload a file of smaller size."}, {Integer.toString(-66), "Invalid Signature file tried to be uploaded to the appliance."}, {Integer.toString(-67), "The signature file could not be uploaded to the appliance. Please verify if this action is applicable to this Model/Version."}, {Integer.toString(-500), "Error received from lm2.sonicwall.com."}, {Integer.toString(-501), "The lm2.sonicwall.com Website could not be reached."}, {Integer.toString(-907), "The firmware version on the appliance is not supported."}, {Integer.toString(-901), "The recording id is invalid or does not exist."}, {Integer.toString(-902), "Failed to apply the entity enclosing record."}, {Integer.toString(-903), "Failed to apply the record."}, {Integer.toString(-904), "The template id is invalid or does not exist."}, {Integer.toString(-905), "Failed to apply the recording."}, {Integer.toString(-906), "Failed to apply the template."}, {Integer.toString(-908), "Timed out waiting for a connection from the pool."}, {Integer.toString(-909), "Timed out waiting for a connection to the remote host."}, {Integer.toString(-910), "The configuration settings for this appliance are not proper."}, {Integer.toString(-911), "Waiting to determine the applicable configuration settings for this appliance."}, {Integer.toString(-912), "Web Service host could not be found."}, {Integer.toString(-913), "Web Service connection could not be created."}, {Integer.toString(-914), "Problem in accessing data or resource through the web service."}, {Integer.toString(-915), "Failed to authenticate with the web service."}, {Integer.toString(-800), "External Flow Reporting to GMS is not supported for this appliance"}, {Integer.toString(-801), "Flow Forwarder Gateway configurations are not correct"}, {Integer.toString(-802), "External Flow Reporting to GMS is not supported for this model"}, {Integer.toString(-803), "External Flow Reporting to GMS is not supported for this firmware version"}, {Integer.toString(-804), "App Visualization is not licensed on this appliance"}, {Integer.toString(-805), "Insufficient storage space available for Flow Agent assignment"}, {Integer.toString(-806), "Insufficient runtime memory available for Flow Agent assignment"}, {Integer.toString(-807), "Failed to register to Flow Agent 1"}, {Integer.toString(-808), "Failed to register to Flow Agent 2"}, {Integer.toString(-809), "Failed to register to Flow Agent 1 and 2"}, {Integer.toString(-810), "Failed to register to Flow Agent 1 and Flow Forwarder"}, {Integer.toString(-811), "Failed to register to Flow Agent 1, 2 and Flow Forwarder"}, {Integer.toString(-812), "Failed to register to Flow Agent 2 and Flow Forwarder"}, {Integer.toString(-813), "Failed to register to Flow Forwarder"}, {Integer.toString(-814), "Gateway Firewall is not available in GMS"}, {Integer.toString(-815), "Tunnel creation failed on the gateway firewall end"}, {Integer.toString(-816), "Tunnel creation failed on the managed appliance end"}, {Integer.toString(-817), "Appliance is not licensed for Cloud GMS Management and Reporting or Analytics"}, {Integer.toString(-818), "Insufficient processing power available for Flow Agent assignment"}, {Integer.toString(-819), "Insufficient bandwidth available for Flow Agent assignment"}, {Integer.toString(-820), "Failed to register to Flow Agent"}, {"EDIT_DOMAIN", "Edit Domain"}, {"VIEW_DOMAIN", "View Domain details"}, {"ADD_DOMAIN", "Add Domain"}, {"SELECT_TO_DELETE", "Please select domain(s)/auth server(s) to be deleted."}, {"SELECT_AS_TO_DEL", "Please select auth server(s) to be deleted."}, {"DELETE_CONFIRMATION", "You have selected to delete domain '"}, {"USER_DELETE_CONFIRMATION", "All auth servers, users, user types and their settings would also be deleted."}, {"USER_AS_DELETE_CONFIRMATION", "All users, user types and their settings would also be deleted."}, {"SURE_WANT_TO_CONTINUE", "Are you sure you want to continue?"}, {"MULTIPLE_DELETE_CONFIRMATION", "You have selected to delete the following domain(s):"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "You have selected to delete the following auth server(s):"}, {"AND_AS_DELETE_CONFIRMATION", "and delete the following auth server(s):"}, {"WANT_TO_CONTINUE", "Do you want to continue?"}, {"DOMAIN", "Domain"}, {"DOMAINS", "Domains"}, {"SEARCH", "Search"}, {"NAME", "Name"}, {"DOMAIN_TYPE", "Domain Type"}, {"DOMAIN_SETTINGS", "Domain Settings"}, {"ALIAS", "Alias"}, {"DISPLAY_DOMAIN", "Display Domain in Login screen"}, {"SET_AS_DEFAULT", "Set as Default Domain"}, {"HOST_NAME", "Host Name"}, {"HOST_TYPE", "Host Type"}, {"EQUALS", "Equals"}, {"STARTS_WITH", "Starts With"}, {"ENDS_WITH", "Ends With"}, {"CONTAINS", "Contains"}, {"LOCAL", "Local"}, {"REMOTE", "Remote"}, {"DOMAINS", "Domains"}, {"SSL_USED", "SSL Used"}, {"CONFIGURE", "Configure"}, {"NO_DOMAIN_FOUND", "No Domains Found"}, {"NO_AS_FOUND", "No Auth Servers Found"}, {"ADD_DOMAIN", "Add Domain"}, {"DELETE_DOMAINS", "Delete Domain(s)/Auth Server(s)"}, {"DELETE_ASS", "Delete Auth Server(s)"}, {"EQUALS", "Equals"}, {"STARTS_WITH", "Starts With"}, {"ENDS_WITH", "Ends With"}, {"CONTAINS", "Contains"}, {"LOCAL", "Local"}, {"REMOTE", "Remote"}, {"REMOTE_DOMAIN", "Remote Domain"}, {"ADMIN_PASSWORD", "Admin Password"}, {"DEFAULT_ADMIN_USER", "Default Admin User"}, {"AUTH_PORT", "Authentication Port"}, {"ACCT_PORT", "Accounting Port"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "Base Distinguished Name"}, {"SEARCH_FILTER", "Search Filter"}, {"SHARED_SECRET", "Shared Secret"}, {"USE_SSL", "Use SSL"}, {"SSL_PORT", "SSL Port"}, {"ANONYMOUS_LOGIN", "Anonymous Login"}, {"LOGIN_USER_NAME", "Login User Distinguished Name"}, {"DNAME_MSG", "Distinguished name used to authenticate to Directory Server when performing a bind. The value for this field should be specified as a DN (Distinguised Name). Example: [uid=xyz,ou=People,dc=example,dc=com] , [cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "Login Password"}, {"PROTOCOL_VERSION", "Protocol Version"}, {"LDAPV2", "LDAP Version 2"}, {"LDAPV3", "LDAP Version 3"}, {"SETTINGS", "Settings"}, {"USER_DIRECTORY_LDAP", "User Directory LDAP Schema"}, {"LDAP_SCHEMA", "LDAP Schema"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "User Defined"}, {"USER_OBJECTS", "User Objects"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "Login Name Attribute"}, {"FIRST_NAME", "First Name Attribute"}, {"LAST_NAME", "Last Name Attribute"}, {"EMAIL", "Email Attribute"}, {"TELEPHONE", "Telephone Attribute"}, {"CON_TIMEOUT", "Connection Timeout"}, {"SCHEMA", "Schema"}, {"TEST_SETTINGS", "Test Settings"}, {"TEST_RADIUS_SETTINGS", "Test RADIUS Settings"}, {"TEST_LDAP_MSG", "To test the LDAP settings, enter a valid LDAP"}, {"TEST_RADIUS_MSG", "To test the RADIUS settings, enter a valid RADIUS"}, {"TEST_MSG", "login name and password and click the Test button. Note that this will apply any changes that have been made."}, {"USER", "User"}, {"PWD", "Password"}, {"RUN_CLIENT_TEST", "Run Client Test"}, {"TEST_STATUS", "Test Status"}, {"RETURNED_USER_ATTRIBUTES", "Returned Test Results"}, {"TEST", "Test"}, {"OK", "OK"}, {"CANCEL", "Cancel"}, {"CLOSE", "Close"}, {"CANT_DELETE_LOCALDOMAIN", "LocalDomain cannot be edited/deleted"}, {"CANT_EDIT", "Cannot be edited if there is only one domain"}, {"EMPTY_NAME", "Name cannot be empty"}, {"EMPTY_ADMIN_PWD", "Admin Password cannot be empty"}, {"EMPTY_ADMIN_USER", "Default Admin User cannot be empty"}, {"EMPTY_AUTH_PORT", "Authentication Port cannot be empty"}, {"POSITIVE_AUTH_PORT", "Authentication Port should be a positive number"}, {"AUTH_PORT_RANGE", "Authentication Port should be in the range 0 - 65535"}, {"EMPTY_ACCT_PORT", "Accounting Port cannot be empty"}, {"POSITIVE_ACCT_PORT", "Accounting Port should be a positive number"}, {"EMPTY_BD_NAME", "Base Distinguished Name cannot be empty"}, {"EMPTY_SEARCH_FILTER", "Search Filter cannot be empty"}, {"EMPTY_SHRED_SECRET", "Shared Secret cannot be empty"}, {"EMPTY_SSL_PORT", "SSL Port cannot be empty"}, {"POSITIVE_SSL_PORT", "SSL Port should be a positive number"}, {"SSL_PORT_RANGE", "SSL Port should be in the range 0 - 65535"}, {"EMPTY_LOGIN", "Login User Distinguished Name cannot be empty"}, {"EMPTY_LOGIN_PWD", "Login Password cannot be empty"}, {"EMPTY_CON_TIMEOUT", "Connection Timeout cannot be empty"}, {"POSITIVE_CON_TIMEOUT", "Connection Timeout should be a positive number"}, {"RECOMMEND_SSL", "Using SSL is strongly recommended for secure communication with the remote server."}, {"CON_NOT_SECURE", "Your connection would not be secure if you do not use SSL."}, {"DOMAIN_EXISTS", "A Domain with this name already exists"}, {"ALIAS_EXISTS", "An alias with this name already exists"}, {"DOMAIN_INVALID", "Invalid Domain Name specified."}, {"DOMAIN_VALID_CHARS", "Name may contain only the following characters:"}, {"DOMAIN_VALID_CHARS_LIST", "Alphanumeric, .(Period), -(Hyphen), _(Underscore) and Space."}, {"SPECIFY_VALID_NAME", "Please specify a name with the allowed characters."}, {"DIR_GRP_SETTINGS", "Active Directory Group Settings"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "Allow Only AD Group Members"}, {"DIR_GROUPS", "Active Directory Group(s)"}, {"GRP_NAME_INVALID", "Invalid Group Name(s) specified."}, {"GRP_NAME_INVALID_LENGTH", "Group Name(s) can not be more than 200 characters."}, {"AUTH_SERVER_NAME", "Auth Server Name"}, {"ADD_AUTH_SERVER", "Add an auth server"}, {"ADD_AUTHSERVER", "Add Auth Server"}, {"EDIT_AUTHSERVER", "Edit Auth Server"}, {"DELETE_DOMAIN", "Delete this Domain"}, {"CANT_DELETE_LOCAL_AS", "Local Auth Server cannot be edited/deleted"}, {"CANT_DELETE_ADMIN_AS", "This auth server cannot be deleted since the default admin for this domain is authenticated against this server.\nMove the default admin to another auth server and then try again."}, {"EDIT_AUTH_SERVER", "Edit this auth server"}, {"VIEW_AUTH_SERVER", "View auth server details"}, {"DELETE_AUTH_SERVER", "Delete this auth server"}, {"AS_INVALID", "Invalid Auth Server specified."}, {"AS_EXISTS", "An Auth Server with this name already exists"}, {"EMPTY_AS_NAME", "Auth Server Name cannot be empty"}, {"AS_NAME_MSG", "The name of the auth server that would get created. This name is useful to manage the different authentication servers in a domain."}, {"AS_DELETE_CONFIRMATION", "You have selected to delete auth server '"}, {"PRI_RADIUS", "Primary RADIUS Server"}, {"AUTH_PROTOCOL", "Authentication Protocol"}, {"RADIUS_TIMEOUT", "RADIUS Timeout (Seconds)"}, {"MAX_RETRIES", "Max Retries"}, {"BACK_RADIUS", "Backup RADIUS Server"}, {"RADIUS_USER_GROUP", "RADIUS User Group Settings"}, {"ALLOW_GROUP_MEMBERS", "Allow Only RADIUS Group\tMembers"}, {"USE_SW_VSA", "Use SonicWall Vendor specific attribute on RADIUS Server"}, {"USE_FILTER_ID", "Use Filter-ID attribute on RADIUS Server"}, {"ALLOW_GROUPS", "Allowed RADIUS Group(s)"}, {"USER_GROUP", "User Group"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS Timeout cannot be empty"}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS Timeout should be a positive number"}, {"EMPTY_MAX_RETRIES", "Max Retries cannot be empty"}, {"POSITIVE_MAX_RETRIES", "Max Retries should be a positive number"}, {"TEST_USER_NAME", "Test User Name cannot be empty."}, {"TEST_USER_PWD", "Test User Password cannot be empty."}, {"DOMAIN_NAME_MSG", "The name of the domain that would get created. This name would be visible in the Domains drop down on the login page."}, {"DOMAIN_TYPE_MSG", "The type of the domain, [Local] or [Remote]. A domain which needs to authenticate users from an external platform like an LDAP or AD server would need to be created as a [Remote] type domain. A [Local] type domain would have the user account and authentication details present inside the SGMS database. By creating a [Local] type domain you can support multiple domains inside SGMS without requiring external authentication interfaces."}, {"ADMIN_PASSWORD_MSG", "When a new domain of type [Local] is created, an [admin] user is created by default for the domain. You need to specify the password for the admin user."}, {"ADMIN_USERID_MSG", "Specify a user name that needs to be the admin for the domain. This user name should be a valid user name in the directory server associated with this domain. If the name [admin] is specified for this field, then a user with user id [admin] should exist in the associated directory and should have administrative privileges. Example: jdoe"}, {"HOST_NAME_MSG", "The hostname or the IP address of the Remote authentication server. Example: \t[mydc.example.com], [X.X.X.X] (ip address), [company.com]. If the remote server is a Windows Active Directory (AD) server and you have multiple domains where you need to authenticate users from under the AD forest then specify the Global Catalog name or IP address of your AD Forest as the Host Name."}, {"AUTHENTICATION_PORT_MSG", "The port number on the LDAP or AD server on which it listens for the authentication requests. Default Value is 389 in case of LDAP/AD servers. If you have specified the Global Catalog name or IP address of your AD Forest as the Host Name then you should specify the corresponding port number too. Default Value is 3268."}, {"HOST_TYPE_MSG", "This value indicates the type of the Remote Authentication Server if it is an LDAP server, a Windows Active Directory or a RADIUS Server."}, {"ALIAS_MSG", "A short form of the domain name which can be used in the GMS login screen to login when the domains are not displayed. Example: alias\\\\username. Alias is filled automatically with the domain name if the length of the domain name is less than or equal to 16 characters."}, {"PROTOCOL_VERSION_MSG", "This is the LDAP protocol version on which the remote LDAP/AD server is running on."}, {"BASE_DN_MSG", "The Base Distinguished Name is used to identify the root entry in the directory from which searches initiated by SGMS  would occur. The base DN for a directory (say example.com) should be written in the form: [dc=example,dc=com]. It is always required to specify the topmost level node as the Base DN in the directory tree below which you expect all the users to be present that can login into SGMS."}, {"USE_SSL_MSG", "Specify whether to use SSL for binding to the remote server. This is strongly recommended. For this, the remote server\\'s CA certificate or the root certificate of the CA that signed the server\\'s certificate should be present in keystore of SGMS as trusted CAs."}, {"SSL_PORT_MSG", "The port number on which the remote server is listening for SSL bind requests. Default Value is 636 in case of LDAP/AD servers. If you have specified the Global Catalog name or IP address of your AD Forest as the Host Name then you should specify the corresponding SSL port number too. Default Value is 3269."}, {"ANONYMOUS_LOGIN_MSG", "(Not Recommended). Specify whether SGMS should bind to the remote server anonymously. For this the Remote LDAP/AD server should allow anonymous binds. Anonymous binds should only be tried when a service account (at least one valid user account in the directory) is not known beforehand. This is strongly discouraged."}, {"LOGIN_USER_DN_MSG", "Distinguished name used to authenticate to Directory Server when performing a bind. The value for this field should be specified as a DN (Distinguised Name). Example: [uid=xyz, ou=People, dc=example, dc=com] , [cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "Password for the Login User DN."}, {"CONN_TIMEOUT_MSG", "This value (in milliseconds) is the connection timeout period. After this period of time, the connection attempt with the remote server will be given up if it is not successful."}, {"LDAP_SCHEMA_MSG", "The LDAP schema of the associated LDAP/AD server."}, {"OBJ_CLASS_MSG", "The name of one of the standard object classes that the users belong to."}, {"LOGIN_NAME_ATTRIBUTE_MSG", "The attribute name on the LDAP/AD server which represents the user id. This is the attribute on the LDAP server whose value would be used as the user id on the SGMS Login Page. Example: uid, sAMAccountName etc."}, {"FIRST_NAME_ATTRIBUTE_MSG", "The attribute name on the LDAP server which represents First Name. Example: givenName."}, {"LAST_NAME_ATTRIBUTE_MSG", "The attribute name on the LDAP server which represents Last name. Example: sn."}, {"EMAIL_ATTRIBUTE_MSG", "The attribute name on the LDAP server which represents email id. Example: mail."}, {"TELEPHONE_ATTRIBUTE_MSG", "The attribute name on the LDAP server which represents Telephone number. Example: telephoneNumber."}, {"TEST_PANE_MSG", "Here you can test the Auth Server (LDAP/AD/RADIUS) configurations entered on the Settings Panel."}, {"TEST_PANE_USER_MSG", "Enter a valid user name that you would enter on the SGMS Login page to login into GMS. This user name should be valid and present in the associated Directory for this domain. Also enter the password for this user name in the directory."}, {"EMPTY_DIR_GROUP", "Directory Group Name(s) can not be empty."}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "This option when selected allows only those users that are members of the specified Active Directory Groups to login into GMS. With this option, it is also necessary to select the Host Type as [Active Directory] on the Settings Panel."}, {"DIR_GROUPS_MSG", "Specify the AD Group names, members of which should be allowed to login into GMS. Multiple AD Groups can be specified as semicolon delimited. Example: [GMSUsers], [ADGroup1;AD group2;GMS Users;Group4]"}, {"RADIUS_HOST_NAME_MSG", "The hostname or the IP address of the RADIUS authentication server. Example: [myradius.example.com], [X.X.X.X] (ip address), [company.com]."}, {"RADIUS_AUTH_PORT_MSG", "The port number on the RADIUS server on which it listens for the authentication requests. Default Value 1812."}, {"RADIUS_SHARED_SECRET_MSG", "The secret shared between GMS and the RADIUS Server. This is a string value known only to the RADIUS server and the RADIUS client."}, {"RADIUS_AUTH_PROTOCOL_MSG", "The RADIUS Authentication Protocol to be used for authentication."}, {"RADIUS_TIMEOUT_MSG", "This value (in seconds) indicates the connection timeout period. After this period of time, the connection attempt with the RADIUS server will be given up if it is not successful."}, {"RADIUS_MAX_RETRIES_MSG", "This value denotes the number of times the authentication attempt should be tried with the RADIUS Server. After the specified number of attempts, the authentication attempt with the remote server will be given up if it is not successful."}, {"RADIUS_ONLY_GROUP_MSG", "This option when selected allows only those users that are members of the specified RADIUS User Groups to login into GMS."}, {"RADIUS_USE_FILTER_MSG", "This option when selected allows the value of the RADIUS attribute \\'Filter-ID\\' to be used as the RADIUS user group identifier. In order to use this option, the RADIUS server should be properly configured to return this attribute-value pair with every user-id that is authenticated from the RADIUS Server for login into GMS."}, {"RADIUS_USE_SW_MSG", "This option when selected uses the value of the SonicWall vendor specific attribute(s) [SonicWall-User-Group and SonicWall-User-Groups] as the RADIUS user group identifier. In order to use this option, the RADIUS server should be properly configured to return the SonicWall vendor specific attribute-value pair with every user-id that is authenticated from the RADIUS Server for login into GMS."}, {"RADIUS_ALLOW_GROUPS_MSG", "Specifies the RADIUS User Group names, members of which should be allowed to login into GMS. Example [GMSUsers]. Multiple RADIUS User Groups can be specified in the form of a semicolon separated string. Example: [RadGroup1;Rad group2;GMS Users;Group4]."}, {"ADD_AUTH_SERVER_MSG", "Allows, if checked, to add a new Auth Server configuration while adding domain."}, {"PAGE_LABEL", "Page"}, {"MANAGE_PAGE", "Manage Page"}, {"ADD_COMPONENT", "Add Component"}, {"PAGE_MANAGER", "Page Manager"}, {"ADD_NEW_PAGE", "Add New Page"}, {"DEFAULT_PAGE", "Default Page"}, {"PAGE_DETAILS", "Page Details"}, {"PAGE_TITLE", "Page Title"}, {"COMPONENT_TITLE", "Component Title"}, {"PAGE_LAYOUT", "Page Layout"}, {"ONE_COLUMN_LAYOUT", "1 Column(100)"}, {"TWO_COLUMN_LAYOUT", "2 Column(50:50)"}, {"THREE_COLUMN_LAYOUT", "3 Column(30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 Column(25:25:25:25)"}, {"ADD", "Add"}, {"EDIT", "Edit"}, {"DELETE", "Delete"}, {"ADD_COMPONENT_MANAGER", "Add Component Manager"}, {"TYPE", "Type"}, {"RSS_FEED_DETAILS", "RSS Feed Details"}, {"RSS_FEEDS", "RSS Feeds"}, {"TITLE", "Title"}, {"ITEMS", "Items to show (max.)"}, {"REFRESH_INTERVAL", "Refresh Interval"}, {"REFRESH_INTERVAL_MINUTE", "in minutes"}, {"EVENT_ALERT_DETAILS", "Event Alert Details"}, {"ALERT_TYPES", "Alert Types"}, {"REFRESH_INTERVAL_HOUR", "in hours"}, {"ALERT_SHOW_TIME_HOURS", "Show alerts triggered within last"}, {"APPLICATION_WIDGET_DETAILS", "Application Widget Details"}, {"WIDGETS", "Widgets"}, {"RSS_FEED_TYPE", "RSS Feed"}, {"EVENT_ALERT_TYPE", "Event Alert"}, {"APPLICATION_WIDGET_TYPE", "Application Widget"}, {"CUSTOM_RSS_FEED", "Custom RSS Feed"}, {"CUSTOM_RSS_URL", "Custom RSS URL"}, {"END_EDIT", "End Edit"}, {"RSS_URL", "RSS URL"}, {"SAVE", "Save"}, {"DEFAULT_PAGE", "Default Page"}, {"SAVE_LAYOUT_FAIL_MSG", "Saving layout failed"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "Saving control bar status failed"}, {"ADD_COMPONENT_FAIL_MSG", "Adding component failed"}, {"DELETE_COMPONENT_FAIL_MSG", "Deleting component failed"}, {"PAGE_ACTION_FAIL_MSG", "Page action failed"}, {"RSS_FEED_FAIL_MSG", "RSS Feed fetch failed."}, {"EVENT_ALERT_FAIL_MSG", "GEM Alert fetch failed."}, {"APPLICATION_WIDGET_FAIL_MSG", "Application Widget fetch failed."}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "No alerts configured for destination: Dashboard."}, {"NO_ALERT_FOUND_MSG", "No alerts found to display."}, {"CHANGE_DEFAULT_PAGE_MSG", "Making this page as default would change any previous default page setting. Are you sure you want to continue?"}, {"DELETE_DEFAULT_PAGE_MSG", "Cannot delete default page. Choose any other page to be default page and then delete this page."}, {"DELETE_PAGE_AND_COMPONENT_MSG", "Deleting a page in turn deletes all the components in that page. Are you sure you want to delete this page?"}, {"VALID_URL_MSG", "Please enter a URL in the format of: http://www.yourdomain.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "Are you sure you want to delete this component?"}, {"NO_COMPONENT_MSG", "No Component added in the page currently."}, {"LOAD_DATA_MSG", "Loading data..."}, {"COMPONENT_EXISTS_MSG", "The component already exists. Existing Component Details: "}, {"REFRESH_INTERVAL_RANGE", "Refresh Interval is out of range. Please fill a valid value."}, {"ITEMS_RANGE", "Number of Items is out of range. Please fill a valid number."}, {"ALERT_SHOWTIME_RANGE", "Show Time for Alerts is out of range. Please fill a valid value."}, {"NO_COMPONENT_SELECTED_ERR", ":Please select one before adding component to the page."}, {"ADDCOMPONENT_ERR_QUOTES", "Component Title cannot contain the following characters: Single quote, Double quote, Colon, Percentage, Hash, Question Mark and Pipe symbols."}, {"ADDPAGE_ERR_QUOTES", "Page Title cannot contain the following characters: Single quote, Double quote, Colon, Percentage, Hash, Question Mark and Pipe symbols."}, {"TIME_PERIOD", "Time Period"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "Deleting a page in turn deletes all the widgets in that page. Are you sure you want to delete this page?"}, {"ADDWIDGET_ERR_QUOTES", "Widget title cannot contain the following characters: Single quote, Double quote, Colon, Percentage, Hash, Question Mark and Pipe symbols."}, {"TIME_PERIOD", "Time Period"}, {"COPY_WIDGET_VALIDATION_MSG", "Please select a page to copy.."}, {"COPY_WIDGET_HEADER", "Copy widget"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "No keyword in the search string is applicable to this widget"}, {"IGNORED_INVALID_SEARCH_FILTER", "Ignored invalid search filter."}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "One or more GMSVP Instances have no Geographic Location."}, {"NDA_NG_REPORTING_WIDGET_MSG", "No Matching Records Found."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "Alert Message"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "Last Reported Time"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "Alert Type"}, {"LOGS_WIDGET_COL_MESSAGE", "Message"}, {"LOGS_WIDGET_COL_DATE", "Date"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "User Details"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "Last Access Time"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "Description"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "Scheduled Time(Local)"}, {"DSB_CONFIRM_DELETE_WIDGET", "This operation will delete the widget , Continue?"}, {"DSB_SEARCH_DIALOG_MESG", "These widgets matched the result for "}, {"DSB_SEARCH_DIALOG_HEADER", "Additional Search Results"}, {"DSB_CLEARHISTORY_MESG", "Clear all search history?"}, {"DSB_CLEARHISTORY_HDR", "search history"}, {"DSB_ADDNEW_WIDGET_LBL", "Add new widget: "}, {"DSB_GENSTTINGS_HDR", "General Settings "}, {"DSB_ASSOCPROD_HDR", "Associated Products "}, {"DSB_SUBALERTS_HDR", "Included Sub alerts "}, {"DSB_WIDGETTITLE_LBL", "Title: "}, {"DSB_NOFITEMS_LBL", "Number of items: "}, {"DSB_REFINT_LBL", "Refresh Interval: "}, {"DSB_ALERTSTRIGGERED_LBL", "Show alerts triggered within last: "}, {"DSB_NEWSUBALERTS_LBL", "New sub alerts: "}, {"DSB_CUSTRSSURL_LBL", "Custom RSS URL: "}, {"DSB_WRAPTEXT_LBL", "Wrap text: "}, {"DSB_ADDPAGE_HDR", "Add new page "}, {"DSB_ADDPAGE_LBL", "Page title: "}, {"DSB_MAPLOCATIONDLG_HDR", "Add/Edit Location"}, {"DSB_ADDRESS_LBL", "Address: "}, {"DSB_GEOLOCATION_LBL", "Geo Location: "}, {"DSB_DELPAGE_LBL", "System Generated Page , Cannot be deleted."}, {"DSB_DELPAGE_HDR", "Delete Page?"}, {"DSB_DELPAGECONFIRM_MSG", "Do you want to delete the page?"}, {"CZ_YES", "Yes"}, {"CZ_CERT_ISSUER", "Certificate Issuer"}, {"CZ_SUB_DN", "Subject Distinguished Name"}, {"CZ_CERT_SN", "Certificate Serial Number"}, {"CZ_VALID_FROM", "Valid From"}, {"CZ_EXPIRES_ON", "Expires On"}, {"CZ_STATUS", "Status"}, {"CZ_REQ_GEN", "Request Generated"}, {"CZ_SUB_KEY_ID", "Subject Key Identifier"}, {"CZ_CRL_STATUS", "CRL Status"}, {"CZ_CRL_EXPIRES_ON", "CRL Expires On"}, {"CZ_CRL_REQUIRED", "CRL Is Required"}, {"CZ_CRL_AUTO_URL", "CRL auto-update URL"}, {"CZ_HEADER", "Certificates and Certificate Requests"}, {"CZ_NAME", "Name"}, {"CZ_TYPE", "Type"}, {"CZ_VALIDATED", "Validated"}, {"CZ_EXPIRES", "Expires"}, {"CZ_DETAILS", "Details"}, {"CZ_CONFIGURE", "Configure"}, {"CZ_DELETE_CERT", "Delete this certificate"}, {"CZ_CANT_DELETE_CERT", "This is a built-in certificate that cannot be deleted"}, {"CZ_EMAIL_CERT", "Email this certificate"}, {"CZ_CANT_EMAIL_CERT", "Only imported local certificates and signing requests can be emailed"}, {"CZ_IMPORT_CERT_CRL", "Import certificate revocation list"}, {"CZ_UPLOAD_SIGNED_CERT", "Upload signed certificate"}, {"CZ_CERT_SEARCH", "Certificates Search"}, {"CZ_CERT_SELECTED", "You have selected to delete the certificate"}, {"CZ_SURE", "Are you sure you want to continue"}, {"CZ_CERTS_SELECTED", "You have selected to delete the following certificate(s)."}, {"CZ_PLZ_SELECT", "Please select certificate(s) to be deleted."}, {"CZ_VIEW_STYLE", "Certificates View Style"}, {"CZ_ALL_CERTS", "All certificates"}, {"CZ_IMPORT_CERTS", "Imported certificates and requests"}, {"CZ_BUILTIN_CERTS", "Built-in certificates"}, {"CZ_INCLUDE_EXPIRED_CERTS", "Include expired built-in certificates"}, {"CZ_IMPORT", "Import..."}, {"CZ_NEW_REQ", "New Signing Request..."}, {"CZ_DEL_CERTS", "Delete Certificate(s)"}, {"CZ_REQUIRE_CERT", "Import requires a Certificate Name."}, {"CZ_IMPORT_REQUIRE_FILE", "Import requires a Certificate File."}, {"CZ_NO_DOT", "Invalid Certificate Name. It is not allowed to have any '.' in it."}, {"CZ_IMPORT_REQUIRE_CMP", "Import requires a Certificate Management Password."}, {"CZ_IMPORT_CERT", "Import Certificate"}, {"CZ_IMPORT_LOCAL", "Import a local end-user certificate with private key from a PKCS#12 (.p12 or .pfx) encoded file"}, {"CZ_IMPORT_CA", "Import a CA certificate from a PKCS#7 (.p7b), PEM (.pem) or DER (.der or .cer) encoded file"}, {"CZ_CERT_NAME", "Certificate Name"}, {"CZ_CMP", "Certificate Management Password"}, {"CZ_SEL_FILE", "Please select a file to import"}, {"CZ_SPECIFY_FILE", "Please specify a file to import"}, {"CZ_UPLOAD_CERT", "Upload Certificate"}, {"CZ_UPLOAD_SIGN_CERT", "Upload Signed Certificate for Signing Request"}, {"CZ_SEL_UPLOAD_FILE", "Please select a file to upload"}, {"CZ_FILE_FORMAT", "File should be PEM (.pem) or DER (.der or .cer) encoded"}, {"CZ_EXPORT_CERT", "Export Certificate"}, {"CZ_EXPORT_CERT_REQ", "Export Certificate Request"}, {"CZ_CERT_EMAIL_CONTENT", "A PKCS#10 Certification Request has been generated and is available for email. Save this file on your local disk for submission to a Registration or Certificate Authority. The file will be saved in PEM Certificate Request format, by default as"}, {"CZ_CHANGE_FILE_NAME", "(the file name can be changed at download as needed)."}, {"CZ_SPECIFY_URL", "Please specify a CRL URL."}, {"CZ_SPECIFY_CRL_FILE", "Please specify a CRL file to import"}, {"CZ_INVALID_FILE", "The selected file format is not valid."}, {"CZ_SPECIFY_VALID_LC", "Please specify a valid local certificate file."}, {"CZ_SPECIFY_VALID_CA", "Please specify a valid CA certificate file."}, {"CZ_SPECIFY_VALID_CRL", "Please specify a valid CRL file."}, {"CZ_SPECIFY_VALID_SIGNED", "Please specify a valid signed certificate file."}, {"CZ_IMPORT_CRL", "Import CRL"}, {"CZ_IMPORT_CRL_FULL", "Import Certificate Revocation List"}, {"CZ_IMPORT_CRL_FILE", "Import CRL directly from a PEM (.pem) or DER (.der or .crl) encoded file"}, {"CZ_SEL_CRL_FILE", "Select a CRL file to import"}, {"CZ_AUTO_IMPORT_CRL", "Periodically auto-import CRL via HTTP"}, {"CZ_CRL_LOC", "Enter CRL's location (URL)"}, {"CZ_INVALIDATE_CERTS", "Invalidate Certificates and Security Associations if CRL import or processing fails"}, {"CZ_CMP_REQUIRE", "Certificate Management Password is required to export a certificate"}, {"CZ_CERT_NAME_REQUIRE", "PKCS10 Generation requires a Certificate Name."}, {"CZ_CERT_NAME_IN_USE", "Certificate Name is already in use. Please select another."}, {"CZ_SUB_DN_REQUIRE", "PKCS10 Generation requires at least one Subject Name attribute."}, {"CZ_CN_TWO_CHARS", "Country Name should be two characters"}, {"CZ_DOMAIN_INVALID", "Invalid Domain Name in Subject Alternative Name."}, {"CZ_IP_INVALID", "Invalid IP Address in Subject Alternative Name."}, {"CZ_EMAIL_INVALID", "Invalid Email Address in Subject Alternative Name."}, {"CZ_CERT_REQ", "Certificate Signing Request"}, {"CZ_GEN_CERT_REQ", "Generate Certificate Signing Request"}, {"CZ_CERT_ALIAS", "Certificate Alias"}, {"CZ_COUNTRY", "Country"}, {"CZ_STATE", "State"}, {"CZ_LOC", "Locality or County"}, {"CZ_COMPANY", "Company or Organization"}, {"CZ_LOC_CITY", "Locality, City, or County"}, {"CZ_DEPT", "Department"}, {"CZ_GROUP", "Group"}, {"CZ_TEAM", "Team"}, {"CZ_CNAME", "Common Name"}, {"CZ_SN", "Serial Number"}, {"CZ_EMAIL", "E-Mail Address"}, {"CZ_SUB_ALT_NAME", "Subject Alternative Name (Optional)"}, {"CZ_DOMAIN_NAME", "Domain Name"}, {"CZ_IPV4", "IPv4 Address"}, {"CZ_SUB_KEY_TYPE", "Subject Key Type"}, {"CZ_SIG_ALGORITHM", "Signature Algorithm"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "Subject Key Size"}, {"CZ_NO_CERTS", "No Certificates Found"}, {"IMPORT", "Import"}, {"CZ_SCEP_CONFIG", "SCEP Configuration"}, {"CZ_CSR_LIST", "CSR List"}, {"CZ_NO_CSR", "No CSR"}, {"CZ_CHALLENGE_PWD", "Challenge Password(optional)"}, {"CZ_CA_URL", "CA URL"}, {"CZ_REQ_COUNT", "Request Count"}, {"CZ_POLL_INTERVAL", "Polling Interval(S)"}, {"CZ_POLL_TIME", "Max Polling Time(S)"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA URL can not be empty"}, {"CZ_GEN_CSR", "There is no CSR available, please generate at least one"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "All settings from the selected filter will be pushed to all units under the selected group node."}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "All settings from the selected filter will be inherited from the selected unit\\'s parent node."}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "All settings from the selected filter will be pushed from the selected group node to the parent node.<br>In order to apply settings to all units under the parent node (excluding the selected node and its children), make the appropriate selection in the Preview screen."}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "All settings from the selected filter will be pushed from the selected unit to the parent node.<br>In order to apply settings to all the units under the parent node (excluding the selected unit), make the appropriate selection in the Preview screen."}, {"WS_URI_HEADER", "Public URI"}, {"WS_URI_INSTRUCTIONS", "Enter the public server name for this deployment.  This name will be used to access Web Services on this server and will be included in embedded cross-links."}, {"WS_URI_NOTE", "Note: The public server port is used to access GMS Web Services from the public domain. To modify the port on which GMS runs Web Services, please navigate to System Interface/Deployment/Settings"}, {"WS_DEPLOYMENT_HEADER", "GMS Deployment"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "Select the deployment to configure Web Services for."}, {"WS_DEPLOYMENT_ERROR", "There are no licensed deployments currently active"}, {"WS_STATUS_HEADER", "Web Services"}, {"WS_SERVICES_ERROR", "No Web Services were found for this deployment"}, {"WS_DEPLOYMENTS_EMPTY", "Unable to get list of deployments.  Please register this instance of GMSVP."}, {"WS_DISTRIBUTED_HEADER", "Distributed Instances"}, {"WS_DISTRIBUTED_EMPTY", "There are no distributed instances configured for this server"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "Apply Template: "}, {"HM_APPLY_RECORDING_TASK_DESC", "Apply Recording: "}, {"LM_CONFIRM_DELETE_RULE", "Are you sure you want to delete the selected rule(s)?"}, {"LM_SUCCESS_DELETE_RULE", "Rule Delete action successful."}, {"LM_FAILURE_DELETE_RULE", "Failed to delete the selected rule(s) successfully."}, {"LM_SUCCESS_UPDATE_RULE", "Rule Update action successful."}, {"LM_FAILURE_UPDATE_RULE", "Failed to update the rule successfully."}, {"LM_DUPLICATE_STMT_NAME", "A rule with the same name already exists.\\nPlease enter a unique name for the rule"}, {"LM_RULE_DESTINATION_EMPTY", "Destination is empty.\\nPlease specify a valid entry."}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "Destination cannot exceed 256 characters.\\nPlease specify a valid entry."}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "Destination value has to be specified for the selected type.\\nPlease specify a valid entry."}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "A Schedule must be assigned to every destination.\\nPlease select a valid schedule or schedule group."}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "The domain of the Destination selected in this page does not match\\nwith that of the Severity selected from the previous page.\\n\\nIt is important that the objects are picked from within the same domain.\\nIf the selected severity is incorrect, go back and pick the severity from the intended domain.\\nOtherwise, select a Destination from the domain that matches the Severity."}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "The domain of the Schedule selected in this page does not match\\nwith that of the Severity selected from the previous page.\\n\\nIt is important that the objects are picked from within the same domain.\\nIf the selected severity is incorrect, go back and pick the severity from the intended domain.\\nOtherwise, select a Schedule from the domain that matches the Severity."}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "Failed to set the control bar status."}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "Failed to set the auto scroll status."}, {"LM_READER_START_SUCCESS", "Live Monitoring Reader has been started."}, {"LM_READER_START_FAILURE", "Could not start the Live Monitroing Reader. Please check the Settings Configuration.\\n (Note: The forwarding address and port specified should be accessible from the Console/Web Server)."}, {"LM_READER_STOP_SUCCESS", "Live Monitoring Reader has been stopped."}, {"LM_READER_STOP_FAILURE", "Could not stop the Live Monitoring Reader."}, {"LM_EC_DISABLED", "Syslogs Forwarding is currently Disabled.<br>Syslogs must be forwarded to the Event Manager service for monitoring.<br>To Enable Syslogs forwarding for monitoring, click on Settings in the control bar above."}, {"LM_READER_NO_ALERT_MSG", "No new alerts have been received by the Reader.<br>Note: If the problem persists, please check Monitor Settings and appliance's syslog configurations."}, {"LM_READER_STOPPED_MSG", "The Reader is currently stopped.<br>Please start the Reader by clicking the Start button in the control bar above."}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "You do not have access to aplliance(s)/unit(s).<br>If you want to monitor syslogs forwarded by any of these units, please contact your administrator."}, {"LM_READER_ERROR_MSG", "Error encountered.<br>An exception occured while processing live monitor reader collection."}, {"LM_READER_SOCKET_ERROR_MSG", "Error encountered.<br>An exception occured while starting the live monitor reader.<br>Exception details: "}, {"LM_FAILURE_UPDATE_SETTINGS", "Failed to update live monitor settings."}, {"LM_SUCCESS_UPDATE_SETTINGS", "Successfully updated live monitor settings."}, {"LM_WARN_ENABLE_EC", "Event Manager uses syslogs forwarded from the Syslog Collector for monitoring. These syslogs are sent to the Engine to identify events based on rules defined.\\n\\nNote: Enabling this option will forward syslogs received by all Syslog Collector services in a deployment to a Central Event Manager service. This will increase the syslog traffic across the network, since every message is cloned by the Syslog Collector for event handling."}, {"LM_STMT_CHANGED_MSG_1", "You have made changes to the selected Rule"}, {"LM_STMT_CHANGED_MSG_2", ".\\nGoing to the previous screen (Rule List page) will mean losing your changes.\\nHit OK to go to the Rule List page or Cancel to continue with editing this rule."}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "Failed to update docking status."}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "You do not have Update Privileges on this Screen."}, {"LM_DELETE_STMT_EMPTY", "Please select atleast one rule for deletion."}, {"LM_STMT_RULE_EMPTY", "No Rule Type has been choosen.\\nPlease select a Rule Type."}, {"LM_STMT_RULE_DUPLICATE", "A Rule with the same Rule Type and Editor properties already exists.\\nPlease select unique rule properties for this rule."}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "Forward Port changed for the Reader.\\nIt may take few seconds to restart the Reader successfully."}, {"LM_NO_RULE_EDITABLE", "No editable Rule Type in the selected Group.\nPlease select another Group/Rule Type."}, {"LM_DISABLE_STMT_EMPTY", "Please select atleast one rule for enable/disable action."}, {"LM_SUCCESS_DISABLE_RULE", "Rule Enable/Disable action successful."}, {"LM_FAILURE_DISABLE_RULE", "Failed to enable/disable the selected rule(s) successfully."}, {"LM_EDIT_RULE_MSG_1", "You have selected to edit the following rule(s):\\n"}, {"LM_EDIT_RULE_MSG_2", "\\nThe selected list contains all rule(s) that cannot be edited.\\n\\nPlease select another rule to continue."}, {"LM_EDIT_RULE_MSG_3", "\\nThe selected list contains rule(s) that cannot be edited marked by *.\\n\\nDo you want to continue with editing the remaining rules?"}, {"LM_DELETE_RULE_MSG_1", "You have selected to delete the following rule(s):\\n"}, {"LM_DELETE_RULE_MSG_2", "\\nThe selected list contains all rule(s) that cannot be deleted.\\n\\nPlease select another rule to continue."}, {"LM_DELETE_RULE_MSG_3", "\\nThe selected list contains rule(s) that cannot be deleted marked by *.\\n\\nDo you want to continue with deleting the remaining rules?"}, {"LM_DELETE_RULE_MSG_4", "\\nDo you want to continue?"}, {"MASKED_LIVEMONITOR_MESSAGE", "Alert message has been masked from being displayed based on enforced privacy policies"}, {"MASKED_ADDITIONAL_INFORMATION", "Additional information has been masked from being displayed based on enforced privacy policies"}, {"DSB_NONENGFW_ALERT_TITLE", "Firmware Version Alert!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "This GMS is managing SonicOS appliances running non-English firmware."}, {"DSB_NONENGFW_ALERT_MSGPART2", "Please note that objects and policies defined in non-English characters in these appliances may not display correctly in GMS UI. Modifying and pushing such objects and policies to such appliances may not lead to expected results."}, {"SYSLOGTAIL_STARTED", "Syslog Reader (for Real-Time Syslog Monitoring) has been started."}, {"SYSLOGTAIL_START_FAILED", "Could not start the Syslog Reader. Please check the Syslog Forwarding Configuration.&nbsp;&nbsp;(Note: The forwarding address and port specified should be accessible from the Console/Web Server)."}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog Reader (for Real-Time Syslog Monitoring) is already running; no changes were made"}, {"SYSLOGTAIL_STOPPED", "Syslog Reader (for Real-Time Syslog Monitoring) has been stopped."}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog Reader (for Real-Time Syslog Monitoring) is already stopped; no changes were made"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "No new syslog has been received by the Reader."}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(The Reader could still be attempting to collect the syslogs)."}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(If the problem persists, please check the Syslog Reader Settings and the firewall configurations)."}, {"SYSLOGTAIL_CONFIG_CHECK", "Please check the Syslog Reader Settings and the firewall configurations."}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "No syslog found."}, {"SYSLOGTAIL_MODIFY_FILTER", "Please try modifying the filter string for better results."}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(Note: Use <b>AND</b> or <b>OR</b> between multiple strings for better results)."}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "The Syslog Reader is currently stopped"}, {"SYSLOGTAIL_START", "Please start the Syslog Reader."}, {"SYSLOGTAIL_ERROR", "Error encountered."}, {"SYSLOGTAIL_ERROR_MESSAGE", "An exception occured while processing syslog collection."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Syslog Forwarding is not enabled."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Please configure the Syslog Forwarding address and port, and start the Syslog Reader."}, {"MASKED_SYSLOG_MESSAGE", "Remaining of the syslog message has been masked from being displayed based on enforced privacy policies"}, {"EVENT_ALERTS_SEARCH", "Alerts Search"}, {"EVENT_ALERTS_DELETE", "Delete Alert(s)"}, {"EVENT_ALERTS_ENABLE_DISABLE", "Enable/Disable Alert(s)"}, {"EVENT_ALERTS_ADD", "Add Alert"}, {"EVENT_ALERTS_HEADER", "Alerts"}, {"EVENT_ALERTS_ALERT_NAME", "Name"}, {"EVENT_ALERTS_ALERT_TYPE", "Alert Type"}, {"EVENT_ALERTS_INTERVAL", "Interval"}, {"EVENT_ALERTS_DEST_SCHED", "Destination/Schedule"}, {"EVENT_ALERTS_ENABLED", "Enabled"}, {"EVENT_ALERTS_DOMAIN", "Domain"}, {"EVENT_ALERTS_CONFIGURE", "Configure"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "No alerts found"}, {"DTF_ANY", "Any Time"}, {"DTF_ADD", "Add Unit"}, {"DTF_EXECUTE", "Execute"}, {"DTF_ENABLED", "Enabled"}, {"DTF_SEARCH", "Default Tasks Search"}, {"DTF_NOT_FOUND", "No Default Tasks Found."}, {"DTF_DT", "Default Tasks"}, {"DTF_DESC", "Description"}, {"DTF_TOU", "Type of Units"}, {"DTF_DURING", "Task created during"}, {"DTF_NO_DTS", "No Default Tasks selected for execution."}, {"DTF_EXEC", "Execute this default task."}, {"DTF_NO_DISABLE", "This default task can not be disabled."}, {"DTF_NO_EXEC", "This default task can not be executed."}, {"DTF_SEL_UNITS", "Select Units"}, {"DTF_EXEC_METHOD", "Execution Method"}, {"DTF_ATLEAST_ONE", "Select atleast one unit to execute the task."}, {"DTF_EXEC_ALL", "Execute the default tasks on all units in the system"}, {"DTF_EXEC_FOLL", "Execute the default tasks on the following selected units"}, {"DTF_REAPPLY_1", "Execute only if previously not applied"}, {"DTF_REAPPLY_2", "Only tasks that were not previously applied to the selected unit(s) would be executed."}, {"DTF_REAPPLY_3", "Default Tasks that have already been executed would be ignored for that unit."}, {"DTF_EXEC_1", "Execute even if previously applied"}, {"DTF_EXEC_2", "All selected tasks would be re-executed on the selected unit(s) even if they were previously applied."}, {"DTF_ENABLE_SUCCESS", "Successfully updated the Default Task selection."}, {"DTF_ENABLE_FAIL", "Failed to update the Default Task selection."}, {"DTF_SCHEDULE_SUCCESS", "Successfully scheduled the Default Tasks for execution."}, {"DTF_SCHEDULE_FAIL", "No Default Tasks scheduled since the selected tasks are not applicable or have already been executed."}, {"AUTOASSIGN_AGENT_HEADER", "Agent Assignment Settings"}, {"AUTOASSIGN_AGENT_MSG_1", " requires agents to own units for management, reporting and monitoring. Automatic assignment of agents ensures units are balanced evenly for better resource allocation, optimized performance, adequate storage and high availability. This feature can be enabled based on the managed modes selected during the Add Unit operation."}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "User can re-assign agents from the <i>Modify Unit</i> dialog."}, {"AUTOASSIGN_AGENT_MSG_2", "User can re-assign agents either from the <i>Modify Unit</i> dialog (for Unacquired units) or using the <i>Re-assign Agents</i> (for Acquired units) operation."}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "Existing Tunnel or LAN, SSL management modes only: Automatic assignment applies only to <i>Existing Tunnel</i> and <i>SSL</i> modes, but for <i>Management Tunnel</i> manual assignment would be necessary."}, {"AUTOASSIGN_AGENT_MSG_ALL", "All management modes: Automatic assignment applies to all modes. For <i>Management Tunnel</i> mode, agent settings has to be configured on the managed unit."}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "The Auto Assign Agent has been enabled"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "The Auto Assign Agent has been disabled"}, {"AUTOASSIGN_AGENT_ENABLE", "Enable assigning Agents automatically"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL and Using Existing Tunnel or LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "All"}, {"CUI_NO_FS", "No Flow Server Found."}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "Are you sure you want to change the configuration"}, {"LOGCONFIG_SECTITLE_2", "Log Messages"}, {"LOGCONFIG_DELLABEL", "Delete Logs Older Than:"}, {"LOGCONFIG_MONTH", "Month"}, {"LOGCONFIG_DAY", "Day"}, {"LOGCONFIG_YEAR", "Year"}, {"LOGCONFIG_FORLABEL", "for"}, {"LOGCONFIG_DOMAIN", "Domain"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "Error: Could not update the configuration"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "Are you sure you want to change the schedule?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "Are you sure you want to change the Max num of Log files count?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "Archive "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " Log Messages"}, {"APPLOG_CONFIG_DELETE_MSG_1", "Logs help track activities in this system. These activities are associated either directly or indirectly to user initiated actions, or based on system initiated actions. These logs are important for audit trailing and compliance purposes, as well as for troubleshooting system operation."}, {"APPLOG_CONFIG_DELETE_MSG_2", "Logs, that no longer require to be stored in the system can be deleted manually. This is a one-time action and will be executed based on the date selected for deletion. "}, {"APPLOG_CONFIG_DELETE_MSG_21", "The delete action in this screen will only purge logs that are not related to Change Orders."}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "Logs that no longer require to be stored in the system can be exported in CSV/HTML format and be offloaded from the database. The archive process will first archive the data to <i>archivedLogs</i> directory as per \"Archive Log Schedule\" and the data will then be deleted from the database. "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "The archive action will export all logs including the ones related to Change Orders but the deletion will skip purging change order related entries."}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "Note: For non-window deployments: To offload the archived log files to the local drive, navigate to the Appliance > Systems > File Manager screen."}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "Enable Archive"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "Keep "}, {"APPLOG_CONFIG_ARCHIVE_For", " for:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "Maximum Log Message Files:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "Archive Format:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "Settings for Archive"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "Log Messages Updated Successfully"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "Archive GMS Log Messages for"}, {"WF_SETTINGS_TITLE", "Settings"}, {"WF_SETTINGS_MSG_1", "Workflow is a system to oversee configuration changes made to one or more appliances. It allows to perform review and provide feedback on the changes proposed, assign ownership and provide accountability for all actions, and all these with complete logging for auditing. Change Order management is a component of Workflow that allows to view changes made to appliances, preview changes inline on the screen in the context of the appliance, and also compare multiple change orders. "}, {"WF_SETTINGS_MSG_2", "Note: Change Order and Approval management can be enabled/disabled at a domain level. Disabling Approval management is independent of Change Order management, but disabling Change Order management would disable Approval management also."}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "Even when enabled, Workflow will apply only on appliances that are actively licensed for the following services: "}, {"WF_SETTINGS_ENABLE_COM", "Enable Change Order management"}, {"WF_SETTINGS_ENABLE_WF", "Enable Approval management"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "Change Order Default Schedule Settings"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "Change Orders can be scheduled to be executed upon submission based on the following settings. Specifying a default will automatically use the selected setting when a new Change Order is created."}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "Schedule: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "Execute manually"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "Immediate on approval"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "At"}, {"WF_CONFIG_DELETE_MSG_1", "Logs help track activities in this system. These activities are associated either directly or indirectly to user initiated actions, or based on system initiated actions. These logs are important for audit trailing and compliance purposes, as well as for troubleshooting system operation."}, {"WF_CONFIG_DELETE_MSG_2", "Change Orders, typically more than "}, {"WF_CONFIG_DELETE_MSG_3", " old, that no longer require to be stored in the system can be deleted manually. This is a one-time action and will be executed based on the date selected for deletion. The delete action in this screen will only purge data, tasks and logs that are related to Change Orders."}, {"APPLOG_CONFIG_DEL_DATA", "Delete Data At"}, {"TEMPLATE_SETTINGS_TITLE", "Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "Apply Default Configuration"}, {"FA_UNIT_STATUS_HEADER", "Unit Details"}, {"FA_UNIT_STATUS_SERIAL", "Serial Number"}, {"FA_UNIT_STATUS_NODE_NAME", "Unit Name"}, {"FA_UNIT_STATUS_MODEL", "Model"}, {"FA_UNIT_STATUS_FIRMWARE", "Firmware Version"}, {"FA_UNIT_STATUS_IP", "Managed IP"}, {"FA_UNIT_STATUS_LICENSE", "App Visualization"}, {"FA_GROUP_STATUS_HEADER1", "Firmware Details"}, {"FA_GROUP_STATUS_HEADER2", "Flow Reporting License Status"}, {"FA_GROUP_STATUS_NO_DATA", "No Data Available"}, {"FA_LICENSE_NOT_AVAILABLE", "Not Licensed"}, {"FA_LICENSE_AVAILABLE", "Licensed"}, {"FA_LICENSE_FREE_TRAIL", "Free Trial"}, {"FA_LICENSE_EXPIRED", "Expired"}, {"FA_GROUP_FIREWALL_COUNT", "Firewalls in the System"}, {"FA_FLOW_IP1", "Flow Agent 1"}, {"FA_FLOW_IP2", "Flow Agent 2"}, {"FA_FLOW_AGENT_STATUS", "Flow Agent Status"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "Firewall Settings"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN Tunnel"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "Remote IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "Data Retention (days)"}, {"FA_FLOW_FORWARDER_IP", "Flow Forwarder"}, {"FA_FLOWS_COLLECTED", "Flows Collected"}, {"FA_DISK_ALLOCATED", "Disk Allocated"}, {"FA_DISK_USED", "Disk Used"}, {"FA_FLOW_STATUS", "Status"}, {"FA_NO_AGENT", "No Flow Agent is assigned"}, {"FA_MODELSUPPORT", "Flow reporting is not enabled for this model"}, {"FA_FIRMWARESUPPORT", "Flow reporting is not available for this version"}, {"FA_LICENSESUPPORT", "App Visualization License info is not available"}, {"FA_HEADING", "Flow Agents"}, {"FA_FLOW_AGENT", "Flow Agent"}, {"FA_FLOW_HEAD_IP1", "Flow Agent 1"}, {"FA_FLOW_HEAD_IP2", "Flow Agent 2"}, {"FA_FLOW_HEAD_HDD", "Hard Disk (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "BandWidth (%)"}, {"FA_FLOW_FORWARDER_HEAD", "Flow Forwarder"}, {"FA_FLOW_PAIR", "Flow Agent Pair"}, {"FA_FLOW_HEAD_DISKSIZE", "Disk Size"}, {"FA_FLOW_HEAD_GATEWAY", "Gateway Firewall"}, {"FA_FLOW_HEAD_TUNNELS", "Tunnels"}, {"FA_FLOW_HEAD_TENANTS", "Tenants"}, {"FA_FLOW_HEAD_FIREWALLS", "Firewalls"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "Name"}, {"GF_GATEWAY", "Gateway"}, {"GF_LAST_UPDATED", "Last Updated"}, {"GF_DEST_ADDRESS_RANGE", "Destination Address Range"}, {"GF_LOCAL_ADDRESS_RANGE", "Local Address Range"}, {"FA_STATUS", "Status"}, {"FA_UNIT_INTERFACES", "Interfaces"}, {"FA_UNIT_CONNECTION_RATE", "Connection Rate"}, {"FA_UNIT_ACTIVE_CONNECTIONS", "Active Connections"}, {"FA_UNIT_BANDWIDTH", "Bandwidth"}, {"FA_UNIT_CORE_UTILIZATION", "Core Utilization"}, {"CLOUDSETTINGS_SECTITLE_1", "Add New Flow Agent Pair"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "Flow Agent 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "Flow Agent 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "Memory (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "Flow Database Storage (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "Cloud Syslog Server Settings"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Enable Syslog Reporting to Syslog Server:"}, {"CLOUDSETTINGS_SYSLOG_IP", "IP Address of Syslog Server:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog Server Port:"}, {"CLOUDSETTINGS_SECTITLE_3", "Cloud Flow Agent Settings"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "Num of Firewalls Per Flow Agent:"}, {"CLOUDSETTINGS_SECTITLE_4", "Cloud Archived Report Settings"}, {"CLOUDSETTINGS_NUM_ARCHIVED_REPORTS_SUPPORTED", "Num of Archived Reports per Firewall:"}, {"CLOUDSETTINGS_SECTITLE_5", "Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "SonicPoint Information"}, {"SP_MANAGEDBY", "Managed by"}, {"SP_IPADDR", "IP Address"}, {"SP_SUBNET", "Subnet Mask"}, {"SP_IFACE", "Interface"}, {"SP_ZONE", "Zone"}, {"SP_MODEL", "Model"}, {"SP_ENABLED", "Enabled"}, {"SP_DISABLED", "Disabled"}, {"SP_STATUS", "Status"}, {"SP_MACADDR", "MAC Address"}, {Integer.toString(-919), "Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "Authentication phase1 with the unit failed."}, {Integer.toString(-922), "Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "Authentication phase2 with the unit failed."}, {Integer.toString(-926), "Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "Successfully authenticated with the unit."}, {Integer.toString(-928), "Authentication with the unit failed."}, {Integer.toString(-929), "The unit is registered with the backend."}, {Integer.toString(-930), "The unit is not registered with the backend."}, {Integer.toString(-931), "Successfully validated the unit serial with backend."}, {Integer.toString(-932), "Heart beats for the unit have been started."}, {Integer.toString(-933), "Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "Failed to set a session Id to the unit."}, {Integer.toString(-935), "The unit is not yet ready to be acquired."}, {Integer.toString(-936), "The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "Retrieving keyset for the unit failed."}, {Integer.toString(-939), "Successfully retreived keyset for the unit."}, {Integer.toString(-940), "Failed to push the keyset to the unit."}, {Integer.toString(-941), "Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "ZeroTouch feature was enabled for the firewall."}, {Integer.toString(-948), "ZeroTouch feature was disabled for the firewall."}, {"TICKET_INFORMATION", "Connectwise Ticket"}, {"TICKET_DETAILS", "Details"}, {"CONNECTWISE_NOTE", "GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}};
+    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "Appliance (Singular)"}, {"APPLIANCE_NAME_PLURAL", "Appliance (Plural)"}, {"APPLIANCE_DESC", "Description for the appliance"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewalls"}, {"SONICWALL_DESC", "Firewall Appliances"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMAs"}, {"SSLVPN_DESC", "SMA Appliances"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDPs"}, {"CDP_DESC", "CDP Appliances"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMAs"}, {"ESV_DESC", "Aventail SMA Appliances"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ESs"}, {"ESA_DESC", "Email Security Appliances"}, {"OTHERS_NAME", "OTHER"}, {"OTHERS_NAME_PLURAL", "OTHERS"}, {"OTHERS_DESC", "Other Appliances"}, {"MINUTE", "Minutes"}, {"TEST_STRING", "This is a test string - remove this before shipping"}, {"PROGRESS_ACTION_TIMED", "This action may take a while to complete"}, {"PROGRESS_PLEASE_WAIT", "Please Wait..."}, {"LOADING_PLEASE_WAIT", "Loading, please wait..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "You do not have Update Privileges on this Screen."}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "You do not have permissions to view any screens, please logout and contact your Administrator."}, {"UPDATE", "Update"}, {"RESET", "Reset"}, {"NO_PANEL_PERMISSIONS", "You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "Successfully synchronized Model Codes"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "Failed to synchronize Model Codes"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "Spooling of tasks has been initiated successfully."}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "Failure - No units available for applying the upgrade."}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "The following Activation Code has been successfully added - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "Activation Codes have been successfully added."}, {"ERROR_ADD_ACTIVATION_CODE", "Add Activation Code Error: The following Activation Code already exists - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "The following Activation Code has been successfully deleted - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "Activation Code(s) have been successfully deleted."}, {"ERROR_DELETE_ACTIVATION_CODE", "Delete Activation Code Error: The following Activation Code does not exist - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "Delete Activation Code Error: The following Activation Code(s) could not be deleted - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "The following activation code has been added to the SonicWall GMS database: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "The following activation code has been removed from the pool of available codes: "}, {"UPDATE_DB_MESSAGE", "The change was updated in the SonicWall GMS Database successfully."}, {"FAILURE_UPDATE_DB_MESSAGE", "Update Failed: The change could not be updated in the SonicWall GMS Database successfully."}, {"NO_UNITS_FOR_REGISTRATION", "No units for registration"}, {"FREE_TRAIL_NOT_APPLIED", "All units are either unregistered or already have a Subscription"}, {"AV_FAILURE_MESSAGE", "No Units available for Upgrade as well as Registration"}, {"AV_SUCCESS_MESSAGE", "Task(s) initiated successfully for upgrade as well as registration"}, {"AV_SUCCESS_UPGRADE", "Task(s) initiated successfully for Upgrade"}, {"AV_NO_SUCCESS_REG", "No Units available for Registration"}, {"AV_SUCCESS_REG", "Task has been initiated successfully for Registration"}, {"AV_NO_SUCCESS_UPGRADE", "No Units available for Upgrade"}, {"TASK_SUCCESS_MESSAGE", "Task has been initiated successfully"}, {"TASK_CMP_ERROR", "CMP Password can be changed at unit level only"}, {"TASK_ERROR_MESSAGE", "Tasks are not initiated successfully"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "No units available for the License Sharing operation."}, {"SGMS_EMAIL_BOTTOM_MSG1", "Powered by "}, {"SGMS_EMAIL_BOTTOM_MSG2", " Version "}, {"SGMS_EMAIL_BOTTOM_MSG3", " Serial: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " Server: "}, {"FIRMWARE_DOWNLOADED", "A new copy of firmware has been downloaded."}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " is expiring very soon for the following appliances.\nPlease contact SonicWall Sales to purchase activation codes for renewal of these subscriptions."}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "Subscription Expiration Information."}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "No expirations found."}, {"VERSION_MESSAGE", "SonicWall GMS Version#: "}, {"NUM_NODES_MESSAGE", "Number of nodes that can be managed by this SonicWall GMS: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "GMS Product Description: "}, {"DATABASE_TYPE_MESSAGE", "Database Type: "}, {"MODEL_TYPES_MESSAGE", "Number of nodes and Model Name: "}, {"NUM_AGENTS_MESSAGE", "Number of Agents in the system: "}, {"AGENT_IP_MESSAGE", "IP Address of the Agents: "}, {"UNKNOWN_MESSAGE", "Unknown"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "Unknown DATABASE"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "Invalid characters [<,\\,:] in unit name."}, {"PM_NAME_KEYWORD", " is a keyword and cannot be used to name a unit. Please use another name"}, {"PM_NAME_EXISTS_A", "Unit with the name '"}, {"PM_NAME_EXISTS_B", "' already exists "}, {"PM_UNKNOWN", "Unknown"}, {"PM_UNKNOWN_UNREGISTERED", "Unknown/Unregistered"}, {"PM_UNREGISTERED", "Not Registered"}, {"PM_YES", "Yes"}, {"PM_NO", "No"}, {"PM_ENABLED", "Enabled"}, {"PM_DISABLED", "Disabled"}, {"PM_NOTAVAILABLE", "Not Available"}, {"PM_UNLIMITED", "Unlimited"}, {"PM_CURRENT", "Current"}, {"PM_DEFAULT", "Default"}, {"PM_EXPIRED", "Expired"}, {"PM_UP", "Up"}, {"PM_DOWN", "Down"}, {"PM_NOT_ACQUIRED", "Not Acquired"}, {"PM_SINCE", " since "}, {"PM_NONE", "None"}, {"PM_N_A", "N/A"}, {"PM_NO_LICENSE", "No License"}, {"PM_MODEL", "Model"}, {"PM_SERIAL_NUM", "Serial Number"}, {"PM_DOMAIN", "Domain"}, {"PM_NUM_LAN_IPS", "Number of LAN IPs allowed"}, {"PM_HA", "High Availability"}, {"PM_DMZ_PORT", "DMZ Port"}, {"PM_NUM_WORKPORTS", "Number of WorkPort IPs allowed"}, {"PM_HOMEPORT", "HomePort"}, {"PM_WLAN_PORT", "WLAN Port"}, {"PM_OPT_PORT", "OPT Port"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN Upgrade"}, {"PM_VPN_CLIENTS", "Global VPN Clients"}, {"PM_IPS", "Intrusion Prevention Service"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "Gateway Anti-Virus"}, {"PM_FIRMWARE_VERSION", "Firmware Version"}, {"PM_REGISTRATION_CODE", "Registration Code"}, {"PM_CFS_SUB", "Content Filter List/Service"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "Anti-Virus"}, {"PM_WARRANTY", "Extended Warranty"}, {"PM_SW_STATUS", "Status"}, {"PM_SW_MANAGEDINSTANCE", "Managed by Instance"}, {"PM_TASKS_PENDING", "Tasks Pending"}, {"PM_LAST_LOG", "Last Log Entry"}, {"PM_SAS_CONFIG_INFO", "SA Configuration Information"}, {"PM_SAS_DEFINED", "Defined SAs"}, {"PM_SAS_ENABLED", "Enabled SAs"}, {"PM_SAS_AVAILABLE", "Available SAs"}, {"PM_SAS_REMAINING", "Remaining SAs"}, {"PM_SAS_INTERCONNECTED", "Interconnected SAs"}, {"PM_AGENT_ASSIGNED", "Agent Assigned"}, {"PM_PRIMARY_AGENT", "Primary Agent"}, {"PM_STANDBY_AGENT", "Standby Agent"}, {"PM_TUNNEL_MGMT", "Management Mode"}, {"PM_FW_ADDED_TO_GMS", "Unit added to SonicWall GMS on"}, {"PM_FW_UP_SINCE", "Unit Up since"}, {"PM_FW_DOWN_SINCE", "Unit Down since"}, {"PM_SW_IP", "SonicWall IP"}, {"PM_TIME_ZONE", "Time Zone"}, {"PM_SW_IN_SYSTEM", "in the System"}, {"PM_SW_IN_DMZ", "in the DMZ"}, {"PM_SW_IN_GROUP", "in the Group"}, {"PM_SW_UNREGISTERED", "that are Not Registered"}, {"PM_SW_VPN_UPGRADE", "with VPN Upgrade"}, {"PM_SW_VPN_CLIENT", "with Global VPN Client Upgrade"}, {"PM_SW_MSSP", "that support MSSP"}, {"PM_CFL_SUBSCRIPTION", "Content Filter List/Service"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "Anti-Virus"}, {"PM_HGMS_SUBSCRIPTION", "Cloud Services"}, {"PM_SUPPORT_SUBSCRIPTION", "Support"}, {"PM_EXTENDED_WARRANTY", "Extended Warranty"}, {"PM_UNITS_DOWN", "SonicWalls that are down"}, {"PM_PENDING_TASKS", "SonicWalls with Pending Tasks"}, {"PM_MANAGED_WITH_TUNNEL", "SonicWalls managed using Management Tunnel"}, {"PM_TASK_SPOOLED", "Task has been spooled to change the Host Name."}, {"PM_RAVLIN_MODEL", "Ravlin Model"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/Serial Number"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "Firmware Version"}, {"PM_HW_VERSION", "Hardware Version"}, {"PM_ROM_VERSION", "ROM Version"}, {"PM_SECURITY_ID", "Security ID"}, {"PM_RAVLIN_STATUS", "Ravlin Status"}, {"PM_TASKS_PENDING", "Tasks Pending"}, {"PM_AGENT_ASSIGNED", "Agent Assigned"}, {"PM_RAVLINS_IN_NODE", "Ravlins in the Node"}, {"PM_RAVLINS_DOWN", "Ravlins that are down"}, {"PM_RAVLINS_PENDING_TASKS", "Ravlins with Pending Tasks"}, {"PM_FIX_UNIT_ERROR", "Error occured while fixing unit "}, {"PM_MOD_UNIT_EXISTS", "Modified Unit already exists with the serial number"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "Modified Unit with the name"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "already exists "}, {"PM_ADD_ERR_PRIVILEGES", "ERROR: You do not have sufficient privileges to add unit."}, {"PM_UNIT_EXISTS", "Unit already exists with the serial number"}, {"PM_UNIT_NAME_EXISTS_A", "Unit with the name"}, {"PM_UNIT_NAME_EXISTS_B", "already exists in the domain "}, {"PM_ADD_UNIT_ERR", "Error adding the unit to the SonicWall Database."}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "Please enter a valid serial number.\nSerial number should be "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "characters long."}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "Serial number should contain only hexadecimal characters."}, {"PM_GET_PREFS_ERR", "Error retrieving the preferences file."}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "Unit is not licensed for Cloud services.\nPlease license any of the following services from MySonicWall.com before adding the unit to "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " is unable to obtain licensing information for this unit.\nPlease try again later."}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " is unable to communicate with MySonicWall.com to verify the licenses for this unit.\nPlease try again later."}, {"PM_LICENSED", "Licensed"}, {"PM_NOT_LICENSED", "Not Licensed"}, {"PM_IS_MSSP", "MSSP Unit"}, {"PM_SYSLOG_FORMAT", "Syslog Format"}, {"PM_STATUS_MSG_ONLY", "Status Messages Only"}, {"PM_SYSLOG_IN_UTC", "Logs in UTC"}, {"PM_VIEWPOINT_MODE", "Analyzer Mode Enabled"}, {"PM_NAME_RESOLUTION", "Name Resolution Mode"}, {"PM_ACCESS_MODE", "Access Mode"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS then NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"PM_CONNECTWISE_STATUS", "Connectwise Manage"}, {"PM_CONNECTWISE_NA", "Not Available"}, {"VM_PATCH_DETECTED_MSG1", " has detected availability of new software updates"}, {"VM_PATCH_DETECTED_MSG2", "Error emailing Admin new software update information. SMTP or Admin Email not configured."}, {"VM_PATCH_DETECTED_MSG3", " Software Updates Available\n\n"}, {"VM_NEW", "New "}, {"VM_PATCH_DETECTED_MSG4", "For release notes and download information, please login into your <a href=https://www.mysonicwall.com>MySonicWall.com</a> account"}, {"VM_SCREEN", " Screen."}, {"VM_PATCH_DETECTED_MSG5", " Component Patch Update check successful. New Component Updates found. Email sent to admin."}, {"VM_PATCH_DETECTED_MSG6", "Failed to download patch update "}, {"VM_FOR", " for "}, {"VM_ON", " on "}, {"VM_PATCH_DETECTED_MSG7", " component patch download aborted. Patch file already exists: "}, {"VM_PATCH_DETECTED_MSG8", " component patch download successful: "}, {"VM_PATCH_DETECTED_MSG9", "Error writing patch file "}, {"VM_PATCH_DETECTED_MSG10", " to disk."}, {"SDM_UPDATE_SUCCESS", "Update was a success."}, {"SDM_UPDATE_FAILURE", "Update failed."}, {"SDM_UPDATE_SPECIAL_FAILURE", "Failed to create tasks to delete SA(s)."}, {"SDM_UPDATE_INVALID", "Update request not valid."}, {"SDM_SCREEN_ID_INVALID", "screen ID is invalid"}, {"SDM_READY", "Ready"}, {"SDM_CGI_ERROR", "Error getting CGI_NAME for "}, {"SDM_DEFAULT_ERROR", "Error getting DEFAULT_VALUE for "}, {"SDM_INVALID_TARGET", "Error: source or destination group is invalid."}, {"SDM_METADATA_ERROR", "Error getting metadata for "}, {"SDM_DB_ERROR", "Error accessing SonicWall GMS database."}, {"SDM_NOVPN_ERROR", "VPN not enabled on this unit. Error creating VPN to unit "}, {"SDM_NO_TARGET_VPN_ERROR", "VPN not enabled on target. Error creating VPN to unit "}, {"SDM_NOSAS_ERROR", "No remaining SAs available on this unit. Error creating VPN to unit "}, {"SDM_NO_TARGET_SAS_ERROR", "No remaining SAs available on target. Error creating VPN to unit "}, {"SDM_NO_UNITS_ERROR", "No tasks created."}, {"SDM_NO_3RDPARTYCERTS_ERROR", "No valid 3rd party Local/CA Cert combination found. Skipping VPN SA to unit "}, {"SDM_DHCP_ERROR", "Dynamic addressing is enabled on both source and destination unit, so SA cannot be created. Skipping VPN SA creation. "}, {"SDM_NOAES_ERROR", "AES not available on this unit. Error creating VPN to unit "}, {"SDM_NO_TARGET_AES_ERROR", "AES not available on target. Error creating VPN to unit "}, {"SDM_DELETE_SUCCESS", "Delete was a success "}, {"SDM_DELETE_FAILURE", "Delete failed "}, {"SDM_AGENTNAME_INVALID", "Invalid character [<,\\,:,',@,#,*,$] in Agent name."}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "Task creation failed for Enhanced Interconnected VPNS SAs"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "Group update Failed for "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "Enhanced Interconnected VPN SAs"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "Standard Interconnected VPN SAs"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "Enhanced Non-Interconnected VPN SAs"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "Standard Non-Interconnected VPN SAs"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "Skipping SA creation for this unit since the firmware version on this unit does not support Tunnel Interface type"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "Scheduled Task to Execute on"}, {"PASSWORD_CHANGED", "SonicWall GMS password successfully changed."}, {"PASSWORD_NOT_CHANGED_A", "Incorrect old password specified.<BR>"}, {"PASSWORD_NOT_CHANGED_B", " Password unchanged."}, {"PASSWORD_NOT_CHANGED", "Incorrect old password specified. Password unchanged."}, {"LOGS_PASSWD_CHANGED", "Users login password has been successfully changed "}, {"LOGS_PASSWD_NOT_CHANGED", "System could not authenticate user to change login password "}, {"LOGS_ADDED_NEW_USER", "New User added to the SonicWall GMS database: "}, {"LOGS_ADDED_NEW_USER_TYPE", "New User Type added to the SonicWall GMS database: "}, {"LOGS_DELETED_USER", "User and corresponding information deleted from the SonicWall GMS database: "}, {"LOGS_DELETED_GROUP", "The following custom group and all views using this custom group have been deleted from the SonicWall GMS database: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "Custom Attribute Value ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") should contain only alpha-numeric characters"}, {"LOGS_ADD_CUSTOM_GROUP", "The following Custom Group Name / Default Value was added to the system: "}, {"LOGS_MOD_CUSTOM_GROUP", "The following Custom Group Name / Default Value was modified: "}, {"LOGS_DEL_CUSTOM_GROUP", "The following Custom Group was deleted from the system: "}, {"READY", "Ready"}, {"NAV_OF", " of "}, {"NAV_PREVIOUS", "Previous"}, {"NAV_NEXT", "Next"}, {"NAV_DISPLAYING", "Displaying"}, {"NAV_FIREWALLS", "Firewall(s)"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "You do not have Update Privileges on this Screen."}, {"ACT_WRONG_FILE_FORMAT", "Error: Wrong file format, could not add the codes."}, {"AUTH_INVALID_PARAMS", "Invalid parameters, please try again"}, {"AUTH_AUTHENTICATE", "Authenticate"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "login random number has been timed out"}, {"AUTH_LOGIN_TIMEOUT", "Login page has timed out, please try again"}, {"AUTH_LOGIN_FAILURE", "Login failed, please try again"}, {"AUTH_LOGIN_FAILURE_LOG", "login failed"}, {"NO_DOMAIN_SPECIFIED", "No Domain Name specified for Login"}, {"SPECIFY_DOMAIN", "Please specify a Domain Name for Login"}, {"INVALID_IP", "Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "Invalid Domain. Please specify a valid Domain Name"}, {"INVALID_ALIAS_MSG", "Invalid Alias. Please specify a valid Alias"}, {"REMOTE_SUCCESSFUL_LOGIN", "Successful login into the system by user : "}, {"TWOFA_FAILED_LOGIN_MSG", "Invalid Authentication Code. Please enter valid Authentication code. (Make sure that your mobile time is synced to your network time.) "}, {"TWOFA_EMERGENCY_CODE_RESET_MSG", "EMERGENCY Code Used, 2FA RESET for user : "}, {"REMOTE_FAILED_LOGIN", "Remote Authentication failed for user: "}, {"XML_REMOTE_FAILED_LOGIN", "XML based Remote Authentication failed for user: "}, {"NEW_USER_ADDED", "Added new user: "}, {"TO_USER_TYPE", "user type: "}, {"CLICK_TO_TRY_AGAIN", "Click here to try again"}, {"USER_LOCKED_OUT", "User has been locked out, contact administrator for details"}, {"USER_DISABLED", "User account is disabled, contact administrator for details"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "Remote Authentication failed. Please contact your GMS Administrator."}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "Remote Authentication failed. Please contact your GMS Administrator or try again."}, {"LDAP_AUTH_FAILED", "Remote Authentication failed"}, {"LDAP_USER_NOT_FOUND", "User not found or does not exist in the directory"}, {"LDAP_INVALID_CREDENTIALS", "Remote Authentication failed: Invalid Credentials"}, {"LDAP_COMMUNICATION_ERROR", "Unable to communicate with the directory or naming service"}, {"LDAP_ANONYMOUS_BIND_SET", "AnonymousBind is set as allowed for the domain "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "Check if the remote server allows Anonymous Binds."}, {"LDAP_INVALID_GROUPS_SPECIFIED", "Invalid Directory Groups Specified. Please contact your GMS Administrator."}, {"LDAP_INVALID_GROUP_MEMBER", "User is not a member of the allowed Directory Group(s)."}, {"RADIUS_UNKNOWN_HOST", "Unknown RADIUS Server Host."}, {"RADIUS_CONNECTION_TIMEOUT", "Connection timed out with the Remote RADIUS Server"}, {"RADIUS_FAILED_LOGIN", "Authentication Failed. Invalid Credentials."}, {"RADIUS_EXCEPTION", "RADIUS Exception occurred."}, {"RADIUS_INVALID_GROUP_MEMBER", "User is not a member of the allowed RADIUS group(s)."}, {"PWD_CHANGE_SCREEN", "Change Password."}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "Change Password as the length is not within the permitted range: 7 - 15 chars."}, {"PWD_VALIDATION_FAILURE", "Change Password as the length cannot exceed 15 chars."}, {"PWD_EXPIRATION", "Password needs to be changed every {0} days"}, {"PWD_CHANGE_NEXT_LOGIN", "Change password forced by administrator."}, {"PASSWORD_EXISTS", "Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "Could not read license file"}, {"CUI_UPGRADE_SUCCESS", "Upgrade Successful"}, {"CUI_UPGRADE_FAIL", "Upgrade failed: "}, {"CUI_SYNCH_SUCCESS", "Synchronize Successful"}, {"CUI_SYNCH_FAIL", "Synchronize failed: "}, {"CUI_PRORATE_SUCCESS", "ProRate Request Successful"}, {"CUI_PRORATE_FAIL", "ProRate Request failed: "}, {"CUI_CHANGE_PW_SUCCESS", "Success.  Password accepted by MySonicWall.com."}, {"CUI_CHANGE_PW_FAIL", "Failed.  Password was not accepted by MySonicWall.com: "}, {"CUI_EMAIL_SUCCESS", "The TechSupport Form was emailed to SonicWall GMS Support Center."}, {"CUI_EMAIL_FAIL", "There was a problem sending the TechSupport Report to the SonicWall GMS Support Center.<br>Please try later."}, {"CUI_SESSION_TERMINATED", " session has been terminated successfully."}, {"CUI_SESSIONS_TERMINATED", " sessions have been terminated successfully."}, {"CUI_NO_AGENTS", "No Agents Found."}, {"CUI_FILTER_ADDED", "Successfully added new filter "}, {"DIAG_DIAG_REQUEST_A", "Diagnostic request made at "}, {"DIAG_DIAG_REQUEST_B", " has been submitted."}, {"DIAG_DELETE_SUCCESS", "Delete(s) successful."}, {"DIAG_EMAIL_SUCCESS", "Email(s) successful."}, {"DIAG_UNIT_UNKNOWN", "'Unit name is not known'"}, {"DIAG_UNIT", "'Unit "}, {"VPN_DUPLICATE_UFI", "Update failed. Unique Firewall Identifier is not unique in SonicWall GMS."}, {"NO_LOGS_MESSAGE", "No Logs Found."}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "No logs found for the search criteria provided."}, {"LOG_START_SEARCH", "Start New Search"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "Your query for {0,number,integer} records is too large. Please limit your search criteria."}, {"SQL_EXCEPTION_ERROR_MESSAGE", "There was an error in the database connection. Please make sure the database is available and/or limit your search criteria."}, {"UNKNOWN_EXCEPTION_MESSAGE", "There was an error while executing your search. Please make sure the database is available and/or limit your search criteria."}, {"LOG_NEXT", "Next"}, {"LOG_PREVIOUS", "Previous"}, {"LOG_UPDATE_SUCCESS", "Update was a success"}, {"LOG_OF", " of "}, {"LOG_OF", " of "}, {"PREFS_SYNCHRONIZE_STARTED", "Synchronizing information with appliance initiated successfully."}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "Failed to synchronize appliance information, could not login to the appliance."}, {"MON_NO_PRIVILEGES", "You do not have sufficient privileges for this screen"}, {"MON_SYNC_TASK_CREATED", "Synchronize task created successfully"}, {"MON_SYNC_TASK_FAIL", "Failed to create synchronize task"}, {"MON_RENEGOTIATE_TASK_CREATED", "Renegotiate task(s) created successfully"}, {"MON_RENEGOTIATE_FAILED", "Failed to create renegotiate task"}, {"MON_NO_SELECTED", "No tunnels selected to Renegotiate"}, {"MON_REFRESH_CREATED", "Refresh statistics task(s) created successfully"}, {"MON_REFRESH_FAIL", "Failed to create refresh task for tunnel statistics"}, {"MON_NO_SELECTED_REFRESH", "No tunnels selected to refresh Statistics"}, {"MON_UPDATE_SUCCESS", "Update was a success"}, {"MON_UPDATE_FAIL", "Update failed"}, {"MON_NO_MONITORING", "Tunnels cannot be monitored."}, {"MON_NAME", "Name"}, {"MON_GATEWAY", "Gateway"}, {"MON_LAST_UPDATED", "Last Updated"}, {"MON_DEST_ADDR_RANGE", "Destination Address Range"}, {"MON_LOCAL_ADDR_RANGE", "Local Address Range"}, {"MON_NO_TUNNELS_FOUND", "No Tunnels Found."}, {"MON_TITLE", "VPN Tunnel Statistics"}, {"MON_DESCRIPTION", "Description"}, {"MON_VALUE", "Value"}, {"MON_CREATE_TIME", "Create Time"}, {"MON_VALID_UNTIL", "Tunnel Valid Until"}, {"MON_PACKETS_IN", "Packets In"}, {"MON_PACKETS_OUT", "Packets Out"}, {"MON_BYTES_IN", "Bytes In"}, {"MON_BYTES_OUT", "Bytes Out"}, {"MON_FRAGMENTS_IN", "Fragmented Packets In"}, {"MON_FRAGMENTS_OUT", "Fragmented Packets Out"}, {"MON_TUNNEL_ACTIVE", "Tunnel is active"}, {"REG_NO_PERMISSION", "You do not have Update Privileges on this Screen"}, {"REG_ERROR_RETRIEVING_COUNT", "Error retrieving count of registered/unregistered appliances"}, {"REG_CURRENT", "Current"}, {"REG_EXPIRED", "Expired"}, {"REG_NO_LICENSE", "No License"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "Firmware Image could not be uploaded"}, {"TASKS_SUCCESSFUL_DELETION", "The tasks have been successfully deleted from the database."}, {"TASKS_ERROR_DELETION", "Error: Could not delete the tasks."}, {"TASKS_EXECUTION_SET", "The tasks have been successfully set for immediate execution."}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "Unauthorized attempt to execute task"}, {"TASKS_ERROR_EXECUTION", "Error: Could not schedule the tasks for execution."}, {"TASK_DELETED_LOG_MESSAGE", "The following task has been deleted by user "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "Unauthorized attempt to delete task"}, {"NO_TASKS_MESSAGE", "No Tasks Found."}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "No tasks found for the search criteria provided."}, {"TASKS_RESCHEDULED", "Task(s) have been rescheduled successfully."}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "Unauthorized attempt to re-schedule task"}, {"TASKS_ERROR_RESCHEDULE", "Error: Could not reschedule the task(s)."}, {"IMMEDIATE_STRING", "IMMEDIATE"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "Local"}, {"AGENT_STRING", "Agent"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "The following task has been rescheduled by user "}, {"FROM_LOG_MESSAGE", " from "}, {"TO_LOG_MESSAGE", " to "}, {"IMMEDIATE_LOG_MESSAGE", "Immediate Execution"}, {"REG_PASSWORD_SUCCESS", "Success.  Password accepted by MySonicWall.com. Press update to continue."}, {"REG_PASSWORD_FAIL", "Failed.  Password was not accepted by MySonicWall.com: "}, {"LOGIN_MESSAGE", "Please login"}, {"LOGIN_DEFAULT_MESSAGE", "Use default User:'admin' and Password:'password' to login"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "Use default User:'admin' and Password: same as /appliance"}, {"LOGIN_DEMO_MESSAGE", "Please login using User:'demo' and Password:'password'"}, {"SETTINGSVPS_CHANGED", "Your Analyzer settings have been updated."}, {"SETTINGS_CHANGED", "Your settings have been updated."}, {"LOGS_USER_FORCEDOUT", " has forced the following user to logout of the system: "}, {"SLAVE_STATE_CHANGED_MESSAGE", "The Agent has been configured successfully to change its state."}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "Unsuccessful attempt: The state of the Agent could not be changed."}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "The Agent parameters have been updated successfully."}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "The Agent parameters could not be updated successfully."}, {"SCHEDULER_UP_STATE", "Up"}, {"SCHEDULER_DOWN_STATE", "Down"}, {"SCHEDULER_UNDETERMINED_STATE", "Undetermined"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "You do not have permission to update the Agent properties."}, {"SMTPSERVER_INVALID", "Invalid SMTP Server Address."}, {"APPLIANCE_MANAGE_FAILED", "Failed to change management preferences for appliances."}, {"EMPTY_SMTP_PWD", "SMTP Password cannot be empty"}, {"TREE_AGENT_STARTED", "Primary Agent should be in started state to be able to re-assign agents"}, {"TREE_STANDBY_STARTED", "Standby Agents should be in started state to be able to re-assign agents"}, {"TREE_LICENSE_EXCEEDED", "You do not have license to add any more appliances under management."}, {"TREE_IP_EMPTY", "IP cannot be empty. Please provide a valid IP address"}, {"TREE_AUTH_FAIL", "Appliance authentication failed; verify settings."}, {"TREE_NO_RESPONSE", "Appliance is unreachable; verify settings."}, {"TREE_FIREWALL_NOT_LICENSED", "Appliance not licensed for Analyzer."}, {"TREE_FIREWALL_STATE_ERROR", "Failed to retrieve appliance state information.\nAppliance's firmware may need to be updated."}, {"TREE_MODEL_FAIL", "Failed to retrieve model information"}, {"TREE_FIRMWARE_VERSION_FAIL", "Failed to retrieve firmware version"}, {"TREE_UNMATCHED_SERIAL", "Serial numbers do not match."}, {"TREE_TIMEZONE_FAIL", "Failed to retrieve timezone"}, {"TREE_UTC_FAIL", "Log messages are not in UTC format. Please change the appliance's timestamp format to UTC else the Reports generated will show wrong time"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "Please enable 'Enable ViewPoint Settings' option in Log>ViewPoint screen. This setting will change the following:\n\t1. Send Syslog in UTC\n\t2. Set 'Syslog Event Redundancy Filter' (seconds) to 0\n\t3. Set 'Syslog format' to Default"}, {"TREE_NO_SCHEDULER", "No scheduler found on the IP address specified, Unit has not been added"}, {"TREE_GET_PREFS_ERR", "Error retrieving the preferences file."}, {"TREE_FIREWALL_NOT_REGISTERED", "This appliance has not been registered.  Please visit MySonicWall.com and register the appliance before adding it to Analyzer."}, {"TREE_BACKEND_COMM_FAILURE", "Analyzer is unable to communicate with MySonicWall.com to verify the license.\nPlease check your network connection; the Analyzer server must be able to communicate with MySonicWall.com. "}, {"SU_DB_SIZE_EMAILBODY1", "The current database sizes are as follows: \n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\nNote: Max Database size limitation is 2GB \n\n \nThe following configuration change will affect overall size of the database usage:\n\tReduce the number of days setting for \"Days To Store Raw Data\" in Console Panel->Reports->Settings screen.\n\tReduce the number or days for  \"Days To Store Summarized Data\" setting in Console Panel->Reports->Summarizer screen."}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\nNote: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "Max Database size limitation is 2GB \n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\nThe following configuration change will affect overall size of the database usage:\n\tReduce the number of days setting for \"Days To Store Raw Data\" in Console Panel->Reports->Settings screen.\n\tReduce the number or days for  \"Days To Store Summarized Data\" setting in Console Panel->Reports->Summarizer screen."}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "WARNING:\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "Please verify if you have not setup your database on a maintenance backup plan or if an existing plan failed to clear the logs.\nIf you do not set your database on a maintenance plan, your transaction logs will continue to grow and fill up the entire hard disk, \nat which point your database and GMS system will not work. Secondly, in case of a database crash, you will not be able to restore your \ndatabase to a last known backup."}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: Database Healthcheck"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "Login to unit for license validation failed for appliance with serial "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", ". Please make sure that any of the settings required for login haven't been changed locally on the appliance. Use Modify Unit to reflect the changes in Analyzer", "License Validation by Analyzer"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "License Validation by Analyzer"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "Login to your appliance "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " for license validation failed and has exceeded grace period. Please make sure that any of the settings required for login haven't been changed locally on the appliance. Use Modify Unit to reflect the changes in Analyzer"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "Analyzer License Expired!"}, {"SU_LIC_EXPIRED_BODY1", "Your appliance "}, {"SU_LIC_EXPIRED_BODY2", " is not licensed for Analyzer. Please check the settings on the appliance"}, {"SU_LIC_EXPIRED_SUBJECT", "Analyzer License Expired!"}, {"LOGVIEW_WRONG_START_DT", "Wrong start date format. Date has to be in the form mm/dd/yyyy."}, {"LOGVIEW_WRONG_END_DT", "Wrong end date format. Date has to be in the form mm/dd/yyyy."}, {"LOGVIEW_ENDDT_LESS_STARTDT", "End date lesser than start date. Please input valid start and end dates."}, {"LOGVIEW_MSGS_PERSCRN", "Messages Per Screen"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "You are about to export {0,number,integer} log entries. Are you sure you want to do this? If not, please cancel this dialog and limit the search criteria."}, {"LOGVIEW_GOTO_MSG", "Go to Message Number"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "Show Messages Per Screen:"}, {"LOGVIEW_RANGE", "(Range: 10-100)"}, {"LOGVIEW_COL_DT", "Date"}, {"LOGVIEW_COL_MSG", "Message"}, {"LOGVIEW_COL_SEV", "Severity"}, {"LOGVIEW_COL_USER", "GMS User"}, {"LOGVIEW_COL_CO", "Change Order"}, {"LOGVIEW_COL_IP", "User IP"}, {"LOGVIEW_SEARCH_RESULTS", "Search Results"}, {"LOGVIEW_SEARCH_CRITERIA", "Search Criteria"}, {"LOGVIEW_EXPORT_LOGS", "Export Logs"}, {"LOGVIEW_CLEAR_LOGS", "Clear Search"}, {"LOGVIEW_SEARCH_LOGS", "Start Search"}, {"LOGVIEW_MATCH_CASE", "Match case"}, {"LOGVIEW_EXACT_PHRASE", "Exact Phrase"}, {"LOGVIEW_ANY_WORD", "Any Word"}, {"LOGVIEW_ALL_WORDS", "All Words"}, {"LOGVIEW_MSG", "Message contains:"}, {"LOGVIEW_CO", "Change Order:"}, {"LOGVIEW_TIME", "Select Time of logs: From:"}, {"LOGVIEW_TIME_TO", "To: "}, {"LOGVIEW_NODE_NAME", "SonicWall Node:"}, {"LOGVIEW_USER", "User: "}, {"LOGVIEW_SEV", "Severity: "}, {"LOGVIEW_CALENDAR", "Calendar"}, {"LOGVIEW_ALL", "All (Alert, Warning and Info)"}, {"LOGVIEW_ALERT_WARNING", "Alert and Warning"}, {"LOGVIEW_ALERT", "Alert"}, {"LOGVIEW_STR_FORMAT", "Search string format: user@domain.<br>For user only, enter user.<br>For domain only, enter @domain.<br><i>Note: If user value contains an @ character, terminate the search string with another @.</i>"}, {"HELPABOUT_VERSION", "Version:"}, {"HELPABOUT_LIC", "Licensed to:"}, {"HELPABOUT_SN", "Serial Number:"}, {"HELPABOUT_DBDRIVER", "Database Driver:"}, {"HELPABOUT_DBVERSION", "Database Version:"}, {"HELPABOUT_REPORT_DBVERSION", "Report Database Version:"}, {"LOGIN_TITLE", "Login"}, {"LOGIN_ISBLANK", " is blank. Please fill a value in."}, {"LOGIN_INVALIDID", "Invalid User ID specified."}, {"LOGIN_INVALIDID2", "User ID may contain only the following characters:"}, {"LOGIN_INVALIDID3", "Alphanumeric, .(Period), -(Hyphen), _(Underscore) and @(At)."}, {"LOGIN_INVALIDID4", "Please specify a User ID with the allowed characters."}, {"LOGIN_USERNAME", "Username"}, {"LOGIN_PASSWORD", "Password"}, {"LOGIN_LOGIN", "LOGIN"}, {"LOGIN_DOMAIN", "Domain"}, {"LOGIN_SWITCH_EN_US", "Switch to English UI"}, {"LOGIN_SWITCH_JA_JP", "Switch to Japanese UI"}, {"LOGIN_SWITCH_ZH_CN", "Switch to Simplified Chinese UI"}, {"LOGIN_SWITCH_ZH_TW", "Switch to Traditional Chinese UI"}, {"LOGIN_SWITCH_KO_KR", "Switch to Korean UI"}, {"LOGIN_SWITCH_PT_BR", "Switch to Brazilian Portugese UI"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "Logout"}, {"LOGOUT_VPMSG", "You have now successfully logged out of SonicWall Analyzer System."}, {"LOGOUT_VPMSG1", "To start a new SonicWall Analyzer Session, it is recommended that you close or exit this browser &nbsp<br>&nbsp and open a new instance of the browser."}, {"LOGOUT_GMSMSG", "You have now successfully logged out of SonicWall Global Management System. "}, {"LOGOUT_GMSMSG1", "To start a new SonicWall GMS session, it is recommended that you close or exit this browser &nbsp<br>&nbsp and open a new instance of the browser."}, {"SETTINGSUSER_CHANGE", "Change"}, {"SETTINGSUSER_OLD", "Current"}, {"SETTINGSUSER_PASSWORD", "Password"}, {"SETTINGSUSER_NEW", "New"}, {"SETTINGSUSER_CONFIRMMSG", "Confirm New Password"}, {"SETTINGSUSER_FAILMSG", " Password' and 'Confirm New Password' entries do not match."}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "Password must be at least 7 characters in length and consist of letters and/or numbers."}, {"INVALID_PASSWORD", "Invalid password specified."}, {"PWD_RULES", "Password should be created based on the following rules: "}, {"VALID_PWD_RULE_FOR_PCI", "    - At least 7 characters in length."}, {"MAX_PWD_LEN", "    - A maximum length of 15 characters is allowed."}, {"PWD_ALPHANUMERIC_CHARS", "    - May contain alphanumeric characters."}, {"PWD_SPCIAL_CHARS", "    - May contain special characters."}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "Please specify a password that meets the requirements."}, {"SETTINGSUSER_MISCSETTINGS", "Miscellaneous Settings"}, {"SETTINGSUSER_TIMEOUTPERIOD", "Timeout Period can be either -1 or in the range [5..120]. Please fill a valid number."}, {"SETTINGSUSER_NEVERTIMEOUT", "never times out"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "Inactivity Timeout"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "Appliance Selection Panel, Show:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "Icons"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "Text"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "Icons and Text (default)"}, {"MAX_ROWS_PER_SCREEN", "Max Rows Per Screen:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "Range: [10..100] (Applicable to non-reporting related paginated screens only)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "Max Rows Per Screen Value is out of valid range. Please enter a number between 10 and 100 inclusive."}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "Max Rows Per Screen Value is not a number. Please enter a valid number."}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "Auto Save Dashboard Settings:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1:Auto Save not enabled or Range:[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "Auto Save Dashboard Settings can be either -1 or in the range [1..60]. Please fill a valid number."}, {"CHANGEPASSWORD_OLD", "Current Password"}, {"CHANGEPASSWORD_NEW", "New Password"}, {"CHANGEPASSWORD_CONFIRM", "Confirm New Password"}, {"CHANGEPASSWORD_USER", "User"}, {"CUSTLOGSETTINGS_NOTE1", "Note: You can enter multiple email addresses separated by semicolon (\";\")"}, {"CUSTLOGSETTINGS_SECTITLE1", "E-Mail Alert Recipient Schedule"}, {"CUSTLOGSETTINGS_WEEKDAY", "Weekday:"}, {"CUSTLOGSETTINGS_SCHED1", "Schedule 1:"}, {"CUSTLOGSETTINGS_SCHED2", "Schedule 2:"}, {"CUSTLOGSETTINGS_SCHED3", "Schedule 3:"}, {"CUSTLOGSETTINGS_SAT", "Saturday"}, {"CUSTLOGSETTINGS_SUN", "Sunday"}, {"CUSTLOGSETTINGS_WEEKEND", "Weekend:"}, {"CUSTLOGSETTINGS_HRS", "hours"}, {"CUSTLOGSETTINGS_TO", "to"}, {"CUSTLOGSETTINGS_ALERTFMT", "E-Mail Alert Format Preference"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "Contains text, colors, images and links. Only compatible with HTML capable email software."}, {"CUSTLOGSETTINGS_TEXT", "Plain Text"}, {"CUSTLOGSETTINGS_TEXT_DESC", "Contains all the details in plain text. Compatible with all email software."}, {"CUSTLOGSETTINGS_PAGER", "Plain Text (Simple)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "Contains a short message in plain text. Ideal for Pagers, SMS (Short Message Service) and similar applications."}, {"LOGCONFIG_SECTITLE_1", "Delete"}, {"LOGCONFIG_SECTITLE_2", "Log Messages"}, {"LOGCONFIG_DELLABEL", "Delete Log Messages Older Than:"}, {"LOGCONFIG_MONTH", "Month"}, {"LOGCONFIG_DAY", "Day"}, {"LOGCONFIG_YEAR", "Year"}, {"LOGCONFIG_FORLABEL", "for"}, {"LOGCONFIG_DOMAIN", "Domain"}, {"SESSIONS_NOSESSALERT", "There is no session(s) to be ended."}, {"SESSIONS_NOSESSSELALERT", "Please select session(s) to be ended."}, {"SESSIONS_RUSUREALERT", "Are you sure you want to end the selected session(s)?"}, {"SESSIONS_TITLE", "Current Sessions"}, {"SESSIONS_COL1", "User Name"}, {"SESSIONS_COL2", "IP Address"}, {"SESSIONS_COL3", "Login Time"}, {"SESSIONS_COL4", "Last Access Time"}, {"SESSIONS_COL5", "Domain Name"}, {"SESSIONS_END", "End selected sessions"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP Server Address"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP Port"}, {"LOGINVPSSETTINGS_LABEL2", "Sender e-Mail Address"}, {"LOGINVPSSETTINGS_LABEL3", "Administrator e-Mail Address"}, {"LOGINVPSSETTINGS_LABEL3_5", "Use TLS"}, {"LOGINVPSSETTINGS_LABEL4", "Use Authentication"}, {"LOGINVPSSETTINGS_LABEL5", "User"}, {"LOGINVPSSETTINGS_LABEL6", "Password"}, {"LOGINVPSSETTINGS_NOTE", "Note: To change the recipient email addresses, please use the Console > Alerts > Base Settings"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "System Debug level:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "Setting debug levels allows for faster troubleshooting of potential application issues. This action creates debug log files on all the systems in this deployment and could hamper application performance and also fill up disk space. You should reset to <i>No Debug</i> for normal operation as soon as the potential issue has been resolved."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "Note: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;The debug level should only be set based on guidance from SonicWall Technical Support"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;The higher the debug level, the more the system resources that will be used up to generate debug data and in turn lower the overall system performance."}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "Sync Model Codes information now"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "Do you want to update the SMTP server addresses for all the existing Scheduled Reports with the new SMTP server address?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "Failed to Sync Model Codes information."}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "Show Legacy (pre Analyzer 7.0) Reports "}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "Enforce Password Security"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "Number of days to force password change"}, {"GENVPSSTATUS_INVALIDIP", "Incomplete appliance credentials available for a successful login at this time"}, {"GENVPSSTATUS_NODE", " Node: "}, {"GENVPSSTATUS_INFO", "Info"}, {"GENVPSSTATUS_SYSLOG", "Syslog Servers"}, {"GENVPSSTATUS_IPINFO", "IP Address"}, {"GENVPSSTATUS_PORT", "Port"}, {"GENVPSSTATUS_SYNCNOW", "Synchronize Settings With Appliance, And License Information With MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "Getting Started With Analyzer"}, {"GENVPSSTATUS_GETSTARTOPEN", "Open Getting Started Instructions In New Window"}, {"GENVPSSTATUS_LOGINTITLE", "Appliance Login"}, {"GENVPSSTATUS_LOGINHTTP", "Use Insecure login (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "Use Secure login (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "Login"}, {"GENVPSSTATUS_CATEGORIES", "Syslog Categories"}, {"GENVPSSTATUS_REFRESH_MSG", "Note: Status information is updated every 24 hours. To refresh the information, click on the link above. To change these settings, you must log into the appliance and update them manually."}, {"GENVPSSTATUS_LOG_TYPE", "Log Type"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "System Maintenance"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "System Errors"}, {"GENVPSSTATUS_BLOCKED_WEB", "Blocked Web Sites"}, {"GENVPSSTATUS_BLOCKED_JAVA", "Blocked Java etc."}, {"GENVPSSTATUS_USER_ACTIVITY", "User Activity"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP Stats"}, {"GENVPSSTATUS_ATTACKS", "Attacks"}, {"GENVPSSTATUS_DROPPED_TCP", "Dropped TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "Dropped UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "Dropped ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "Network Debug"}, {"GENVPSSTATUS_DENIED_LAN_IP", "Denied LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "Analyzer License Status"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;Please perform the following steps to resolve the \\\"Not Licensed\\\" issue:<br/>&nbsp;&nbsp;Step 1 - <a href=\"http://www.MySonicWall.com\" target=new>Click here to verify or activate the license on MySonicWall.com.</a><br/>&nbsp;&nbsp;Step 2 - If the license is active, <a href=\"javascript:synchronizeInfo();\">click here to synchronize license information.</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(There is a communication failure when trying to reach MySonicWall.com)<br/>&nbsp;&nbsp;Verify that the GMSVP Web Server is able to access www.MySonicWall.com."}, {"COMPONENT", "Description"}, {"COMPONENT_LC", "component"}, {"FILE_SIZE", "File Size (KB)"}, {"IP_ADDRESS", "IP Address"}, {"CURRENT_VERSION", "Current Version"}, {"LATEST_VERSION", "Latest Version"}, {"RELEASE_NOTES", "Release Notes"}, {"LAST_DOWNLOADED", "Last Downloaded"}, {"RELEASE_DATE", "Release Date"}, {"DOWNLD_NEW", "Download New "}, {"SOFTWARE_UPDATES", "Software Updates"}, {"DEL_SEL_COMPS_FROM_LIST", "Delete Selected Components from List"}, {"LIC_DELETE_MSG", "You cannot delete the"}, {"LIC_PATCH_MSG", "Patches are not available and will not be downloaded for the following components:"}, {"LIC_NEW_GMS_SW", "New GMS Software"}, {"LIC_CONSOLE", "Console"}, {"LIC_SELECT_COMPONENT", "Please select a component."}, {"CHAP_TESTING", "CHAP Testing"}, {"CHAP_RADIUS_TESTING_MSG", "Note that CHAP authentication will only work with a RADIUS server that supports it, and in some cases will require the server to be configured to store password reversibly."}, {"CHAP_LDAP_TESTING_MSG", "Note that CHAP authentication will only work with a server that supports retrieving user passwords via LDAP, and in some cases will require the LDAP server to be configured to store passwords reversibly."}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "Note too that CHAP is not possible with Microsoft Active Directory or Novell eDirectory"}, {"PERF_NO_SUMMARIZER", "No Summarizer Performance Metrics currently available."}, {"PERF_SUMMARIZER_INFO", "Summarizer Information"}, {"PERF_SUMMARIZER", "Summarizer"}, {"PERF_SYSLOG_INFO", "Data File Information"}, {"PERF_SYSLOG_FILE_TYPE", "Data File Type"}, {"PERF_FILE_STATS", "File Stats"}, {"PERF_OLDEST", "Oldest"}, {"PERF_PRD_LABEL", "Processed Files"}, {"PERF_SRC_LABEL", "Grouped Files"}, {"PERF_UNP_LABEL", "Unprocessed Files"}, {"PERF_NMM_LABEL", "Not Mine Files"}, {"PERF_IMF_LABEL", "Infected Files"}, {"PERF_ZIP_LABEL", "Archived Files"}, {"PERF_PRE_LABEL", "Invalid Log Files"}, {"PERF_UPE_LABEL", "Bad Upload Files"}, {"PERF_UPD_LABEL", "Uploaded Files"}, {"PERF_UPL_LABEL", "Upload Pending Files"}, {"PERF_RDB_LABEL", "Reporting Database"}, {"PERF_OPT_STATE_LABEL", "Optimization State"}, {"PERF_OPT_PENDING_LABEL", "Pending Optimization"}, {"PERF_OPT_TOTAL_LABEL", "Total Un-optimized days"}, {"PERF_BKP_LABEL", "Backup Files"}, {"PERF_FILE_ELEMENT", " Files - "}, {"PERF_THREAD_INFO", "Summarizer Process Details"}, {"PERF_NUM_THREADS", "Number of threads currently running"}, {"PERF_SUMMARIZER_IDLE", "Summarizer is idle."}, {"PERF_THREAD", "Thread"}, {"PERF_FIREWALL", "Appliance"}, {"PERF_FILE", "File"}, {"PERF_STATE", "State"}, {"PERF_START_TIME", "Started at"}, {"PERF_SUMMARIZER_STATS", "Summarizer Statistics"}, {"PERF_PAST_24", "Over the past 24 hours (since "}, {"PERF_PAST_7_DAYS", "Over the past 7 days (since "}, {"PERF_PAST_30_DAYS", "Over the past 30 days (since "}, {"PERF_NUM_SYSLOGS", "Number of Syslogs Summarized in "}, {"PERF_AVERAGE_PER_MINUTE", "Average Syslog Summarized Per Minute"}, {"PERF_NOT_ACTIVE", "No data has been summarized in the past 7 days"}, {"PERF_NO_GEN2", "Summarizer Performance Metrics are available for Distributed Summarizer configuration only"}, {"PERF_MEM_USAGE", "Summarizer Memory Consumption"}, {"PERF_LAST_RUN", "Last Run Time"}, {"PERF_NEXT_RUN", "Next Run Time"}, {"PERF_SUMMARIZER_STATISTICS", "Summarizer Status Over 7 days"}, {"PERF_SUMMARIZER_UTILIZATION", "Summarizer Utilization"}, {"PERF_TOTAL_RUN_TIME", "Average Run Time Per Day"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "Estimated Capacity"}, {"PERF_METRIC_SYSLOG", "(million syslog/day)"}, {"PERF_METRIC_XML", "(XML files/day)"}, {"PERF_TOTAL_LOAD", "Average Load"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "Average Syslog Summarized (million/day)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "Average XML Files Summarized Per Day"}, {"PERF_NO_DATA_SUMMARIZED", "No data has been summarized in the last 7 days"}, {"PERF_REPORTING_INFO", "Reporting Details"}, {"PERF_TOP_UNITS", "Summarizer Usage Top Appliances"}, {"PERF_UNIT_NAME", "Appliance"}, {"PERF_REPORTING_DB_SIZE", "Reporting Database Size"}, {"PERF_BACKUPS_DIR_SIZE", "Backup Directory Size"}, {"PERF_SYSLOG_DIR_SIZE", "Raw Data Directory Size"}, {"PERF_CACHE_SIZE", "Estimated Cache Size"}, {"PERF_BAD_DIR_SIZE", "Bad Data Directories Size"}, {"PERF_PER_SUMMARIZER_INFO", "Details For Summarizer At "}, {"PERF_AVG_UTILIZATION", "Average Summarizer Utilization"}, {"PERF_PEAK_UTILIZATION", "Peak Summarizer Utilization"}, {"NMM_DETAILS", "Syslogs sent by appliances that are not under Reporting and Management"}, {"NMM_SERIALS", "Serial # of appliances for Summarizer at "}, {"NO_NMM_SERIAL", "None"}, {"MISCONFIGURED_SERIALS", "Serial # of appliances that are misconfigured "}, {"NO_MISCONFIGURED_SERIALS", "None "}, {"NMM_MSG_NOTE", "Note: "}, {"NMM_MSG1", "* Login to the appliance and disable the syslogs"}, {"NMM_MSG2", "* If you dont have access to the appliance use the rules to the gateway to block the serials"}, {"NMM_MSG3", "* To Fix the misconfigured serials, login to the appliance and change the GMS Settings"}, {"NMM_MSG4", "* The serials listed here refresh every 12 hours"}, {"PERF_SUMMARIZER_STATUS", "Status"}, {"PERF_DEPLOYMENT_STATUS", "Deployment Status"}, {"PERF_MSG_HIGH_CAPACITY", "Summarizer operating at very high capacity, please re-assign units."}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "One (or more) of the summarizers in the deployment has exceeded its operating capacity over the past 7 days. Check the status column of the Summarizer Utilization section and please visit the GMS site for more information on how to manage your deployment."}, {"PERF_MSG_REASSIGN_UNITS", "Please re-assign units between agents."}, {"PERF_MSG_DISK_LOW", "Disk space insufficient, please add additional disks or increase disk allocation."}, {"PERF_MSG_DISK_LOW_RDB", "Disk space insufficient for reporting database, please add additional disks or increase disk allocation."}, {"PERF_MSG_CAPACITY_PLANNING", "Please visit the <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS web site</a> for more information on how to manage your deployment."}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "Note: The average load and estimated capacity are specific to the deployment and could vary across systems."}, {"PERF_OF", "of"}, {"PERF_ON_DISK", "on disk"}, {"PERF_OPT_EXPORT_PROGRESS", "Export in progress"}, {"PERF_OPT_EXPORT_DONE", "Export done"}, {"PERF_OPT_DELETE_PROGRESS", "Delete in progress"}, {"PERF_OPT_DELETE_DONE", "Delete done"}, {"PERF_OPT_IMPORT_PROGRESS", "Import in progress"}, {"PERF_OPT_QUEUED_UP", "Queued up"}, {"PERF_OPT_IDLE", "Idle"}, {"PERF_OPT_CURRENT", "Current"}, {"PERF_OPT_INFO", "Optimization Information"}, {"PERF_XML_FILE_INFO", "XML File Information"}, {"PERF_XML_LABEL", "Unprocessed XML files"}, {"PERF_XPG_LABEL", "Files in process"}, {"PERF_XPD_LABEL", "Archived files"}, {"PERF_XPE_LABEL", "Invalid files"}, {"ALERT_NO_ALERTS", "There are no active alerts for this section at this time."}, {"ALERT_DESCRIPTION", "Description"}, {"ALERT_NODE_NAME", "Unit Name"}, {"ALERT_SEVERITY", "Severity"}, {"ALERT_LISTING", "Alert Listing"}, {"CAL_SUN", "Sun"}, {"CAL_MON", "Mon"}, {"CAL_TUE", "Tue"}, {"CAL_WED", "Wed"}, {"CAL_THU", "Thu"}, {"CAL_FRI", "Fri"}, {"CAL_SAT", "Sat"}, {"CAL_JAN", "January"}, {"CAL_FEB", "February"}, {"CAL_MAR", "March"}, {"CAL_APR", "April"}, {"CAL_MAY", "May"}, {"CAL_JUN", "June"}, {"CAL_JUL", "July"}, {"CAL_AUG", "August"}, {"CAL_SEP", "September"}, {"CAL_OCT", "October"}, {"CAL_NOV", "November"}, {"CAL_DEC", "December"}, {Integer.toString(1), "Successful execution of task: "}, {Integer.toString(0), "Failure in executing task."}, {Integer.toString(42), "Successful execution of task returned with WARNINGS: "}, {Integer.toString(10), "Command executed successfully."}, {Integer.toString(-12), "Command execution failed partially or completely."}, {Integer.toString(-57), "Insufficient User privileges to perform this action."}, {Integer.toString(-58), "No information to process the command."}, {Integer.toString(-59), "The action can not be performed any time."}, {Integer.toString(-56), "Only users from the Administrator group of the LocalDomain have privileges to execute this command."}, {Integer.toString(2), "Successful check for new firmware performed, but no new firmware was available "}, {Integer.toString(3), "Backend operation has been previously performed successfully for task: "}, {Integer.toString(4), "Update database operation was successful for task: "}, {Integer.toString(5), "Units available for upgrade as well as registration"}, {Integer.toString(6), "Free trial has not been applied to the appliance"}, {Integer.toString(7), "Units available for Upgrade and not for Registration"}, {Integer.toString(8), "Units available for Registration and not for Upgrade"}, {Integer.toString(-1), "Some parameters of the Appliance were not configured correctly."}, {Integer.toString(-53), "Appliance does not support concurrent administrator logins."}, {Integer.toString(-63), "Missing appliance credentials to login."}, {Integer.toString(-69), "Waiting to obtain current login ip address."}, {Integer.toString(-70), "JVM OOM: Insufficient memory available to continue, will retry task in the next run"}, {Integer.toString(-64), "Unable to get authentication page of managed appliance for login."}, {Integer.toString(-64) + "_TT", "- The unit is not reachable at the managed address.\n- The unit does not support concurrent login,\n  verify if a browser is directly logged in to the unit."}, {Integer.toString(-65), "No response to login post."}, {Integer.toString(-83), "Login failed as the serial numbers do not match."}, {Integer.toString(-83) + "_TT", "- Serial number specified while adding the unit to GMS\n  does not match with that of the unit."}, {Integer.toString(-84), "Login failed as the login mode specified is invalid."}, {Integer.toString(-84) + "_TT", "- Login mode specified does not belong to the list\n  of permitted modes."}, {Integer.toString(-2), "The appliance username or password was incorrect."}, {Integer.toString(-918), "The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "The unit uses an SSL certificate having an MD5 signature which is no longer supported for Security Reasons. Please regenerate the certificate to manage this unit."}, {Integer.toString(-917), "The unit does not have a license to execute this task."}, {Integer.toString(-71), "Invalid access url to the unit."}, {Integer.toString(-71) + "_TT", "- IP Address may not have been obtained from the unit."}, {Integer.toString(-72), "Request for status xml failed."}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "Request for status xml failed, no response received."}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "Request for preference file failed."}, {Integer.toString(-950), "Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "Request for preference file failed, no response received."}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "Invalid preference file."}, {Integer.toString(-76) + "_TT", "- No preference file was received.\n- The obtained preference file could be corrupt.\n- The preference file could be incomplete."}, {Integer.toString(-77), "Unit acquire failed."}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "Received heartbeat message."}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "No heartbeat message received."}, {Integer.toString(-78) + "_TT", "- Heartbeat message was not sent from the unit.\n- Heartbeat message sent from the unit cannot reach GMS.\n- SA (tunnel) is not created on the GMS Gateway.\n- Rule to allow Syslog is not created on the GMS Gateway.\n- For Instance units - please follow the instructions outlined under Note: section in console-web services-distributed deployments."}, {Integer.toString(-79), "Received heartbeat messages cannot be decrypted."}, {Integer.toString(-79) + "_TT", "- Password specified while adding the unit to GMS\n  does not match with that of the unit."}, {Integer.toString(13), "Received syslog message."}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "No syslog message received."}, {Integer.toString(-81) + "_TT", "- Syslog message was not send from the unit.\n- Syslog message sent from the unit cannot reach GMS.\n- SA (tunnel) is not created on the GMS Gateway.\n- Rule to allow Syslog is not created on the GMS Gateway."}, {Integer.toString(-82), "Received syslog messages cannot be decrypted."}, {Integer.toString(-82) + "_TT", "- Password specified while adding the unit to GMS\n  does not match with that of the unit."}, {Integer.toString(12), "Unit added; waiting to be acquired."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "Unit modified; waiting to be acquired."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "Could not access the unit. The unit or the network could be down."}, {Integer.toString(-4), "Atleast one parameter for appliance configuration is incorrect."}, {Integer.toString(-5), "The SonicWall Registration web site could not be reached."}, {Integer.toString(-6), "The Activation code for Upgrade/Subscription is invalid."}, {Integer.toString(-7), "The appliance is not registered."}, {Integer.toString(-8), "The SonicWall GMS Registration site is down or could not be reached. Please check internet access from the SonicWall GMS Servers."}, {Integer.toString(-9), "No units are available for upgrade."}, {Integer.toString(-10), "Attempting to add an appliance that is already under SonicWall GMS management."}, {Integer.toString(-11), "Attempting to configure an invalid appliance."}, {Integer.toString(-15), "Attempting to create a Rule for a non-existent Service."}, {Integer.toString(-16), "SonicWall License violation."}, {Integer.toString(-17), "SonicWall GMS Internal Error."}, {Integer.toString(-18), "Error downloading the Content Filter List."}, {Integer.toString(-19), "Attempt to delete a Service for which a Rule exists."}, {Integer.toString(-47), "AV server could not be contacted"}, {Integer.toString(-20), "Internal AV Error"}, {Integer.toString(-21), "AV Task Pending"}, {Integer.toString(-22), "AV Activation Code is invalid."}, {Integer.toString(-23), "AV Activation Code is already in use."}, {Integer.toString(-24), "AV Password is incorrect."}, {Integer.toString(-25), "AV Renewal Count error."}, {Integer.toString(-26), "AV Renewal too soon."}, {Integer.toString(-27), "Attempt to manage appliance older than recommended."}, {Integer.toString(-28), "Auto Update Server is currently down or could not be reached."}, {Integer.toString(-85), "Manage system backup action failed."}, {Integer.toString(-29), "The firmware could not be uploaded to the appliance."}, {Integer.toString(-62), "Invalid firmware tried to be uploaded to the appliance."}, {Integer.toString(-60), "Maximum File size for a Firmware Upgrade is 4MB."}, {Integer.toString(-31), "Error writing firmware to the local disk."}, {Integer.toString(-30), "Error downloading firmware. Auto Update Server is currently unavailable or could not be reached."}, {Integer.toString(-32), "Database Access error."}, {Integer.toString(-33), "Error while configuring the appliance."}, {Integer.toString(-34), "Error while authenticating the user."}, {Integer.toString(-68), "Domain not Found or Invalid Domain Name."}, {Integer.toString(-35), "Error while updating the CMP password."}, {Integer.toString(-36), "No units available for registration."}, {Integer.toString(-37), "Either Anti-Virus Server could not be contacted, or an unknown error was reported by Anti-Virus Server."}, {Integer.toString(-38), "No units available for registration or upgrade."}, {Integer.toString(-39), "There was a problem adding an activation code to the database."}, {Integer.toString(-40), "Error deleting the activation code. There is no such activation code in the database."}, {Integer.toString(-41), "Unknown error deleting the activation code."}, {Integer.toString(-48), "Upgrade Failed"}, {Integer.toString(-49), "Denied access to execute CLI commands."}, {Integer.toString(-42), "The database could not be updated successfully."}, {Integer.toString(-43), "Email could not be sent to one or more addresses."}, {Integer.toString(-44), "TechSupport report could not be retrieved from the appliance."}, {Integer.toString(-45), "SPD File could not be retrieved from the appliance."}, {Integer.toString(-46), "Certificate File could not be retrieved from the appliance."}, {Integer.toString(-50), "Could not synchronize tunnel status monitoring information."}, {Integer.toString(-51), "RCF File could not be retrieved from the appliance."}, {Integer.toString(-52), "User account disabled; Failed login."}, {Integer.toString(-61), "Previously executed task needed a restart, will retry task in the next interval."}, {Integer.toString(-229), "To activate this service you must have valid subscription of Email Protection."}, {Integer.toString(-230), "Your Sonic OS version does not support clustering (multi-node subscription). Please upgrade or use a single-node key."}, {Integer.toString(-231), "You cannot mix activation keys of different WANOPT models."}, {Integer.toString(-232), "Your WANOPT Model does not support clustering (multi-node subscription)."}, {Integer.toString(-201), "Error with API parameters."}, {Integer.toString(-202), "User is already logged in."}, {Integer.toString(-203), "The SonicWall GMS API is not implemented in this release."}, {Integer.toString(-204), "Session does not exist."}, {Integer.toString(-205), "Quitting from SonicWall GMS Shell"}, {Integer.toString(-206), "API parameters are missing"}, {Integer.toString(-207), "No rows for this category"}, {Integer.toString(-208), "No activation codes provided"}, {Integer.toString(-209), "Activation Type not specified"}, {Integer.toString(-210), "The IP address is not valid; Unit has not been added."}, {Integer.toString(-211), "Length given is less than required; Unit has not been added."}, {Integer.toString(-212), "String can contain only hexadecimal characters; Unit has not been added."}, {Integer.toString(-213), "The IP Address of Standby Scheduler cannot be the same as for Primary Scheduler; Unit has not been added."}, {Integer.toString(-214), "No scheduler has been found at the specified IP address; Unit has not been added."}, {Integer.toString(-215), "There was an error adding the unit."}, {Integer.toString(-226), "You do not have a valid License."}, {Integer.toString(-225), "There was an error parsing the input XML"}, {Integer.toString(-228), "Invalid contents found in the input XML"}, {Integer.toString(-216), "Invalid or unknown report type. Don't know if it is a daily, weekly or monthly report"}, {Integer.toString(-217), "Invalid destination email address. At least one valid destination address should be provided"}, {Integer.toString(-218), "Invalid source email address"}, {Integer.toString(-219), "Invalid SMTP server address"}, {Integer.toString(-220), "Invalid report list. At least one valid report ID should be provided"}, {Integer.toString(-221), "Analyzer Scheduler IP Address registered in the database is invalid"}, {Integer.toString(-222), "Analyzer Scheduler Port Number registered in the database is invalid"}, {Integer.toString(-223), "Invalid or unknown report date. Report date provided should be in the format mm/dd/yyyy"}, {Integer.toString(-224), "The Schedule ID provided is not valid"}, {Integer.toString(-502), "Missing password for zip file password protection"}, {Integer.toString(-503), "Invalid Node provided. Either the serial Number(for unitNode) or the display name (for groupNode) should be specified."}, {Integer.toString(-10001), "There was a communication error"}, {Integer.toString(-10002), "There was an error parsing the input XML"}, {Integer.toString(-10005), "Unknown Component invoked"}, {Integer.toString(-10006), "Unknown AV method was invoked"}, {Integer.toString(-10011), "There was an attempt to upgrade AV after expiry."}, {Integer.toString(-10012), "There was an attempt to upgrade AV for an appliance that is not registered."}, {Integer.toString(-10013), "There was an attempt to renew AV for less nodes than it currently supports."}, {Integer.toString(-10014), "There was an attempt to renew AV too soon."}, {Integer.toString(-10020), "A previous task for changing AV password is pending."}, {Integer.toString(-10100), "There was an error communicating with the McAfee backend"}, {Integer.toString(-10101), "McAfee cannot find any records for this site."}, {Integer.toString(-10102), "McAfee cannot match old password for this site."}, {Integer.toString(-10103), "The AV site is already registered."}, {Integer.toString(-10200), "There was an error communicating with the AV database server"}, {Integer.toString(-10201), "The appliance serial number is already registered"}, {Integer.toString(-10202), "The license key provided is already in use"}, {Integer.toString(-10203), "Anti-Virus was never registered for this appliance"}, {Integer.toString(-10204), "Multiple keys provided must have same period"}, {Integer.toString(-10205), "Free trial key is not allowed for upgrade"}, {Integer.toString(-10206), "Illegal value provided for one or more parameters"}, {Integer.toString(-10210), "The serial number provided is not valid"}, {Integer.toString(-10211), "The license key provided is already registered"}, {Integer.toString(-10212), "The new password provided has invalid characters or is not 6 to 12 characters long"}, {Integer.toString(-10213), "The AntiVirus password provided is invalid"}, {Integer.toString(-10214), "The OEM code provided is invalid"}, {Integer.toString(-10215), "The WAN IP address provided is invalid"}, {Integer.toString(-10220), "A previous request for this appliance is still pending"}, {Integer.toString(-10250), "The appliance is already registered for AV and needs to be reactivated."}, {Integer.toString(-10251), "The appliance cannot be reactivated because of invalid password"}, {Integer.toString(-10260), "License Sharing Group Serial Number provided could not be found"}, {Integer.toString(-10261), "The License Sharing Group Serial Number provided is not valid"}, {Integer.toString(-10262), "Appliance is not a member of any License Sharing Group"}, {Integer.toString(-10263), "The appliance already has active Anti-Virus subscription and cannot be added to a License Sharing Group"}, {Integer.toString(-10264), "Appliance is not a member of this License Sharing Group"}, {Integer.toString(-10265), "Owner of the License Sharing Group cannot be removed"}, {Integer.toString(-10266), "Appliance is already a member of another License sharing Group"}, {Integer.toString(-10267), "New License Count provided exceeds the number of available License Sharing Group licenses"}, {Integer.toString(-10004), "One or more parameters for the Anti-Virus operation is missing"}, {Integer.toString(-10300), "Information provided about the Total Secure Partner could not be found"}, {Integer.toString(-10301), "Incorrect Total Secure Partner Password provided"}, {Integer.toString(-10303), "The AntiVirus license count provided is invalid"}, {Integer.toString(-10304), "There was an attempt to manage an appliance that is not assigned to the Total Secure Partner"}, {Integer.toString(-20000), "Unknown error communicating with backend registration server."}, {Integer.toString(-20101), "The requested  contact has already been registered for the user."}, {Integer.toString(-20102), "The requested contact could not be added for the user."}, {Integer.toString(-20106), "Unable to modify because user information was not be found."}, {Integer.toString(-20111), "Contact information was not found."}, {Integer.toString(-20112), "Contact information could not be modified."}, {Integer.toString(-20113), "Contact information could not be deleted."}, {Integer.toString(-20116), "Appliance is already registered to a different MySonicWall.com account."}, {Integer.toString(-20117), "Appliance specified was not found in the appliance registration system."}, {Integer.toString(-20118), "Appliance could not be registered by the backend registration system."}, {Integer.toString(-20119), "Status could not be retrieved for the specified appliance."}, {Integer.toString(-20121), "The specified appliance is not registered."}, {Integer.toString(-20122), "The specified activation key has already been used."}, {Integer.toString(-20123), "Invalid Activation Code was used."}, {Integer.toString(-20124), "Invalid Activation Code/Appliance combination was used."}, {Integer.toString(-20125), "The upgrade was not completed by the backend registration system."}, {Integer.toString(-20126), "The Activation was not completed by the backend registration system."}, {Integer.toString(-20131), "There was an error registering the wrong mac address of SonicWall GMS system."}, {Integer.toString(-20132), "The SonicWall GMS System is not registered."}, {Integer.toString(-20133), "The SonicWall GMS serial number specified is invalid."}, {Integer.toString(-20134), "The SonicWall GMS Status could not be retrieved by the backend registration system."}, {Integer.toString(-20135), "SonicWall GMS is already registered."}, {Integer.toString(-20136), "The backend registration system could not register your SonicWall GMS system."}, {Integer.toString(-20142), "The wrong mac address is already registered."}, {Integer.toString(-20143), "The available upgrades for SonicWall GMS could not be retireved by the backend registration system."}, {Integer.toString(-20144), "No base package duration was specified."}, {Integer.toString(-20145), "There was an error reading the base package system information in the backend registration system."}, {Integer.toString(-20146), "Node upgrade is not available for this product."}, {Integer.toString(-20147), "Your SonicWall GMS installation is already a retail version."}, {Integer.toString(-20148), "The appliance is not registered."}, {Integer.toString(-20149), "There was an error retrieving information about the SonicWall GMS system in the backend registration server."}, {Integer.toString(-20150), "The specified SonicWall GMS serial number is not registered to the user."}, {Integer.toString(-20151), "There was an error inserting the reporting information in the backend registration system."}, {Integer.toString(-20152), "Invalid SonicWall GMS serial number and user name combination."}, {Integer.toString(-20153), "There was an error in the backend registration system when upgrading SonicWall GMS for ViewPoint integration."}, {Integer.toString(-20154), "Either the appliance is not registered or an invalid username was specified."}, {Integer.toString(-20155), "Either the base contract for this service is not activated or it has expired."}, {Integer.toString(-20201), "Internal Error: The XML input to the backend system was invalid."}, {Integer.toString(-20202), "Internal Error: No username specified in the input."}, {Integer.toString(-20203), "Password specified for the SonicWall GMS Registration system interface is invalid."}, {Integer.toString(-20204), "Internal Error: Invalid method requested to the backend registration system."}, {Integer.toString(-20205), "Internal Error: Invalid XML version requested to the backend registration system."}, {Integer.toString(-20401), "Internal Error: There was a database error in the backend registration system."}, {Integer.toString(-20402), "Internal Error: There was a registry error in the backend registration system."}, {Integer.toString(-20403), "Internal Error: There was a component error in the backend registration system."}, {Integer.toString(-20404), "Internal Error: There was a procedure error in the backend registration system."}, {Integer.toString(-20140), "PKI information for the specified appliance was not found in the backend registration system."}, {Integer.toString(-20141), "PKI service has not been activated for the specified appliance."}, {Integer.toString(-227), "Not enough memory for file upload. Please upload a file of smaller size."}, {Integer.toString(-66), "Invalid Signature file tried to be uploaded to the appliance."}, {Integer.toString(-67), "The signature file could not be uploaded to the appliance. Please verify if this action is applicable to this Model/Version."}, {Integer.toString(-500), "Error received from lm2.sonicwall.com."}, {Integer.toString(-501), "The lm2.sonicwall.com Website could not be reached."}, {Integer.toString(-907), "The firmware version on the appliance is not supported."}, {Integer.toString(-901), "The recording id is invalid or does not exist."}, {Integer.toString(-902), "Failed to apply the entity enclosing record."}, {Integer.toString(-903), "Failed to apply the record."}, {Integer.toString(-904), "The template id is invalid or does not exist."}, {Integer.toString(-905), "Failed to apply the recording."}, {Integer.toString(-906), "Failed to apply the template."}, {Integer.toString(-908), "Timed out waiting for a connection from the pool."}, {Integer.toString(-909), "Timed out waiting for a connection to the remote host."}, {Integer.toString(-910), "The configuration settings for this appliance are not proper."}, {Integer.toString(-911), "Waiting to determine the applicable configuration settings for this appliance."}, {Integer.toString(-912), "Web Service host could not be found."}, {Integer.toString(-913), "Web Service connection could not be created."}, {Integer.toString(-914), "Problem in accessing data or resource through the web service."}, {Integer.toString(-915), "Failed to authenticate with the web service."}, {Integer.toString(-800), "External Flow Reporting to GMS is not supported for this appliance"}, {Integer.toString(-801), "Flow Forwarder Gateway configurations are not correct"}, {Integer.toString(-802), "External Flow Reporting to GMS is not supported for this model"}, {Integer.toString(-803), "External Flow Reporting to GMS is not supported for this firmware version"}, {Integer.toString(-804), "App Visualization is not licensed on this appliance"}, {Integer.toString(-805), "Insufficient storage space available for Flow Agent assignment"}, {Integer.toString(-806), "Insufficient runtime memory available for Flow Agent assignment"}, {Integer.toString(-807), "Failed to register to Flow Agent 1"}, {Integer.toString(-808), "Failed to register to Flow Agent 2"}, {Integer.toString(-809), "Failed to register to Flow Agent 1 and 2"}, {Integer.toString(-810), "Failed to register to Flow Agent 1 and Flow Forwarder"}, {Integer.toString(-811), "Failed to register to Flow Agent 1, 2 and Flow Forwarder"}, {Integer.toString(-812), "Failed to register to Flow Agent 2 and Flow Forwarder"}, {Integer.toString(-813), "Failed to register to Flow Forwarder"}, {Integer.toString(-814), "Gateway Firewall is not available in GMS"}, {Integer.toString(-815), "Tunnel creation failed on the gateway firewall end"}, {Integer.toString(-816), "Tunnel creation failed on the managed appliance end"}, {Integer.toString(-817), "Appliance is not licensed for Cloud GMS Management and Reporting or Analytics"}, {Integer.toString(-818), "Insufficient processing power available for Flow Agent assignment"}, {Integer.toString(-819), "Insufficient bandwidth available for Flow Agent assignment"}, {Integer.toString(-820), "Failed to register to Flow Agent"}, {"EDIT_DOMAIN", "Edit Domain"}, {"VIEW_DOMAIN", "View Domain details"}, {"ADD_DOMAIN", "Add Domain"}, {"SELECT_TO_DELETE", "Please select domain(s)/auth server(s) to be deleted."}, {"SELECT_AS_TO_DEL", "Please select auth server(s) to be deleted."}, {"DELETE_CONFIRMATION", "You have selected to delete domain '"}, {"USER_DELETE_CONFIRMATION", "All auth servers, users, user types and their settings would also be deleted."}, {"USER_AS_DELETE_CONFIRMATION", "All users, user types and their settings would also be deleted."}, {"SURE_WANT_TO_CONTINUE", "Are you sure you want to continue?"}, {"MULTIPLE_DELETE_CONFIRMATION", "You have selected to delete the following domain(s):"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "You have selected to delete the following auth server(s):"}, {"AND_AS_DELETE_CONFIRMATION", "and delete the following auth server(s):"}, {"WANT_TO_CONTINUE", "Do you want to continue?"}, {"DOMAIN", "Domain"}, {"DOMAINS", "Domains"}, {"SEARCH", "Search"}, {"NAME", "Name"}, {"DOMAIN_TYPE", "Domain Type"}, {"DOMAIN_SETTINGS", "Domain Settings"}, {"ALIAS", "Alias"}, {"DISPLAY_DOMAIN", "Display Domain in Login screen"}, {"SET_AS_DEFAULT", "Set as Default Domain"}, {"HOST_NAME", "Host Name"}, {"HOST_TYPE", "Host Type"}, {"EQUALS", "Equals"}, {"STARTS_WITH", "Starts With"}, {"ENDS_WITH", "Ends With"}, {"CONTAINS", "Contains"}, {"LOCAL", "Local"}, {"REMOTE", "Remote"}, {"DOMAINS", "Domains"}, {"SSL_USED", "SSL Used"}, {"CONFIGURE", "Configure"}, {"NO_DOMAIN_FOUND", "No Domains Found"}, {"NO_AS_FOUND", "No Auth Servers Found"}, {"ADD_DOMAIN", "Add Domain"}, {"DELETE_DOMAINS", "Delete Domain(s)/Auth Server(s)"}, {"DELETE_ASS", "Delete Auth Server(s)"}, {"EQUALS", "Equals"}, {"STARTS_WITH", "Starts With"}, {"ENDS_WITH", "Ends With"}, {"CONTAINS", "Contains"}, {"LOCAL", "Local"}, {"REMOTE", "Remote"}, {"REMOTE_DOMAIN", "Remote Domain"}, {"ADMIN_PASSWORD", "Admin Password"}, {"DEFAULT_ADMIN_USER", "Default Admin User"}, {"AUTH_PORT", "Authentication Port"}, {"ACCT_PORT", "Accounting Port"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "Base Distinguished Name"}, {"SEARCH_FILTER", "Search Filter"}, {"SHARED_SECRET", "Shared Secret"}, {"USE_SSL", "Use SSL"}, {"SSL_PORT", "SSL Port"}, {"ANONYMOUS_LOGIN", "Anonymous Login"}, {"LOGIN_USER_NAME", "Login User Distinguished Name"}, {"DNAME_MSG", "Distinguished name used to authenticate to Directory Server when performing a bind. The value for this field should be specified as a DN (Distinguised Name). Example: [uid=xyz,ou=People,dc=example,dc=com] , [cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "Login Password"}, {"PROTOCOL_VERSION", "Protocol Version"}, {"LDAPV2", "LDAP Version 2"}, {"LDAPV3", "LDAP Version 3"}, {"SETTINGS", "Settings"}, {"USER_DIRECTORY_LDAP", "User Directory LDAP Schema"}, {"LDAP_SCHEMA", "LDAP Schema"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "User Defined"}, {"USER_OBJECTS", "User Objects"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "Login Name Attribute"}, {"FIRST_NAME", "First Name Attribute"}, {"LAST_NAME", "Last Name Attribute"}, {"EMAIL", "Email Attribute"}, {"TELEPHONE", "Telephone Attribute"}, {"CON_TIMEOUT", "Connection Timeout"}, {"SCHEMA", "Schema"}, {"TEST_SETTINGS", "Test Settings"}, {"TEST_RADIUS_SETTINGS", "Test RADIUS Settings"}, {"TEST_LDAP_MSG", "To test the LDAP settings, enter a valid LDAP"}, {"TEST_RADIUS_MSG", "To test the RADIUS settings, enter a valid RADIUS"}, {"TEST_MSG", "login name and password and click the Test button. Note that this will apply any changes that have been made."}, {"USER", "User"}, {"PWD", "Password"}, {"RUN_CLIENT_TEST", "Run Client Test"}, {"TEST_STATUS", "Test Status"}, {"RETURNED_USER_ATTRIBUTES", "Returned Test Results"}, {"TEST", "Test"}, {"OK", "OK"}, {"CANCEL", "Cancel"}, {"CLOSE", "Close"}, {"CANT_DELETE_LOCALDOMAIN", "LocalDomain cannot be edited/deleted"}, {"CANT_EDIT", "Cannot be edited if there is only one domain"}, {"EMPTY_NAME", "Name cannot be empty"}, {"EMPTY_ADMIN_PWD", "Admin Password cannot be empty"}, {"EMPTY_ADMIN_USER", "Default Admin User cannot be empty"}, {"EMPTY_AUTH_PORT", "Authentication Port cannot be empty"}, {"POSITIVE_AUTH_PORT", "Authentication Port should be a positive number"}, {"AUTH_PORT_RANGE", "Authentication Port should be in the range 0 - 65535"}, {"EMPTY_ACCT_PORT", "Accounting Port cannot be empty"}, {"POSITIVE_ACCT_PORT", "Accounting Port should be a positive number"}, {"EMPTY_BD_NAME", "Base Distinguished Name cannot be empty"}, {"EMPTY_SEARCH_FILTER", "Search Filter cannot be empty"}, {"EMPTY_SHRED_SECRET", "Shared Secret cannot be empty"}, {"EMPTY_SSL_PORT", "SSL Port cannot be empty"}, {"POSITIVE_SSL_PORT", "SSL Port should be a positive number"}, {"SSL_PORT_RANGE", "SSL Port should be in the range 0 - 65535"}, {"EMPTY_LOGIN", "Login User Distinguished Name cannot be empty"}, {"EMPTY_LOGIN_PWD", "Login Password cannot be empty"}, {"EMPTY_CON_TIMEOUT", "Connection Timeout cannot be empty"}, {"POSITIVE_CON_TIMEOUT", "Connection Timeout should be a positive number"}, {"RECOMMEND_SSL", "Using SSL is strongly recommended for secure communication with the remote server."}, {"CON_NOT_SECURE", "Your connection would not be secure if you do not use SSL."}, {"DOMAIN_EXISTS", "A Domain with this name already exists"}, {"ALIAS_EXISTS", "An alias with this name already exists"}, {"DOMAIN_INVALID", "Invalid Domain Name specified."}, {"DOMAIN_VALID_CHARS", "Name may contain only the following characters:"}, {"DOMAIN_VALID_CHARS_LIST", "Alphanumeric, .(Period), -(Hyphen), _(Underscore) and Space."}, {"SPECIFY_VALID_NAME", "Please specify a name with the allowed characters."}, {"DIR_GRP_SETTINGS", "Active Directory Group Settings"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "Allow Only AD Group Members"}, {"DIR_GROUPS", "Active Directory Group(s)"}, {"GRP_NAME_INVALID", "Invalid Group Name(s) specified."}, {"GRP_NAME_INVALID_LENGTH", "Group Name(s) can not be more than 200 characters."}, {"AUTH_SERVER_NAME", "Auth Server Name"}, {"ADD_AUTH_SERVER", "Add an auth server"}, {"ADD_AUTHSERVER", "Add Auth Server"}, {"EDIT_AUTHSERVER", "Edit Auth Server"}, {"DELETE_DOMAIN", "Delete this Domain"}, {"CANT_DELETE_LOCAL_AS", "Local Auth Server cannot be edited/deleted"}, {"CANT_DELETE_ADMIN_AS", "This auth server cannot be deleted since the default admin for this domain is authenticated against this server.\nMove the default admin to another auth server and then try again."}, {"EDIT_AUTH_SERVER", "Edit this auth server"}, {"VIEW_AUTH_SERVER", "View auth server details"}, {"DELETE_AUTH_SERVER", "Delete this auth server"}, {"AS_INVALID", "Invalid Auth Server specified."}, {"AS_EXISTS", "An Auth Server with this name already exists"}, {"EMPTY_AS_NAME", "Auth Server Name cannot be empty"}, {"AS_NAME_MSG", "The name of the auth server that would get created. This name is useful to manage the different authentication servers in a domain."}, {"AS_DELETE_CONFIRMATION", "You have selected to delete auth server '"}, {"PRI_RADIUS", "Primary RADIUS Server"}, {"AUTH_PROTOCOL", "Authentication Protocol"}, {"RADIUS_TIMEOUT", "RADIUS Timeout (Seconds)"}, {"MAX_RETRIES", "Max Retries"}, {"BACK_RADIUS", "Backup RADIUS Server"}, {"RADIUS_USER_GROUP", "RADIUS User Group Settings"}, {"ALLOW_GROUP_MEMBERS", "Allow Only RADIUS Group\tMembers"}, {"USE_SW_VSA", "Use SonicWall Vendor specific attribute on RADIUS Server"}, {"USE_FILTER_ID", "Use Filter-ID attribute on RADIUS Server"}, {"ALLOW_GROUPS", "Allowed RADIUS Group(s)"}, {"USER_GROUP", "User Group"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS Timeout cannot be empty"}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS Timeout should be a positive number"}, {"EMPTY_MAX_RETRIES", "Max Retries cannot be empty"}, {"POSITIVE_MAX_RETRIES", "Max Retries should be a positive number"}, {"TEST_USER_NAME", "Test User Name cannot be empty."}, {"TEST_USER_PWD", "Test User Password cannot be empty."}, {"DOMAIN_NAME_MSG", "The name of the domain that would get created. This name would be visible in the Domains drop down on the login page."}, {"DOMAIN_TYPE_MSG", "The type of the domain, [Local] or [Remote]. A domain which needs to authenticate users from an external platform like an LDAP or AD server would need to be created as a [Remote] type domain. A [Local] type domain would have the user account and authentication details present inside the SGMS database. By creating a [Local] type domain you can support multiple domains inside SGMS without requiring external authentication interfaces."}, {"ADMIN_PASSWORD_MSG", "When a new domain of type [Local] is created, an [admin] user is created by default for the domain. You need to specify the password for the admin user."}, {"ADMIN_USERID_MSG", "Specify a user name that needs to be the admin for the domain. This user name should be a valid user name in the directory server associated with this domain. If the name [admin] is specified for this field, then a user with user id [admin] should exist in the associated directory and should have administrative privileges. Example: jdoe"}, {"HOST_NAME_MSG", "The hostname or the IP address of the Remote authentication server. Example: \t[mydc.example.com], [X.X.X.X] (ip address), [company.com]. If the remote server is a Windows Active Directory (AD) server and you have multiple domains where you need to authenticate users from under the AD forest then specify the Global Catalog name or IP address of your AD Forest as the Host Name."}, {"AUTHENTICATION_PORT_MSG", "The port number on the LDAP or AD server on which it listens for the authentication requests. Default Value is 389 in case of LDAP/AD servers. If you have specified the Global Catalog name or IP address of your AD Forest as the Host Name then you should specify the corresponding port number too. Default Value is 3268."}, {"HOST_TYPE_MSG", "This value indicates the type of the Remote Authentication Server if it is an LDAP server, a Windows Active Directory or a RADIUS Server."}, {"ALIAS_MSG", "A short form of the domain name which can be used in the GMS login screen to login when the domains are not displayed. Example: alias\\\\username. Alias is filled automatically with the domain name if the length of the domain name is less than or equal to 16 characters."}, {"PROTOCOL_VERSION_MSG", "This is the LDAP protocol version on which the remote LDAP/AD server is running on."}, {"BASE_DN_MSG", "The Base Distinguished Name is used to identify the root entry in the directory from which searches initiated by SGMS  would occur. The base DN for a directory (say example.com) should be written in the form: [dc=example,dc=com]. It is always required to specify the topmost level node as the Base DN in the directory tree below which you expect all the users to be present that can login into SGMS."}, {"USE_SSL_MSG", "Specify whether to use SSL for binding to the remote server. This is strongly recommended. For this, the remote server\\'s CA certificate or the root certificate of the CA that signed the server\\'s certificate should be present in keystore of SGMS as trusted CAs."}, {"SSL_PORT_MSG", "The port number on which the remote server is listening for SSL bind requests. Default Value is 636 in case of LDAP/AD servers. If you have specified the Global Catalog name or IP address of your AD Forest as the Host Name then you should specify the corresponding SSL port number too. Default Value is 3269."}, {"ANONYMOUS_LOGIN_MSG", "(Not Recommended). Specify whether SGMS should bind to the remote server anonymously. For this the Remote LDAP/AD server should allow anonymous binds. Anonymous binds should only be tried when a service account (at least one valid user account in the directory) is not known beforehand. This is strongly discouraged."}, {"LOGIN_USER_DN_MSG", "Distinguished name used to authenticate to Directory Server when performing a bind. The value for this field should be specified as a DN (Distinguised Name). Example: [uid=xyz, ou=People, dc=example, dc=com] , [cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "Password for the Login User DN."}, {"CONN_TIMEOUT_MSG", "This value (in milliseconds) is the connection timeout period. After this period of time, the connection attempt with the remote server will be given up if it is not successful."}, {"LDAP_SCHEMA_MSG", "The LDAP schema of the associated LDAP/AD server."}, {"OBJ_CLASS_MSG", "The name of one of the standard object classes that the users belong to."}, {"LOGIN_NAME_ATTRIBUTE_MSG", "The attribute name on the LDAP/AD server which represents the user id. This is the attribute on the LDAP server whose value would be used as the user id on the SGMS Login Page. Example: uid, sAMAccountName etc."}, {"FIRST_NAME_ATTRIBUTE_MSG", "The attribute name on the LDAP server which represents First Name. Example: givenName."}, {"LAST_NAME_ATTRIBUTE_MSG", "The attribute name on the LDAP server which represents Last name. Example: sn."}, {"EMAIL_ATTRIBUTE_MSG", "The attribute name on the LDAP server which represents email id. Example: mail."}, {"TELEPHONE_ATTRIBUTE_MSG", "The attribute name on the LDAP server which represents Telephone number. Example: telephoneNumber."}, {"TEST_PANE_MSG", "Here you can test the Auth Server (LDAP/AD/RADIUS) configurations entered on the Settings Panel."}, {"TEST_PANE_USER_MSG", "Enter a valid user name that you would enter on the SGMS Login page to login into GMS. This user name should be valid and present in the associated Directory for this domain. Also enter the password for this user name in the directory."}, {"EMPTY_DIR_GROUP", "Directory Group Name(s) can not be empty."}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "This option when selected allows only those users that are members of the specified Active Directory Groups to login into GMS. With this option, it is also necessary to select the Host Type as [Active Directory] on the Settings Panel."}, {"DIR_GROUPS_MSG", "Specify the AD Group names, members of which should be allowed to login into GMS. Multiple AD Groups can be specified as semicolon delimited. Example: [GMSUsers], [ADGroup1;AD group2;GMS Users;Group4]"}, {"RADIUS_HOST_NAME_MSG", "The hostname or the IP address of the RADIUS authentication server. Example: [myradius.example.com], [X.X.X.X] (ip address), [company.com]."}, {"RADIUS_AUTH_PORT_MSG", "The port number on the RADIUS server on which it listens for the authentication requests. Default Value 1812."}, {"RADIUS_SHARED_SECRET_MSG", "The secret shared between GMS and the RADIUS Server. This is a string value known only to the RADIUS server and the RADIUS client."}, {"RADIUS_AUTH_PROTOCOL_MSG", "The RADIUS Authentication Protocol to be used for authentication."}, {"RADIUS_TIMEOUT_MSG", "This value (in seconds) indicates the connection timeout period. After this period of time, the connection attempt with the RADIUS server will be given up if it is not successful."}, {"RADIUS_MAX_RETRIES_MSG", "This value denotes the number of times the authentication attempt should be tried with the RADIUS Server. After the specified number of attempts, the authentication attempt with the remote server will be given up if it is not successful."}, {"RADIUS_ONLY_GROUP_MSG", "This option when selected allows only those users that are members of the specified RADIUS User Groups to login into GMS."}, {"RADIUS_USE_FILTER_MSG", "This option when selected allows the value of the RADIUS attribute \\'Filter-ID\\' to be used as the RADIUS user group identifier. In order to use this option, the RADIUS server should be properly configured to return this attribute-value pair with every user-id that is authenticated from the RADIUS Server for login into GMS."}, {"RADIUS_USE_SW_MSG", "This option when selected uses the value of the SonicWall vendor specific attribute(s) [SonicWall-User-Group and SonicWall-User-Groups] as the RADIUS user group identifier. In order to use this option, the RADIUS server should be properly configured to return the SonicWall vendor specific attribute-value pair with every user-id that is authenticated from the RADIUS Server for login into GMS."}, {"RADIUS_ALLOW_GROUPS_MSG", "Specifies the RADIUS User Group names, members of which should be allowed to login into GMS. Example [GMSUsers]. Multiple RADIUS User Groups can be specified in the form of a semicolon separated string. Example: [RadGroup1;Rad group2;GMS Users;Group4]."}, {"ADD_AUTH_SERVER_MSG", "Allows, if checked, to add a new Auth Server configuration while adding domain."}, {"PAGE_LABEL", "Page"}, {"MANAGE_PAGE", "Manage Page"}, {"ADD_COMPONENT", "Add Component"}, {"PAGE_MANAGER", "Page Manager"}, {"ADD_NEW_PAGE", "Add New Page"}, {"DEFAULT_PAGE", "Default Page"}, {"PAGE_DETAILS", "Page Details"}, {"PAGE_TITLE", "Page Title"}, {"COMPONENT_TITLE", "Component Title"}, {"PAGE_LAYOUT", "Page Layout"}, {"ONE_COLUMN_LAYOUT", "1 Column(100)"}, {"TWO_COLUMN_LAYOUT", "2 Column(50:50)"}, {"THREE_COLUMN_LAYOUT", "3 Column(30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 Column(25:25:25:25)"}, {"ADD", "Add"}, {"EDIT", "Edit"}, {"DELETE", "Delete"}, {"ADD_COMPONENT_MANAGER", "Add Component Manager"}, {"TYPE", "Type"}, {"RSS_FEED_DETAILS", "RSS Feed Details"}, {"RSS_FEEDS", "RSS Feeds"}, {"TITLE", "Title"}, {"ITEMS", "Items to show (max.)"}, {"REFRESH_INTERVAL", "Refresh Interval"}, {"REFRESH_INTERVAL_MINUTE", "in minutes"}, {"EVENT_ALERT_DETAILS", "Event Alert Details"}, {"ALERT_TYPES", "Alert Types"}, {"REFRESH_INTERVAL_HOUR", "in hours"}, {"ALERT_SHOW_TIME_HOURS", "Show alerts triggered within last"}, {"APPLICATION_WIDGET_DETAILS", "Application Widget Details"}, {"WIDGETS", "Widgets"}, {"RSS_FEED_TYPE", "RSS Feed"}, {"EVENT_ALERT_TYPE", "Event Alert"}, {"APPLICATION_WIDGET_TYPE", "Application Widget"}, {"CUSTOM_RSS_FEED", "Custom RSS Feed"}, {"CUSTOM_RSS_URL", "Custom RSS URL"}, {"END_EDIT", "End Edit"}, {"RSS_URL", "RSS URL"}, {"SAVE", "Save"}, {"DEFAULT_PAGE", "Default Page"}, {"SAVE_LAYOUT_FAIL_MSG", "Saving layout failed"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "Saving control bar status failed"}, {"ADD_COMPONENT_FAIL_MSG", "Adding component failed"}, {"DELETE_COMPONENT_FAIL_MSG", "Deleting component failed"}, {"PAGE_ACTION_FAIL_MSG", "Page action failed"}, {"RSS_FEED_FAIL_MSG", "RSS Feed fetch failed."}, {"EVENT_ALERT_FAIL_MSG", "GEM Alert fetch failed."}, {"APPLICATION_WIDGET_FAIL_MSG", "Application Widget fetch failed."}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "No alerts configured for destination: Dashboard."}, {"NO_ALERT_FOUND_MSG", "No alerts found to display."}, {"CHANGE_DEFAULT_PAGE_MSG", "Making this page as default would change any previous default page setting. Are you sure you want to continue?"}, {"DELETE_DEFAULT_PAGE_MSG", "Cannot delete default page. Choose any other page to be default page and then delete this page."}, {"DELETE_PAGE_AND_COMPONENT_MSG", "Deleting a page in turn deletes all the components in that page. Are you sure you want to delete this page?"}, {"VALID_URL_MSG", "Please enter a URL in the format of: http://www.yourdomain.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "Are you sure you want to delete this component?"}, {"NO_COMPONENT_MSG", "No Component added in the page currently."}, {"LOAD_DATA_MSG", "Loading data..."}, {"COMPONENT_EXISTS_MSG", "The component already exists. Existing Component Details: "}, {"REFRESH_INTERVAL_RANGE", "Refresh Interval is out of range. Please fill a valid value."}, {"ITEMS_RANGE", "Number of Items is out of range. Please fill a valid number."}, {"ALERT_SHOWTIME_RANGE", "Show Time for Alerts is out of range. Please fill a valid value."}, {"NO_COMPONENT_SELECTED_ERR", ":Please select one before adding component to the page."}, {"ADDCOMPONENT_ERR_QUOTES", "Component Title cannot contain the following characters: Single quote, Double quote, Colon, Percentage, Hash, Question Mark and Pipe symbols."}, {"ADDPAGE_ERR_QUOTES", "Page Title cannot contain the following characters: Single quote, Double quote, Colon, Percentage, Hash, Question Mark and Pipe symbols."}, {"TIME_PERIOD", "Time Period"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "Deleting a page in turn deletes all the widgets in that page. Are you sure you want to delete this page?"}, {"ADDWIDGET_ERR_QUOTES", "Widget title cannot contain the following characters: Single quote, Double quote, Colon, Percentage, Hash, Question Mark and Pipe symbols."}, {"TIME_PERIOD", "Time Period"}, {"COPY_WIDGET_VALIDATION_MSG", "Please select a page to copy.."}, {"COPY_WIDGET_HEADER", "Copy widget"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "No keyword in the search string is applicable to this widget"}, {"IGNORED_INVALID_SEARCH_FILTER", "Ignored invalid search filter."}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "One or more GMSVP Instances have no Geographic Location."}, {"NDA_NG_REPORTING_WIDGET_MSG", "No Matching Records Found."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "Alert Message"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "Last Reported Time"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "Alert Type"}, {"LOGS_WIDGET_COL_MESSAGE", "Message"}, {"LOGS_WIDGET_COL_DATE", "Date"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "User Details"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "Last Access Time"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "Description"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "Scheduled Time(Local)"}, {"DSB_CONFIRM_DELETE_WIDGET", "This operation will delete the widget , Continue?"}, {"DSB_SEARCH_DIALOG_MESG", "These widgets matched the result for "}, {"DSB_SEARCH_DIALOG_HEADER", "Additional Search Results"}, {"DSB_CLEARHISTORY_MESG", "Clear all search history?"}, {"DSB_CLEARHISTORY_HDR", "search history"}, {"DSB_ADDNEW_WIDGET_LBL", "Add new widget: "}, {"DSB_GENSTTINGS_HDR", "General Settings "}, {"DSB_ASSOCPROD_HDR", "Associated Products "}, {"DSB_SUBALERTS_HDR", "Included Sub alerts "}, {"DSB_WIDGETTITLE_LBL", "Title: "}, {"DSB_NOFITEMS_LBL", "Number of items: "}, {"DSB_REFINT_LBL", "Refresh Interval: "}, {"DSB_ALERTSTRIGGERED_LBL", "Show alerts triggered within last: "}, {"DSB_NEWSUBALERTS_LBL", "New sub alerts: "}, {"DSB_CUSTRSSURL_LBL", "Custom RSS URL: "}, {"DSB_WRAPTEXT_LBL", "Wrap text: "}, {"DSB_ADDPAGE_HDR", "Add new page "}, {"DSB_ADDPAGE_LBL", "Page title: "}, {"DSB_MAPLOCATIONDLG_HDR", "Add/Edit Location"}, {"DSB_ADDRESS_LBL", "Address: "}, {"DSB_GEOLOCATION_LBL", "Geo Location: "}, {"DSB_DELPAGE_LBL", "System Generated Page , Cannot be deleted."}, {"DSB_DELPAGE_HDR", "Delete Page?"}, {"DSB_DELPAGECONFIRM_MSG", "Do you want to delete the page?"}, {"CZ_YES", "Yes"}, {"CZ_CERT_ISSUER", "Certificate Issuer"}, {"CZ_SUB_DN", "Subject Distinguished Name"}, {"CZ_CERT_SN", "Certificate Serial Number"}, {"CZ_VALID_FROM", "Valid From"}, {"CZ_EXPIRES_ON", "Expires On"}, {"CZ_STATUS", "Status"}, {"CZ_REQ_GEN", "Request Generated"}, {"CZ_SUB_KEY_ID", "Subject Key Identifier"}, {"CZ_CRL_STATUS", "CRL Status"}, {"CZ_CRL_EXPIRES_ON", "CRL Expires On"}, {"CZ_CRL_REQUIRED", "CRL Is Required"}, {"CZ_CRL_AUTO_URL", "CRL auto-update URL"}, {"CZ_HEADER", "Certificates and Certificate Requests"}, {"CZ_NAME", "Name"}, {"CZ_TYPE", "Type"}, {"CZ_VALIDATED", "Validated"}, {"CZ_EXPIRES", "Expires"}, {"CZ_DETAILS", "Details"}, {"CZ_CONFIGURE", "Configure"}, {"CZ_DELETE_CERT", "Delete this certificate"}, {"CZ_CANT_DELETE_CERT", "This is a built-in certificate that cannot be deleted"}, {"CZ_EMAIL_CERT", "Email this certificate"}, {"CZ_CANT_EMAIL_CERT", "Only imported local certificates and signing requests can be emailed"}, {"CZ_IMPORT_CERT_CRL", "Import certificate revocation list"}, {"CZ_UPLOAD_SIGNED_CERT", "Upload signed certificate"}, {"CZ_CERT_SEARCH", "Certificates Search"}, {"CZ_CERT_SELECTED", "You have selected to delete the certificate"}, {"CZ_SURE", "Are you sure you want to continue"}, {"CZ_CERTS_SELECTED", "You have selected to delete the following certificate(s)."}, {"CZ_PLZ_SELECT", "Please select certificate(s) to be deleted."}, {"CZ_VIEW_STYLE", "Certificates View Style"}, {"CZ_ALL_CERTS", "All certificates"}, {"CZ_IMPORT_CERTS", "Imported certificates and requests"}, {"CZ_BUILTIN_CERTS", "Built-in certificates"}, {"CZ_INCLUDE_EXPIRED_CERTS", "Include expired built-in certificates"}, {"CZ_IMPORT", "Import..."}, {"CZ_NEW_REQ", "New Signing Request..."}, {"CZ_DEL_CERTS", "Delete Certificate(s)"}, {"CZ_REQUIRE_CERT", "Import requires a Certificate Name."}, {"CZ_IMPORT_REQUIRE_FILE", "Import requires a Certificate File."}, {"CZ_NO_DOT", "Invalid Certificate Name. It is not allowed to have any '.' in it."}, {"CZ_IMPORT_REQUIRE_CMP", "Import requires a Certificate Management Password."}, {"CZ_IMPORT_CERT", "Import Certificate"}, {"CZ_IMPORT_LOCAL", "Import a local end-user certificate with private key from a PKCS#12 (.p12 or .pfx) encoded file"}, {"CZ_IMPORT_CA", "Import a CA certificate from a PKCS#7 (.p7b), PEM (.pem) or DER (.der or .cer) encoded file"}, {"CZ_CERT_NAME", "Certificate Name"}, {"CZ_CMP", "Certificate Management Password"}, {"CZ_SEL_FILE", "Please select a file to import"}, {"CZ_SPECIFY_FILE", "Please specify a file to import"}, {"CZ_UPLOAD_CERT", "Upload Certificate"}, {"CZ_UPLOAD_SIGN_CERT", "Upload Signed Certificate for Signing Request"}, {"CZ_SEL_UPLOAD_FILE", "Please select a file to upload"}, {"CZ_FILE_FORMAT", "File should be PEM (.pem) or DER (.der or .cer) encoded"}, {"CZ_EXPORT_CERT", "Export Certificate"}, {"CZ_EXPORT_CERT_REQ", "Export Certificate Request"}, {"CZ_CERT_EMAIL_CONTENT", "A PKCS#10 Certification Request has been generated and is available for email. Save this file on your local disk for submission to a Registration or Certificate Authority. The file will be saved in PEM Certificate Request format, by default as"}, {"CZ_CHANGE_FILE_NAME", "(the file name can be changed at download as needed)."}, {"CZ_SPECIFY_URL", "Please specify a CRL URL."}, {"CZ_SPECIFY_CRL_FILE", "Please specify a CRL file to import"}, {"CZ_INVALID_FILE", "The selected file format is not valid."}, {"CZ_SPECIFY_VALID_LC", "Please specify a valid local certificate file."}, {"CZ_SPECIFY_VALID_CA", "Please specify a valid CA certificate file."}, {"CZ_SPECIFY_VALID_CRL", "Please specify a valid CRL file."}, {"CZ_SPECIFY_VALID_SIGNED", "Please specify a valid signed certificate file."}, {"CZ_IMPORT_CRL", "Import CRL"}, {"CZ_IMPORT_CRL_FULL", "Import Certificate Revocation List"}, {"CZ_IMPORT_CRL_FILE", "Import CRL directly from a PEM (.pem) or DER (.der or .crl) encoded file"}, {"CZ_SEL_CRL_FILE", "Select a CRL file to import"}, {"CZ_AUTO_IMPORT_CRL", "Periodically auto-import CRL via HTTP"}, {"CZ_CRL_LOC", "Enter CRL's location (URL)"}, {"CZ_INVALIDATE_CERTS", "Invalidate Certificates and Security Associations if CRL import or processing fails"}, {"CZ_CMP_REQUIRE", "Certificate Management Password is required to export a certificate"}, {"CZ_CERT_NAME_REQUIRE", "PKCS10 Generation requires a Certificate Name."}, {"CZ_CERT_NAME_IN_USE", "Certificate Name is already in use. Please select another."}, {"CZ_SUB_DN_REQUIRE", "PKCS10 Generation requires at least one Subject Name attribute."}, {"CZ_CN_TWO_CHARS", "Country Name should be two characters"}, {"CZ_DOMAIN_INVALID", "Invalid Domain Name in Subject Alternative Name."}, {"CZ_IP_INVALID", "Invalid IP Address in Subject Alternative Name."}, {"CZ_EMAIL_INVALID", "Invalid Email Address in Subject Alternative Name."}, {"CZ_CERT_REQ", "Certificate Signing Request"}, {"CZ_GEN_CERT_REQ", "Generate Certificate Signing Request"}, {"CZ_CERT_ALIAS", "Certificate Alias"}, {"CZ_COUNTRY", "Country"}, {"CZ_STATE", "State"}, {"CZ_LOC", "Locality or County"}, {"CZ_COMPANY", "Company or Organization"}, {"CZ_LOC_CITY", "Locality, City, or County"}, {"CZ_DEPT", "Department"}, {"CZ_GROUP", "Group"}, {"CZ_TEAM", "Team"}, {"CZ_CNAME", "Common Name"}, {"CZ_SN", "Serial Number"}, {"CZ_EMAIL", "E-Mail Address"}, {"CZ_SUB_ALT_NAME", "Subject Alternative Name (Optional)"}, {"CZ_DOMAIN_NAME", "Domain Name"}, {"CZ_IPV4", "IPv4 Address"}, {"CZ_SUB_KEY_TYPE", "Subject Key Type"}, {"CZ_SIG_ALGORITHM", "Signature Algorithm"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "Subject Key Size"}, {"CZ_NO_CERTS", "No Certificates Found"}, {"IMPORT", "Import"}, {"CZ_SCEP_CONFIG", "SCEP Configuration"}, {"CZ_CSR_LIST", "CSR List"}, {"CZ_NO_CSR", "No CSR"}, {"CZ_CHALLENGE_PWD", "Challenge Password(optional)"}, {"CZ_CA_URL", "CA URL"}, {"CZ_REQ_COUNT", "Request Count"}, {"CZ_POLL_INTERVAL", "Polling Interval(S)"}, {"CZ_POLL_TIME", "Max Polling Time(S)"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA URL can not be empty"}, {"CZ_GEN_CSR", "There is no CSR available, please generate at least one"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "All settings from the selected filter will be pushed to all units under the selected group node."}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "All settings from the selected filter will be inherited from the selected unit\\'s parent node."}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "All settings from the selected filter will be pushed from the selected group node to the parent node.<br>In order to apply settings to all units under the parent node (excluding the selected node and its children), make the appropriate selection in the Preview screen."}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "All settings from the selected filter will be pushed from the selected unit to the parent node.<br>In order to apply settings to all the units under the parent node (excluding the selected unit), make the appropriate selection in the Preview screen."}, {"WS_URI_HEADER", "Public URI"}, {"WS_URI_INSTRUCTIONS", "Enter the public server name for this deployment.  This name will be used to access Web Services on this server and will be included in embedded cross-links."}, {"WS_URI_NOTE", "Note: The public server port is used to access GMS Web Services from the public domain. To modify the port on which GMS runs Web Services, please navigate to System Interface/Deployment/Settings"}, {"WS_DEPLOYMENT_HEADER", "GMS Deployment"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "Select the deployment to configure Web Services for."}, {"WS_DEPLOYMENT_ERROR", "There are no licensed deployments currently active"}, {"WS_STATUS_HEADER", "Web Services"}, {"WS_SERVICES_ERROR", "No Web Services were found for this deployment"}, {"WS_DEPLOYMENTS_EMPTY", "Unable to get list of deployments.  Please register this instance of GMSVP."}, {"WS_DISTRIBUTED_HEADER", "Distributed Instances"}, {"WS_DISTRIBUTED_EMPTY", "There are no distributed instances configured for this server"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "Apply Template: "}, {"HM_APPLY_RECORDING_TASK_DESC", "Apply Recording: "}, {"LM_CONFIRM_DELETE_RULE", "Are you sure you want to delete the selected rule(s)?"}, {"LM_SUCCESS_DELETE_RULE", "Rule Delete action successful."}, {"LM_FAILURE_DELETE_RULE", "Failed to delete the selected rule(s) successfully."}, {"LM_SUCCESS_UPDATE_RULE", "Rule Update action successful."}, {"LM_FAILURE_UPDATE_RULE", "Failed to update the rule successfully."}, {"LM_DUPLICATE_STMT_NAME", "A rule with the same name already exists.\\nPlease enter a unique name for the rule"}, {"LM_RULE_DESTINATION_EMPTY", "Destination is empty.\\nPlease specify a valid entry."}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "Destination cannot exceed 256 characters.\\nPlease specify a valid entry."}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "Destination value has to be specified for the selected type.\\nPlease specify a valid entry."}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "A Schedule must be assigned to every destination.\\nPlease select a valid schedule or schedule group."}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "The domain of the Destination selected in this page does not match\\nwith that of the Severity selected from the previous page.\\n\\nIt is important that the objects are picked from within the same domain.\\nIf the selected severity is incorrect, go back and pick the severity from the intended domain.\\nOtherwise, select a Destination from the domain that matches the Severity."}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "The domain of the Schedule selected in this page does not match\\nwith that of the Severity selected from the previous page.\\n\\nIt is important that the objects are picked from within the same domain.\\nIf the selected severity is incorrect, go back and pick the severity from the intended domain.\\nOtherwise, select a Schedule from the domain that matches the Severity."}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "Failed to set the control bar status."}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "Failed to set the auto scroll status."}, {"LM_READER_START_SUCCESS", "Live Monitoring Reader has been started."}, {"LM_READER_START_FAILURE", "Could not start the Live Monitroing Reader. Please check the Settings Configuration.\\n (Note: The forwarding address and port specified should be accessible from the Console/Web Server)."}, {"LM_READER_STOP_SUCCESS", "Live Monitoring Reader has been stopped."}, {"LM_READER_STOP_FAILURE", "Could not stop the Live Monitoring Reader."}, {"LM_EC_DISABLED", "Syslogs Forwarding is currently Disabled.<br>Syslogs must be forwarded to the Event Manager service for monitoring.<br>To Enable Syslogs forwarding for monitoring, click on Settings in the control bar above."}, {"LM_READER_NO_ALERT_MSG", "No new alerts have been received by the Reader.<br>Note: If the problem persists, please check Monitor Settings and appliance's syslog configurations."}, {"LM_READER_STOPPED_MSG", "The Reader is currently stopped.<br>Please start the Reader by clicking the Start button in the control bar above."}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "You do not have access to aplliance(s)/unit(s).<br>If you want to monitor syslogs forwarded by any of these units, please contact your administrator."}, {"LM_READER_ERROR_MSG", "Error encountered.<br>An exception occured while processing live monitor reader collection."}, {"LM_READER_SOCKET_ERROR_MSG", "Error encountered.<br>An exception occured while starting the live monitor reader.<br>Exception details: "}, {"LM_FAILURE_UPDATE_SETTINGS", "Failed to update live monitor settings."}, {"LM_SUCCESS_UPDATE_SETTINGS", "Successfully updated live monitor settings."}, {"LM_WARN_ENABLE_EC", "Event Manager uses syslogs forwarded from the Syslog Collector for monitoring. These syslogs are sent to the Engine to identify events based on rules defined.\\n\\nNote: Enabling this option will forward syslogs received by all Syslog Collector services in a deployment to a Central Event Manager service. This will increase the syslog traffic across the network, since every message is cloned by the Syslog Collector for event handling."}, {"LM_STMT_CHANGED_MSG_1", "You have made changes to the selected Rule"}, {"LM_STMT_CHANGED_MSG_2", ".\\nGoing to the previous screen (Rule List page) will mean losing your changes.\\nHit OK to go to the Rule List page or Cancel to continue with editing this rule."}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "Failed to update docking status."}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "You do not have Update Privileges on this Screen."}, {"LM_DELETE_STMT_EMPTY", "Please select atleast one rule for deletion."}, {"LM_STMT_RULE_EMPTY", "No Rule Type has been choosen.\\nPlease select a Rule Type."}, {"LM_STMT_RULE_DUPLICATE", "A Rule with the same Rule Type and Editor properties already exists.\\nPlease select unique rule properties for this rule."}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "Forward Port changed for the Reader.\\nIt may take few seconds to restart the Reader successfully."}, {"LM_NO_RULE_EDITABLE", "No editable Rule Type in the selected Group.\nPlease select another Group/Rule Type."}, {"LM_DISABLE_STMT_EMPTY", "Please select atleast one rule for enable/disable action."}, {"LM_SUCCESS_DISABLE_RULE", "Rule Enable/Disable action successful."}, {"LM_FAILURE_DISABLE_RULE", "Failed to enable/disable the selected rule(s) successfully."}, {"LM_EDIT_RULE_MSG_1", "You have selected to edit the following rule(s):\\n"}, {"LM_EDIT_RULE_MSG_2", "\\nThe selected list contains all rule(s) that cannot be edited.\\n\\nPlease select another rule to continue."}, {"LM_EDIT_RULE_MSG_3", "\\nThe selected list contains rule(s) that cannot be edited marked by *.\\n\\nDo you want to continue with editing the remaining rules?"}, {"LM_DELETE_RULE_MSG_1", "You have selected to delete the following rule(s):\\n"}, {"LM_DELETE_RULE_MSG_2", "\\nThe selected list contains all rule(s) that cannot be deleted.\\n\\nPlease select another rule to continue."}, {"LM_DELETE_RULE_MSG_3", "\\nThe selected list contains rule(s) that cannot be deleted marked by *.\\n\\nDo you want to continue with deleting the remaining rules?"}, {"LM_DELETE_RULE_MSG_4", "\\nDo you want to continue?"}, {"MASKED_LIVEMONITOR_MESSAGE", "Alert message has been masked from being displayed based on enforced privacy policies"}, {"MASKED_ADDITIONAL_INFORMATION", "Additional information has been masked from being displayed based on enforced privacy policies"}, {"DSB_NONENGFW_ALERT_TITLE", "Firmware Version Alert!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "This GMS is managing SonicOS appliances running non-English firmware."}, {"DSB_NONENGFW_ALERT_MSGPART2", "Please note that objects and policies defined in non-English characters in these appliances may not display correctly in GMS UI. Modifying and pushing such objects and policies to such appliances may not lead to expected results."}, {"SYSLOGTAIL_STARTED", "Syslog Reader (for Real-Time Syslog Monitoring) has been started."}, {"SYSLOGTAIL_START_FAILED", "Could not start the Syslog Reader. Please check the Syslog Forwarding Configuration.&nbsp;&nbsp;(Note: The forwarding address and port specified should be accessible from the Console/Web Server)."}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog Reader (for Real-Time Syslog Monitoring) is already running; no changes were made"}, {"SYSLOGTAIL_STOPPED", "Syslog Reader (for Real-Time Syslog Monitoring) has been stopped."}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog Reader (for Real-Time Syslog Monitoring) is already stopped; no changes were made"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "No new syslog has been received by the Reader."}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(The Reader could still be attempting to collect the syslogs)."}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(If the problem persists, please check the Syslog Reader Settings and the firewall configurations)."}, {"SYSLOGTAIL_CONFIG_CHECK", "Please check the Syslog Reader Settings and the firewall configurations."}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "No syslog found."}, {"SYSLOGTAIL_MODIFY_FILTER", "Please try modifying the filter string for better results."}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(Note: Use <b>AND</b> or <b>OR</b> between multiple strings for better results)."}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "The Syslog Reader is currently stopped"}, {"SYSLOGTAIL_START", "Please start the Syslog Reader."}, {"SYSLOGTAIL_ERROR", "Error encountered."}, {"SYSLOGTAIL_ERROR_MESSAGE", "An exception occured while processing syslog collection."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Syslog Forwarding is not enabled."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Please configure the Syslog Forwarding address and port, and start the Syslog Reader."}, {"MASKED_SYSLOG_MESSAGE", "Remaining of the syslog message has been masked from being displayed based on enforced privacy policies"}, {"EVENT_ALERTS_SEARCH", "Alerts Search"}, {"EVENT_ALERTS_DELETE", "Delete Alert(s)"}, {"EVENT_ALERTS_ENABLE_DISABLE", "Enable/Disable Alert(s)"}, {"EVENT_ALERTS_ADD", "Add Alert"}, {"EVENT_ALERTS_HEADER", "Alerts"}, {"EVENT_ALERTS_ALERT_NAME", "Name"}, {"EVENT_ALERTS_ALERT_TYPE", "Alert Type"}, {"EVENT_ALERTS_INTERVAL", "Interval"}, {"EVENT_ALERTS_DEST_SCHED", "Destination/Schedule"}, {"EVENT_ALERTS_ENABLED", "Enabled"}, {"EVENT_ALERTS_DOMAIN", "Domain"}, {"EVENT_ALERTS_CONFIGURE", "Configure"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "No alerts found"}, {"DTF_ANY", "Any Time"}, {"DTF_ADD", "Add Unit"}, {"DTF_EXECUTE", "Execute"}, {"DTF_ENABLED", "Enabled"}, {"DTF_SEARCH", "Default Tasks Search"}, {"DTF_NOT_FOUND", "No Default Tasks Found."}, {"DTF_DT", "Default Tasks"}, {"DTF_DESC", "Description"}, {"DTF_TOU", "Type of Units"}, {"DTF_DURING", "Task created during"}, {"DTF_NO_DTS", "No Default Tasks selected for execution."}, {"DTF_EXEC", "Execute this default task."}, {"DTF_NO_DISABLE", "This default task can not be disabled."}, {"DTF_NO_EXEC", "This default task can not be executed."}, {"DTF_SEL_UNITS", "Select Units"}, {"DTF_EXEC_METHOD", "Execution Method"}, {"DTF_ATLEAST_ONE", "Select atleast one unit to execute the task."}, {"DTF_EXEC_ALL", "Execute the default tasks on all units in the system"}, {"DTF_EXEC_FOLL", "Execute the default tasks on the following selected units"}, {"DTF_REAPPLY_1", "Execute only if previously not applied"}, {"DTF_REAPPLY_2", "Only tasks that were not previously applied to the selected unit(s) would be executed."}, {"DTF_REAPPLY_3", "Default Tasks that have already been executed would be ignored for that unit."}, {"DTF_EXEC_1", "Execute even if previously applied"}, {"DTF_EXEC_2", "All selected tasks would be re-executed on the selected unit(s) even if they were previously applied."}, {"DTF_ENABLE_SUCCESS", "Successfully updated the Default Task selection."}, {"DTF_ENABLE_FAIL", "Failed to update the Default Task selection."}, {"DTF_SCHEDULE_SUCCESS", "Successfully scheduled the Default Tasks for execution."}, {"DTF_SCHEDULE_FAIL", "No Default Tasks scheduled since the selected tasks are not applicable or have already been executed."}, {"AUTOASSIGN_AGENT_HEADER", "Agent Assignment Settings"}, {"AUTOASSIGN_AGENT_MSG_1", " requires agents to own units for management, reporting and monitoring. Automatic assignment of agents ensures units are balanced evenly for better resource allocation, optimized performance, adequate storage and high availability. This feature can be enabled based on the managed modes selected during the Add Unit operation."}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "User can re-assign agents from the <i>Modify Unit</i> dialog."}, {"AUTOASSIGN_AGENT_MSG_2", "User can re-assign agents either from the <i>Modify Unit</i> dialog (for Unacquired units) or using the <i>Re-assign Agents</i> (for Acquired units) operation."}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "Existing Tunnel or LAN, SSL management modes only: Automatic assignment applies only to <i>Existing Tunnel</i> and <i>SSL</i> modes, but for <i>Management Tunnel</i> manual assignment would be necessary."}, {"AUTOASSIGN_AGENT_MSG_ALL", "All management modes: Automatic assignment applies to all modes. For <i>Management Tunnel</i> mode, agent settings has to be configured on the managed unit."}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "The Auto Assign Agent has been enabled"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "The Auto Assign Agent has been disabled"}, {"AUTOASSIGN_AGENT_ENABLE", "Enable assigning Agents automatically"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL and Using Existing Tunnel or LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "All"}, {"CUI_NO_FS", "No Flow Server Found."}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "Are you sure you want to change the configuration"}, {"LOGCONFIG_SECTITLE_2", "Log Messages"}, {"LOGCONFIG_DELLABEL", "Delete Logs Older Than:"}, {"LOGCONFIG_MONTH", "Month"}, {"LOGCONFIG_DAY", "Day"}, {"LOGCONFIG_YEAR", "Year"}, {"LOGCONFIG_FORLABEL", "for"}, {"LOGCONFIG_DOMAIN", "Domain"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "Error: Could not update the configuration"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "Are you sure you want to change the schedule?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "Are you sure you want to change the Max num of Log files count?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "Archive "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " Log Messages"}, {"APPLOG_CONFIG_DELETE_MSG_1", "Logs help track activities in this system. These activities are associated either directly or indirectly to user initiated actions, or based on system initiated actions. These logs are important for audit trailing and compliance purposes, as well as for troubleshooting system operation."}, {"APPLOG_CONFIG_DELETE_MSG_2", "Logs, that no longer require to be stored in the system can be deleted manually. This is a one-time action and will be executed based on the date selected for deletion. "}, {"APPLOG_CONFIG_DELETE_MSG_21", "The delete action in this screen will only purge logs that are not related to Change Orders."}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "Logs that no longer require to be stored in the system can be exported in CSV/HTML format and be offloaded from the database. The archive process will first archive the data to <i>archivedLogs</i> directory as per \"Archive Log Schedule\" and the data will then be deleted from the database. "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "The archive action will export all logs including the ones related to Change Orders but the deletion will skip purging change order related entries."}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "Note: For non-window deployments: To offload the archived log files to the local drive, navigate to the Appliance > Systems > File Manager screen."}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "Enable Archive"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "Keep "}, {"APPLOG_CONFIG_ARCHIVE_For", " for:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "Maximum Log Message Files:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "Archive Format:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "Settings for Archive"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "Log Messages Updated Successfully"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "Archive GMS Log Messages for"}, {"WF_SETTINGS_TITLE", "Settings"}, {"WF_SETTINGS_MSG_1", "Workflow is a system to oversee configuration changes made to one or more appliances. It allows to perform review and provide feedback on the changes proposed, assign ownership and provide accountability for all actions, and all these with complete logging for auditing. Change Order management is a component of Workflow that allows to view changes made to appliances, preview changes inline on the screen in the context of the appliance, and also compare multiple change orders. "}, {"WF_SETTINGS_MSG_2", "Note: Change Order and Approval management can be enabled/disabled at a domain level. Disabling Approval management is independent of Change Order management, but disabling Change Order management would disable Approval management also."}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "Even when enabled, Workflow will apply only on appliances that are actively licensed for the following services: "}, {"WF_SETTINGS_ENABLE_COM", "Enable Change Order management"}, {"WF_SETTINGS_ENABLE_WF", "Enable Approval management"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "Change Order Default Schedule Settings"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "Change Orders can be scheduled to be executed upon submission based on the following settings. Specifying a default will automatically use the selected setting when a new Change Order is created."}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "Schedule: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "Execute manually"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "Immediate on approval"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "At"}, {"WF_CONFIG_DELETE_MSG_1", "Logs help track activities in this system. These activities are associated either directly or indirectly to user initiated actions, or based on system initiated actions. These logs are important for audit trailing and compliance purposes, as well as for troubleshooting system operation."}, {"WF_CONFIG_DELETE_MSG_2", "Change Orders, typically more than "}, {"WF_CONFIG_DELETE_MSG_3", " old, that no longer require to be stored in the system can be deleted manually. This is a one-time action and will be executed based on the date selected for deletion. The delete action in this screen will only purge data, tasks and logs that are related to Change Orders."}, {"APPLOG_CONFIG_DEL_DATA", "Delete Data At"}, {"TEMPLATE_SETTINGS_TITLE", "Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "Apply Default Configuration"}, {"FA_UNIT_STATUS_HEADER", "Unit Details"}, {"FA_UNIT_STATUS_SERIAL", "Serial Number"}, {"FA_UNIT_STATUS_NODE_NAME", "Unit Name"}, {"FA_UNIT_STATUS_MODEL", "Model"}, {"FA_UNIT_STATUS_FIRMWARE", "Firmware Version"}, {"FA_UNIT_STATUS_IP", "Managed IP"}, {"FA_UNIT_STATUS_LICENSE", "App Visualization"}, {"FA_GROUP_STATUS_HEADER1", "Firmware Details"}, {"FA_GROUP_STATUS_HEADER2", "Flow Reporting License Status"}, {"FA_GROUP_STATUS_NO_DATA", "No Data Available"}, {"FA_LICENSE_NOT_AVAILABLE", "Not Licensed"}, {"FA_LICENSE_AVAILABLE", "Licensed"}, {"FA_LICENSE_FREE_TRAIL", "Free Trial"}, {"FA_LICENSE_EXPIRED", "Expired"}, {"FA_GROUP_FIREWALL_COUNT", "Firewalls in the System"}, {"FA_FLOW_IP1", "Flow Agent 1"}, {"FA_FLOW_IP2", "Flow Agent 2"}, {"FA_FLOW_AGENT_STATUS", "Flow Agent Status"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "Firewall Settings"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN Tunnel"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "Remote IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "Data Retention (days)"}, {"FA_FLOW_FORWARDER_IP", "Flow Forwarder"}, {"FA_FLOWS_COLLECTED", "Flows Collected"}, {"FA_DISK_ALLOCATED", "Disk Allocated"}, {"FA_DISK_USED", "Disk Used"}, {"FA_FLOW_STATUS", "Status"}, {"FA_NO_AGENT", "No Flow Agent is assigned"}, {"FA_MODELSUPPORT", "Flow reporting is not enabled for this model"}, {"FA_FIRMWARESUPPORT", "Flow reporting is not available for this version"}, {"FA_LICENSESUPPORT", "App Visualization License info is not available"}, {"FA_HEADING", "Flow Agents"}, {"FA_FLOW_AGENT", "Flow Agent"}, {"FA_FLOW_HEAD_IP1", "Flow Agent 1"}, {"FA_FLOW_HEAD_IP2", "Flow Agent 2"}, {"FA_FLOW_HEAD_HDD", "Hard Disk (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "BandWidth (%)"}, {"FA_FLOW_FORWARDER_HEAD", "Flow Forwarder"}, {"FA_FLOW_PAIR", "Flow Agent Pair"}, {"FA_FLOW_HEAD_DISKSIZE", "Disk Size"}, {"FA_FLOW_HEAD_GATEWAY", "Gateway Firewall"}, {"FA_FLOW_HEAD_TUNNELS", "Tunnels"}, {"FA_FLOW_HEAD_TENANTS", "Tenants"}, {"FA_FLOW_HEAD_FIREWALLS", "Firewalls"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "Name"}, {"GF_GATEWAY", "Gateway"}, {"GF_LAST_UPDATED", "Last Updated"}, {"GF_DEST_ADDRESS_RANGE", "Destination Address Range"}, {"GF_LOCAL_ADDRESS_RANGE", "Local Address Range"}, {"FA_STATUS", "Status"}, {"FA_UNIT_INTERFACES", "Interfaces"}, {"FA_UNIT_CONNECTION_RATE", "Connection Rate"}, {"FA_UNIT_ACTIVE_CONNECTIONS", "Active Connections"}, {"FA_UNIT_BANDWIDTH", "Bandwidth"}, {"FA_UNIT_CORE_UTILIZATION", "Core Utilization"}, {"CLOUDSETTINGS_SECTITLE_1", "Add New Flow Agent Pair"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "Flow Agent 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "Flow Agent 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "Memory (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "Flow Database Storage (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "Cloud Syslog Server Settings"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Enable Syslog Reporting to Syslog Server:"}, {"CLOUDSETTINGS_SYSLOG_IP", "IP Address of Syslog Server:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog Server Port:"}, {"CLOUDSETTINGS_SECTITLE_3", "Cloud Flow Agent Settings"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "Num of Firewalls Per Flow Agent:"}, {"CLOUDSETTINGS_SECTITLE_4", "Cloud Archived Report Settings"}, {"CLOUDSETTINGS_NUM_ARCHIVED_REPORTS_SUPPORTED", "Num of Archived Reports per Firewall:"}, {"CLOUDSETTINGS_SECTITLE_5", "Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "SonicPoint Information"}, {"SP_MANAGEDBY", "Managed by"}, {"SP_IPADDR", "IP Address"}, {"SP_SUBNET", "Subnet Mask"}, {"SP_IFACE", "Interface"}, {"SP_ZONE", "Zone"}, {"SP_MODEL", "Model"}, {"SP_ENABLED", "Enabled"}, {"SP_DISABLED", "Disabled"}, {"SP_STATUS", "Status"}, {"SP_MACADDR", "MAC Address"}, {Integer.toString(-919), "Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "Authentication phase1 with the unit failed."}, {Integer.toString(-922), "Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "Authentication phase2 with the unit failed."}, {Integer.toString(-926), "Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "Successfully authenticated with the unit."}, {Integer.toString(-928), "Authentication with the unit failed."}, {Integer.toString(-929), "The unit is registered with the backend."}, {Integer.toString(-930), "The unit is not registered with the backend."}, {Integer.toString(-931), "Successfully validated the unit serial with backend."}, {Integer.toString(-932), "Heart beats for the unit have been started."}, {Integer.toString(-933), "Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "Failed to set a session Id to the unit."}, {Integer.toString(-935), "The unit is not yet ready to be acquired."}, {Integer.toString(-936), "The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "Retrieving keyset for the unit failed."}, {Integer.toString(-939), "Successfully retreived keyset for the unit."}, {Integer.toString(-940), "Failed to push the keyset to the unit."}, {Integer.toString(-941), "Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "ZeroTouch feature was enabled for the firewall."}, {Integer.toString(-948), "ZeroTouch feature was disabled for the firewall."}, {"TICKET_INFORMATION", "Connectwise Ticket"}, {"TICKET_DETAILS", "Details"}, {"CONNECTWISE_NOTE", "GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}};
 
     @Override
     public Object[][] getContents() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_es_ES.java decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_es_ES.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_es_ES.java	2023-09-08 15:13:13.220771870 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_es_ES.java	2023-09-08 15:14:40.182267663 -0700
@@ -7,7 +7,7 @@
 
 public class sgmsResources_es_ES
 extends ListResourceBundle {
-    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "Dispositivo (singular)"}, {"APPLIANCE_NAME_PLURAL", "Dispositivo (plural)"}, {"APPLIANCE_DESC", "Descripci\u00c3\u00b3n del dispositivo"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewalls"}, {"SONICWALL_DESC", "Dispositivos de firewall"}, {"SSLVPN_NAME", "SMA (acceso remoto seguro)"}, {"SSLVPN_NAME_PLURAL", "SMA (accesos remotos seguros)"}, {"SSLVPN_DESC", "Dispositivos SMA"}, {"CDP_NAME", "CDP (protecci\u00c3\u00b3n continua de datos)"}, {"CDP_NAME_PLURAL", "CDP (protecciones continuas de datos)"}, {"CDP_DESC", "Dispositivos CDP"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Dispositivos Aventail SMA"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "Dispositivos de seguridad de correo electr\u00c3\u00b3nico"}, {"OTHERS_NAME", "OTRO"}, {"OTHERS_NAME_PLURAL", "OTROS"}, {"OTHERS_DESC", "Otros dispositivos"}, {"MINUTE", "Minutos"}, {"TEST_STRING", "Esta es una cadena de prueba; quitarla antes del env\u00c3\u00ado"}, {"PROGRESS_ACTION_TIMED", "Esta acci\u00c3\u00b3n puede tomar un tiempo para completarse"}, {"PROGRESS_PLEASE_WAIT", "Espere, por favor..."}, {"LOADING_PLEASE_WAIT", "Cargando, por favor espere..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "No tiene los privilegios necesarios para actualizar en esta pantalla."}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "No tiene permisos para ver ninguna pantalla. Cierre sesi\u00c3\u00b3n y comun\u00c3\u00adquese con su administrador."}, {"UPDATE", "Actualizar"}, {"RESET", "Reiniciar"}, {"NO_PANEL_PERMISSIONS", "[ES]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "C\u00c3\u00b3digos modelo sincronizados correctamente"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "No se han podido sincronizar los c\u00c3\u00b3digos modelo"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "La cola de tareas se ha iniciado correctamente."}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "Error: No hay unidades disponibles para la aplicaci\u00c3\u00b3n de la actualizaci\u00c3\u00b3n."}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n ha sido agregado con \u00c3\u00a9xito - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "Los c\u00c3\u00b3digos de activaci\u00c3\u00b3n se han agregado correctamente."}, {"ERROR_ADD_ACTIVATION_CODE", "Agregar el error del c\u00c3\u00b3digo de activaci\u00c3\u00b3n: El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n ya existe - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n se ha eliminado con \u00c3\u00a9xito - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "Los c\u00c3\u00b3digos de activaci\u00c3\u00b3n se han eliminado correctamente."}, {"ERROR_DELETE_ACTIVATION_CODE", "Eliminar el error del c\u00c3\u00b3digo de activaci\u00c3\u00b3n: El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n no existe - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "Eliminar el error del c\u00c3\u00b3digo de activaci\u00c3\u00b3n: Los siguientes c\u00c3\u00b3digos de activaci\u00c3\u00b3n no se pueden eliminar - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "Se ha agregado el siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n a la base de datos de SonicWall GMS: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n se ha quitado del grupo de c\u00c3\u00b3digos disponibles: "}, {"UPDATE_DB_MESSAGE", "El cambio se actualiz\u00c3\u00b3 correctamente en la base de datos de SonicWall GMS."}, {"FAILURE_UPDATE_DB_MESSAGE", "Error de actualizaci\u00c3\u00b3n: El cambio no se pudo actualizar correctamente en la base de datos de SonicWall GMS."}, {"NO_UNITS_FOR_REGISTRATION", "No hay unidades para registro"}, {"FREE_TRAIL_NOT_APPLIED", "Todas las unidades ya tienen una suscripci\u00c3\u00b3n o ninguna est\u00c3\u00a1 registrada"}, {"AV_FAILURE_MESSAGE", "No hay unidades disponibles para actualizaci\u00c3\u00b3n o para registro"}, {"AV_SUCCESS_MESSAGE", "Las tareas se iniciaron con \u00c3\u00a9xito para la actualizaci\u00c3\u00b3n, as\u00c3\u00ad como para el registro"}, {"AV_SUCCESS_UPGRADE", "Las tareas se iniciaron con \u00c3\u00a9xito para la actualizaci\u00c3\u00b3n"}, {"AV_NO_SUCCESS_REG", "No hay unidades disponibles para el registro"}, {"AV_SUCCESS_REG", "La tarea se ha iniciado correctamente para el registro"}, {"AV_NO_SUCCESS_UPGRADE", "No hay unidades disponibles para actualizar"}, {"TASK_SUCCESS_MESSAGE", "La tarea se ha iniciado correctamente"}, {"TASK_CMP_ERROR", "La contrase\u00c3\u00b1a CMP solo se puede cambiar para la unidad"}, {"TASK_ERROR_MESSAGE", "Las tareas no se iniciaron correctamente"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "No hay unidades disponibles para la operaci\u00c3\u00b3n de compartir la licencia."}, {"SGMS_EMAIL_BOTTOM_MSG1", "Desarrollado por "}, {"SGMS_EMAIL_BOTTOM_MSG2", " Versi\u00c3\u00b3n "}, {"SGMS_EMAIL_BOTTOM_MSG3", " Serie: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " Servidor: "}, {"FIRMWARE_DOWNLOADED", "Se ha descargado una copia nueva de firmware."}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " caduca muy pronto para los siguientes dispositivos.\nP\u00c3\u00b3ngase en contacto con el sector de ventas de SonicWall para comprar c\u00c3\u00b3digos de activaci\u00c3\u00b3n para la renovaci\u00c3\u00b3n de estas suscripciones."}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "Informaci\u00c3\u00b3n sobre la caducidad de la suscripci\u00c3\u00b3n."}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "No se encontraron caducidades."}, {"VERSION_MESSAGE", "N\u00c3\u00bamero de versi\u00c3\u00b3n de SonicWall GMS:"}, {"NUM_NODES_MESSAGE", "N\u00c3\u00bamero de nodos que se pueden gestionar con este SonicWall GMS:"}, {"PRODUCT_DESCRIPTION_MESSAGE", "Descripci\u00c3\u00b3n del producto GMS: "}, {"DATABASE_TYPE_MESSAGE", "Tipo de base de datos: "}, {"MODEL_TYPES_MESSAGE", "Cantidad de nodos y nombre del modelo: "}, {"NUM_AGENTS_MESSAGE", "Cantidad de agentes en el sistema: "}, {"AGENT_IP_MESSAGE", "Direcci\u00c3\u00b3n IP de los agentes: "}, {"UNKNOWN_MESSAGE", "Desconocido"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "BASE DE DATOS desconocida"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "Caracteres no v\u00c3\u00a1lidos [<,\\,:] en el nombre de la unidad."}, {"PM_NAME_KEYWORD", " es una palabra clave y no se puede utilizar para nombrar una unidad. Utilice otro nombre"}, {"PM_NAME_EXISTS_A", "Una unidad con el nombre \u00e2\u20ac\u0153"}, {"PM_NAME_EXISTS_B", "' ya existe "}, {"PM_UNKNOWN", "Desconocido"}, {"PM_UNKNOWN_UNREGISTERED", "Desconocido/No registrado"}, {"PM_UNREGISTERED", "No registrado"}, {"PM_YES", "S\u00c3\u00ad"}, {"PM_NO", "No"}, {"PM_ENABLED", "Activado"}, {"PM_DISABLED", "Desactivado"}, {"PM_NOTAVAILABLE", "No disponible"}, {"PM_UNLIMITED", "Ilimitado"}, {"PM_CURRENT", "Actual"}, {"PM_DEFAULT", "Predeterminado"}, {"PM_EXPIRED", "Caducado"}, {"PM_UP", "Activo"}, {"PM_DOWN", "Inactivo"}, {"PM_NOT_ACQUIRED", "No adquirido"}, {"PM_SINCE", " desde "}, {"PM_NONE", "Ninguno"}, {"PM_N_A", "N/D"}, {"PM_NO_LICENSE", "Sin licencia"}, {"PM_MODEL", "Modelo"}, {"PM_SERIAL_NUM", "N\u00c3\u00bamero de serie"}, {"PM_DOMAIN", "Dominio"}, {"PM_NUM_LAN_IPS", "Cantidad permitida de IP de LAN"}, {"PM_HA", "Alta disponibilidad"}, {"PM_DMZ_PORT", "Puerto DMZ"}, {"PM_NUM_WORKPORTS", "Cantidad permitida de IP de WorkPort "}, {"PM_HOMEPORT", "HomePort"}, {"PM_WLAN_PORT", "Puerto WLAN"}, {"PM_OPT_PORT", "Puerto OPT"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "Actualizaci\u00c3\u00b3n de VPN"}, {"PM_VPN_CLIENTS", "Clientes globales de VPN"}, {"PM_IPS", "Servicio de prevenci\u00c3\u00b3n de intrusiones"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "Antivirus de pasarela"}, {"PM_FIRMWARE_VERSION", "Versi\u00c3\u00b3n de firmware"}, {"PM_REGISTRATION_CODE", "C\u00c3\u00b3digo de registro"}, {"PM_CFS_SUB", "Lista/servicio de filtrado de contenido"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "Antivirus"}, {"PM_WARRANTY", "Garant\u00c3\u00ada extendida"}, {"PM_SW_STATUS", "Estado"}, {"PM_SW_MANAGEDINSTANCE", "Gestionado por instancia"}, {"PM_TASKS_PENDING", "Tareas pendientes"}, {"PM_LAST_LOG", "\u00c3\u0161ltima entrada de registro"}, {"PM_SAS_CONFIG_INFO", "Informaci\u00c3\u00b3n de configuraci\u00c3\u00b3n de SA"}, {"PM_SAS_DEFINED", "SA definidos"}, {"PM_SAS_ENABLED", "SA activados"}, {"PM_SAS_AVAILABLE", "SA disponibles"}, {"PM_SAS_REMAINING", "SA restantes"}, {"PM_SAS_INTERCONNECTED", "SA interconectados"}, {"PM_AGENT_ASSIGNED", "Agente asignado"}, {"PM_PRIMARY_AGENT", "Agente principal"}, {"PM_STANDBY_AGENT", "Agente en espera"}, {"PM_TUNNEL_MGMT", "Modo de administraci\u00c3\u00b3n"}, {"PM_FW_ADDED_TO_GMS", "Unidad agregada a SonicWall GMS el"}, {"PM_FW_UP_SINCE", "Unidad activa desde"}, {"PM_FW_DOWN_SINCE", "Unidad inactiva desde"}, {"PM_SW_IP", "IP de SonicWall"}, {"PM_TIME_ZONE", "Zona horaria"}, {"PM_SW_IN_SYSTEM", "en el sistema"}, {"PM_SW_IN_DMZ", "en el DMZ"}, {"PM_SW_IN_GROUP", "en el grupo"}, {"PM_SW_UNREGISTERED", "que no est\u00c3\u00a1n registrados"}, {"PM_SW_VPN_UPGRADE", "con actualizaci\u00c3\u00b3n de VPN"}, {"PM_SW_VPN_CLIENT", "con la actualizaci\u00c3\u00b3n de cliente VPN global"}, {"PM_SW_MSSP", "que sean compatibles con los MSSP (proveedores de servicios de seguridad gestionada)"}, {"PM_CFL_SUBSCRIPTION", "Lista/servicio de filtrado de contenido"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "Antivirus"}, {"PM_HGMS_SUBSCRIPTION", "Servicios en la nube"}, {"PM_SUPPORT_SUBSCRIPTION", "Soporte "}, {"PM_EXTENDED_WARRANTY", "Garant\u00c3\u00ada extendida"}, {"PM_UNITS_DOWN", "SonicWall que est\u00c3\u00a1n dadas de baja"}, {"PM_PENDING_TASKS", "SonicWall con tareas pendientes"}, {"PM_MANAGED_WITH_TUNNEL", "SonicWall administradas utilizando un t\u00c3\u00banel de administraci\u00c3\u00b3n"}, {"PM_TASK_SPOOLED", "La tarea est\u00c3\u00a1 en espera para cambiar el nombre de host."}, {"PM_RAVLIN_MODEL", "Modelo Ravlin"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/n\u00c3\u00bamero de serie"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "Versi\u00c3\u00b3n de firmware"}, {"PM_HW_VERSION", "Versi\u00c3\u00b3n de hardware"}, {"PM_ROM_VERSION", "Versi\u00c3\u00b3n de ROM"}, {"PM_SECURITY_ID", "ID de seguridad"}, {"PM_RAVLIN_STATUS", "Estado de Ravlin"}, {"PM_TASKS_PENDING", "Tareas pendientes"}, {"PM_AGENT_ASSIGNED", "Agente asignado"}, {"PM_RAVLINS_IN_NODE", "Ravlins en el nodo"}, {"PM_RAVLINS_DOWN", "Ravlins que est\u00c3\u00a1n dados de baja"}, {"PM_RAVLINS_PENDING_TASKS", "Ravlins con tareas pendientes"}, {"PM_FIX_UNIT_ERROR", "Error al intentar reparar la unidad "}, {"PM_MOD_UNIT_EXISTS", "Ya existe una unidad modificada con el n\u00c3\u00bamero de serie"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "Unidad modificada con el nombre "}, {"PM_MOD_UNIT_NAME_EXISTS_B", "ya existe "}, {"PM_ADD_ERR_PRIVILEGES", "ERROR: No tiene suficientes privilegios para agregar la unidad."}, {"PM_UNIT_EXISTS", "Ya existe una unidad con el n\u00c3\u00bamero de serie"}, {"PM_UNIT_NAME_EXISTS_A", "Unidad con el nombre "}, {"PM_UNIT_NAME_EXISTS_B", "ya existe en el dominio "}, {"PM_ADD_UNIT_ERR", "Se produjo un error al agregar la unidad a la base de datos de SonicWall."}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "Introduzca un n\u00c3\u00bamero de serie v\u00c3\u00a1lido.\nEl n\u00c3\u00bamero de serie debe ser de "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "caracteres de longitud."}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "El n\u00c3\u00bamero de serie debe contener solamente caracteres hexadecimales."}, {"PM_GET_PREFS_ERR", "Error al recuperar el archivo de preferencias."}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "La unidad no tiene licencia para usar los servicios en la nube.\nObtenga la licencia de cualquiera de los siguientes servicios de MySonicWall.com antes de agregar la unidad a "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " no puede obtener informaci\u00c3\u00b3n de las licencias de esta unidad.\nVuelva a intentarlo m\u00c3\u00a1s tarde."}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " no puede comunicarse con MySonicWall.com para verificar las licencias de esta unidad.\nVuelva a intentarlo m\u00c3\u00a1s tarde."}, {"PM_LICENSED", "Con licencia"}, {"PM_NOT_LICENSED", "Sin licencia"}, {"PM_IS_MSSP", "Unidad de MSSP"}, {"PM_SYSLOG_FORMAT", "Formato de registro de sistema"}, {"PM_STATUS_MSG_ONLY", "Solo mensajes de estado"}, {"PM_SYSLOG_IN_UTC", "Registros en UTC"}, {"PM_VIEWPOINT_MODE", "Modo analizador activado"}, {"PM_NAME_RESOLUTION", "Modo de resoluci\u00c3\u00b3n de nombre"}, {"PM_ACCESS_MODE", "Modo de acceso"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS, luego NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"PM_CONNECTWISE_STATUS", "[ES] Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[ES] Not Available"}, {"VM_PATCH_DETECTED_MSG1", " ha detectado nuevas actualizaciones de software disponibles"}, {"VM_PATCH_DETECTED_MSG2", "Error al enviar un correo electr\u00c3\u00b3nico de admin sobre informaci\u00c3\u00b3n de actualizaci\u00c3\u00b3n del nuevo software. No se encuentra configurado el correo electr\u00c3\u00b3nico SMTP o admin."}, {"VM_PATCH_DETECTED_MSG3", " Actualizaciones de software disponibles\n\n"}, {"VM_NEW", "Nuevo "}, {"VM_PATCH_DETECTED_MSG4", "Para consultar las notas de la versi\u00c3\u00b3n y descargar informaci\u00c3\u00b3n, inicie sesi\u00c3\u00b3n en su cuenta MySonicWall.com</a> <a href=https://www.mysonicwall.com>"}, {"VM_SCREEN", " Pantalla."}, {"VM_PATCH_DETECTED_MSG5", " La actualizaci\u00c3\u00b3n de la revisi\u00c3\u00b3n del componente se comprob\u00c3\u00b3 correctamente. Se encontraron nuevas actualizaciones de componentes. Correo electr\u00c3\u00b3nico enviado a admin."}, {"VM_PATCH_DETECTED_MSG6", "Error al descargar la actualizaci\u00c3\u00b3n de la revisi\u00c3\u00b3n "}, {"VM_FOR", " para "}, {"VM_ON", " en "}, {"VM_PATCH_DETECTED_MSG7", " descarga de revisi\u00c3\u00b3n de componente abortada. Ya existe un archivo de revisi\u00c3\u00b3n: "}, {"VM_PATCH_DETECTED_MSG8", " descarga de revisi\u00c3\u00b3n de componente correcta: "}, {"VM_PATCH_DETECTED_MSG9", "Error al escribir el archivo de revisi\u00c3\u00b3n "}, {"VM_PATCH_DETECTED_MSG10", " en el disco."}, {"SDM_UPDATE_SUCCESS", "La actualizaci\u00c3\u00b3n se realiz\u00c3\u00b3 con \u00c3\u00a9xito."}, {"SDM_UPDATE_FAILURE", "Error de actualizaci\u00c3\u00b3n."}, {"SDM_UPDATE_SPECIAL_FAILURE", "No se pudieron crear tareas para eliminar SA."}, {"SDM_UPDATE_INVALID", "Solicitud de actualizaci\u00c3\u00b3n no v\u00c3\u00a1lida."}, {"SDM_SCREEN_ID_INVALID", "el ID de la pantalla no es v\u00c3\u00a1lido"}, {"SDM_READY", "Listo"}, {"SDM_CGI_ERROR", "Error al obtener el CGI_NAME para "}, {"SDM_DEFAULT_ERROR", "Error al obtener el DEFAULT_VALUE (VALOR_PREDETERMINADO) para "}, {"SDM_INVALID_TARGET", "Error: El grupo de origen o destino no es v\u00c3\u00a1lido."}, {"SDM_METADATA_ERROR", "Error al obtener los metadatos de "}, {"SDM_DB_ERROR", "Se produjo un error al acceder a la base de datos de SonicWall GMS."}, {"SDM_NOVPN_ERROR", "VPN no activada en esta unidad. Error al crear la VPN en la unidad "}, {"SDM_NO_TARGET_VPN_ERROR", "VPN no activada en el destino. Error al crear la VPN en la unidad "}, {"SDM_NOSAS_ERROR", "No quedan SA disponibles en esta unidad. Error al crear la VPN en la unidad "}, {"SDM_NO_TARGET_SAS_ERROR", "No quedan SA disponibles en el destino. Error al crear la VPN en la unidad "}, {"SDM_NO_UNITS_ERROR", "No se crearon tareas."}, {"SDM_NO_3RDPARTYCERTS_ERROR", "Se encontraron combinaciones de certificados de CA y locales de terceros no v\u00c3\u00a1lidas. Omisi\u00c3\u00b3n de VPN SA en la unidad "}, {"SDM_DHCP_ERROR", "El direccionamiento din\u00c3\u00a1mico est\u00c3\u00a1 activado en unidades de origen y destino, por lo que no se puede crear SA. Omisi\u00c3\u00b3n de la creaci\u00c3\u00b3n de VPN SA. "}, {"SDM_NOAES_ERROR", "AES no disponibles en esta unidad. Error al crear la VPN en la unidad "}, {"SDM_NO_TARGET_AES_ERROR", "AES no disponibles en destino. Error al crear la VPN en la unidad "}, {"SDM_DELETE_SUCCESS", "La eliminaci\u00c3\u00b3n se realiz\u00c3\u00b3 con \u00c3\u00a9xito. "}, {"SDM_DELETE_FAILURE", "Error al eliminar "}, {"SDM_AGENTNAME_INVALID", "Caracteres no v\u00c3\u00a1lidos [<,\\,:,',@,#,*,$] in Agent name."}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "Error en la creaci\u00c3\u00b3n de la tarea de VPNS SA interconectados mejorados"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "Error en la actualizaci\u00c3\u00b3n del grupo de "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "VPN SA interconectados mejorados "}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "VPN SA interconectados est\u00c3\u00a1ndares "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "VPN SA no interconectados mejorados"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "VPN SA no interconectados est\u00c3\u00a1ndares"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "Omisi\u00c3\u00b3n de la creaci\u00c3\u00b3n de SA para esta unidad, ya que la versi\u00c3\u00b3n de firmware en esta unidad no es compatible con el tipo de interfaz de t\u00c3\u00banel"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "Tarea programada para ejecutarse en"}, {"PASSWORD_CHANGED", "La contrase\u00c3\u00b1a de SonicWall GMS se modific\u00c3\u00b3 correctamente."}, {"PASSWORD_NOT_CHANGED_A", "La contrase\u00c3\u00b1a anterior especificada es incorrecta. <BR>"}, {"PASSWORD_NOT_CHANGED_B", " Contrase\u00c3\u00b1a sin cambios."}, {"PASSWORD_NOT_CHANGED", "La contrase\u00c3\u00b1a anterior especificada no es correcta. No se modific\u00c3\u00b3 la contrase\u00c3\u00b1a."}, {"LOGS_PASSWD_CHANGED", "La contrase\u00c3\u00b1a de inicio de sesi\u00c3\u00b3n de los usuarios se ha modificado correctamente "}, {"LOGS_PASSWD_NOT_CHANGED", "El sistema no pudo autenticar al usuario para modificar la contrase\u00c3\u00b1a de inicio de sesi\u00c3\u00b3n "}, {"LOGS_ADDED_NEW_USER", "Se agreg\u00c3\u00b3 un usuario nuevo a la base de datos de SonicWall GMS: "}, {"LOGS_ADDED_NEW_USER_TYPE", "Se agreg\u00c3\u00b3 un tipo usuario nuevo a la base de datos de SonicWall GMS: "}, {"LOGS_DELETED_USER", "Se elimin\u00c3\u00b3 el usuario y la informaci\u00c3\u00b3n correspondiente de la base de datos de SonicWall GMS: "}, {"LOGS_DELETED_GROUP", "El siguiente grupo personalizado y todas las vistas realizadas con este grupo personalizado se eliminaron de la base de datos de SonicWall GMS: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "Valor del atributo personalizado ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") debe contener solamente caracteres alfanum\u00c3\u00a9ricos"}, {"LOGS_ADD_CUSTOM_GROUP", "Se agreg\u00c3\u00b3 el siguiente Nombre de grupo personalizado/Valor predeterminado al sistema: "}, {"LOGS_MOD_CUSTOM_GROUP", "Se modific\u00c3\u00b3 el siguiente Nombre de grupo personalizado/Valor predeterminado: "}, {"LOGS_DEL_CUSTOM_GROUP", "Se elimin\u00c3\u00b3 el siguiente Grupo personalizado del sistema: "}, {"READY", "Listo"}, {"NAV_OF", " de "}, {"NAV_PREVIOUS", "Anterior"}, {"NAV_NEXT", "Siguiente"}, {"NAV_DISPLAYING", "Visualizaci\u00c3\u00b3n"}, {"NAV_FIREWALLS", "Firewall(s)"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "No tiene los privilegios necesarios para actualizar en esta pantalla."}, {"ACT_WRONG_FILE_FORMAT", "Error: Formato de archivo incorrecto, no se pudieron agregar los c\u00c3\u00b3digos."}, {"AUTH_INVALID_PARAMS", "Par\u00c3\u00a1metros no v\u00c3\u00a1lidos, vuelva a intentarlo"}, {"AUTH_AUTHENTICATE", "Autenticar"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "ha transcurrido el tiempo m\u00c3\u00a1ximo para el n\u00c3\u00bamero aleatorio de inicio de sesi\u00c3\u00b3n"}, {"AUTH_LOGIN_TIMEOUT", "Ha transcurrido el tiempo m\u00c3\u00a1ximo de la p\u00c3\u00a1gina de inicio de sesi\u00c3\u00b3n, int\u00c3\u00a9ntelo de nuevo"}, {"AUTH_LOGIN_FAILURE", "Error de inicio de sesi\u00c3\u00b3n, int\u00c3\u00a9ntelo de nuevo"}, {"AUTH_LOGIN_FAILURE_LOG", "error de inicio de sesi\u00c3\u00b3n"}, {"NO_DOMAIN_SPECIFIED", "No se ha especificado un nombre de dominio para iniciar sesi\u00c3\u00b3n"}, {"SPECIFY_DOMAIN", "Especifique un nombre de dominio para iniciar sesi\u00c3\u00b3n"}, {"INVALID_IP", "[ES]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "Dominio no v\u00c3\u00a1lido. Especifique un nombre de dominio v\u00c3\u00a1lido"}, {"INVALID_ALIAS_MSG", "Alias no v\u00c3\u00a1lido. Especifique un alias v\u00c3\u00a1lido"}, {"REMOTE_SUCCESSFUL_LOGIN", "El usuario inici\u00c3\u00b3 sesi\u00c3\u00b3n en el sistema correctamente: "}, {"REMOTE_FAILED_LOGIN", "Error de autenticaci\u00c3\u00b3n remota del usuario: "}, {"XML_REMOTE_FAILED_LOGIN", "XML basado en un error de autenticaci\u00c3\u00b3n remota del usuario: "}, {"NEW_USER_ADDED", "Nuevo usuario agregado: "}, {"TO_USER_TYPE", "tipo de usuario: "}, {"CLICK_TO_TRY_AGAIN", "Haga clic aqu\u00c3\u00ad para intentarlo de nuevo"}, {"USER_LOCKED_OUT", "El usuario ha sido bloqueado, p\u00c3\u00b3ngase en contacto con su administrador para obtener detalles"}, {"USER_DISABLED", "La cuenta de usuario est\u00c3\u00a1 desactivada, p\u00c3\u00b3ngase en contacto con su administrador para obtener detalles"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "Error de autenticaci\u00c3\u00b3n remota. P\u00c3\u00b3ngase en contacto con su administrador GMS."}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "Error de autenticaci\u00c3\u00b3n remota. P\u00c3\u00b3ngase en contacto con su administrador GMS o intente de nuevo."}, {"LDAP_AUTH_FAILED", "Error de autenticaci\u00c3\u00b3n remota"}, {"LDAP_USER_NOT_FOUND", "Usuario no encontrado o inexistente en el directorio"}, {"LDAP_INVALID_CREDENTIALS", "Error de autenticaci\u00c3\u00b3n remota: Credenciales no v\u00c3\u00a1lidas"}, {"LDAP_COMMUNICATION_ERROR", "No es posible comunicarse con el directorio o el servicio de nombres"}, {"LDAP_ANONYMOUS_BIND_SET", "AnonymousBind se establece como permitido para el dominio "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "Compruebe si el servidor remoto permite Anonymous Binds (enlaces an\u00c3\u00b3nimos)."}, {"LDAP_INVALID_GROUPS_SPECIFIED", "Grupos de directorio especificados no v\u00c3\u00a1lidos. P\u00c3\u00b3ngase en contacto con su administrador GMS."}, {"LDAP_INVALID_GROUP_MEMBER", "El usuario no es un miembro de los grupos de directorio permitidos."}, {"RADIUS_UNKNOWN_HOST", "Host del servidor RADIUS desconocido."}, {"RADIUS_CONNECTION_TIMEOUT", "Ha transcurrido el tiempo de espera m\u00c3\u00a1ximo de la conexi\u00c3\u00b3n con el servidor remoto RADIUS"}, {"RADIUS_FAILED_LOGIN", "Error de autenticaci\u00c3\u00b3n. Credenciales no v\u00c3\u00a1lidas."}, {"RADIUS_EXCEPTION", "Ocurri\u00c3\u00b3 una excepci\u00c3\u00b3n RADIUS."}, {"RADIUS_INVALID_GROUP_MEMBER", "El usuario no es un miembro de los grupos RADIUS permitidos."}, {"PWD_CHANGE_SCREEN", "Cambiar contrase\u00c3\u00b1a."}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "Cambiar la contrase\u00c3\u00b1a, ya que la longitud no se encuentra dentro el rango permitido: de 7 a 15 caracteres."}, {"PWD_VALIDATION_FAILURE", "Cambiar la contrase\u00c3\u00b1a, ya que la longitud no puede exceder los 15 caracteres."}, {"PWD_EXPIRATION", "La contrase\u00c3\u00b1a se debe modificar cada {0} d\u00c3\u00adas."}, {"PWD_CHANGE_NEXT_LOGIN", "Cambiar la contrase\u00c3\u00b1a por orden del administrador."}, {"PASSWORD_EXISTS", "[ES]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[ES]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[ES]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "No se pudo leer el archivo de licencia"}, {"CUI_UPGRADE_SUCCESS", "Actualizaci\u00c3\u00b3n realizada con \u00c3\u00a9xito."}, {"CUI_UPGRADE_FAIL", "Error en la actualizaci\u00c3\u00b3n: "}, {"CUI_SYNCH_SUCCESS", "Sincronizaci\u00c3\u00b3n realizada con \u00c3\u00a9xito"}, {"CUI_SYNCH_FAIL", "Error en la sincronizaci\u00c3\u00b3n: "}, {"CUI_PRORATE_SUCCESS", "La solicitud de prorrateo se ha realizado correctamente"}, {"CUI_PRORATE_FAIL", "Error en la solicitud de prorrateo: "}, {"CUI_CHANGE_PW_SUCCESS", "\u00c3\u2030xito. Contrase\u00c3\u00b1a aceptada por MySonicWall.com."}, {"CUI_CHANGE_PW_FAIL", "Error. La contrase\u00c3\u00b1a no fue aceptada por MySonicWall.com: "}, {"CUI_EMAIL_SUCCESS", "El formulario de soporte t\u00c3\u00a9cnico se envi\u00c3\u00b3 por correo electr\u00c3\u00b3nico al Centro de asistencia de SonicWall GMS."}, {"CUI_EMAIL_FAIL", "Ocurri\u00c3\u00b3 un problema al enviar el informe de soporte t\u00c3\u00a9cnico al Centro de asistencia de SonicWall GMS.<br>Vuelva a intentarlo m\u00c3\u00a1s tarde."}, {"CUI_SESSION_TERMINATED", " La sesi\u00c3\u00b3n finaliz\u00c3\u00b3 correctamente."}, {"CUI_SESSIONS_TERMINATED", " las sesiones se han terminado con \u00c3\u00a9xito."}, {"CUI_NO_AGENTS", "No se encontraron agentes."}, {"CUI_FILTER_ADDED", "Se agreg\u00c3\u00b3 correctamente un filtro nuevo "}, {"DIAG_DIAG_REQUEST_A", "La solicitud de diagn\u00c3\u00b3stico realizada en el "}, {"DIAG_DIAG_REQUEST_B", " ha sido enviada."}, {"DIAG_DELETE_SUCCESS", "Eliminaci\u00c3\u00b3n realizada con \u00c3\u00a9xito."}, {"DIAG_EMAIL_SUCCESS", "Env\u00c3\u00ado por correo electr\u00c3\u00b3nico realizado con \u00c3\u00a9xito."}, {"DIAG_UNIT_UNKNOWN", "'El nombre de la unidad no se conoce'"}, {"DIAG_UNIT", "'Unidad' "}, {"VPN_DUPLICATE_UFI", "Error de actualizaci\u00c3\u00b3n. El identificador \u00c3\u00banico del firewall no es \u00c3\u00banico en SonicWall GMS."}, {"NO_LOGS_MESSAGE", "No se encontraron registros."}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "No se encontraron registros para los criterios de b\u00c3\u00basqueda proporcionados."}, {"LOG_START_SEARCH", "Empezar una nueva b\u00c3\u00basqueda"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "Su consulta para {0, n\u00c3\u00bamero, entero} registros es demasiado extensa. Limite sus criterios de b\u00c3\u00basqueda."}, {"SQL_EXCEPTION_ERROR_MESSAGE", "Hubo un error en la conexi\u00c3\u00b3n de la base de datos. Aseg\u00c3\u00barese de que la base de datos est\u00c3\u00a9 disponible y/o limite los criterios de b\u00c3\u00basqueda."}, {"UNKNOWN_EXCEPTION_MESSAGE", "Hubo un error al ejecutar su b\u00c3\u00basqueda. Aseg\u00c3\u00barese de que la base de datos est\u00c3\u00a9 disponible y/o limite los criterios de b\u00c3\u00basqueda."}, {"LOG_NEXT", "Siguiente"}, {"LOG_PREVIOUS", "Anterior"}, {"LOG_UPDATE_SUCCESS", "La actualizaci\u00c3\u00b3n fue un \u00c3\u00a9xito"}, {"LOG_OF", " de "}, {"LOG_OF", " de "}, {"PREFS_SYNCHRONIZE_STARTED", "La sincronizaci\u00c3\u00b3n de la informaci\u00c3\u00b3n con el dispositivo se inici\u00c3\u00b3 con \u00c3\u00a9xito."}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "Error al sincronizar la informaci\u00c3\u00b3n del dispositivo, no se pudo iniciar la sesi\u00c3\u00b3n del dispositivo."}, {"MON_NO_PRIVILEGES", "No tiene privilegios suficientes para esta pantalla."}, {"MON_SYNC_TASK_CREATED", "Tarea de sincronizaci\u00c3\u00b3n creada con \u00c3\u00a9xito."}, {"MON_SYNC_TASK_FAIL", "Error al crear tarea de sincronizaci\u00c3\u00b3n"}, {"MON_RENEGOTIATE_TASK_CREATED", "Tareas de renegociaci\u00c3\u00b3n creadas con \u00c3\u00a9xito"}, {"MON_RENEGOTIATE_FAILED", "Error al crear tarea de renegociaci\u00c3\u00b3n"}, {"MON_NO_SELECTED", "No hay t\u00c3\u00baneles seleccionados para renegociar"}, {"MON_REFRESH_CREATED", "Tareas de estad\u00c3\u00adsticas actualizadas creadas con \u00c3\u00a9xito"}, {"MON_REFRESH_FAIL", "Error al crear la tarea de actualizaci\u00c3\u00b3n de las estad\u00c3\u00adsticas de t\u00c3\u00banel"}, {"MON_NO_SELECTED_REFRESH", "No hay t\u00c3\u00baneles seleccionados para actualizar las estad\u00c3\u00adsticas"}, {"MON_UPDATE_SUCCESS", "La actualizaci\u00c3\u00b3n fue un \u00c3\u00a9xito"}, {"MON_UPDATE_FAIL", "Error de actualizaci\u00c3\u00b3n."}, {"MON_NO_MONITORING", "Los t\u00c3\u00baneles no pueden ser supervisados."}, {"MON_NAME", "Nombre"}, {"MON_GATEWAY", "Pasarela"}, {"MON_LAST_UPDATED", "\u00c3\u0161ltima actualizaci\u00c3\u00b3n"}, {"MON_DEST_ADDR_RANGE", "Intervalo de direcciones de destino"}, {"MON_LOCAL_ADDR_RANGE", "Intervalo de direcciones locales"}, {"MON_NO_TUNNELS_FOUND", "No se encontraron t\u00c3\u00baneles."}, {"MON_TITLE", "Estad\u00c3\u00adsticas del t\u00c3\u00banel de VPN"}, {"MON_DESCRIPTION", "Descripci\u00c3\u00b3n"}, {"MON_VALUE", "Valor"}, {"MON_CREATE_TIME", "Hora de creaci\u00c3\u00b3n"}, {"MON_VALID_UNTIL", "T\u00c3\u00banel v\u00c3\u00a1lido hasta"}, {"MON_PACKETS_IN", "Paquetes de entrada"}, {"MON_PACKETS_OUT", "Paquetes de salida"}, {"MON_BYTES_IN", "Bytes de entrada"}, {"MON_BYTES_OUT", "Bytes de salida"}, {"MON_FRAGMENTS_IN", "Paquetes fragmentados de entrada"}, {"MON_FRAGMENTS_OUT", "Paquetes fragmentados de salida"}, {"MON_TUNNEL_ACTIVE", "El t\u00c3\u00banel est\u00c3\u00a1 activo"}, {"REG_NO_PERMISSION", "No tiene privilegios de actualizaci\u00c3\u00b3n en esta pantalla"}, {"REG_ERROR_RETRIEVING_COUNT", "Error al recuperar el n\u00c3\u00bamero de dispositivos registrados/no registrados"}, {"REG_CURRENT", "Actual"}, {"REG_EXPIRED", "Caducado"}, {"REG_NO_LICENSE", "Sin licencia"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "No se pudo cargar la Imagen del firmware"}, {"TASKS_SUCCESSFUL_DELETION", "Las tareas se han eliminado correctamente de la base de datos."}, {"TASKS_ERROR_DELETION", "Error: No se pudieron eliminar las tareas."}, {"TASKS_EXECUTION_SET", "Las tareas se han configurado correctamente para su ejecuci\u00c3\u00b3n inmediata."}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "Intento no autorizado para ejecutar la tarea"}, {"TASKS_ERROR_EXECUTION", "Error: No se pudieron programar las tareas para su ejecuci\u00c3\u00b3n."}, {"TASK_DELETED_LOG_MESSAGE", "La tarea siguiente ha sido eliminada por el usuario "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "Intento no autorizado para eliminar la tarea"}, {"NO_TASKS_MESSAGE", "No se han encontrado tareas."}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "No se encontraron tareas para los criterios de b\u00c3\u00basqueda proporcionados."}, {"TASKS_RESCHEDULED", "Las tareas han sido reprogramadas con \u00c3\u00a9xito."}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "Intento no autorizado para reprogramar la tarea"}, {"TASKS_ERROR_RESCHEDULE", "Error: No se pudieron reprogramar las tareas."}, {"IMMEDIATE_STRING", "INMEDIATO"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "Local"}, {"AGENT_STRING", "Agente"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "La tarea siguiente ha sido reprogramada por el usuario "}, {"FROM_LOG_MESSAGE", " de "}, {"TO_LOG_MESSAGE", " a "}, {"IMMEDIATE_LOG_MESSAGE", "Ejecuci\u00c3\u00b3n inmediata"}, {"REG_PASSWORD_SUCCESS", "\u00c3\u2030xito. Contrase\u00c3\u00b1a aceptada por MySonicWall.com. Presione actualizar para continuar."}, {"REG_PASSWORD_FAIL", "Error. La contrase\u00c3\u00b1a no fue aceptada por MySonicWall.com: "}, {"LOGIN_MESSAGE", "Inicie una sesi\u00c3\u00b3n"}, {"LOGIN_DEFAULT_MESSAGE", "Use Usuario:'admin' y Contrase\u00c3\u00b1a:'contrase\u00c3\u00b1a' predeterminados para iniciar sesi\u00c3\u00b3n"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "Use Usuario:'admin' y Contrase\u00c3\u00b1a: igual que / dispositivo predeterminados"}, {"LOGIN_DEMO_MESSAGE", "Inicie sesi\u00c3\u00b3n usando Usuario:'demo' y Contrase\u00c3\u00b1a:'contrase\u00c3\u00b1a'"}, {"SETTINGSVPS_CHANGED", "La configuraci\u00c3\u00b3n de su analizador se ha actualizado."}, {"SETTINGS_CHANGED", "Se actualiz\u00c3\u00b3 su configuraci\u00c3\u00b3n."}, {"LOGS_USER_FORCEDOUT", " ha obligado al siguiente usuario a cerrar sesi\u00c3\u00b3n en el sistema: "}, {"SLAVE_STATE_CHANGED_MESSAGE", "El agente se ha configurado correctamente para cambiar su estado."}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "Intento fallido: El estado del agente no se pudo cambiar."}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "Los par\u00c3\u00a1metros del agente se han actualizado correctamente."}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "Los par\u00c3\u00a1metros del agente no se pudieron actualizar correctamente."}, {"SCHEDULER_UP_STATE", "Activo"}, {"SCHEDULER_DOWN_STATE", "Inactivo"}, {"SCHEDULER_UNDETERMINED_STATE", "Indeterminado"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "No tiene permiso para actualizar las propiedades del agente."}, {"SMTPSERVER_INVALID", "Direcci\u00c3\u00b3n de servidor SMTP no v\u00c3\u00a1lida."}, {"APPLIANCE_MANAGE_FAILED", "Se produjo un error al cambiar las preferencias de administraci\u00c3\u00b3n para los dispositivos."}, {"EMPTY_SMTP_PWD", "El campo Contrase\u00c3\u00b1a SMTP no puede estar vac\u00c3\u00ado"}, {"TREE_AGENT_STARTED", "El agente principal debe estar en estado de inicio para poder reasignar agentes"}, {"TREE_STANDBY_STARTED", "El agente en espera debe estar en estado de inicio para poder reasignar agentes"}, {"TREE_LICENSE_EXCEEDED", "No tiene licencia para agregar ning\u00c3\u00ban otro dispositivo bajo gesti\u00c3\u00b3n."}, {"TREE_IP_EMPTY", "El IP no puede estar vac\u00c3\u00ado. Proporcione una direcci\u00c3\u00b3n IP v\u00c3\u00a1lida"}, {"TREE_AUTH_FAIL", "Error en la autenticaci\u00c3\u00b3n del dispositivo; compruebe las configuraciones."}, {"TREE_NO_RESPONSE", "El dispositivo es inalcanzable; compruebe las configuraciones."}, {"TREE_FIREWALL_NOT_LICENSED", "Dispositivo sin licencia para el analizador."}, {"TREE_FIREWALL_STATE_ERROR", "Error al recuperar la informaci\u00c3\u00b3n del estado del dispositivo.\nEl firmware del dispositivo necesitar\u00c3\u00a1 ser actualizado."}, {"TREE_MODEL_FAIL", "Error al recuperar la informaci\u00c3\u00b3n del modelo"}, {"TREE_FIRMWARE_VERSION_FAIL", "Error al recuperar la versi\u00c3\u00b3n de firmware"}, {"TREE_UNMATCHED_SERIAL", "Los n\u00c3\u00bameros de serie no concuerdan."}, {"TREE_TIMEZONE_FAIL", "Error al recuperar la zona horaria"}, {"TREE_UTC_FAIL", "Los mensajes de registro no est\u00c3\u00a1n en formato UTC. Cambie el formato de fecha y hora del dispositivo a UTC; de lo contrario, los informes generados mostrar\u00c3\u00a1n una hora err\u00c3\u00b3nea."}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "Active la opci\u00c3\u00b3n 'Activar configuraci\u00c3\u00b3n de ViewPoint' en Registro\u00c2\u00a0>\u00c2\u00a0pantalla ViewPoint. Esta configuraci\u00c3\u00b3n cambiar\u00c3\u00a1 lo siguiente:\n\t1. Enviar registro de sistema en UTC\n\t2. Establecer 'Filtro de redundancia de evento de registro de sistema' (segundos) en 0\n\t3. Establecer 'Formato de registro de sistema' en Predeterminado"}, {"TREE_NO_SCHEDULER", "No se encontr\u00c3\u00b3 programador en la direcci\u00c3\u00b3n IP especificada, la unidad no se ha agregado"}, {"TREE_GET_PREFS_ERR", "Error al recuperar el archivo de preferencias."}, {"TREE_FIREWALL_NOT_REGISTERED", "Este dispositivo no ha sido registrado.  Visite la p\u00c3\u00a1gina MySonicWall.com y registre el dispositivo antes de agregarlo al analizador."}, {"TREE_BACKEND_COMM_FAILURE", "El Analizador no puede comunicarse con MySonicWall.com para verificar la licencia.\nRevise la conexi\u00c3\u00b3n a la red; el Analizador debe ser capaz de comunicarse con MySonicWall.com. "}, {"SU_DB_SIZE_EMAILBODY1", "Los tama\u00c3\u00b1os de la base de datos actual son los siguientes: \n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\nNota: La limitaci\u00c3\u00b3n del tama\u00c3\u00b1o m\u00c3\u00a1ximo de la base de datos es de 2\u00c2\u00a0GB \n\n \nEl siguiente cambio en la configuraci\u00c3\u00b3n afectar\u00c3\u00a1 el tama\u00c3\u00b1o total del uso de la base de datos:\n\tReducir la configuraci\u00c3\u00b3n del n\u00c3\u00bamero de d\u00c3\u00adas a \"Days To Store Raw Data\" en Panel de consola\u00c2\u00a0->\u00c2\u00a0Informes\u00c2\u00a0->\u00c2\u00a0pantalla de configuraci\u00c3\u00b3n.\n\tReducir el n\u00c3\u00bamero o los d\u00c3\u00adas a  \"Days To Store Summarized Data\" configurando en Panel de consola\u00c2\u00a0->\u00c2\u00a0Informes\u00c2\u00a0->\u00c2\u00a0pantalla de res\u00c3\u00bamenes."}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\nNota: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "La limitaci\u00c3\u00b3n del tama\u00c3\u00b1o m\u00c3\u00a1ximo de la base de datos es de 2\u00c2\u00a0GB \n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\nEl siguiente cambio en la configuraci\u00c3\u00b3n afectar\u00c3\u00a1 el tama\u00c3\u00b1o total del uso de la base de datos:\n\tReducir la configuraci\u00c3\u00b3n del n\u00c3\u00bamero de d\u00c3\u00adas a \"Days To Store Raw Data\" en Panel de consola\u00c2\u00a0->\u00c2\u00a0Informes\u00c2\u00a0->\u00c2\u00a0pantalla de configuraci\u00c3\u00b3n.\n\tReducir el n\u00c3\u00bamero o los d\u00c3\u00adas a  \"Days To Store Summarized Data\" configurando en Panel de consola\u00c2\u00a0->\u00c2\u00a0Informes\u00c2\u00a0->\u00c2\u00a0pantalla de res\u00c3\u00bamenes."}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "ADVERTENCIA:\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "Compruebe si no ha configurado su base de datos sobre un plan de copia de seguridad de mantenimiento o si fall\u00c3\u00b3 un plan existente para borrar los registros.\nSi no configura su base de datos en un plan de mantenimiento, sus registros de transacciones continuar\u00c3\u00a1n creciendo y llenar\u00c3\u00a1n todo el disco r\u00c3\u00adgido, \ny en ese momento su base de datos y el sistema GMS no van a funcionar. En segundo lugar, en caso de que su base de datos se bloquee, no va a poder restaurar su \nbase de datos a una \u00c3\u00baltima copia de seguridad conocida."}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: Comprobaci\u00c3\u00b3n de estado de la base de datos"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "Error al ingresar a la unidad para la validaci\u00c3\u00b3n de la licencia para el dispositivo con serie "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", ". Aseg\u00c3\u00barese de que ninguna de las configuraciones necesarias para el inicio de sesi\u00c3\u00b3n se haya cambiado en forma local en el dispositivo. Utilice Modificar unidad para reflejar los cambios en el analizador", "Validaci\u00c3\u00b3n de la licencia por el analizador"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "Validaci\u00c3\u00b3n de la licencia por el analizador"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "Inicio de sesi\u00c3\u00b3n en su dispositivo "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " por error en la validaci\u00c3\u00b3n de la licencia y ha superado el per\u00c3\u00adodo de gracia. Aseg\u00c3\u00barese de que ninguna de las configuraciones necesarias para el inicio de sesi\u00c3\u00b3n se haya cambiado en forma local en el dispositivo. Utilice Modificar unidad para reflejar los cambios en el analizador"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "\u00c2\u00a1La licencia del analizador ha caducado!"}, {"SU_LIC_EXPIRED_BODY1", "Su dispositivo "}, {"SU_LIC_EXPIRED_BODY2", " no tiene licencia para el analizador. Compruebe las configuraciones en el dispositivo"}, {"SU_LIC_EXPIRED_SUBJECT", "\u00c2\u00a1La licencia del analizador ha caducado!"}, {"LOGVIEW_WRONG_START_DT", "Formato de fecha de inicio incorrecto. El formato de la fecha debe ser mm/dd/aaaa."}, {"LOGVIEW_WRONG_END_DT", "Formato de fecha de finalizaci\u00c3\u00b3n incorrecto. El formato de la fecha debe ser mm/dd/aaaa."}, {"LOGVIEW_ENDDT_LESS_STARTDT", "Fecha de finalizaci\u00c3\u00b3n anterior a la fecha de inicio. Introduzca fechas de inicio y de finalizaci\u00c3\u00b3n v\u00c3\u00a1lidas."}, {"LOGVIEW_MSGS_PERSCRN", "Mensajes por pantalla"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "Usted est\u00c3\u00a1 a punto de exportar {0, n\u00c3\u00bamero, entero} entradas de registro. \u00c2\u00bfEst\u00c3\u00a1 seguro de que desea hacer esto? Si no es as\u00c3\u00ad, cancele este cuadro de di\u00c3\u00a1logo y limite sus criterios de b\u00c3\u00basqueda."}, {"LOGVIEW_GOTO_MSG", "Ir a N\u00c3\u00bamero de mensaje"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "Mostrar mensajes por pantalla:"}, {"LOGVIEW_RANGE", "(Intervalo: 10-100)"}, {"LOGVIEW_COL_DT", "Fecha"}, {"LOGVIEW_COL_MSG", "Mensaje"}, {"LOGVIEW_COL_SEV", "Gravedad"}, {"LOGVIEW_COL_USER", "Usuario GMS"}, {"LOGVIEW_COL_CO", "Pedido de cambio"}, {"LOGVIEW_COL_IP", "IP del usuario"}, {"LOGVIEW_SEARCH_RESULTS", "Resultados de la b\u00c3\u00basqueda"}, {"LOGVIEW_SEARCH_CRITERIA", "Criterios de b\u00c3\u00basqueda"}, {"LOGVIEW_EXPORT_LOGS", "Exportar registros"}, {"LOGVIEW_CLEAR_LOGS", "Borrar b\u00c3\u00basqueda"}, {"LOGVIEW_SEARCH_LOGS", "Iniciar b\u00c3\u00basqueda"}, {"LOGVIEW_MATCH_CASE", "Respetar may\u00c3\u00basculas y min\u00c3\u00basculas"}, {"LOGVIEW_EXACT_PHRASE", "Frase exacta"}, {"LOGVIEW_ANY_WORD", "Cualquier palabra"}, {"LOGVIEW_ALL_WORDS", "Todas las palabras"}, {"LOGVIEW_MSG", "El mensaje contiene:"}, {"LOGVIEW_CO", "Pedido de cambio:"}, {"LOGVIEW_TIME", "Seleccione hora de registros: De:"}, {"LOGVIEW_TIME_TO", "A: "}, {"LOGVIEW_NODE_NAME", "Nodo SonicWall:"}, {"LOGVIEW_USER", "Usuario: "}, {"LOGVIEW_SEV", "Gravedad: "}, {"LOGVIEW_CALENDAR", "Calendario"}, {"LOGVIEW_ALL", "Todos (Alerta, Advertencia y Para su informaci\u00c3\u00b3n)"}, {"LOGVIEW_ALERT_WARNING", "Alerta y Advertencia"}, {"LOGVIEW_ALERT", "Alerta"}, {"LOGVIEW_STR_FORMAT", "Formato de cadena de b\u00c3\u00basqueda: user@domain.<br>Solo para usuario, introducir usuario.<br>Solo para dominio, introducir @domain.<br><i>Nota: Si el valor del usuario contiene un car\u00c3\u00a1cter @, termine la cadena de b\u00c3\u00basqueda con otro car\u00c3\u00a1cter @.</i>"}, {"HELPABOUT_VERSION", "Versi\u00c3\u00b3n:"}, {"HELPABOUT_LIC", "Licencia para:"}, {"HELPABOUT_SN", "N\u00c3\u00bamero de serie:"}, {"HELPABOUT_DBDRIVER", "Controlador de la base de datos:"}, {"HELPABOUT_DBVERSION", "Versi\u00c3\u00b3n de la base de datos:"}, {"HELPABOUT_REPORT_DBVERSION", "Versi\u00c3\u00b3n de la base de datos de informes:"}, {"LOGIN_TITLE", "Inicio de sesi\u00c3\u00b3n"}, {"LOGIN_ISBLANK", " est\u00c3\u00a1 en blanco. Introduzca un valor."}, {"LOGIN_INVALIDID", "El ID del usuario especificado no es v\u00c3\u00a1lido."}, {"LOGIN_INVALIDID2", "El ID del usuario puede contener solamente los siguientes caracteres:"}, {"LOGIN_INVALIDID3", "Alfanum\u00c3\u00a9ricos, . (punto), - (guion), _ (subrayado) y @ (arroba)."}, {"LOGIN_INVALIDID4", "Especifique un ID de usuario con los caracteres permitidos."}, {"LOGIN_USERNAME", "Nombre de usuario"}, {"LOGIN_PASSWORD", "Contrase\u00c3\u00b1a"}, {"LOGIN_LOGIN", "LOGIN"}, {"LOGIN_DOMAIN", "Dominio"}, {"LOGIN_SWITCH_EN_US", "Cambiar la interfaz de usuario a ingl\u00c3\u00a9s"}, {"LOGIN_SWITCH_JA_JP", "Cambiar la interfaz de usuario a japon\u00c3\u00a9s"}, {"LOGIN_SWITCH_ZH_CN", "Cambiar la interfaz de usuario a chino simplificado"}, {"LOGIN_SWITCH_ZH_TW", "Cambiar la interfaz de usuario a chino tradicional"}, {"LOGIN_SWITCH_KO_KR", "Cambiar a la interfaz de usuario de coreano"}, {"LOGIN_SWITCH_PT_BR", "Cambiar a la interfaz de usuario de portugu\u00c3\u00a9s (Brasil)"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "Finalizar sesi\u00c3\u00b3n"}, {"LOGOUT_VPMSG", "Ha finalizado su sesi\u00c3\u00b3n correctamente en el sistema SonicWall Analyzer."}, {"LOGOUT_VPMSG1", "Para iniciar una nueva sesi\u00c3\u00b3n en SonicWall Analyzer, se recomienda que cierre o salga de este explorador &nbsp<br>&nbsp y abra una nueva instancia del explorador."}, {"LOGOUT_GMSMSG", "Ha finalizado su sesi\u00c3\u00b3n correctamente en SonicWall Global Management System. "}, {"LOGOUT_GMSMSG1", "Para iniciar una nueva sesi\u00c3\u00b3n en SonicWall GMS, se recomienda que cierre o salga de este explorador &nbsp<br>&nbsp y abra una nueva instancia del explorador."}, {"SETTINGSUSER_CHANGE", "Cambiar"}, {"SETTINGSUSER_OLD", "Actual"}, {"SETTINGSUSER_PASSWORD", "Contrase\u00c3\u00b1a"}, {"SETTINGSUSER_NEW", "Nueva"}, {"SETTINGSUSER_CONFIRMMSG", "Confirmar la nueva contrase\u00c3\u00b1a"}, {"SETTINGSUSER_FAILMSG", " Las entradas de 'Contrase\u00c3\u00b1a' y 'Confirmar nueva contrase\u00c3\u00b1a' no concuerdan."}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "La contrase\u00c3\u00b1a debe tener al menos 7 caracteres de longitud y contener letras y/o n\u00c3\u00bameros."}, {"INVALID_PASSWORD", "Contrase\u00c3\u00b1a especificada no v\u00c3\u00a1lida."}, {"PWD_RULES", "La contrase\u00c3\u00b1a se debe crear en funci\u00c3\u00b3n de las siguientes reglas: "}, {"VALID_PWD_RULE_FOR_PCI", "    - Al menos 7 caracteres de longitud."}, {"MAX_PWD_LEN", "    - Se permite una longitud m\u00c3\u00a1xima de 15 caracteres."}, {"PWD_ALPHANUMERIC_CHARS", "    - Puede contener caracteres alfanum\u00c3\u00a9ricos."}, {"PWD_SPCIAL_CHARS", "    - Puede contener caracteres especiales."}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[ES]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[ES]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[ES]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "Especifique una contrase\u00c3\u00b1a que cumpla los requisitos."}, {"SETTINGSUSER_MISCSETTINGS", "Otras configuraciones"}, {"SETTINGSUSER_TIMEOUTPERIOD", "El tiempo de espera puede ser de -1 o en el rango de [5..120]. Complete con un n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"SETTINGSUSER_NEVERTIMEOUT", "sin l\u00c3\u00admite de tiempo de espera"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "Tiempo de espera de inactividad"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "Panel de selecci\u00c3\u00b3n del dispositivo, mostrar:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u00c3\ufffdconos"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "Texto"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u00c3\ufffdconos y texto (predeterminado)"}, {"MAX_ROWS_PER_SCREEN", "Cantidad m\u00c3\u00a1xima de filas por pantalla:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "Intervalo: [10..100] (solamente se aplica a pantallas paginadas relacionadas sin elaboraci\u00c3\u00b3n de informes)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "El valor de cantidad m\u00c3\u00a1xima de filas por pantalla est\u00c3\u00a1 fuera del rango v\u00c3\u00a1lido. Introduzca un n\u00c3\u00bamero del 10 al 100 inclusive."}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "El valor de cantidad m\u00c3\u00a1xima de filas por pantalla no es un n\u00c3\u00bamero. Introduzca un n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "Configuraci\u00c3\u00b3n del tablero de guardado autom\u00c3\u00a1tico:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1: Guardado autom\u00c3\u00a1tico no activado o en intervalo:\u00c2\u00a0[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "La configuraci\u00c3\u00b3n para el tablero de guardado autom\u00c3\u00a1tico puede ser -1 o con un intervalo de [1..60]. Complete con un n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"CHANGEPASSWORD_OLD", "Contrase\u00c3\u00b1a actual"}, {"CHANGEPASSWORD_NEW", "Nueva contrase\u00c3\u00b1a"}, {"CHANGEPASSWORD_CONFIRM", "Confirmar la nueva contrase\u00c3\u00b1a"}, {"CHANGEPASSWORD_USER", "Usuario"}, {"CUSTLOGSETTINGS_NOTE1", "Nota: Puede introducir m\u00c3\u00baltiples direcciones de correo electr\u00c3\u00b3nico separadas por punto y coma (\";\")"}, {"CUSTLOGSETTINGS_SECTITLE1", "Programa de destinatarios de alertas por correo electr\u00c3\u00b3nico"}, {"CUSTLOGSETTINGS_WEEKDAY", "D\u00c3\u00ada de la semana:"}, {"CUSTLOGSETTINGS_SCHED1", "Programa 1:"}, {"CUSTLOGSETTINGS_SCHED2", "Programa 2:"}, {"CUSTLOGSETTINGS_SCHED3", "Programa 3:"}, {"CUSTLOGSETTINGS_SAT", "S\u00c3\u00a1bado"}, {"CUSTLOGSETTINGS_SUN", "Domingo"}, {"CUSTLOGSETTINGS_WEEKEND", "Fin de semana:"}, {"CUSTLOGSETTINGS_HRS", "horas"}, {"CUSTLOGSETTINGS_TO", "a"}, {"CUSTLOGSETTINGS_ALERTFMT", "Preferencia de formato de alertas por correo electr\u00c3\u00b3nico"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "Contiene texto, colores, im\u00c3\u00a1genes y enlaces. Solamente es compatible con el software de correo electr\u00c3\u00b3nico apto para HTML."}, {"CUSTLOGSETTINGS_TEXT", "Texto sin formato"}, {"CUSTLOGSETTINGS_TEXT_DESC", "Contiene todos los detalles en texto sin formato. Compatible con todos los software de correo electr\u00c3\u00b3nico."}, {"CUSTLOGSETTINGS_PAGER", "Texto sin formato (simple)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "Contiene un mensaje corto en texto sin formato. Es perfecto para localizadores, SMS (servicio de mensajes cortos) y aplicaciones similares."}, {"LOGCONFIG_SECTITLE_1", "Eliminar"}, {"LOGCONFIG_SECTITLE_2", "Mensajes de registro"}, {"LOGCONFIG_DELLABEL", "Eliminar los mensajes de registro anteriores a:"}, {"LOGCONFIG_MONTH", "Mes"}, {"LOGCONFIG_DAY", "D\u00c3\u00ada"}, {"LOGCONFIG_YEAR", "A\u00c3\u00b1o"}, {"LOGCONFIG_FORLABEL", "para"}, {"LOGCONFIG_DOMAIN", "Dominio"}, {"SESSIONS_NOSESSALERT", "No hay sesiones para finalizar."}, {"SESSIONS_NOSESSSELALERT", "Seleccione sesiones para finalizar."}, {"SESSIONS_RUSUREALERT", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea finalizar las sesiones seleccionadas?"}, {"SESSIONS_TITLE", "Sesiones actuales"}, {"SESSIONS_COL1", "Nombre del usuario"}, {"SESSIONS_COL2", "Direcci\u00c3\u00b3n IP"}, {"SESSIONS_COL3", "Hora de inicio de sesi\u00c3\u00b3n"}, {"SESSIONS_COL4", "Hora del \u00c3\u00baltimo acceso"}, {"SESSIONS_COL5", "Nombre de dominio"}, {"SESSIONS_END", "Finalizar sesiones seleccionadas"}, {"LOGINVPSSETTINGS_LABEL1", "Direcci\u00c3\u00b3n del servidor SMTP"}, {"LOGINVPSSETTINGS_LABEL11", "Puerto SMTP"}, {"LOGINVPSSETTINGS_LABEL2", "Direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico del remitente"}, {"LOGINVPSSETTINGS_LABEL3", "Direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico del administrador"}, {"LOGINVPSSETTINGS_LABEL3_5", "Usar TLS"}, {"LOGINVPSSETTINGS_LABEL4", "Use Authentication"}, {"LOGINVPSSETTINGS_LABEL5", "Usuario"}, {"LOGINVPSSETTINGS_LABEL6", "Contrase\u00c3\u00b1a"}, {"LOGINVPSSETTINGS_NOTE", "Nota: Para modificar las direcciones de correo electr\u00c3\u00b3nico de los destinatarios, vaya a Consola > Alertas > Configuraci\u00c3\u00b3n b\u00c3\u00a1sica"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "Nivel de depuraci\u00c3\u00b3n del sistema:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "La configuraci\u00c3\u00b3n de los niveles de depuraci\u00c3\u00b3n permite una soluci\u00c3\u00b3n de problemas acelerada de posibles problemas de aplicaciones. Esta acci\u00c3\u00b3n crea archivos de registro de depuraci\u00c3\u00b3n en todos los sistemas de esta implementaci\u00c3\u00b3n y puede complicar el rendimiento de las aplicaciones, as\u00c3\u00ad como llenar el espacio en disco. Una vez que se haya resuelto el posible problema, debe restablecer el ajuste a <i>Sin depuraci\u00c3\u00b3n</i> para volver al funcionamiento normal."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "Nota: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;El nivel de depuraci\u00c3\u00b3n debe establecerse \u00c3\u00banicamente en funci\u00c3\u00b3n de la orientaci\u00c3\u00b3n del soporte t\u00c3\u00a9cnico de SonicWall."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Cuanto mayor es el nivel de depuraci\u00c3\u00b3n, m\u00c3\u00a1s recursos del sistema se utilizan para generar datos de depuraci\u00c3\u00b3n y, a la vez, disminuir el rendimiento general del sistema."}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "Sincronizar informaci\u00c3\u00b3n de c\u00c3\u00b3digos modelo ahora"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\u00c2\u00bfDesea actualizar las direcciones del servidor SMTP para todos los informes programados existentes con la nueva direcci\u00c3\u00b3n del servidor SMPT?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "Error al sincronizar la informaci\u00c3\u00b3n de c\u00c3\u00b3digos modelo."}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "Mostrar informes heredados (anteriores a Analyzer 7.0)"}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "Imponer seguridad con contrase\u00c3\u00b1a"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "N\u00c3\u00bamero de d\u00c3\u00adas para forzar el cambio de contrase\u00c3\u00b1a"}, {"GENVPSSTATUS_INVALIDIP", "Credenciales del dispositivo incompletas disponibles para un inicio de sesi\u00c3\u00b3n correcto en este momento"}, {"GENVPSSTATUS_NODE", " Nodo: "}, {"GENVPSSTATUS_INFO", "Informaci\u00c3\u00b3n"}, {"GENVPSSTATUS_SYSLOG", "Servidores de registro de sistema"}, {"GENVPSSTATUS_IPINFO", "Direcci\u00c3\u00b3n IP"}, {"GENVPSSTATUS_PORT", "Puerto"}, {"GENVPSSTATUS_SYNCNOW", "Sincronizar las configuraciones con el dispositivo y la informaci\u00c3\u00b3n de licencia con MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "Introducci\u00c3\u00b3n al analizador"}, {"GENVPSSTATUS_GETSTARTOPEN", "Abra las instrucciones de Introducci\u00c3\u00b3n en una ventana nueva"}, {"GENVPSSTATUS_LOGINTITLE", "Inicio de sesi\u00c3\u00b3n del dispositivo"}, {"GENVPSSTATUS_LOGINHTTP", "Utilizar inicio de sesi\u00c3\u00b3n no seguro (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "Utilizar inicio de sesi\u00c3\u00b3n seguro (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "Inicio de sesi\u00c3\u00b3n"}, {"GENVPSSTATUS_CATEGORIES", "Categor\u00c3\u00adas de registro de sistema"}, {"GENVPSSTATUS_REFRESH_MSG", "Nota: La informaci\u00c3\u00b3n de estado se actualiza cada 24 horas. Para actualizar esta informaci\u00c3\u00b3n, haga clic en el v\u00c3\u00adnculo anterior. Para modificar esta configuraci\u00c3\u00b3n, debe iniciar sesi\u00c3\u00b3n en el dispositivo y actualizarla manualmente."}, {"GENVPSSTATUS_LOG_TYPE", "Tipo de registro"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "Mantenimiento del sistema"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "Errores del sistema"}, {"GENVPSSTATUS_BLOCKED_WEB", "Sitios web bloqueados"}, {"GENVPSSTATUS_BLOCKED_JAVA", "Java bloqueado, etc."}, {"GENVPSSTATUS_USER_ACTIVITY", "Actividad del usuario"}, {"GENVPSSTATUS_VPN_TCP_STATS", "Estad\u00c3\u00adsticas TCP de VPN"}, {"GENVPSSTATUS_ATTACKS", "Ataques"}, {"GENVPSSTATUS_DROPPED_TCP", "TCP ignorados"}, {"GENVPSSTATUS_DROPPED_UDP", "UDP ignorados"}, {"GENVPSSTATUS_DROPPED_ICMP", "ICMP ignorados"}, {"GENVPSSTATUS_NETWORK_DEBUG", "Depuraci\u00c3\u00b3n de la red"}, {"GENVPSSTATUS_DENIED_LAN_IP", "IP de LAN denegado"}, {"GENVPSSTATUS_LICENSE_STATUS", "Estado de licencia del analizador"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;Lleve a cabo los pasos a continuaci\u00c3\u00b3n para resolver el problema \\\"Sin licencia\\\":<br/>&nbsp;&nbsp;Paso 1: <a href=\"http://www.MySonicWall.com\" target=new>Haga clic aqu\u00c3\u00ad para verificar o activar la licencia en MySonicWall.com.</a><br/>&nbsp;&nbsp;Paso 2: Si la licencia est\u00c3\u00a1 activa, <a href=\"javascript:synchronizeInfo();\">haga clic aqu\u00c3\u00ad para sincronizar la informaci\u00c3\u00b3n de la licencia.</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(Hay un error de comunicaci\u00c3\u00b3n al tratar de acceder a MySonicWall.com)<br/>&nbsp;&nbsp;Compruebe que el servidor web GMSVP pueda acceder a www.MySonicWall.com."}, {"COMPONENT", "Descripci\u00c3\u00b3n"}, {"COMPONENT_LC", "componente"}, {"FILE_SIZE", "Tama\u00c3\u00b1o del archivo (kB)"}, {"IP_ADDRESS", "Direcci\u00c3\u00b3n IP"}, {"CURRENT_VERSION", "Versi\u00c3\u00b3n actual"}, {"LATEST_VERSION", "\u00c3\u0161ltima versi\u00c3\u00b3n"}, {"RELEASE_NOTES", "Notas de la versi\u00c3\u00b3n"}, {"LAST_DOWNLOADED", "\u00c3\u0161ltima descargada"}, {"RELEASE_DATE", "Fecha de la versi\u00c3\u00b3n"}, {"DOWNLD_NEW", "Descargar nueva "}, {"SOFTWARE_UPDATES", "Actualizaciones de software"}, {"DEL_SEL_COMPS_FROM_LIST", "Eliminar los componentes seleccionados de la lista"}, {"LIC_DELETE_MSG", "No puede eliminar el"}, {"LIC_PATCH_MSG", "Los parches no est\u00c3\u00a1n disponibles y no se podr\u00c3\u00a1n descargar para los siguientes componentes:"}, {"LIC_NEW_GMS_SW", "Nuevo software de GMS"}, {"LIC_CONSOLE", "Consola"}, {"LIC_SELECT_COMPONENT", "Seleccione un componente."}, {"CHAP_TESTING", "Prueba de CHAP"}, {"CHAP_RADIUS_TESTING_MSG", "Tenga en cuenta que la autenticaci\u00c3\u00b3n CHAP solo funcionar\u00c3\u00a1 con un servidor RADIUS que sea compatible, y en algunos casos ser\u00c3\u00a1 necesario que el servidor est\u00c3\u00a9 configurado para almacenar contrase\u00c3\u00b1as de forma reversible."}, {"CHAP_LDAP_TESTING_MSG", "Tenga en cuenta que la autenticaci\u00c3\u00b3n CHAP solo funcionar\u00c3\u00a1 con un servidor que admita la recuperaci\u00c3\u00b3n de contrase\u00c3\u00b1as del usuario a trav\u00c3\u00a9s de LDPA, y en algunos casos ser\u00c3\u00a1 necesario que el servidor LDAP est\u00c3\u00a9 configurado para almacenar contrase\u00c3\u00b1as de forma reversible."}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "Tenga en cuenta tambi\u00c3\u00a9n que no es posible utilizar CHAP con Active Directory de Microsoft o Novell eDirectory"}, {"PERF_NO_SUMMARIZER", "No hay par\u00c3\u00a1metros de rendimiento de res\u00c3\u00bamenes disponibles en este momento."}, {"PERF_SUMMARIZER_INFO", "Informaci\u00c3\u00b3n de res\u00c3\u00bamenes"}, {"PERF_SUMMARIZER", "Proceso de res\u00c3\u00bamenes"}, {"PERF_SYSLOG_INFO", "Informaci\u00c3\u00b3n de archivos de datos"}, {"PERF_SYSLOG_FILE_TYPE", "Tipo de archivo de datos"}, {"PERF_FILE_STATS", "Estad\u00c3\u00adsticas de archivos"}, {"PERF_OLDEST", "El m\u00c3\u00a1s antiguo"}, {"PERF_PRD_LABEL", "Archivos procesados"}, {"PERF_SRC_LABEL", "Archivos agrupados"}, {"PERF_UNP_LABEL", "Archivos sin procesar"}, {"PERF_NMM_LABEL", "Archivos que no me pertenecen"}, {"PERF_IMF_LABEL", "Archivos infectados"}, {"PERF_ZIP_LABEL", "Archivos archivados"}, {"PERF_PRE_LABEL", "Archivos de registro no v\u00c3\u00a1lidos"}, {"PERF_UPE_LABEL", "Archivos mal cargados"}, {"PERF_UPD_LABEL", "Archivos cargados"}, {"PERF_UPL_LABEL", "Archivos pendientes de carga"}, {"PERF_RDB_LABEL", "Base de datos de informes"}, {"PERF_OPT_STATE_LABEL", "Estado de optimizaci\u00c3\u00b3n"}, {"PERF_OPT_PENDING_LABEL", "Optimizaci\u00c3\u00b3n pendiente"}, {"PERF_OPT_TOTAL_LABEL", "Total de d\u00c3\u00adas no optimizados"}, {"PERF_BKP_LABEL", "Archivos de copia de seguridad"}, {"PERF_FILE_ELEMENT", " Archivos - "}, {"PERF_THREAD_INFO", "Detalles del proceso de res\u00c3\u00bamenes"}, {"PERF_NUM_THREADS", "N\u00c3\u00bamero de flujos actualmente en uso"}, {"PERF_SUMMARIZER_IDLE", "El proceso de res\u00c3\u00bamenes est\u00c3\u00a1 inactivo."}, {"PERF_THREAD", "Flujo"}, {"PERF_FIREWALL", "Dispositivo"}, {"PERF_FILE", "Archivo"}, {"PERF_STATE", "Estado"}, {"PERF_START_TIME", "Iniciado en"}, {"PERF_SUMMARIZER_STATS", "Estad\u00c3\u00adsticas de res\u00c3\u00bamenes"}, {"PERF_PAST_24", "Durante las \u00c3\u00baltimas 24 horas (desde "}, {"PERF_PAST_7_DAYS", "Durante los pasados 7 d\u00c3\u00adas (desde "}, {"PERF_PAST_30_DAYS", "Durante los \u00c3\u00baltimos 30 d\u00c3\u00adas (desde "}, {"PERF_NUM_SYSLOGS", "N\u00c3\u00bamero de registros de sistema resumido en "}, {"PERF_AVERAGE_PER_MINUTE", "Registro del sistema promedio resumido por minuto"}, {"PERF_NOT_ACTIVE", "No se han resumido datos en los \u00c3\u00baltimos 7 d\u00c3\u00adas"}, {"PERF_NO_GEN2", "Los par\u00c3\u00a1metros de rendimiento de res\u00c3\u00bamenes est\u00c3\u00a1n disponibles solo para la configuraci\u00c3\u00b3n de res\u00c3\u00bamenes distribuidos"}, {"PERF_MEM_USAGE", "Consumo de memoria de res\u00c3\u00bamenes"}, {"PERF_LAST_RUN", "\u00c3\u0161ltimo tiempo de ejecuci\u00c3\u00b3n"}, {"PERF_NEXT_RUN", "Pr\u00c3\u00b3ximo tiempo de ejecuci\u00c3\u00b3n"}, {"PERF_SUMMARIZER_STATISTICS", "Estado de res\u00c3\u00bamenes durante 7 d\u00c3\u00adas"}, {"PERF_SUMMARIZER_UTILIZATION", "Utilizaci\u00c3\u00b3n del proceso de res\u00c3\u00bamenes"}, {"PERF_TOTAL_RUN_TIME", "Tiempo de ejecuci\u00c3\u00b3n promedio por d\u00c3\u00ada"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "Capacidad estimada"}, {"PERF_METRIC_SYSLOG", "(mill\u00c3\u00b3n de registro del sistema/d\u00c3\u00ada)"}, {"PERF_METRIC_XML", "(archivos XML/d\u00c3\u00ada)"}, {"PERF_TOTAL_LOAD", "Carga promedio"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "Registro del sistema promedio resumido (mill\u00c3\u00b3n/d\u00c3\u00ada)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "Archivos XML promedio resumidos por d\u00c3\u00ada"}, {"PERF_NO_DATA_SUMMARIZED", "No se han resumido datos en los \u00c3\u00baltimos 7 d\u00c3\u00adas"}, {"PERF_REPORTING_INFO", "Detalles de informes"}, {"PERF_TOP_UNITS", "Principales dispositivos de utilizaci\u00c3\u00b3n de res\u00c3\u00bamenes"}, {"PERF_UNIT_NAME", "Dispositivo"}, {"PERF_REPORTING_DB_SIZE", "Tama\u00c3\u00b1o de la base de datos de informes"}, {"PERF_BACKUPS_DIR_SIZE", "Tama\u00c3\u00b1o del directorio de copia de seguridad"}, {"PERF_SYSLOG_DIR_SIZE", "Tama\u00c3\u00b1o del directorio de datos sin procesar"}, {"PERF_CACHE_SIZE", "Tama\u00c3\u00b1o de cach\u00c3\u00a9 estimado"}, {"PERF_BAD_DIR_SIZE", "Tama\u00c3\u00b1o de directorios de datos err\u00c3\u00b3neos"}, {"PERF_PER_SUMMARIZER_INFO", "Detalles para el proceso de res\u00c3\u00bamenes en "}, {"PERF_AVG_UTILIZATION", "Utilizaci\u00c3\u00b3n promedio del proceso de res\u00c3\u00bamenes"}, {"PERF_PEAK_UTILIZATION", "Utilizaci\u00c3\u00b3n m\u00c3\u00a1xima del proceso de res\u00c3\u00bamenes"}, {"NMM_DETAILS", "Registros del sistema recolectados para dispositivos que no se encuentran en gesti\u00c3\u00b3n e informes"}, {"NMM_SERIALS", "N\u00c3\u00bamero de serie de los dispositivos para el Summarizer en "}, {"NO_NMM_SERIAL", "Ninguno"}, {"MISCONFIGURED_SERIALS", "N\u00c3\u00bamero de serie de los dispositivos configurados incorrectamente "}, {"NO_MISCONFIGURED_SERIALS", "Ninguno "}, {"NMM_MSG_NOTE", "Nota: "}, {"NMM_MSG1", "* Inicie sesi\u00c3\u00b3n en el dispositivos y desactive los registros del sistema."}, {"NMM_MSG2", "* Si no tiene acceso al dispositivo, utilice las reglas de la pasarela para bloquear las series."}, {"NMM_MSG3", "* Para corregir las series configuradas incorrectamente, inicie sesi\u00c3\u00b3n en el dispositivo y modifique la configuraci\u00c3\u00b3n de GMS."}, {"NMM_MSG4", "* Los n\u00c3\u00bameros de serie que se incluyen aqu\u00c3\u00ad se actualizan cada 12 horas."}, {"PERF_SUMMARIZER_STATUS", "Estado"}, {"PERF_DEPLOYMENT_STATUS", "Estado de implementaci\u00c3\u00b3n"}, {"PERF_MSG_HIGH_CAPACITY", "La elaboraci\u00c3\u00b3n de informes est\u00c3\u00a1 funcionando a una capacidad muy alta; vuelva a asignar unidades."}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "Uno (o m\u00c3\u00a1s) de los Summarizers en la implementaci\u00c3\u00b3n ha superado su capacidad operativa en los \u00c3\u00baltimos 7 d\u00c3\u00adas. Revise la columna de estado de la secci\u00c3\u00b3n Uso de los Summarizers y visite el sitio de GMS para obtener m\u00c3\u00a1s informaci\u00c3\u00b3n sobre c\u00c3\u00b3mo administrar su implementaci\u00c3\u00b3n."}, {"PERF_MSG_REASSIGN_UNITS", "Vuelva a asignar unidades entre los agentes."}, {"PERF_MSG_DISK_LOW", "El espacio en disco es insuficiente, agregue discos adicionales o aumente la asignaci\u00c3\u00b3n de disco."}, {"PERF_MSG_DISK_LOW_RDB", "El espacio en disco es insuficiente para la base de datos de informes, agregue discos adicionales o aumente la asignaci\u00c3\u00b3n de disco."}, {"PERF_MSG_CAPACITY_PLANNING", "Para obtener m\u00c3\u00a1s informaci\u00c3\u00b3n sobre c\u00c3\u00b3mo gestionar su implementaci\u00c3\u00b3n, visite el <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>sitio web de GMS</a>."}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "Nota: La carga promedio y la capacidad estimada son espec\u00c3\u00adficas de la implementaci\u00c3\u00b3n y pueden variar entre los sistemas."}, {"PERF_OF", "de"}, {"PERF_ON_DISK", "en disco"}, {"PERF_OPT_EXPORT_PROGRESS", "Exportaci\u00c3\u00b3n en curso"}, {"PERF_OPT_EXPORT_DONE", "Exportaci\u00c3\u00b3n realizada"}, {"PERF_OPT_DELETE_PROGRESS", "Eliminaci\u00c3\u00b3n en curso"}, {"PERF_OPT_DELETE_DONE", "Eliminaci\u00c3\u00b3n realizada"}, {"PERF_OPT_IMPORT_PROGRESS", "Importaci\u00c3\u00b3n en curso"}, {"PERF_OPT_QUEUED_UP", "En cola"}, {"PERF_OPT_IDLE", "Inactivo"}, {"PERF_OPT_CURRENT", "Actual"}, {"PERF_OPT_INFO", "Informaci\u00c3\u00b3n de optimizaci\u00c3\u00b3n"}, {"PERF_XML_FILE_INFO", "Informaci\u00c3\u00b3n del archivo XML"}, {"PERF_XML_LABEL", "Archivos XML sin procesar"}, {"PERF_XPG_LABEL", "Archivos en proceso"}, {"PERF_XPD_LABEL", "Archivos guardados"}, {"PERF_XPE_LABEL", "Archivos no v\u00c3\u00a1lidos"}, {"ALERT_NO_ALERTS", "No hay alertas activas para esta secci\u00c3\u00b3n en este momento."}, {"ALERT_DESCRIPTION", "Descripci\u00c3\u00b3n"}, {"ALERT_NODE_NAME", "Nombre de la unidad"}, {"ALERT_SEVERITY", "Gravedad"}, {"ALERT_LISTING", "Lista de alertas"}, {"CAL_SUN", "Dom."}, {"CAL_MON", "Lun."}, {"CAL_TUE", "Mart."}, {"CAL_WED", "Mi\u00c3\u00a9rc."}, {"CAL_THU", "Juev."}, {"CAL_FRI", "Vier."}, {"CAL_SAT", "S\u00c3\u00a1b."}, {"CAL_JAN", "Enero"}, {"CAL_FEB", "Febrero"}, {"CAL_MAR", "Marzo"}, {"CAL_APR", "Abril"}, {"CAL_MAY", "Mayo"}, {"CAL_JUN", "Junio"}, {"CAL_JUL", "Julio"}, {"CAL_AUG", "Agosto"}, {"CAL_SEP", "Septiembre"}, {"CAL_OCT", "Octubre"}, {"CAL_NOV", "Noviembre"}, {"CAL_DEC", "Diciembre"}, {Integer.toString(1), "Ejecuci\u00c3\u00b3n satisfactoria de la tarea: "}, {Integer.toString(0), "Error al ejecutar la tarea."}, {Integer.toString(42), "La ejecuci\u00c3\u00b3n satisfactoria de la tarea mostr\u00c3\u00b3 ADVERTENCIAS: "}, {Integer.toString(10), "El comando se ejecut\u00c3\u00b3 correctamente."}, {Integer.toString(-12), "Error en forma parcial o completa de ejecuci\u00c3\u00b3n de comando."}, {Integer.toString(-57), "Privilegios de usuario insuficientes para realizar esta acci\u00c3\u00b3n."}, {Integer.toString(-58), "No hay informaci\u00c3\u00b3n para procesar el comando."}, {Integer.toString(-59), "La acci\u00c3\u00b3n no se puede realizar en cualquier momento."}, {Integer.toString(-56), "Solo los usuarios del grupo de administrador del dominio local tienen privilegios para ejecutar este comando."}, {Integer.toString(2), "Se verific\u00c3\u00b3 la existencia de nuevo firmware correctamente, pero no hab\u00c3\u00ada ning\u00c3\u00ban firmware nuevo disponible. "}, {Integer.toString(3), "La operaci\u00c3\u00b3n de compilaci\u00c3\u00b3n se ha realizado previamente con \u00c3\u00a9xito para la tarea: "}, {Integer.toString(4), "La operaci\u00c3\u00b3n de actualizaci\u00c3\u00b3n de la base de datos se realiz\u00c3\u00b3 con \u00c3\u00a9xito para la tarea: "}, {Integer.toString(5), "Hay unidades disponibles para la actualizaci\u00c3\u00b3n, as\u00c3\u00ad como para el registro"}, {Integer.toString(6), "No se aplic\u00c3\u00b3 en el dispositivo la versi\u00c3\u00b3n de prueba gratuita"}, {Integer.toString(7), "Unidades disponibles para actualizar y no para registro"}, {Integer.toString(8), "Unidades disponibles para registro y no para actualizar"}, {Integer.toString(-1), "Algunos par\u00c3\u00a1metros del dispositivo no se configuraron correctamente."}, {Integer.toString(-53), "El dispositivo no admite inicios de sesi\u00c3\u00b3n simult\u00c3\u00a1neos de administradores."}, {Integer.toString(-63), "Falta de credenciales del dispositivo para iniciar sesi\u00c3\u00b3n."}, {Integer.toString(-69), "Esperando obtener direcci\u00c3\u00b3n IP de inicio de sesi\u00c3\u00b3n actual."}, {Integer.toString(-70), "JVM OOM: No hay memoria disponible suficiente para continuar; la tarea se reintentar\u00c3\u00a1 en la pr\u00c3\u00b3xima ejecuci\u00c3\u00b3n"}, {Integer.toString(-64), "No se puede obtener la p\u00c3\u00a1gina de autenticaci\u00c3\u00b3n del dispositivo administrado para iniciar sesi\u00c3\u00b3n."}, {Integer.toString(-64) + "_TT", "- No se puede acceder a la unidad en la direcci\u00c3\u00b3n gestionada.\n- La unidad no admite el inicio de sesi\u00c3\u00b3n simult\u00c3\u00a1neo;\n comprobar que el navegador est\u00c3\u00a9 directamente conectado a la unidad."}, {Integer.toString(-65), "No hay respuesta para el env\u00c3\u00ado de inicio de sesi\u00c3\u00b3n."}, {Integer.toString(-83), "Error de inicio de sesi\u00c3\u00b3n, ya que no concuerdan los n\u00c3\u00bameros de serie."}, {Integer.toString(-83) + "_TT", "- El n\u00c3\u00bamero de serie especificado al agregar la unidad al GMS\n no concuerda con el de la unidad."}, {Integer.toString(-84), "Se produjo un error al iniciar sesi\u00c3\u00b3n debido a que el modo de inicio de sesi\u00c3\u00b3n especificado no es v\u00c3\u00a1lido."}, {Integer.toString(-84) + "_TT", "- El modo de inicio de sesi\u00c3\u00b3n especificado no pertenece a la lista\n de modos permitidos."}, {Integer.toString(-2), "El nombre de usuario o la contrase\u00c3\u00b1a del dispositivo eran incorrectos."}, {Integer.toString(-918), "[ES]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "La unidad usa un certificado SSL que tiene una firma MD5, la cual ya no es compatible por razones de seguridad. Vuelva a generar el certificado para administrar esta unidad."}, {Integer.toString(-917), "La unidad no tiene licencia para ejecutar esta tarea."}, {Integer.toString(-71), "URL de acceso a la unidad no v\u00c3\u00a1lido."}, {Integer.toString(-71) + "_TT", "- Es posible que no se haya obtenido la direcci\u00c3\u00b3n IP de la unidad."}, {Integer.toString(-72), "Error en la solicitud del estado xml."}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "Error en la solicitud del estado xml; no hubo respuesta."}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "Error al solicitar archivos de preferencia."}, {Integer.toString(-950), "[ES] Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "Error en la solicitud de archivos de preferencia; no hubo respuesta."}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "Archivo de preferencia no v\u00c3\u00a1lido."}, {Integer.toString(-76) + "_TT", "- No se recibi\u00c3\u00b3 ning\u00c3\u00ban archivo de preferencia.\n- El archivo de preferencia obtenido podr\u00c3\u00ada estar da\u00c3\u00b1ado.\n- El archivo de preferencia podr\u00c3\u00ada estar incompleto."}, {Integer.toString(-77), "Error en la obtenci\u00c3\u00b3n de la unidad."}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "Mensaje de latido recibido."}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "No se recibi\u00c3\u00b3 mensaje de latido."}, {Integer.toString(-78) + "_TT", "- El mensaje de latido no se envi\u00c3\u00b3 desde la unidad.\n- El mensaje de latido enviado desde la unidad no puede llegar a GMS.\n- El SA (t\u00c3\u00banel) no est\u00c3\u00a1 creado en la pasarela GMS.\n- La regla para permitir el registro del sistema no est\u00c3\u00a1 creada en la pasarela GMS.\n- Para las unidades de instancia, siga las instrucciones que se describen en la secci\u00c3\u00b3n Nota: de las implementaciones distribuidas de servicios web de consola."}, {Integer.toString(-79), "Los mensajes de latido recibidos no se pudieron descifrar."}, {Integer.toString(-79) + "_TT", "- La contrase\u00c3\u00b1a especificada al agregar la unidad al GMS\n no concuerda con la de la unidad."}, {Integer.toString(13), "Mensaje de registro de sistema recibido."}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "No se recibi\u00c3\u00b3 mensaje de registro de sistema."}, {Integer.toString(-81) + "_TT", "- El mensaje del registro del sistema no se envi\u00c3\u00b3 desde la unidad.D138- El mensaje del registro del sistema enviado desde la unidad no puede llegar a GMS.\n- El SA (t\u00c3\u00banel) no est\u00c3\u00a1 creado en la pasarela GMS.\n- La regla para permitir el registro del sistema no est\u00c3\u00a1 creada en la pasarela GMS."}, {Integer.toString(-82), "Los mensajes de registro de sistema recibidos no se pudieron descifrar."}, {Integer.toString(-82) + "_TT", "- La contrase\u00c3\u00b1a especificada al agregar la unidad al GMS\n no concuerda con la de la unidad."}, {Integer.toString(12), "Unidad agregada; esperando ser adquirida."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "Unidad modificada; esperando ser adquirida."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "No se pudo acceder a la unidad. La unidad o la red pueden estar inactivas."}, {Integer.toString(-4), "Al menos un par\u00c3\u00a1metro de la configuraci\u00c3\u00b3n del dispositivo es incorrecto."}, {Integer.toString(-5), "No se pudo acceder al sitio web de registro de SonicWall."}, {Integer.toString(-6), "El c\u00c3\u00b3digo de activaci\u00c3\u00b3n para la actualizaci\u00c3\u00b3n/suscripci\u00c3\u00b3n no es v\u00c3\u00a1lido."}, {Integer.toString(-7), "El dispositivo no est\u00c3\u00a1 registrado."}, {Integer.toString(-8), "El sitio de registro de SonicWall GMS no funciona o no se pudo obtener acceso. Compruebe el acceso a Internet de los servidores de SonicWall GMS."}, {Integer.toString(-9), "No hay unidades disponibles para la actualizaci\u00c3\u00b3n."}, {Integer.toString(-10), "Se est\u00c3\u00a1 intentando agregar un dispositivo que ya se encuentra en la gesti\u00c3\u00b3n de SonicWall GMS."}, {Integer.toString(-11), "Intentando configurar un dispositivo no v\u00c3\u00a1lido."}, {Integer.toString(-15), "Intentando crear una regla para un servicio inexistente."}, {Integer.toString(-16), "Infracci\u00c3\u00b3n de licencia de SonicWall."}, {Integer.toString(-17), "Error interno de SonicWall GMS."}, {Integer.toString(-18), "Error al descargar la lista de filtro de contenido."}, {Integer.toString(-19), "Intento de eliminar un servicio para el cual existe una regla."}, {Integer.toString(-47), "El servidor AV no pudo ser contactado"}, {Integer.toString(-20), "Error de AV interno"}, {Integer.toString(-21), "Tarea de AV pendiente"}, {Integer.toString(-22), "El c\u00c3\u00b3digo de activaci\u00c3\u00b3n de AV no es v\u00c3\u00a1lido."}, {Integer.toString(-23), "El c\u00c3\u00b3digo de activaci\u00c3\u00b3n de AV ya est\u00c3\u00a1 en uso."}, {Integer.toString(-24), "La contrase\u00c3\u00b1a de AV es incorrecta."}, {Integer.toString(-25), "Error en el recuento de renovaci\u00c3\u00b3n de AV."}, {Integer.toString(-26), "Renovaci\u00c3\u00b3n de AV demasiado temprana."}, {Integer.toString(-27), "Intento de administrar un dispositivo m\u00c3\u00a1s antiguo de lo recomendado."}, {Integer.toString(-28), "El servidor de actualizaci\u00c3\u00b3n autom\u00c3\u00a1tica est\u00c3\u00a1 actualmente inactivo o no pudo ser contactado."}, {Integer.toString(-85), "Se produjo un error al administrar la copia de seguridad del sistema."}, {Integer.toString(-29), "El firmware no se pudo cargar en el dispositivo."}, {Integer.toString(-62), "Se intent\u00c3\u00b3 cargar un firmware no v\u00c3\u00a1lido en el dispositivo."}, {Integer.toString(-60), "El tama\u00c3\u00b1o m\u00c3\u00a1ximo del archivo para una actualizaci\u00c3\u00b3n de firmware es de 4\u00c2\u00a0MB."}, {Integer.toString(-31), "Error al escribir el firmware en el disco local."}, {Integer.toString(-30), "Error al descargar el firmware. El servidor de actualizaci\u00c3\u00b3n autom\u00c3\u00a1tica no est\u00c3\u00a1 actualmente disponible o no pudo ser contactado."}, {Integer.toString(-32), "Error en el acceso a la base de datos."}, {Integer.toString(-33), "Error al configurar el dispositivo."}, {Integer.toString(-34), "Error al autenticar al usuario."}, {Integer.toString(-68), "No se encontr\u00c3\u00b3 el dominio, o el nombre de dominio no es v\u00c3\u00a1lido."}, {Integer.toString(-35), "Error al actualizar la contrase\u00c3\u00b1a CMP."}, {Integer.toString(-36), "No hay unidades disponibles para registro."}, {Integer.toString(-37), "No se pudo contactar ning\u00c3\u00ban servidor antivirus, o el servidor antivirus inform\u00c3\u00b3 de un error desconocido."}, {Integer.toString(-38), "No hay unidades disponibles para registro o actualizaci\u00c3\u00b3n."}, {Integer.toString(-39), "Hubo un problema al agregar un c\u00c3\u00b3digo de activaci\u00c3\u00b3n a la base de datos."}, {Integer.toString(-40), "Error al eliminar el c\u00c3\u00b3digo de activaci\u00c3\u00b3n. No existe dicho c\u00c3\u00b3digo de activaci\u00c3\u00b3n en la base de datos."}, {Integer.toString(-41), "Error desconocido al eliminar el c\u00c3\u00b3digo de activaci\u00c3\u00b3n."}, {Integer.toString(-48), "Error en la actualizaci\u00c3\u00b3n"}, {Integer.toString(-49), "Acceso denegado para ejecutar comandos CLI."}, {Integer.toString(-42), "La base de datos no se pudo actualizar correctamente."}, {Integer.toString(-43), "No se pudo enviar un correo electr\u00c3\u00b3nico a una o m\u00c3\u00a1s direcciones."}, {Integer.toString(-44), "El informe del soporte t\u00c3\u00a9cnico no se pudo recuperar desde el dispositivo."}, {Integer.toString(-45), "El archivo SPD no se pudo recuperar desde el dispositivo."}, {Integer.toString(-46), "El archivo del certificado no se pudo recuperar desde el dispositivo."}, {Integer.toString(-50), "No se pudo sincronizar la informaci\u00c3\u00b3n de supervisi\u00c3\u00b3n del estado del t\u00c3\u00banel."}, {Integer.toString(-51), "El archivo RCF no se pudo recuperar desde el dispositivo."}, {Integer.toString(-52), "La cuenta del usuario est\u00c3\u00a1 desactivada; no se pudo iniciar sesi\u00c3\u00b3n."}, {Integer.toString(-61), "La tarea ejecutada anteriormente necesit\u00c3\u00b3 que se reiniciara el equipo; se volver\u00c3\u00a1 a intentar la tarea en el siguiente intervalo."}, {Integer.toString(-229), "Para activar este servicio, debe tener una suscripci\u00c3\u00b3n v\u00c3\u00a1lida a la Protecci\u00c3\u00b3n de correo electr\u00c3\u00b3nico."}, {Integer.toString(-230), "Su versi\u00c3\u00b3n de Sonic OS no admite la agrupaci\u00c3\u00b3n (suscripci\u00c3\u00b3n de m\u00c3\u00baltiples nodos). Actualice el sistema operativo o use una clave correspondiente a un solo nodo."}, {Integer.toString(-231), "No puede combinar claves de activaci\u00c3\u00b3n de diferentes modelos de WANOPT."}, {Integer.toString(-232), "Su versi\u00c3\u00b3n de WANOPT no admite la agrupaci\u00c3\u00b3n (suscripci\u00c3\u00b3n de m\u00c3\u00baltiples nodos)."}, {Integer.toString(-201), "Error con los par\u00c3\u00a1metros del API."}, {Integer.toString(-202), "El usuario ya ha iniciado sesi\u00c3\u00b3n."}, {Integer.toString(-203), "La API de SonicWall GMS no est\u00c3\u00a1 implementada en esta versi\u00c3\u00b3n."}, {Integer.toString(-204), "La sesi\u00c3\u00b3n no existe."}, {Integer.toString(-205), "Saliendo del shell de SonicWall GMS"}, {Integer.toString(-206), "Faltan par\u00c3\u00a1metros de la API"}, {Integer.toString(-207), "No hay filas para esta categor\u00c3\u00ada"}, {Integer.toString(-208), "No se proporcionaron c\u00c3\u00b3digos de activaci\u00c3\u00b3n"}, {Integer.toString(-209), "No se especific\u00c3\u00b3 el tipo de activaci\u00c3\u00b3n"}, {Integer.toString(-210), "La direcci\u00c3\u00b3n IP no es v\u00c3\u00a1lida; no se agreg\u00c3\u00b3 la unidad."}, {Integer.toString(-211), "La longitud dada es menor que la requerida; la unidad no se ha agregado."}, {Integer.toString(-212), "La cadena puede contener solo caracteres hexadecimales; la unidad no se ha agregado."}, {Integer.toString(-213), "La direcci\u00c3\u00b3n IP del programador en espera no puede ser la misma que la del programador principal; la unidad no se ha agregado."}, {Integer.toString(-214), "No se ha encontrado programador en la direcci\u00c3\u00b3n IP especificada; la unidad no se ha agregado."}, {Integer.toString(-215), "Error al agregar la unidad."}, {Integer.toString(-226), "No tiene una licencia v\u00c3\u00a1lida."}, {Integer.toString(-225), "Hubo un error al analizar el XML de entrada"}, {Integer.toString(-228), "Se encontr\u00c3\u00b3 contenido no v\u00c3\u00a1lido en el archivo XML de entrada."}, {Integer.toString(-216), "Tipo de informe no v\u00c3\u00a1lido o desconocido. No se sabe si es un informe diario, semanal o mensual"}, {Integer.toString(-217), "La direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico de destino no es v\u00c3\u00a1lida. Debe proporcionarse al menos una direcci\u00c3\u00b3n de destino v\u00c3\u00a1lida"}, {Integer.toString(-218), "La direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico de origen no es v\u00c3\u00a1lida"}, {Integer.toString(-219), "Direcci\u00c3\u00b3n de servidor SMTP no v\u00c3\u00a1lida"}, {Integer.toString(-220), "Lista de informes no v\u00c3\u00a1lida. Debe proporcionarse al menos un ID de informe v\u00c3\u00a1lido"}, {Integer.toString(-221), "La direcci\u00c3\u00b3n IP del programador del analizador registrada en la base de datos no es v\u00c3\u00a1lida"}, {Integer.toString(-222), "El n\u00c3\u00bamero de puerto del programador del analizador registrado en la base de datos no es v\u00c3\u00a1lido"}, {Integer.toString(-223), "Fecha de informe no v\u00c3\u00a1lida o desconocida. La fecha del informe debe proporcionarse en el formato mm/dd/aaaa"}, {Integer.toString(-224), "El ID del programa proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-502), "Falta la contrase\u00c3\u00b1a para la protecci\u00c3\u00b3n de la contrase\u00c3\u00b1a del archivo zip"}, {Integer.toString(-503), "Nodo proporcionado no v\u00c3\u00a1lido. Debe especificarse el n\u00c3\u00bamero de serie (para unitNode) o el nombre mostrado (para groupNode)."}, {Integer.toString(-10001), "Hubo un error de comunicaci\u00c3\u00b3n"}, {Integer.toString(-10002), "Hubo un error al analizar el XML de entrada"}, {Integer.toString(-10005), "Componente desconocido invocado"}, {Integer.toString(-10006), "Se invoc\u00c3\u00b3 un m\u00c3\u00a9todo de AV desconocido"}, {Integer.toString(-10011), "Hubo un intento de actualizar el AV despu\u00c3\u00a9s de su caducidad."}, {Integer.toString(-10012), "Hubo un intento de actualizar el AV para un dispositivo que no est\u00c3\u00a1 registrado."}, {Integer.toString(-10013), "Hubo un intento de renovar el AV para menos nodos de los que actualmente admite."}, {Integer.toString(-10014), "Hubo un intento de actualizar el AV demasiado pronto."}, {Integer.toString(-10020), "Est\u00c3\u00a1 pendiente una tarea previa para cambiar la contrase\u00c3\u00b1a del AV."}, {Integer.toString(-10100), "Hubo un error al comunicarse con el servidor McAfee"}, {Integer.toString(-10101), "McAfee no pudo encontrar ning\u00c3\u00ban registro para este sitio."}, {Integer.toString(-10102), "McAfee no pudo coincidir con la contrase\u00c3\u00b1a anterior para este sitio."}, {Integer.toString(-10103), "El sitio de AV ya est\u00c3\u00a1 registrado."}, {Integer.toString(-10200), "Hubo un error al comunicarse con el servidor de base de datos de AV"}, {Integer.toString(-10201), "El n\u00c3\u00bamero de serie del dispositivo ya est\u00c3\u00a1 registrado"}, {Integer.toString(-10202), "La clave de licencia proporcionada ya est\u00c3\u00a1 en uso"}, {Integer.toString(-10203), "El antivirus nunca fue registrado para este dispositivo"}, {Integer.toString(-10204), "Las claves m\u00c3\u00baltiples proporcionadas deben tener el mismo per\u00c3\u00adodo"}, {Integer.toString(-10205), "La clave de prueba gratuita no est\u00c3\u00a1 permitida para la actualizaci\u00c3\u00b3n"}, {Integer.toString(-10206), "Valor ilegal proporcionado por uno o m\u00c3\u00a1s par\u00c3\u00a1metros"}, {Integer.toString(-10210), "El n\u00c3\u00bamero de serie proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-10211), "La clave de licencia proporcionada ya est\u00c3\u00a1 registrada"}, {Integer.toString(-10212), "La nueva contrase\u00c3\u00b1a proporcionada tiene caracteres no v\u00c3\u00a1lidos o no es de 6 a 12 caracteres de longitud"}, {Integer.toString(-10213), "La contrase\u00c3\u00b1a del antivirus proporcionada no es v\u00c3\u00a1lida"}, {Integer.toString(-10214), "El c\u00c3\u00b3digo OEM proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-10215), "La direcci\u00c3\u00b3n IP de WAN proporcionada no es v\u00c3\u00a1lida"}, {Integer.toString(-10220), "A\u00c3\u00ban est\u00c3\u00a1 pendiente una solicitud previa para este dispositivo"}, {Integer.toString(-10250), "El dispositivo ya est\u00c3\u00a1 registrado para el AV y hay que reactivarlo."}, {Integer.toString(-10251), "El dispositivo no se puede reactivar porque la contrase\u00c3\u00b1a no es v\u00c3\u00a1lida"}, {Integer.toString(-10260), "El n\u00c3\u00bamero de serie del grupo de licencia compartida que se proporcion\u00c3\u00b3 no pudo encontrarse"}, {Integer.toString(-10261), "El n\u00c3\u00bamero de serie del grupo de compartici\u00c3\u00b3n de licencia proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-10262), "El dispositivo no es miembro de ning\u00c3\u00ban grupo de compartici\u00c3\u00b3n de licencia"}, {Integer.toString(-10263), "El dispositivo ya tiene una suscripci\u00c3\u00b3n antivirus activa y no puede adherirse a un grupo de compartici\u00c3\u00b3n de licencia"}, {Integer.toString(-10264), "El dispositivo no es miembro de este grupo de compartici\u00c3\u00b3n de licencia"}, {Integer.toString(-10265), "El propietario del grupo de compartici\u00c3\u00b3n de licencia no puede ser eliminado"}, {Integer.toString(-10266), "El dispositivo ya es miembro de otro grupo de compartici\u00c3\u00b3n de licencia"}, {Integer.toString(-10267), "La nueva cantidad de licencias proporcionada excede el n\u00c3\u00bamero de licencias disponibles del grupo de compartici\u00c3\u00b3n de licencias"}, {Integer.toString(-10004), "No se encuentran uno o m\u00c3\u00a1s par\u00c3\u00a1metros para la operaci\u00c3\u00b3n del antivirus"}, {Integer.toString(-10300), "No se pudo encontrar informaci\u00c3\u00b3n sobre Total Secure Partner (socio seguro total)"}, {Integer.toString(-10301), "Se proporcion\u00c3\u00b3 una contrase\u00c3\u00b1a incorrecta de Total Secure Partner"}, {Integer.toString(-10303), "El n\u00c3\u00bamero de licencias antivirus proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-10304), "Hubo un intento de administrar un dispositivo que no est\u00c3\u00a1 asignado a Total Secure Partner"}, {Integer.toString(-20000), "Error desconocido al comunicarse con el servidor de registro de compilaci\u00c3\u00b3n"}, {Integer.toString(-20101), "El contacto solicitado ya est\u00c3\u00a1 registrado para el usuario."}, {Integer.toString(-20102), "El contacto solicitado no se pudo agregar para el usuario."}, {Integer.toString(-20106), "No se puede modificar, ya que no se encontr\u00c3\u00b3 la informaci\u00c3\u00b3n del usuario."}, {Integer.toString(-20111), "No se encontr\u00c3\u00b3 la informaci\u00c3\u00b3n del contacto."}, {Integer.toString(-20112), "La informaci\u00c3\u00b3n del contacto no se pudo modificar."}, {Integer.toString(-20113), "La informaci\u00c3\u00b3n del contacto no se pudo eliminar."}, {Integer.toString(-20116), "El dispositivo ya est\u00c3\u00a1 registrado en una cuenta diferente de MySonicWall.com."}, {Integer.toString(-20117), "El dispositivo especificado no se encontr\u00c3\u00b3 en el sistema de registro del dispositivo."}, {Integer.toString(-20118), "El sistema de registro del servidor no pudo registrar el dispositivo."}, {Integer.toString(-20119), "No se ha podido recuperar el estado del dispositivo especificado."}, {Integer.toString(-20121), "El dispositivo especificado no est\u00c3\u00a1 registrado."}, {Integer.toString(-20122), "La llave de activaci\u00c3\u00b3n especificada ya se ha utilizado."}, {Integer.toString(-20123), "Se ha utilizado un c\u00c3\u00b3digo no v\u00c3\u00a1lido de activaci\u00c3\u00b3n."}, {Integer.toString(-20124), "Se ha utilizado una combinaci\u00c3\u00b3n de c\u00c3\u00b3digo de activaci\u00c3\u00b3n/dispositivo no v\u00c3\u00a1lida."}, {Integer.toString(-20125), "El sistema de registro del servidor no complet\u00c3\u00b3 la actualizaci\u00c3\u00b3n."}, {Integer.toString(-20126), "El sistema de registro del servidor no complet\u00c3\u00b3 la activaci\u00c3\u00b3n."}, {Integer.toString(-20131), "Se produjo un error al registrar la direcci\u00c3\u00b3n MAC incorrecta del sistema SonicWall GMS."}, {Integer.toString(-20132), "El sistema SonicWall GMS no est\u00c3\u00a1 registrado."}, {Integer.toString(-20133), "El n\u00c3\u00bamero de serie de SonicWall GMS especificado no es v\u00c3\u00a1lido."}, {Integer.toString(-20134), "El sistema de registro de servidores no pudo recuperar el estado de SonicWall GMS."}, {Integer.toString(-20135), "SonicWall GMS ya est\u00c3\u00a1 registrado."}, {Integer.toString(-20136), "El sistema de registro de servidores no pudo registrar su sistema SonicWall GMS."}, {Integer.toString(-20142), "La direcci\u00c3\u00b3n mac err\u00c3\u00b3nea ya est\u00c3\u00a1 registrada."}, {Integer.toString(-20143), "El sistema de registro de servidores no pudo recuperar las actualizaciones disponibles para SonicWall GMS."}, {Integer.toString(-20144), "No se especific\u00c3\u00b3 una duraci\u00c3\u00b3n del paquete b\u00c3\u00a1sico."}, {Integer.toString(-20145), "Hubo un error al leer la informaci\u00c3\u00b3n del sistema del paquete b\u00c3\u00a1sico en el sistema de registro del servidor."}, {Integer.toString(-20146), "La actualizaci\u00c3\u00b3n del nodo no est\u00c3\u00a1 disponible para este producto."}, {Integer.toString(-20147), "Su instalaci\u00c3\u00b3n de SonicWall GMS ya es una versi\u00c3\u00b3n minorista."}, {Integer.toString(-20148), "El dispositivo no est\u00c3\u00a1 registrado."}, {Integer.toString(-20149), "Se produjo un error al recuperar informaci\u00c3\u00b3n acerca del sistema SonicWall GMS en el sistema de registro de servidores."}, {Integer.toString(-20150), "El n\u00c3\u00bamero de serie de SonicWall GMS especificado no est\u00c3\u00a1 registrado para el usuario."}, {Integer.toString(-20151), "Error al insertar la informaci\u00c3\u00b3n de elaboraci\u00c3\u00b3n de informes en el sistema de registro del servidor."}, {Integer.toString(-20152), "Combinaci\u00c3\u00b3n de n\u00c3\u00bamero de serie y nombre de usuario de SonicWall GMS no v\u00c3\u00a1lida."}, {Integer.toString(-20153), "Se produjo un error en el sistema de registro de servidores al actualizar SonicWall GMS para la integraci\u00c3\u00b3n con ViewPoint."}, {Integer.toString(-20154), "O bien el dispositivo no est\u00c3\u00a1 registrado, o se especific\u00c3\u00b3 un nombre de usuario no v\u00c3\u00a1lido."}, {Integer.toString(-20155), "O bien el contrato de base para este servicio no est\u00c3\u00a1 activado, o ha caducado."}, {Integer.toString(-20201), "Error interno: El XML de entrada al sistema del servidor no era v\u00c3\u00a1lido."}, {Integer.toString(-20202), "Error interno: No se especifica nombre de usuario en la entrada."}, {Integer.toString(-20203), "La contrase\u00c3\u00b1a especificada para la interfaz del sistema de registro de SonicWall GMS no es v\u00c3\u00a1lida."}, {Integer.toString(-20204), "Error interno: M\u00c3\u00a9todo solicitado no v\u00c3\u00a1lido para el sistema de registro del servidor."}, {Integer.toString(-20205), "Error interno: Versi\u00c3\u00b3n XML solicitada no v\u00c3\u00a1lida para el sistema de registro del servidor."}, {Integer.toString(-20401), "Error interno: Ha habido un error de base de datos en el sistema de registro del servidor."}, {Integer.toString(-20402), "Error interno: Ha habido un error de registro en el sistema de registro del servidor."}, {Integer.toString(-20403), "Error interno: Ha habido un error de componente en el sistema de registro del servidor."}, {Integer.toString(-20404), "Error interno: Ha habido un error de procedimiento en el sistema de registro del servidor."}, {Integer.toString(-20140), "No se encontr\u00c3\u00b3 informaci\u00c3\u00b3n de PKI para el dispositivo espec\u00c3\u00adfico en el sistema de registro del servidor."}, {Integer.toString(-20141), "El servicio de PKI no se ha activado para el dispositivo espec\u00c3\u00adfico."}, {Integer.toString(-227), "No hay suficiente memoria para cargar el archivo. Cargue un archivo de menor tama\u00c3\u00b1o."}, {Integer.toString(-66), "Se intent\u00c3\u00b3 cargar un archivo de firmas no v\u00c3\u00a1lido en el dispositivo."}, {Integer.toString(-67), "El archivo de firmas no pudo cargarse en el dispositivo. Compruebe si esta acci\u00c3\u00b3n es aplicable a este modelo o a esta versi\u00c3\u00b3n."}, {Integer.toString(-500), "Se recibi\u00c3\u00b3 un error de lm2.sonicwall.com."}, {Integer.toString(-501), "No se pudo obtener acceso al sitio web de lm2.sonicwall.com."}, {Integer.toString(-907), "La versi\u00c3\u00b3n de firmware en el dispositivo no es compatible."}, {Integer.toString(-901), "El ID de registro no es v\u00c3\u00a1lido o no existe."}, {Integer.toString(-902), "No se ha podido aplicar el registro adjunto de entidad."}, {Integer.toString(-903), "No se ha podido aplicar el registro."}, {Integer.toString(-904), "El id de la plantilla no es v\u00c3\u00a1lido o no existe."}, {Integer.toString(-905), "No se ha podido aplicar el registro."}, {Integer.toString(-906), "No se ha podido aplicar la plantilla."}, {Integer.toString(-908), "Tiempo de espera m\u00c3\u00a1ximo superado para la conexi\u00c3\u00b3n del dep\u00c3\u00b3sito."}, {Integer.toString(-909), "Tiempo de espera m\u00c3\u00a1ximo superado para la conexi\u00c3\u00b3n al host remoto."}, {Integer.toString(-910), "Los ajustes de configuraci\u00c3\u00b3n para este dispositivo no son correctos."}, {Integer.toString(-911), "Esperando para determinar los ajustes de configuraci\u00c3\u00b3n aplicables para este dispositivo."}, {Integer.toString(-912), "No se pudo encontrar el host de servicio web."}, {Integer.toString(-913), "No se pudo crear la conexi\u00c3\u00b3n de servicio web."}, {Integer.toString(-914), "Problema al acceder a datos o recursos a trav\u00c3\u00a9s del servicio web."}, {Integer.toString(-915), "No se ha podido realizar la autenticaci\u00c3\u00b3n con el servicio web."}, {Integer.toString(-800), "Este dispositivo no admite la generaci\u00c3\u00b3n de informes de flujo externo a GMS"}, {Integer.toString(-801), "Las configuraciones de la pasarela de reenv\u00c3\u00ado de flujo no son correctas"}, {Integer.toString(-802), "Este modelo no admite la generaci\u00c3\u00b3n de informes de flujo externo a GMS"}, {Integer.toString(-803), "Esta versi\u00c3\u00b3n de firmware no admite la generaci\u00c3\u00b3n de informes de flujo externo a GMS"}, {Integer.toString(-804), "Este dispositivo no tiene licencia para visualizar la aplicaci\u00c3\u00b3n"}, {Integer.toString(-805), "Espacio de almacenamiento insuficiente para asignar agente de flujo"}, {Integer.toString(-806), "Memoria de tiempo de ejecuci\u00c3\u00b3n insuficiente para asignar agente de flujo"}, {Integer.toString(-807), "No se pudo registrar agente de flujo\u00c2\u00a01"}, {Integer.toString(-808), "No se pudo registrar agente de flujo\u00c2\u00a02"}, {Integer.toString(-809), "No se pudieron registrar agentes de flujo\u00c2\u00a01 ni 2"}, {Integer.toString(-810), "No se pudieron registrar agente de flujo\u00c2\u00a01 ni reenv\u00c3\u00ado de flujo"}, {Integer.toString(-811), "No se pudieron registrar agentes de flujo\u00c2\u00a01, 2 ni reenv\u00c3\u00ado de flujo"}, {Integer.toString(-812), "No se pudieron registrar agente de flujo\u00c2\u00a02 ni reenv\u00c3\u00ado de flujo"}, {Integer.toString(-813), "No se pudo registrar reenv\u00c3\u00ado de flujo"}, {Integer.toString(-814), "El cortafuegos de la pasarela no est\u00c3\u00a1 disponible en GMS"}, {Integer.toString(-815), "Se produjo un error en la creaci\u00c3\u00b3n del t\u00c3\u00banel, del lado del cortafuegos de la pasarela"}, {Integer.toString(-816), "Se produjo un error en la creaci\u00c3\u00b3n del t\u00c3\u00banel del lado del dispositivo administrado"}, {Integer.toString(-817), "El dispositivo no tiene licencia para Cloud GMS Management and Reporting"}, {Integer.toString(-818), "Potencia de procesamiento insuficiente para asignar agente de flujo"}, {Integer.toString(-819), "Ancho de banda insuficiente para asignar agente de flujo"}, {Integer.toString(-820), "[ES]Failed to register to Flow Agent"}, {"EDIT_DOMAIN", "Editar dominio"}, {"VIEW_DOMAIN", "Ver detalles del dominio"}, {"ADD_DOMAIN", "Agregar dominio"}, {"SELECT_TO_DELETE", "Seleccione los dominios/servidores de aut. que se eliminar\u00c3\u00a1n."}, {"SELECT_AS_TO_DEL", "Seleccione los servidores de aut. que se eliminar\u00c3\u00a1n."}, {"DELETE_CONFIRMATION", "Ha seleccionado eliminar el dominio '"}, {"USER_DELETE_CONFIRMATION", "Todos los servidores de aut., usuarios, tipos de usuarios y sus configuraciones tambi\u00c3\u00a9n se eliminar\u00c3\u00a1n."}, {"USER_AS_DELETE_CONFIRMATION", "Todos los usuarios, tipos de usuarios y sus configuraciones tambi\u00c3\u00a9n se eliminar\u00c3\u00a1n."}, {"SURE_WANT_TO_CONTINUE", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea continuar?"}, {"MULTIPLE_DELETE_CONFIRMATION", "Ha seleccionado eliminar los siguientes dominios:"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "Ha seleccionado eliminar los siguientes servidores de aut.:"}, {"AND_AS_DELETE_CONFIRMATION", "y eliminar los siguientes servidores de aut.:"}, {"WANT_TO_CONTINUE", "\u00c2\u00bfDesea continuar?"}, {"DOMAIN", "Dominio"}, {"DOMAINS", "Dominios"}, {"SEARCH", "Buscar"}, {"NAME", "Nombre"}, {"DOMAIN_TYPE", "Tipo de dominio"}, {"DOMAIN_SETTINGS", "Configuraciones de dominio"}, {"ALIAS", "Alias"}, {"DISPLAY_DOMAIN", "Mostrar dominio en la pantalla de inicio de sesi\u00c3\u00b3n"}, {"SET_AS_DEFAULT", "Establecer como dominio predeterminado"}, {"HOST_NAME", "Nombre del host"}, {"HOST_TYPE", "Tipo de host"}, {"EQUALS", "Iguales"}, {"STARTS_WITH", "Comienza con"}, {"ENDS_WITH", "Termina con"}, {"CONTAINS", "Contiene"}, {"LOCAL", "Local"}, {"REMOTE", "Remoto"}, {"DOMAINS", "Dominios"}, {"SSL_USED", "SSL utilizado"}, {"CONFIGURE", "Configurar"}, {"NO_DOMAIN_FOUND", "No se encontraron dominios"}, {"NO_AS_FOUND", "No se encontraron servidores de aut."}, {"ADD_DOMAIN", "Agregar dominio"}, {"DELETE_DOMAINS", "Eliminar dominios/servidores de aut."}, {"DELETE_ASS", "Eliminar servidores de aut."}, {"EQUALS", "Iguales"}, {"STARTS_WITH", "Comienza con"}, {"ENDS_WITH", "Termina con"}, {"CONTAINS", "Contiene"}, {"LOCAL", "Local"}, {"REMOTE", "Remoto"}, {"REMOTE_DOMAIN", "Dominio remoto"}, {"ADMIN_PASSWORD", "Contrase\u00c3\u00b1a de administrador"}, {"DEFAULT_ADMIN_USER", "Usuario administrador predeterminado"}, {"AUTH_PORT", "Puerto de autenticaci\u00c3\u00b3n"}, {"ACCT_PORT", "Puerto de contabilidad"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "Nombre distinguido de base"}, {"SEARCH_FILTER", "Filtro de b\u00c3\u00basqueda"}, {"SHARED_SECRET", "Secreto compartido"}, {"USE_SSL", "Utilizar SSL"}, {"SSL_PORT", "Puerto SSL"}, {"ANONYMOUS_LOGIN", "Inicio de sesi\u00c3\u00b3n an\u00c3\u00b3nimo"}, {"LOGIN_USER_NAME", "Nombre distinguido de usuario de inicio de sesi\u00c3\u00b3n"}, {"DNAME_MSG", "Nombre distinguido utilizado para autenticar el servidor de directorio cuando se realiza un enlace. El valor de este campo debe ser especificado como un DN (nombre distinguido). Ejemplo: [uid=xyz,ou=People,dc=example,dc=com], [cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "Contrase\u00c3\u00b1a de inicio de sesi\u00c3\u00b3n"}, {"PROTOCOL_VERSION", "Versi\u00c3\u00b3n de protocolo"}, {"LDAPV2", "LDAP versi\u00c3\u00b3n 2"}, {"LDAPV3", "LDAP versi\u00c3\u00b3n 3"}, {"SETTINGS", "Configuraciones"}, {"USER_DIRECTORY_LDAP", "Esquema LDAP de directorio de usuario"}, {"LDAP_SCHEMA", "Esquema LDAP"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "Definido por el usuario"}, {"USER_OBJECTS", "Objetos Usuario"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "Atributo de nombre de inicio de sesi\u00c3\u00b3n"}, {"FIRST_NAME", "Atributo del primer nombre"}, {"LAST_NAME", "Atributo del apellido"}, {"EMAIL", "Atributo del correo electr\u00c3\u00b3nico"}, {"TELEPHONE", "Atributo del tel\u00c3\u00a9fono"}, {"CON_TIMEOUT", "Tiempo de espera de conexi\u00c3\u00b3n"}, {"SCHEMA", "Esquema"}, {"TEST_SETTINGS", "Configuraciones de prueba"}, {"TEST_RADIUS_SETTINGS", "Prueba de configuraci\u00c3\u00b3n de RADIUS"}, {"TEST_LDAP_MSG", "Para probar la configuraci\u00c3\u00b3n de LDAP, escriba un nombre de usuario y una contrase\u00c3\u00b1a LDAP"}, {"TEST_RADIUS_MSG", "Para probar la configuraci\u00c3\u00b3n de RADIUS, escriba un nombre de usuario y una contrase\u00c3\u00b1a RADIUS"}, {"TEST_MSG", "v\u00c3\u00a1lidos, y haga clic en el bot\u00c3\u00b3n Prueba. Tenga en cuenta que se aplicar\u00c3\u00a1n todos los cambios efectuados."}, {"USER", "Usuario"}, {"PWD", "Contrase\u00c3\u00b1a"}, {"RUN_CLIENT_TEST", "Ejecutar prueba de cliente"}, {"TEST_STATUS", "Estado de la prueba"}, {"RETURNED_USER_ATTRIBUTES", "Resultados de pruebas devueltos"}, {"TEST", "Prueba"}, {"OK", "ACEPTAR"}, {"CANCEL", "Cancelar"}, {"CLOSE", "Cerrar"}, {"CANT_DELETE_LOCALDOMAIN", "El dominio local no se puede editar/eliminar."}, {"CANT_EDIT", "No se puede editar si hay un \u00c3\u00banico dominio."}, {"EMPTY_NAME", "El nombre no puede estar vac\u00c3\u00ado"}, {"EMPTY_ADMIN_PWD", "La contrase\u00c3\u00b1a del administrador no puede estar vac\u00c3\u00ada"}, {"EMPTY_ADMIN_USER", "El usuario administrador predeterminado no puede estar vac\u00c3\u00ado"}, {"EMPTY_AUTH_PORT", "El puerto de autenticaci\u00c3\u00b3n no puede estar vac\u00c3\u00ado"}, {"POSITIVE_AUTH_PORT", "El puerto de autenticaci\u00c3\u00b3n debe ser un n\u00c3\u00bamero positivo"}, {"AUTH_PORT_RANGE", "El puerto de autenticaci\u00c3\u00b3n debe estar en el rango 0-65535"}, {"EMPTY_ACCT_PORT", "El puerto de contabilidad no puede estar vac\u00c3\u00ado"}, {"POSITIVE_ACCT_PORT", "El puerto de contabilidad debe ser un n\u00c3\u00bamero positivo"}, {"EMPTY_BD_NAME", "El nombre distinguido de base no puede estar vac\u00c3\u00ado"}, {"EMPTY_SEARCH_FILTER", "El filtro de b\u00c3\u00basqueda no puede estar vac\u00c3\u00ado"}, {"EMPTY_SHRED_SECRET", "Secreto compartido no puede estar vac\u00c3\u00ado"}, {"EMPTY_SSL_PORT", "El puerto SSL no puede estar vac\u00c3\u00ado"}, {"POSITIVE_SSL_PORT", "El puerto SSL debe ser un n\u00c3\u00bamero positivo"}, {"SSL_PORT_RANGE", "El puerto SSL debe estar en el rango 0-65535"}, {"EMPTY_LOGIN", "El nombre distinguido del usuario de inicio de sesi\u00c3\u00b3n no puede estar vac\u00c3\u00ado"}, {"EMPTY_LOGIN_PWD", "La contrase\u00c3\u00b1a de inicio de sesi\u00c3\u00b3n no puede estar vac\u00c3\u00ada"}, {"EMPTY_CON_TIMEOUT", "El tiempo de espera de conexi\u00c3\u00b3n no puede estar vac\u00c3\u00ado"}, {"POSITIVE_CON_TIMEOUT", "El tiempo de espera de conexi\u00c3\u00b3n debe ser un n\u00c3\u00bamero positivo"}, {"RECOMMEND_SSL", "Se recomienda usar SSL para asegurar la comunicaci\u00c3\u00b3n con el servidor remoto."}, {"CON_NOT_SECURE", "Su conexi\u00c3\u00b3n no ser\u00c3\u00a1 segura si no utiliza SSL."}, {"DOMAIN_EXISTS", "Ya existe un dominio con este nombre"}, {"ALIAS_EXISTS", "Ya existe un alias con este nombre"}, {"DOMAIN_INVALID", "Nombre de dominio especificado no v\u00c3\u00a1lido."}, {"DOMAIN_VALID_CHARS", "El nombre puede contener solamente los siguientes caracteres:"}, {"DOMAIN_VALID_CHARS_LIST", "Alfanum\u00c3\u00a9rico, .\u00c2\u00a0(punto), -\u00c2\u00a0(guion), _\u00c2\u00a0(subrayado) y espacio."}, {"SPECIFY_VALID_NAME", "Especifique un nombre con los caracteres permitidos."}, {"DIR_GRP_SETTINGS", "Configuraciones de grupo de Active Directory"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "Permitir solo miembros del grupo de AD"}, {"DIR_GROUPS", "Grupos de Active Directory"}, {"GRP_NAME_INVALID", "Nombre(s) del grupo no v\u00c3\u00a1lido especificado(s)."}, {"GRP_NAME_INVALID_LENGTH", "Los nombres del grupo no pueden tener m\u00c3\u00a1s de 200 caracteres."}, {"AUTH_SERVER_NAME", "Nombre del servidor de aut."}, {"ADD_AUTH_SERVER", "Agregar un servidor de aut."}, {"ADD_AUTHSERVER", "Agregar servidor de aut."}, {"EDIT_AUTHSERVER", "Editar servidor de aut."}, {"DELETE_DOMAIN", "Eliminar este dominio"}, {"CANT_DELETE_LOCAL_AS", "El servidor de aut. local no se puede editar/eliminar"}, {"CANT_DELETE_ADMIN_AS", "Este servidor de aut. no se puede eliminar, dado que el administrador predeterminado para este dominio est\u00c3\u00a1 autenticado contra este servidor. \nMueva este administrador predeterminado a otro servidor de aut. e intente de nuevo."}, {"EDIT_AUTH_SERVER", "Editar este servidor de aut."}, {"VIEW_AUTH_SERVER", "Mostrar detalles del servidor de aut."}, {"DELETE_AUTH_SERVER", "Eliminar este servidor de aut."}, {"AS_INVALID", "Servidor de aut. no v\u00c3\u00a1lido especificado."}, {"AS_EXISTS", "Ya existe un servidor de aut. con este nombre"}, {"EMPTY_AS_NAME", "El nombre del servidor de aut. no puede estar vac\u00c3\u00ado"}, {"AS_NAME_MSG", "El nombre del servidor de aut. que podr\u00c3\u00a1 crearse. Este nombre es \u00c3\u00batil para administrar los diferentes servidores de autenticaci\u00c3\u00b3n en un dominio."}, {"AS_DELETE_CONFIRMATION", "Ha seleccionado eliminar el servidor de aut. '"}, {"PRI_RADIUS", "Servidor RADIUS principal"}, {"AUTH_PROTOCOL", "Protocolo de autenticaci\u00c3\u00b3n"}, {"RADIUS_TIMEOUT", "Tiempo de espera de RADIUS (segundos)"}, {"MAX_RETRIES", "Cantidad m\u00c3\u00a1xima de intentos"}, {"BACK_RADIUS", "Servidor RADIUS de reserva"}, {"RADIUS_USER_GROUP", "Configuraciones del grupo de usuario RADIUS"}, {"ALLOW_GROUP_MEMBERS", "Permitir solamente grupo RADIUS\tMiembros"}, {"USE_SW_VSA", "Usar atributo espec\u00c3\u00adfico de proveedor de SonicWall en servidor RADIUS"}, {"USE_FILTER_ID", "Usar atributo Filtro-ID de RADIUS en servidor RADIUS"}, {"ALLOW_GROUPS", "Se permiten grupos RADIUS"}, {"USER_GROUP", "Grupo de usuarios"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "El tiempo de espera de RADIUS no puede estar vac\u00c3\u00ado"}, {"POSITIVE_RADIUS_TIMEOUT", "El tiempo de espera de RADIUS debe ser un n\u00c3\u00bamero positivo"}, {"EMPTY_MAX_RETRIES", "Los reintentos m\u00c3\u00a1ximos no pueden estar vac\u00c3\u00ados"}, {"POSITIVE_MAX_RETRIES", "Los reintentos m\u00c3\u00a1ximos deben ser un n\u00c3\u00bamero positivo"}, {"TEST_USER_NAME", "El campo Comprobar nombre de usuario no puede estar vac\u00c3\u00ado."}, {"TEST_USER_PWD", "El campo Comprobar contrase\u00c3\u00b1a de usuario no puede estar vac\u00c3\u00ado."}, {"DOMAIN_NAME_MSG", "El nombre del dominio que podr\u00c3\u00a1 crearse. Este nombre puede estar visible en el men\u00c3\u00ba desplegable Dominios en la p\u00c3\u00a1gina de inicio de sesi\u00c3\u00b3n."}, {"DOMAIN_TYPE_MSG", "El tipo de dominio, [Local] o [Remoto]. Un dominio que necesita autenticar usuarios de una plataforma externa como un servidor LDAP o AD deber\u00c3\u00ada ser creado como un dominio de tipo [Remoto]. Un dominio de tipo [Local] tendr\u00c3\u00ada la cuenta de usuario y los detalles de autenticaci\u00c3\u00b3n en el interior de la base de datos SGMS. Al crear un dominio de tipo [Local], es posible admitir m\u00c3\u00baltiples dominios en el interior de SGMS sin necesitar interfaces de autenticaci\u00c3\u00b3n externa."}, {"ADMIN_PASSWORD_MSG", "Cuando se crea un nuevo dominio de tipo [Local], se crea un usuario [admin] de forma predeterminada para el dominio. Debe especificar la contrase\u00c3\u00b1a para el usuario admin."}, {"ADMIN_USERID_MSG", "Especificar un nombre de usuario que necesita ser el admin para el dominio. Este nombre de usuario debe ser un nombre de usuario v\u00c3\u00a1lido en el servidor de directorio asociado con este dominio. Si el nombre [admin] est\u00c3\u00a1 especificado para este campo, un usuario con id de usuario [admin] debe existir en el directorio asociado y debe tener privilegios administrativos. Ejemplo: jdoe"}, {"HOST_NAME_MSG", "El nombre de host o la direcci\u00c3\u00b3n IP del servidor de autenticaci\u00c3\u00b3n remota. Ejemplo: \t[mydc.example.com], [X.X.X.X] (ip address), [company.com]. Si el servidor remoto es un servidor Active Directory (AD) de Windows y tiene m\u00c3\u00baltiples dominios donde debe autenticar usuarios debajo del bosque de AD, especifique el nombre del cat\u00c3\u00a1logo global o la direcci\u00c3\u00b3n IP de su bosque de AD como nombre de host."}, {"AUTHENTICATION_PORT_MSG", "El n\u00c3\u00bamero de puerto en el servidor LDAP o AD en el que se escuchan las solicitudes de autenticaci\u00c3\u00b3n. El valor predeterminado es 389 en el caso de los servidores LDAP/AD. Si tiene el nombre del cat\u00c3\u00a1logo global o la direcci\u00c3\u00b3n IP especificados de su bosque de AD como nombre de host, tambi\u00c3\u00a9n debe especificar el n\u00c3\u00bamero de puerto correspondiente. El valor predeterminado es 3268."}, {"HOST_TYPE_MSG", "Este valor indica el tipo de servidor de autenticaci\u00c3\u00b3n remota si es un servidor LDAP, un servidor Active Directory de Windows o RADIUS."}, {"ALIAS_MSG", "Una forma corta del nombre de dominio que se puede utilizar en la pantalla de inicio de sesi\u00c3\u00b3n de GMS para iniciar sesi\u00c3\u00b3n cuando los dominios no se muestran. Ejemplo: alias\\\\username. El alias se completa autom\u00c3\u00a1ticamente con el nombre del dominio si la longitud del nombre del dominio es menor o igual que 16 caracteres."}, {"PROTOCOL_VERSION_MSG", "Esta es la versi\u00c3\u00b3n de protocolo LDAP en la que est\u00c3\u00a1 instalado el servidor LDAP/AD remoto."}, {"BASE_DN_MSG", "El nombre distinguido de base se utiliza para identificar la entrada de ra\u00c3\u00adz en el directorio en las que ocurrir\u00c3\u00a1n las b\u00c3\u00basquedas iniciadas por SGMS. El nombre distinguido de base para un directorio (es decir, ejemplo.com) debe estar escrito en el formato: [dc=example,dc=com]. Siempre es necesario especificar el nodo de nivel m\u00c3\u00a1s alto como el nombre distinguido de base en el \u00c3\u00a1rbol de directorios por debajo del cual espera que est\u00c3\u00a9n presente todos los usuarios que puedan iniciar sesi\u00c3\u00b3n en SGMS."}, {"USE_SSL_MSG", "Especificar si se utiliza SSL para vincular al servidor remoto. Esto se recomienda encarecidamente. Para esto, el certificado CA del servidor remotoo o el certificado de ra\u00c3\u00adz de CA que firm\u00c3\u00b3 el certificado del servidor debe estar presente en el almac\u00c3\u00a9n de claves de SGMS como CA seguro."}, {"SSL_PORT_MSG", "El n\u00c3\u00bamero de puerto en el que servidor remoto escucha las solicitudes SSL de enlace. El valor predeterminado es de 636 en el caso de los servidores LDAP/AD. Si tiene el nombre del cat\u00c3\u00a1logo global o la direcci\u00c3\u00b3n IP especificados de su bosque de AD como nombre de host, tambi\u00c3\u00a9n debe especificar el n\u00c3\u00bamero de puerto SSL correspondiente. El valor predeterminado es 3269."}, {"ANONYMOUS_LOGIN_MSG", "(No se recomienda). Especifique si SGMS debe vincular al servidor remoto de forma an\u00c3\u00b3nima. Para este servidor LDAP/AD remoto debe permitir enlaces an\u00c3\u00b3nimos. Los enlaces an\u00c3\u00b3nimos deben intentarse solo cuando una cuenta de servicio (al menos una cuenta de usuario v\u00c3\u00a1lida en el directorio) no es conocida de antemano. Esto no se aconseja."}, {"LOGIN_USER_DN_MSG", "Nombre distinguido utilizado para autenticar el servidor de directorio cuando se realiza un enlace. El valor de este campo debe ser especificado como un DN (nombre distinguido). Ejemplo: [uid=xyz, ou=People, dc=example, dc=com], [cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "Contrase\u00c3\u00b1a para el nombre distinguido de usuario de inicio de sesi\u00c3\u00b3n."}, {"CONN_TIMEOUT_MSG", "Este valor (en milisegundos) es el per\u00c3\u00adodo de espera de conexi\u00c3\u00b3n. Despu\u00c3\u00a9s de este per\u00c3\u00adodo, el intento de conexi\u00c3\u00b3n con el servidor remoto se abandonar\u00c3\u00a1 si no tiene \u00c3\u00a9xito."}, {"LDAP_SCHEMA_MSG", "El esquema LDAP del servidor LDAP/AD asociado."}, {"OBJ_CLASS_MSG", "El nombre de una de las clases de objeto est\u00c3\u00a1ndar a los que pertenecen los usuarios."}, {"LOGIN_NAME_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP/AD que representa el id de usuario. Este es el atributo en el servidor LDAP cuyo valor deber\u00c3\u00ada utilizarse como el ID de usuario en la p\u00c3\u00a1gina de inicio de sesi\u00c3\u00b3n de SGMS. Ejemplo: uid, sAMAccountName etc."}, {"FIRST_NAME_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP que representa el nombre. Ejemplo: givenName."}, {"LAST_NAME_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP que representa el apellido. Ejemplo: sn."}, {"EMAIL_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP que representa el id de correo electr\u00c3\u00b3nico. Ejemplo: mail."}, {"TELEPHONE_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP que representa el n\u00c3\u00bamero de tel\u00c3\u00a9fono. Ejemplo: telephoneNumber."}, {"TEST_PANE_MSG", "Aqu\u00c3\u00ad puede probar las configuraciones del servidor de aut. (LDAP/AD/RADIUS) introducidas en el panel de configuraci\u00c3\u00b3n."}, {"TEST_PANE_USER_MSG", "Introduzca un nombre de usuario v\u00c3\u00a1lido que introducir\u00c3\u00ada en la p\u00c3\u00a1gina de inicio de sesi\u00c3\u00b3n de SGMS para iniciar sesi\u00c3\u00b3n en GMS. Este nombre de usuario debe ser v\u00c3\u00a1lido y estar presente en el directorio asociado para este dominio. Introduzca tambi\u00c3\u00a9n la contrase\u00c3\u00b1a para este nombre de usuario en el directorio."}, {"EMPTY_DIR_GROUP", "Los nombres de grupo de directorios no pueden estar vac\u00c3\u00ados."}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "Cuando esta opci\u00c3\u00b3n est\u00c3\u00a1 seleccionada, permite solo aquellos usuarios que son miembros de los grupos de Active Directory especificados para iniciar sesi\u00c3\u00b3n en GMS. Con esta opci\u00c3\u00b3n, es necesario tambi\u00c3\u00a9n seleccionar el tipo de host como [Active Directory] en el panel de configuraci\u00c3\u00b3n."}, {"DIR_GROUPS_MSG", "Especificar los nombres de grupo de AD, cuyos miembros deben ser autorizados para iniciar sesi\u00c3\u00b3n en GMS. Los grupos de AD m\u00c3\u00baltiples se pueden especificar como delimitados por punto y coma. Ejemplo: [GMSUsers], [ADGroup1;AD group2;GMS Users;Group4]"}, {"RADIUS_HOST_NAME_MSG", "El nombre de host o la direcci\u00c3\u00b3n IP del servidor de autenticaci\u00c3\u00b3n RADIUS. Ejemplo: [myradius.example.com], [X.X.X.X] (ip address), [company.com]."}, {"RADIUS_AUTH_PORT_MSG", "El n\u00c3\u00bamero de puerto en el servidor RADIUS en el que se escuchan las solicitudes de autenticaci\u00c3\u00b3n. Valor predeterminado 1812."}, {"RADIUS_SHARED_SECRET_MSG", "El secreto compartido entre GMS y el servidor RADIUS. Este es un valor de cadena conocido solo por el servidor RADIUS y el cliente de RADIUS."}, {"RADIUS_AUTH_PROTOCOL_MSG", "El protocolo de autenticaci\u00c3\u00b3n de RADIUS que se utilizar\u00c3\u00a1 para la autenticaci\u00c3\u00b3n."}, {"RADIUS_TIMEOUT_MSG", "Este valor (en segundos) indica el per\u00c3\u00adodo de espera de conexi\u00c3\u00b3n. Despu\u00c3\u00a9s de este per\u00c3\u00adodo, el intento de conexi\u00c3\u00b3n con el servidor RADIUS se abandonar\u00c3\u00a1 si no tiene \u00c3\u00a9xito."}, {"RADIUS_MAX_RETRIES_MSG", "Este valor denota el n\u00c3\u00bamero de veces que se debe intentar la autenticaci\u00c3\u00b3n del servidor RADIUS. Despu\u00c3\u00a9s de este per\u00c3\u00adodo, el intento de autenticaci\u00c3\u00b3n con el servidor remoto se abandonar\u00c3\u00a1 si no tiene \u00c3\u00a9xito."}, {"RADIUS_ONLY_GROUP_MSG", "Cuando esta opci\u00c3\u00b3n est\u00c3\u00a1 seleccionada, permite solo aquellos usuarios que son miembros de los grupos de usuarios de RADIUS especificados para iniciar sesi\u00c3\u00b3n en GMS."}, {"RADIUS_USE_FILTER_MSG", "Cuando est\u00c3\u00a1 seleccionada esta opci\u00c3\u00b3n, permite que se utilice el valor del atributo de RADIUS \\'Filtro-ID\\' como el identificador de grupo de usuarios de RADIUS. Para poder utilizar esta opci\u00c3\u00b3n, el servidor RADIUS debe estar configurado correctamente, para regresar este par de atributo-valor con cada usuario-id que se autentica desde el servidor RADIUS para iniciar sesi\u00c3\u00b3n en GMS."}, {"RADIUS_USE_SW_MSG", "Cuando se selecciona, esta opci\u00c3\u00b3n utiliza el valor de los atributos espec\u00c3\u00adficos del proveedor de SonicWall [SonicWall-User-Group y SonicWall-User-Groups] como identificador del grupo de usuarios RADIUS. Para utilizar esta opci\u00c3\u00b3n, el servidor RADIUS debe estar configurado correctamente para devolver el par del valor de atributo espec\u00c3\u00adfico del proveedor de SonicWall con cada id. de usuario autenticado desde el servidor RADIUS para el inicio de sesi\u00c3\u00b3n en GMS."}, {"RADIUS_ALLOW_GROUPS_MSG", "Especificar los nombres de grupo de usuarios de RADIUS, cuyos miembros deben ser autorizados para iniciar sesi\u00c3\u00b3n en GMS. Ejemplo [GMSUsers]. Los grupos de usuarios de RADIUS m\u00c3\u00baltiples se pueden especificar en forma de una cadena separada por punto y coma. Ejemplo: [RadGroup1;Rad group2;GMS Users;Group4]."}, {"ADD_AUTH_SERVER_MSG", "Permite, si se comprueba, agregar una nueva configuraci\u00c3\u00b3n de servidor de aut. mientras agrega el dominio."}, {"PAGE_LABEL", "P\u00c3\u00a1gina"}, {"MANAGE_PAGE", "Administrar p\u00c3\u00a1gina"}, {"ADD_COMPONENT", "Agregar componente"}, {"PAGE_MANAGER", "Administrador de p\u00c3\u00a1ginas"}, {"ADD_NEW_PAGE", "Agregar nueva p\u00c3\u00a1gina"}, {"DEFAULT_PAGE", "P\u00c3\u00a1gina predeterminada"}, {"PAGE_DETAILS", "Detalles de p\u00c3\u00a1gina"}, {"PAGE_TITLE", "T\u00c3\u00adtulo de p\u00c3\u00a1gina"}, {"COMPONENT_TITLE", "T\u00c3\u00adtulo de componente"}, {"PAGE_LAYOUT", "Dise\u00c3\u00b1o de p\u00c3\u00a1gina"}, {"ONE_COLUMN_LAYOUT", "1 columna (100)"}, {"TWO_COLUMN_LAYOUT", "2 columnas (50:50)"}, {"THREE_COLUMN_LAYOUT", "3 columnas (30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 columnas (25:25:25:25)"}, {"ADD", "Agregar"}, {"EDIT", "Editar"}, {"DELETE", "Eliminar"}, {"ADD_COMPONENT_MANAGER", "Agregar gestor de componentes"}, {"TYPE", "Tipo"}, {"RSS_FEED_DETAILS", "Detalles de las fuentes RSS"}, {"RSS_FEEDS", "Fuentes RSS"}, {"TITLE", "T\u00c3\u00adtulo"}, {"ITEMS", "Elementos para mostrar (m\u00c3\u00a1x.)"}, {"REFRESH_INTERVAL", "Intervalo de actualizaci\u00c3\u00b3n"}, {"REFRESH_INTERVAL_MINUTE", "en minutos"}, {"EVENT_ALERT_DETAILS", "Detalles de alerta de eventos"}, {"ALERT_TYPES", "Tipos de alerta"}, {"REFRESH_INTERVAL_HOUR", "en horas"}, {"ALERT_SHOW_TIME_HOURS", "Mostrar alertas disparadas dentro del \u00c3\u00baltimo"}, {"APPLICATION_WIDGET_DETAILS", "Detalles del widget de aplicaciones"}, {"WIDGETS", "Widgets"}, {"RSS_FEED_TYPE", "Fuente RSS"}, {"EVENT_ALERT_TYPE", "Alerta de eventos"}, {"APPLICATION_WIDGET_TYPE", "Widget de aplicaciones"}, {"CUSTOM_RSS_FEED", "Fuentes RSS personalizadas"}, {"CUSTOM_RSS_URL", "URL de la RSS personalizada"}, {"END_EDIT", "Finalizar edici\u00c3\u00b3n"}, {"RSS_URL", "URL de la RSS"}, {"SAVE", "Guardar"}, {"DEFAULT_PAGE", "P\u00c3\u00a1gina predeterminada"}, {"SAVE_LAYOUT_FAIL_MSG", "No se ha podido guardar el dise\u00c3\u00b1o"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "No se ha podido guardar el estado de la barra de control"}, {"ADD_COMPONENT_FAIL_MSG", "No se ha podido agregar el componente"}, {"DELETE_COMPONENT_FAIL_MSG", "No se ha podido eliminar el componente"}, {"PAGE_ACTION_FAIL_MSG", "Error en la acci\u00c3\u00b3n de la p\u00c3\u00a1gina"}, {"RSS_FEED_FAIL_MSG", "Error de recuperaci\u00c3\u00b3n de la fuente RSS."}, {"EVENT_ALERT_FAIL_MSG", "Error de recuperaci\u00c3\u00b3n de la alerta de GEM."}, {"APPLICATION_WIDGET_FAIL_MSG", "Error de recuperaci\u00c3\u00b3n del widget de aplicaciones."}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "No se configuraron alertas para el destino: Tablero."}, {"NO_ALERT_FOUND_MSG", "No se encontraron alertas para mostrar."}, {"CHANGE_DEFAULT_PAGE_MSG", "Al establecer esta p\u00c3\u00a1gina como predeterminada, cambiar\u00c3\u00a1 cualquier configuraci\u00c3\u00b3n de p\u00c3\u00a1gina predeterminada previa. \u00c2\u00bfEst\u00c3\u00a1 seguro de que desea continuar?"}, {"DELETE_DEFAULT_PAGE_MSG", "No se puede eliminar la p\u00c3\u00a1gina predeterminada. Elija cualquier otra p\u00c3\u00a1gina para que sea la p\u00c3\u00a1gina predeterminada y elimine esta p\u00c3\u00a1gina."}, {"DELETE_PAGE_AND_COMPONENT_MSG", "Al eliminar una p\u00c3\u00a1gina por vez, se eliminan todos los componentes de esa p\u00c3\u00a1gina. \u00c2\u00bfEst\u00c3\u00a1 seguro de que desea eliminar esta p\u00c3\u00a1gina?"}, {"VALID_URL_MSG", "Introduzca una URL en el formato: http://www.yourdomain.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea eliminar este componente?"}, {"NO_COMPONENT_MSG", "No se agreg\u00c3\u00b3 ning\u00c3\u00ban componente en la p\u00c3\u00a1gina en este momento."}, {"LOAD_DATA_MSG", "Cargando datos\u00e2\u20ac\u00a6"}, {"COMPONENT_EXISTS_MSG", "El componente ya existe. Detalles del componente existente: "}, {"REFRESH_INTERVAL_RANGE", "El intervalo de actualizaci\u00c3\u00b3n est\u00c3\u00a1 fuera de alcance. Complete un valor v\u00c3\u00a1lido."}, {"ITEMS_RANGE", "El n\u00c3\u00bamero de elementos est\u00c3\u00a1 fuera de alcance. Complete con un n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"ALERT_SHOWTIME_RANGE", "Mostrar hora para alertas est\u00c3\u00a1 fuera de alcance. Complete un valor v\u00c3\u00a1lido."}, {"NO_COMPONENT_SELECTED_ERR", ":Seleccione uno antes de agregar componentes a la p\u00c3\u00a1gina."}, {"ADDCOMPONENT_ERR_QUOTES", "El t\u00c3\u00adtulo de componente no puede contener los siguientes caracteres: comilla simple, comilla doble, dos puntos, porcentaje, tecla numeral, signo de interrogaci\u00c3\u00b3n y s\u00c3\u00admbolos de barras verticales."}, {"ADDPAGE_ERR_QUOTES", "El t\u00c3\u00adtulo de la p\u00c3\u00a1gina no puede contener los siguientes caracteres: comilla simple, comilla doble, dos puntos, porcentaje, tecla numeral, signo de interrogaci\u00c3\u00b3n y s\u00c3\u00admbolos de barras verticales."}, {"TIME_PERIOD", "Per\u00c3\u00adodo"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "Al eliminar una p\u00c3\u00a1gina por vez, se eliminan todos los widgets de esa p\u00c3\u00a1gina. \u00c2\u00bfEst\u00c3\u00a1 seguro de que desea eliminar esta p\u00c3\u00a1gina?"}, {"ADDWIDGET_ERR_QUOTES", "El t\u00c3\u00adtulo de widget no puede contener los siguientes caracteres: comilla simple, comilla doble, dos puntos, porcentaje, tecla numeral, signo de interrogaci\u00c3\u00b3n y s\u00c3\u00admbolos de barras verticales."}, {"TIME_PERIOD", "Per\u00c3\u00adodo"}, {"COPY_WIDGET_VALIDATION_MSG", "Seleccione una p\u00c3\u00a1gina para copiar."}, {"COPY_WIDGET_HEADER", "Copiar widget"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "Ninguna palabra clave en la cadena de b\u00c3\u00basqueda es aplicable a este widget."}, {"IGNORED_INVALID_SEARCH_FILTER", "Filtro de b\u00c3\u00basqueda no v\u00c3\u00a1lido ignorado."}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "Una o m\u00c3\u00a1s instancias de GMSVP no tienen ubicaci\u00c3\u00b3n geogr\u00c3\u00a1fica."}, {"NDA_NG_REPORTING_WIDGET_MSG", "No se encontraron registros coincidentes."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "Mensaje de alerta"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u00c3\u0161ltima hora notificada"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "Tipo de alerta"}, {"LOGS_WIDGET_COL_MESSAGE", "Mensaje"}, {"LOGS_WIDGET_COL_DATE", "Fecha"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "Detalles del usuario"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "Hora del \u00c3\u00baltimo acceso"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "Descripci\u00c3\u00b3n"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "Tiempo programado (Local)"}, {"DSB_CONFIRM_DELETE_WIDGET", "Esta operaci\u00c3\u00b3n eliminar\u00c3\u00a1 el widget, \u00c2\u00bfdesea continuar?"}, {"DSB_SEARCH_DIALOG_MESG", "Estos widgets concuerdan con el resultado para "}, {"DSB_SEARCH_DIALOG_HEADER", "Resultados de b\u00c3\u00basqueda adicionales"}, {"DSB_CLEARHISTORY_MESG", "\u00c2\u00bfDesea borrar todo el historial de b\u00c3\u00basqueda?"}, {"DSB_CLEARHISTORY_HDR", "historial de b\u00c3\u00basqueda"}, {"DSB_ADDNEW_WIDGET_LBL", "Agregar nuevo widget: "}, {"DSB_GENSTTINGS_HDR", "Configuraci\u00c3\u00b3n general "}, {"DSB_ASSOCPROD_HDR", "Productos asociados "}, {"DSB_SUBALERTS_HDR", "Subalertas incluidas. "}, {"DSB_WIDGETTITLE_LBL", "T\u00c3\u00adtulo: "}, {"DSB_NOFITEMS_LBL", "Cantidad de elementos: "}, {"DSB_REFINT_LBL", "Intervalo de actualizaci\u00c3\u00b3n: "}, {"DSB_ALERTSTRIGGERED_LBL", "Mostrar alertas activadas dentro del \u00c3\u00baltimo: "}, {"DSB_NEWSUBALERTS_LBL", "Nuevas subalertas: "}, {"DSB_CUSTRSSURL_LBL", "URL de la RSS personalizada: "}, {"DSB_WRAPTEXT_LBL", "Ajustar el texto: "}, {"DSB_ADDPAGE_HDR", "Agregar nueva p\u00c3\u00a1gina "}, {"DSB_ADDPAGE_LBL", "T\u00c3\u00adtulo de p\u00c3\u00a1gina: "}, {"DSB_MAPLOCATIONDLG_HDR", "Agregar/editar ubicaci\u00c3\u00b3n"}, {"DSB_ADDRESS_LBL", "Direcci\u00c3\u00b3n: "}, {"DSB_GEOLOCATION_LBL", "Ubicaci\u00c3\u00b3n geogr\u00c3\u00a1fica: "}, {"DSB_DELPAGE_LBL", "P\u00c3\u00a1gina generada por el sistema; no es posible eliminarla."}, {"DSB_DELPAGE_HDR", "\u00c2\u00bfDesea eliminar la p\u00c3\u00a1gina?"}, {"DSB_DELPAGECONFIRM_MSG", "\u00c2\u00bfDesea eliminar la p\u00c3\u00a1gina?"}, {"CZ_YES", "S\u00c3\u00ad"}, {"CZ_CERT_ISSUER", "Emisor del certificado"}, {"CZ_SUB_DN", "Nombre distinguido del sujeto"}, {"CZ_CERT_SN", "N\u00c3\u00bamero de serie del certificado"}, {"CZ_VALID_FROM", "V\u00c3\u00a1lido desde"}, {"CZ_EXPIRES_ON", "Caduca el"}, {"CZ_STATUS", "Estado"}, {"CZ_REQ_GEN", "Solicitud generada"}, {"CZ_SUB_KEY_ID", "Identificador clave del asunto"}, {"CZ_CRL_STATUS", "Estado de CRL"}, {"CZ_CRL_EXPIRES_ON", "CRL caduca el"}, {"CZ_CRL_REQUIRED", "Se requiere CRL"}, {"CZ_CRL_AUTO_URL", "URL de actualizaci\u00c3\u00b3n autom\u00c3\u00a1tica de CRL"}, {"CZ_HEADER", "Certificados y solicitudes de certificado"}, {"CZ_NAME", "Nombre"}, {"CZ_TYPE", "Tipo"}, {"CZ_VALIDATED", "Validado"}, {"CZ_EXPIRES", "Caduca"}, {"CZ_DETAILS", "Detalles"}, {"CZ_CONFIGURE", "Configurar"}, {"CZ_DELETE_CERT", "Eliminar este certificado"}, {"CZ_CANT_DELETE_CERT", "Este es un certificado incorporado y no se puede eliminar"}, {"CZ_EMAIL_CERT", "Env\u00c3\u00ade este certificado por correo electr\u00c3\u00b3nico"}, {"CZ_CANT_EMAIL_CERT", "Solo se pueden enviar por correo electr\u00c3\u00b3nico los certificados locales y las solicitudes de firma importados"}, {"CZ_IMPORT_CERT_CRL", "Importar lista de revocaci\u00c3\u00b3n de certificados (CRL)"}, {"CZ_UPLOAD_SIGNED_CERT", "Cargar certificado firmado"}, {"CZ_CERT_SEARCH", "B\u00c3\u00basqueda de certificados"}, {"CZ_CERT_SELECTED", "Ha seleccionado eliminar el certificado"}, {"CZ_SURE", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea continuar?"}, {"CZ_CERTS_SELECTED", "Ha seleccionado eliminar los siguientes certificados."}, {"CZ_PLZ_SELECT", "Seleccione los certificados que se eliminar\u00c3\u00a1n."}, {"CZ_VIEW_STYLE", "Estilo de vista de certificados"}, {"CZ_ALL_CERTS", "Todos los certificados"}, {"CZ_IMPORT_CERTS", "Certificados y solicitudes importados"}, {"CZ_BUILTIN_CERTS", "Certificados incorporados"}, {"CZ_INCLUDE_EXPIRED_CERTS", "Incluir los certificados incorporados caducados"}, {"CZ_IMPORT", "Importar\u00e2\u20ac\u00a6"}, {"CZ_NEW_REQ", "Nueva solicitud de firma..."}, {"CZ_DEL_CERTS", "Eliminar certificados"}, {"CZ_REQUIRE_CERT", "La funci\u00c3\u00b3n de importar requiere un nombre de certificado."}, {"CZ_IMPORT_REQUIRE_FILE", "La funci\u00c3\u00b3n de importar requiere un archivo de certificado."}, {"CZ_NO_DOT", "Nombre de certificado no v\u00c3\u00a1lido. No se permite tener ning\u00c3\u00ban '.' en \u00c3\u00a9l."}, {"CZ_IMPORT_REQUIRE_CMP", "La funci\u00c3\u00b3n de importar requiere una contrase\u00c3\u00b1a de administraci\u00c3\u00b3n de certificado."}, {"CZ_IMPORT_CERT", "Importar certificado"}, {"CZ_IMPORT_LOCAL", "Importar un certificado local de usuario final con clave privada desde un PKCS#12 (.p12 or .pfx) encoded file"}, {"CZ_IMPORT_CA", "Importar un certificado de CA desde un PKCS#7 (.p7b), PEM (.pem) or DER (.der or .cer) encoded file"}, {"CZ_CERT_NAME", "Nombre de certificado"}, {"CZ_CMP", "Contrase\u00c3\u00b1a de administraci\u00c3\u00b3n de certificado"}, {"CZ_SEL_FILE", "Seleccione un archivo para importar"}, {"CZ_SPECIFY_FILE", "Especifique un archivo para importar"}, {"CZ_UPLOAD_CERT", "Cargar certificado"}, {"CZ_UPLOAD_SIGN_CERT", "Cargar certificado firmado para solicitud de firma"}, {"CZ_SEL_UPLOAD_FILE", "Seleccione un archivo para cargar"}, {"CZ_FILE_FORMAT", "El archivo debe tener cifrado PEM (.pem) o DER (.der o .cer)"}, {"CZ_EXPORT_CERT", "Exportar certificado"}, {"CZ_EXPORT_CERT_REQ", "Exportar solicitud de certificado"}, {"CZ_CERT_EMAIL_CONTENT", "Un PKCS#10 Certification Request has been generated and is available for email. Save this file on your local disk for submission to a Registration or Certificate Authority. The file will be saved in PEM Certificate Request format, by default as"}, {"CZ_CHANGE_FILE_NAME", "(el nombre de archivo se puede cambiar en la descarga si es necesario)."}, {"CZ_SPECIFY_URL", "Especifique una URL de CRL."}, {"CZ_SPECIFY_CRL_FILE", "Especifique un archivo CRL para importar"}, {"CZ_INVALID_FILE", "El formato de archivo seleccionado no es v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_LC", "Especifique un archivo de certificado local v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_CA", "Especifique un archivo de certificado de CA v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_CRL", "Especifique un archivo CRL v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_SIGNED", "Especifique un archivo de certificado firmado v\u00c3\u00a1lido."}, {"CZ_IMPORT_CRL", "Importar CRL"}, {"CZ_IMPORT_CRL_FULL", "Importar lista de revocaci\u00c3\u00b3n de certificados (CRL)"}, {"CZ_IMPORT_CRL_FILE", "Importar CRL directamente desde un archivo cifrado PEM (.pem) o DER (.der o .crl)"}, {"CZ_SEL_CRL_FILE", "Seleccione un archivo CRL para importar"}, {"CZ_AUTO_IMPORT_CRL", "Importar autom\u00c3\u00a1ticamente CRL de forma peri\u00c3\u00b3dica a trav\u00c3\u00a9s de HTTP"}, {"CZ_CRL_LOC", "Introducir ubicaci\u00c3\u00b3n (URL) de CRL"}, {"CZ_INVALIDATE_CERTS", "Invalidar certificados y asociaciones de seguridad si falla la importaci\u00c3\u00b3n o el proceso de la CRL"}, {"CZ_CMP_REQUIRE", "\u001e{}\u001ePara exportar un certificado se requiere la contrase\u00c3\u00b1a de administraci\u00c3\u00b3n de certificados"}, {"CZ_CERT_NAME_REQUIRE", "La funci\u00c3\u00b3n de generaci\u00c3\u00b3n PKCS10 requiere un nombre de certificado."}, {"CZ_CERT_NAME_IN_USE", "El nombre de certificado ya se est\u00c3\u00a1 utilizando. Seleccione otro."}, {"CZ_SUB_DN_REQUIRE", "La funci\u00c3\u00b3n de generaci\u00c3\u00b3n PKCS10 requiere como m\u00c3\u00adnimo un atributo Nombre de sujeto."}, {"CZ_CN_TWO_CHARS", "El nombre del pa\u00c3\u00ads debe tener dos caracteres"}, {"CZ_DOMAIN_INVALID", "Nombre de dominio no v\u00c3\u00a1lido en nombre alternativo de sujeto."}, {"CZ_IP_INVALID", "Direcci\u00c3\u00b3n IP no v\u00c3\u00a1lida en nombre alternativo de sujeto."}, {"CZ_EMAIL_INVALID", "Direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico no v\u00c3\u00a1lida en nombre alternativo de sujeto."}, {"CZ_CERT_REQ", "Solicitud de firma de certificado"}, {"CZ_GEN_CERT_REQ", "Generar solicitud de firma de certificado"}, {"CZ_CERT_ALIAS", "Alias de certificado"}, {"CZ_COUNTRY", "Pa\u00c3\u00ads"}, {"CZ_STATE", "Estado"}, {"CZ_LOC", "Localidad"}, {"CZ_COMPANY", "Empresa u organizaci\u00c3\u00b3n"}, {"CZ_LOC_CITY", "Localidad o ciudad"}, {"CZ_DEPT", "Departamento"}, {"CZ_GROUP", "Grupo"}, {"CZ_TEAM", "Equipo"}, {"CZ_CNAME", "Nombre com\u00c3\u00ban"}, {"CZ_SN", "N\u00c3\u00bamero de serie"}, {"CZ_EMAIL", "Direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico"}, {"CZ_SUB_ALT_NAME", "Nombre alternativo de sujeto (opcional)"}, {"CZ_DOMAIN_NAME", "Nombre de dominio"}, {"CZ_IPV4", "Direcci\u00c3\u00b3n IPv4"}, {"CZ_SUB_KEY_TYPE", "Tipo de clave de sujeto"}, {"CZ_SIG_ALGORITHM", "Algoritmo de firma"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "Tama\u00c3\u00b1o de clave de sujeto"}, {"CZ_NO_CERTS", "No se encontraron certificados"}, {"IMPORT", "Importar"}, {"CZ_SCEP_CONFIG", "Configuraci\u00c3\u00b3n SCEP"}, {"CZ_CSR_LIST", "Lista CSR"}, {"CZ_NO_CSR", "Sin CSR"}, {"CZ_CHALLENGE_PWD", "Contrase\u00c3\u00b1a de comprobaci\u00c3\u00b3n (opcional)"}, {"CZ_CA_URL", "URL de CA"}, {"CZ_REQ_COUNT", "N\u00c3\u00bamero de solicitudes"}, {"CZ_POLL_INTERVAL", "Intervalos de encuesta"}, {"CZ_POLL_TIME", "Tiempo m\u00c3\u00a1ximo de sondeo"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "La URL de CA no puede estar vac\u00c3\u00ada"}, {"CZ_GEN_CSR", "No hay CSR disponibles; genere al menos una"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "Todas las configuraciones del filtro seleccionado se transferir\u00c3\u00a1n a todas las unidades debajo del nodo del grupo seleccionado."}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "Todas las configuraciones del filtro seleccionado se heredar\u00c3\u00a1n del nodo padre de la unidad\\ seleccionada."}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "Todas las configuraciones del filtro seleccionado se transferir\u00c3\u00a1n del nodo del grupo seleccionado al nodo padre.<br>Para aplicar configuraciones a todas la unidades debajo del nodo padre (a excepci\u00c3\u00b3n del nodo seleccionado y los nodos secundarios), realice la selecci\u00c3\u00b3n apropiada en la pantalla de vista previa."}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "Todas las configuraciones del filtro seleccionado se transferir\u00c3\u00a1n de la unidad seleccionada al nodo padre.<br>Para aplicar configuraciones a todas la unidades debajo del nodo padre (a excepci\u00c3\u00b3n de la unidad seleccionada), realice la selecci\u00c3\u00b3n apropiada en la pantalla de vista previa."}, {"WS_URI_HEADER", "URI p\u00c3\u00bablico"}, {"WS_URI_INSTRUCTIONS", "Introduzca el nombre del servidor p\u00c3\u00bablico para esta implementaci\u00c3\u00b3n. Este nombre se utilizar\u00c3\u00a1 para acceder a los servicios web en este servidor y se incluir\u00c3\u00a1 en los enlaces cruzados integrados."}, {"WS_URI_NOTE", "Nota: El puerto del servidor p\u00c3\u00bablico se utiliza para acceder a los servicios web de GMS desde el dominio p\u00c3\u00bablico. Para modificar el puerto en el que GMS ejecuta los servicios web, vaya a Interfaz del sistema/Implementaci\u00c3\u00b3n/Configuraciones"}, {"WS_DEPLOYMENT_HEADER", "Implementaci\u00c3\u00b3n de GMS"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "Seleccionar la implementaci\u00c3\u00b3n para configurar los servicios web para:"}, {"WS_DEPLOYMENT_ERROR", "No hay implementaciones con licencia actualmente activas"}, {"WS_STATUS_HEADER", "Servicios web"}, {"WS_SERVICES_ERROR", "No se encontraron servicios web para esta implementaci\u00c3\u00b3n"}, {"WS_DEPLOYMENTS_EMPTY", "No se puede obtener la lista de implementaciones. Registre esta instancia de GMSVP."}, {"WS_DISTRIBUTED_HEADER", "Instancias distribuidas"}, {"WS_DISTRIBUTED_EMPTY", "No hay instancias distribuidas configuradas para este servidor"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "Aplicar plantilla: "}, {"HM_APPLY_RECORDING_TASK_DESC", "Aplicar registro: "}, {"LM_CONFIRM_DELETE_RULE", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea eliminar las reglas seleccionadas?"}, {"LM_SUCCESS_DELETE_RULE", "La acci\u00c3\u00b3n de eliminaci\u00c3\u00b3n de regla se realiz\u00c3\u00b3 con \u00c3\u00a9xito."}, {"LM_FAILURE_DELETE_RULE", "No se han podido eliminar correctamente las reglas seleccionadas."}, {"LM_SUCCESS_UPDATE_RULE", "La acci\u00c3\u00b3n de actualizaci\u00c3\u00b3n de regla se realiz\u00c3\u00b3 con \u00c3\u00a9xito."}, {"LM_FAILURE_UPDATE_RULE", "No se ha podido actualizar correctamente la regla."}, {"LM_DUPLICATE_STMT_NAME", "Ya existe una regla con el mismo nombre.\\Introduzca un nombre \u00c3\u00banico para la regla"}, {"LM_RULE_DESTINATION_EMPTY", "El destino est\u00c3\u00a1 vac\u00c3\u00ado.\\Especifique una entrada v\u00c3\u00a1lida."}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "El destino no puede superar los 256 caracteres.\\nEspecifique una entrada v\u00c3\u00a1lida."}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "El valor de destino debe ser especificado para el tipo seleccionado.\\nEspecifique una entrada v\u00c3\u00a1lida."}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "Se debe asignar un programa para cada destino.\\Seleccione un programa o grupo de programas v\u00c3\u00a1lido."}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "El dominio del destino seleccionado en esta p\u00c3\u00a1gina no concuerda\\ncon el de la gravedad seleccionada de la p\u00c3\u00a1gina anterior.\\n\\nEs importante que los objetos procedan del interior del mismo dominio.\\nSi la gravedad seleccionada es incorrecta, vuelva y escoja la gravedad del dominio correspondiente.\\nDe lo contrario, seleccione un destino del dominio que concuerde con la gravedad."}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "El dominio del programa seleccionado en esta p\u00c3\u00a1gina no concuerda\\ncon el de la gravedad seleccionada de la p\u00c3\u00a1gina anterior.\\n\\nEs importante que los objetos procedan del interior del mismo dominio.\\nSi la gravedad seleccionada es incorrecta, vuelva y escoja la gravedad del dominio correspondiente.\\nDe lo contrario, seleccione un programa del dominio que concuerde con la gravedad."}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "No se ha podido establecer el estado de la barra de control."}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "No se ha podido establecer el estado de autodesplazamiento."}, {"LM_READER_START_SUCCESS", "Ha comenzado el lector de supervisi\u00c3\u00b3n activa."}, {"LM_READER_START_FAILURE", "No se pudo iniciar el lector de supervisi\u00c3\u00b3n activa. Compruebe las opciones de configuraci\u00c3\u00b3n.\\n (Nota: La direcci\u00c3\u00b3n de reenv\u00c3\u00ado y el puerto especificado deben ser accesibles desde la consola o el servidor web)."}, {"LM_READER_STOP_SUCCESS", "Se ha detenido el lector de supervisi\u00c3\u00b3n activa."}, {"LM_READER_STOP_FAILURE", "No se pudo detener el lector de supervisi\u00c3\u00b3n activa."}, {"LM_EC_DISABLED", "El reenv\u00c3\u00ado del registro de sistema est\u00c3\u00a1 actualmente desactivado.<br>El registro de sistema debe ser reenviado al servicio de administraci\u00c3\u00b3n de eventos para su supervisi\u00c3\u00b3n.<br>Para activar el reenv\u00c3\u00ado de registros de sistema para su supervisi\u00c3\u00b3n, haga clic en Configuraciones en la barra de control que est\u00c3\u00a1 arriba."}, {"LM_READER_NO_ALERT_MSG", "El lector no ha recibido nuevas alertas.<br>Nota: Si el problema persiste, compruebe las configuraciones del monitor y las configuraciones del registro de sistema del dispositivo."}, {"LM_READER_STOPPED_MSG", "El lector est\u00c3\u00a1 detenido en este momento.<br>Inicie el lector haciendo clic en el bot\u00c3\u00b3n de Inicio en la barra de control que est\u00c3\u00a1 arriba."}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "No tiene acceso a los dispositivos o las unidades.<br>Si desea supervisar los registros del sistema enviados por cualquiera de estas unidades, p\u00c3\u00b3ngase en contacto con su administrador."}, {"LM_READER_ERROR_MSG", "Se ha encontrado un error.<br>Ocurri\u00c3\u00b3 una excepci\u00c3\u00b3n mientras se procesaba la recopilaci\u00c3\u00b3n del lector de supervisi\u00c3\u00b3n activa."}, {"LM_READER_SOCKET_ERROR_MSG", "Se ha encontrado un error.<br>Ocurri\u00c3\u00b3 una excepci\u00c3\u00b3n mientras se iniciaba el lector de supervisi\u00c3\u00b3n activa.<br>Detalles de la excepci\u00c3\u00b3n: "}, {"LM_FAILURE_UPDATE_SETTINGS", "Error al actualizar las configuraciones de supervisi\u00c3\u00b3n activa."}, {"LM_SUCCESS_UPDATE_SETTINGS", "Se actualizaron correctamente las configuraciones de supervisi\u00c3\u00b3n activa."}, {"LM_WARN_ENABLE_EC", "El administrador de eventos utiliza registros de sistema reenviado desde el recopilador de registro de sistema para su supervisi\u00c3\u00b3n. Estos registros de sistema se env\u00c3\u00adan al motor para identificar eventos basados en reglas definidas. \\n\\nNota: Al activar esta opci\u00c3\u00b3n, se enviar\u00c3\u00a1n registros de sistema recibidos por los servicios del recopilador del registro de sistema en una implementaci\u00c3\u00b3n al servicio de administrador de eventos central. Esto aumentar\u00c3\u00a1 el tr\u00c3\u00a1fico de registro de sistema en toda la red, ya que el recopilador del registro de sistema clona cada mensaje para el control de eventos."}, {"LM_STMT_CHANGED_MSG_1", "Ha efectuado cambios en la regla seleccionada"}, {"LM_STMT_CHANGED_MSG_2", ".\\nIr a la pantalla anterior (p\u00c3\u00a1gina de lista de reglas) significar\u00c3\u00a1 perder sus cambios.\\nPulse ACEPTAR para ir a la p\u00c3\u00a1gina de lista de reglas o Cancelar para continuar editando esta regla."}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "No se ha podido actualizar el estado de acoplamiento."}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "No tiene los privilegios necesarios para actualizar en esta pantalla."}, {"LM_DELETE_STMT_EMPTY", "Seleccione al menos una regla para eliminar."}, {"LM_STMT_RULE_EMPTY", "No se ha elegido ning\u00c3\u00ban tipo de regla.\\nSeleccione un tipo de regla."}, {"LM_STMT_RULE_DUPLICATE", "Ya existe una regla con las mismas propiedades de tipo de regla y de editor.\\nSeleccione propiedades de reglas \u00c3\u00banicas para esta regla."}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "Reenv\u00c3\u00ado de puerto cambiado por el lector.\\nTomar\u00c3\u00a1 unos segundos reiniciar correctamente el lector."}, {"LM_NO_RULE_EDITABLE", "No hay ning\u00c3\u00ban tipo de regla editable en el grupo seleccionado.\nSeleccione otro grupo/tipo de regla."}, {"LM_DISABLE_STMT_EMPTY", "Seleccione al menos una regla para activar/desactivar la acci\u00c3\u00b3n."}, {"LM_SUCCESS_DISABLE_RULE", "La acci\u00c3\u00b3n para activar/desactivar la regla se realiz\u00c3\u00b3 con \u00c3\u00a9xito."}, {"LM_FAILURE_DISABLE_RULE", "No se han podido activar/desactivar correctamente las reglas seleccionadas."}, {"LM_EDIT_RULE_MSG_1", "Ha seleccionado editar las siguientes reglas:\\n"}, {"LM_EDIT_RULE_MSG_2", "\\nLa lista seleccionada contiene todas las reglas que no se pueden editar.\\n\\nSeleccione otra regla para continuar."}, {"LM_EDIT_RULE_MSG_3", "\\n La lista seleccionada contiene reglas que no se pueden editar marcadas con *.\\n\\n\u00c2\u00bfDesea continuar editando las reglas restantes?"}, {"LM_DELETE_RULE_MSG_1", "Ha seleccionado eliminar las siguientes reglas:\\n"}, {"LM_DELETE_RULE_MSG_2", "\\nLa lista seleccionada contiene todas las reglas que no se pueden eliminar.\\n\\nSeleccione otra regla para continuar."}, {"LM_DELETE_RULE_MSG_3", "\\n La lista seleccionada contiene reglas que no se pueden eliminar marcadas con *.\\n\\n\u00c2\u00bfDesea continuar eliminando las reglas restantes?"}, {"LM_DELETE_RULE_MSG_4", "\\n\u00c2\u00bfDesea continuar?"}, {"MASKED_LIVEMONITOR_MESSAGE", "Se enmascar\u00c3\u00b3 un mensaje de alerta para impedir que se mostrara en funci\u00c3\u00b3n de pol\u00c3\u00adticas de privacidad impuestas."}, {"MASKED_ADDITIONAL_INFORMATION", "Se enmascar\u00c3\u00b3 informaci\u00c3\u00b3n adicional para impedir que se mostrara en funci\u00c3\u00b3n de pol\u00c3\u00adticas de privacidad impuestas."}, {"DSB_NONENGFW_ALERT_TITLE", "Alerta de versi\u00c3\u00b3n de firmware"}, {"DSB_NONENGFW_ALERT_MSGPART1", "Este GMS est\u00c3\u00a1 gestionando dispositivos SonicOS que ejecutan firmware que no est\u00c3\u00a1 en ingl\u00c3\u00a9s."}, {"DSB_NONENGFW_ALERT_MSGPART2", "Tenga en cuenta que los objetos y las pol\u00c3\u00adticas definidos en caracteres diferentes del ingl\u00c3\u00a9s en los dispositivos pueden no mostrarse correctamente en la interfaz de usuario de GMS. Si se modifican y se insertan estos objetos y pol\u00c3\u00adticas en los dispositivos, es posible que no se produzcan los resultados esperados."}, {"SYSLOGTAIL_STARTED", "Se ha iniciado el lector de registros del sistema (para la supervisi\u00c3\u00b3n del registro del sistema en tiempo real)."}, {"SYSLOGTAIL_START_FAILED", "No se pudo iniciar el lector de registros del sistema. Compruebe la configuraci\u00c3\u00b3n de env\u00c3\u00ado de registros del sistema.&nbsp;&nbsp;(Nota: La direcci\u00c3\u00b3n de env\u00c3\u00ado y el puerto especificados deben ser accesibles desde la consola o el servidor web)."}, {"SYSLOGTAIL_ALREADY_RUNNING", "El lector de registros del sistema (para la supervisi\u00c3\u00b3n del registro del sistema en tiempo real) ya est\u00c3\u00a1 en ejecuci\u00c3\u00b3n; no se realizaron cambios."}, {"SYSLOGTAIL_STOPPED", "Se ha detenido el lector de registros del sistema (para la supervisi\u00c3\u00b3n del registro del sistema en tiempo real)."}, {"SYSLOGTAIL_ALREADY_STOPPED", "El lector de registros del sistema (para la supervisi\u00c3\u00b3n del registro del sistema en tiempo real) ya est\u00c3\u00a1 detenido; no se realizaron cambios."}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "El lector no recibi\u00c3\u00b3 ning\u00c3\u00ban registro del sistema nuevo."}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(El lector a\u00c3\u00ban puede estar intentando recolectar los registros del sistema)."}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(Si el problema persiste, compruebe la configuraci\u00c3\u00b3n del lector de registros del sistema y las configuraciones del firewall)."}, {"SYSLOGTAIL_CONFIG_CHECK", "Compruebe la configuraci\u00c3\u00b3n del lector de registros del sistema y las configuraciones del firewall."}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "No se encontraron registros del sistema."}, {"SYSLOGTAIL_MODIFY_FILTER", "Para obtener mejores resultados, intente modificar la cadena de filtrado."}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(Nota: Para obtener mejores resultados, utilice <b>AND</b> u <b>OR</b> entre cadenas m\u00c3\u00baltiples)."}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Actualmente, el lector de registros del sistema est\u00c3\u00a1 detenido."}, {"SYSLOGTAIL_START", "Inicie el lector de registros del sistema."}, {"SYSLOGTAIL_ERROR", "Se ha encontrado un error."}, {"SYSLOGTAIL_ERROR_MESSAGE", "Se produjo una excepci\u00c3\u00b3n al procesar la recopilaci\u00c3\u00b3n de registros del sistema."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "El env\u00c3\u00ado de registros del sistema no est\u00c3\u00a1 habilitado."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Configure la direcci\u00c3\u00b3n y el puerto de env\u00c3\u00ado de registros del sistema e inicie el lector de registros del sistema."}, {"MASKED_SYSLOG_MESSAGE", "Se enmascar\u00c3\u00b3 el resto del mensaje del registro del sistema para impedir que se mostrara en funci\u00c3\u00b3n de pol\u00c3\u00adticas de privacidad impuestas."}, {"EVENT_ALERTS_SEARCH", "B\u00c3\u00basqueda de alertas"}, {"EVENT_ALERTS_DELETE", "Eliminar alertas"}, {"EVENT_ALERTS_ENABLE_DISABLE", "Activar/desactivar alertas"}, {"EVENT_ALERTS_ADD", "Agregar alerta"}, {"EVENT_ALERTS_HEADER", "Alertas"}, {"EVENT_ALERTS_ALERT_NAME", "Nombre"}, {"EVENT_ALERTS_ALERT_TYPE", "Tipo de alerta"}, {"EVENT_ALERTS_INTERVAL", "Intervalo"}, {"EVENT_ALERTS_DEST_SCHED", "Destino/programa"}, {"EVENT_ALERTS_ENABLED", "Activado"}, {"EVENT_ALERTS_DOMAIN", "Dominio"}, {"EVENT_ALERTS_CONFIGURE", "Configurar"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "No se encontraron alertas."}, {"DTF_ANY", "Cualquier momento"}, {"DTF_ADD", "Agregar unidad"}, {"DTF_EXECUTE", "Ejecutar"}, {"DTF_ENABLED", "Activado"}, {"DTF_SEARCH", "B\u00c3\u00basqueda de tareas predeterminadas"}, {"DTF_NOT_FOUND", "No se encontraron tareas predeterminadas."}, {"DTF_DT", "Tareas predeterminadas"}, {"DTF_DESC", "Descripci\u00c3\u00b3n"}, {"DTF_TOU", "Tipo de unidades"}, {"DTF_DURING", "Tarea creada durante"}, {"DTF_NO_DTS", "No se seleccionaron tareas predeterminadas para la ejecuci\u00c3\u00b3n."}, {"DTF_EXEC", "Ejecute esta tarea predeterminada."}, {"DTF_NO_DISABLE", "No se puede desactivar esta tarea predeterminada."}, {"DTF_NO_EXEC", "No se puede ejecutar esta tarea predeterminada."}, {"DTF_SEL_UNITS", "Seleccionar unidades"}, {"DTF_EXEC_METHOD", "M\u00c3\u00a9todo de ejecuci\u00c3\u00b3n"}, {"DTF_ATLEAST_ONE", "Seleccione al menos una unidad para ejecutar la tarea."}, {"DTF_EXEC_ALL", "Ejecutar las tareas predeterminadas en todas las unidades del sistema"}, {"DTF_EXEC_FOLL", "Ejecutar las tareas predeterminadas en las siguientes unidades seleccionadas"}, {"DTF_REAPPLY_1", "Ejecutar solo si no se aplicaron anteriormente"}, {"DTF_REAPPLY_2", "Solo se ejecutan las tareas que no se aplicaron anteriormente a las unidades seleccionadas."}, {"DTF_REAPPLY_3", "Las tareas predeterminadas que ya se ejecutaron se ignoran de esa unidad."}, {"DTF_EXEC_1", "Ejecutar incluso si se aplicaron anteriormente"}, {"DTF_EXEC_2", "Todas las tareas seleccionadas se vuelven a ejecutar en las unidades seleccionadas aunque ya se hayan aplicado anteriormente."}, {"DTF_ENABLE_SUCCESS", "Se actualiz\u00c3\u00b3 correctamente la selecci\u00c3\u00b3n de tareas predeterminadas."}, {"DTF_ENABLE_FAIL", "No se pudo actualizar la selecci\u00c3\u00b3n de tareas predeterminadas."}, {"DTF_SCHEDULE_SUCCESS", "Se programaron correctamente las tareas predeterminadas para la ejecuci\u00c3\u00b3n."}, {"DTF_SCHEDULE_FAIL", "No se programaron tareas predeterminadas debido a que las tareas seleccionadas no son aplicables o ya se han ejecutado."}, {"AUTOASSIGN_AGENT_HEADER", "Configuraci\u00c3\u00b3n de asignaci\u00c3\u00b3n de agentes"}, {"AUTOASSIGN_AGENT_MSG_1", " requiere agentes que posean unidades para administrar, generar informes y monitorear. La asignaci\u00c3\u00b3n autom\u00c3\u00a1tica de agentes garantiza que las unidades est\u00c3\u00a9n equilibradas, a fin de distribuir mejor el recurso, optimizar el rendimiento, tener suficiente almacenamiento y contar con una alta disponibilidad. Esta funci\u00c3\u00b3n puede activarse seg\u00c3\u00ban los modos administrados que se hayan seleccionado en la operaci\u00c3\u00b3n Agregar unidad. "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "El usuario puede reasignar agentes del cuadro de di\u00c3\u00a1logo <i>Modificar unidad</i>."}, {"AUTOASSIGN_AGENT_MSG_2", "El usuario puede reasignar agentes del cuadro de di\u00c3\u00a1logo <i>Modificar unidad</i> o en la operaci\u00c3\u00b3n <i>Reasignar agentes</i>."}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\u00c3\u0161nicamente modos de administraci\u00c3\u00b3n T\u00c3\u00banel existente o LAN, y SSL: La asignaci\u00c3\u00b3n autom\u00c3\u00a1tica se aplica \u00c3\u00banicamente a los modos <i>T\u00c3\u00banel existente</i> y <i>SSL</i>, pero ser\u00c3\u00ada necesaria para la asignaci\u00c3\u00b3n manual de <i>T\u00c3\u00banel de administraci\u00c3\u00b3n</i>."}, {"AUTOASSIGN_AGENT_MSG_ALL", "Todos los modos de administraci\u00c3\u00b3n: La asignaci\u00c3\u00b3n autom\u00c3\u00a1tica se aplica a todos los modos. Para el modo <i>T\u00c3\u00banel de administraci\u00c3\u00b3n</i>, configure el agente en la unidad administrada."}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "Se habilit\u00c3\u00b3 la Asignaci\u00c3\u00b3n autom\u00c3\u00a1tica de agentes"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "Se inhabilit\u00c3\u00b3 la Asignaci\u00c3\u00b3n autom\u00c3\u00a1tica de agentes"}, {"AUTOASSIGN_AGENT_ENABLE", "Permitir la asignaci\u00c3\u00b3n autom\u00c3\u00a1tica de agentes"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL y mediante un t\u00c3\u00banel existente o LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "Todo"}, {"TEMPLATE_SETTINGS_TITLE", "[ES]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[ES]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[ES]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[ES]Apply Default Configuration"}, {"CUI_NO_FS", "No se encontraron servidores de flujo."}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "ES The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "ES The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea cambiar la configuraci\u00c3\u00b3n?"}, {"LOGCONFIG_SECTITLE_2", "Mensajes de registro"}, {"LOGCONFIG_DELLABEL", "Eliminar registros anteriores a:"}, {"LOGCONFIG_MONTH", "Mes"}, {"LOGCONFIG_DAY", "D\u00c3\u00ada"}, {"LOGCONFIG_YEAR", "A\u00c3\u00b1o"}, {"LOGCONFIG_FORLABEL", "para"}, {"LOGCONFIG_DOMAIN", "Dominio"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "Error: No se pudo actualizar la configuraci\u00c3\u00b3n"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea cambiar el programa?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea cambiar el n\u00c3\u00bamero m\u00c3\u00a1ximo de archivos de registro?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "Archivar "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " Mensajes de registro"}, {"APPLOG_CONFIG_DELETE_MSG_1", "Los registros permiten hacer un seguimiento de las actividades en este sistema. Estas actividades est\u00c3\u00a1n asociadas de forma directa o indirecta a las acciones iniciadas por el usuario, o basadas en las acciones iniciadas por el sistema. Estos registros son importantes para la traza de auditor\u00c3\u00ada y el cumplimiento, adem\u00c3\u00a1s de la operaci\u00c3\u00b3n del sistema de soluci\u00c3\u00b3n de problemas."}, {"APPLOG_CONFIG_DELETE_MSG_2", "Los registros que ya no necesitan almacenarse en el sistema pueden eliminarse de forma manual. Esta es una acci\u00c3\u00b3n \u00c3\u00banica y se ejecutar\u00c3\u00a1 en funci\u00c3\u00b3n de la fecha seleccionada para la eliminaci\u00c3\u00b3n. "}, {"APPLOG_CONFIG_DELETE_MSG_21", "La acci\u00c3\u00b3n de eliminaci\u00c3\u00b3n en esta pantalla solo purgar\u00c3\u00a1 registros que no est\u00c3\u00a9n relacionados con los pedidos de cambio."}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "Los registros que ya no necesitan almacenarse en el sistema pueden exportarse en formato CSV/HTML y eliminarse de la base de datos. El proceso de archivado primero archivar\u00c3\u00a1 los datos en el directorio <i>archivedLogs</i> conforme al \"Programa de archivado de registros\" y, luego, se eliminar\u00c3\u00a1n los datos de la base de datos. "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "La acci\u00c3\u00b3n de archivado exportar\u00c3\u00a1 todos los registros, incluidos los relacionados con los pedidos de cambio. No obstante, la eliminaci\u00c3\u00b3n omitir\u00c3\u00a1 el purgado de las entradas relacionadas con los pedidos de cambio."}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "Nota: Para implementaciones sin fecha: Para eliminar los archivos de registro archivados en la unidad local, vaya a Dispositivo > Sistemas > pantalla Administrador de archivos."}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "Activar archivado"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "Mantener "}, {"APPLOG_CONFIG_ARCHIVE_For", " durante:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "M\u00c3\u00a1xima cantidad de archivos de mensajes de registro:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "Formato de archivado:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "Configuraci\u00c3\u00b3n del archivado"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "Los mensajes de registro se actualizaron correctamente"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "Archivar mensajes de registro del GMS para"}, {"WF_SETTINGS_TITLE", "Configuraci\u00c3\u00b3n"}, {"WF_SETTINGS_MSG_1", "El flujo de trabajo es un sistema que permite supervisar los cambios en la configuraci\u00c3\u00b3n que se aplican a uno o m\u00c3\u00a1s dispositivos. Permite realizar una revisi\u00c3\u00b3n y proporcionar comentarios sobre los cambios propuestos, asignar la propiedad y otorgar responsabilidad de todas las acciones. Adem\u00c3\u00a1s, se pueden generar registros completos de auditor\u00c3\u00ada. La administraci\u00c3\u00b3n de pedidos de cambio es un componente del flujo de trabajo que permite ver los cambios realizados en los dispositivos, obtener una vista previa de los cambios alineados en pantalla en el contexto del dispositivo y, adem\u00c3\u00a1s, comparar m\u00c3\u00baltiples pedidos de cambio. "}, {"WF_SETTINGS_MSG_2", "Nota: Se puede activar y desactivar la administraci\u00c3\u00b3n de pedidos de cambio y de aprobaci\u00c3\u00b3n al nivel del dominio. Si se desactiva la administraci\u00c3\u00b3n de aprobaci\u00c3\u00b3n, se puede tener activada la administraci\u00c3\u00b3n de pedidos de cambio; no obstante, si se desactiva la administraci\u00c3\u00b3n de pedidos de cambio, tambi\u00c3\u00a9n se desactivar\u00c3\u00a1 la administraci\u00c3\u00b3n de aprobaci\u00c3\u00b3n."}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "Incluso cuando el flujo de trabajo est\u00c3\u00a9 activado, se aplicar\u00c3\u00a1 \u00c3\u00banicamente a los dispositivos que tengan licencia activa para los siguientes servicios: "}, {"WF_SETTINGS_ENABLE_COM", "Activar la administraci\u00c3\u00b3n de pedidos de cambio"}, {"WF_SETTINGS_ENABLE_WF", "Activar la administraci\u00c3\u00b3n de aprobaci\u00c3\u00b3n"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "Configuraci\u00c3\u00b3n del programa predeterminado de pedidos de cambio"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "Los pedidos de cambio se pueden programar para que se ejecuten al momento del env\u00c3\u00ado seg\u00c3\u00ban la siguiente configuraci\u00c3\u00b3n. Si se especifica un valor predeterminado, se usar\u00c3\u00a1 autom\u00c3\u00a1ticamente la configuraci\u00c3\u00b3n seleccionada cuando se cree un nuevo pedido de cambio."}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "Programa: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "Ejecutar manualmente"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "Inmediatamente tras su aprobaci\u00c3\u00b3n"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "A las"}, {"WF_CONFIG_DELETE_MSG_1", "Los registros permiten hacer un seguimiento de las actividades en este sistema. Estas actividades est\u00c3\u00a1n asociadas de forma directa o indirecta a las acciones iniciadas por el usuario, o basadas en las acciones iniciadas por el sistema. Estos registros son importantes para la traza de auditor\u00c3\u00ada y el cumplimiento, adem\u00c3\u00a1s de la operaci\u00c3\u00b3n del sistema de soluci\u00c3\u00b3n de problemas."}, {"WF_CONFIG_DELETE_MSG_2", "Los pedidos de cambio generalmente de m\u00c3\u00a1s de "}, {"WF_CONFIG_DELETE_MSG_3", " ya no necesitan almacenarse en el sistema y pueden eliminarse de forma manual. Esta es una acci\u00c3\u00b3n \u00c3\u00banica y se ejecutar\u00c3\u00a1 en funci\u00c3\u00b3n de la fecha seleccionada para la eliminaci\u00c3\u00b3n. La acci\u00c3\u00b3n de eliminaci\u00c3\u00b3n en esta pantalla solo purgar\u00c3\u00a1 datos, tareas y registros que est\u00c3\u00a9n relacionados con los pedidos de cambio."}, {"APPLOG_CONFIG_DEL_DATA", "Eliminar datos a las"}, {"FA_UNIT_STATUS_HEADER", "Detalles de la unidad"}, {"FA_UNIT_STATUS_SERIAL", "N\u00c3\u00bamero de serie"}, {"FA_UNIT_STATUS_NODE_NAME", "Nombre de la unidad"}, {"FA_UNIT_STATUS_MODEL", "Modelo"}, {"FA_UNIT_STATUS_FIRMWARE", "Versi\u00c3\u00b3n de firmware"}, {"FA_UNIT_STATUS_IP", "IP administrada"}, {"FA_UNIT_STATUS_LICENSE", "Visualizaci\u00c3\u00b3n de la aplicaci\u00c3\u00b3n"}, {"FA_GROUP_STATUS_HEADER1", "Detalles del firmware"}, {"FA_GROUP_STATUS_HEADER2", "Estado de licencia de generaci\u00c3\u00b3n de informes de flujo"}, {"FA_GROUP_STATUS_NO_DATA", "No hay datos disponibles"}, {"FA_LICENSE_NOT_AVAILABLE", "Sin licencia"}, {"FA_LICENSE_AVAILABLE", "Con licencia"}, {"FA_LICENSE_FREE_TRAIL", "Prueba gratuita"}, {"FA_LICENSE_EXPIRED", "Caducada"}, {"FA_GROUP_FIREWALL_COUNT", "Cortafuegos en el sistema"}, {"FA_FLOW_IP1", "Agente de flujo 1"}, {"FA_FLOW_IP2", "Agente de flujo 2"}, {"FA_FLOW_AGENT_STATUS", "Estado del agente de flujo"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "Configuraci\u00c3\u00b3n del cortafuegos"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "t\u00c3\u00banel VPN de centro a centro"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "IP remota"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "Retenci\u00c3\u00b3n de datos (d\u00c3\u00adas)"}, {"FA_FLOW_FORWARDER_IP", "Reenv\u00c3\u00ado de flujo"}, {"FA_FLOWS_COLLECTED", "Flujos recopilados"}, {"FA_DISK_ALLOCATED", "Disco asignado"}, {"FA_DISK_USED", "Disco usado"}, {"FA_FLOW_STATUS", "Estado"}, {"FA_NO_AGENT", "No se asign\u00c3\u00b3 ning\u00c3\u00ban Agente de flujo"}, {"FA_MODELSUPPORT", "La generaci\u00c3\u00b3n de informes de flujo no est\u00c3\u00a1 activada para este modelo"}, {"FA_FIRMWARESUPPORT", "La generaci\u00c3\u00b3n de informes de flujo no est\u00c3\u00a1 disponible para esta versi\u00c3\u00b3n"}, {"FA_LICENSESUPPORT", "La informaci\u00c3\u00b3n de la licencia de visualizaci\u00c3\u00b3n de la aplicaci\u00c3\u00b3n no est\u00c3\u00a1 disponible"}, {"FA_HEADING", "Agentes de flujo"}, {"FA_FLOW_AGENT", "Agente de flujo"}, {"FA_FLOW_HEAD_IP1", "Agente de flujo 1"}, {"FA_FLOW_HEAD_IP2", "Agente de flujo 2"}, {"FA_FLOW_HEAD_HDD", "Disco duro (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "Ancho de banda (%)"}, {"FA_FLOW_FORWARDER_HEAD", "Reenv\u00c3\u00ado de flujo"}, {"FA_FLOW_PAIR", "Par de agente de flujo"}, {"FA_FLOW_HEAD_DISKSIZE", "Tama\u00c3\u00b1o del disco"}, {"FA_FLOW_HEAD_GATEWAY", "Cortafuegos de la pasarela"}, {"FA_FLOW_HEAD_TUNNELS", "T\u00c3\u00baneles"}, {"FA_FLOW_HEAD_TENANTS", "Inquilinos"}, {"FA_FLOW_HEAD_FIREWALLS", "[ES]Firewalls"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "Nombre"}, {"GF_GATEWAY", "Pasarela"}, {"GF_LAST_UPDATED", "\u00c3\u0161ltima actualizaci\u00c3\u00b3n"}, {"GF_DEST_ADDRESS_RANGE", "Rango de direcciones de destino"}, {"GF_LOCAL_ADDRESS_RANGE", "Rango de direcciones locales"}, {"FA_STATUS", "Estado"}, {"CLOUDSETTINGS_SECTITLE_1", "Agregar nuevo par de agentes de flujo"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "Agente de flujo 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "Agente de flujo 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "Memoria (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "Almacenamiento de la base de datos de flujo (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "Configuraci\u00c3\u00b3n del servidor de registro de sistema en la nube"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Activar la generaci\u00c3\u00b3n de informes del registro de sistema al servidor de registro de sistema:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Direcci\u00c3\u00b3n IP del servidor de registro de sistema:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Puerto del servidor de registro de sistema:"}, {"CLOUDSETTINGS_SECTITLE_3", "Configuraci\u00c3\u00b3n del agente de flujo en la nube"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "Cantidad de cortafuegos por agente de flujo:"}, {"CLOUDSETTINGS_SECTITLE_4", "[ES]Cloud Archived Report Settings"}, {"CLOUDSETTINGS_NUM_ARCHIVED_REPORTS_SUPPORTED", "[ES]Num of Archived Reports per Firewall:"}, {"CLOUDSETTINGS_SECTITLE_5", "[ES]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[ES]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "Informaci\u00c3\u00b3n de SonicPoint"}, {"SP_MANAGEDBY", "Gestionado por"}, {"SP_IPADDR", "Direcci\u00c3\u00b3n IP"}, {"SP_SUBNET", "M\u00c3\u00a1scara de subred"}, {"SP_IFACE", "Interfaz"}, {"SP_ZONE", "Zona"}, {"SP_MODEL", "Modelo"}, {"SP_ENABLED", "Activado"}, {"SP_DISABLED", "Desactivado"}, {"SP_STATUS", "Estado"}, {"SP_MACADDR", "Direcci\u00c3\u00b3n MAC"}, {Integer.toString(-919), "[ES]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[ES]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[ES]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[ES]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[ES]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[ES]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[ES]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[ES]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[ES]Successfully authenticated with the unit."}, {Integer.toString(-928), "[ES]Authentication with the unit failed."}, {Integer.toString(-929), "[ES]The unit is registered with the backend."}, {Integer.toString(-930), "[ES]The unit is not registered with the backend."}, {Integer.toString(-931), "[ES]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[ES]Heart beats for the unit have been started."}, {Integer.toString(-933), "[ES]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[ES]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[ES]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[ES]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[ES]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[ES]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[ES]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[ES]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[ES]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[ES]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[ES]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[ES]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[ES]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[ES]ZeroTouch feature was disabled for the firewall."}, {"TICKET_INFORMATION", "[ES]Connectwise Ticket"}, {"TICKET_DETAILS", "[ES]Details"}, {"CONNECTWISE_NOTE", "[ES]GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}};
+    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "Dispositivo (singular)"}, {"APPLIANCE_NAME_PLURAL", "Dispositivo (plural)"}, {"APPLIANCE_DESC", "Descripci\u00c3\u00b3n del dispositivo"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewalls"}, {"SONICWALL_DESC", "Dispositivos de firewall"}, {"SSLVPN_NAME", "SMA (acceso remoto seguro)"}, {"SSLVPN_NAME_PLURAL", "SMA (accesos remotos seguros)"}, {"SSLVPN_DESC", "Dispositivos SMA"}, {"CDP_NAME", "CDP (protecci\u00c3\u00b3n continua de datos)"}, {"CDP_NAME_PLURAL", "CDP (protecciones continuas de datos)"}, {"CDP_DESC", "Dispositivos CDP"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Dispositivos Aventail SMA"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "Dispositivos de seguridad de correo electr\u00c3\u00b3nico"}, {"OTHERS_NAME", "OTRO"}, {"OTHERS_NAME_PLURAL", "OTROS"}, {"OTHERS_DESC", "Otros dispositivos"}, {"MINUTE", "Minutos"}, {"TEST_STRING", "Esta es una cadena de prueba; quitarla antes del env\u00c3\u00ado"}, {"PROGRESS_ACTION_TIMED", "Esta acci\u00c3\u00b3n puede tomar un tiempo para completarse"}, {"PROGRESS_PLEASE_WAIT", "Espere, por favor..."}, {"LOADING_PLEASE_WAIT", "Cargando, por favor espere..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "No tiene los privilegios necesarios para actualizar en esta pantalla."}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "No tiene permisos para ver ninguna pantalla. Cierre sesi\u00c3\u00b3n y comun\u00c3\u00adquese con su administrador."}, {"UPDATE", "Actualizar"}, {"RESET", "Reiniciar"}, {"NO_PANEL_PERMISSIONS", "[ES]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "C\u00c3\u00b3digos modelo sincronizados correctamente"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "No se han podido sincronizar los c\u00c3\u00b3digos modelo"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "La cola de tareas se ha iniciado correctamente."}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "Error: No hay unidades disponibles para la aplicaci\u00c3\u00b3n de la actualizaci\u00c3\u00b3n."}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n ha sido agregado con \u00c3\u00a9xito - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "Los c\u00c3\u00b3digos de activaci\u00c3\u00b3n se han agregado correctamente."}, {"ERROR_ADD_ACTIVATION_CODE", "Agregar el error del c\u00c3\u00b3digo de activaci\u00c3\u00b3n: El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n ya existe - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n se ha eliminado con \u00c3\u00a9xito - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "Los c\u00c3\u00b3digos de activaci\u00c3\u00b3n se han eliminado correctamente."}, {"ERROR_DELETE_ACTIVATION_CODE", "Eliminar el error del c\u00c3\u00b3digo de activaci\u00c3\u00b3n: El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n no existe - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "Eliminar el error del c\u00c3\u00b3digo de activaci\u00c3\u00b3n: Los siguientes c\u00c3\u00b3digos de activaci\u00c3\u00b3n no se pueden eliminar - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "Se ha agregado el siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n a la base de datos de SonicWall GMS: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "El siguiente c\u00c3\u00b3digo de activaci\u00c3\u00b3n se ha quitado del grupo de c\u00c3\u00b3digos disponibles: "}, {"UPDATE_DB_MESSAGE", "El cambio se actualiz\u00c3\u00b3 correctamente en la base de datos de SonicWall GMS."}, {"FAILURE_UPDATE_DB_MESSAGE", "Error de actualizaci\u00c3\u00b3n: El cambio no se pudo actualizar correctamente en la base de datos de SonicWall GMS."}, {"NO_UNITS_FOR_REGISTRATION", "No hay unidades para registro"}, {"FREE_TRAIL_NOT_APPLIED", "Todas las unidades ya tienen una suscripci\u00c3\u00b3n o ninguna est\u00c3\u00a1 registrada"}, {"AV_FAILURE_MESSAGE", "No hay unidades disponibles para actualizaci\u00c3\u00b3n o para registro"}, {"AV_SUCCESS_MESSAGE", "Las tareas se iniciaron con \u00c3\u00a9xito para la actualizaci\u00c3\u00b3n, as\u00c3\u00ad como para el registro"}, {"AV_SUCCESS_UPGRADE", "Las tareas se iniciaron con \u00c3\u00a9xito para la actualizaci\u00c3\u00b3n"}, {"AV_NO_SUCCESS_REG", "No hay unidades disponibles para el registro"}, {"AV_SUCCESS_REG", "La tarea se ha iniciado correctamente para el registro"}, {"AV_NO_SUCCESS_UPGRADE", "No hay unidades disponibles para actualizar"}, {"TASK_SUCCESS_MESSAGE", "La tarea se ha iniciado correctamente"}, {"TASK_CMP_ERROR", "La contrase\u00c3\u00b1a CMP solo se puede cambiar para la unidad"}, {"TASK_ERROR_MESSAGE", "Las tareas no se iniciaron correctamente"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "No hay unidades disponibles para la operaci\u00c3\u00b3n de compartir la licencia."}, {"SGMS_EMAIL_BOTTOM_MSG1", "Desarrollado por "}, {"SGMS_EMAIL_BOTTOM_MSG2", " Versi\u00c3\u00b3n "}, {"SGMS_EMAIL_BOTTOM_MSG3", " Serie: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " Servidor: "}, {"FIRMWARE_DOWNLOADED", "Se ha descargado una copia nueva de firmware."}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " caduca muy pronto para los siguientes dispositivos.\nP\u00c3\u00b3ngase en contacto con el sector de ventas de SonicWall para comprar c\u00c3\u00b3digos de activaci\u00c3\u00b3n para la renovaci\u00c3\u00b3n de estas suscripciones."}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "Informaci\u00c3\u00b3n sobre la caducidad de la suscripci\u00c3\u00b3n."}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "No se encontraron caducidades."}, {"VERSION_MESSAGE", "N\u00c3\u00bamero de versi\u00c3\u00b3n de SonicWall GMS:"}, {"NUM_NODES_MESSAGE", "N\u00c3\u00bamero de nodos que se pueden gestionar con este SonicWall GMS:"}, {"PRODUCT_DESCRIPTION_MESSAGE", "Descripci\u00c3\u00b3n del producto GMS: "}, {"DATABASE_TYPE_MESSAGE", "Tipo de base de datos: "}, {"MODEL_TYPES_MESSAGE", "Cantidad de nodos y nombre del modelo: "}, {"NUM_AGENTS_MESSAGE", "Cantidad de agentes en el sistema: "}, {"AGENT_IP_MESSAGE", "Direcci\u00c3\u00b3n IP de los agentes: "}, {"UNKNOWN_MESSAGE", "Desconocido"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "BASE DE DATOS desconocida"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "Caracteres no v\u00c3\u00a1lidos [<,\\,:] en el nombre de la unidad."}, {"PM_NAME_KEYWORD", " es una palabra clave y no se puede utilizar para nombrar una unidad. Utilice otro nombre"}, {"PM_NAME_EXISTS_A", "Una unidad con el nombre \u00e2\u20ac\u0153"}, {"PM_NAME_EXISTS_B", "' ya existe "}, {"PM_UNKNOWN", "Desconocido"}, {"PM_UNKNOWN_UNREGISTERED", "Desconocido/No registrado"}, {"PM_UNREGISTERED", "No registrado"}, {"PM_YES", "S\u00c3\u00ad"}, {"PM_NO", "No"}, {"PM_ENABLED", "Activado"}, {"PM_DISABLED", "Desactivado"}, {"PM_NOTAVAILABLE", "No disponible"}, {"PM_UNLIMITED", "Ilimitado"}, {"PM_CURRENT", "Actual"}, {"PM_DEFAULT", "Predeterminado"}, {"PM_EXPIRED", "Caducado"}, {"PM_UP", "Activo"}, {"PM_DOWN", "Inactivo"}, {"PM_NOT_ACQUIRED", "No adquirido"}, {"PM_SINCE", " desde "}, {"PM_NONE", "Ninguno"}, {"PM_N_A", "N/D"}, {"PM_NO_LICENSE", "Sin licencia"}, {"PM_MODEL", "Modelo"}, {"PM_SERIAL_NUM", "N\u00c3\u00bamero de serie"}, {"PM_DOMAIN", "Dominio"}, {"PM_NUM_LAN_IPS", "Cantidad permitida de IP de LAN"}, {"PM_HA", "Alta disponibilidad"}, {"PM_DMZ_PORT", "Puerto DMZ"}, {"PM_NUM_WORKPORTS", "Cantidad permitida de IP de WorkPort "}, {"PM_HOMEPORT", "HomePort"}, {"PM_WLAN_PORT", "Puerto WLAN"}, {"PM_OPT_PORT", "Puerto OPT"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "Actualizaci\u00c3\u00b3n de VPN"}, {"PM_VPN_CLIENTS", "Clientes globales de VPN"}, {"PM_IPS", "Servicio de prevenci\u00c3\u00b3n de intrusiones"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "Antivirus de pasarela"}, {"PM_FIRMWARE_VERSION", "Versi\u00c3\u00b3n de firmware"}, {"PM_REGISTRATION_CODE", "C\u00c3\u00b3digo de registro"}, {"PM_CFS_SUB", "Lista/servicio de filtrado de contenido"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "Antivirus"}, {"PM_WARRANTY", "Garant\u00c3\u00ada extendida"}, {"PM_SW_STATUS", "Estado"}, {"PM_SW_MANAGEDINSTANCE", "Gestionado por instancia"}, {"PM_TASKS_PENDING", "Tareas pendientes"}, {"PM_LAST_LOG", "\u00c3\u0161ltima entrada de registro"}, {"PM_SAS_CONFIG_INFO", "Informaci\u00c3\u00b3n de configuraci\u00c3\u00b3n de SA"}, {"PM_SAS_DEFINED", "SA definidos"}, {"PM_SAS_ENABLED", "SA activados"}, {"PM_SAS_AVAILABLE", "SA disponibles"}, {"PM_SAS_REMAINING", "SA restantes"}, {"PM_SAS_INTERCONNECTED", "SA interconectados"}, {"PM_AGENT_ASSIGNED", "Agente asignado"}, {"PM_PRIMARY_AGENT", "Agente principal"}, {"PM_STANDBY_AGENT", "Agente en espera"}, {"PM_TUNNEL_MGMT", "Modo de administraci\u00c3\u00b3n"}, {"PM_FW_ADDED_TO_GMS", "Unidad agregada a SonicWall GMS el"}, {"PM_FW_UP_SINCE", "Unidad activa desde"}, {"PM_FW_DOWN_SINCE", "Unidad inactiva desde"}, {"PM_SW_IP", "IP de SonicWall"}, {"PM_TIME_ZONE", "Zona horaria"}, {"PM_SW_IN_SYSTEM", "en el sistema"}, {"PM_SW_IN_DMZ", "en el DMZ"}, {"PM_SW_IN_GROUP", "en el grupo"}, {"PM_SW_UNREGISTERED", "que no est\u00c3\u00a1n registrados"}, {"PM_SW_VPN_UPGRADE", "con actualizaci\u00c3\u00b3n de VPN"}, {"PM_SW_VPN_CLIENT", "con la actualizaci\u00c3\u00b3n de cliente VPN global"}, {"PM_SW_MSSP", "que sean compatibles con los MSSP (proveedores de servicios de seguridad gestionada)"}, {"PM_CFL_SUBSCRIPTION", "Lista/servicio de filtrado de contenido"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "Antivirus"}, {"PM_HGMS_SUBSCRIPTION", "Servicios en la nube"}, {"PM_SUPPORT_SUBSCRIPTION", "Soporte "}, {"PM_EXTENDED_WARRANTY", "Garant\u00c3\u00ada extendida"}, {"PM_UNITS_DOWN", "SonicWall que est\u00c3\u00a1n dadas de baja"}, {"PM_PENDING_TASKS", "SonicWall con tareas pendientes"}, {"PM_MANAGED_WITH_TUNNEL", "SonicWall administradas utilizando un t\u00c3\u00banel de administraci\u00c3\u00b3n"}, {"PM_TASK_SPOOLED", "La tarea est\u00c3\u00a1 en espera para cambiar el nombre de host."}, {"PM_RAVLIN_MODEL", "Modelo Ravlin"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/n\u00c3\u00bamero de serie"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "Versi\u00c3\u00b3n de firmware"}, {"PM_HW_VERSION", "Versi\u00c3\u00b3n de hardware"}, {"PM_ROM_VERSION", "Versi\u00c3\u00b3n de ROM"}, {"PM_SECURITY_ID", "ID de seguridad"}, {"PM_RAVLIN_STATUS", "Estado de Ravlin"}, {"PM_TASKS_PENDING", "Tareas pendientes"}, {"PM_AGENT_ASSIGNED", "Agente asignado"}, {"PM_RAVLINS_IN_NODE", "Ravlins en el nodo"}, {"PM_RAVLINS_DOWN", "Ravlins que est\u00c3\u00a1n dados de baja"}, {"PM_RAVLINS_PENDING_TASKS", "Ravlins con tareas pendientes"}, {"PM_FIX_UNIT_ERROR", "Error al intentar reparar la unidad "}, {"PM_MOD_UNIT_EXISTS", "Ya existe una unidad modificada con el n\u00c3\u00bamero de serie"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "Unidad modificada con el nombre "}, {"PM_MOD_UNIT_NAME_EXISTS_B", "ya existe "}, {"PM_ADD_ERR_PRIVILEGES", "ERROR: No tiene suficientes privilegios para agregar la unidad."}, {"PM_UNIT_EXISTS", "Ya existe una unidad con el n\u00c3\u00bamero de serie"}, {"PM_UNIT_NAME_EXISTS_A", "Unidad con el nombre "}, {"PM_UNIT_NAME_EXISTS_B", "ya existe en el dominio "}, {"PM_ADD_UNIT_ERR", "Se produjo un error al agregar la unidad a la base de datos de SonicWall."}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "Introduzca un n\u00c3\u00bamero de serie v\u00c3\u00a1lido.\nEl n\u00c3\u00bamero de serie debe ser de "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "caracteres de longitud."}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "El n\u00c3\u00bamero de serie debe contener solamente caracteres hexadecimales."}, {"PM_GET_PREFS_ERR", "Error al recuperar el archivo de preferencias."}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "La unidad no tiene licencia para usar los servicios en la nube.\nObtenga la licencia de cualquiera de los siguientes servicios de MySonicWall.com antes de agregar la unidad a "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " no puede obtener informaci\u00c3\u00b3n de las licencias de esta unidad.\nVuelva a intentarlo m\u00c3\u00a1s tarde."}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " no puede comunicarse con MySonicWall.com para verificar las licencias de esta unidad.\nVuelva a intentarlo m\u00c3\u00a1s tarde."}, {"PM_LICENSED", "Con licencia"}, {"PM_NOT_LICENSED", "Sin licencia"}, {"PM_IS_MSSP", "Unidad de MSSP"}, {"PM_SYSLOG_FORMAT", "Formato de registro de sistema"}, {"PM_STATUS_MSG_ONLY", "Solo mensajes de estado"}, {"PM_SYSLOG_IN_UTC", "Registros en UTC"}, {"PM_VIEWPOINT_MODE", "Modo analizador activado"}, {"PM_NAME_RESOLUTION", "Modo de resoluci\u00c3\u00b3n de nombre"}, {"PM_ACCESS_MODE", "Modo de acceso"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS, luego NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"PM_CONNECTWISE_STATUS", "[ES] Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[ES] Not Available"}, {"VM_PATCH_DETECTED_MSG1", " ha detectado nuevas actualizaciones de software disponibles"}, {"VM_PATCH_DETECTED_MSG2", "Error al enviar un correo electr\u00c3\u00b3nico de admin sobre informaci\u00c3\u00b3n de actualizaci\u00c3\u00b3n del nuevo software. No se encuentra configurado el correo electr\u00c3\u00b3nico SMTP o admin."}, {"VM_PATCH_DETECTED_MSG3", " Actualizaciones de software disponibles\n\n"}, {"VM_NEW", "Nuevo "}, {"VM_PATCH_DETECTED_MSG4", "Para consultar las notas de la versi\u00c3\u00b3n y descargar informaci\u00c3\u00b3n, inicie sesi\u00c3\u00b3n en su cuenta MySonicWall.com</a> <a href=https://www.mysonicwall.com>"}, {"VM_SCREEN", " Pantalla."}, {"VM_PATCH_DETECTED_MSG5", " La actualizaci\u00c3\u00b3n de la revisi\u00c3\u00b3n del componente se comprob\u00c3\u00b3 correctamente. Se encontraron nuevas actualizaciones de componentes. Correo electr\u00c3\u00b3nico enviado a admin."}, {"VM_PATCH_DETECTED_MSG6", "Error al descargar la actualizaci\u00c3\u00b3n de la revisi\u00c3\u00b3n "}, {"VM_FOR", " para "}, {"VM_ON", " en "}, {"VM_PATCH_DETECTED_MSG7", " descarga de revisi\u00c3\u00b3n de componente abortada. Ya existe un archivo de revisi\u00c3\u00b3n: "}, {"VM_PATCH_DETECTED_MSG8", " descarga de revisi\u00c3\u00b3n de componente correcta: "}, {"VM_PATCH_DETECTED_MSG9", "Error al escribir el archivo de revisi\u00c3\u00b3n "}, {"VM_PATCH_DETECTED_MSG10", " en el disco."}, {"SDM_UPDATE_SUCCESS", "La actualizaci\u00c3\u00b3n se realiz\u00c3\u00b3 con \u00c3\u00a9xito."}, {"SDM_UPDATE_FAILURE", "Error de actualizaci\u00c3\u00b3n."}, {"SDM_UPDATE_SPECIAL_FAILURE", "No se pudieron crear tareas para eliminar SA."}, {"SDM_UPDATE_INVALID", "Solicitud de actualizaci\u00c3\u00b3n no v\u00c3\u00a1lida."}, {"SDM_SCREEN_ID_INVALID", "el ID de la pantalla no es v\u00c3\u00a1lido"}, {"SDM_READY", "Listo"}, {"SDM_CGI_ERROR", "Error al obtener el CGI_NAME para "}, {"SDM_DEFAULT_ERROR", "Error al obtener el DEFAULT_VALUE (VALOR_PREDETERMINADO) para "}, {"SDM_INVALID_TARGET", "Error: El grupo de origen o destino no es v\u00c3\u00a1lido."}, {"SDM_METADATA_ERROR", "Error al obtener los metadatos de "}, {"SDM_DB_ERROR", "Se produjo un error al acceder a la base de datos de SonicWall GMS."}, {"SDM_NOVPN_ERROR", "VPN no activada en esta unidad. Error al crear la VPN en la unidad "}, {"SDM_NO_TARGET_VPN_ERROR", "VPN no activada en el destino. Error al crear la VPN en la unidad "}, {"SDM_NOSAS_ERROR", "No quedan SA disponibles en esta unidad. Error al crear la VPN en la unidad "}, {"SDM_NO_TARGET_SAS_ERROR", "No quedan SA disponibles en el destino. Error al crear la VPN en la unidad "}, {"SDM_NO_UNITS_ERROR", "No se crearon tareas."}, {"SDM_NO_3RDPARTYCERTS_ERROR", "Se encontraron combinaciones de certificados de CA y locales de terceros no v\u00c3\u00a1lidas. Omisi\u00c3\u00b3n de VPN SA en la unidad "}, {"SDM_DHCP_ERROR", "El direccionamiento din\u00c3\u00a1mico est\u00c3\u00a1 activado en unidades de origen y destino, por lo que no se puede crear SA. Omisi\u00c3\u00b3n de la creaci\u00c3\u00b3n de VPN SA. "}, {"SDM_NOAES_ERROR", "AES no disponibles en esta unidad. Error al crear la VPN en la unidad "}, {"SDM_NO_TARGET_AES_ERROR", "AES no disponibles en destino. Error al crear la VPN en la unidad "}, {"SDM_DELETE_SUCCESS", "La eliminaci\u00c3\u00b3n se realiz\u00c3\u00b3 con \u00c3\u00a9xito. "}, {"SDM_DELETE_FAILURE", "Error al eliminar "}, {"SDM_AGENTNAME_INVALID", "Caracteres no v\u00c3\u00a1lidos [<,\\,:,',@,#,*,$] in Agent name."}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "Error en la creaci\u00c3\u00b3n de la tarea de VPNS SA interconectados mejorados"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "Error en la actualizaci\u00c3\u00b3n del grupo de "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "VPN SA interconectados mejorados "}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "VPN SA interconectados est\u00c3\u00a1ndares "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "VPN SA no interconectados mejorados"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "VPN SA no interconectados est\u00c3\u00a1ndares"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "Omisi\u00c3\u00b3n de la creaci\u00c3\u00b3n de SA para esta unidad, ya que la versi\u00c3\u00b3n de firmware en esta unidad no es compatible con el tipo de interfaz de t\u00c3\u00banel"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "Tarea programada para ejecutarse en"}, {"PASSWORD_CHANGED", "La contrase\u00c3\u00b1a de SonicWall GMS se modific\u00c3\u00b3 correctamente."}, {"PASSWORD_NOT_CHANGED_A", "La contrase\u00c3\u00b1a anterior especificada es incorrecta. <BR>"}, {"PASSWORD_NOT_CHANGED_B", " Contrase\u00c3\u00b1a sin cambios."}, {"PASSWORD_NOT_CHANGED", "La contrase\u00c3\u00b1a anterior especificada no es correcta. No se modific\u00c3\u00b3 la contrase\u00c3\u00b1a."}, {"LOGS_PASSWD_CHANGED", "La contrase\u00c3\u00b1a de inicio de sesi\u00c3\u00b3n de los usuarios se ha modificado correctamente "}, {"LOGS_PASSWD_NOT_CHANGED", "El sistema no pudo autenticar al usuario para modificar la contrase\u00c3\u00b1a de inicio de sesi\u00c3\u00b3n "}, {"LOGS_ADDED_NEW_USER", "Se agreg\u00c3\u00b3 un usuario nuevo a la base de datos de SonicWall GMS: "}, {"LOGS_ADDED_NEW_USER_TYPE", "Se agreg\u00c3\u00b3 un tipo usuario nuevo a la base de datos de SonicWall GMS: "}, {"LOGS_DELETED_USER", "Se elimin\u00c3\u00b3 el usuario y la informaci\u00c3\u00b3n correspondiente de la base de datos de SonicWall GMS: "}, {"LOGS_DELETED_GROUP", "El siguiente grupo personalizado y todas las vistas realizadas con este grupo personalizado se eliminaron de la base de datos de SonicWall GMS: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "Valor del atributo personalizado ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") debe contener solamente caracteres alfanum\u00c3\u00a9ricos"}, {"LOGS_ADD_CUSTOM_GROUP", "Se agreg\u00c3\u00b3 el siguiente Nombre de grupo personalizado/Valor predeterminado al sistema: "}, {"LOGS_MOD_CUSTOM_GROUP", "Se modific\u00c3\u00b3 el siguiente Nombre de grupo personalizado/Valor predeterminado: "}, {"LOGS_DEL_CUSTOM_GROUP", "Se elimin\u00c3\u00b3 el siguiente Grupo personalizado del sistema: "}, {"READY", "Listo"}, {"NAV_OF", " de "}, {"NAV_PREVIOUS", "Anterior"}, {"NAV_NEXT", "Siguiente"}, {"NAV_DISPLAYING", "Visualizaci\u00c3\u00b3n"}, {"NAV_FIREWALLS", "Firewall(s)"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "No tiene los privilegios necesarios para actualizar en esta pantalla."}, {"ACT_WRONG_FILE_FORMAT", "Error: Formato de archivo incorrecto, no se pudieron agregar los c\u00c3\u00b3digos."}, {"AUTH_INVALID_PARAMS", "Par\u00c3\u00a1metros no v\u00c3\u00a1lidos, vuelva a intentarlo"}, {"AUTH_AUTHENTICATE", "Autenticar"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "ha transcurrido el tiempo m\u00c3\u00a1ximo para el n\u00c3\u00bamero aleatorio de inicio de sesi\u00c3\u00b3n"}, {"AUTH_LOGIN_TIMEOUT", "Ha transcurrido el tiempo m\u00c3\u00a1ximo de la p\u00c3\u00a1gina de inicio de sesi\u00c3\u00b3n, int\u00c3\u00a9ntelo de nuevo"}, {"AUTH_LOGIN_FAILURE", "Error de inicio de sesi\u00c3\u00b3n, int\u00c3\u00a9ntelo de nuevo"}, {"AUTH_LOGIN_FAILURE_LOG", "error de inicio de sesi\u00c3\u00b3n"}, {"NO_DOMAIN_SPECIFIED", "No se ha especificado un nombre de dominio para iniciar sesi\u00c3\u00b3n"}, {"SPECIFY_DOMAIN", "Especifique un nombre de dominio para iniciar sesi\u00c3\u00b3n"}, {"INVALID_IP", "[ES]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "Dominio no v\u00c3\u00a1lido. Especifique un nombre de dominio v\u00c3\u00a1lido"}, {"INVALID_ALIAS_MSG", "Alias no v\u00c3\u00a1lido. Especifique un alias v\u00c3\u00a1lido"}, {"REMOTE_SUCCESSFUL_LOGIN", "El usuario inici\u00c3\u00b3 sesi\u00c3\u00b3n en el sistema correctamente: "}, {"TWOFA_FAILED_LOGIN_MSG", "[ES]Invalid Authentication Code. Please enter valid Authentication code. (Make sure that your mobile time is synced to your network time.) "}, {"TWOFA_EMERGENCY_CODE_RESET_MSG", "[ES]EMERGENCY Code Used, 2FA RESET for user : "}, {"REMOTE_FAILED_LOGIN", "Error de autenticaci\u00c3\u00b3n remota del usuario: "}, {"XML_REMOTE_FAILED_LOGIN", "XML basado en un error de autenticaci\u00c3\u00b3n remota del usuario: "}, {"NEW_USER_ADDED", "Nuevo usuario agregado: "}, {"TO_USER_TYPE", "tipo de usuario: "}, {"CLICK_TO_TRY_AGAIN", "Haga clic aqu\u00c3\u00ad para intentarlo de nuevo"}, {"USER_LOCKED_OUT", "El usuario ha sido bloqueado, p\u00c3\u00b3ngase en contacto con su administrador para obtener detalles"}, {"USER_DISABLED", "La cuenta de usuario est\u00c3\u00a1 desactivada, p\u00c3\u00b3ngase en contacto con su administrador para obtener detalles"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "Error de autenticaci\u00c3\u00b3n remota. P\u00c3\u00b3ngase en contacto con su administrador GMS."}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "Error de autenticaci\u00c3\u00b3n remota. P\u00c3\u00b3ngase en contacto con su administrador GMS o intente de nuevo."}, {"LDAP_AUTH_FAILED", "Error de autenticaci\u00c3\u00b3n remota"}, {"LDAP_USER_NOT_FOUND", "Usuario no encontrado o inexistente en el directorio"}, {"LDAP_INVALID_CREDENTIALS", "Error de autenticaci\u00c3\u00b3n remota: Credenciales no v\u00c3\u00a1lidas"}, {"LDAP_COMMUNICATION_ERROR", "No es posible comunicarse con el directorio o el servicio de nombres"}, {"LDAP_ANONYMOUS_BIND_SET", "AnonymousBind se establece como permitido para el dominio "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "Compruebe si el servidor remoto permite Anonymous Binds (enlaces an\u00c3\u00b3nimos)."}, {"LDAP_INVALID_GROUPS_SPECIFIED", "Grupos de directorio especificados no v\u00c3\u00a1lidos. P\u00c3\u00b3ngase en contacto con su administrador GMS."}, {"LDAP_INVALID_GROUP_MEMBER", "El usuario no es un miembro de los grupos de directorio permitidos."}, {"RADIUS_UNKNOWN_HOST", "Host del servidor RADIUS desconocido."}, {"RADIUS_CONNECTION_TIMEOUT", "Ha transcurrido el tiempo de espera m\u00c3\u00a1ximo de la conexi\u00c3\u00b3n con el servidor remoto RADIUS"}, {"RADIUS_FAILED_LOGIN", "Error de autenticaci\u00c3\u00b3n. Credenciales no v\u00c3\u00a1lidas."}, {"RADIUS_EXCEPTION", "Ocurri\u00c3\u00b3 una excepci\u00c3\u00b3n RADIUS."}, {"RADIUS_INVALID_GROUP_MEMBER", "El usuario no es un miembro de los grupos RADIUS permitidos."}, {"PWD_CHANGE_SCREEN", "Cambiar contrase\u00c3\u00b1a."}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "Cambiar la contrase\u00c3\u00b1a, ya que la longitud no se encuentra dentro el rango permitido: de 7 a 15 caracteres."}, {"PWD_VALIDATION_FAILURE", "Cambiar la contrase\u00c3\u00b1a, ya que la longitud no puede exceder los 15 caracteres."}, {"PWD_EXPIRATION", "La contrase\u00c3\u00b1a se debe modificar cada {0} d\u00c3\u00adas."}, {"PWD_CHANGE_NEXT_LOGIN", "Cambiar la contrase\u00c3\u00b1a por orden del administrador."}, {"PASSWORD_EXISTS", "[ES]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[ES]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[ES]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "No se pudo leer el archivo de licencia"}, {"CUI_UPGRADE_SUCCESS", "Actualizaci\u00c3\u00b3n realizada con \u00c3\u00a9xito."}, {"CUI_UPGRADE_FAIL", "Error en la actualizaci\u00c3\u00b3n: "}, {"CUI_SYNCH_SUCCESS", "Sincronizaci\u00c3\u00b3n realizada con \u00c3\u00a9xito"}, {"CUI_SYNCH_FAIL", "Error en la sincronizaci\u00c3\u00b3n: "}, {"CUI_PRORATE_SUCCESS", "La solicitud de prorrateo se ha realizado correctamente"}, {"CUI_PRORATE_FAIL", "Error en la solicitud de prorrateo: "}, {"CUI_CHANGE_PW_SUCCESS", "\u00c3\u2030xito. Contrase\u00c3\u00b1a aceptada por MySonicWall.com."}, {"CUI_CHANGE_PW_FAIL", "Error. La contrase\u00c3\u00b1a no fue aceptada por MySonicWall.com: "}, {"CUI_EMAIL_SUCCESS", "El formulario de soporte t\u00c3\u00a9cnico se envi\u00c3\u00b3 por correo electr\u00c3\u00b3nico al Centro de asistencia de SonicWall GMS."}, {"CUI_EMAIL_FAIL", "Ocurri\u00c3\u00b3 un problema al enviar el informe de soporte t\u00c3\u00a9cnico al Centro de asistencia de SonicWall GMS.<br>Vuelva a intentarlo m\u00c3\u00a1s tarde."}, {"CUI_SESSION_TERMINATED", " La sesi\u00c3\u00b3n finaliz\u00c3\u00b3 correctamente."}, {"CUI_SESSIONS_TERMINATED", " las sesiones se han terminado con \u00c3\u00a9xito."}, {"CUI_NO_AGENTS", "No se encontraron agentes."}, {"CUI_FILTER_ADDED", "Se agreg\u00c3\u00b3 correctamente un filtro nuevo "}, {"DIAG_DIAG_REQUEST_A", "La solicitud de diagn\u00c3\u00b3stico realizada en el "}, {"DIAG_DIAG_REQUEST_B", " ha sido enviada."}, {"DIAG_DELETE_SUCCESS", "Eliminaci\u00c3\u00b3n realizada con \u00c3\u00a9xito."}, {"DIAG_EMAIL_SUCCESS", "Env\u00c3\u00ado por correo electr\u00c3\u00b3nico realizado con \u00c3\u00a9xito."}, {"DIAG_UNIT_UNKNOWN", "'El nombre de la unidad no se conoce'"}, {"DIAG_UNIT", "'Unidad' "}, {"VPN_DUPLICATE_UFI", "Error de actualizaci\u00c3\u00b3n. El identificador \u00c3\u00banico del firewall no es \u00c3\u00banico en SonicWall GMS."}, {"NO_LOGS_MESSAGE", "No se encontraron registros."}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "No se encontraron registros para los criterios de b\u00c3\u00basqueda proporcionados."}, {"LOG_START_SEARCH", "Empezar una nueva b\u00c3\u00basqueda"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "Su consulta para {0, n\u00c3\u00bamero, entero} registros es demasiado extensa. Limite sus criterios de b\u00c3\u00basqueda."}, {"SQL_EXCEPTION_ERROR_MESSAGE", "Hubo un error en la conexi\u00c3\u00b3n de la base de datos. Aseg\u00c3\u00barese de que la base de datos est\u00c3\u00a9 disponible y/o limite los criterios de b\u00c3\u00basqueda."}, {"UNKNOWN_EXCEPTION_MESSAGE", "Hubo un error al ejecutar su b\u00c3\u00basqueda. Aseg\u00c3\u00barese de que la base de datos est\u00c3\u00a9 disponible y/o limite los criterios de b\u00c3\u00basqueda."}, {"LOG_NEXT", "Siguiente"}, {"LOG_PREVIOUS", "Anterior"}, {"LOG_UPDATE_SUCCESS", "La actualizaci\u00c3\u00b3n fue un \u00c3\u00a9xito"}, {"LOG_OF", " de "}, {"LOG_OF", " de "}, {"PREFS_SYNCHRONIZE_STARTED", "La sincronizaci\u00c3\u00b3n de la informaci\u00c3\u00b3n con el dispositivo se inici\u00c3\u00b3 con \u00c3\u00a9xito."}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "Error al sincronizar la informaci\u00c3\u00b3n del dispositivo, no se pudo iniciar la sesi\u00c3\u00b3n del dispositivo."}, {"MON_NO_PRIVILEGES", "No tiene privilegios suficientes para esta pantalla."}, {"MON_SYNC_TASK_CREATED", "Tarea de sincronizaci\u00c3\u00b3n creada con \u00c3\u00a9xito."}, {"MON_SYNC_TASK_FAIL", "Error al crear tarea de sincronizaci\u00c3\u00b3n"}, {"MON_RENEGOTIATE_TASK_CREATED", "Tareas de renegociaci\u00c3\u00b3n creadas con \u00c3\u00a9xito"}, {"MON_RENEGOTIATE_FAILED", "Error al crear tarea de renegociaci\u00c3\u00b3n"}, {"MON_NO_SELECTED", "No hay t\u00c3\u00baneles seleccionados para renegociar"}, {"MON_REFRESH_CREATED", "Tareas de estad\u00c3\u00adsticas actualizadas creadas con \u00c3\u00a9xito"}, {"MON_REFRESH_FAIL", "Error al crear la tarea de actualizaci\u00c3\u00b3n de las estad\u00c3\u00adsticas de t\u00c3\u00banel"}, {"MON_NO_SELECTED_REFRESH", "No hay t\u00c3\u00baneles seleccionados para actualizar las estad\u00c3\u00adsticas"}, {"MON_UPDATE_SUCCESS", "La actualizaci\u00c3\u00b3n fue un \u00c3\u00a9xito"}, {"MON_UPDATE_FAIL", "Error de actualizaci\u00c3\u00b3n."}, {"MON_NO_MONITORING", "Los t\u00c3\u00baneles no pueden ser supervisados."}, {"MON_NAME", "Nombre"}, {"MON_GATEWAY", "Pasarela"}, {"MON_LAST_UPDATED", "\u00c3\u0161ltima actualizaci\u00c3\u00b3n"}, {"MON_DEST_ADDR_RANGE", "Intervalo de direcciones de destino"}, {"MON_LOCAL_ADDR_RANGE", "Intervalo de direcciones locales"}, {"MON_NO_TUNNELS_FOUND", "No se encontraron t\u00c3\u00baneles."}, {"MON_TITLE", "Estad\u00c3\u00adsticas del t\u00c3\u00banel de VPN"}, {"MON_DESCRIPTION", "Descripci\u00c3\u00b3n"}, {"MON_VALUE", "Valor"}, {"MON_CREATE_TIME", "Hora de creaci\u00c3\u00b3n"}, {"MON_VALID_UNTIL", "T\u00c3\u00banel v\u00c3\u00a1lido hasta"}, {"MON_PACKETS_IN", "Paquetes de entrada"}, {"MON_PACKETS_OUT", "Paquetes de salida"}, {"MON_BYTES_IN", "Bytes de entrada"}, {"MON_BYTES_OUT", "Bytes de salida"}, {"MON_FRAGMENTS_IN", "Paquetes fragmentados de entrada"}, {"MON_FRAGMENTS_OUT", "Paquetes fragmentados de salida"}, {"MON_TUNNEL_ACTIVE", "El t\u00c3\u00banel est\u00c3\u00a1 activo"}, {"REG_NO_PERMISSION", "No tiene privilegios de actualizaci\u00c3\u00b3n en esta pantalla"}, {"REG_ERROR_RETRIEVING_COUNT", "Error al recuperar el n\u00c3\u00bamero de dispositivos registrados/no registrados"}, {"REG_CURRENT", "Actual"}, {"REG_EXPIRED", "Caducado"}, {"REG_NO_LICENSE", "Sin licencia"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "No se pudo cargar la Imagen del firmware"}, {"TASKS_SUCCESSFUL_DELETION", "Las tareas se han eliminado correctamente de la base de datos."}, {"TASKS_ERROR_DELETION", "Error: No se pudieron eliminar las tareas."}, {"TASKS_EXECUTION_SET", "Las tareas se han configurado correctamente para su ejecuci\u00c3\u00b3n inmediata."}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "Intento no autorizado para ejecutar la tarea"}, {"TASKS_ERROR_EXECUTION", "Error: No se pudieron programar las tareas para su ejecuci\u00c3\u00b3n."}, {"TASK_DELETED_LOG_MESSAGE", "La tarea siguiente ha sido eliminada por el usuario "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "Intento no autorizado para eliminar la tarea"}, {"NO_TASKS_MESSAGE", "No se han encontrado tareas."}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "No se encontraron tareas para los criterios de b\u00c3\u00basqueda proporcionados."}, {"TASKS_RESCHEDULED", "Las tareas han sido reprogramadas con \u00c3\u00a9xito."}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "Intento no autorizado para reprogramar la tarea"}, {"TASKS_ERROR_RESCHEDULE", "Error: No se pudieron reprogramar las tareas."}, {"IMMEDIATE_STRING", "INMEDIATO"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "Local"}, {"AGENT_STRING", "Agente"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "La tarea siguiente ha sido reprogramada por el usuario "}, {"FROM_LOG_MESSAGE", " de "}, {"TO_LOG_MESSAGE", " a "}, {"IMMEDIATE_LOG_MESSAGE", "Ejecuci\u00c3\u00b3n inmediata"}, {"REG_PASSWORD_SUCCESS", "\u00c3\u2030xito. Contrase\u00c3\u00b1a aceptada por MySonicWall.com. Presione actualizar para continuar."}, {"REG_PASSWORD_FAIL", "Error. La contrase\u00c3\u00b1a no fue aceptada por MySonicWall.com: "}, {"LOGIN_MESSAGE", "Inicie una sesi\u00c3\u00b3n"}, {"LOGIN_DEFAULT_MESSAGE", "Use Usuario:'admin' y Contrase\u00c3\u00b1a:'contrase\u00c3\u00b1a' predeterminados para iniciar sesi\u00c3\u00b3n"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "Use Usuario:'admin' y Contrase\u00c3\u00b1a: igual que / dispositivo predeterminados"}, {"LOGIN_DEMO_MESSAGE", "Inicie sesi\u00c3\u00b3n usando Usuario:'demo' y Contrase\u00c3\u00b1a:'contrase\u00c3\u00b1a'"}, {"SETTINGSVPS_CHANGED", "La configuraci\u00c3\u00b3n de su analizador se ha actualizado."}, {"SETTINGS_CHANGED", "Se actualiz\u00c3\u00b3 su configuraci\u00c3\u00b3n."}, {"LOGS_USER_FORCEDOUT", " ha obligado al siguiente usuario a cerrar sesi\u00c3\u00b3n en el sistema: "}, {"SLAVE_STATE_CHANGED_MESSAGE", "El agente se ha configurado correctamente para cambiar su estado."}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "Intento fallido: El estado del agente no se pudo cambiar."}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "Los par\u00c3\u00a1metros del agente se han actualizado correctamente."}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "Los par\u00c3\u00a1metros del agente no se pudieron actualizar correctamente."}, {"SCHEDULER_UP_STATE", "Activo"}, {"SCHEDULER_DOWN_STATE", "Inactivo"}, {"SCHEDULER_UNDETERMINED_STATE", "Indeterminado"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "No tiene permiso para actualizar las propiedades del agente."}, {"SMTPSERVER_INVALID", "Direcci\u00c3\u00b3n de servidor SMTP no v\u00c3\u00a1lida."}, {"APPLIANCE_MANAGE_FAILED", "Se produjo un error al cambiar las preferencias de administraci\u00c3\u00b3n para los dispositivos."}, {"EMPTY_SMTP_PWD", "El campo Contrase\u00c3\u00b1a SMTP no puede estar vac\u00c3\u00ado"}, {"TREE_AGENT_STARTED", "El agente principal debe estar en estado de inicio para poder reasignar agentes"}, {"TREE_STANDBY_STARTED", "El agente en espera debe estar en estado de inicio para poder reasignar agentes"}, {"TREE_LICENSE_EXCEEDED", "No tiene licencia para agregar ning\u00c3\u00ban otro dispositivo bajo gesti\u00c3\u00b3n."}, {"TREE_IP_EMPTY", "El IP no puede estar vac\u00c3\u00ado. Proporcione una direcci\u00c3\u00b3n IP v\u00c3\u00a1lida"}, {"TREE_AUTH_FAIL", "Error en la autenticaci\u00c3\u00b3n del dispositivo; compruebe las configuraciones."}, {"TREE_NO_RESPONSE", "El dispositivo es inalcanzable; compruebe las configuraciones."}, {"TREE_FIREWALL_NOT_LICENSED", "Dispositivo sin licencia para el analizador."}, {"TREE_FIREWALL_STATE_ERROR", "Error al recuperar la informaci\u00c3\u00b3n del estado del dispositivo.\nEl firmware del dispositivo necesitar\u00c3\u00a1 ser actualizado."}, {"TREE_MODEL_FAIL", "Error al recuperar la informaci\u00c3\u00b3n del modelo"}, {"TREE_FIRMWARE_VERSION_FAIL", "Error al recuperar la versi\u00c3\u00b3n de firmware"}, {"TREE_UNMATCHED_SERIAL", "Los n\u00c3\u00bameros de serie no concuerdan."}, {"TREE_TIMEZONE_FAIL", "Error al recuperar la zona horaria"}, {"TREE_UTC_FAIL", "Los mensajes de registro no est\u00c3\u00a1n en formato UTC. Cambie el formato de fecha y hora del dispositivo a UTC; de lo contrario, los informes generados mostrar\u00c3\u00a1n una hora err\u00c3\u00b3nea."}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "Active la opci\u00c3\u00b3n 'Activar configuraci\u00c3\u00b3n de ViewPoint' en Registro\u00c2\u00a0>\u00c2\u00a0pantalla ViewPoint. Esta configuraci\u00c3\u00b3n cambiar\u00c3\u00a1 lo siguiente:\n\t1. Enviar registro de sistema en UTC\n\t2. Establecer 'Filtro de redundancia de evento de registro de sistema' (segundos) en 0\n\t3. Establecer 'Formato de registro de sistema' en Predeterminado"}, {"TREE_NO_SCHEDULER", "No se encontr\u00c3\u00b3 programador en la direcci\u00c3\u00b3n IP especificada, la unidad no se ha agregado"}, {"TREE_GET_PREFS_ERR", "Error al recuperar el archivo de preferencias."}, {"TREE_FIREWALL_NOT_REGISTERED", "Este dispositivo no ha sido registrado.  Visite la p\u00c3\u00a1gina MySonicWall.com y registre el dispositivo antes de agregarlo al analizador."}, {"TREE_BACKEND_COMM_FAILURE", "El Analizador no puede comunicarse con MySonicWall.com para verificar la licencia.\nRevise la conexi\u00c3\u00b3n a la red; el Analizador debe ser capaz de comunicarse con MySonicWall.com. "}, {"SU_DB_SIZE_EMAILBODY1", "Los tama\u00c3\u00b1os de la base de datos actual son los siguientes: \n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\nNota: La limitaci\u00c3\u00b3n del tama\u00c3\u00b1o m\u00c3\u00a1ximo de la base de datos es de 2\u00c2\u00a0GB \n\n \nEl siguiente cambio en la configuraci\u00c3\u00b3n afectar\u00c3\u00a1 el tama\u00c3\u00b1o total del uso de la base de datos:\n\tReducir la configuraci\u00c3\u00b3n del n\u00c3\u00bamero de d\u00c3\u00adas a \"Days To Store Raw Data\" en Panel de consola\u00c2\u00a0->\u00c2\u00a0Informes\u00c2\u00a0->\u00c2\u00a0pantalla de configuraci\u00c3\u00b3n.\n\tReducir el n\u00c3\u00bamero o los d\u00c3\u00adas a  \"Days To Store Summarized Data\" configurando en Panel de consola\u00c2\u00a0->\u00c2\u00a0Informes\u00c2\u00a0->\u00c2\u00a0pantalla de res\u00c3\u00bamenes."}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\nNota: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "La limitaci\u00c3\u00b3n del tama\u00c3\u00b1o m\u00c3\u00a1ximo de la base de datos es de 2\u00c2\u00a0GB \n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\nEl siguiente cambio en la configuraci\u00c3\u00b3n afectar\u00c3\u00a1 el tama\u00c3\u00b1o total del uso de la base de datos:\n\tReducir la configuraci\u00c3\u00b3n del n\u00c3\u00bamero de d\u00c3\u00adas a \"Days To Store Raw Data\" en Panel de consola\u00c2\u00a0->\u00c2\u00a0Informes\u00c2\u00a0->\u00c2\u00a0pantalla de configuraci\u00c3\u00b3n.\n\tReducir el n\u00c3\u00bamero o los d\u00c3\u00adas a  \"Days To Store Summarized Data\" configurando en Panel de consola\u00c2\u00a0->\u00c2\u00a0Informes\u00c2\u00a0->\u00c2\u00a0pantalla de res\u00c3\u00bamenes."}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "ADVERTENCIA:\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "Compruebe si no ha configurado su base de datos sobre un plan de copia de seguridad de mantenimiento o si fall\u00c3\u00b3 un plan existente para borrar los registros.\nSi no configura su base de datos en un plan de mantenimiento, sus registros de transacciones continuar\u00c3\u00a1n creciendo y llenar\u00c3\u00a1n todo el disco r\u00c3\u00adgido, \ny en ese momento su base de datos y el sistema GMS no van a funcionar. En segundo lugar, en caso de que su base de datos se bloquee, no va a poder restaurar su \nbase de datos a una \u00c3\u00baltima copia de seguridad conocida."}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: Comprobaci\u00c3\u00b3n de estado de la base de datos"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "Error al ingresar a la unidad para la validaci\u00c3\u00b3n de la licencia para el dispositivo con serie "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", ". Aseg\u00c3\u00barese de que ninguna de las configuraciones necesarias para el inicio de sesi\u00c3\u00b3n se haya cambiado en forma local en el dispositivo. Utilice Modificar unidad para reflejar los cambios en el analizador", "Validaci\u00c3\u00b3n de la licencia por el analizador"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "Validaci\u00c3\u00b3n de la licencia por el analizador"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "Inicio de sesi\u00c3\u00b3n en su dispositivo "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " por error en la validaci\u00c3\u00b3n de la licencia y ha superado el per\u00c3\u00adodo de gracia. Aseg\u00c3\u00barese de que ninguna de las configuraciones necesarias para el inicio de sesi\u00c3\u00b3n se haya cambiado en forma local en el dispositivo. Utilice Modificar unidad para reflejar los cambios en el analizador"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "\u00c2\u00a1La licencia del analizador ha caducado!"}, {"SU_LIC_EXPIRED_BODY1", "Su dispositivo "}, {"SU_LIC_EXPIRED_BODY2", " no tiene licencia para el analizador. Compruebe las configuraciones en el dispositivo"}, {"SU_LIC_EXPIRED_SUBJECT", "\u00c2\u00a1La licencia del analizador ha caducado!"}, {"LOGVIEW_WRONG_START_DT", "Formato de fecha de inicio incorrecto. El formato de la fecha debe ser mm/dd/aaaa."}, {"LOGVIEW_WRONG_END_DT", "Formato de fecha de finalizaci\u00c3\u00b3n incorrecto. El formato de la fecha debe ser mm/dd/aaaa."}, {"LOGVIEW_ENDDT_LESS_STARTDT", "Fecha de finalizaci\u00c3\u00b3n anterior a la fecha de inicio. Introduzca fechas de inicio y de finalizaci\u00c3\u00b3n v\u00c3\u00a1lidas."}, {"LOGVIEW_MSGS_PERSCRN", "Mensajes por pantalla"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "Usted est\u00c3\u00a1 a punto de exportar {0, n\u00c3\u00bamero, entero} entradas de registro. \u00c2\u00bfEst\u00c3\u00a1 seguro de que desea hacer esto? Si no es as\u00c3\u00ad, cancele este cuadro de di\u00c3\u00a1logo y limite sus criterios de b\u00c3\u00basqueda."}, {"LOGVIEW_GOTO_MSG", "Ir a N\u00c3\u00bamero de mensaje"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "Mostrar mensajes por pantalla:"}, {"LOGVIEW_RANGE", "(Intervalo: 10-100)"}, {"LOGVIEW_COL_DT", "Fecha"}, {"LOGVIEW_COL_MSG", "Mensaje"}, {"LOGVIEW_COL_SEV", "Gravedad"}, {"LOGVIEW_COL_USER", "Usuario GMS"}, {"LOGVIEW_COL_CO", "Pedido de cambio"}, {"LOGVIEW_COL_IP", "IP del usuario"}, {"LOGVIEW_SEARCH_RESULTS", "Resultados de la b\u00c3\u00basqueda"}, {"LOGVIEW_SEARCH_CRITERIA", "Criterios de b\u00c3\u00basqueda"}, {"LOGVIEW_EXPORT_LOGS", "Exportar registros"}, {"LOGVIEW_CLEAR_LOGS", "Borrar b\u00c3\u00basqueda"}, {"LOGVIEW_SEARCH_LOGS", "Iniciar b\u00c3\u00basqueda"}, {"LOGVIEW_MATCH_CASE", "Respetar may\u00c3\u00basculas y min\u00c3\u00basculas"}, {"LOGVIEW_EXACT_PHRASE", "Frase exacta"}, {"LOGVIEW_ANY_WORD", "Cualquier palabra"}, {"LOGVIEW_ALL_WORDS", "Todas las palabras"}, {"LOGVIEW_MSG", "El mensaje contiene:"}, {"LOGVIEW_CO", "Pedido de cambio:"}, {"LOGVIEW_TIME", "Seleccione hora de registros: De:"}, {"LOGVIEW_TIME_TO", "A: "}, {"LOGVIEW_NODE_NAME", "Nodo SonicWall:"}, {"LOGVIEW_USER", "Usuario: "}, {"LOGVIEW_SEV", "Gravedad: "}, {"LOGVIEW_CALENDAR", "Calendario"}, {"LOGVIEW_ALL", "Todos (Alerta, Advertencia y Para su informaci\u00c3\u00b3n)"}, {"LOGVIEW_ALERT_WARNING", "Alerta y Advertencia"}, {"LOGVIEW_ALERT", "Alerta"}, {"LOGVIEW_STR_FORMAT", "Formato de cadena de b\u00c3\u00basqueda: user@domain.<br>Solo para usuario, introducir usuario.<br>Solo para dominio, introducir @domain.<br><i>Nota: Si el valor del usuario contiene un car\u00c3\u00a1cter @, termine la cadena de b\u00c3\u00basqueda con otro car\u00c3\u00a1cter @.</i>"}, {"HELPABOUT_VERSION", "Versi\u00c3\u00b3n:"}, {"HELPABOUT_LIC", "Licencia para:"}, {"HELPABOUT_SN", "N\u00c3\u00bamero de serie:"}, {"HELPABOUT_DBDRIVER", "Controlador de la base de datos:"}, {"HELPABOUT_DBVERSION", "Versi\u00c3\u00b3n de la base de datos:"}, {"HELPABOUT_REPORT_DBVERSION", "Versi\u00c3\u00b3n de la base de datos de informes:"}, {"LOGIN_TITLE", "Inicio de sesi\u00c3\u00b3n"}, {"LOGIN_ISBLANK", " est\u00c3\u00a1 en blanco. Introduzca un valor."}, {"LOGIN_INVALIDID", "El ID del usuario especificado no es v\u00c3\u00a1lido."}, {"LOGIN_INVALIDID2", "El ID del usuario puede contener solamente los siguientes caracteres:"}, {"LOGIN_INVALIDID3", "Alfanum\u00c3\u00a9ricos, . (punto), - (guion), _ (subrayado) y @ (arroba)."}, {"LOGIN_INVALIDID4", "Especifique un ID de usuario con los caracteres permitidos."}, {"LOGIN_USERNAME", "Nombre de usuario"}, {"LOGIN_PASSWORD", "Contrase\u00c3\u00b1a"}, {"LOGIN_LOGIN", "LOGIN"}, {"LOGIN_DOMAIN", "Dominio"}, {"LOGIN_SWITCH_EN_US", "Cambiar la interfaz de usuario a ingl\u00c3\u00a9s"}, {"LOGIN_SWITCH_JA_JP", "Cambiar la interfaz de usuario a japon\u00c3\u00a9s"}, {"LOGIN_SWITCH_ZH_CN", "Cambiar la interfaz de usuario a chino simplificado"}, {"LOGIN_SWITCH_ZH_TW", "Cambiar la interfaz de usuario a chino tradicional"}, {"LOGIN_SWITCH_KO_KR", "Cambiar a la interfaz de usuario de coreano"}, {"LOGIN_SWITCH_PT_BR", "Cambiar a la interfaz de usuario de portugu\u00c3\u00a9s (Brasil)"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "Finalizar sesi\u00c3\u00b3n"}, {"LOGOUT_VPMSG", "Ha finalizado su sesi\u00c3\u00b3n correctamente en el sistema SonicWall Analyzer."}, {"LOGOUT_VPMSG1", "Para iniciar una nueva sesi\u00c3\u00b3n en SonicWall Analyzer, se recomienda que cierre o salga de este explorador &nbsp<br>&nbsp y abra una nueva instancia del explorador."}, {"LOGOUT_GMSMSG", "Ha finalizado su sesi\u00c3\u00b3n correctamente en SonicWall Global Management System. "}, {"LOGOUT_GMSMSG1", "Para iniciar una nueva sesi\u00c3\u00b3n en SonicWall GMS, se recomienda que cierre o salga de este explorador &nbsp<br>&nbsp y abra una nueva instancia del explorador."}, {"SETTINGSUSER_CHANGE", "Cambiar"}, {"SETTINGSUSER_OLD", "Actual"}, {"SETTINGSUSER_PASSWORD", "Contrase\u00c3\u00b1a"}, {"SETTINGSUSER_NEW", "Nueva"}, {"SETTINGSUSER_CONFIRMMSG", "Confirmar la nueva contrase\u00c3\u00b1a"}, {"SETTINGSUSER_FAILMSG", " Las entradas de 'Contrase\u00c3\u00b1a' y 'Confirmar nueva contrase\u00c3\u00b1a' no concuerdan."}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "La contrase\u00c3\u00b1a debe tener al menos 7 caracteres de longitud y contener letras y/o n\u00c3\u00bameros."}, {"INVALID_PASSWORD", "Contrase\u00c3\u00b1a especificada no v\u00c3\u00a1lida."}, {"PWD_RULES", "La contrase\u00c3\u00b1a se debe crear en funci\u00c3\u00b3n de las siguientes reglas: "}, {"VALID_PWD_RULE_FOR_PCI", "    - Al menos 7 caracteres de longitud."}, {"MAX_PWD_LEN", "    - Se permite una longitud m\u00c3\u00a1xima de 15 caracteres."}, {"PWD_ALPHANUMERIC_CHARS", "    - Puede contener caracteres alfanum\u00c3\u00a9ricos."}, {"PWD_SPCIAL_CHARS", "    - Puede contener caracteres especiales."}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[ES]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[ES]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[ES]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "Especifique una contrase\u00c3\u00b1a que cumpla los requisitos."}, {"SETTINGSUSER_MISCSETTINGS", "Otras configuraciones"}, {"SETTINGSUSER_TIMEOUTPERIOD", "El tiempo de espera puede ser de -1 o en el rango de [5..120]. Complete con un n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"SETTINGSUSER_NEVERTIMEOUT", "sin l\u00c3\u00admite de tiempo de espera"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "Tiempo de espera de inactividad"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "Panel de selecci\u00c3\u00b3n del dispositivo, mostrar:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u00c3\ufffdconos"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "Texto"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u00c3\ufffdconos y texto (predeterminado)"}, {"MAX_ROWS_PER_SCREEN", "Cantidad m\u00c3\u00a1xima de filas por pantalla:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "Intervalo: [10..100] (solamente se aplica a pantallas paginadas relacionadas sin elaboraci\u00c3\u00b3n de informes)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "El valor de cantidad m\u00c3\u00a1xima de filas por pantalla est\u00c3\u00a1 fuera del rango v\u00c3\u00a1lido. Introduzca un n\u00c3\u00bamero del 10 al 100 inclusive."}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "El valor de cantidad m\u00c3\u00a1xima de filas por pantalla no es un n\u00c3\u00bamero. Introduzca un n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "Configuraci\u00c3\u00b3n del tablero de guardado autom\u00c3\u00a1tico:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1: Guardado autom\u00c3\u00a1tico no activado o en intervalo:\u00c2\u00a0[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "La configuraci\u00c3\u00b3n para el tablero de guardado autom\u00c3\u00a1tico puede ser -1 o con un intervalo de [1..60]. Complete con un n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"CHANGEPASSWORD_OLD", "Contrase\u00c3\u00b1a actual"}, {"CHANGEPASSWORD_NEW", "Nueva contrase\u00c3\u00b1a"}, {"CHANGEPASSWORD_CONFIRM", "Confirmar la nueva contrase\u00c3\u00b1a"}, {"CHANGEPASSWORD_USER", "Usuario"}, {"CUSTLOGSETTINGS_NOTE1", "Nota: Puede introducir m\u00c3\u00baltiples direcciones de correo electr\u00c3\u00b3nico separadas por punto y coma (\";\")"}, {"CUSTLOGSETTINGS_SECTITLE1", "Programa de destinatarios de alertas por correo electr\u00c3\u00b3nico"}, {"CUSTLOGSETTINGS_WEEKDAY", "D\u00c3\u00ada de la semana:"}, {"CUSTLOGSETTINGS_SCHED1", "Programa 1:"}, {"CUSTLOGSETTINGS_SCHED2", "Programa 2:"}, {"CUSTLOGSETTINGS_SCHED3", "Programa 3:"}, {"CUSTLOGSETTINGS_SAT", "S\u00c3\u00a1bado"}, {"CUSTLOGSETTINGS_SUN", "Domingo"}, {"CUSTLOGSETTINGS_WEEKEND", "Fin de semana:"}, {"CUSTLOGSETTINGS_HRS", "horas"}, {"CUSTLOGSETTINGS_TO", "a"}, {"CUSTLOGSETTINGS_ALERTFMT", "Preferencia de formato de alertas por correo electr\u00c3\u00b3nico"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "Contiene texto, colores, im\u00c3\u00a1genes y enlaces. Solamente es compatible con el software de correo electr\u00c3\u00b3nico apto para HTML."}, {"CUSTLOGSETTINGS_TEXT", "Texto sin formato"}, {"CUSTLOGSETTINGS_TEXT_DESC", "Contiene todos los detalles en texto sin formato. Compatible con todos los software de correo electr\u00c3\u00b3nico."}, {"CUSTLOGSETTINGS_PAGER", "Texto sin formato (simple)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "Contiene un mensaje corto en texto sin formato. Es perfecto para localizadores, SMS (servicio de mensajes cortos) y aplicaciones similares."}, {"LOGCONFIG_SECTITLE_1", "Eliminar"}, {"LOGCONFIG_SECTITLE_2", "Mensajes de registro"}, {"LOGCONFIG_DELLABEL", "Eliminar los mensajes de registro anteriores a:"}, {"LOGCONFIG_MONTH", "Mes"}, {"LOGCONFIG_DAY", "D\u00c3\u00ada"}, {"LOGCONFIG_YEAR", "A\u00c3\u00b1o"}, {"LOGCONFIG_FORLABEL", "para"}, {"LOGCONFIG_DOMAIN", "Dominio"}, {"SESSIONS_NOSESSALERT", "No hay sesiones para finalizar."}, {"SESSIONS_NOSESSSELALERT", "Seleccione sesiones para finalizar."}, {"SESSIONS_RUSUREALERT", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea finalizar las sesiones seleccionadas?"}, {"SESSIONS_TITLE", "Sesiones actuales"}, {"SESSIONS_COL1", "Nombre del usuario"}, {"SESSIONS_COL2", "Direcci\u00c3\u00b3n IP"}, {"SESSIONS_COL3", "Hora de inicio de sesi\u00c3\u00b3n"}, {"SESSIONS_COL4", "Hora del \u00c3\u00baltimo acceso"}, {"SESSIONS_COL5", "Nombre de dominio"}, {"SESSIONS_END", "Finalizar sesiones seleccionadas"}, {"LOGINVPSSETTINGS_LABEL1", "Direcci\u00c3\u00b3n del servidor SMTP"}, {"LOGINVPSSETTINGS_LABEL11", "Puerto SMTP"}, {"LOGINVPSSETTINGS_LABEL2", "Direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico del remitente"}, {"LOGINVPSSETTINGS_LABEL3", "Direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico del administrador"}, {"LOGINVPSSETTINGS_LABEL3_5", "Usar TLS"}, {"LOGINVPSSETTINGS_LABEL4", "Use Authentication"}, {"LOGINVPSSETTINGS_LABEL5", "Usuario"}, {"LOGINVPSSETTINGS_LABEL6", "Contrase\u00c3\u00b1a"}, {"LOGINVPSSETTINGS_NOTE", "Nota: Para modificar las direcciones de correo electr\u00c3\u00b3nico de los destinatarios, vaya a Consola > Alertas > Configuraci\u00c3\u00b3n b\u00c3\u00a1sica"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "Nivel de depuraci\u00c3\u00b3n del sistema:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "La configuraci\u00c3\u00b3n de los niveles de depuraci\u00c3\u00b3n permite una soluci\u00c3\u00b3n de problemas acelerada de posibles problemas de aplicaciones. Esta acci\u00c3\u00b3n crea archivos de registro de depuraci\u00c3\u00b3n en todos los sistemas de esta implementaci\u00c3\u00b3n y puede complicar el rendimiento de las aplicaciones, as\u00c3\u00ad como llenar el espacio en disco. Una vez que se haya resuelto el posible problema, debe restablecer el ajuste a <i>Sin depuraci\u00c3\u00b3n</i> para volver al funcionamiento normal."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "Nota: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;El nivel de depuraci\u00c3\u00b3n debe establecerse \u00c3\u00banicamente en funci\u00c3\u00b3n de la orientaci\u00c3\u00b3n del soporte t\u00c3\u00a9cnico de SonicWall."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Cuanto mayor es el nivel de depuraci\u00c3\u00b3n, m\u00c3\u00a1s recursos del sistema se utilizan para generar datos de depuraci\u00c3\u00b3n y, a la vez, disminuir el rendimiento general del sistema."}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "Sincronizar informaci\u00c3\u00b3n de c\u00c3\u00b3digos modelo ahora"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\u00c2\u00bfDesea actualizar las direcciones del servidor SMTP para todos los informes programados existentes con la nueva direcci\u00c3\u00b3n del servidor SMPT?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "Error al sincronizar la informaci\u00c3\u00b3n de c\u00c3\u00b3digos modelo."}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "Mostrar informes heredados (anteriores a Analyzer 7.0)"}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "Imponer seguridad con contrase\u00c3\u00b1a"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "N\u00c3\u00bamero de d\u00c3\u00adas para forzar el cambio de contrase\u00c3\u00b1a"}, {"GENVPSSTATUS_INVALIDIP", "Credenciales del dispositivo incompletas disponibles para un inicio de sesi\u00c3\u00b3n correcto en este momento"}, {"GENVPSSTATUS_NODE", " Nodo: "}, {"GENVPSSTATUS_INFO", "Informaci\u00c3\u00b3n"}, {"GENVPSSTATUS_SYSLOG", "Servidores de registro de sistema"}, {"GENVPSSTATUS_IPINFO", "Direcci\u00c3\u00b3n IP"}, {"GENVPSSTATUS_PORT", "Puerto"}, {"GENVPSSTATUS_SYNCNOW", "Sincronizar las configuraciones con el dispositivo y la informaci\u00c3\u00b3n de licencia con MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "Introducci\u00c3\u00b3n al analizador"}, {"GENVPSSTATUS_GETSTARTOPEN", "Abra las instrucciones de Introducci\u00c3\u00b3n en una ventana nueva"}, {"GENVPSSTATUS_LOGINTITLE", "Inicio de sesi\u00c3\u00b3n del dispositivo"}, {"GENVPSSTATUS_LOGINHTTP", "Utilizar inicio de sesi\u00c3\u00b3n no seguro (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "Utilizar inicio de sesi\u00c3\u00b3n seguro (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "Inicio de sesi\u00c3\u00b3n"}, {"GENVPSSTATUS_CATEGORIES", "Categor\u00c3\u00adas de registro de sistema"}, {"GENVPSSTATUS_REFRESH_MSG", "Nota: La informaci\u00c3\u00b3n de estado se actualiza cada 24 horas. Para actualizar esta informaci\u00c3\u00b3n, haga clic en el v\u00c3\u00adnculo anterior. Para modificar esta configuraci\u00c3\u00b3n, debe iniciar sesi\u00c3\u00b3n en el dispositivo y actualizarla manualmente."}, {"GENVPSSTATUS_LOG_TYPE", "Tipo de registro"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "Mantenimiento del sistema"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "Errores del sistema"}, {"GENVPSSTATUS_BLOCKED_WEB", "Sitios web bloqueados"}, {"GENVPSSTATUS_BLOCKED_JAVA", "Java bloqueado, etc."}, {"GENVPSSTATUS_USER_ACTIVITY", "Actividad del usuario"}, {"GENVPSSTATUS_VPN_TCP_STATS", "Estad\u00c3\u00adsticas TCP de VPN"}, {"GENVPSSTATUS_ATTACKS", "Ataques"}, {"GENVPSSTATUS_DROPPED_TCP", "TCP ignorados"}, {"GENVPSSTATUS_DROPPED_UDP", "UDP ignorados"}, {"GENVPSSTATUS_DROPPED_ICMP", "ICMP ignorados"}, {"GENVPSSTATUS_NETWORK_DEBUG", "Depuraci\u00c3\u00b3n de la red"}, {"GENVPSSTATUS_DENIED_LAN_IP", "IP de LAN denegado"}, {"GENVPSSTATUS_LICENSE_STATUS", "Estado de licencia del analizador"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;Lleve a cabo los pasos a continuaci\u00c3\u00b3n para resolver el problema \\\"Sin licencia\\\":<br/>&nbsp;&nbsp;Paso 1: <a href=\"http://www.MySonicWall.com\" target=new>Haga clic aqu\u00c3\u00ad para verificar o activar la licencia en MySonicWall.com.</a><br/>&nbsp;&nbsp;Paso 2: Si la licencia est\u00c3\u00a1 activa, <a href=\"javascript:synchronizeInfo();\">haga clic aqu\u00c3\u00ad para sincronizar la informaci\u00c3\u00b3n de la licencia.</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(Hay un error de comunicaci\u00c3\u00b3n al tratar de acceder a MySonicWall.com)<br/>&nbsp;&nbsp;Compruebe que el servidor web GMSVP pueda acceder a www.MySonicWall.com."}, {"COMPONENT", "Descripci\u00c3\u00b3n"}, {"COMPONENT_LC", "componente"}, {"FILE_SIZE", "Tama\u00c3\u00b1o del archivo (kB)"}, {"IP_ADDRESS", "Direcci\u00c3\u00b3n IP"}, {"CURRENT_VERSION", "Versi\u00c3\u00b3n actual"}, {"LATEST_VERSION", "\u00c3\u0161ltima versi\u00c3\u00b3n"}, {"RELEASE_NOTES", "Notas de la versi\u00c3\u00b3n"}, {"LAST_DOWNLOADED", "\u00c3\u0161ltima descargada"}, {"RELEASE_DATE", "Fecha de la versi\u00c3\u00b3n"}, {"DOWNLD_NEW", "Descargar nueva "}, {"SOFTWARE_UPDATES", "Actualizaciones de software"}, {"DEL_SEL_COMPS_FROM_LIST", "Eliminar los componentes seleccionados de la lista"}, {"LIC_DELETE_MSG", "No puede eliminar el"}, {"LIC_PATCH_MSG", "Los parches no est\u00c3\u00a1n disponibles y no se podr\u00c3\u00a1n descargar para los siguientes componentes:"}, {"LIC_NEW_GMS_SW", "Nuevo software de GMS"}, {"LIC_CONSOLE", "Consola"}, {"LIC_SELECT_COMPONENT", "Seleccione un componente."}, {"CHAP_TESTING", "Prueba de CHAP"}, {"CHAP_RADIUS_TESTING_MSG", "Tenga en cuenta que la autenticaci\u00c3\u00b3n CHAP solo funcionar\u00c3\u00a1 con un servidor RADIUS que sea compatible, y en algunos casos ser\u00c3\u00a1 necesario que el servidor est\u00c3\u00a9 configurado para almacenar contrase\u00c3\u00b1as de forma reversible."}, {"CHAP_LDAP_TESTING_MSG", "Tenga en cuenta que la autenticaci\u00c3\u00b3n CHAP solo funcionar\u00c3\u00a1 con un servidor que admita la recuperaci\u00c3\u00b3n de contrase\u00c3\u00b1as del usuario a trav\u00c3\u00a9s de LDPA, y en algunos casos ser\u00c3\u00a1 necesario que el servidor LDAP est\u00c3\u00a9 configurado para almacenar contrase\u00c3\u00b1as de forma reversible."}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "Tenga en cuenta tambi\u00c3\u00a9n que no es posible utilizar CHAP con Active Directory de Microsoft o Novell eDirectory"}, {"PERF_NO_SUMMARIZER", "No hay par\u00c3\u00a1metros de rendimiento de res\u00c3\u00bamenes disponibles en este momento."}, {"PERF_SUMMARIZER_INFO", "Informaci\u00c3\u00b3n de res\u00c3\u00bamenes"}, {"PERF_SUMMARIZER", "Proceso de res\u00c3\u00bamenes"}, {"PERF_SYSLOG_INFO", "Informaci\u00c3\u00b3n de archivos de datos"}, {"PERF_SYSLOG_FILE_TYPE", "Tipo de archivo de datos"}, {"PERF_FILE_STATS", "Estad\u00c3\u00adsticas de archivos"}, {"PERF_OLDEST", "El m\u00c3\u00a1s antiguo"}, {"PERF_PRD_LABEL", "Archivos procesados"}, {"PERF_SRC_LABEL", "Archivos agrupados"}, {"PERF_UNP_LABEL", "Archivos sin procesar"}, {"PERF_NMM_LABEL", "Archivos que no me pertenecen"}, {"PERF_IMF_LABEL", "Archivos infectados"}, {"PERF_ZIP_LABEL", "Archivos archivados"}, {"PERF_PRE_LABEL", "Archivos de registro no v\u00c3\u00a1lidos"}, {"PERF_UPE_LABEL", "Archivos mal cargados"}, {"PERF_UPD_LABEL", "Archivos cargados"}, {"PERF_UPL_LABEL", "Archivos pendientes de carga"}, {"PERF_RDB_LABEL", "Base de datos de informes"}, {"PERF_OPT_STATE_LABEL", "Estado de optimizaci\u00c3\u00b3n"}, {"PERF_OPT_PENDING_LABEL", "Optimizaci\u00c3\u00b3n pendiente"}, {"PERF_OPT_TOTAL_LABEL", "Total de d\u00c3\u00adas no optimizados"}, {"PERF_BKP_LABEL", "Archivos de copia de seguridad"}, {"PERF_FILE_ELEMENT", " Archivos - "}, {"PERF_THREAD_INFO", "Detalles del proceso de res\u00c3\u00bamenes"}, {"PERF_NUM_THREADS", "N\u00c3\u00bamero de flujos actualmente en uso"}, {"PERF_SUMMARIZER_IDLE", "El proceso de res\u00c3\u00bamenes est\u00c3\u00a1 inactivo."}, {"PERF_THREAD", "Flujo"}, {"PERF_FIREWALL", "Dispositivo"}, {"PERF_FILE", "Archivo"}, {"PERF_STATE", "Estado"}, {"PERF_START_TIME", "Iniciado en"}, {"PERF_SUMMARIZER_STATS", "Estad\u00c3\u00adsticas de res\u00c3\u00bamenes"}, {"PERF_PAST_24", "Durante las \u00c3\u00baltimas 24 horas (desde "}, {"PERF_PAST_7_DAYS", "Durante los pasados 7 d\u00c3\u00adas (desde "}, {"PERF_PAST_30_DAYS", "Durante los \u00c3\u00baltimos 30 d\u00c3\u00adas (desde "}, {"PERF_NUM_SYSLOGS", "N\u00c3\u00bamero de registros de sistema resumido en "}, {"PERF_AVERAGE_PER_MINUTE", "Registro del sistema promedio resumido por minuto"}, {"PERF_NOT_ACTIVE", "No se han resumido datos en los \u00c3\u00baltimos 7 d\u00c3\u00adas"}, {"PERF_NO_GEN2", "Los par\u00c3\u00a1metros de rendimiento de res\u00c3\u00bamenes est\u00c3\u00a1n disponibles solo para la configuraci\u00c3\u00b3n de res\u00c3\u00bamenes distribuidos"}, {"PERF_MEM_USAGE", "Consumo de memoria de res\u00c3\u00bamenes"}, {"PERF_LAST_RUN", "\u00c3\u0161ltimo tiempo de ejecuci\u00c3\u00b3n"}, {"PERF_NEXT_RUN", "Pr\u00c3\u00b3ximo tiempo de ejecuci\u00c3\u00b3n"}, {"PERF_SUMMARIZER_STATISTICS", "Estado de res\u00c3\u00bamenes durante 7 d\u00c3\u00adas"}, {"PERF_SUMMARIZER_UTILIZATION", "Utilizaci\u00c3\u00b3n del proceso de res\u00c3\u00bamenes"}, {"PERF_TOTAL_RUN_TIME", "Tiempo de ejecuci\u00c3\u00b3n promedio por d\u00c3\u00ada"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "Capacidad estimada"}, {"PERF_METRIC_SYSLOG", "(mill\u00c3\u00b3n de registro del sistema/d\u00c3\u00ada)"}, {"PERF_METRIC_XML", "(archivos XML/d\u00c3\u00ada)"}, {"PERF_TOTAL_LOAD", "Carga promedio"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "Registro del sistema promedio resumido (mill\u00c3\u00b3n/d\u00c3\u00ada)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "Archivos XML promedio resumidos por d\u00c3\u00ada"}, {"PERF_NO_DATA_SUMMARIZED", "No se han resumido datos en los \u00c3\u00baltimos 7 d\u00c3\u00adas"}, {"PERF_REPORTING_INFO", "Detalles de informes"}, {"PERF_TOP_UNITS", "Principales dispositivos de utilizaci\u00c3\u00b3n de res\u00c3\u00bamenes"}, {"PERF_UNIT_NAME", "Dispositivo"}, {"PERF_REPORTING_DB_SIZE", "Tama\u00c3\u00b1o de la base de datos de informes"}, {"PERF_BACKUPS_DIR_SIZE", "Tama\u00c3\u00b1o del directorio de copia de seguridad"}, {"PERF_SYSLOG_DIR_SIZE", "Tama\u00c3\u00b1o del directorio de datos sin procesar"}, {"PERF_CACHE_SIZE", "Tama\u00c3\u00b1o de cach\u00c3\u00a9 estimado"}, {"PERF_BAD_DIR_SIZE", "Tama\u00c3\u00b1o de directorios de datos err\u00c3\u00b3neos"}, {"PERF_PER_SUMMARIZER_INFO", "Detalles para el proceso de res\u00c3\u00bamenes en "}, {"PERF_AVG_UTILIZATION", "Utilizaci\u00c3\u00b3n promedio del proceso de res\u00c3\u00bamenes"}, {"PERF_PEAK_UTILIZATION", "Utilizaci\u00c3\u00b3n m\u00c3\u00a1xima del proceso de res\u00c3\u00bamenes"}, {"NMM_DETAILS", "Registros del sistema recolectados para dispositivos que no se encuentran en gesti\u00c3\u00b3n e informes"}, {"NMM_SERIALS", "N\u00c3\u00bamero de serie de los dispositivos para el Summarizer en "}, {"NO_NMM_SERIAL", "Ninguno"}, {"MISCONFIGURED_SERIALS", "N\u00c3\u00bamero de serie de los dispositivos configurados incorrectamente "}, {"NO_MISCONFIGURED_SERIALS", "Ninguno "}, {"NMM_MSG_NOTE", "Nota: "}, {"NMM_MSG1", "* Inicie sesi\u00c3\u00b3n en el dispositivos y desactive los registros del sistema."}, {"NMM_MSG2", "* Si no tiene acceso al dispositivo, utilice las reglas de la pasarela para bloquear las series."}, {"NMM_MSG3", "* Para corregir las series configuradas incorrectamente, inicie sesi\u00c3\u00b3n en el dispositivo y modifique la configuraci\u00c3\u00b3n de GMS."}, {"NMM_MSG4", "* Los n\u00c3\u00bameros de serie que se incluyen aqu\u00c3\u00ad se actualizan cada 12 horas."}, {"PERF_SUMMARIZER_STATUS", "Estado"}, {"PERF_DEPLOYMENT_STATUS", "Estado de implementaci\u00c3\u00b3n"}, {"PERF_MSG_HIGH_CAPACITY", "La elaboraci\u00c3\u00b3n de informes est\u00c3\u00a1 funcionando a una capacidad muy alta; vuelva a asignar unidades."}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "Uno (o m\u00c3\u00a1s) de los Summarizers en la implementaci\u00c3\u00b3n ha superado su capacidad operativa en los \u00c3\u00baltimos 7 d\u00c3\u00adas. Revise la columna de estado de la secci\u00c3\u00b3n Uso de los Summarizers y visite el sitio de GMS para obtener m\u00c3\u00a1s informaci\u00c3\u00b3n sobre c\u00c3\u00b3mo administrar su implementaci\u00c3\u00b3n."}, {"PERF_MSG_REASSIGN_UNITS", "Vuelva a asignar unidades entre los agentes."}, {"PERF_MSG_DISK_LOW", "El espacio en disco es insuficiente, agregue discos adicionales o aumente la asignaci\u00c3\u00b3n de disco."}, {"PERF_MSG_DISK_LOW_RDB", "El espacio en disco es insuficiente para la base de datos de informes, agregue discos adicionales o aumente la asignaci\u00c3\u00b3n de disco."}, {"PERF_MSG_CAPACITY_PLANNING", "Para obtener m\u00c3\u00a1s informaci\u00c3\u00b3n sobre c\u00c3\u00b3mo gestionar su implementaci\u00c3\u00b3n, visite el <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>sitio web de GMS</a>."}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "Nota: La carga promedio y la capacidad estimada son espec\u00c3\u00adficas de la implementaci\u00c3\u00b3n y pueden variar entre los sistemas."}, {"PERF_OF", "de"}, {"PERF_ON_DISK", "en disco"}, {"PERF_OPT_EXPORT_PROGRESS", "Exportaci\u00c3\u00b3n en curso"}, {"PERF_OPT_EXPORT_DONE", "Exportaci\u00c3\u00b3n realizada"}, {"PERF_OPT_DELETE_PROGRESS", "Eliminaci\u00c3\u00b3n en curso"}, {"PERF_OPT_DELETE_DONE", "Eliminaci\u00c3\u00b3n realizada"}, {"PERF_OPT_IMPORT_PROGRESS", "Importaci\u00c3\u00b3n en curso"}, {"PERF_OPT_QUEUED_UP", "En cola"}, {"PERF_OPT_IDLE", "Inactivo"}, {"PERF_OPT_CURRENT", "Actual"}, {"PERF_OPT_INFO", "Informaci\u00c3\u00b3n de optimizaci\u00c3\u00b3n"}, {"PERF_XML_FILE_INFO", "Informaci\u00c3\u00b3n del archivo XML"}, {"PERF_XML_LABEL", "Archivos XML sin procesar"}, {"PERF_XPG_LABEL", "Archivos en proceso"}, {"PERF_XPD_LABEL", "Archivos guardados"}, {"PERF_XPE_LABEL", "Archivos no v\u00c3\u00a1lidos"}, {"ALERT_NO_ALERTS", "No hay alertas activas para esta secci\u00c3\u00b3n en este momento."}, {"ALERT_DESCRIPTION", "Descripci\u00c3\u00b3n"}, {"ALERT_NODE_NAME", "Nombre de la unidad"}, {"ALERT_SEVERITY", "Gravedad"}, {"ALERT_LISTING", "Lista de alertas"}, {"CAL_SUN", "Dom."}, {"CAL_MON", "Lun."}, {"CAL_TUE", "Mart."}, {"CAL_WED", "Mi\u00c3\u00a9rc."}, {"CAL_THU", "Juev."}, {"CAL_FRI", "Vier."}, {"CAL_SAT", "S\u00c3\u00a1b."}, {"CAL_JAN", "Enero"}, {"CAL_FEB", "Febrero"}, {"CAL_MAR", "Marzo"}, {"CAL_APR", "Abril"}, {"CAL_MAY", "Mayo"}, {"CAL_JUN", "Junio"}, {"CAL_JUL", "Julio"}, {"CAL_AUG", "Agosto"}, {"CAL_SEP", "Septiembre"}, {"CAL_OCT", "Octubre"}, {"CAL_NOV", "Noviembre"}, {"CAL_DEC", "Diciembre"}, {Integer.toString(1), "Ejecuci\u00c3\u00b3n satisfactoria de la tarea: "}, {Integer.toString(0), "Error al ejecutar la tarea."}, {Integer.toString(42), "La ejecuci\u00c3\u00b3n satisfactoria de la tarea mostr\u00c3\u00b3 ADVERTENCIAS: "}, {Integer.toString(10), "El comando se ejecut\u00c3\u00b3 correctamente."}, {Integer.toString(-12), "Error en forma parcial o completa de ejecuci\u00c3\u00b3n de comando."}, {Integer.toString(-57), "Privilegios de usuario insuficientes para realizar esta acci\u00c3\u00b3n."}, {Integer.toString(-58), "No hay informaci\u00c3\u00b3n para procesar el comando."}, {Integer.toString(-59), "La acci\u00c3\u00b3n no se puede realizar en cualquier momento."}, {Integer.toString(-56), "Solo los usuarios del grupo de administrador del dominio local tienen privilegios para ejecutar este comando."}, {Integer.toString(2), "Se verific\u00c3\u00b3 la existencia de nuevo firmware correctamente, pero no hab\u00c3\u00ada ning\u00c3\u00ban firmware nuevo disponible. "}, {Integer.toString(3), "La operaci\u00c3\u00b3n de compilaci\u00c3\u00b3n se ha realizado previamente con \u00c3\u00a9xito para la tarea: "}, {Integer.toString(4), "La operaci\u00c3\u00b3n de actualizaci\u00c3\u00b3n de la base de datos se realiz\u00c3\u00b3 con \u00c3\u00a9xito para la tarea: "}, {Integer.toString(5), "Hay unidades disponibles para la actualizaci\u00c3\u00b3n, as\u00c3\u00ad como para el registro"}, {Integer.toString(6), "No se aplic\u00c3\u00b3 en el dispositivo la versi\u00c3\u00b3n de prueba gratuita"}, {Integer.toString(7), "Unidades disponibles para actualizar y no para registro"}, {Integer.toString(8), "Unidades disponibles para registro y no para actualizar"}, {Integer.toString(-1), "Algunos par\u00c3\u00a1metros del dispositivo no se configuraron correctamente."}, {Integer.toString(-53), "El dispositivo no admite inicios de sesi\u00c3\u00b3n simult\u00c3\u00a1neos de administradores."}, {Integer.toString(-63), "Falta de credenciales del dispositivo para iniciar sesi\u00c3\u00b3n."}, {Integer.toString(-69), "Esperando obtener direcci\u00c3\u00b3n IP de inicio de sesi\u00c3\u00b3n actual."}, {Integer.toString(-70), "JVM OOM: No hay memoria disponible suficiente para continuar; la tarea se reintentar\u00c3\u00a1 en la pr\u00c3\u00b3xima ejecuci\u00c3\u00b3n"}, {Integer.toString(-64), "No se puede obtener la p\u00c3\u00a1gina de autenticaci\u00c3\u00b3n del dispositivo administrado para iniciar sesi\u00c3\u00b3n."}, {Integer.toString(-64) + "_TT", "- No se puede acceder a la unidad en la direcci\u00c3\u00b3n gestionada.\n- La unidad no admite el inicio de sesi\u00c3\u00b3n simult\u00c3\u00a1neo;\n comprobar que el navegador est\u00c3\u00a9 directamente conectado a la unidad."}, {Integer.toString(-65), "No hay respuesta para el env\u00c3\u00ado de inicio de sesi\u00c3\u00b3n."}, {Integer.toString(-83), "Error de inicio de sesi\u00c3\u00b3n, ya que no concuerdan los n\u00c3\u00bameros de serie."}, {Integer.toString(-83) + "_TT", "- El n\u00c3\u00bamero de serie especificado al agregar la unidad al GMS\n no concuerda con el de la unidad."}, {Integer.toString(-84), "Se produjo un error al iniciar sesi\u00c3\u00b3n debido a que el modo de inicio de sesi\u00c3\u00b3n especificado no es v\u00c3\u00a1lido."}, {Integer.toString(-84) + "_TT", "- El modo de inicio de sesi\u00c3\u00b3n especificado no pertenece a la lista\n de modos permitidos."}, {Integer.toString(-2), "El nombre de usuario o la contrase\u00c3\u00b1a del dispositivo eran incorrectos."}, {Integer.toString(-918), "[ES]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "La unidad usa un certificado SSL que tiene una firma MD5, la cual ya no es compatible por razones de seguridad. Vuelva a generar el certificado para administrar esta unidad."}, {Integer.toString(-917), "La unidad no tiene licencia para ejecutar esta tarea."}, {Integer.toString(-71), "URL de acceso a la unidad no v\u00c3\u00a1lido."}, {Integer.toString(-71) + "_TT", "- Es posible que no se haya obtenido la direcci\u00c3\u00b3n IP de la unidad."}, {Integer.toString(-72), "Error en la solicitud del estado xml."}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "Error en la solicitud del estado xml; no hubo respuesta."}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "Error al solicitar archivos de preferencia."}, {Integer.toString(-950), "[ES] Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "Error en la solicitud de archivos de preferencia; no hubo respuesta."}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "Archivo de preferencia no v\u00c3\u00a1lido."}, {Integer.toString(-76) + "_TT", "- No se recibi\u00c3\u00b3 ning\u00c3\u00ban archivo de preferencia.\n- El archivo de preferencia obtenido podr\u00c3\u00ada estar da\u00c3\u00b1ado.\n- El archivo de preferencia podr\u00c3\u00ada estar incompleto."}, {Integer.toString(-77), "Error en la obtenci\u00c3\u00b3n de la unidad."}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "Mensaje de latido recibido."}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "No se recibi\u00c3\u00b3 mensaje de latido."}, {Integer.toString(-78) + "_TT", "- El mensaje de latido no se envi\u00c3\u00b3 desde la unidad.\n- El mensaje de latido enviado desde la unidad no puede llegar a GMS.\n- El SA (t\u00c3\u00banel) no est\u00c3\u00a1 creado en la pasarela GMS.\n- La regla para permitir el registro del sistema no est\u00c3\u00a1 creada en la pasarela GMS.\n- Para las unidades de instancia, siga las instrucciones que se describen en la secci\u00c3\u00b3n Nota: de las implementaciones distribuidas de servicios web de consola."}, {Integer.toString(-79), "Los mensajes de latido recibidos no se pudieron descifrar."}, {Integer.toString(-79) + "_TT", "- La contrase\u00c3\u00b1a especificada al agregar la unidad al GMS\n no concuerda con la de la unidad."}, {Integer.toString(13), "Mensaje de registro de sistema recibido."}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "No se recibi\u00c3\u00b3 mensaje de registro de sistema."}, {Integer.toString(-81) + "_TT", "- El mensaje del registro del sistema no se envi\u00c3\u00b3 desde la unidad.D138- El mensaje del registro del sistema enviado desde la unidad no puede llegar a GMS.\n- El SA (t\u00c3\u00banel) no est\u00c3\u00a1 creado en la pasarela GMS.\n- La regla para permitir el registro del sistema no est\u00c3\u00a1 creada en la pasarela GMS."}, {Integer.toString(-82), "Los mensajes de registro de sistema recibidos no se pudieron descifrar."}, {Integer.toString(-82) + "_TT", "- La contrase\u00c3\u00b1a especificada al agregar la unidad al GMS\n no concuerda con la de la unidad."}, {Integer.toString(12), "Unidad agregada; esperando ser adquirida."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "Unidad modificada; esperando ser adquirida."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "No se pudo acceder a la unidad. La unidad o la red pueden estar inactivas."}, {Integer.toString(-4), "Al menos un par\u00c3\u00a1metro de la configuraci\u00c3\u00b3n del dispositivo es incorrecto."}, {Integer.toString(-5), "No se pudo acceder al sitio web de registro de SonicWall."}, {Integer.toString(-6), "El c\u00c3\u00b3digo de activaci\u00c3\u00b3n para la actualizaci\u00c3\u00b3n/suscripci\u00c3\u00b3n no es v\u00c3\u00a1lido."}, {Integer.toString(-7), "El dispositivo no est\u00c3\u00a1 registrado."}, {Integer.toString(-8), "El sitio de registro de SonicWall GMS no funciona o no se pudo obtener acceso. Compruebe el acceso a Internet de los servidores de SonicWall GMS."}, {Integer.toString(-9), "No hay unidades disponibles para la actualizaci\u00c3\u00b3n."}, {Integer.toString(-10), "Se est\u00c3\u00a1 intentando agregar un dispositivo que ya se encuentra en la gesti\u00c3\u00b3n de SonicWall GMS."}, {Integer.toString(-11), "Intentando configurar un dispositivo no v\u00c3\u00a1lido."}, {Integer.toString(-15), "Intentando crear una regla para un servicio inexistente."}, {Integer.toString(-16), "Infracci\u00c3\u00b3n de licencia de SonicWall."}, {Integer.toString(-17), "Error interno de SonicWall GMS."}, {Integer.toString(-18), "Error al descargar la lista de filtro de contenido."}, {Integer.toString(-19), "Intento de eliminar un servicio para el cual existe una regla."}, {Integer.toString(-47), "El servidor AV no pudo ser contactado"}, {Integer.toString(-20), "Error de AV interno"}, {Integer.toString(-21), "Tarea de AV pendiente"}, {Integer.toString(-22), "El c\u00c3\u00b3digo de activaci\u00c3\u00b3n de AV no es v\u00c3\u00a1lido."}, {Integer.toString(-23), "El c\u00c3\u00b3digo de activaci\u00c3\u00b3n de AV ya est\u00c3\u00a1 en uso."}, {Integer.toString(-24), "La contrase\u00c3\u00b1a de AV es incorrecta."}, {Integer.toString(-25), "Error en el recuento de renovaci\u00c3\u00b3n de AV."}, {Integer.toString(-26), "Renovaci\u00c3\u00b3n de AV demasiado temprana."}, {Integer.toString(-27), "Intento de administrar un dispositivo m\u00c3\u00a1s antiguo de lo recomendado."}, {Integer.toString(-28), "El servidor de actualizaci\u00c3\u00b3n autom\u00c3\u00a1tica est\u00c3\u00a1 actualmente inactivo o no pudo ser contactado."}, {Integer.toString(-85), "Se produjo un error al administrar la copia de seguridad del sistema."}, {Integer.toString(-29), "El firmware no se pudo cargar en el dispositivo."}, {Integer.toString(-62), "Se intent\u00c3\u00b3 cargar un firmware no v\u00c3\u00a1lido en el dispositivo."}, {Integer.toString(-60), "El tama\u00c3\u00b1o m\u00c3\u00a1ximo del archivo para una actualizaci\u00c3\u00b3n de firmware es de 4\u00c2\u00a0MB."}, {Integer.toString(-31), "Error al escribir el firmware en el disco local."}, {Integer.toString(-30), "Error al descargar el firmware. El servidor de actualizaci\u00c3\u00b3n autom\u00c3\u00a1tica no est\u00c3\u00a1 actualmente disponible o no pudo ser contactado."}, {Integer.toString(-32), "Error en el acceso a la base de datos."}, {Integer.toString(-33), "Error al configurar el dispositivo."}, {Integer.toString(-34), "Error al autenticar al usuario."}, {Integer.toString(-68), "No se encontr\u00c3\u00b3 el dominio, o el nombre de dominio no es v\u00c3\u00a1lido."}, {Integer.toString(-35), "Error al actualizar la contrase\u00c3\u00b1a CMP."}, {Integer.toString(-36), "No hay unidades disponibles para registro."}, {Integer.toString(-37), "No se pudo contactar ning\u00c3\u00ban servidor antivirus, o el servidor antivirus inform\u00c3\u00b3 de un error desconocido."}, {Integer.toString(-38), "No hay unidades disponibles para registro o actualizaci\u00c3\u00b3n."}, {Integer.toString(-39), "Hubo un problema al agregar un c\u00c3\u00b3digo de activaci\u00c3\u00b3n a la base de datos."}, {Integer.toString(-40), "Error al eliminar el c\u00c3\u00b3digo de activaci\u00c3\u00b3n. No existe dicho c\u00c3\u00b3digo de activaci\u00c3\u00b3n en la base de datos."}, {Integer.toString(-41), "Error desconocido al eliminar el c\u00c3\u00b3digo de activaci\u00c3\u00b3n."}, {Integer.toString(-48), "Error en la actualizaci\u00c3\u00b3n"}, {Integer.toString(-49), "Acceso denegado para ejecutar comandos CLI."}, {Integer.toString(-42), "La base de datos no se pudo actualizar correctamente."}, {Integer.toString(-43), "No se pudo enviar un correo electr\u00c3\u00b3nico a una o m\u00c3\u00a1s direcciones."}, {Integer.toString(-44), "El informe del soporte t\u00c3\u00a9cnico no se pudo recuperar desde el dispositivo."}, {Integer.toString(-45), "El archivo SPD no se pudo recuperar desde el dispositivo."}, {Integer.toString(-46), "El archivo del certificado no se pudo recuperar desde el dispositivo."}, {Integer.toString(-50), "No se pudo sincronizar la informaci\u00c3\u00b3n de supervisi\u00c3\u00b3n del estado del t\u00c3\u00banel."}, {Integer.toString(-51), "El archivo RCF no se pudo recuperar desde el dispositivo."}, {Integer.toString(-52), "La cuenta del usuario est\u00c3\u00a1 desactivada; no se pudo iniciar sesi\u00c3\u00b3n."}, {Integer.toString(-61), "La tarea ejecutada anteriormente necesit\u00c3\u00b3 que se reiniciara el equipo; se volver\u00c3\u00a1 a intentar la tarea en el siguiente intervalo."}, {Integer.toString(-229), "Para activar este servicio, debe tener una suscripci\u00c3\u00b3n v\u00c3\u00a1lida a la Protecci\u00c3\u00b3n de correo electr\u00c3\u00b3nico."}, {Integer.toString(-230), "Su versi\u00c3\u00b3n de Sonic OS no admite la agrupaci\u00c3\u00b3n (suscripci\u00c3\u00b3n de m\u00c3\u00baltiples nodos). Actualice el sistema operativo o use una clave correspondiente a un solo nodo."}, {Integer.toString(-231), "No puede combinar claves de activaci\u00c3\u00b3n de diferentes modelos de WANOPT."}, {Integer.toString(-232), "Su versi\u00c3\u00b3n de WANOPT no admite la agrupaci\u00c3\u00b3n (suscripci\u00c3\u00b3n de m\u00c3\u00baltiples nodos)."}, {Integer.toString(-201), "Error con los par\u00c3\u00a1metros del API."}, {Integer.toString(-202), "El usuario ya ha iniciado sesi\u00c3\u00b3n."}, {Integer.toString(-203), "La API de SonicWall GMS no est\u00c3\u00a1 implementada en esta versi\u00c3\u00b3n."}, {Integer.toString(-204), "La sesi\u00c3\u00b3n no existe."}, {Integer.toString(-205), "Saliendo del shell de SonicWall GMS"}, {Integer.toString(-206), "Faltan par\u00c3\u00a1metros de la API"}, {Integer.toString(-207), "No hay filas para esta categor\u00c3\u00ada"}, {Integer.toString(-208), "No se proporcionaron c\u00c3\u00b3digos de activaci\u00c3\u00b3n"}, {Integer.toString(-209), "No se especific\u00c3\u00b3 el tipo de activaci\u00c3\u00b3n"}, {Integer.toString(-210), "La direcci\u00c3\u00b3n IP no es v\u00c3\u00a1lida; no se agreg\u00c3\u00b3 la unidad."}, {Integer.toString(-211), "La longitud dada es menor que la requerida; la unidad no se ha agregado."}, {Integer.toString(-212), "La cadena puede contener solo caracteres hexadecimales; la unidad no se ha agregado."}, {Integer.toString(-213), "La direcci\u00c3\u00b3n IP del programador en espera no puede ser la misma que la del programador principal; la unidad no se ha agregado."}, {Integer.toString(-214), "No se ha encontrado programador en la direcci\u00c3\u00b3n IP especificada; la unidad no se ha agregado."}, {Integer.toString(-215), "Error al agregar la unidad."}, {Integer.toString(-226), "No tiene una licencia v\u00c3\u00a1lida."}, {Integer.toString(-225), "Hubo un error al analizar el XML de entrada"}, {Integer.toString(-228), "Se encontr\u00c3\u00b3 contenido no v\u00c3\u00a1lido en el archivo XML de entrada."}, {Integer.toString(-216), "Tipo de informe no v\u00c3\u00a1lido o desconocido. No se sabe si es un informe diario, semanal o mensual"}, {Integer.toString(-217), "La direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico de destino no es v\u00c3\u00a1lida. Debe proporcionarse al menos una direcci\u00c3\u00b3n de destino v\u00c3\u00a1lida"}, {Integer.toString(-218), "La direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico de origen no es v\u00c3\u00a1lida"}, {Integer.toString(-219), "Direcci\u00c3\u00b3n de servidor SMTP no v\u00c3\u00a1lida"}, {Integer.toString(-220), "Lista de informes no v\u00c3\u00a1lida. Debe proporcionarse al menos un ID de informe v\u00c3\u00a1lido"}, {Integer.toString(-221), "La direcci\u00c3\u00b3n IP del programador del analizador registrada en la base de datos no es v\u00c3\u00a1lida"}, {Integer.toString(-222), "El n\u00c3\u00bamero de puerto del programador del analizador registrado en la base de datos no es v\u00c3\u00a1lido"}, {Integer.toString(-223), "Fecha de informe no v\u00c3\u00a1lida o desconocida. La fecha del informe debe proporcionarse en el formato mm/dd/aaaa"}, {Integer.toString(-224), "El ID del programa proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-502), "Falta la contrase\u00c3\u00b1a para la protecci\u00c3\u00b3n de la contrase\u00c3\u00b1a del archivo zip"}, {Integer.toString(-503), "Nodo proporcionado no v\u00c3\u00a1lido. Debe especificarse el n\u00c3\u00bamero de serie (para unitNode) o el nombre mostrado (para groupNode)."}, {Integer.toString(-10001), "Hubo un error de comunicaci\u00c3\u00b3n"}, {Integer.toString(-10002), "Hubo un error al analizar el XML de entrada"}, {Integer.toString(-10005), "Componente desconocido invocado"}, {Integer.toString(-10006), "Se invoc\u00c3\u00b3 un m\u00c3\u00a9todo de AV desconocido"}, {Integer.toString(-10011), "Hubo un intento de actualizar el AV despu\u00c3\u00a9s de su caducidad."}, {Integer.toString(-10012), "Hubo un intento de actualizar el AV para un dispositivo que no est\u00c3\u00a1 registrado."}, {Integer.toString(-10013), "Hubo un intento de renovar el AV para menos nodos de los que actualmente admite."}, {Integer.toString(-10014), "Hubo un intento de actualizar el AV demasiado pronto."}, {Integer.toString(-10020), "Est\u00c3\u00a1 pendiente una tarea previa para cambiar la contrase\u00c3\u00b1a del AV."}, {Integer.toString(-10100), "Hubo un error al comunicarse con el servidor McAfee"}, {Integer.toString(-10101), "McAfee no pudo encontrar ning\u00c3\u00ban registro para este sitio."}, {Integer.toString(-10102), "McAfee no pudo coincidir con la contrase\u00c3\u00b1a anterior para este sitio."}, {Integer.toString(-10103), "El sitio de AV ya est\u00c3\u00a1 registrado."}, {Integer.toString(-10200), "Hubo un error al comunicarse con el servidor de base de datos de AV"}, {Integer.toString(-10201), "El n\u00c3\u00bamero de serie del dispositivo ya est\u00c3\u00a1 registrado"}, {Integer.toString(-10202), "La clave de licencia proporcionada ya est\u00c3\u00a1 en uso"}, {Integer.toString(-10203), "El antivirus nunca fue registrado para este dispositivo"}, {Integer.toString(-10204), "Las claves m\u00c3\u00baltiples proporcionadas deben tener el mismo per\u00c3\u00adodo"}, {Integer.toString(-10205), "La clave de prueba gratuita no est\u00c3\u00a1 permitida para la actualizaci\u00c3\u00b3n"}, {Integer.toString(-10206), "Valor ilegal proporcionado por uno o m\u00c3\u00a1s par\u00c3\u00a1metros"}, {Integer.toString(-10210), "El n\u00c3\u00bamero de serie proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-10211), "La clave de licencia proporcionada ya est\u00c3\u00a1 registrada"}, {Integer.toString(-10212), "La nueva contrase\u00c3\u00b1a proporcionada tiene caracteres no v\u00c3\u00a1lidos o no es de 6 a 12 caracteres de longitud"}, {Integer.toString(-10213), "La contrase\u00c3\u00b1a del antivirus proporcionada no es v\u00c3\u00a1lida"}, {Integer.toString(-10214), "El c\u00c3\u00b3digo OEM proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-10215), "La direcci\u00c3\u00b3n IP de WAN proporcionada no es v\u00c3\u00a1lida"}, {Integer.toString(-10220), "A\u00c3\u00ban est\u00c3\u00a1 pendiente una solicitud previa para este dispositivo"}, {Integer.toString(-10250), "El dispositivo ya est\u00c3\u00a1 registrado para el AV y hay que reactivarlo."}, {Integer.toString(-10251), "El dispositivo no se puede reactivar porque la contrase\u00c3\u00b1a no es v\u00c3\u00a1lida"}, {Integer.toString(-10260), "El n\u00c3\u00bamero de serie del grupo de licencia compartida que se proporcion\u00c3\u00b3 no pudo encontrarse"}, {Integer.toString(-10261), "El n\u00c3\u00bamero de serie del grupo de compartici\u00c3\u00b3n de licencia proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-10262), "El dispositivo no es miembro de ning\u00c3\u00ban grupo de compartici\u00c3\u00b3n de licencia"}, {Integer.toString(-10263), "El dispositivo ya tiene una suscripci\u00c3\u00b3n antivirus activa y no puede adherirse a un grupo de compartici\u00c3\u00b3n de licencia"}, {Integer.toString(-10264), "El dispositivo no es miembro de este grupo de compartici\u00c3\u00b3n de licencia"}, {Integer.toString(-10265), "El propietario del grupo de compartici\u00c3\u00b3n de licencia no puede ser eliminado"}, {Integer.toString(-10266), "El dispositivo ya es miembro de otro grupo de compartici\u00c3\u00b3n de licencia"}, {Integer.toString(-10267), "La nueva cantidad de licencias proporcionada excede el n\u00c3\u00bamero de licencias disponibles del grupo de compartici\u00c3\u00b3n de licencias"}, {Integer.toString(-10004), "No se encuentran uno o m\u00c3\u00a1s par\u00c3\u00a1metros para la operaci\u00c3\u00b3n del antivirus"}, {Integer.toString(-10300), "No se pudo encontrar informaci\u00c3\u00b3n sobre Total Secure Partner (socio seguro total)"}, {Integer.toString(-10301), "Se proporcion\u00c3\u00b3 una contrase\u00c3\u00b1a incorrecta de Total Secure Partner"}, {Integer.toString(-10303), "El n\u00c3\u00bamero de licencias antivirus proporcionado no es v\u00c3\u00a1lido"}, {Integer.toString(-10304), "Hubo un intento de administrar un dispositivo que no est\u00c3\u00a1 asignado a Total Secure Partner"}, {Integer.toString(-20000), "Error desconocido al comunicarse con el servidor de registro de compilaci\u00c3\u00b3n"}, {Integer.toString(-20101), "El contacto solicitado ya est\u00c3\u00a1 registrado para el usuario."}, {Integer.toString(-20102), "El contacto solicitado no se pudo agregar para el usuario."}, {Integer.toString(-20106), "No se puede modificar, ya que no se encontr\u00c3\u00b3 la informaci\u00c3\u00b3n del usuario."}, {Integer.toString(-20111), "No se encontr\u00c3\u00b3 la informaci\u00c3\u00b3n del contacto."}, {Integer.toString(-20112), "La informaci\u00c3\u00b3n del contacto no se pudo modificar."}, {Integer.toString(-20113), "La informaci\u00c3\u00b3n del contacto no se pudo eliminar."}, {Integer.toString(-20116), "El dispositivo ya est\u00c3\u00a1 registrado en una cuenta diferente de MySonicWall.com."}, {Integer.toString(-20117), "El dispositivo especificado no se encontr\u00c3\u00b3 en el sistema de registro del dispositivo."}, {Integer.toString(-20118), "El sistema de registro del servidor no pudo registrar el dispositivo."}, {Integer.toString(-20119), "No se ha podido recuperar el estado del dispositivo especificado."}, {Integer.toString(-20121), "El dispositivo especificado no est\u00c3\u00a1 registrado."}, {Integer.toString(-20122), "La llave de activaci\u00c3\u00b3n especificada ya se ha utilizado."}, {Integer.toString(-20123), "Se ha utilizado un c\u00c3\u00b3digo no v\u00c3\u00a1lido de activaci\u00c3\u00b3n."}, {Integer.toString(-20124), "Se ha utilizado una combinaci\u00c3\u00b3n de c\u00c3\u00b3digo de activaci\u00c3\u00b3n/dispositivo no v\u00c3\u00a1lida."}, {Integer.toString(-20125), "El sistema de registro del servidor no complet\u00c3\u00b3 la actualizaci\u00c3\u00b3n."}, {Integer.toString(-20126), "El sistema de registro del servidor no complet\u00c3\u00b3 la activaci\u00c3\u00b3n."}, {Integer.toString(-20131), "Se produjo un error al registrar la direcci\u00c3\u00b3n MAC incorrecta del sistema SonicWall GMS."}, {Integer.toString(-20132), "El sistema SonicWall GMS no est\u00c3\u00a1 registrado."}, {Integer.toString(-20133), "El n\u00c3\u00bamero de serie de SonicWall GMS especificado no es v\u00c3\u00a1lido."}, {Integer.toString(-20134), "El sistema de registro de servidores no pudo recuperar el estado de SonicWall GMS."}, {Integer.toString(-20135), "SonicWall GMS ya est\u00c3\u00a1 registrado."}, {Integer.toString(-20136), "El sistema de registro de servidores no pudo registrar su sistema SonicWall GMS."}, {Integer.toString(-20142), "La direcci\u00c3\u00b3n mac err\u00c3\u00b3nea ya est\u00c3\u00a1 registrada."}, {Integer.toString(-20143), "El sistema de registro de servidores no pudo recuperar las actualizaciones disponibles para SonicWall GMS."}, {Integer.toString(-20144), "No se especific\u00c3\u00b3 una duraci\u00c3\u00b3n del paquete b\u00c3\u00a1sico."}, {Integer.toString(-20145), "Hubo un error al leer la informaci\u00c3\u00b3n del sistema del paquete b\u00c3\u00a1sico en el sistema de registro del servidor."}, {Integer.toString(-20146), "La actualizaci\u00c3\u00b3n del nodo no est\u00c3\u00a1 disponible para este producto."}, {Integer.toString(-20147), "Su instalaci\u00c3\u00b3n de SonicWall GMS ya es una versi\u00c3\u00b3n minorista."}, {Integer.toString(-20148), "El dispositivo no est\u00c3\u00a1 registrado."}, {Integer.toString(-20149), "Se produjo un error al recuperar informaci\u00c3\u00b3n acerca del sistema SonicWall GMS en el sistema de registro de servidores."}, {Integer.toString(-20150), "El n\u00c3\u00bamero de serie de SonicWall GMS especificado no est\u00c3\u00a1 registrado para el usuario."}, {Integer.toString(-20151), "Error al insertar la informaci\u00c3\u00b3n de elaboraci\u00c3\u00b3n de informes en el sistema de registro del servidor."}, {Integer.toString(-20152), "Combinaci\u00c3\u00b3n de n\u00c3\u00bamero de serie y nombre de usuario de SonicWall GMS no v\u00c3\u00a1lida."}, {Integer.toString(-20153), "Se produjo un error en el sistema de registro de servidores al actualizar SonicWall GMS para la integraci\u00c3\u00b3n con ViewPoint."}, {Integer.toString(-20154), "O bien el dispositivo no est\u00c3\u00a1 registrado, o se especific\u00c3\u00b3 un nombre de usuario no v\u00c3\u00a1lido."}, {Integer.toString(-20155), "O bien el contrato de base para este servicio no est\u00c3\u00a1 activado, o ha caducado."}, {Integer.toString(-20201), "Error interno: El XML de entrada al sistema del servidor no era v\u00c3\u00a1lido."}, {Integer.toString(-20202), "Error interno: No se especifica nombre de usuario en la entrada."}, {Integer.toString(-20203), "La contrase\u00c3\u00b1a especificada para la interfaz del sistema de registro de SonicWall GMS no es v\u00c3\u00a1lida."}, {Integer.toString(-20204), "Error interno: M\u00c3\u00a9todo solicitado no v\u00c3\u00a1lido para el sistema de registro del servidor."}, {Integer.toString(-20205), "Error interno: Versi\u00c3\u00b3n XML solicitada no v\u00c3\u00a1lida para el sistema de registro del servidor."}, {Integer.toString(-20401), "Error interno: Ha habido un error de base de datos en el sistema de registro del servidor."}, {Integer.toString(-20402), "Error interno: Ha habido un error de registro en el sistema de registro del servidor."}, {Integer.toString(-20403), "Error interno: Ha habido un error de componente en el sistema de registro del servidor."}, {Integer.toString(-20404), "Error interno: Ha habido un error de procedimiento en el sistema de registro del servidor."}, {Integer.toString(-20140), "No se encontr\u00c3\u00b3 informaci\u00c3\u00b3n de PKI para el dispositivo espec\u00c3\u00adfico en el sistema de registro del servidor."}, {Integer.toString(-20141), "El servicio de PKI no se ha activado para el dispositivo espec\u00c3\u00adfico."}, {Integer.toString(-227), "No hay suficiente memoria para cargar el archivo. Cargue un archivo de menor tama\u00c3\u00b1o."}, {Integer.toString(-66), "Se intent\u00c3\u00b3 cargar un archivo de firmas no v\u00c3\u00a1lido en el dispositivo."}, {Integer.toString(-67), "El archivo de firmas no pudo cargarse en el dispositivo. Compruebe si esta acci\u00c3\u00b3n es aplicable a este modelo o a esta versi\u00c3\u00b3n."}, {Integer.toString(-500), "Se recibi\u00c3\u00b3 un error de lm2.sonicwall.com."}, {Integer.toString(-501), "No se pudo obtener acceso al sitio web de lm2.sonicwall.com."}, {Integer.toString(-907), "La versi\u00c3\u00b3n de firmware en el dispositivo no es compatible."}, {Integer.toString(-901), "El ID de registro no es v\u00c3\u00a1lido o no existe."}, {Integer.toString(-902), "No se ha podido aplicar el registro adjunto de entidad."}, {Integer.toString(-903), "No se ha podido aplicar el registro."}, {Integer.toString(-904), "El id de la plantilla no es v\u00c3\u00a1lido o no existe."}, {Integer.toString(-905), "No se ha podido aplicar el registro."}, {Integer.toString(-906), "No se ha podido aplicar la plantilla."}, {Integer.toString(-908), "Tiempo de espera m\u00c3\u00a1ximo superado para la conexi\u00c3\u00b3n del dep\u00c3\u00b3sito."}, {Integer.toString(-909), "Tiempo de espera m\u00c3\u00a1ximo superado para la conexi\u00c3\u00b3n al host remoto."}, {Integer.toString(-910), "Los ajustes de configuraci\u00c3\u00b3n para este dispositivo no son correctos."}, {Integer.toString(-911), "Esperando para determinar los ajustes de configuraci\u00c3\u00b3n aplicables para este dispositivo."}, {Integer.toString(-912), "No se pudo encontrar el host de servicio web."}, {Integer.toString(-913), "No se pudo crear la conexi\u00c3\u00b3n de servicio web."}, {Integer.toString(-914), "Problema al acceder a datos o recursos a trav\u00c3\u00a9s del servicio web."}, {Integer.toString(-915), "No se ha podido realizar la autenticaci\u00c3\u00b3n con el servicio web."}, {Integer.toString(-800), "Este dispositivo no admite la generaci\u00c3\u00b3n de informes de flujo externo a GMS"}, {Integer.toString(-801), "Las configuraciones de la pasarela de reenv\u00c3\u00ado de flujo no son correctas"}, {Integer.toString(-802), "Este modelo no admite la generaci\u00c3\u00b3n de informes de flujo externo a GMS"}, {Integer.toString(-803), "Esta versi\u00c3\u00b3n de firmware no admite la generaci\u00c3\u00b3n de informes de flujo externo a GMS"}, {Integer.toString(-804), "Este dispositivo no tiene licencia para visualizar la aplicaci\u00c3\u00b3n"}, {Integer.toString(-805), "Espacio de almacenamiento insuficiente para asignar agente de flujo"}, {Integer.toString(-806), "Memoria de tiempo de ejecuci\u00c3\u00b3n insuficiente para asignar agente de flujo"}, {Integer.toString(-807), "No se pudo registrar agente de flujo\u00c2\u00a01"}, {Integer.toString(-808), "No se pudo registrar agente de flujo\u00c2\u00a02"}, {Integer.toString(-809), "No se pudieron registrar agentes de flujo\u00c2\u00a01 ni 2"}, {Integer.toString(-810), "No se pudieron registrar agente de flujo\u00c2\u00a01 ni reenv\u00c3\u00ado de flujo"}, {Integer.toString(-811), "No se pudieron registrar agentes de flujo\u00c2\u00a01, 2 ni reenv\u00c3\u00ado de flujo"}, {Integer.toString(-812), "No se pudieron registrar agente de flujo\u00c2\u00a02 ni reenv\u00c3\u00ado de flujo"}, {Integer.toString(-813), "No se pudo registrar reenv\u00c3\u00ado de flujo"}, {Integer.toString(-814), "El cortafuegos de la pasarela no est\u00c3\u00a1 disponible en GMS"}, {Integer.toString(-815), "Se produjo un error en la creaci\u00c3\u00b3n del t\u00c3\u00banel, del lado del cortafuegos de la pasarela"}, {Integer.toString(-816), "Se produjo un error en la creaci\u00c3\u00b3n del t\u00c3\u00banel del lado del dispositivo administrado"}, {Integer.toString(-817), "El dispositivo no tiene licencia para Cloud GMS Management and Reporting"}, {Integer.toString(-818), "Potencia de procesamiento insuficiente para asignar agente de flujo"}, {Integer.toString(-819), "Ancho de banda insuficiente para asignar agente de flujo"}, {Integer.toString(-820), "[ES]Failed to register to Flow Agent"}, {"EDIT_DOMAIN", "Editar dominio"}, {"VIEW_DOMAIN", "Ver detalles del dominio"}, {"ADD_DOMAIN", "Agregar dominio"}, {"SELECT_TO_DELETE", "Seleccione los dominios/servidores de aut. que se eliminar\u00c3\u00a1n."}, {"SELECT_AS_TO_DEL", "Seleccione los servidores de aut. que se eliminar\u00c3\u00a1n."}, {"DELETE_CONFIRMATION", "Ha seleccionado eliminar el dominio '"}, {"USER_DELETE_CONFIRMATION", "Todos los servidores de aut., usuarios, tipos de usuarios y sus configuraciones tambi\u00c3\u00a9n se eliminar\u00c3\u00a1n."}, {"USER_AS_DELETE_CONFIRMATION", "Todos los usuarios, tipos de usuarios y sus configuraciones tambi\u00c3\u00a9n se eliminar\u00c3\u00a1n."}, {"SURE_WANT_TO_CONTINUE", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea continuar?"}, {"MULTIPLE_DELETE_CONFIRMATION", "Ha seleccionado eliminar los siguientes dominios:"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "Ha seleccionado eliminar los siguientes servidores de aut.:"}, {"AND_AS_DELETE_CONFIRMATION", "y eliminar los siguientes servidores de aut.:"}, {"WANT_TO_CONTINUE", "\u00c2\u00bfDesea continuar?"}, {"DOMAIN", "Dominio"}, {"DOMAINS", "Dominios"}, {"SEARCH", "Buscar"}, {"NAME", "Nombre"}, {"DOMAIN_TYPE", "Tipo de dominio"}, {"DOMAIN_SETTINGS", "Configuraciones de dominio"}, {"ALIAS", "Alias"}, {"DISPLAY_DOMAIN", "Mostrar dominio en la pantalla de inicio de sesi\u00c3\u00b3n"}, {"SET_AS_DEFAULT", "Establecer como dominio predeterminado"}, {"HOST_NAME", "Nombre del host"}, {"HOST_TYPE", "Tipo de host"}, {"EQUALS", "Iguales"}, {"STARTS_WITH", "Comienza con"}, {"ENDS_WITH", "Termina con"}, {"CONTAINS", "Contiene"}, {"LOCAL", "Local"}, {"REMOTE", "Remoto"}, {"DOMAINS", "Dominios"}, {"SSL_USED", "SSL utilizado"}, {"CONFIGURE", "Configurar"}, {"NO_DOMAIN_FOUND", "No se encontraron dominios"}, {"NO_AS_FOUND", "No se encontraron servidores de aut."}, {"ADD_DOMAIN", "Agregar dominio"}, {"DELETE_DOMAINS", "Eliminar dominios/servidores de aut."}, {"DELETE_ASS", "Eliminar servidores de aut."}, {"EQUALS", "Iguales"}, {"STARTS_WITH", "Comienza con"}, {"ENDS_WITH", "Termina con"}, {"CONTAINS", "Contiene"}, {"LOCAL", "Local"}, {"REMOTE", "Remoto"}, {"REMOTE_DOMAIN", "Dominio remoto"}, {"ADMIN_PASSWORD", "Contrase\u00c3\u00b1a de administrador"}, {"DEFAULT_ADMIN_USER", "Usuario administrador predeterminado"}, {"AUTH_PORT", "Puerto de autenticaci\u00c3\u00b3n"}, {"ACCT_PORT", "Puerto de contabilidad"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "Nombre distinguido de base"}, {"SEARCH_FILTER", "Filtro de b\u00c3\u00basqueda"}, {"SHARED_SECRET", "Secreto compartido"}, {"USE_SSL", "Utilizar SSL"}, {"SSL_PORT", "Puerto SSL"}, {"ANONYMOUS_LOGIN", "Inicio de sesi\u00c3\u00b3n an\u00c3\u00b3nimo"}, {"LOGIN_USER_NAME", "Nombre distinguido de usuario de inicio de sesi\u00c3\u00b3n"}, {"DNAME_MSG", "Nombre distinguido utilizado para autenticar el servidor de directorio cuando se realiza un enlace. El valor de este campo debe ser especificado como un DN (nombre distinguido). Ejemplo: [uid=xyz,ou=People,dc=example,dc=com], [cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "Contrase\u00c3\u00b1a de inicio de sesi\u00c3\u00b3n"}, {"PROTOCOL_VERSION", "Versi\u00c3\u00b3n de protocolo"}, {"LDAPV2", "LDAP versi\u00c3\u00b3n 2"}, {"LDAPV3", "LDAP versi\u00c3\u00b3n 3"}, {"SETTINGS", "Configuraciones"}, {"USER_DIRECTORY_LDAP", "Esquema LDAP de directorio de usuario"}, {"LDAP_SCHEMA", "Esquema LDAP"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "Definido por el usuario"}, {"USER_OBJECTS", "Objetos Usuario"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "Atributo de nombre de inicio de sesi\u00c3\u00b3n"}, {"FIRST_NAME", "Atributo del primer nombre"}, {"LAST_NAME", "Atributo del apellido"}, {"EMAIL", "Atributo del correo electr\u00c3\u00b3nico"}, {"TELEPHONE", "Atributo del tel\u00c3\u00a9fono"}, {"CON_TIMEOUT", "Tiempo de espera de conexi\u00c3\u00b3n"}, {"SCHEMA", "Esquema"}, {"TEST_SETTINGS", "Configuraciones de prueba"}, {"TEST_RADIUS_SETTINGS", "Prueba de configuraci\u00c3\u00b3n de RADIUS"}, {"TEST_LDAP_MSG", "Para probar la configuraci\u00c3\u00b3n de LDAP, escriba un nombre de usuario y una contrase\u00c3\u00b1a LDAP"}, {"TEST_RADIUS_MSG", "Para probar la configuraci\u00c3\u00b3n de RADIUS, escriba un nombre de usuario y una contrase\u00c3\u00b1a RADIUS"}, {"TEST_MSG", "v\u00c3\u00a1lidos, y haga clic en el bot\u00c3\u00b3n Prueba. Tenga en cuenta que se aplicar\u00c3\u00a1n todos los cambios efectuados."}, {"USER", "Usuario"}, {"PWD", "Contrase\u00c3\u00b1a"}, {"RUN_CLIENT_TEST", "Ejecutar prueba de cliente"}, {"TEST_STATUS", "Estado de la prueba"}, {"RETURNED_USER_ATTRIBUTES", "Resultados de pruebas devueltos"}, {"TEST", "Prueba"}, {"OK", "ACEPTAR"}, {"CANCEL", "Cancelar"}, {"CLOSE", "Cerrar"}, {"CANT_DELETE_LOCALDOMAIN", "El dominio local no se puede editar/eliminar."}, {"CANT_EDIT", "No se puede editar si hay un \u00c3\u00banico dominio."}, {"EMPTY_NAME", "El nombre no puede estar vac\u00c3\u00ado"}, {"EMPTY_ADMIN_PWD", "La contrase\u00c3\u00b1a del administrador no puede estar vac\u00c3\u00ada"}, {"EMPTY_ADMIN_USER", "El usuario administrador predeterminado no puede estar vac\u00c3\u00ado"}, {"EMPTY_AUTH_PORT", "El puerto de autenticaci\u00c3\u00b3n no puede estar vac\u00c3\u00ado"}, {"POSITIVE_AUTH_PORT", "El puerto de autenticaci\u00c3\u00b3n debe ser un n\u00c3\u00bamero positivo"}, {"AUTH_PORT_RANGE", "El puerto de autenticaci\u00c3\u00b3n debe estar en el rango 0-65535"}, {"EMPTY_ACCT_PORT", "El puerto de contabilidad no puede estar vac\u00c3\u00ado"}, {"POSITIVE_ACCT_PORT", "El puerto de contabilidad debe ser un n\u00c3\u00bamero positivo"}, {"EMPTY_BD_NAME", "El nombre distinguido de base no puede estar vac\u00c3\u00ado"}, {"EMPTY_SEARCH_FILTER", "El filtro de b\u00c3\u00basqueda no puede estar vac\u00c3\u00ado"}, {"EMPTY_SHRED_SECRET", "Secreto compartido no puede estar vac\u00c3\u00ado"}, {"EMPTY_SSL_PORT", "El puerto SSL no puede estar vac\u00c3\u00ado"}, {"POSITIVE_SSL_PORT", "El puerto SSL debe ser un n\u00c3\u00bamero positivo"}, {"SSL_PORT_RANGE", "El puerto SSL debe estar en el rango 0-65535"}, {"EMPTY_LOGIN", "El nombre distinguido del usuario de inicio de sesi\u00c3\u00b3n no puede estar vac\u00c3\u00ado"}, {"EMPTY_LOGIN_PWD", "La contrase\u00c3\u00b1a de inicio de sesi\u00c3\u00b3n no puede estar vac\u00c3\u00ada"}, {"EMPTY_CON_TIMEOUT", "El tiempo de espera de conexi\u00c3\u00b3n no puede estar vac\u00c3\u00ado"}, {"POSITIVE_CON_TIMEOUT", "El tiempo de espera de conexi\u00c3\u00b3n debe ser un n\u00c3\u00bamero positivo"}, {"RECOMMEND_SSL", "Se recomienda usar SSL para asegurar la comunicaci\u00c3\u00b3n con el servidor remoto."}, {"CON_NOT_SECURE", "Su conexi\u00c3\u00b3n no ser\u00c3\u00a1 segura si no utiliza SSL."}, {"DOMAIN_EXISTS", "Ya existe un dominio con este nombre"}, {"ALIAS_EXISTS", "Ya existe un alias con este nombre"}, {"DOMAIN_INVALID", "Nombre de dominio especificado no v\u00c3\u00a1lido."}, {"DOMAIN_VALID_CHARS", "El nombre puede contener solamente los siguientes caracteres:"}, {"DOMAIN_VALID_CHARS_LIST", "Alfanum\u00c3\u00a9rico, .\u00c2\u00a0(punto), -\u00c2\u00a0(guion), _\u00c2\u00a0(subrayado) y espacio."}, {"SPECIFY_VALID_NAME", "Especifique un nombre con los caracteres permitidos."}, {"DIR_GRP_SETTINGS", "Configuraciones de grupo de Active Directory"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "Permitir solo miembros del grupo de AD"}, {"DIR_GROUPS", "Grupos de Active Directory"}, {"GRP_NAME_INVALID", "Nombre(s) del grupo no v\u00c3\u00a1lido especificado(s)."}, {"GRP_NAME_INVALID_LENGTH", "Los nombres del grupo no pueden tener m\u00c3\u00a1s de 200 caracteres."}, {"AUTH_SERVER_NAME", "Nombre del servidor de aut."}, {"ADD_AUTH_SERVER", "Agregar un servidor de aut."}, {"ADD_AUTHSERVER", "Agregar servidor de aut."}, {"EDIT_AUTHSERVER", "Editar servidor de aut."}, {"DELETE_DOMAIN", "Eliminar este dominio"}, {"CANT_DELETE_LOCAL_AS", "El servidor de aut. local no se puede editar/eliminar"}, {"CANT_DELETE_ADMIN_AS", "Este servidor de aut. no se puede eliminar, dado que el administrador predeterminado para este dominio est\u00c3\u00a1 autenticado contra este servidor. \nMueva este administrador predeterminado a otro servidor de aut. e intente de nuevo."}, {"EDIT_AUTH_SERVER", "Editar este servidor de aut."}, {"VIEW_AUTH_SERVER", "Mostrar detalles del servidor de aut."}, {"DELETE_AUTH_SERVER", "Eliminar este servidor de aut."}, {"AS_INVALID", "Servidor de aut. no v\u00c3\u00a1lido especificado."}, {"AS_EXISTS", "Ya existe un servidor de aut. con este nombre"}, {"EMPTY_AS_NAME", "El nombre del servidor de aut. no puede estar vac\u00c3\u00ado"}, {"AS_NAME_MSG", "El nombre del servidor de aut. que podr\u00c3\u00a1 crearse. Este nombre es \u00c3\u00batil para administrar los diferentes servidores de autenticaci\u00c3\u00b3n en un dominio."}, {"AS_DELETE_CONFIRMATION", "Ha seleccionado eliminar el servidor de aut. '"}, {"PRI_RADIUS", "Servidor RADIUS principal"}, {"AUTH_PROTOCOL", "Protocolo de autenticaci\u00c3\u00b3n"}, {"RADIUS_TIMEOUT", "Tiempo de espera de RADIUS (segundos)"}, {"MAX_RETRIES", "Cantidad m\u00c3\u00a1xima de intentos"}, {"BACK_RADIUS", "Servidor RADIUS de reserva"}, {"RADIUS_USER_GROUP", "Configuraciones del grupo de usuario RADIUS"}, {"ALLOW_GROUP_MEMBERS", "Permitir solamente grupo RADIUS\tMiembros"}, {"USE_SW_VSA", "Usar atributo espec\u00c3\u00adfico de proveedor de SonicWall en servidor RADIUS"}, {"USE_FILTER_ID", "Usar atributo Filtro-ID de RADIUS en servidor RADIUS"}, {"ALLOW_GROUPS", "Se permiten grupos RADIUS"}, {"USER_GROUP", "Grupo de usuarios"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "El tiempo de espera de RADIUS no puede estar vac\u00c3\u00ado"}, {"POSITIVE_RADIUS_TIMEOUT", "El tiempo de espera de RADIUS debe ser un n\u00c3\u00bamero positivo"}, {"EMPTY_MAX_RETRIES", "Los reintentos m\u00c3\u00a1ximos no pueden estar vac\u00c3\u00ados"}, {"POSITIVE_MAX_RETRIES", "Los reintentos m\u00c3\u00a1ximos deben ser un n\u00c3\u00bamero positivo"}, {"TEST_USER_NAME", "El campo Comprobar nombre de usuario no puede estar vac\u00c3\u00ado."}, {"TEST_USER_PWD", "El campo Comprobar contrase\u00c3\u00b1a de usuario no puede estar vac\u00c3\u00ado."}, {"DOMAIN_NAME_MSG", "El nombre del dominio que podr\u00c3\u00a1 crearse. Este nombre puede estar visible en el men\u00c3\u00ba desplegable Dominios en la p\u00c3\u00a1gina de inicio de sesi\u00c3\u00b3n."}, {"DOMAIN_TYPE_MSG", "El tipo de dominio, [Local] o [Remoto]. Un dominio que necesita autenticar usuarios de una plataforma externa como un servidor LDAP o AD deber\u00c3\u00ada ser creado como un dominio de tipo [Remoto]. Un dominio de tipo [Local] tendr\u00c3\u00ada la cuenta de usuario y los detalles de autenticaci\u00c3\u00b3n en el interior de la base de datos SGMS. Al crear un dominio de tipo [Local], es posible admitir m\u00c3\u00baltiples dominios en el interior de SGMS sin necesitar interfaces de autenticaci\u00c3\u00b3n externa."}, {"ADMIN_PASSWORD_MSG", "Cuando se crea un nuevo dominio de tipo [Local], se crea un usuario [admin] de forma predeterminada para el dominio. Debe especificar la contrase\u00c3\u00b1a para el usuario admin."}, {"ADMIN_USERID_MSG", "Especificar un nombre de usuario que necesita ser el admin para el dominio. Este nombre de usuario debe ser un nombre de usuario v\u00c3\u00a1lido en el servidor de directorio asociado con este dominio. Si el nombre [admin] est\u00c3\u00a1 especificado para este campo, un usuario con id de usuario [admin] debe existir en el directorio asociado y debe tener privilegios administrativos. Ejemplo: jdoe"}, {"HOST_NAME_MSG", "El nombre de host o la direcci\u00c3\u00b3n IP del servidor de autenticaci\u00c3\u00b3n remota. Ejemplo: \t[mydc.example.com], [X.X.X.X] (ip address), [company.com]. Si el servidor remoto es un servidor Active Directory (AD) de Windows y tiene m\u00c3\u00baltiples dominios donde debe autenticar usuarios debajo del bosque de AD, especifique el nombre del cat\u00c3\u00a1logo global o la direcci\u00c3\u00b3n IP de su bosque de AD como nombre de host."}, {"AUTHENTICATION_PORT_MSG", "El n\u00c3\u00bamero de puerto en el servidor LDAP o AD en el que se escuchan las solicitudes de autenticaci\u00c3\u00b3n. El valor predeterminado es 389 en el caso de los servidores LDAP/AD. Si tiene el nombre del cat\u00c3\u00a1logo global o la direcci\u00c3\u00b3n IP especificados de su bosque de AD como nombre de host, tambi\u00c3\u00a9n debe especificar el n\u00c3\u00bamero de puerto correspondiente. El valor predeterminado es 3268."}, {"HOST_TYPE_MSG", "Este valor indica el tipo de servidor de autenticaci\u00c3\u00b3n remota si es un servidor LDAP, un servidor Active Directory de Windows o RADIUS."}, {"ALIAS_MSG", "Una forma corta del nombre de dominio que se puede utilizar en la pantalla de inicio de sesi\u00c3\u00b3n de GMS para iniciar sesi\u00c3\u00b3n cuando los dominios no se muestran. Ejemplo: alias\\\\username. El alias se completa autom\u00c3\u00a1ticamente con el nombre del dominio si la longitud del nombre del dominio es menor o igual que 16 caracteres."}, {"PROTOCOL_VERSION_MSG", "Esta es la versi\u00c3\u00b3n de protocolo LDAP en la que est\u00c3\u00a1 instalado el servidor LDAP/AD remoto."}, {"BASE_DN_MSG", "El nombre distinguido de base se utiliza para identificar la entrada de ra\u00c3\u00adz en el directorio en las que ocurrir\u00c3\u00a1n las b\u00c3\u00basquedas iniciadas por SGMS. El nombre distinguido de base para un directorio (es decir, ejemplo.com) debe estar escrito en el formato: [dc=example,dc=com]. Siempre es necesario especificar el nodo de nivel m\u00c3\u00a1s alto como el nombre distinguido de base en el \u00c3\u00a1rbol de directorios por debajo del cual espera que est\u00c3\u00a9n presente todos los usuarios que puedan iniciar sesi\u00c3\u00b3n en SGMS."}, {"USE_SSL_MSG", "Especificar si se utiliza SSL para vincular al servidor remoto. Esto se recomienda encarecidamente. Para esto, el certificado CA del servidor remotoo o el certificado de ra\u00c3\u00adz de CA que firm\u00c3\u00b3 el certificado del servidor debe estar presente en el almac\u00c3\u00a9n de claves de SGMS como CA seguro."}, {"SSL_PORT_MSG", "El n\u00c3\u00bamero de puerto en el que servidor remoto escucha las solicitudes SSL de enlace. El valor predeterminado es de 636 en el caso de los servidores LDAP/AD. Si tiene el nombre del cat\u00c3\u00a1logo global o la direcci\u00c3\u00b3n IP especificados de su bosque de AD como nombre de host, tambi\u00c3\u00a9n debe especificar el n\u00c3\u00bamero de puerto SSL correspondiente. El valor predeterminado es 3269."}, {"ANONYMOUS_LOGIN_MSG", "(No se recomienda). Especifique si SGMS debe vincular al servidor remoto de forma an\u00c3\u00b3nima. Para este servidor LDAP/AD remoto debe permitir enlaces an\u00c3\u00b3nimos. Los enlaces an\u00c3\u00b3nimos deben intentarse solo cuando una cuenta de servicio (al menos una cuenta de usuario v\u00c3\u00a1lida en el directorio) no es conocida de antemano. Esto no se aconseja."}, {"LOGIN_USER_DN_MSG", "Nombre distinguido utilizado para autenticar el servidor de directorio cuando se realiza un enlace. El valor de este campo debe ser especificado como un DN (nombre distinguido). Ejemplo: [uid=xyz, ou=People, dc=example, dc=com], [cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "Contrase\u00c3\u00b1a para el nombre distinguido de usuario de inicio de sesi\u00c3\u00b3n."}, {"CONN_TIMEOUT_MSG", "Este valor (en milisegundos) es el per\u00c3\u00adodo de espera de conexi\u00c3\u00b3n. Despu\u00c3\u00a9s de este per\u00c3\u00adodo, el intento de conexi\u00c3\u00b3n con el servidor remoto se abandonar\u00c3\u00a1 si no tiene \u00c3\u00a9xito."}, {"LDAP_SCHEMA_MSG", "El esquema LDAP del servidor LDAP/AD asociado."}, {"OBJ_CLASS_MSG", "El nombre de una de las clases de objeto est\u00c3\u00a1ndar a los que pertenecen los usuarios."}, {"LOGIN_NAME_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP/AD que representa el id de usuario. Este es el atributo en el servidor LDAP cuyo valor deber\u00c3\u00ada utilizarse como el ID de usuario en la p\u00c3\u00a1gina de inicio de sesi\u00c3\u00b3n de SGMS. Ejemplo: uid, sAMAccountName etc."}, {"FIRST_NAME_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP que representa el nombre. Ejemplo: givenName."}, {"LAST_NAME_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP que representa el apellido. Ejemplo: sn."}, {"EMAIL_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP que representa el id de correo electr\u00c3\u00b3nico. Ejemplo: mail."}, {"TELEPHONE_ATTRIBUTE_MSG", "El nombre de atributo en el servidor LDAP que representa el n\u00c3\u00bamero de tel\u00c3\u00a9fono. Ejemplo: telephoneNumber."}, {"TEST_PANE_MSG", "Aqu\u00c3\u00ad puede probar las configuraciones del servidor de aut. (LDAP/AD/RADIUS) introducidas en el panel de configuraci\u00c3\u00b3n."}, {"TEST_PANE_USER_MSG", "Introduzca un nombre de usuario v\u00c3\u00a1lido que introducir\u00c3\u00ada en la p\u00c3\u00a1gina de inicio de sesi\u00c3\u00b3n de SGMS para iniciar sesi\u00c3\u00b3n en GMS. Este nombre de usuario debe ser v\u00c3\u00a1lido y estar presente en el directorio asociado para este dominio. Introduzca tambi\u00c3\u00a9n la contrase\u00c3\u00b1a para este nombre de usuario en el directorio."}, {"EMPTY_DIR_GROUP", "Los nombres de grupo de directorios no pueden estar vac\u00c3\u00ados."}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "Cuando esta opci\u00c3\u00b3n est\u00c3\u00a1 seleccionada, permite solo aquellos usuarios que son miembros de los grupos de Active Directory especificados para iniciar sesi\u00c3\u00b3n en GMS. Con esta opci\u00c3\u00b3n, es necesario tambi\u00c3\u00a9n seleccionar el tipo de host como [Active Directory] en el panel de configuraci\u00c3\u00b3n."}, {"DIR_GROUPS_MSG", "Especificar los nombres de grupo de AD, cuyos miembros deben ser autorizados para iniciar sesi\u00c3\u00b3n en GMS. Los grupos de AD m\u00c3\u00baltiples se pueden especificar como delimitados por punto y coma. Ejemplo: [GMSUsers], [ADGroup1;AD group2;GMS Users;Group4]"}, {"RADIUS_HOST_NAME_MSG", "El nombre de host o la direcci\u00c3\u00b3n IP del servidor de autenticaci\u00c3\u00b3n RADIUS. Ejemplo: [myradius.example.com], [X.X.X.X] (ip address), [company.com]."}, {"RADIUS_AUTH_PORT_MSG", "El n\u00c3\u00bamero de puerto en el servidor RADIUS en el que se escuchan las solicitudes de autenticaci\u00c3\u00b3n. Valor predeterminado 1812."}, {"RADIUS_SHARED_SECRET_MSG", "El secreto compartido entre GMS y el servidor RADIUS. Este es un valor de cadena conocido solo por el servidor RADIUS y el cliente de RADIUS."}, {"RADIUS_AUTH_PROTOCOL_MSG", "El protocolo de autenticaci\u00c3\u00b3n de RADIUS que se utilizar\u00c3\u00a1 para la autenticaci\u00c3\u00b3n."}, {"RADIUS_TIMEOUT_MSG", "Este valor (en segundos) indica el per\u00c3\u00adodo de espera de conexi\u00c3\u00b3n. Despu\u00c3\u00a9s de este per\u00c3\u00adodo, el intento de conexi\u00c3\u00b3n con el servidor RADIUS se abandonar\u00c3\u00a1 si no tiene \u00c3\u00a9xito."}, {"RADIUS_MAX_RETRIES_MSG", "Este valor denota el n\u00c3\u00bamero de veces que se debe intentar la autenticaci\u00c3\u00b3n del servidor RADIUS. Despu\u00c3\u00a9s de este per\u00c3\u00adodo, el intento de autenticaci\u00c3\u00b3n con el servidor remoto se abandonar\u00c3\u00a1 si no tiene \u00c3\u00a9xito."}, {"RADIUS_ONLY_GROUP_MSG", "Cuando esta opci\u00c3\u00b3n est\u00c3\u00a1 seleccionada, permite solo aquellos usuarios que son miembros de los grupos de usuarios de RADIUS especificados para iniciar sesi\u00c3\u00b3n en GMS."}, {"RADIUS_USE_FILTER_MSG", "Cuando est\u00c3\u00a1 seleccionada esta opci\u00c3\u00b3n, permite que se utilice el valor del atributo de RADIUS \\'Filtro-ID\\' como el identificador de grupo de usuarios de RADIUS. Para poder utilizar esta opci\u00c3\u00b3n, el servidor RADIUS debe estar configurado correctamente, para regresar este par de atributo-valor con cada usuario-id que se autentica desde el servidor RADIUS para iniciar sesi\u00c3\u00b3n en GMS."}, {"RADIUS_USE_SW_MSG", "Cuando se selecciona, esta opci\u00c3\u00b3n utiliza el valor de los atributos espec\u00c3\u00adficos del proveedor de SonicWall [SonicWall-User-Group y SonicWall-User-Groups] como identificador del grupo de usuarios RADIUS. Para utilizar esta opci\u00c3\u00b3n, el servidor RADIUS debe estar configurado correctamente para devolver el par del valor de atributo espec\u00c3\u00adfico del proveedor de SonicWall con cada id. de usuario autenticado desde el servidor RADIUS para el inicio de sesi\u00c3\u00b3n en GMS."}, {"RADIUS_ALLOW_GROUPS_MSG", "Especificar los nombres de grupo de usuarios de RADIUS, cuyos miembros deben ser autorizados para iniciar sesi\u00c3\u00b3n en GMS. Ejemplo [GMSUsers]. Los grupos de usuarios de RADIUS m\u00c3\u00baltiples se pueden especificar en forma de una cadena separada por punto y coma. Ejemplo: [RadGroup1;Rad group2;GMS Users;Group4]."}, {"ADD_AUTH_SERVER_MSG", "Permite, si se comprueba, agregar una nueva configuraci\u00c3\u00b3n de servidor de aut. mientras agrega el dominio."}, {"PAGE_LABEL", "P\u00c3\u00a1gina"}, {"MANAGE_PAGE", "Administrar p\u00c3\u00a1gina"}, {"ADD_COMPONENT", "Agregar componente"}, {"PAGE_MANAGER", "Administrador de p\u00c3\u00a1ginas"}, {"ADD_NEW_PAGE", "Agregar nueva p\u00c3\u00a1gina"}, {"DEFAULT_PAGE", "P\u00c3\u00a1gina predeterminada"}, {"PAGE_DETAILS", "Detalles de p\u00c3\u00a1gina"}, {"PAGE_TITLE", "T\u00c3\u00adtulo de p\u00c3\u00a1gina"}, {"COMPONENT_TITLE", "T\u00c3\u00adtulo de componente"}, {"PAGE_LAYOUT", "Dise\u00c3\u00b1o de p\u00c3\u00a1gina"}, {"ONE_COLUMN_LAYOUT", "1 columna (100)"}, {"TWO_COLUMN_LAYOUT", "2 columnas (50:50)"}, {"THREE_COLUMN_LAYOUT", "3 columnas (30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 columnas (25:25:25:25)"}, {"ADD", "Agregar"}, {"EDIT", "Editar"}, {"DELETE", "Eliminar"}, {"ADD_COMPONENT_MANAGER", "Agregar gestor de componentes"}, {"TYPE", "Tipo"}, {"RSS_FEED_DETAILS", "Detalles de las fuentes RSS"}, {"RSS_FEEDS", "Fuentes RSS"}, {"TITLE", "T\u00c3\u00adtulo"}, {"ITEMS", "Elementos para mostrar (m\u00c3\u00a1x.)"}, {"REFRESH_INTERVAL", "Intervalo de actualizaci\u00c3\u00b3n"}, {"REFRESH_INTERVAL_MINUTE", "en minutos"}, {"EVENT_ALERT_DETAILS", "Detalles de alerta de eventos"}, {"ALERT_TYPES", "Tipos de alerta"}, {"REFRESH_INTERVAL_HOUR", "en horas"}, {"ALERT_SHOW_TIME_HOURS", "Mostrar alertas disparadas dentro del \u00c3\u00baltimo"}, {"APPLICATION_WIDGET_DETAILS", "Detalles del widget de aplicaciones"}, {"WIDGETS", "Widgets"}, {"RSS_FEED_TYPE", "Fuente RSS"}, {"EVENT_ALERT_TYPE", "Alerta de eventos"}, {"APPLICATION_WIDGET_TYPE", "Widget de aplicaciones"}, {"CUSTOM_RSS_FEED", "Fuentes RSS personalizadas"}, {"CUSTOM_RSS_URL", "URL de la RSS personalizada"}, {"END_EDIT", "Finalizar edici\u00c3\u00b3n"}, {"RSS_URL", "URL de la RSS"}, {"SAVE", "Guardar"}, {"DEFAULT_PAGE", "P\u00c3\u00a1gina predeterminada"}, {"SAVE_LAYOUT_FAIL_MSG", "No se ha podido guardar el dise\u00c3\u00b1o"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "No se ha podido guardar el estado de la barra de control"}, {"ADD_COMPONENT_FAIL_MSG", "No se ha podido agregar el componente"}, {"DELETE_COMPONENT_FAIL_MSG", "No se ha podido eliminar el componente"}, {"PAGE_ACTION_FAIL_MSG", "Error en la acci\u00c3\u00b3n de la p\u00c3\u00a1gina"}, {"RSS_FEED_FAIL_MSG", "Error de recuperaci\u00c3\u00b3n de la fuente RSS."}, {"EVENT_ALERT_FAIL_MSG", "Error de recuperaci\u00c3\u00b3n de la alerta de GEM."}, {"APPLICATION_WIDGET_FAIL_MSG", "Error de recuperaci\u00c3\u00b3n del widget de aplicaciones."}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "No se configuraron alertas para el destino: Tablero."}, {"NO_ALERT_FOUND_MSG", "No se encontraron alertas para mostrar."}, {"CHANGE_DEFAULT_PAGE_MSG", "Al establecer esta p\u00c3\u00a1gina como predeterminada, cambiar\u00c3\u00a1 cualquier configuraci\u00c3\u00b3n de p\u00c3\u00a1gina predeterminada previa. \u00c2\u00bfEst\u00c3\u00a1 seguro de que desea continuar?"}, {"DELETE_DEFAULT_PAGE_MSG", "No se puede eliminar la p\u00c3\u00a1gina predeterminada. Elija cualquier otra p\u00c3\u00a1gina para que sea la p\u00c3\u00a1gina predeterminada y elimine esta p\u00c3\u00a1gina."}, {"DELETE_PAGE_AND_COMPONENT_MSG", "Al eliminar una p\u00c3\u00a1gina por vez, se eliminan todos los componentes de esa p\u00c3\u00a1gina. \u00c2\u00bfEst\u00c3\u00a1 seguro de que desea eliminar esta p\u00c3\u00a1gina?"}, {"VALID_URL_MSG", "Introduzca una URL en el formato: http://www.yourdomain.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea eliminar este componente?"}, {"NO_COMPONENT_MSG", "No se agreg\u00c3\u00b3 ning\u00c3\u00ban componente en la p\u00c3\u00a1gina en este momento."}, {"LOAD_DATA_MSG", "Cargando datos\u00e2\u20ac\u00a6"}, {"COMPONENT_EXISTS_MSG", "El componente ya existe. Detalles del componente existente: "}, {"REFRESH_INTERVAL_RANGE", "El intervalo de actualizaci\u00c3\u00b3n est\u00c3\u00a1 fuera de alcance. Complete un valor v\u00c3\u00a1lido."}, {"ITEMS_RANGE", "El n\u00c3\u00bamero de elementos est\u00c3\u00a1 fuera de alcance. Complete con un n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"ALERT_SHOWTIME_RANGE", "Mostrar hora para alertas est\u00c3\u00a1 fuera de alcance. Complete un valor v\u00c3\u00a1lido."}, {"NO_COMPONENT_SELECTED_ERR", ":Seleccione uno antes de agregar componentes a la p\u00c3\u00a1gina."}, {"ADDCOMPONENT_ERR_QUOTES", "El t\u00c3\u00adtulo de componente no puede contener los siguientes caracteres: comilla simple, comilla doble, dos puntos, porcentaje, tecla numeral, signo de interrogaci\u00c3\u00b3n y s\u00c3\u00admbolos de barras verticales."}, {"ADDPAGE_ERR_QUOTES", "El t\u00c3\u00adtulo de la p\u00c3\u00a1gina no puede contener los siguientes caracteres: comilla simple, comilla doble, dos puntos, porcentaje, tecla numeral, signo de interrogaci\u00c3\u00b3n y s\u00c3\u00admbolos de barras verticales."}, {"TIME_PERIOD", "Per\u00c3\u00adodo"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "Al eliminar una p\u00c3\u00a1gina por vez, se eliminan todos los widgets de esa p\u00c3\u00a1gina. \u00c2\u00bfEst\u00c3\u00a1 seguro de que desea eliminar esta p\u00c3\u00a1gina?"}, {"ADDWIDGET_ERR_QUOTES", "El t\u00c3\u00adtulo de widget no puede contener los siguientes caracteres: comilla simple, comilla doble, dos puntos, porcentaje, tecla numeral, signo de interrogaci\u00c3\u00b3n y s\u00c3\u00admbolos de barras verticales."}, {"TIME_PERIOD", "Per\u00c3\u00adodo"}, {"COPY_WIDGET_VALIDATION_MSG", "Seleccione una p\u00c3\u00a1gina para copiar."}, {"COPY_WIDGET_HEADER", "Copiar widget"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "Ninguna palabra clave en la cadena de b\u00c3\u00basqueda es aplicable a este widget."}, {"IGNORED_INVALID_SEARCH_FILTER", "Filtro de b\u00c3\u00basqueda no v\u00c3\u00a1lido ignorado."}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "Una o m\u00c3\u00a1s instancias de GMSVP no tienen ubicaci\u00c3\u00b3n geogr\u00c3\u00a1fica."}, {"NDA_NG_REPORTING_WIDGET_MSG", "No se encontraron registros coincidentes."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "Mensaje de alerta"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u00c3\u0161ltima hora notificada"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "Tipo de alerta"}, {"LOGS_WIDGET_COL_MESSAGE", "Mensaje"}, {"LOGS_WIDGET_COL_DATE", "Fecha"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "Detalles del usuario"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "Hora del \u00c3\u00baltimo acceso"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "Descripci\u00c3\u00b3n"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "Tiempo programado (Local)"}, {"DSB_CONFIRM_DELETE_WIDGET", "Esta operaci\u00c3\u00b3n eliminar\u00c3\u00a1 el widget, \u00c2\u00bfdesea continuar?"}, {"DSB_SEARCH_DIALOG_MESG", "Estos widgets concuerdan con el resultado para "}, {"DSB_SEARCH_DIALOG_HEADER", "Resultados de b\u00c3\u00basqueda adicionales"}, {"DSB_CLEARHISTORY_MESG", "\u00c2\u00bfDesea borrar todo el historial de b\u00c3\u00basqueda?"}, {"DSB_CLEARHISTORY_HDR", "historial de b\u00c3\u00basqueda"}, {"DSB_ADDNEW_WIDGET_LBL", "Agregar nuevo widget: "}, {"DSB_GENSTTINGS_HDR", "Configuraci\u00c3\u00b3n general "}, {"DSB_ASSOCPROD_HDR", "Productos asociados "}, {"DSB_SUBALERTS_HDR", "Subalertas incluidas. "}, {"DSB_WIDGETTITLE_LBL", "T\u00c3\u00adtulo: "}, {"DSB_NOFITEMS_LBL", "Cantidad de elementos: "}, {"DSB_REFINT_LBL", "Intervalo de actualizaci\u00c3\u00b3n: "}, {"DSB_ALERTSTRIGGERED_LBL", "Mostrar alertas activadas dentro del \u00c3\u00baltimo: "}, {"DSB_NEWSUBALERTS_LBL", "Nuevas subalertas: "}, {"DSB_CUSTRSSURL_LBL", "URL de la RSS personalizada: "}, {"DSB_WRAPTEXT_LBL", "Ajustar el texto: "}, {"DSB_ADDPAGE_HDR", "Agregar nueva p\u00c3\u00a1gina "}, {"DSB_ADDPAGE_LBL", "T\u00c3\u00adtulo de p\u00c3\u00a1gina: "}, {"DSB_MAPLOCATIONDLG_HDR", "Agregar/editar ubicaci\u00c3\u00b3n"}, {"DSB_ADDRESS_LBL", "Direcci\u00c3\u00b3n: "}, {"DSB_GEOLOCATION_LBL", "Ubicaci\u00c3\u00b3n geogr\u00c3\u00a1fica: "}, {"DSB_DELPAGE_LBL", "P\u00c3\u00a1gina generada por el sistema; no es posible eliminarla."}, {"DSB_DELPAGE_HDR", "\u00c2\u00bfDesea eliminar la p\u00c3\u00a1gina?"}, {"DSB_DELPAGECONFIRM_MSG", "\u00c2\u00bfDesea eliminar la p\u00c3\u00a1gina?"}, {"CZ_YES", "S\u00c3\u00ad"}, {"CZ_CERT_ISSUER", "Emisor del certificado"}, {"CZ_SUB_DN", "Nombre distinguido del sujeto"}, {"CZ_CERT_SN", "N\u00c3\u00bamero de serie del certificado"}, {"CZ_VALID_FROM", "V\u00c3\u00a1lido desde"}, {"CZ_EXPIRES_ON", "Caduca el"}, {"CZ_STATUS", "Estado"}, {"CZ_REQ_GEN", "Solicitud generada"}, {"CZ_SUB_KEY_ID", "Identificador clave del asunto"}, {"CZ_CRL_STATUS", "Estado de CRL"}, {"CZ_CRL_EXPIRES_ON", "CRL caduca el"}, {"CZ_CRL_REQUIRED", "Se requiere CRL"}, {"CZ_CRL_AUTO_URL", "URL de actualizaci\u00c3\u00b3n autom\u00c3\u00a1tica de CRL"}, {"CZ_HEADER", "Certificados y solicitudes de certificado"}, {"CZ_NAME", "Nombre"}, {"CZ_TYPE", "Tipo"}, {"CZ_VALIDATED", "Validado"}, {"CZ_EXPIRES", "Caduca"}, {"CZ_DETAILS", "Detalles"}, {"CZ_CONFIGURE", "Configurar"}, {"CZ_DELETE_CERT", "Eliminar este certificado"}, {"CZ_CANT_DELETE_CERT", "Este es un certificado incorporado y no se puede eliminar"}, {"CZ_EMAIL_CERT", "Env\u00c3\u00ade este certificado por correo electr\u00c3\u00b3nico"}, {"CZ_CANT_EMAIL_CERT", "Solo se pueden enviar por correo electr\u00c3\u00b3nico los certificados locales y las solicitudes de firma importados"}, {"CZ_IMPORT_CERT_CRL", "Importar lista de revocaci\u00c3\u00b3n de certificados (CRL)"}, {"CZ_UPLOAD_SIGNED_CERT", "Cargar certificado firmado"}, {"CZ_CERT_SEARCH", "B\u00c3\u00basqueda de certificados"}, {"CZ_CERT_SELECTED", "Ha seleccionado eliminar el certificado"}, {"CZ_SURE", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea continuar?"}, {"CZ_CERTS_SELECTED", "Ha seleccionado eliminar los siguientes certificados."}, {"CZ_PLZ_SELECT", "Seleccione los certificados que se eliminar\u00c3\u00a1n."}, {"CZ_VIEW_STYLE", "Estilo de vista de certificados"}, {"CZ_ALL_CERTS", "Todos los certificados"}, {"CZ_IMPORT_CERTS", "Certificados y solicitudes importados"}, {"CZ_BUILTIN_CERTS", "Certificados incorporados"}, {"CZ_INCLUDE_EXPIRED_CERTS", "Incluir los certificados incorporados caducados"}, {"CZ_IMPORT", "Importar\u00e2\u20ac\u00a6"}, {"CZ_NEW_REQ", "Nueva solicitud de firma..."}, {"CZ_DEL_CERTS", "Eliminar certificados"}, {"CZ_REQUIRE_CERT", "La funci\u00c3\u00b3n de importar requiere un nombre de certificado."}, {"CZ_IMPORT_REQUIRE_FILE", "La funci\u00c3\u00b3n de importar requiere un archivo de certificado."}, {"CZ_NO_DOT", "Nombre de certificado no v\u00c3\u00a1lido. No se permite tener ning\u00c3\u00ban '.' en \u00c3\u00a9l."}, {"CZ_IMPORT_REQUIRE_CMP", "La funci\u00c3\u00b3n de importar requiere una contrase\u00c3\u00b1a de administraci\u00c3\u00b3n de certificado."}, {"CZ_IMPORT_CERT", "Importar certificado"}, {"CZ_IMPORT_LOCAL", "Importar un certificado local de usuario final con clave privada desde un PKCS#12 (.p12 or .pfx) encoded file"}, {"CZ_IMPORT_CA", "Importar un certificado de CA desde un PKCS#7 (.p7b), PEM (.pem) or DER (.der or .cer) encoded file"}, {"CZ_CERT_NAME", "Nombre de certificado"}, {"CZ_CMP", "Contrase\u00c3\u00b1a de administraci\u00c3\u00b3n de certificado"}, {"CZ_SEL_FILE", "Seleccione un archivo para importar"}, {"CZ_SPECIFY_FILE", "Especifique un archivo para importar"}, {"CZ_UPLOAD_CERT", "Cargar certificado"}, {"CZ_UPLOAD_SIGN_CERT", "Cargar certificado firmado para solicitud de firma"}, {"CZ_SEL_UPLOAD_FILE", "Seleccione un archivo para cargar"}, {"CZ_FILE_FORMAT", "El archivo debe tener cifrado PEM (.pem) o DER (.der o .cer)"}, {"CZ_EXPORT_CERT", "Exportar certificado"}, {"CZ_EXPORT_CERT_REQ", "Exportar solicitud de certificado"}, {"CZ_CERT_EMAIL_CONTENT", "Un PKCS#10 Certification Request has been generated and is available for email. Save this file on your local disk for submission to a Registration or Certificate Authority. The file will be saved in PEM Certificate Request format, by default as"}, {"CZ_CHANGE_FILE_NAME", "(el nombre de archivo se puede cambiar en la descarga si es necesario)."}, {"CZ_SPECIFY_URL", "Especifique una URL de CRL."}, {"CZ_SPECIFY_CRL_FILE", "Especifique un archivo CRL para importar"}, {"CZ_INVALID_FILE", "El formato de archivo seleccionado no es v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_LC", "Especifique un archivo de certificado local v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_CA", "Especifique un archivo de certificado de CA v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_CRL", "Especifique un archivo CRL v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_SIGNED", "Especifique un archivo de certificado firmado v\u00c3\u00a1lido."}, {"CZ_IMPORT_CRL", "Importar CRL"}, {"CZ_IMPORT_CRL_FULL", "Importar lista de revocaci\u00c3\u00b3n de certificados (CRL)"}, {"CZ_IMPORT_CRL_FILE", "Importar CRL directamente desde un archivo cifrado PEM (.pem) o DER (.der o .crl)"}, {"CZ_SEL_CRL_FILE", "Seleccione un archivo CRL para importar"}, {"CZ_AUTO_IMPORT_CRL", "Importar autom\u00c3\u00a1ticamente CRL de forma peri\u00c3\u00b3dica a trav\u00c3\u00a9s de HTTP"}, {"CZ_CRL_LOC", "Introducir ubicaci\u00c3\u00b3n (URL) de CRL"}, {"CZ_INVALIDATE_CERTS", "Invalidar certificados y asociaciones de seguridad si falla la importaci\u00c3\u00b3n o el proceso de la CRL"}, {"CZ_CMP_REQUIRE", "\u001e{}\u001ePara exportar un certificado se requiere la contrase\u00c3\u00b1a de administraci\u00c3\u00b3n de certificados"}, {"CZ_CERT_NAME_REQUIRE", "La funci\u00c3\u00b3n de generaci\u00c3\u00b3n PKCS10 requiere un nombre de certificado."}, {"CZ_CERT_NAME_IN_USE", "El nombre de certificado ya se est\u00c3\u00a1 utilizando. Seleccione otro."}, {"CZ_SUB_DN_REQUIRE", "La funci\u00c3\u00b3n de generaci\u00c3\u00b3n PKCS10 requiere como m\u00c3\u00adnimo un atributo Nombre de sujeto."}, {"CZ_CN_TWO_CHARS", "El nombre del pa\u00c3\u00ads debe tener dos caracteres"}, {"CZ_DOMAIN_INVALID", "Nombre de dominio no v\u00c3\u00a1lido en nombre alternativo de sujeto."}, {"CZ_IP_INVALID", "Direcci\u00c3\u00b3n IP no v\u00c3\u00a1lida en nombre alternativo de sujeto."}, {"CZ_EMAIL_INVALID", "Direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico no v\u00c3\u00a1lida en nombre alternativo de sujeto."}, {"CZ_CERT_REQ", "Solicitud de firma de certificado"}, {"CZ_GEN_CERT_REQ", "Generar solicitud de firma de certificado"}, {"CZ_CERT_ALIAS", "Alias de certificado"}, {"CZ_COUNTRY", "Pa\u00c3\u00ads"}, {"CZ_STATE", "Estado"}, {"CZ_LOC", "Localidad"}, {"CZ_COMPANY", "Empresa u organizaci\u00c3\u00b3n"}, {"CZ_LOC_CITY", "Localidad o ciudad"}, {"CZ_DEPT", "Departamento"}, {"CZ_GROUP", "Grupo"}, {"CZ_TEAM", "Equipo"}, {"CZ_CNAME", "Nombre com\u00c3\u00ban"}, {"CZ_SN", "N\u00c3\u00bamero de serie"}, {"CZ_EMAIL", "Direcci\u00c3\u00b3n de correo electr\u00c3\u00b3nico"}, {"CZ_SUB_ALT_NAME", "Nombre alternativo de sujeto (opcional)"}, {"CZ_DOMAIN_NAME", "Nombre de dominio"}, {"CZ_IPV4", "Direcci\u00c3\u00b3n IPv4"}, {"CZ_SUB_KEY_TYPE", "Tipo de clave de sujeto"}, {"CZ_SIG_ALGORITHM", "Algoritmo de firma"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "Tama\u00c3\u00b1o de clave de sujeto"}, {"CZ_NO_CERTS", "No se encontraron certificados"}, {"IMPORT", "Importar"}, {"CZ_SCEP_CONFIG", "Configuraci\u00c3\u00b3n SCEP"}, {"CZ_CSR_LIST", "Lista CSR"}, {"CZ_NO_CSR", "Sin CSR"}, {"CZ_CHALLENGE_PWD", "Contrase\u00c3\u00b1a de comprobaci\u00c3\u00b3n (opcional)"}, {"CZ_CA_URL", "URL de CA"}, {"CZ_REQ_COUNT", "N\u00c3\u00bamero de solicitudes"}, {"CZ_POLL_INTERVAL", "Intervalos de encuesta"}, {"CZ_POLL_TIME", "Tiempo m\u00c3\u00a1ximo de sondeo"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "La URL de CA no puede estar vac\u00c3\u00ada"}, {"CZ_GEN_CSR", "No hay CSR disponibles; genere al menos una"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "Todas las configuraciones del filtro seleccionado se transferir\u00c3\u00a1n a todas las unidades debajo del nodo del grupo seleccionado."}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "Todas las configuraciones del filtro seleccionado se heredar\u00c3\u00a1n del nodo padre de la unidad\\ seleccionada."}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "Todas las configuraciones del filtro seleccionado se transferir\u00c3\u00a1n del nodo del grupo seleccionado al nodo padre.<br>Para aplicar configuraciones a todas la unidades debajo del nodo padre (a excepci\u00c3\u00b3n del nodo seleccionado y los nodos secundarios), realice la selecci\u00c3\u00b3n apropiada en la pantalla de vista previa."}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "Todas las configuraciones del filtro seleccionado se transferir\u00c3\u00a1n de la unidad seleccionada al nodo padre.<br>Para aplicar configuraciones a todas la unidades debajo del nodo padre (a excepci\u00c3\u00b3n de la unidad seleccionada), realice la selecci\u00c3\u00b3n apropiada en la pantalla de vista previa."}, {"WS_URI_HEADER", "URI p\u00c3\u00bablico"}, {"WS_URI_INSTRUCTIONS", "Introduzca el nombre del servidor p\u00c3\u00bablico para esta implementaci\u00c3\u00b3n. Este nombre se utilizar\u00c3\u00a1 para acceder a los servicios web en este servidor y se incluir\u00c3\u00a1 en los enlaces cruzados integrados."}, {"WS_URI_NOTE", "Nota: El puerto del servidor p\u00c3\u00bablico se utiliza para acceder a los servicios web de GMS desde el dominio p\u00c3\u00bablico. Para modificar el puerto en el que GMS ejecuta los servicios web, vaya a Interfaz del sistema/Implementaci\u00c3\u00b3n/Configuraciones"}, {"WS_DEPLOYMENT_HEADER", "Implementaci\u00c3\u00b3n de GMS"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "Seleccionar la implementaci\u00c3\u00b3n para configurar los servicios web para:"}, {"WS_DEPLOYMENT_ERROR", "No hay implementaciones con licencia actualmente activas"}, {"WS_STATUS_HEADER", "Servicios web"}, {"WS_SERVICES_ERROR", "No se encontraron servicios web para esta implementaci\u00c3\u00b3n"}, {"WS_DEPLOYMENTS_EMPTY", "No se puede obtener la lista de implementaciones. Registre esta instancia de GMSVP."}, {"WS_DISTRIBUTED_HEADER", "Instancias distribuidas"}, {"WS_DISTRIBUTED_EMPTY", "No hay instancias distribuidas configuradas para este servidor"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "Aplicar plantilla: "}, {"HM_APPLY_RECORDING_TASK_DESC", "Aplicar registro: "}, {"LM_CONFIRM_DELETE_RULE", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea eliminar las reglas seleccionadas?"}, {"LM_SUCCESS_DELETE_RULE", "La acci\u00c3\u00b3n de eliminaci\u00c3\u00b3n de regla se realiz\u00c3\u00b3 con \u00c3\u00a9xito."}, {"LM_FAILURE_DELETE_RULE", "No se han podido eliminar correctamente las reglas seleccionadas."}, {"LM_SUCCESS_UPDATE_RULE", "La acci\u00c3\u00b3n de actualizaci\u00c3\u00b3n de regla se realiz\u00c3\u00b3 con \u00c3\u00a9xito."}, {"LM_FAILURE_UPDATE_RULE", "No se ha podido actualizar correctamente la regla."}, {"LM_DUPLICATE_STMT_NAME", "Ya existe una regla con el mismo nombre.\\Introduzca un nombre \u00c3\u00banico para la regla"}, {"LM_RULE_DESTINATION_EMPTY", "El destino est\u00c3\u00a1 vac\u00c3\u00ado.\\Especifique una entrada v\u00c3\u00a1lida."}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "El destino no puede superar los 256 caracteres.\\nEspecifique una entrada v\u00c3\u00a1lida."}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "El valor de destino debe ser especificado para el tipo seleccionado.\\nEspecifique una entrada v\u00c3\u00a1lida."}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "Se debe asignar un programa para cada destino.\\Seleccione un programa o grupo de programas v\u00c3\u00a1lido."}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "El dominio del destino seleccionado en esta p\u00c3\u00a1gina no concuerda\\ncon el de la gravedad seleccionada de la p\u00c3\u00a1gina anterior.\\n\\nEs importante que los objetos procedan del interior del mismo dominio.\\nSi la gravedad seleccionada es incorrecta, vuelva y escoja la gravedad del dominio correspondiente.\\nDe lo contrario, seleccione un destino del dominio que concuerde con la gravedad."}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "El dominio del programa seleccionado en esta p\u00c3\u00a1gina no concuerda\\ncon el de la gravedad seleccionada de la p\u00c3\u00a1gina anterior.\\n\\nEs importante que los objetos procedan del interior del mismo dominio.\\nSi la gravedad seleccionada es incorrecta, vuelva y escoja la gravedad del dominio correspondiente.\\nDe lo contrario, seleccione un programa del dominio que concuerde con la gravedad."}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "No se ha podido establecer el estado de la barra de control."}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "No se ha podido establecer el estado de autodesplazamiento."}, {"LM_READER_START_SUCCESS", "Ha comenzado el lector de supervisi\u00c3\u00b3n activa."}, {"LM_READER_START_FAILURE", "No se pudo iniciar el lector de supervisi\u00c3\u00b3n activa. Compruebe las opciones de configuraci\u00c3\u00b3n.\\n (Nota: La direcci\u00c3\u00b3n de reenv\u00c3\u00ado y el puerto especificado deben ser accesibles desde la consola o el servidor web)."}, {"LM_READER_STOP_SUCCESS", "Se ha detenido el lector de supervisi\u00c3\u00b3n activa."}, {"LM_READER_STOP_FAILURE", "No se pudo detener el lector de supervisi\u00c3\u00b3n activa."}, {"LM_EC_DISABLED", "El reenv\u00c3\u00ado del registro de sistema est\u00c3\u00a1 actualmente desactivado.<br>El registro de sistema debe ser reenviado al servicio de administraci\u00c3\u00b3n de eventos para su supervisi\u00c3\u00b3n.<br>Para activar el reenv\u00c3\u00ado de registros de sistema para su supervisi\u00c3\u00b3n, haga clic en Configuraciones en la barra de control que est\u00c3\u00a1 arriba."}, {"LM_READER_NO_ALERT_MSG", "El lector no ha recibido nuevas alertas.<br>Nota: Si el problema persiste, compruebe las configuraciones del monitor y las configuraciones del registro de sistema del dispositivo."}, {"LM_READER_STOPPED_MSG", "El lector est\u00c3\u00a1 detenido en este momento.<br>Inicie el lector haciendo clic en el bot\u00c3\u00b3n de Inicio en la barra de control que est\u00c3\u00a1 arriba."}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "No tiene acceso a los dispositivos o las unidades.<br>Si desea supervisar los registros del sistema enviados por cualquiera de estas unidades, p\u00c3\u00b3ngase en contacto con su administrador."}, {"LM_READER_ERROR_MSG", "Se ha encontrado un error.<br>Ocurri\u00c3\u00b3 una excepci\u00c3\u00b3n mientras se procesaba la recopilaci\u00c3\u00b3n del lector de supervisi\u00c3\u00b3n activa."}, {"LM_READER_SOCKET_ERROR_MSG", "Se ha encontrado un error.<br>Ocurri\u00c3\u00b3 una excepci\u00c3\u00b3n mientras se iniciaba el lector de supervisi\u00c3\u00b3n activa.<br>Detalles de la excepci\u00c3\u00b3n: "}, {"LM_FAILURE_UPDATE_SETTINGS", "Error al actualizar las configuraciones de supervisi\u00c3\u00b3n activa."}, {"LM_SUCCESS_UPDATE_SETTINGS", "Se actualizaron correctamente las configuraciones de supervisi\u00c3\u00b3n activa."}, {"LM_WARN_ENABLE_EC", "El administrador de eventos utiliza registros de sistema reenviado desde el recopilador de registro de sistema para su supervisi\u00c3\u00b3n. Estos registros de sistema se env\u00c3\u00adan al motor para identificar eventos basados en reglas definidas. \\n\\nNota: Al activar esta opci\u00c3\u00b3n, se enviar\u00c3\u00a1n registros de sistema recibidos por los servicios del recopilador del registro de sistema en una implementaci\u00c3\u00b3n al servicio de administrador de eventos central. Esto aumentar\u00c3\u00a1 el tr\u00c3\u00a1fico de registro de sistema en toda la red, ya que el recopilador del registro de sistema clona cada mensaje para el control de eventos."}, {"LM_STMT_CHANGED_MSG_1", "Ha efectuado cambios en la regla seleccionada"}, {"LM_STMT_CHANGED_MSG_2", ".\\nIr a la pantalla anterior (p\u00c3\u00a1gina de lista de reglas) significar\u00c3\u00a1 perder sus cambios.\\nPulse ACEPTAR para ir a la p\u00c3\u00a1gina de lista de reglas o Cancelar para continuar editando esta regla."}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "No se ha podido actualizar el estado de acoplamiento."}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "No tiene los privilegios necesarios para actualizar en esta pantalla."}, {"LM_DELETE_STMT_EMPTY", "Seleccione al menos una regla para eliminar."}, {"LM_STMT_RULE_EMPTY", "No se ha elegido ning\u00c3\u00ban tipo de regla.\\nSeleccione un tipo de regla."}, {"LM_STMT_RULE_DUPLICATE", "Ya existe una regla con las mismas propiedades de tipo de regla y de editor.\\nSeleccione propiedades de reglas \u00c3\u00banicas para esta regla."}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "Reenv\u00c3\u00ado de puerto cambiado por el lector.\\nTomar\u00c3\u00a1 unos segundos reiniciar correctamente el lector."}, {"LM_NO_RULE_EDITABLE", "No hay ning\u00c3\u00ban tipo de regla editable en el grupo seleccionado.\nSeleccione otro grupo/tipo de regla."}, {"LM_DISABLE_STMT_EMPTY", "Seleccione al menos una regla para activar/desactivar la acci\u00c3\u00b3n."}, {"LM_SUCCESS_DISABLE_RULE", "La acci\u00c3\u00b3n para activar/desactivar la regla se realiz\u00c3\u00b3 con \u00c3\u00a9xito."}, {"LM_FAILURE_DISABLE_RULE", "No se han podido activar/desactivar correctamente las reglas seleccionadas."}, {"LM_EDIT_RULE_MSG_1", "Ha seleccionado editar las siguientes reglas:\\n"}, {"LM_EDIT_RULE_MSG_2", "\\nLa lista seleccionada contiene todas las reglas que no se pueden editar.\\n\\nSeleccione otra regla para continuar."}, {"LM_EDIT_RULE_MSG_3", "\\n La lista seleccionada contiene reglas que no se pueden editar marcadas con *.\\n\\n\u00c2\u00bfDesea continuar editando las reglas restantes?"}, {"LM_DELETE_RULE_MSG_1", "Ha seleccionado eliminar las siguientes reglas:\\n"}, {"LM_DELETE_RULE_MSG_2", "\\nLa lista seleccionada contiene todas las reglas que no se pueden eliminar.\\n\\nSeleccione otra regla para continuar."}, {"LM_DELETE_RULE_MSG_3", "\\n La lista seleccionada contiene reglas que no se pueden eliminar marcadas con *.\\n\\n\u00c2\u00bfDesea continuar eliminando las reglas restantes?"}, {"LM_DELETE_RULE_MSG_4", "\\n\u00c2\u00bfDesea continuar?"}, {"MASKED_LIVEMONITOR_MESSAGE", "Se enmascar\u00c3\u00b3 un mensaje de alerta para impedir que se mostrara en funci\u00c3\u00b3n de pol\u00c3\u00adticas de privacidad impuestas."}, {"MASKED_ADDITIONAL_INFORMATION", "Se enmascar\u00c3\u00b3 informaci\u00c3\u00b3n adicional para impedir que se mostrara en funci\u00c3\u00b3n de pol\u00c3\u00adticas de privacidad impuestas."}, {"DSB_NONENGFW_ALERT_TITLE", "Alerta de versi\u00c3\u00b3n de firmware"}, {"DSB_NONENGFW_ALERT_MSGPART1", "Este GMS est\u00c3\u00a1 gestionando dispositivos SonicOS que ejecutan firmware que no est\u00c3\u00a1 en ingl\u00c3\u00a9s."}, {"DSB_NONENGFW_ALERT_MSGPART2", "Tenga en cuenta que los objetos y las pol\u00c3\u00adticas definidos en caracteres diferentes del ingl\u00c3\u00a9s en los dispositivos pueden no mostrarse correctamente en la interfaz de usuario de GMS. Si se modifican y se insertan estos objetos y pol\u00c3\u00adticas en los dispositivos, es posible que no se produzcan los resultados esperados."}, {"SYSLOGTAIL_STARTED", "Se ha iniciado el lector de registros del sistema (para la supervisi\u00c3\u00b3n del registro del sistema en tiempo real)."}, {"SYSLOGTAIL_START_FAILED", "No se pudo iniciar el lector de registros del sistema. Compruebe la configuraci\u00c3\u00b3n de env\u00c3\u00ado de registros del sistema.&nbsp;&nbsp;(Nota: La direcci\u00c3\u00b3n de env\u00c3\u00ado y el puerto especificados deben ser accesibles desde la consola o el servidor web)."}, {"SYSLOGTAIL_ALREADY_RUNNING", "El lector de registros del sistema (para la supervisi\u00c3\u00b3n del registro del sistema en tiempo real) ya est\u00c3\u00a1 en ejecuci\u00c3\u00b3n; no se realizaron cambios."}, {"SYSLOGTAIL_STOPPED", "Se ha detenido el lector de registros del sistema (para la supervisi\u00c3\u00b3n del registro del sistema en tiempo real)."}, {"SYSLOGTAIL_ALREADY_STOPPED", "El lector de registros del sistema (para la supervisi\u00c3\u00b3n del registro del sistema en tiempo real) ya est\u00c3\u00a1 detenido; no se realizaron cambios."}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "El lector no recibi\u00c3\u00b3 ning\u00c3\u00ban registro del sistema nuevo."}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(El lector a\u00c3\u00ban puede estar intentando recolectar los registros del sistema)."}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(Si el problema persiste, compruebe la configuraci\u00c3\u00b3n del lector de registros del sistema y las configuraciones del firewall)."}, {"SYSLOGTAIL_CONFIG_CHECK", "Compruebe la configuraci\u00c3\u00b3n del lector de registros del sistema y las configuraciones del firewall."}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "No se encontraron registros del sistema."}, {"SYSLOGTAIL_MODIFY_FILTER", "Para obtener mejores resultados, intente modificar la cadena de filtrado."}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(Nota: Para obtener mejores resultados, utilice <b>AND</b> u <b>OR</b> entre cadenas m\u00c3\u00baltiples)."}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Actualmente, el lector de registros del sistema est\u00c3\u00a1 detenido."}, {"SYSLOGTAIL_START", "Inicie el lector de registros del sistema."}, {"SYSLOGTAIL_ERROR", "Se ha encontrado un error."}, {"SYSLOGTAIL_ERROR_MESSAGE", "Se produjo una excepci\u00c3\u00b3n al procesar la recopilaci\u00c3\u00b3n de registros del sistema."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "El env\u00c3\u00ado de registros del sistema no est\u00c3\u00a1 habilitado."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Configure la direcci\u00c3\u00b3n y el puerto de env\u00c3\u00ado de registros del sistema e inicie el lector de registros del sistema."}, {"MASKED_SYSLOG_MESSAGE", "Se enmascar\u00c3\u00b3 el resto del mensaje del registro del sistema para impedir que se mostrara en funci\u00c3\u00b3n de pol\u00c3\u00adticas de privacidad impuestas."}, {"EVENT_ALERTS_SEARCH", "B\u00c3\u00basqueda de alertas"}, {"EVENT_ALERTS_DELETE", "Eliminar alertas"}, {"EVENT_ALERTS_ENABLE_DISABLE", "Activar/desactivar alertas"}, {"EVENT_ALERTS_ADD", "Agregar alerta"}, {"EVENT_ALERTS_HEADER", "Alertas"}, {"EVENT_ALERTS_ALERT_NAME", "Nombre"}, {"EVENT_ALERTS_ALERT_TYPE", "Tipo de alerta"}, {"EVENT_ALERTS_INTERVAL", "Intervalo"}, {"EVENT_ALERTS_DEST_SCHED", "Destino/programa"}, {"EVENT_ALERTS_ENABLED", "Activado"}, {"EVENT_ALERTS_DOMAIN", "Dominio"}, {"EVENT_ALERTS_CONFIGURE", "Configurar"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "No se encontraron alertas."}, {"DTF_ANY", "Cualquier momento"}, {"DTF_ADD", "Agregar unidad"}, {"DTF_EXECUTE", "Ejecutar"}, {"DTF_ENABLED", "Activado"}, {"DTF_SEARCH", "B\u00c3\u00basqueda de tareas predeterminadas"}, {"DTF_NOT_FOUND", "No se encontraron tareas predeterminadas."}, {"DTF_DT", "Tareas predeterminadas"}, {"DTF_DESC", "Descripci\u00c3\u00b3n"}, {"DTF_TOU", "Tipo de unidades"}, {"DTF_DURING", "Tarea creada durante"}, {"DTF_NO_DTS", "No se seleccionaron tareas predeterminadas para la ejecuci\u00c3\u00b3n."}, {"DTF_EXEC", "Ejecute esta tarea predeterminada."}, {"DTF_NO_DISABLE", "No se puede desactivar esta tarea predeterminada."}, {"DTF_NO_EXEC", "No se puede ejecutar esta tarea predeterminada."}, {"DTF_SEL_UNITS", "Seleccionar unidades"}, {"DTF_EXEC_METHOD", "M\u00c3\u00a9todo de ejecuci\u00c3\u00b3n"}, {"DTF_ATLEAST_ONE", "Seleccione al menos una unidad para ejecutar la tarea."}, {"DTF_EXEC_ALL", "Ejecutar las tareas predeterminadas en todas las unidades del sistema"}, {"DTF_EXEC_FOLL", "Ejecutar las tareas predeterminadas en las siguientes unidades seleccionadas"}, {"DTF_REAPPLY_1", "Ejecutar solo si no se aplicaron anteriormente"}, {"DTF_REAPPLY_2", "Solo se ejecutan las tareas que no se aplicaron anteriormente a las unidades seleccionadas."}, {"DTF_REAPPLY_3", "Las tareas predeterminadas que ya se ejecutaron se ignoran de esa unidad."}, {"DTF_EXEC_1", "Ejecutar incluso si se aplicaron anteriormente"}, {"DTF_EXEC_2", "Todas las tareas seleccionadas se vuelven a ejecutar en las unidades seleccionadas aunque ya se hayan aplicado anteriormente."}, {"DTF_ENABLE_SUCCESS", "Se actualiz\u00c3\u00b3 correctamente la selecci\u00c3\u00b3n de tareas predeterminadas."}, {"DTF_ENABLE_FAIL", "No se pudo actualizar la selecci\u00c3\u00b3n de tareas predeterminadas."}, {"DTF_SCHEDULE_SUCCESS", "Se programaron correctamente las tareas predeterminadas para la ejecuci\u00c3\u00b3n."}, {"DTF_SCHEDULE_FAIL", "No se programaron tareas predeterminadas debido a que las tareas seleccionadas no son aplicables o ya se han ejecutado."}, {"AUTOASSIGN_AGENT_HEADER", "Configuraci\u00c3\u00b3n de asignaci\u00c3\u00b3n de agentes"}, {"AUTOASSIGN_AGENT_MSG_1", " requiere agentes que posean unidades para administrar, generar informes y monitorear. La asignaci\u00c3\u00b3n autom\u00c3\u00a1tica de agentes garantiza que las unidades est\u00c3\u00a9n equilibradas, a fin de distribuir mejor el recurso, optimizar el rendimiento, tener suficiente almacenamiento y contar con una alta disponibilidad. Esta funci\u00c3\u00b3n puede activarse seg\u00c3\u00ban los modos administrados que se hayan seleccionado en la operaci\u00c3\u00b3n Agregar unidad. "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "El usuario puede reasignar agentes del cuadro de di\u00c3\u00a1logo <i>Modificar unidad</i>."}, {"AUTOASSIGN_AGENT_MSG_2", "El usuario puede reasignar agentes del cuadro de di\u00c3\u00a1logo <i>Modificar unidad</i> o en la operaci\u00c3\u00b3n <i>Reasignar agentes</i>."}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\u00c3\u0161nicamente modos de administraci\u00c3\u00b3n T\u00c3\u00banel existente o LAN, y SSL: La asignaci\u00c3\u00b3n autom\u00c3\u00a1tica se aplica \u00c3\u00banicamente a los modos <i>T\u00c3\u00banel existente</i> y <i>SSL</i>, pero ser\u00c3\u00ada necesaria para la asignaci\u00c3\u00b3n manual de <i>T\u00c3\u00banel de administraci\u00c3\u00b3n</i>."}, {"AUTOASSIGN_AGENT_MSG_ALL", "Todos los modos de administraci\u00c3\u00b3n: La asignaci\u00c3\u00b3n autom\u00c3\u00a1tica se aplica a todos los modos. Para el modo <i>T\u00c3\u00banel de administraci\u00c3\u00b3n</i>, configure el agente en la unidad administrada."}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "Se habilit\u00c3\u00b3 la Asignaci\u00c3\u00b3n autom\u00c3\u00a1tica de agentes"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "Se inhabilit\u00c3\u00b3 la Asignaci\u00c3\u00b3n autom\u00c3\u00a1tica de agentes"}, {"AUTOASSIGN_AGENT_ENABLE", "Permitir la asignaci\u00c3\u00b3n autom\u00c3\u00a1tica de agentes"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL y mediante un t\u00c3\u00banel existente o LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "Todo"}, {"TEMPLATE_SETTINGS_TITLE", "[ES]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[ES]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[ES]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[ES]Apply Default Configuration"}, {"CUI_NO_FS", "No se encontraron servidores de flujo."}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "ES The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "ES The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea cambiar la configuraci\u00c3\u00b3n?"}, {"LOGCONFIG_SECTITLE_2", "Mensajes de registro"}, {"LOGCONFIG_DELLABEL", "Eliminar registros anteriores a:"}, {"LOGCONFIG_MONTH", "Mes"}, {"LOGCONFIG_DAY", "D\u00c3\u00ada"}, {"LOGCONFIG_YEAR", "A\u00c3\u00b1o"}, {"LOGCONFIG_FORLABEL", "para"}, {"LOGCONFIG_DOMAIN", "Dominio"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "Error: No se pudo actualizar la configuraci\u00c3\u00b3n"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea cambiar el programa?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\u00c2\u00bfEst\u00c3\u00a1 seguro de que desea cambiar el n\u00c3\u00bamero m\u00c3\u00a1ximo de archivos de registro?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "Archivar "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " Mensajes de registro"}, {"APPLOG_CONFIG_DELETE_MSG_1", "Los registros permiten hacer un seguimiento de las actividades en este sistema. Estas actividades est\u00c3\u00a1n asociadas de forma directa o indirecta a las acciones iniciadas por el usuario, o basadas en las acciones iniciadas por el sistema. Estos registros son importantes para la traza de auditor\u00c3\u00ada y el cumplimiento, adem\u00c3\u00a1s de la operaci\u00c3\u00b3n del sistema de soluci\u00c3\u00b3n de problemas."}, {"APPLOG_CONFIG_DELETE_MSG_2", "Los registros que ya no necesitan almacenarse en el sistema pueden eliminarse de forma manual. Esta es una acci\u00c3\u00b3n \u00c3\u00banica y se ejecutar\u00c3\u00a1 en funci\u00c3\u00b3n de la fecha seleccionada para la eliminaci\u00c3\u00b3n. "}, {"APPLOG_CONFIG_DELETE_MSG_21", "La acci\u00c3\u00b3n de eliminaci\u00c3\u00b3n en esta pantalla solo purgar\u00c3\u00a1 registros que no est\u00c3\u00a9n relacionados con los pedidos de cambio."}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "Los registros que ya no necesitan almacenarse en el sistema pueden exportarse en formato CSV/HTML y eliminarse de la base de datos. El proceso de archivado primero archivar\u00c3\u00a1 los datos en el directorio <i>archivedLogs</i> conforme al \"Programa de archivado de registros\" y, luego, se eliminar\u00c3\u00a1n los datos de la base de datos. "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "La acci\u00c3\u00b3n de archivado exportar\u00c3\u00a1 todos los registros, incluidos los relacionados con los pedidos de cambio. No obstante, la eliminaci\u00c3\u00b3n omitir\u00c3\u00a1 el purgado de las entradas relacionadas con los pedidos de cambio."}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "Nota: Para implementaciones sin fecha: Para eliminar los archivos de registro archivados en la unidad local, vaya a Dispositivo > Sistemas > pantalla Administrador de archivos."}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "Activar archivado"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "Mantener "}, {"APPLOG_CONFIG_ARCHIVE_For", " durante:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "M\u00c3\u00a1xima cantidad de archivos de mensajes de registro:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "Formato de archivado:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "Configuraci\u00c3\u00b3n del archivado"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "Los mensajes de registro se actualizaron correctamente"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "Archivar mensajes de registro del GMS para"}, {"WF_SETTINGS_TITLE", "Configuraci\u00c3\u00b3n"}, {"WF_SETTINGS_MSG_1", "El flujo de trabajo es un sistema que permite supervisar los cambios en la configuraci\u00c3\u00b3n que se aplican a uno o m\u00c3\u00a1s dispositivos. Permite realizar una revisi\u00c3\u00b3n y proporcionar comentarios sobre los cambios propuestos, asignar la propiedad y otorgar responsabilidad de todas las acciones. Adem\u00c3\u00a1s, se pueden generar registros completos de auditor\u00c3\u00ada. La administraci\u00c3\u00b3n de pedidos de cambio es un componente del flujo de trabajo que permite ver los cambios realizados en los dispositivos, obtener una vista previa de los cambios alineados en pantalla en el contexto del dispositivo y, adem\u00c3\u00a1s, comparar m\u00c3\u00baltiples pedidos de cambio. "}, {"WF_SETTINGS_MSG_2", "Nota: Se puede activar y desactivar la administraci\u00c3\u00b3n de pedidos de cambio y de aprobaci\u00c3\u00b3n al nivel del dominio. Si se desactiva la administraci\u00c3\u00b3n de aprobaci\u00c3\u00b3n, se puede tener activada la administraci\u00c3\u00b3n de pedidos de cambio; no obstante, si se desactiva la administraci\u00c3\u00b3n de pedidos de cambio, tambi\u00c3\u00a9n se desactivar\u00c3\u00a1 la administraci\u00c3\u00b3n de aprobaci\u00c3\u00b3n."}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "Incluso cuando el flujo de trabajo est\u00c3\u00a9 activado, se aplicar\u00c3\u00a1 \u00c3\u00banicamente a los dispositivos que tengan licencia activa para los siguientes servicios: "}, {"WF_SETTINGS_ENABLE_COM", "Activar la administraci\u00c3\u00b3n de pedidos de cambio"}, {"WF_SETTINGS_ENABLE_WF", "Activar la administraci\u00c3\u00b3n de aprobaci\u00c3\u00b3n"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "Configuraci\u00c3\u00b3n del programa predeterminado de pedidos de cambio"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "Los pedidos de cambio se pueden programar para que se ejecuten al momento del env\u00c3\u00ado seg\u00c3\u00ban la siguiente configuraci\u00c3\u00b3n. Si se especifica un valor predeterminado, se usar\u00c3\u00a1 autom\u00c3\u00a1ticamente la configuraci\u00c3\u00b3n seleccionada cuando se cree un nuevo pedido de cambio."}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "Programa: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "Ejecutar manualmente"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "Inmediatamente tras su aprobaci\u00c3\u00b3n"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "A las"}, {"WF_CONFIG_DELETE_MSG_1", "Los registros permiten hacer un seguimiento de las actividades en este sistema. Estas actividades est\u00c3\u00a1n asociadas de forma directa o indirecta a las acciones iniciadas por el usuario, o basadas en las acciones iniciadas por el sistema. Estos registros son importantes para la traza de auditor\u00c3\u00ada y el cumplimiento, adem\u00c3\u00a1s de la operaci\u00c3\u00b3n del sistema de soluci\u00c3\u00b3n de problemas."}, {"WF_CONFIG_DELETE_MSG_2", "Los pedidos de cambio generalmente de m\u00c3\u00a1s de "}, {"WF_CONFIG_DELETE_MSG_3", " ya no necesitan almacenarse en el sistema y pueden eliminarse de forma manual. Esta es una acci\u00c3\u00b3n \u00c3\u00banica y se ejecutar\u00c3\u00a1 en funci\u00c3\u00b3n de la fecha seleccionada para la eliminaci\u00c3\u00b3n. La acci\u00c3\u00b3n de eliminaci\u00c3\u00b3n en esta pantalla solo purgar\u00c3\u00a1 datos, tareas y registros que est\u00c3\u00a9n relacionados con los pedidos de cambio."}, {"APPLOG_CONFIG_DEL_DATA", "Eliminar datos a las"}, {"FA_UNIT_STATUS_HEADER", "Detalles de la unidad"}, {"FA_UNIT_STATUS_SERIAL", "N\u00c3\u00bamero de serie"}, {"FA_UNIT_STATUS_NODE_NAME", "Nombre de la unidad"}, {"FA_UNIT_STATUS_MODEL", "Modelo"}, {"FA_UNIT_STATUS_FIRMWARE", "Versi\u00c3\u00b3n de firmware"}, {"FA_UNIT_STATUS_IP", "IP administrada"}, {"FA_UNIT_STATUS_LICENSE", "Visualizaci\u00c3\u00b3n de la aplicaci\u00c3\u00b3n"}, {"FA_GROUP_STATUS_HEADER1", "Detalles del firmware"}, {"FA_GROUP_STATUS_HEADER2", "Estado de licencia de generaci\u00c3\u00b3n de informes de flujo"}, {"FA_GROUP_STATUS_NO_DATA", "No hay datos disponibles"}, {"FA_LICENSE_NOT_AVAILABLE", "Sin licencia"}, {"FA_LICENSE_AVAILABLE", "Con licencia"}, {"FA_LICENSE_FREE_TRAIL", "Prueba gratuita"}, {"FA_LICENSE_EXPIRED", "Caducada"}, {"FA_GROUP_FIREWALL_COUNT", "Cortafuegos en el sistema"}, {"FA_FLOW_IP1", "Agente de flujo 1"}, {"FA_FLOW_IP2", "Agente de flujo 2"}, {"FA_FLOW_AGENT_STATUS", "Estado del agente de flujo"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "Configuraci\u00c3\u00b3n del cortafuegos"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "t\u00c3\u00banel VPN de centro a centro"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "IP remota"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "Retenci\u00c3\u00b3n de datos (d\u00c3\u00adas)"}, {"FA_FLOW_FORWARDER_IP", "Reenv\u00c3\u00ado de flujo"}, {"FA_FLOWS_COLLECTED", "Flujos recopilados"}, {"FA_DISK_ALLOCATED", "Disco asignado"}, {"FA_DISK_USED", "Disco usado"}, {"FA_FLOW_STATUS", "Estado"}, {"FA_NO_AGENT", "No se asign\u00c3\u00b3 ning\u00c3\u00ban Agente de flujo"}, {"FA_MODELSUPPORT", "La generaci\u00c3\u00b3n de informes de flujo no est\u00c3\u00a1 activada para este modelo"}, {"FA_FIRMWARESUPPORT", "La generaci\u00c3\u00b3n de informes de flujo no est\u00c3\u00a1 disponible para esta versi\u00c3\u00b3n"}, {"FA_LICENSESUPPORT", "La informaci\u00c3\u00b3n de la licencia de visualizaci\u00c3\u00b3n de la aplicaci\u00c3\u00b3n no est\u00c3\u00a1 disponible"}, {"FA_HEADING", "Agentes de flujo"}, {"FA_FLOW_AGENT", "Agente de flujo"}, {"FA_FLOW_HEAD_IP1", "Agente de flujo 1"}, {"FA_FLOW_HEAD_IP2", "Agente de flujo 2"}, {"FA_FLOW_HEAD_HDD", "Disco duro (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "Ancho de banda (%)"}, {"FA_FLOW_FORWARDER_HEAD", "Reenv\u00c3\u00ado de flujo"}, {"FA_FLOW_PAIR", "Par de agente de flujo"}, {"FA_FLOW_HEAD_DISKSIZE", "Tama\u00c3\u00b1o del disco"}, {"FA_FLOW_HEAD_GATEWAY", "Cortafuegos de la pasarela"}, {"FA_FLOW_HEAD_TUNNELS", "T\u00c3\u00baneles"}, {"FA_FLOW_HEAD_TENANTS", "Inquilinos"}, {"FA_FLOW_HEAD_FIREWALLS", "[ES]Firewalls"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "Nombre"}, {"GF_GATEWAY", "Pasarela"}, {"GF_LAST_UPDATED", "\u00c3\u0161ltima actualizaci\u00c3\u00b3n"}, {"GF_DEST_ADDRESS_RANGE", "Rango de direcciones de destino"}, {"GF_LOCAL_ADDRESS_RANGE", "Rango de direcciones locales"}, {"FA_STATUS", "Estado"}, {"CLOUDSETTINGS_SECTITLE_1", "Agregar nuevo par de agentes de flujo"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "Agente de flujo 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "Agente de flujo 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "Memoria (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "Almacenamiento de la base de datos de flujo (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "Configuraci\u00c3\u00b3n del servidor de registro de sistema en la nube"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Activar la generaci\u00c3\u00b3n de informes del registro de sistema al servidor de registro de sistema:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Direcci\u00c3\u00b3n IP del servidor de registro de sistema:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Puerto del servidor de registro de sistema:"}, {"CLOUDSETTINGS_SECTITLE_3", "Configuraci\u00c3\u00b3n del agente de flujo en la nube"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "Cantidad de cortafuegos por agente de flujo:"}, {"CLOUDSETTINGS_SECTITLE_4", "[ES]Cloud Archived Report Settings"}, {"CLOUDSETTINGS_NUM_ARCHIVED_REPORTS_SUPPORTED", "[ES]Num of Archived Reports per Firewall:"}, {"CLOUDSETTINGS_SECTITLE_5", "[ES]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[ES]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "Informaci\u00c3\u00b3n de SonicPoint"}, {"SP_MANAGEDBY", "Gestionado por"}, {"SP_IPADDR", "Direcci\u00c3\u00b3n IP"}, {"SP_SUBNET", "M\u00c3\u00a1scara de subred"}, {"SP_IFACE", "Interfaz"}, {"SP_ZONE", "Zona"}, {"SP_MODEL", "Modelo"}, {"SP_ENABLED", "Activado"}, {"SP_DISABLED", "Desactivado"}, {"SP_STATUS", "Estado"}, {"SP_MACADDR", "Direcci\u00c3\u00b3n MAC"}, {Integer.toString(-919), "[ES]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[ES]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[ES]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[ES]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[ES]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[ES]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[ES]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[ES]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[ES]Successfully authenticated with the unit."}, {Integer.toString(-928), "[ES]Authentication with the unit failed."}, {Integer.toString(-929), "[ES]The unit is registered with the backend."}, {Integer.toString(-930), "[ES]The unit is not registered with the backend."}, {Integer.toString(-931), "[ES]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[ES]Heart beats for the unit have been started."}, {Integer.toString(-933), "[ES]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[ES]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[ES]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[ES]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[ES]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[ES]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[ES]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[ES]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[ES]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[ES]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[ES]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[ES]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[ES]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[ES]ZeroTouch feature was disabled for the firewall."}, {"TICKET_INFORMATION", "[ES]Connectwise Ticket"}, {"TICKET_DETAILS", "[ES]Details"}, {"CONNECTWISE_NOTE", "[ES]GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}};
 
     @Override
     public Object[][] getContents() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_ja_JP.java decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_ja_JP.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_ja_JP.java	2023-09-08 15:13:13.244772799 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_ja_JP.java	2023-09-08 15:14:40.207236490 -0700
@@ -7,7 +7,7 @@
 
 public class sgmsResources_ja_JP
 extends ListResourceBundle {
-    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "\u88c5\u7f6e (\u5358\u4f53)"}, {"APPLIANCE_NAME_PLURAL", "\u88c5\u7f6e (\u8907\u6570)"}, {"APPLIANCE_DESC", "\u88c5\u7f6e\u306e\u8aac\u660e"}, {"SONICWALL_NAME", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"SONICWALL_NAME_PLURAL", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"SONICWALL_DESC", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u88c5\u7f6e"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMA"}, {"SSLVPN_DESC", "SMA \u88c5\u7f6e"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDP"}, {"CDP_DESC", "CDP \u88c5\u7f6e"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Aventail SMA \u88c5\u7f6e"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "Email Security \u88c5\u7f6e"}, {"OTHERS_NAME", "\u305d\u306e\u4ed6"}, {"OTHERS_NAME_PLURAL", "\u305d\u306e\u4ed6"}, {"OTHERS_DESC", "\u305d\u306e\u4ed6\u306e\u88c5\u7f6e"}, {"MINUTE", "\u5206"}, {"TEST_STRING", "\u3053\u308c\u306f\u30c6\u30b9\u30c8\u6587\u5b57\u5217\u3067\u3059\u3002\u51fa\u8377\u3059\u308b\u524d\u306b\u3053\u308c\u3092\u524a\u9664\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PROGRESS_ACTION_TIMED", "\u3053\u306e\u52d5\u4f5c\u3092\u5b8c\u4e86\u3059\u308b\u307e\u3067\u3057\u3070\u3089\u304f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002"}, {"PROGRESS_PLEASE_WAIT", "\u3057\u3070\u3089\u304f\u304a\u5f85\u3061\u4e0b\u3055\u3044..."}, {"LOADING_PLEASE_WAIT", "\u8aad\u307f\u8fbc\u307f\u4e2d\u3001\u3057\u3070\u3089\u304f\u304a\u5f85\u3061\u304f\u3060\u3055\u3044..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "\u3053\u306e\u753b\u9762\u306e\u66f4\u65b0\u6a29\u9650\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"NO_SCREEN_PERMISSIONS_MESSAGE", ":\u753b\u9762\u3092\u8868\u793a\u3059\u308b\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u3001\u7ba1\u7406\u8005\u306b\u304a\u554f\u3044\u5408\u308f\u305b\u304f\u3060\u3055\u3044\u3002"}, {"UPDATE", "\u66f4\u65b0"}, {"RESET", "\u30ea\u30bb\u30c3\u30c8"}, {"NO_PANEL_PERMISSIONS", "[JP]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "\u30e2\u30c7\u30eb \u30b3\u30fc\u30c9\u306e\u540c\u671f\u306b\u6210\u529f\u3057\u307e\u3057\u305f"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "\u30e2\u30c7\u30eb \u30b3\u30fc\u30c9\u306e\u540c\u671f\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "\u30bf\u30b9\u30af\u306e\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0\u306f\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "\u5931\u6557 - \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "\u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u6b63\u5e38\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u6b63\u5e38\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"ERROR_ADD_ACTIVATION_CODE", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u8ffd\u52a0\u30a8\u30e9\u30fc: \u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059 - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "\u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u6b63\u5e38\u306b\u524a\u9664\u3055\u308c\u307e\u3057\u305f - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u6b63\u5e38\u306b\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002"}, {"ERROR_DELETE_ACTIVATION_CODE", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u524a\u9664\u30a8\u30e9\u30fc: \u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u5b58\u5728\u3057\u307e\u305b\u3093 - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u524a\u9664\u30a8\u30e9\u30fc: \u4ee5\u4e0b\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3 \u30b3\u30fc\u30c9\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093 - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "\u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f -  "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c SGMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u524a\u9664\u3055\u308c\u307e\u3057\u305f - "}, {"UPDATE_DB_MESSAGE", "\u5909\u66f4\u306f SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u3067\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"FAILURE_UPDATE_DB_MESSAGE", "\u66f4\u65b0\u306e\u5931\u6557: \u5909\u66f4\u306f SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u3067\u6b63\u5e38\u306b\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"NO_UNITS_FOR_REGISTRATION", "\u767b\u9332\u7528\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"FREE_TRAIL_NOT_APPLIED", "\u3059\u3079\u3066\u306e\u88c5\u7f6e\u306f\u3001\u672a\u767b\u9332\u304b\u65e2\u306b\u8cfc\u8aad\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"AV_FAILURE_MESSAGE", "\u767b\u9332\u304a\u3088\u3073\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"AV_SUCCESS_MESSAGE", "\u767b\u9332\u304a\u3088\u3073\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306e\u305f\u3081\u306e\u30bf\u30b9\u30af\u304c\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"AV_SUCCESS_UPGRADE", "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306e\u305f\u3081\u306e\u30bf\u30b9\u30af\u304c\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"AV_NO_SUCCESS_REG", "\u767b\u9332\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"AV_SUCCESS_REG", "\u767b\u9332\u306e\u305f\u3081\u306e\u30bf\u30b9\u30af\u304c\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"AV_NO_SUCCESS_UPGRADE", "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"TASK_SUCCESS_MESSAGE", "\u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"TASK_CMP_ERROR", "CMP \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u88c5\u7f6e\u30ec\u30d9\u30eb\u3067\u306e\u307f\u5909\u66f4\u53ef\u80fd\u3067\u3059\u3002"}, {"TASK_ERROR_MESSAGE", "\u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SGMS_EMAIL_BOTTOM_MSG1", "Powered by "}, {"SGMS_EMAIL_BOTTOM_MSG2", " \u30d0\u30fc\u30b8\u30e7\u30f3 "}, {"SGMS_EMAIL_BOTTOM_MSG3", " \u30b7\u30ea\u30a2\u30eb: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " \u30b5\u30fc\u30d0: "}, {"FIRMWARE_DOWNLOADED", "\u65b0\u3057\u3044\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " \u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306f\u3082\u3046\u3059\u3050\u5931\u52b9\u3057\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u8cfc\u8aad\u306e\u66f4\u65b0\u7528\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306e\u8cfc\u5165\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001SonicWall \u306b\u304a\u554f\u3044\u5408\u308f\u305b\u304f\u3060\u3055\u3044\u3002"}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "\u8cfc\u8aad\u306e\u5931\u52b9\u60c5\u5831"}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "\u5931\u52b9\u671f\u65e5\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"VERSION_MESSAGE", "SonicWall GMS \u30d0\u30fc\u30b8\u30e7\u30f3:  "}, {"NUM_NODES_MESSAGE", "\u3053\u306e SonicWall GMS \u3067\u7ba1\u7406\u53ef\u80fd\u306a\u30ce\u30fc\u30c9\u6570:  "}, {"PRODUCT_DESCRIPTION_MESSAGE", "SGMS \u88fd\u54c1\u306e\u8aac\u660e: "}, {"DATABASE_TYPE_MESSAGE", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7a2e\u5225: "}, {"MODEL_TYPES_MESSAGE", "\u30ce\u30fc\u30c9\u6570\u3068\u30e2\u30c7\u30eb\u540d: "}, {"NUM_AGENTS_MESSAGE", "\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u6570: "}, {"AGENT_IP_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e IP \u30a2\u30c9\u30ec\u30b9: "}, {"UNKNOWN_MESSAGE", "\u4e0d\u660e"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e0d\u660e"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "\u88c5\u7f6e\u540d\u306b\u7121\u52b9\u306a\u6587\u5b57 [<\u3001\\] \u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"PM_NAME_KEYWORD", " \u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u88c5\u7f6e\u540d\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4ed6\u306e\u540d\u524d\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PM_NAME_EXISTS_A", "'"}, {"PM_NAME_EXISTS_B", "' \u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059 "}, {"PM_UNKNOWN", "\u4e0d\u660e"}, {"PM_UNKNOWN_UNREGISTERED", "\u4e0d\u660e/\u672a\u767b\u9332"}, {"PM_UNREGISTERED", "\u672a\u767b\u9332"}, {"PM_YES", "\u306f\u3044"}, {"PM_NO", "\u3044\u3044\u3048"}, {"PM_ENABLED", "\u6709\u52b9"}, {"PM_DISABLED", "\u7121\u52b9"}, {"PM_NOTAVAILABLE", "\u5229\u7528\u4e0d\u53ef"}, {"PM_UNLIMITED", "\u7121\u5236\u9650"}, {"PM_CURRENT", "\u6709\u52b9"}, {"PM_DEFAULT", "\u30c7\u30d5\u30a9\u30eb\u30c8"}, {"PM_EXPIRED", "\u5931\u52b9\u6e08"}, {"PM_UP", "\u7a3c\u50cd\u4e2d"}, {"PM_DOWN", "\u4f11\u6b62\u4e2d"}, {"PM_NOT_ACQUIRED", "\u672a\u53d6\u5f97"}, {"PM_SINCE", " \u767a\u751f\u65e5 "}, {"PM_NONE", "\u306a\u3057"}, {"PM_N_A", "\u8a72\u5f53\u306a\u3057"}, {"PM_NO_LICENSE", "\u672a\u8cfc\u8aad"}, {"PM_MODEL", "\u30e2\u30c7\u30eb"}, {"PM_SERIAL_NUM", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"PM_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"PM_NUM_LAN_IPS", "\u8a31\u53ef\u3055\u308c\u3066\u3044\u308b LAN IP \u6570"}, {"PM_HA", "\u9ad8\u53ef\u7528\u6027"}, {"PM_DMZ_PORT", "DMZ \u30dd\u30fc\u30c8"}, {"PM_NUM_WORKPORTS", "\u8a31\u53ef\u3055\u308c\u3066\u3044\u308b WorkPort IP \u6570"}, {"PM_HOMEPORT", "\u30db\u30fc\u30e0\u30dd\u30fc\u30c8"}, {"PM_WLAN_PORT", "WLAN \u30dd\u30fc\u30c8"}, {"PM_OPT_PORT", "OPT \u30dd\u30fc\u30c8"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9"}, {"PM_VPN_CLIENTS", "\u30b0\u30ed\u30fc\u30d0\u30eb VPN \u30af\u30e9\u30a4\u30a2\u30f3\u30c8"}, {"PM_IPS", "\u4fb5\u5165\u9632\u5fa1\u30b5\u30fc\u30d3\u30b9"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9"}, {"PM_FIRMWARE_VERSION", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"PM_REGISTRATION_CODE", "\u767b\u9332\u30b3\u30fc\u30c9"}, {"PM_CFS_SUB", "\u30b3\u30f3\u30c6\u30f3\u30c4 \u30d5\u30a3\u30eb\u30bf \u30ea\u30b9\u30c8/\u30b5\u30fc\u30d3\u30b9\u8cfc\u8aad"}, {"PM_PKI_SUB", "PKI \u8cfc\u8aad"}, {"PM_AV_SUB", "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u8cfc\u8aad"}, {"PM_WARRANTY", "\u62e1\u5f35\u4fdd\u8a3c"}, {"PM_SW_STATUS", "\u72b6\u6cc1"}, {"PM_SW_MANAGEDINSTANCE", "\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3088\u308b\u7ba1\u7406"}, {"PM_TASKS_PENDING", "\u5f85\u6a5f\u4e2d\u30bf\u30b9\u30af"}, {"PM_LAST_LOG", "\u6700\u5f8c\u306e\u30ed\u30b0 \u30a8\u30f3\u30c8\u30ea"}, {"PM_SAS_CONFIG_INFO", "SA \u8a2d\u5b9a\u60c5\u5831"}, {"PM_SAS_DEFINED", "\u5b9a\u7fa9\u6e08\u307f SA"}, {"PM_SAS_ENABLED", "\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b SA"}, {"PM_SAS_AVAILABLE", "\u4f7f\u7528\u53ef\u80fd\u306a SA"}, {"PM_SAS_REMAINING", "\u6b8b\u308a\u306e SA"}, {"PM_SAS_INTERCONNECTED", "\u76f8\u4e92\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b SA"}, {"PM_AGENT_ASSIGNED", "\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"PM_PRIMARY_AGENT", "\u30d7\u30e9\u30a4\u30de\u30ea \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"PM_STANDBY_AGENT", "\u5f85\u6a5f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"PM_TUNNEL_MGMT", "\u7ba1\u7406\u30e2\u30fc\u30c9"}, {"PM_FW_ADDED_TO_GMS", "SonicWall GMS \u306b\u8ffd\u52a0\u3055\u308c\u305f\u88c5\u7f6e"}, {"PM_FW_UP_SINCE", "\u88c5\u7f6e\u304c\u7a3c\u50cd\u3057\u305f\u65e5\u6642"}, {"PM_FW_DOWN_SINCE", "\u88c5\u7f6e\u304c\u4f11\u6b62\u3057\u305f\u65e5\u6642"}, {"PM_SW_IP", "SonicWall \u306e IP"}, {"PM_TIME_ZONE", "\u30bf\u30a4\u30e0\u30be\u30fc\u30f3"}, {"PM_SW_IN_SYSTEM", "\u30b7\u30b9\u30c6\u30e0\u5185"}, {"PM_SW_IN_DMZ", "DMZ \u5185"}, {"PM_SW_IN_GROUP", "\u30b0\u30eb\u30fc\u30d7\u5185"}, {"PM_SW_UNREGISTERED", "\u306e\u3046\u3061\u3001\u672a\u767b\u9332\u306e\u3082\u306e"}, {"PM_SW_VPN_UPGRADE", "VPN \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u6e08\u307f"}, {"PM_SW_VPN_CLIENT", "\u30b0\u30ed\u30fc\u30d0\u30eb VPN \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u6e08\u307f"}, {"PM_SW_MSSP", "\u306e\u3046\u3061\u3001MSSP \u5bfe\u5fdc\u306e\u3082\u306e"}, {"PM_CFL_SUBSCRIPTION", "\u30b3\u30f3\u30c6\u30f3\u30c4 \u30d5\u30a3\u30eb\u30bf \u30ea\u30b9\u30c8/\u30b5\u30fc\u30d3\u30b9\u8cfc\u8aad"}, {"PM_PKI_SUBSCRIPTION", "PKI \u8cfc\u8aad"}, {"PM_AV_SUBSCRIPTION", "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u8cfc\u8aad"}, {"PM_HGMS_SUBSCRIPTION", "\u30af\u30e9\u30a6\u30c9 \u30b5\u30fc\u30d3\u30b9"}, {"PM_SUPPORT_SUBSCRIPTION", "\u30b5\u30dd\u30fc\u30c8 "}, {"PM_EXTENDED_WARRANTY", "\u62e1\u5f35\u4fdd\u8a3c"}, {"PM_UNITS_DOWN", "\u4f11\u6b62\u3057\u3066\u3044\u308b\u88c5\u7f6e"}, {"PM_PENDING_TASKS", "\u5f85\u6a5f\u4e2d\u30bf\u30b9\u30af\u306e\u3042\u308b\u88c5\u7f6e"}, {"PM_MANAGED_WITH_TUNNEL", "\u7ba1\u7406\u7528\u30c8\u30f3\u30cd\u30eb\u3092\u4f7f\u7528\u3057\u3066\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u88c5\u7f6e"}, {"PM_TASK_SPOOLED", "\u30db\u30b9\u30c8\u540d\u5909\u66f4\u306e\u305f\u3081\u306e\u30bf\u30b9\u30af\u304c\u30b9\u30d7\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"PM_RAVLIN_MODEL", "Ravlin \u30e2\u30c7\u30eb"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"PM_WAN_MAC", "WAN \u306e MAC"}, {"PM_FIRMWARE_VERSION", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"PM_HW_VERSION", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"PM_ROM_VERSION", "ROM \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"PM_SECURITY_ID", "\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 ID"}, {"PM_RAVLIN_STATUS", "Ravlin \u72b6\u6cc1"}, {"PM_TASKS_PENDING", "\u5f85\u6a5f\u4e2d\u30bf\u30b9\u30af"}, {"PM_AGENT_ASSIGNED", "\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"PM_RAVLINS_IN_NODE", "\u30ce\u30fc\u30c9\u5185\u306e Ravlin"}, {"PM_RAVLINS_DOWN", "\u4f11\u6b62\u3057\u3066\u3044\u308b Ravlin"}, {"PM_RAVLINS_PENDING_TASKS", "\u5f85\u6a5f\u4e2d\u30bf\u30b9\u30af\u306e\u3042\u308b Ravlin"}, {"PM_FIX_UNIT_ERROR", "\u88c5\u7f6e\u4fee\u5fa9\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"PM_MOD_UNIT_EXISTS", "\u4fee\u6b63\u3055\u308c\u305f\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "\u4fee\u6b63\u3055\u308c\u305f\u88c5\u7f6e"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"PM_ADD_ERR_PRIVILEGES", "\u30a8\u30e9\u30fc: \u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306e\u5341\u5206\u306a\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"PM_UNIT_EXISTS", "\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"PM_UNIT_NAME_EXISTS_A", "\u88c5\u7f6e"}, {"PM_UNIT_NAME_EXISTS_B", "\u65e2\u306b\u7bc4\u56f2\u306b\u5b58\u5728\u3057\u3066\u3044\u308b "}, {"PM_ADD_UNIT_ERR", "SonicWall \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u88c5\u7f6e\u306e\u8ffd\u52a0\u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", ""}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "\u6841\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f 16 \u9032\u6570\u6587\u5b57\u3060\u3051\u3067\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PM_GET_PREFS_ERR", "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "\u30e6\u30cb\u30c3\u30c8\u306b\u30af\u30e9\u30a6\u30c9 \u30b5\u30fc\u30d3\u30b9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u3092 MySonicWall.com \u3067\u767b\u9332\u3057\u3066\u304b\u3089\u30e6\u30cb\u30c3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " \u3053\u308c\u3092\u884c\u308f\u306a\u3044\u3068\u3001\u3053\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\n\u5f8c\u3067\u3082\u3046\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002"}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " \u3053\u308c\u3092\u884c\u308f\u306a\u3044\u3068\u3001MySonicWall.com \u3068\u901a\u4fe1\u3057\u3066\u3053\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u305b\u3093\u3002\n\u5f8c\u3067\u3082\u3046\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002"}, {"PM_LICENSED", "\u8cfc\u8aad\u6e08"}, {"PM_NOT_LICENSED", "\u672a\u8cfc\u8aad"}, {"PM_IS_MSSP", "MSSP \u88c5\u7f6e"}, {"PM_SYSLOG_FORMAT", "Syslog \u5f62\u5f0f"}, {"PM_STATUS_MSG_ONLY", "\u72b6\u6cc1\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f"}, {"PM_SYSLOG_IN_UTC", "UTC \u5f62\u5f0f\u306e\u30ed\u30b0"}, {"PM_VIEWPOINT_MODE", "Analyzer \u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"PM_NAME_RESOLUTION", "\u540d\u524d\u89e3\u6c7a\u30e2\u30fc\u30c9"}, {"PM_ACCESS_MODE", "\u30a2\u30af\u30bb\u30b9 \u30e2\u30fc\u30c9"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS\u3001NetBios \u306e\u9806"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"PM_CONNECTWISE_STATUS", "ConnectWise Manage"}, {"PM_CONNECTWISE_NA", "\u5229\u7528\u4e0d\u53ef"}, {"VM_PATCH_DETECTED_MSG1", " \u306f\u3001\u65b0\u3057\u3044\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u66f4\u65b0\u304c\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002"}, {"VM_PATCH_DETECTED_MSG2", "\u7ba1\u7406\u8005\u306b\u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u65b0\u3057\u3044\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u66f4\u65b0\u60c5\u5831\u3092\u901a\u77e5\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002SMTP \u307e\u305f\u306f\u7ba1\u7406\u8005\u306e\u96fb\u5b50\u30e1\u30fc\u30eb\u304c\u672a\u8a2d\u5b9a\u3067\u3059\u3002"}, {"VM_PATCH_DETECTED_MSG3", " \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u66f4\u65b0\u304c\u5229\u7528\u53ef\u80fd\u3067\u3059\n\n"}, {"VM_NEW", "\u65b0\u3057\u3044 "}, {"VM_PATCH_DETECTED_MSG4", "\u30ea\u30ea\u30fc\u30b9 \u30ce\u30fc\u30c8\u304a\u3088\u3073\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001<a href=https://www.mysonicwall.com>MySonicWall.com</a> \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"VM_SCREEN", " \u753b\u9762"}, {"VM_PATCH_DETECTED_MSG5", " \u30d1\u30c3\u30c1 \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u66f4\u65b0\u306e\u78ba\u8a8d\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\u65b0\u3057\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u66f4\u65b0\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u96fb\u5b50\u30e1\u30fc\u30eb\u304c\u7ba1\u7406\u8005\u3078\u9001\u4fe1\u3055\u308c\u307e\u3057\u305f\u3002"}, {"VM_PATCH_DETECTED_MSG6", "\u66f4\u65b0\u3055\u308c\u305f "}, {"VM_FOR", " \u30d1\u30c3\u30c1\u3092 "}, {"VM_ON", " \u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"VM_PATCH_DETECTED_MSG7", " \u30d1\u30c3\u30c1 \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306f\u7570\u5e38\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\u30d1\u30c3\u30c1 \u30d5\u30a1\u30a4\u30eb\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059: "}, {"VM_PATCH_DETECTED_MSG8", " \u30d1\u30c3\u30c1 \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f: "}, {"VM_PATCH_DETECTED_MSG9", "\u30d1\u30c3\u30c1 \u30d5\u30a1\u30a4\u30eb "}, {"VM_PATCH_DETECTED_MSG10", " \u3092\u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u8fbc\u3080\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"SDM_UPDATE_SUCCESS", "\u66f4\u65b0\u304c\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"SDM_UPDATE_FAILURE", "\u66f4\u65b0\u304c\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"SDM_UPDATE_SPECIAL_FAILURE", "SA \u3092\u524a\u9664\u3059\u308b\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"SDM_UPDATE_INVALID", "\u66f4\u65b0\u8981\u6c42\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SDM_SCREEN_ID_INVALID", "\u753b\u9762 ID \u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {"SDM_READY", "\u30ec\u30c7\u30a3"}, {"SDM_CGI_ERROR", "CGI_NAME \u53d6\u5f97\u30a8\u30e9\u30fc "}, {"SDM_DEFAULT_ERROR", "DEFAULT_VALUE \u53d6\u5f97\u30a8\u30e9\u30fc: "}, {"SDM_INVALID_TARGET", "\u30a8\u30e9\u30fc: \u9001\u4fe1\u5143\u307e\u305f\u306f\u9001\u4fe1\u5148\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {"SDM_METADATA_ERROR", "\u30e1\u30bf\u30c7\u30fc\u30bf\u53d6\u5f97\u30a8\u30e9\u30fc "}, {"SDM_DB_ERROR", "SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30a2\u30af\u30bb\u30b9 \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {"SDM_NOVPN_ERROR", "\u3053\u306e\u88c5\u7f6e\u3067 VPN \u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NO_TARGET_VPN_ERROR", "\u30bf\u30fc\u30b2\u30c3\u30c8\u3067 VPN \u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NOSAS_ERROR", "\u3053\u306e\u88c5\u7f6e\u306b\u5229\u7528\u53ef\u80fd\u306a\u6b8b\u5b58\u306e SA \u304c\u3042\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NO_TARGET_SAS_ERROR", "\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u5229\u7528\u53ef\u80fd\u306a\u6b8b\u5b58\u306e SA \u304c\u3042\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NO_UNITS_ERROR", "\u4f5c\u6210\u3055\u308c\u305f\u30bf\u30b9\u30af\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SDM_NO_3RDPARTYCERTS_ERROR", "\u6709\u52b9\u306a\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3 \u30ed\u30fc\u30ab\u30eb\u8a3c\u660e\u66f8\u3068 CA \u8a3c\u660e\u66f8\u306e\u7d44\u307f\u5408\u308f\u305b\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u306b\u5bfe\u3059\u308b VPN SA \u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002"}, {"SDM_DHCP_ERROR", "\u52d5\u7684\u30a2\u30c9\u30ec\u30b9\u304c\u9001\u4fe1\u5143\u3068\u9001\u4fe1\u5148\u306e\u53cc\u65b9\u3067\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001SA \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002VPN SA \u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002"}, {"SDM_NOAES_ERROR", "\u3053\u306e\u88c5\u7f6e\u3067 AES \u304c\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NO_TARGET_AES_ERROR", "\u30bf\u30fc\u30b2\u30c3\u30c8\u3067 AES \u304c\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_DELETE_SUCCESS", "\u524a\u9664\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"SDM_DELETE_FAILURE", "\u524a\u9664\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"SDM_AGENTNAME_INVALID", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u540d\u306b\u4e0d\u6b63\u306a\u6587\u5b57 [<,\\,:,',@,#,*,$] \u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002"}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "\u62e1\u5f35\u76f8\u4e92\u63a5\u7d9a VPNS SA \u3067\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u3092\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "\u6b21\u306b\u5bfe\u3059\u308b\u30b0\u30eb\u30fc\u30d7\u66f4\u65b0\u3092\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "\u62e1\u5f35\u76f8\u4e92\u63a5\u7d9a VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "\u6a19\u6e96\u76f8\u4e92\u63a5\u7d9a VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "\u62e1\u5f35\u975e\u76f8\u4e92\u63a5\u7d9a VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "\u6a19\u6e96\u975e\u76f8\u4e92\u63a5\u7d9a VPN SA"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "\u3053\u306e\u88c5\u7f6e\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3\u4ee5\u964d\u3067\u3001\u3053\u306e\u88c5\u7f6e\u306b\u5bfe\u3059\u308b SA \u306e\u4f5c\u6210\u3092\u7701\u7565\u3059\u308b\u3068\u3001\u30c8\u30f3\u30cd\u30eb \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u7a2e\u5225\u3092\u30b5\u30dd\u30fc\u30c8\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30bf\u30b9\u30af\u306e\u5b9f\u884c: "}, {"PASSWORD_CHANGED", "SonicWall GMS \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u5e38\u306b\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002"}, {"PASSWORD_NOT_CHANGED_A", "\u5165\u529b\u3055\u308c\u305f\u53e4\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\u3002<BR>"}, {"PASSWORD_NOT_CHANGED_B", " \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"PASSWORD_NOT_CHANGED", "\u5165\u529b\u3055\u308c\u305f\u53e4\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LOGS_PASSWD_CHANGED", "\u30e6\u30fc\u30b6 \u30ed\u30b0\u30a4\u30f3 \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u5e38\u306b\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LOGS_PASSWD_NOT_CHANGED", "\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u30ed\u30b0\u30a4\u30f3 \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30b6\u3092\u8a8d\u8a3c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LOGS_ADDED_NEW_USER", "SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9:  "}, {"LOGS_ADDED_NEW_USER_TYPE", "SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8ffd\u52a0\u3055\u308c\u308b\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u7a2e\u5225:  "}, {"LOGS_DELETED_USER", "\u30e6\u30fc\u30b6\u3068\u95a2\u4fc2\u3059\u308b\u60c5\u5831\u3092 SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u524a\u9664\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9:  "}, {"LOGS_DELETED_GROUP", "\u4ee5\u4e0b\u306e\u30ab\u30b9\u30bf\u30e0 \u30b0\u30eb\u30fc\u30d7\u3068\u3053\u306e\u30ab\u30b9\u30bf\u30e0 \u30b0\u30eb\u30fc\u30d7\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30d3\u30e5\u30fc\u3092 SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u524a\u9664\u3057\u307e\u3057\u305f:  "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "\u30ab\u30b9\u30bf\u30e0\u5c5e\u6027\u5024 ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") \u306b\u306f\u82f1\u6570\u5b57\u306e\u307f\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"}, {"LOGS_ADD_CUSTOM_GROUP", "\u6b21\u306e\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30b0\u30eb\u30fc\u30d7\u540d/\u65e2\u5b9a\u5024\u304c\u30b7\u30b9\u30c6\u30e0\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f: "}, {"LOGS_MOD_CUSTOM_GROUP", "\u6b21\u306e\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30b0\u30eb\u30fc\u30d7\u540d/\u65e2\u5b9a\u5024\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f: "}, {"LOGS_DEL_CUSTOM_GROUP", "\u6b21\u306e\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30b0\u30eb\u30fc\u30d7\u540d/\u65e2\u5b9a\u5024\u304c\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u524a\u9664\u3055\u308c\u307e\u3057\u305f: "}, {"READY", "\u30ec\u30c7\u30a3"}, {"NAV_OF", " / "}, {"NAV_PREVIOUS", "\u524d\u3078"}, {"NAV_NEXT", "\u6b21\u3078"}, {"NAV_DISPLAYING", "\u8868\u793a\u7bc4\u56f2"}, {"NAV_FIREWALLS", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "\u3053\u306e\u753b\u9762\u4e0a\u3067\u306e\u66f4\u65b0\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"ACT_WRONG_FILE_FORMAT", "\u30a8\u30e9\u30fc:\u4e0d\u6b63\u306a\u30d5\u30a1\u30a4\u30eb \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3059\u3002\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093\u3002"}, {"AUTH_INVALID_PARAMS", "\u4e0d\u6b63\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\u3002\u518d\u8a66\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"AUTH_AUTHENTICATE", "\u8a8d\u8a3c\u3059\u308b"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "\u30ed\u30b0\u30a4\u30f3\u4e71\u6570\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3055\u308c\u307e\u3057\u305f\u3002"}, {"AUTH_LOGIN_TIMEOUT", "\u30ed\u30b0\u30a4\u30f3 \u30da\u30fc\u30b8\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002\u518d\u8a66\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"AUTH_LOGIN_FAILURE", "\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3002\u518d\u8a66\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"AUTH_LOGIN_FAILURE_LOG", "\u30ed\u30b0\u30a4\u30f3\u5931\u6557"}, {"NO_DOMAIN_SPECIFIED", "\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"SPECIFY_DOMAIN", "\u30ed\u30b0\u30a4\u30f3\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"INVALID_IP", "\u30db\u30b9\u30c8\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u304f\u3060\u3055\u3044\u3002"}, {"INVALID_DOMAIN_MSG", "\u30c9\u30e1\u30a4\u30f3\u304c\u7121\u52b9\u3067\u3059\u3002\u6709\u52b9\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"INVALID_ALIAS_MSG", "\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u7121\u52b9\u3067\u3059\u3002\u6709\u52b9\u306a\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"REMOTE_SUCCESSFUL_LOGIN", "\u6b21\u306e\u30e6\u30fc\u30b6\u306f\u30b7\u30b9\u30c6\u30e0\u306b\u6b63\u5e38\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3057\u305f: "}, {"REMOTE_FAILED_LOGIN", "\u6b21\u306e\u30e6\u30fc\u30b6\u3092\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f: "}, {"XML_REMOTE_FAILED_LOGIN", "\u6b21\u306e\u30e6\u30fc\u30b6\u3092 XML \u30d9\u30fc\u30b9\u3067\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f: "}, {"NEW_USER_ADDED", "\u8ffd\u52a0\u3055\u308c\u305f\u65b0\u3057\u3044\u30e6\u30fc\u30b6: "}, {"TO_USER_TYPE", "\u30e6\u30fc\u30b6\u7a2e\u5225: "}, {"CLICK_TO_TRY_AGAIN", "\u518d\u8a66\u884c\u3059\u308b\u306b\u306f\u3053\u3053\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059"}, {"USER_LOCKED_OUT", "\u30e6\u30fc\u30b6\u304c\u30ed\u30c3\u30af\u30a2\u30a6\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u304f\u3060\u3055\u3044\u3002"}, {"USER_DISABLED", "\u30e6\u30fc\u30b6 \u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002GMS \u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u4e0b\u3055\u3044\u3002"}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002GMS \u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u308b\u304b\u3001\u518d\u8a66\u884c\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"LDAP_AUTH_FAILED", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"LDAP_USER_NOT_FOUND", "\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30e6\u30fc\u30b6\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u304b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {"LDAP_INVALID_CREDENTIALS", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f: \u4e0d\u6b63\u306a\u8a8d\u8a3c\u60c5\u5831\u3067\u3059"}, {"LDAP_COMMUNICATION_ERROR", "\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u305f\u306f\u30cd\u30fc\u30e0 \u30b5\u30fc\u30d3\u30b9\u3068\u306e\u901a\u4fe1\u304c\u3067\u304d\u307e\u305b\u3093\u3002"}, {"LDAP_ANONYMOUS_BIND_SET", "\u6b21\u306e\u30c9\u30e1\u30a4\u30f3\u306f\u533f\u540d\u30d0\u30a4\u30f3\u30c9 (Anonymous Bind) \u3092\u8a31\u53ef\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059: "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c\u533f\u540d\u30d0\u30a4\u30f3\u30c9\u3092\u8a31\u53ef\u3057\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"LDAP_INVALID_GROUPS_SPECIFIED", "\u4e0d\u6b63\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b0\u30eb\u30fc\u30d7\u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002GMS \u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u4e0b\u3055\u3044\u3002"}, {"LDAP_INVALID_GROUP_MEMBER", "\u30e6\u30fc\u30b6\u306f\u8a31\u53ef\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"RADIUS_UNKNOWN_HOST", "RADIUS \u30b5\u30fc\u30d0 \u30db\u30b9\u30c8\u304c\u4e0d\u660e\u3067\u3059\u3002"}, {"RADIUS_CONNECTION_TIMEOUT", "\u30ea\u30e2\u30fc\u30c8 RADIUS \u30b5\u30fc\u30d0\u3068\u306e\u63a5\u7d9a\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002"}, {"RADIUS_FAILED_LOGIN", "\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u8cc7\u683c\u60c5\u5831\u304c\u7121\u52b9\u3067\u3059\u3002"}, {"RADIUS_EXCEPTION", "RADIUS \u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"RADIUS_INVALID_GROUP_MEMBER", "\u3053\u306e\u30e6\u30fc\u30b6\u306f\u3001\u8a31\u53ef\u3055\u308c\u305f RADIUS \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"PWD_CHANGE_SCREEN", "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u307e\u3059\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u6587\u5b57\u6570\u304c\u591a\u3059\u304e\u307e\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u4f7f\u7528\u3067\u304d\u308b\u6587\u5b57\u6570\u306f 7 \u6587\u5b57\u4ee5\u4e0a\u300115 \u6587\u5b57\u4ee5\u4e0b\u3067\u3059\u3002"}, {"PWD_VALIDATION_FAILURE", "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u4f7f\u7528\u3067\u304d\u308b\u6587\u5b57\u6570\u306f 15 \u6587\u5b57\u4ee5\u4e0b\u3067\u3059\u3002"}, {"PWD_EXPIRATION", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306f {0} \u65e5\u3054\u3068\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 "}, {"PWD_CHANGE_NEXT_LOGIN", "\u7ba1\u7406\u8005\u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PASSWORD_EXISTS", "\u904e\u53bb 5 \u3064\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u6b21\u306e\u6587\u5b57\u7a2e\u5225\u304b\u3089\u5c11\u306a\u304f\u3068\u3082 2 \u7a2e\u5225\u3092\u542b\u307e\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093: \u82f1\u5b57\u3001\u6570\u5b57\u3001\u8a18\u53f7\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u30e6\u30fc\u30b6\u306e\u6587\u5b57\u5217\u306f\u76f8\u9055\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002"}, {"CUI_LICENSE_READ_FAILURE", "\u30e9\u30a4\u30bb\u30f3\u30b9 \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\u3002"}, {"CUI_UPGRADE_SUCCESS", "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u6210\u529f"}, {"CUI_UPGRADE_FAIL", "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u5931\u6557: "}, {"CUI_SYNCH_SUCCESS", "\u540c\u671f\u6210\u529f"}, {"CUI_SYNCH_FAIL", "\u540c\u671f\u5931\u6557: "}, {"CUI_PRORATE_SUCCESS", "ProRate \u8981\u6c42\u6210\u529f"}, {"CUI_PRORATE_FAIL", "ProRate \u8981\u6c42\u5931\u6557: "}, {"CUI_CHANGE_PW_SUCCESS", "\u6210\u529f\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306fMySonicWall.com \u306b\u3066\u53d7\u3051\u5165\u308c\u3089\u308c\u307e\u3057\u305f\u3002"}, {"CUI_CHANGE_PW_FAIL", "\u5931\u6557\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f MySonicWall.com \u306b\u3066\u53d7\u3051\u5165\u308c\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f: "}, {"CUI_EMAIL_SUCCESS", "\u30c6\u30af\u30cb\u30ab\u30eb \u30b5\u30dd\u30fc\u30c8 \u30d5\u30a9\u30fc\u30e0\u306f\u96fb\u5b50\u30e1\u30fc\u30eb\u3067 SonicWall GMS \u30b5\u30dd\u30fc\u30c8 \u30bb\u30f3\u30bf\u30fc\u3078\u9001\u4ed8\u3055\u308c\u307e\u3057\u305f\u3002"}, {"CUI_EMAIL_FAIL", "\u30c6\u30af\u30cb\u30ab\u30eb \u30b5\u30dd\u30fc\u30c8 \u30ec\u30dd\u30fc\u30c8\u3092 SGMS \u30b5\u30dd\u30fc\u30c8 \u30bb\u30f3\u30bf\u30fc\u3078\u9001\u4ed8\u3059\u308b\u969b\u306b\u554f\u984c\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002<br>\u5f8c\u3067\u3082\u3046\u4e00\u5ea6\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CUI_SESSION_TERMINATED", " \u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002"}, {"CUI_SESSIONS_TERMINATED", " \u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002"}, {"CUI_NO_AGENTS", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"CUI_FILTER_ADDED", "\u65b0\u3057\u3044\u30d5\u30a3\u30eb\u30bf\u304c\u6b63\u5e38\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DIAG_DIAG_REQUEST_A", ""}, {"DIAG_DIAG_REQUEST_B", " \u3067\u4f5c\u6210\u3055\u308c\u305f\u8a3a\u65ad\u8981\u6c42\u304c\u9069\u7528\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DIAG_DELETE_SUCCESS", "\u524a\u9664\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"DIAG_EMAIL_SUCCESS", "\u96fb\u5b50\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"DIAG_UNIT_UNKNOWN", "'\u4e0d\u660e\u306a\u88c5\u7f6e\u540d '"}, {"DIAG_UNIT", "' \u88c5\u7f6e "}, {"VPN_DUPLICATE_UFI", "\u66f4\u65b0\u5931\u6557\u3002\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u8b58\u5225\u5b50\u304c SonicWall GMS \u5185\u3067\u7af6\u5408\u3057\u3066\u3044\u307e\u3059\u3002"}, {"NO_LOGS_MESSAGE", "\u30ed\u30b0\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "\u63d0\u4f9b\u3055\u308c\u305f\u691c\u7d22\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u30ed\u30b0\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"LOG_START_SEARCH", "\u65b0\u898f\u691c\u7d22\u306e\u958b\u59cb"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "{0,number,integer} \u30ec\u30b3\u30fc\u30c9\u306e\u691c\u7d22\u7d50\u679c\u306f\u591a\u3059\u304e\u307e\u3059\u3002\u691c\u7d22\u6761\u4ef6\u306b\u5236\u9650\u3092\u52a0\u3048\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SQL_EXCEPTION_ERROR_MESSAGE", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u7a3c\u52d5\u4e2d\u304b\u3001\u3042\u308b\u3044\u306f\u691c\u7d22\u6761\u4ef6\u306e\u5236\u9650\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"UNKNOWN_EXCEPTION_MESSAGE", "\u691c\u7d22\u306e\u5b9f\u884c\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u7a3c\u52d5\u4e2d\u304b\u3001\u3042\u308b\u3044\u306f\u691c\u7d22\u6761\u4ef6\u306e\u5236\u9650\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOG_NEXT", "\u6b21\u3078"}, {"LOG_PREVIOUS", "\u524d\u3078"}, {"LOG_UPDATE_SUCCESS", "\u66f4\u65b0\u306f\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"LOG_OF", " / "}, {"LOG_OF", " / "}, {"PREFS_SYNCHRONIZE_STARTED", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3068\u306e\u60c5\u5831\u306e\u540c\u671f\u3092\u6b63\u5e38\u306b\u958b\u59cb\u3057\u307e\u3057\u305f\u3002"}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u60c5\u5831\u306e\u540c\u671f\u304c\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306b\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u305b\u3093\u3002"}, {"MON_NO_PRIVILEGES", "\u3053\u306e\u753b\u9762\u306e\u5341\u5206\u306a\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"MON_SYNC_TASK_CREATED", "\u540c\u671f\u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002"}, {"MON_SYNC_TASK_FAIL", "\u540c\u671f\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"MON_RENEGOTIATE_TASK_CREATED", "\u518d\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3 \u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002"}, {"MON_RENEGOTIATE_FAILED", "\u518d\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3 \u30bf\u30b9\u30af\u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"MON_NO_SELECTED", "\u518d\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u30c8\u30f3\u30cd\u30eb\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"MON_REFRESH_CREATED", "\u7d71\u8a08\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5 \u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002"}, {"MON_REFRESH_FAIL", "\u7d71\u8a08\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5 \u30bf\u30b9\u30af\u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"MON_NO_SELECTED_REFRESH", "\u7d71\u8a08\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3092\u884c\u3046\u30c8\u30f3\u30cd\u30eb\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"MON_UPDATE_SUCCESS", "\u66f4\u65b0\u306f\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"MON_UPDATE_FAIL", "\u66f4\u65b0\u306f\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"MON_NO_MONITORING", "\u30c8\u30f3\u30cd\u30eb\u306f\u76e3\u8996\u3067\u304d\u307e\u305b\u3093\u3002"}, {"MON_NAME", "\u540d\u524d"}, {"MON_GATEWAY", "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4"}, {"MON_LAST_UPDATED", "\u6700\u7d42\u66f4\u65b0"}, {"MON_DEST_ADDR_RANGE", "\u9001\u4fe1\u5148\u30a2\u30c9\u30ec\u30b9\u7bc4\u56f2"}, {"MON_LOCAL_ADDR_RANGE", "\u30ed\u30fc\u30ab\u30eb \u30a2\u30c9\u30ec\u30b9\u7bc4\u56f2"}, {"MON_NO_TUNNELS_FOUND", "\u30c8\u30f3\u30cd\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"MON_TITLE", "VPN \u30c8\u30f3\u30cd\u30eb\u7d71\u8a08"}, {"MON_DESCRIPTION", "\u8aac\u660e"}, {"MON_VALUE", "\u5024"}, {"MON_CREATE_TIME", "\u4f5c\u6210\u6642\u9593"}, {"MON_VALID_UNTIL", "\u30c8\u30f3\u30cd\u30eb\u6709\u52b9\u671f\u9593"}, {"MON_PACKETS_IN", "\u53d7\u4fe1\u30d1\u30b1\u30c3\u30c8\u6570"}, {"MON_PACKETS_OUT", "\u9001\u4fe1\u30d1\u30b1\u30c3\u30c8\u6570"}, {"MON_BYTES_IN", "\u53d7\u4fe1\u30d0\u30a4\u30c8\u6570"}, {"MON_BYTES_OUT", "\u9001\u4fe1\u30d0\u30a4\u30c8\u6570"}, {"MON_FRAGMENTS_IN", "\u53d7\u4fe1\u65ad\u7247\u5316\u30d1\u30b1\u30c3\u30c8\u6570"}, {"MON_FRAGMENTS_OUT", "\u9001\u4fe1\u65ad\u7247\u5316\u30d1\u30b1\u30c3\u30c8\u6570"}, {"MON_TUNNEL_ACTIVE", "\u30c8\u30f3\u30cd\u30eb\u306f\u6709\u52b9\u3067\u3059"}, {"REG_NO_PERMISSION", "\u3053\u306e\u753b\u9762\u4e0a\u3067\u66f4\u65b0\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"REG_ERROR_RETRIEVING_COUNT", "\u767b\u9332/\u672a\u767b\u9332\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6570\u306e\u53d6\u5f97\u30a8\u30e9\u30fc"}, {"REG_CURRENT", "\u8cfc\u8aad"}, {"REG_EXPIRED", "\u5931\u52b9"}, {"REG_NO_LICENSE", "\u672a\u8cfc\u8aad"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30a4\u30e1\u30fc\u30b8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {"TASKS_SUCCESSFUL_DELETION", "\u30bf\u30b9\u30af\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u6b63\u5e38\u306b\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002"}, {"TASKS_ERROR_DELETION", "\u30a8\u30e9\u30fc:\u30bf\u30b9\u30af\u3092\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"TASKS_EXECUTION_SET", "\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u304c\u6b63\u5e38\u306b\u884c\u308f\u308c\u307e\u3057\u305f\u3002"}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", " \u4ed5\u4e8b\u3092\u5b9f\u884c\u3059\u308b\u7121\u8a31\u53ef\u306e\u8a66\u307f"}, {"TASKS_ERROR_EXECUTION", "\u30a8\u30e9\u30fc:\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u6642\u9593\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"TASK_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u306e\u30bf\u30b9\u30af\u306f\u30e6\u30fc\u30b6\u306b\u3088\u308a\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002"}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "\u30bf\u30b9\u30af\u306e\u524a\u9664\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"NO_TASKS_MESSAGE", "\u30bf\u30b9\u30af\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "\u63d0\u4f9b\u3055\u308c\u305f\u691c\u7d22\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u30bf\u30b9\u30af\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"TASKS_RESCHEDULED", "\u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u518d\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "\u30bf\u30b9\u30af\u306e\u518d\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306f\u8a8d\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"TASKS_ERROR_RESCHEDULE", "\u30a8\u30e9\u30fc:\u30bf\u30b9\u30af\u306e\u518d\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"IMMEDIATE_STRING", "\u5373\u6642"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "\u30ed\u30fc\u30ab\u30eb"}, {"AGENT_STRING", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "\u30e6\u30fc\u30b6 "}, {"FROM_LOG_MESSAGE", " \u306b\u3088\u3063\u3066\u30bf\u30b9\u30af\u304c\u518d\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f: "}, {"TO_LOG_MESSAGE", " \u304b\u3089 "}, {"IMMEDIATE_LOG_MESSAGE", "\u5373\u6642\u5b9f\u884c"}, {"REG_PASSWORD_SUCCESS", "\u6210\u529f\u3057\u307e\u3057\u305f\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f MySonicWall.com \u306b\u53d7\u8afe\u3055\u308c\u307e\u3057\u305f\u3002\u66f4\u65b0\u3092\u9078\u629e\u3057\u3066\u7d9a\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"REG_PASSWORD_FAIL", "\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f MySonicWall.com \u306b\u53d7\u8afe\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f: "}, {"LOGIN_MESSAGE", "\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044"}, {"LOGIN_DEFAULT_MESSAGE", "\u65e2\u5b9a\u306e\u30e6\u30fc\u30b6 'admin' \u3068\u30d1\u30b9\u30ef\u30fc\u30c9 'password' \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "\u65e2\u5b9a\u306e\u30e6\u30fc\u30b6 'admin' \u3068\u30d1\u30b9\u30ef\u30fc\u30c9 (/appliance \u3068\u540c\u3058\u3082\u306e) \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044"}, {"LOGIN_DEMO_MESSAGE", "\u30e6\u30fc\u30b6 'demo' \u3068\u30d1\u30b9\u30ef\u30fc\u30c9 'password' \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044"}, {"SETTINGSVPS_CHANGED", "Analyzer \u306e\u8a2d\u5b9a\u304c\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SETTINGS_CHANGED", "\u8a2d\u5b9a\u304c\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LOGS_USER_FORCEDOUT", " \u30b7\u30b9\u30c6\u30e0\u304b\u3089\u4ee5\u4e0b\u306e\u30e6\u30fc\u30b6\u304c\u5f37\u5236\u7684\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SLAVE_STATE_CHANGED_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u72b6\u614b\u304c\u6b63\u5e38\u306b\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "\u5931\u6557:\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u72b6\u614b\u3092\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u66f4\u65b0\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"SCHEDULER_UP_STATE", "\u7a3c\u50cd\u4e2d"}, {"SCHEDULER_DOWN_STATE", "\u4f11\u6b62\u4e2d"}, {"SCHEDULER_UNDETERMINED_STATE", "\u672a\u78ba\u5b9a"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u66f4\u65b0\u3059\u308b\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SMTPSERVER_INVALID", "SMTP \u30b5\u30fc\u30d0\u306e\u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {"APPLIANCE_MANAGE_FAILED", "\u88c5\u7f6e\u306b\u5bfe\u3059\u308b\u7ba1\u7406\u8a2d\u5b9a\u306e\u5909\u66f4\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"EMPTY_SMTP_PWD", "SMTP \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u7a7a\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093"}, {"TREE_AGENT_STARTED", "\u30d7\u30e9\u30a4\u30de\u30ea \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u518d\u5272\u308a\u5f53\u3066\u304c\u53ef\u80fd\u306a\u958b\u59cb\u72b6\u614b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"TREE_STANDBY_STARTED", "\u5f85\u6a5f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u518d\u5272\u308a\u5f53\u3066\u304c\u53ef\u80fd\u306a\u958b\u59cb\u72b6\u614b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"TREE_LICENSE_EXCEEDED", "\u3053\u308c\u4ee5\u4e0a\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"TREE_IP_EMPTY", "\u6b63\u3057\u3044 IP \u30a2\u30c9\u30ec\u30b9\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_AUTH_FAIL", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_NO_RESPONSE", "\u88c5\u7f6e\u306f\u5230\u9054\u4e0d\u80fd\u3067\u3059\u3002\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_FIREWALL_NOT_LICENSED", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306f Analyzer \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"TREE_FIREWALL_STATE_ERROR", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u72b6\u614b\u306e\u60c5\u5831\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\n\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u66f4\u65b0\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"TREE_MODEL_FAIL", "\u30e2\u30c7\u30eb\u60c5\u5831\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"TREE_FIRMWARE_VERSION_FAIL", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb \u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"TREE_UNMATCHED_SERIAL", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {"TREE_TIMEZONE_FAIL", "\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"TREE_UTC_FAIL", "\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8\u306f UTC \u5f62\u5f0f\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u9593\u9055\u3063\u305f\u6642\u9593\u304c\u30ec\u30dd\u30fc\u30c8\u306b\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092 UTC \u5f62\u5f0f\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "\u300cLog > ViewPoint\u300d\u753b\u9762\u306e\u300cViewPoint \u306e\u8a2d\u5b9a\u3092\u6709\u52b9\u306b\u3059\u308b\u300d\u3092\u6709\u52b9\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\t1. Syslog \u3092 UTC \u3067\u9001\u4fe1\n\t2. \u300cSyslog \u30a4\u30d9\u30f3\u30c8\u5197\u9577\u30d5\u30a3\u30eb\u30bf\u300d(\u30df\u30ea\u79d2) \u3092 0 \u306b\u8a2d\u5b9a\n\t3. \u300cSyslog \u5f62\u5f0f\u300d\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u8a2d\u5b9a"}, {"TREE_NO_SCHEDULER", "\u6307\u5b9a\u3055\u308c\u305f IP \u30a2\u30c9\u30ec\u30b9\u4e0a\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"TREE_GET_PREFS_ERR", "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {"TREE_FIREWALL_NOT_REGISTERED", "\u3053\u306e\u88c5\u7f6e\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002Analyzer \u306b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u524d\u306b\u3001MySonicWall.com \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u88c5\u7f6e\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_BACKEND_COMM_FAILURE", "Analyzer \u304c MySonicWall.com \u3068\u901a\u4fe1\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u691c\u8a3c\u3067\u304d\u307e\u305b\u3093\u3002\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002Analyzer \u30b5\u30fc\u30d0\u306f MySonicWall.com \u3068\u901a\u4fe1\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"SU_DB_SIZE_EMAILBODY1", "\u73fe\u5728\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b5\u30a4\u30ba\u306f\n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\n\u3067\u3059\u3002:\u6ce8\u610f:\u6700\u5927\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b5\u30a4\u30ba\u5236\u9650\u306f 2GB \u3067\u3059\u3002 \n\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5168\u4f53\u306e\u4f7f\u7528\u91cf\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\t\u300cConsole \u30d1\u30cd\u30eb -> Reports -> Settings\u300d\u30da\u30fc\u30b8\u306e\u3001\u300cRaw \u30c7\u30fc\u30bf\u306e\u4fdd\u7ba1\u671f\u9593\u300d\u8a2d\u5b9a\u306e\u65e5\u6570\u3092\u6e1b\u3089\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\t\u300cConsole \u30d1\u30cd\u30eb -> Reports -> Summarizer\u300d\u30da\u30fc\u30b8\u306e\u3001\u300c\u96c6\u8a08\u30c7\u30fc\u30bf\u306e\u4fdd\u7ba1\u65e5\u6570\u300d\u8a2d\u5b9a\u306e\u65e5\u6570\u3092\u6e1b\u3089\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\n\u88dc\u8db3: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u6700\u5927\u30b5\u30a4\u30ba\u5236\u9650\u306f 2GB \u3067\u3059\u3002\n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u5909\u66f4\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u7dcf\u4f7f\u7528\u5bb9\u91cf\u306b\u5f71\u97ff\u3057\u307e\u3059:\n\t\u300cConsole \u30d1\u30cd\u30eb -> Reports -> Settings\u300d\u753b\u9762\u3067 \"Raw \u30c7\u30fc\u30bf\u306e\u4fdd\u7ba1\u671f\u9593\" \u306e\u65e5\u6570\u8a2d\u5b9a\u3092\u6e1b\u5c11\u3055\u305b\u308b\u3002\n\t\u300cConsole \u30d1\u30cd\u30eb -> Reports -> Summarizer\u300d\u753b\u9762\u3067 \"\u96c6\u8a08\u30c7\u30fc\u30bf\u306e\u4fdd\u7ba1\u65e5\u6570\" \u306e\u65e5\u6570\u3092\u6e1b\u5c11\u3055\u305b\u308b\u3002"}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "\u8b66\u544a: \n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9 \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u8a08\u753b\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u65e2\u5b58\u306e\u8a08\u753b\u306b\u5f93\u3063\u3066\u30ed\u30b0\u304c\u30af\u30ea\u30a2\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u8a08\u753b\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3 \u30ed\u30b0\u306e\u30b5\u30a4\u30ba\u304c\u5897\u52a0\u3057\u3066\u3001\u30cf\u30fc\u30c9 \u30c7\u30a3\u30b9\u30af\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u308a\u307e\u3059\u3002\n\u30cf\u30fc\u30c9 \u30c7\u30a3\u30b9\u30af\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u308b\u3068\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068 GMS \u30b7\u30b9\u30c6\u30e0\u306f\u6b63\u5e38\u306b\u6a5f\u80fd\u3057\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u3066\u3044\u308b\u3068\u3001\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6700\u65b0\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306b\u5fa9\u5143\u3067\u304d\u307e\u305b\u3093\u3002"}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: SGMSDB \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "\u30e9\u30a4\u30bb\u30f3\u30b9\u78ba\u8a8d\u306e\u305f\u3081\u306e\u88c5\u7f6e\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u304c\u3001\u6b21\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092\u3082\u3064\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u305f\u3081\u306b\u5931\u6557\u3057\u307e\u3057\u305f - "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", "\u3002\u30ed\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u8a2d\u5b9a\u304c\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u4e0a\u3067\u30ed\u30fc\u30ab\u30eb\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002VPS \u3067\u306e\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b\u306f\u300c\u88c5\u7f6e\u306e\u7de8\u96c6\u300d\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "Analyzer \u306b\u3088\u308b\u30e9\u30a4\u30bb\u30f3\u30b9\u78ba\u8a8d"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "Analyzer \u306b\u3088\u308b\u30e9\u30a4\u30bb\u30f3\u30b9\u78ba\u8a8d"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "\u3054\u5229\u7528\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " \u3078\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u78ba\u8a8d\u305f\u3081\u306e\u30ed\u30b0\u30a4\u30f3\u304c\u5931\u6557\u3057\u3001\u7336\u4e88\u671f\u9593\u3092\u904e\u304e\u307e\u3057\u305f\u3002\u30ed\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u8a2d\u5b9a\u304c\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u4e0a\u3067\u30ed\u30fc\u30ab\u30eb\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002VPS \u3067\u306e\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b\u306f\u300c\u88c5\u7f6e\u306e\u7de8\u96c6\u300d\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "Analyzer \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5931\u52b9\u3057\u307e\u3057\u305f\u3002"}, {"SU_LIC_EXPIRED_BODY1", "\u88c5\u7f6e "}, {"SU_LIC_EXPIRED_BODY2", " \u306f Analyzer \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SU_LIC_EXPIRED_SUBJECT", "Analyzer \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5931\u52b9\u3057\u307e\u3057\u305f\u3002"}, {"LOGVIEW_WRONG_START_DT", "\u958b\u59cb\u65e5\u306e\u5f62\u5f0f\u304c\u4e0d\u6b63\u3067\u3059\u3002\u65e5\u4ed8\u306f\u3001mm/dd/yyyy \u5f62\u5f0f\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGVIEW_WRONG_END_DT", "\u7d42\u4e86\u65e5\u306e\u5f62\u5f0f\u304c\u4e0d\u6b63\u3067\u3059\u3002\u65e5\u4ed8\u306f\u3001mm/dd/yyyy \u5f62\u5f0f\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGVIEW_ENDDT_LESS_STARTDT", "\u7d42\u4e86\u65e5\u304c\u958b\u59cb\u65e5\u3088\u308a\u524d\u306e\u65e5\u4ed8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6709\u52b9\u306a\u958b\u59cb/\u7d42\u4e86\u65e5\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGVIEW_MSGS_PERSCRN", "1 \u753b\u9762\u3042\u305f\u308a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u6570"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "{0,number,integer} \u306e\u30ed\u30b0 \u30a8\u30f3\u30c8\u30ea\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u672c\u5f53\u306b\u3053\u308c\u3092\u5b9f\u884c\u3057\u307e\u3059\u304b? \u5b9f\u884c\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u3001\u691c\u7d22\u6761\u4ef6\u3092\u5236\u9650\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGVIEW_GOTO_MSG", "\u8868\u793a\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u756a\u53f7:"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "1 \u753b\u9762\u3042\u305f\u308a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u6570:"}, {"LOGVIEW_RANGE", "(\u7bc4\u56f2: 10-100)"}, {"LOGVIEW_COL_DT", "\u65e5\u4ed8"}, {"LOGVIEW_COL_MSG", "\u30e1\u30c3\u30bb\u30fc\u30b8"}, {"LOGVIEW_COL_SEV", "\u91cd\u5927\u5ea6"}, {"LOGVIEW_COL_USER", "GMS \u30e6\u30fc\u30b6"}, {"LOGVIEW_COL_CO", "\u9806\u5e8f\u306e\u5909\u66f4"}, {"LOGVIEW_COL_IP", "\u30e6\u30fc\u30b6 IP"}, {"LOGVIEW_SEARCH_RESULTS", "\u691c\u7d22\u7d50\u679c"}, {"LOGVIEW_SEARCH_CRITERIA", "\u691c\u7d22\u6761\u4ef6"}, {"LOGVIEW_EXPORT_LOGS", "\u30ed\u30b0\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8"}, {"LOGVIEW_CLEAR_LOGS", "\u691c\u7d22\u30af\u30ea\u30a2"}, {"LOGVIEW_SEARCH_LOGS", "\u691c\u7d22\u958b\u59cb"}, {"LOGVIEW_MATCH_CASE", "\u82f1\u5927\u6587\u5b57/\u5c0f\u6587\u5b57\u3092\u533a\u5225"}, {"LOGVIEW_EXACT_PHRASE", "\u30d5\u30ec\u30fc\u30ba\u5168\u4f53"}, {"LOGVIEW_ANY_WORD", "\u3044\u305a\u308c\u304b\u306e\u5358\u8a9e"}, {"LOGVIEW_ALL_WORDS", "\u3059\u3079\u3066\u306e\u5358\u8a9e"}, {"LOGVIEW_MSG", "\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u5217:"}, {"LOGVIEW_CO", "\u9806\u5e8f\u306e\u5909\u66f4:"}, {"LOGVIEW_TIME", "\u30ed\u30b0\u306e\u65e5\u4ed8\u306e\u9078\u629e:  \u958b\u59cb\u65e5:"}, {"LOGVIEW_TIME_TO", "\u7d42\u4e86\u65e5: "}, {"LOGVIEW_NODE_NAME", "SonicWall \u30ce\u30fc\u30c9:"}, {"LOGVIEW_USER", " \u30e6\u30fc\u30b6: "}, {"LOGVIEW_SEV", "\u91cd\u5927\u5ea6: "}, {"LOGVIEW_CALENDAR", "\u30ab\u30ec\u30f3\u30c0\u30fc"}, {"LOGVIEW_ALL", "\u3059\u3079\u3066 (\u30a2\u30e9\u30fc\u30c8\u3001\u8b66\u544a\u3001\u304a\u3088\u3073\u30e1\u30e2)"}, {"LOGVIEW_ALERT_WARNING", "\u30a2\u30e9\u30fc\u30c8\u3068\u8b66\u544a"}, {"LOGVIEW_ALERT", "\u30a2\u30e9\u30fc\u30c8"}, {"LOGVIEW_STR_FORMAT", "\u691c\u7d22\u6587\u5b57\u5217\u306e\u5f62\u5f0f: user@domain\u3002<br>\u30e6\u30fc\u30b6\u306e\u307f\u306e\u5834\u5408\u306f\u3001user \u3092\u5165\u529b\u3057\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u306e\u307f\u306e\u5834\u5408\u306f\u3001@domain \u3092\u5165\u529b\u3057\u307e\u3059\u3002<br><i>\u88dc\u8db3: user \u5024\u306b @ \u6587\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u5f8c\u306e @ \u307e\u3067\u3092\u691c\u7d22\u6587\u5b57\u5217\u3068\u3057\u307e\u3059\u3002</i>"}, {"HELPABOUT_VERSION", "\u30d0\u30fc\u30b8\u30e7\u30f3:"}, {"HELPABOUT_LIC", "\u30e9\u30a4\u30bb\u30f3\u30b9\u4fdd\u6301\u8005:"}, {"HELPABOUT_SN", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7:"}, {"HELPABOUT_DBDRIVER", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30c9\u30e9\u30a4\u30d0:"}, {"HELPABOUT_DBVERSION", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30d0\u30fc\u30b8\u30e7\u30f3:"}, {"HELPABOUT_REPORT_DBVERSION", "\u30ec\u30dd\u30fc\u30c8 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30d0\u30fc\u30b8\u30e7\u30f3:"}, {"LOGIN_TITLE", "\u30ed\u30b0\u30a4\u30f3"}, {"LOGIN_ISBLANK", " \u304c\u7a7a\u767d\u3067\u3059\u3002\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGIN_INVALIDID", "\u7121\u52b9\u306a\u30e6\u30fc\u30b6 ID \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"LOGIN_INVALIDID2", "\u30e6\u30fc\u30b6 ID \u306b\u306f\u6b21\u306e\u6587\u5b57\u306e\u307f\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059:"}, {"LOGIN_INVALIDID3", "\u82f1\u6570\u5b57\u3001. (\u30d4\u30ea\u30aa\u30c9)\u3001- (\u30cf\u30a4\u30d5\u30f3)\u3001_ (\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2)\u3001@ (\u30a2\u30c3\u30c8\u30de\u30fc\u30af)\u3002"}, {"LOGIN_INVALIDID4", "\u6709\u52b9\u306a\u6587\u5b57\u3092\u4f7f\u7528\u3057\u305f\u30e6\u30fc\u30b6 ID \u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGIN_USERNAME", "\u30e6\u30fc\u30b6\u540d"}, {"LOGIN_PASSWORD", "\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"LOGIN_LOGIN", "\u30ed\u30b0\u30a4\u30f3"}, {"LOGIN_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"LOGIN_SWITCH_EN_US", "\u82f1\u8a9e\u7248 UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_JA_JP", "\u65e5\u672c\u8a9e\u7248 UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_ZH_CN", "\u7c21\u4f53\u5b57\u4e2d\u56fd\u8a9e\u7248 UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_ZH_TW", "\u7e41\u4f53\u5b57\u4e2d\u56fd\u8a9e\u7248 UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_KO_KR", "\u97d3\u56fd\u8a9e\u306e UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_PT_BR", "\u30d6\u30e9\u30b8\u30eb \u30dd\u30eb\u30c8\u30ac\u30eb\u8a9e\u306e UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGOUT_TITLE", "\u30ed\u30b0\u30a2\u30a6\u30c8"}, {"LOGOUT_VPMSG", "SonicWall Analyzer \u30b7\u30b9\u30c6\u30e0\u304b\u3089\u6b63\u5e38\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002"}, {"LOGOUT_VPMSG1", "\u65b0\u3057\u3044 SonicWall Analyzer \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u3053\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u308b\u304b\u7d42\u4e86\u3057\u3066\u3001&nbsp<br>&nbsp\u65b0\u3057\u304f\u30d6\u30e9\u30a6\u30b6\u3092\u8d77\u52d5\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002"}, {"LOGOUT_GMSMSG", "SonicWall \u30b0\u30ed\u30fc\u30d0\u30eb\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u6b63\u5e38\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002 "}, {"LOGOUT_GMSMSG1", "\u65b0\u3057\u3044 SonicWall GMS \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u3053\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u308b\u304b\u7d42\u4e86\u3057\u3066\u3001&nbsp<br>&nbsp\u65b0\u3057\u304f\u30d6\u30e9\u30a6\u30b6\u3092\u8d77\u52d5\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002"}, {"SETTINGSUSER_CHANGE", "\u5909\u66f4"}, {"SETTINGSUSER_OLD", "\u53e4\u3044"}, {"SETTINGSUSER_PASSWORD", "\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"SETTINGSUSER_NEW", "\u65b0\u3057\u3044"}, {"SETTINGSUSER_CONFIRMMSG", "\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u518d\u5165\u529b"}, {"SETTINGSUSER_FAILMSG", "\u30d1\u30b9\u30ef\u30fc\u30c9' \u3068 '\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u518d\u5165\u529b' \u304c\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u306f\u82f1\u6570 7 \u6587\u5b57\u4ee5\u4e0a\u3092\u6307\u5b9a\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"INVALID_PASSWORD", "\u7121\u52b9\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"PWD_RULES", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u6b21\u306e\u30eb\u30fc\u30eb\u306b\u57fa\u3065\u3044\u3066\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"VALID_PWD_RULE_FOR_PCI", "    - 7 \u6587\u5b57\u4ee5\u4e0a\u3002"}, {"MAX_PWD_LEN", "    - 15 \u6587\u5b57\u4ee5\u4e0b\u3002"}, {"PWD_ALPHANUMERIC_CHARS", "    - \u82f1\u6570\u5b57\u3092\u4f7f\u7528\u3067\u304d\u308b\u3002"}, {"PWD_SPCIAL_CHARS", "    - \u7279\u6b8a\u6587\u5b57\u3092\u4f7f\u7528\u3067\u304d\u308b\u3002"}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "    - \u6b21\u306e\u6587\u5b57\u7a2e\u5225\u304b\u3089\u5c11\u306a\u304f\u3068\u3082 2 \u7a2e\u5225\u3092\u542b\u307e\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093: \u82f1\u5b57\u3001\u6570\u5b57\u3001\u8a18\u53f7\u3002"}, {"PWD_USERID_SIMILAR", "    - \u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u30e6\u30fc\u30b6\u306e\u6587\u5b57\u5217\u306f\u76f8\u9055\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002"}, {"PREV_PWD_SEQUENCE", "    - \u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u524d\u56de\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u6587\u5b57\u5217\u3092 3 \u3064\u4ee5\u4e0a\u542b\u3081\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002"}, {"PWD_MEETS_REQS", "\u3053\u308c\u3089\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SETTINGSUSER_MISCSETTINGS", "\u305d\u306e\u4ed6\u306e\u8a2d\u5b9a"}, {"SETTINGSUSER_TIMEOUTPERIOD", "\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u671f\u9593\u306f\u3001-1 \u304b [5 \uff5e 120] \u306e\u7bc4\u56f2\u5185\u3067\u3059\u3002\u6709\u52b9\u306a\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"SETTINGSUSER_NEVERTIMEOUT", "\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u306a\u3044"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "\u7121\u52d5\u4f5c\u6642\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "\u88c5\u7f6e\u9078\u629e\u30d1\u30cd\u30eb\u306e\u8868\u793a:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u30a2\u30a4\u30b3\u30f3"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "\u30c6\u30ad\u30b9\u30c8"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u30a2\u30a4\u30b3\u30f3\u3068\u30c6\u30ad\u30b9\u30c8 (\u30c7\u30d5\u30a9\u30eb\u30c8)"}, {"MAX_ROWS_PER_SCREEN", "\u753b\u9762\u3054\u3068\u306e\u6700\u5927\u5217:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "\u7bc4\u56f2: [10 \uff5e 100] (\u30ec\u30dd\u30fc\u30c8\u3055\u308c\u306a\u3044\u30da\u30fc\u30b8\u5358\u4f4d\u306e\u753b\u9762\u306e\u307f\u306b\u9069\u7528\u3067\u304d\u307e\u3059)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "\u300c\u753b\u9762\u3054\u3068\u306e\u6700\u5927\u5217\u300d\u306e\u5024\u304c\u7bc4\u56f2\u5916\u3067\u3059\u3002\uff6410 \u304b\u3089 100 \u306e\u7bc4\u56f2\u5185\u3067\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "\u300c\u753b\u9762\u3054\u3068\u306e\u6700\u5927\u5217\u300d\u306e\u5024\u304c\u6570\u5024\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6709\u52b9\u306a\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306e\u81ea\u52d5\u4fdd\u5b58\u306e\u8a2d\u5b9a:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1 \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u81ea\u52d5\u4fdd\u5b58\u306f\u6709\u52b9\u306b\u306a\u308a\u307e\u305b\u3093\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001[1..60] \u306e\u7bc4\u56f2\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "\u300c\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306e\u81ea\u52d5\u4fdd\u5b58\u306e\u8a2d\u5b9a\u300d\u306b\u306f\u3001-1 \u307e\u305f\u306f [1..60] \u306e\u7bc4\u56f2\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u6709\u52b9\u306a\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CHANGEPASSWORD_OLD", " \u53e4\u3044\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"CHANGEPASSWORD_NEW", " \u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"CHANGEPASSWORD_CONFIRM", "\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u518d\u5165\u529b"}, {"CHANGEPASSWORD_USER", " \u30e6\u30fc\u30b6"}, {"CUSTLOGSETTINGS_NOTE1", "\u88dc\u8db3: \u8907\u6570\u306e\u96fb\u5b50\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u30bb\u30df\u30b3\u30ed\u30f3 (\";\") \u533a\u5207\u308a\u3067\u5165\u529b\u3067\u304d\u307e\u3059\u3002"}, {"CUSTLOGSETTINGS_SECTITLE1", "\u96fb\u5b50\u30e1\u30fc\u30eb\u8b66\u544a\u306e\u9001\u4fe1\u5148\u3068\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb"}, {"CUSTLOGSETTINGS_WEEKDAY", "\u5e73\u65e5:"}, {"CUSTLOGSETTINGS_SCHED1", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb 1:"}, {"CUSTLOGSETTINGS_SCHED2", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb 2:"}, {"CUSTLOGSETTINGS_SCHED3", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb 3:"}, {"CUSTLOGSETTINGS_SAT", "\u571f\u66dc\u65e5"}, {"CUSTLOGSETTINGS_SUN", "\u65e5\u66dc\u65e5"}, {"CUSTLOGSETTINGS_WEEKEND", "\u9031\u672b:"}, {"CUSTLOGSETTINGS_HRS", "\u6642"}, {"CUSTLOGSETTINGS_TO", "\u304b\u3089"}, {"CUSTLOGSETTINGS_ALERTFMT", "\u96fb\u5b50\u30e1\u30fc\u30eb\u8b66\u544a\u306e\u5f62\u5f0f"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "\u30c6\u30ad\u30b9\u30c8\u3001\u8272\u3001\u753b\u50cf\u3068\u30ea\u30f3\u30af\u304c\u542b\u307e\u308c\u307e\u3059\u3002HTML \u8868\u793a\u306e\u53ef\u80fd\u306a\u96fb\u5b50\u30e1\u30fc\u30eb \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u307f\u306b\u4e92\u63db\u304c\u3042\u308a\u307e\u3059\u3002"}, {"CUSTLOGSETTINGS_TEXT", "\u30c6\u30ad\u30b9\u30c8"}, {"CUSTLOGSETTINGS_TEXT_DESC", "\u3059\u3079\u3066\u306e\u8a73\u7d30\u304c\u30d7\u30ec\u30fc\u30f3 \u30c6\u30ad\u30b9\u30c8\u3067\u542b\u307e\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u4e92\u63db\u304c\u3042\u308a\u307e\u3059\u3002"}, {"CUSTLOGSETTINGS_PAGER", "\u30c6\u30ad\u30b9\u30c8 (\u7c21\u7d20)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "\u77ed\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30d7\u30ec\u30fc\u30f3 \u30c6\u30ad\u30b9\u30c8\u3067\u542b\u307e\u308c\u307e\u3059\u3002\u30dd\u30b1\u30d9\u30eb\u3001\u643a\u5e2f\u30e1\u30fc\u30eb (SMS) \u3084\u3001\u305d\u308c\u3089\u306b\u985e\u4f3c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6700\u9069\u3067\u3059\u3002"}, {"LOGCONFIG_SECTITLE_1", ""}, {"LOGCONFIG_SECTITLE_2", "\u306e\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u9664"}, {"LOGCONFIG_DELLABEL", "\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u3088\u308a\u53e4\u3044\u30ed\u30b0\u3092\u524a\u9664:"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u65e5"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u7d4c\u904e\u6642\u9593"}, {"LOGCONFIG_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"SESSIONS_NOSESSALERT", "\u7d42\u4e86\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SESSIONS_NOSESSSELALERT", "\u7d42\u4e86\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SESSIONS_RUSUREALERT", "\u672c\u5f53\u306b\u9078\u629e\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u307e\u3059\u304b?"}, {"SESSIONS_TITLE", "\u73fe\u5728\u306e\u30bb\u30c3\u30b7\u30e7\u30f3"}, {"SESSIONS_COL1", "\u30e6\u30fc\u30b6\u540d"}, {"SESSIONS_COL2", "IP \u30a2\u30c9\u30ec\u30b9"}, {"SESSIONS_COL3", "\u30ed\u30b0\u30a4\u30f3\u6642\u9593"}, {"SESSIONS_COL4", "\u6700\u7d42\u30a2\u30af\u30bb\u30b9\u6642\u9593"}, {"SESSIONS_COL5", "\u30c9\u30e1\u30a4\u30f3\u540d"}, {"SESSIONS_END", "\u9078\u629e\u3057\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3059\u308b"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP \u30b5\u30fc\u30d0 \u30a2\u30c9\u30ec\u30b9"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP \u30dd\u30fc\u30c8"}, {"LOGINVPSSETTINGS_LABEL2", "\u9001\u4fe1\u8005\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9"}, {"LOGINVPSSETTINGS_LABEL3", "\u7ba1\u7406\u8005\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9"}, {"LOGINVPSSETTINGS_LABEL3_5", "TLS \u3092\u4f7f\u7528\u3059\u308b"}, {"LOGINVPSSETTINGS_LABEL4", "\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b"}, {"LOGINVPSSETTINGS_LABEL5", "\u30e6\u30fc\u30b6"}, {"LOGINVPSSETTINGS_LABEL6", "\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"LOGINVPSSETTINGS_NOTE", "\u88dc\u8db3: \u53d7\u4fe1\u8005\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001\u300cConsole > Management > Alert Settings\u300d\u3092\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "\u30b7\u30b9\u30c6\u30e0 \u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "\u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3068\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u3001\u3088\u308a\u8fc5\u901f\u306b\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u3053\u306e\u914d\u5099\u306b\u542b\u307e\u308c\u308b\u3059\u3079\u3066\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u30c7\u30d0\u30c3\u30b0 \u30ed\u30b0 \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u305f\u3081\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3057\u305f\u308a\u3001\u30c7\u30a3\u30b9\u30af\u304c\u4e00\u676f\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u305f\u3089\u3059\u3050\u306b\u300c<i>\u30c7\u30d0\u30c3\u30b0\u306a\u3057</i>\u300d\u306b\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u3001\u901a\u5e38\u306e\u64cd\u4f5c\u306b\u623b\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "\u88dc\u8db3: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb\u306e\u8a2d\u5b9a\u306f\u3001SonicWall \u30c6\u30af\u30cb\u30ab\u30eb \u30b5\u30dd\u30fc\u30c8\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u306b\u5f93\u3063\u3066\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb\u306e\u8a2d\u5b9a\u3092\u9ad8\u304f\u3059\u308b\u3068\u3001\u30c7\u30d0\u30c3\u30b0 \u30c7\u30fc\u30bf\u306e\u751f\u6210\u306b\u5fc5\u8981\u306a\u30b7\u30b9\u30c6\u30e0 \u30ea\u30bd\u30fc\u30b9\u304c\u5897\u52a0\u3059\u308b\u305f\u3081\u3001\u30b7\u30b9\u30c6\u30e0\u306e\u5168\u4f53\u7684\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3057\u307e\u3059\u3002"}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "\u3044\u307e\u3059\u3050\u30e2\u30c7\u30eb \u30b3\u30fc\u30c9\u60c5\u5831\u3092\u540c\u671f\u3059\u308b"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\u65e2\u306b\u5b58\u5728\u3059\u308b\u3059\u3079\u3066\u306e\u3001\u65b0\u3057\u3044 SMTP \u30b5\u30fc\u30d0 \u30a2\u30c9\u30ec\u30b9\u3092\u4f34\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30ec\u30dd\u30fc\u30c8\u306e\u305f\u3081\u306e SMTP \u30b5\u30fc\u30d0 \u30a2\u30c9\u30ec\u30b9\u3092\u66f4\u65b0\u3057\u307e\u3059\u304b?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "\u30e2\u30c7\u30eb \u30b3\u30fc\u30c9\u60c5\u5831\u306e\u540c\u671f\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "\u53e4\u3044\u5f62\u5f0f (Analyzer 7.0 \u4ee5\u524d) \u306e\u30ec\u30dd\u30fc\u30c8\u3092\u8868\u793a"}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "\u30d1\u30b9\u30ef\u30fc\u30c9 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u5f37\u5236\u3059\u308b"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5909\u66f4\u3092\u5f37\u5236\u3059\u308b\u65e5\u6570"}, {"GENVPSSTATUS_INVALIDIP", "\u4eca\u306e\u3068\u3053\u308d\u4e0d\u5b8c\u5168\u306a\u88c5\u7f6e\u306e\u8a8d\u8a3c\u60c5\u5831\u306b\u3088\u3063\u3066\u30ed\u30b0\u30a4\u30f3\u304c\u53ef\u80fd\u3067\u3059\u3002"}, {"GENVPSSTATUS_NODE", " \u30ce\u30fc\u30c9: "}, {"GENVPSSTATUS_INFO", "\u60c5\u5831"}, {"GENVPSSTATUS_SYSLOG", "Syslog \u30b5\u30fc\u30d0"}, {"GENVPSSTATUS_IPINFO", "IP \u30a2\u30c9\u30ec\u30b9"}, {"GENVPSSTATUS_PORT", "\u30dd\u30fc\u30c8"}, {"GENVPSSTATUS_SYNCNOW", "\u88c5\u7f6e\u306e\u8a2d\u5b9a\u304a\u3088\u3073\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092 MySonicWall.com \u3068\u540c\u671f\u3059\u308b"}, {"GENVPSSTATUS_GETSTARTED", "Analyzer \u306e\u5c0e\u5165"}, {"GENVPSSTATUS_GETSTARTOPEN", "\u65b0\u898f\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u5c0e\u5165\u30ac\u30a4\u30c9\u3092\u958b\u304f"}, {"GENVPSSTATUS_LOGINTITLE", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb \u30ed\u30b0\u30a4\u30f3"}, {"GENVPSSTATUS_LOGINHTTP", "\u5b89\u5168\u3067\u306a\u3044\u30ed\u30b0\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "\u5b89\u5168\u306a\u30ed\u30b0\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "\u30ed\u30b0\u30a4\u30f3"}, {"GENVPSSTATUS_CATEGORIES", "Syslog \u7a2e\u5225"}, {"GENVPSSTATUS_REFRESH_MSG", "\u88dc\u8db3: \u72b6\u6cc1\u60c5\u5831\u306f 24 \u6642\u9593\u3054\u3068\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u60c5\u5831\u3092\u518d\u8868\u793a\u3059\u308b\u306b\u306f\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001\u88c5\u7f6e\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3001\u624b\u52d5\u3067\u66f4\u65b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"GENVPSSTATUS_LOG_TYPE", "\u30ed\u30b0\u7a2e\u5225"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "\u30b7\u30b9\u30c6\u30e0 \u30e1\u30f3\u30c6\u30ca\u30f3\u30b9"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "\u30b7\u30b9\u30c6\u30e0 \u30a8\u30e9\u30fc"}, {"GENVPSSTATUS_BLOCKED_WEB", "\u906e\u65ad\u3055\u308c\u305f\u30a6\u30a7\u30d6 \u30b5\u30a4\u30c8"}, {"GENVPSSTATUS_BLOCKED_JAVA", "\u906e\u65ad\u3055\u308c\u305f Java \u305d\u306e\u4ed6"}, {"GENVPSSTATUS_USER_ACTIVITY", "\u30e6\u30fc\u30b6 \u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP \u7d71\u8a08\u60c5\u5831"}, {"GENVPSSTATUS_ATTACKS", "\u653b\u6483"}, {"GENVPSSTATUS_DROPPED_TCP", "\u7834\u68c4\u3055\u308c\u305f TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "\u7834\u68c4\u3055\u308c\u305f UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "\u7834\u68c4\u3055\u308c\u305f ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30c7\u30d0\u30c3\u30b0"}, {"GENVPSSTATUS_DENIED_LAN_IP", "\u62d2\u5426\u3055\u308c\u305f LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "Analyzer \u30e9\u30a4\u30bb\u30f3\u30b9\u72b6\u6cc1"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;\u4ee5\u4e0b\u306e\u624b\u9806\u306b\u5f93\u3063\u3066 \\\"\u672a\u8cfc\u8aad\\\" \u306e\u554f\u984c\u3092\u89e3\u6c7a\u3057\u3066\u304f\u3060\u3055\u3044:<br/>&nbsp;&nbsp;\u30b9\u30c6\u30c3\u30d7 1 - <a href=\"http://www.MySonicWall.com\" target=new>\u3053\u3053\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001MySonicWall.com \u3067\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u78ba\u8a8d\u3068\u6709\u52b9\u5316\u3092\u884c\u3044\u307e\u3059\u3002</a><br/>&nbsp;&nbsp;\u30b9\u30c6\u30c3\u30d7 2 - \u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001<a href=\"javascript:synchronizeInfo();\">\u3053\u3053\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u540c\u671f\u3057\u307e\u3059\u3002</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(MySonicWall.com \u3068\u306e\u901a\u4fe1\u306b\u5931\u6557\u3057\u307e\u3057\u305f)<br/>&nbsp;&nbsp;GMSVP \u30a6\u30a7\u30d6 \u30b5\u30fc\u30d0\u304c www.MySonicWall.com \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"COMPONENT", "\u8aac\u660e"}, {"COMPONENT_LC", "\u69cb\u6210\u8981\u7d20"}, {"FILE_SIZE", "\u30d5\u30a1\u30a4\u30eb \u30b5\u30a4\u30ba (KB)"}, {"IP_ADDRESS", "IP \u30a2\u30c9\u30ec\u30b9"}, {"CURRENT_VERSION", "\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3"}, {"LATEST_VERSION", "\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3"}, {"RELEASE_NOTES", "\u30ea\u30ea\u30fc\u30b9 \u30ce\u30fc\u30c8"}, {"LAST_DOWNLOADED", "\u6700\u7d42\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9"}, {"RELEASE_DATE", "\u30ea\u30ea\u30fc\u30b9\u65e5"}, {"DOWNLD_NEW", "\u65b0\u3057\u3044 "}, {"SOFTWARE_UPDATES", "\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u66f4\u65b0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"}, {"DEL_SEL_COMPS_FROM_LIST", "\u9078\u629e\u3057\u305f\u69cb\u6210\u8981\u7d20\u3092\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\u3059\u308b"}, {"LIC_DELETE_MSG", "\u524a\u9664\u3067\u304d\u307e\u305b\u3093:"}, {"LIC_PATCH_MSG", "\u30d1\u30c3\u30c1\u306f\u307e\u3060\u3042\u308a\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093:"}, {"LIC_NEW_GMS_SW", "\u65b0\u3057\u3044 GMS \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2"}, {"LIC_CONSOLE", "\u30b3\u30f3\u30bd\u30fc\u30eb"}, {"LIC_SELECT_COMPONENT", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CHAP_TESTING", "CHAP \u30c6\u30b9\u30c8\u4e2d"}, {"CHAP_RADIUS_TESTING_MSG", "CHAP \u8a8d\u8a3c\u306f\u3001CHAP \u8a8d\u8a3c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b RADIUS \u30b5\u30fc\u30d0\u3067\u306e\u307f\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53ef\u9006\u7684\u306b\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b RADIUS \u30b5\u30fc\u30d0\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u3082\u3042\u308a\u307e\u3059\u3002"}, {"CHAP_LDAP_TESTING_MSG", "CHAP \u8a8d\u8a3c\u306f\u3001LDAP \u3092\u5229\u7528\u3057\u305f\u30e6\u30fc\u30b6 \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u53d6\u5f97\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30b5\u30fc\u30d0\u3067\u306e\u307f\u6a5f\u80fd\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53ef\u9006\u7684\u306b\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b LDAP \u30b5\u30fc\u30d0\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u3082\u3042\u308a\u307e\u3059\u3002"}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "\u307e\u305f\u3001CHAP \u306f Microsoft Active Directory \u307e\u305f\u306f Novell eDirectory \u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"PERF_NO_SUMMARIZER", "\u96c6\u8a08\u6027\u80fd\u30e1\u30c8\u30ea\u30c3\u30af\u306f\u73fe\u5728\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"PERF_SUMMARIZER_INFO", "\u96c6\u8a08\u60c5\u5831"}, {"PERF_SUMMARIZER", "\u96c6\u8a08"}, {"PERF_SYSLOG_INFO", "\u30c7\u30fc\u30bf \u30d5\u30a1\u30a4\u30eb\u60c5\u5831"}, {"PERF_SYSLOG_FILE_TYPE", "\u30c7\u30fc\u30bf \u30d5\u30a1\u30a4\u30eb\u7a2e\u5225"}, {"PERF_FILE_STATS", "\u30d5\u30a1\u30a4\u30eb\u7d71\u8a08"}, {"PERF_OLDEST", "\u6700\u3082\u53e4\u3044\u30d5\u30a1\u30a4\u30eb"}, {"PERF_PRD_LABEL", "\u51e6\u7406\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_SRC_LABEL", "\u30b0\u30eb\u30fc\u30d7\u5316\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_UNP_LABEL", "\u672a\u51e6\u7406\u30d5\u30a1\u30a4\u30eb"}, {"PERF_NMM_LABEL", "\u672a\u767b\u9332\u88c5\u7f6e\u306e\u30d5\u30a1\u30a4\u30eb"}, {"PERF_IMF_LABEL", "\u611f\u67d3\u30d5\u30a1\u30a4\u30eb"}, {"PERF_ZIP_LABEL", "\u30a2\u30fc\u30ab\u30a4\u30d6\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_PRE_LABEL", "\u4e0d\u6b63\u306a\u30ed\u30b0 \u30d5\u30a1\u30a4\u30eb\u3067\u3059"}, {"PERF_UPE_LABEL", "\u4e0d\u6b63\u306a\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9 \u30d5\u30a1\u30a4\u30eb"}, {"PERF_UPD_LABEL", "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_UPL_LABEL", "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u672a\u6c7a\u30d5\u30a1\u30a4\u30eb"}, {"PERF_RDB_LABEL", "\u30ec\u30dd\u30fc\u30c8 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9"}, {"PERF_OPT_STATE_LABEL", "\u6700\u9069\u5316\u72b6\u6cc1"}, {"PERF_OPT_PENDING_LABEL", "\u6700\u9069\u5316\u4fdd\u7559\u4e2d"}, {"PERF_OPT_TOTAL_LABEL", "\u672a\u6700\u9069\u5316\u65e5\u6570\u5408\u8a08"}, {"PERF_BKP_LABEL", "\u30d0\u30c3\u30af\u30a2\u30c3\u30d7 \u30d5\u30a1\u30a4\u30eb"}, {"PERF_FILE_ELEMENT", " \u30d5\u30a1\u30a4\u30eb - "}, {"PERF_THREAD_INFO", "\u96c6\u8a08\u51e6\u7406\u306e\u8a73\u7d30"}, {"PERF_NUM_THREADS", "\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u73fe\u5728\u5b9f\u884c\u4e2d\u3067\u3059\u3002"}, {"PERF_SUMMARIZER_IDLE", "\u96c6\u8a08\u306f\u7121\u52d5\u4f5c\u72b6\u614b\u3067\u3059\u3002"}, {"PERF_THREAD", "\u30b9\u30ec\u30c3\u30c9"}, {"PERF_FIREWALL", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"PERF_FILE", "\u30d5\u30a1\u30a4\u30eb"}, {"PERF_STATE", "\u72b6\u614b"}, {"PERF_START_TIME", "\u958b\u59cb\u6642\u523b"}, {"PERF_SUMMARIZER_STATS", "\u96c6\u8a08\u7d71\u8a08"}, {"PERF_PAST_24", "24 \u6642\u9593\u4ee5\u4e0a\u7d4c\u904e (\u958b\u59cb\u65e5\u6642 "}, {"PERF_PAST_7_DAYS", "7 \u65e5\u4ee5\u4e0a\u7d4c\u904e (\u958b\u59cb\u65e5\u6642 "}, {"PERF_PAST_30_DAYS", "30 \u65e5\u4ee5\u4e0a\u7d4c\u904e (\u958b\u59cb\u65e5\u6642 "}, {"PERF_NUM_SYSLOGS", "\u8907\u6570\u306e Syslog \u304c\u96c6\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"PERF_AVERAGE_PER_MINUTE", "1 \u5206\u6bce\u306b\u96c6\u8a08\u3055\u308c\u305f Syslog \u5e73\u5747"}, {"PERF_NOT_ACTIVE", "\u904e\u53bb 7 \u65e5\u9593\u3067\u96c6\u8a08\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"PERF_NO_GEN2", "\u96c6\u8a08\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306f\u3001\u5206\u6563\u96c6\u8a08\u8a2d\u5b9a\u306e\u307f\u3067\u5229\u7528\u53ef\u80fd\u3067\u3059"}, {"PERF_MEM_USAGE", "\u96c6\u8a08\u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf"}, {"PERF_LAST_RUN", "\u6700\u7d42\u5b9f\u884c\u6642\u9593"}, {"PERF_NEXT_RUN", "\u6b21\u56de\u5b9f\u884c\u6642\u9593"}, {"PERF_SUMMARIZER_STATISTICS", "7 \u65e5\u9593\u306e\u96c6\u8a08\u72b6\u6cc1"}, {"PERF_SUMMARIZER_UTILIZATION", "\u96c6\u8a08\u306e\u5229\u7528\u72b6\u6cc1"}, {"PERF_TOTAL_RUN_TIME", "1 \u65e5\u6bce\u306e\u5b9f\u884c\u6642\u9593\u5e73\u5747"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "\u63a8\u5b9a\u5bb9\u91cf"}, {"PERF_METRIC_SYSLOG", "(100 \u4e07 Syslog/\u65e5)"}, {"PERF_METRIC_XML", "(XML \u30d5\u30a1\u30a4\u30eb/\u65e5)"}, {"PERF_TOTAL_LOAD", "\u8ca0\u8377\u5e73\u5747"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "\u96c6\u8a08\u3055\u308c\u305f Syslog \u5e73\u5747 (100 \u4e07/\u65e5)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "1 \u65e5\u6bce\u306b\u96c6\u8a08\u3055\u308c\u305f XML \u30d5\u30a1\u30a4\u30eb \u5e73\u5747"}, {"PERF_NO_DATA_SUMMARIZED", "\u904e\u53bb 7 \u65e5\u9593\u306b\u96c6\u8a08\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u3042\u308a\u307e\u305b\u3093"}, {"PERF_REPORTING_INFO", "\u30ec\u30dd\u30fc\u30c8\u306e\u8a73\u7d30"}, {"PERF_TOP_UNITS", "\u96c6\u8a08\u306e\u4f7f\u7528\u72b6\u6cc1\u306e\u30c8\u30c3\u30d7\u88c5\u7f6e"}, {"PERF_UNIT_NAME", "\u88c5\u7f6e"}, {"PERF_REPORTING_DB_SIZE", "\u30ec\u30dd\u30fc\u30c8 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b5\u30a4\u30ba"}, {"PERF_BACKUPS_DIR_SIZE", "\u30d0\u30c3\u30af\u30a2\u30c3\u30d7 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30a4\u30ba"}, {"PERF_SYSLOG_DIR_SIZE", "Raw \u30c7\u30fc\u30bf \u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30a4\u30ba"}, {"PERF_CACHE_SIZE", "\u63a8\u5b9a\u30ad\u30e3\u30c3\u30b7\u30e5 \u30b5\u30a4\u30ba"}, {"PERF_BAD_DIR_SIZE", "\u4e0d\u826f\u30c7\u30fc\u30bf \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30b5\u30a4\u30ba"}, {"PERF_PER_SUMMARIZER_INFO", "\u96c6\u8a08\u306e\u8a73\u7d30 "}, {"PERF_AVG_UTILIZATION", "\u96c6\u8a08\u306e\u5e73\u5747\u5229\u7528\u72b6\u6cc1"}, {"PERF_PEAK_UTILIZATION", "\u96c6\u8a08\u306e\u30d4\u30fc\u30af\u5229\u7528\u72b6\u6cc1"}, {"NMM_DETAILS", "\u30ec\u30dd\u30fc\u30c8\u3068\u7ba1\u7406\u306b\u5b58\u5728\u3057\u306a\u3044\u88c5\u7f6e\u306b\u5bfe\u3057\u3066\u96c6\u8a08\u3055\u308c\u305f Syslog"}, {"NMM_SERIALS", "Summarizer \u7528\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"NO_NMM_SERIAL", "\u30ec\u30dd\u30fc\u30c8\u3068\u7ba1\u7406\u306b\u5b58\u5728\u3057\u306a\u3044\u88c5\u7f6e\u3067 Syslog \u3092\u9001\u4fe1\u3057\u3066\u3044\u308b\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093  "}, {"MISCONFIGURED_SERIALS", "\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7  "}, {"NO_MISCONFIGURED_SERIALS", "\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093  "}, {"NMM_MSG_NOTE", "\u88dc\u8db3: "}, {"NMM_MSG1", "* \u88c5\u7f6e\u306b\u30ed\u30b0\u30a4\u30f3\u3057 Syslog \u3092\u7121\u52b9\u306b\u3057\u307e\u3059"}, {"NMM_MSG2", "* \u88c5\u7f6e\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306b\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092\u906e\u65ad\u3059\u308b\u30eb\u30fc\u30eb\u3092\u9069\u7528\u3057\u307e\u3059"}, {"NMM_MSG3", "* \u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092\u4fee\u6b63\u3059\u308b\u306b\u306f\u3001\u88c5\u7f6e\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3001GMS \u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u307e\u3059"}, {"NMM_MSG4", "* \u3053\u3053\u306b\u4e00\u89a7\u3055\u308c\u3066\u3044\u308b\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f 12 \u6642\u9593\u6bce\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059"}, {"PERF_SUMMARIZER_STATUS", "\u72b6\u6cc1"}, {"PERF_DEPLOYMENT_STATUS", "\u914d\u5099\u72b6\u6cc1"}, {"PERF_MSG_HIGH_CAPACITY", "Summarizer \u304c\u9ad8\u8ca0\u8377\u3067\u52d5\u4f5c\u3057\u3066\u3044\u307e\u3059\u3002\u88c5\u7f6e\u3092\u518d\u5272\u308a\u5f53\u3066\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "\u904e\u53bb 7 \u65e5\u9593\u3067\u914d\u5099\u5185\u306e 1 \u3064\u4ee5\u4e0a\u306e Summarizer \u304c\u7a3c\u50cd\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u8d85\u3048\u307e\u3057\u305f\u3002\u300cSummarizer \u4f7f\u7528\u72b6\u6cc1\u300d\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u72b6\u6cc1\u5217\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u914d\u5099\u306e\u7ba1\u7406\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001GMS \u30b5\u30a4\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_REASSIGN_UNITS", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u9593\u3067\u88c5\u7f6e\u3092\u518d\u5272\u308a\u5f53\u3066\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_DISK_LOW", "\u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30a3\u30b9\u30af\u3092\u8ffd\u52a0\u3059\u308b\u304b\u30c7\u30a3\u30b9\u30af\u306e\u5272\u308a\u5f53\u3066\u3092\u5897\u3084\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_DISK_LOW_RDB", "\u30ec\u30dd\u30fc\u30c8 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7528\u306e\u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30a3\u30b9\u30af\u3092\u8ffd\u52a0\u3059\u308b\u304b\u30c7\u30a3\u30b9\u30af\u306e\u5272\u308a\u5f53\u3066\u3092\u5897\u3084\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_CAPACITY_PLANNING", "\u914d\u5099\u306e\u7ba1\u7406\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306f\u3001<a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS \u30a6\u30a7\u30d6 \u30b5\u30a4\u30c8</a>\u3092\u8a2a\u554f\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "\u88dc\u8db3: \u8ca0\u8377\u5e73\u5747\u3068\u63a8\u5b9a\u5bb9\u91cf\u306f\u305d\u306e\u914d\u5099\u306b\u56fa\u6709\u3067\u3042\u308a\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u3067\u306f\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"}, {"PERF_OF", "/"}, {"PERF_ON_DISK", "(\u30c7\u30a3\u30b9\u30af\u4e0a)"}, {"PERF_OPT_EXPORT_PROGRESS", "\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u4e2d"}, {"PERF_OPT_EXPORT_DONE", "\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u5b8c\u4e86"}, {"PERF_OPT_DELETE_PROGRESS", "\u524a\u9664\u4e2d"}, {"PERF_OPT_DELETE_DONE", "\u524a\u9664\u5b8c\u4e86"}, {"PERF_OPT_IMPORT_PROGRESS", "\u30a4\u30f3\u30dd\u30fc\u30c8\u4e2d"}, {"PERF_OPT_QUEUED_UP", "\u5f85\u3061\u884c\u5217\u306b\u8ffd\u52a0\u6e08"}, {"PERF_OPT_IDLE", "\u30a2\u30a4\u30c9\u30eb"}, {"PERF_OPT_CURRENT", "\u73fe\u5728"}, {"PERF_OPT_INFO", "\u6700\u9069\u5316\u60c5\u5831"}, {"PERF_XML_FILE_INFO", "XML \u30d5\u30a1\u30a4\u30eb\u60c5\u5831"}, {"PERF_XML_LABEL", "\u672a\u51e6\u7406\u306e XML \u30d5\u30a1\u30a4\u30eb"}, {"PERF_XPG_LABEL", "\u51e6\u7406\u4e2d\u306e\u30d5\u30a1\u30a4\u30eb"}, {"PERF_XPD_LABEL", "\u30a2\u30fc\u30ab\u30a4\u30d6\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_XPE_LABEL", "\u7121\u52b9\u306a\u30d5\u30a1\u30a4\u30eb"}, {"ALERT_NO_ALERTS", "\u73fe\u5728\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u6709\u52b9\u306a\u30a2\u30e9\u30fc\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"ALERT_DESCRIPTION", "\u6982\u8981"}, {"ALERT_NODE_NAME", "\u88c5\u7f6e\u540d"}, {"ALERT_SEVERITY", "\u91cd\u5927\u5ea6"}, {"ALERT_LISTING", "\u30a2\u30e9\u30fc\u30c8 \u30ea\u30b9\u30c8"}, {"CAL_SUN", "\u65e5"}, {"CAL_MON", "\u6708"}, {"CAL_TUE", "\u706b"}, {"CAL_WED", "\u6c34"}, {"CAL_THU", "\u6728"}, {"CAL_FRI", "\u91d1"}, {"CAL_SAT", "\u571f"}, {"CAL_JAN", "1 \u6708"}, {"CAL_FEB", "2 \u6708"}, {"CAL_MAR", "3 \u6708"}, {"CAL_APR", "4 \u6708"}, {"CAL_MAY", "5 \u6708"}, {"CAL_JUN", "6 \u6708"}, {"CAL_JUL", "7 \u6708"}, {"CAL_AUG", "8 \u6708"}, {"CAL_SEP", "9 \u6708"}, {"CAL_OCT", "10 \u6708"}, {"CAL_NOV", "11 \u6708"}, {"CAL_DEC", "12 \u6708"}, {Integer.toString(1), "\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u306b\u6210\u529f\u3057\u307e\u3057\u305f: "}, {Integer.toString(0), "\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(42), "\u8b66\u544a\u4ed8\u304d\u3067\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u306b\u6210\u529f\u3057\u307e\u3057\u305f: "}, {Integer.toString(10), "\u30b3\u30de\u30f3\u30c9\u306f\u6b63\u5e38\u306b\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-12), "\u30b3\u30de\u30f3\u30c9\u3092\u4e00\u90e8\u3001\u307e\u305f\u306f\u307e\u3063\u305f\u304f\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-57), "\u3053\u306e\u64cd\u4f5c\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30b6\u6a29\u9650\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-58), "\u30b3\u30de\u30f3\u30c9\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u60c5\u5831\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-59), "\u3053\u306e\u64cd\u4f5c\u3092\u968f\u6642\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-56), "LocalDomain \u306e\u7ba1\u7406\u8005\u30b0\u30eb\u30fc\u30d7\u306e\u30e6\u30fc\u30b6\u306e\u307f\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u6a29\u9650\u3092\u6301\u3061\u307e\u3059\u3002"}, {Integer.toString(2), "\u65b0\u3057\u3044\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u78ba\u8a8d\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u304c\u3001\u5229\u7528\u53ef\u80fd\u306a\u65b0\u3057\u3044\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(3), "\u524d\u56de\u306e\u30bf\u30b9\u30af\u306b\u5bfe\u3059\u308b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u64cd\u4f5c\u306e\u5b9f\u884c\u306b\u6210\u529f\u3057\u307e\u3057\u305f: "}, {Integer.toString(4), "\u30bf\u30b9\u30af\u306b\u5bfe\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u66f4\u65b0\u64cd\u4f5c\u306b\u6210\u529f\u3057\u307e\u3057\u305f: "}, {Integer.toString(5), "\u88c5\u7f6e\u306f\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3068\u767b\u9332\u304c\u5229\u7528\u53ef\u80fd\u3067\u3059"}, {Integer.toString(6), "\u7121\u6599\u30c8\u30e9\u30a4\u30a2\u30eb\u306f\u305d\u306e\u88c5\u7f6e\u306b\u9069\u7528\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(7), "\u88c5\u7f6e\u306f\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u3067\u3059\u304c\u3001\u767b\u9332\u306f\u53ef\u80fd\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(8), "\u88c5\u7f6e\u306f\u767b\u9332\u53ef\u80fd\u3067\u3059\u304c\u3001\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306f\u5229\u7528\u53ef\u80fd\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-1), "\u88c5\u7f6e\u306e\u3044\u304f\u3064\u304b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u307e\u305b\u3093\u3002"}, {Integer.toString(-53), "\u88c5\u7f6e\u306f\u7ba1\u7406\u8005\u306e\u540c\u6642\u30ed\u30b0\u30a4\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-63), "\u88c5\u7f6e\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u8a8d\u8a3c\u60c5\u5831\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-69), "\u73fe\u5728\u306e\u30ed\u30b0\u30a4\u30f3 IP \u30a2\u30c9\u30ec\u30b9\u304c\u53d6\u5f97\u3055\u308c\u308b\u307e\u3067\u5f85\u6a5f\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-70), "JVM OOM: \u7d99\u7d9a\u3059\u308b\u305f\u3081\u306e\u30e1\u30e2\u30ea\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\u6b21\u56de\u306e\u5b9f\u884c\u6642\u306b\u30bf\u30b9\u30af\u3092\u518d\u8a66\u884c\u3057\u307e\u3059\u3002"}, {Integer.toString(-64), "\u7ba1\u7406\u5bfe\u8c61\u88c5\u7f6e\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u8a8d\u8a3c\u30da\u30fc\u30b8\u306e\u53d6\u5f97\u304c\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-64) + "_TT", "- \u3053\u306e\u88c5\u7f6e\u306e\u7ba1\u7406\u30a2\u30c9\u30ec\u30b9\u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3002\n- \u3053\u306e\u88c5\u7f6e\u306f\u540c\u6642\u30ed\u30b0\u30a4\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n  \u5225\u306e\u30d6\u30e9\u30a6\u30b6\u304c\u88c5\u7f6e\u306b\u76f4\u63a5\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-65), "\u30ed\u30b0\u30a4\u30f3 \u30dd\u30b9\u30c8\u306e\u5fdc\u7b54\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-83), "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u4e00\u81f4\u3057\u306a\u3044\u305f\u3081\u3001\u30ed\u30b0\u30a4\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-83) + "_TT", "- GMS \u306b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u6307\u5b9a\u3057\u305f\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\n\u305d\u306e\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-84), "\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u305b\u3093\u3002\u6307\u5b9a\u3055\u308c\u305f\u30ed\u30b0\u30a4\u30f3 \u30e2\u30fc\u30c9\u306f\u7121\u52b9\u3067\u3059\u3002"}, {Integer.toString(-84) + "_TT", "- \u6307\u5b9a\u3055\u308c\u305f\u30ed\u30b0\u30a4\u30f3 \u30e2\u30fc\u30c9\u306f\u3001\n\u8a31\u53ef\u3055\u308c\u305f\u30e2\u30fc\u30c9\u306e\u4e00\u89a7\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-2), "\u88c5\u7f6e\u306e\u30e6\u30fc\u30b6\u540d\u307e\u305f\u306f\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-918), "[JP]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "MD5 \u7f72\u540d\u4ed8\u304d\u306e SSL \u8a3c\u660e\u66f8\u3092\u4f7f\u7528\u3059\u308b\u88c5\u7f6e\u306f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u7406\u7531\u3067\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u304b\u3089\u5916\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u88c5\u7f6e\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u8a3c\u660e\u66f8\u3092\u518d\u751f\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-917), "\u30e6\u30cb\u30c3\u30c8\u306b\u3001\u3053\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-71), "\u88c5\u7f6e\u3078\u306e\u7121\u52b9\u306a\u30a2\u30af\u30bb\u30b9 URL \u3067\u3059\u3002"}, {Integer.toString(-71) + "_TT", "- IP \u30a2\u30c9\u30ec\u30b9\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3055\u308c\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-72), "\u72b6\u6cc1 xml \u306e\u8981\u6c42\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "\u72b6\u6cc1 xml \u306e\u8981\u6c42\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u5fdc\u7b54\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8981\u6c42\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-950), "[JP]Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8981\u6c42\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u5fdc\u7b54\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "\u7121\u52b9\u306a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002"}, {Integer.toString(-76) + "_TT", "- \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n- \u53d6\u5f97\u3057\u305f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u7834\u640d\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n- \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u4e0d\u5b8c\u5168\u3067\u3042\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-77), "\u88c5\u7f6e\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "\u53d7\u4fe1\u3057\u305f\u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u3002"}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "\u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-78) + "_TT", "- \u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u88c5\u7f6e\u304b\u3089\u9001\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n- \u88c5\u7f6e\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f\u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c GMS \u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3002\n- SA (\u30c8\u30f3\u30cd\u30eb) \u304c GMS \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u4e0a\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n- Syslog \u3092\u8a31\u53ef\u3059\u308b\u30eb\u30fc\u30eb\u304c GMS \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u4e0a\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n- \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u88c5\u7f6e\u306e\u5834\u5408\u306f\u3001\u300cConsole - Web Services - Distributed Deployments\u300d\u306e\u300c\u88dc\u8db3:\u300d\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u8aac\u660e\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-79), "\u53d7\u4fe1\u3057\u305f\u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5fa9\u53f7\u5316\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-79) + "_TT", "- GMS \u306b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u756a\u53f7\u304c\n\u305d\u306e\u88c5\u7f6e\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u756a\u53f7\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(13), "\u53d7\u4fe1\u3057\u305f syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u3002"}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-81) + "_TT", "- Syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u88c5\u7f6e\u304b\u3089\u9001\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002D138- \u88c5\u7f6e\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f Syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u304c GMS \u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3002\n- SA (\u30c8\u30f3\u30cd\u30eb) \u304c GMS \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u4e0a\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n- Syslog \u3092\u8a31\u53ef\u3059\u308b\u30eb\u30fc\u30eb\u304c GMS \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u4e0a\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-82), "\u53d7\u4fe1\u3057\u305f syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5fa9\u53f7\u5316\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-82) + "_TT", "- GMS \u306b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u756a\u53f7\u304c\n\u305d\u306e\u88c5\u7f6e\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u756a\u53f7\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(12), "\u88c5\u7f6e\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u53d6\u5f97\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002"}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "\u88c5\u7f6e\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002\u53d6\u5f97\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002"}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "\u88c5\u7f6e\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\u88c5\u7f6e\u307e\u305f\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u30c0\u30a6\u30f3\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-4), "\u88c5\u7f6e\u8a2d\u5b9a\u306b\u5bfe\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u4ee5\u4e0a\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-5), "SonicWall \u767b\u9332\u30a6\u30a7\u30d6 \u30b5\u30a4\u30c8\u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-6), "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9/\u8cfc\u8aad\u306e\u305f\u3081\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-7), "\u88c5\u7f6e\u306f\u767b\u9332\u3055\u308c\u307e\u305b\u3093\u3002"}, {Integer.toString(-8), "SonicWall GMS \u767b\u9332\u30b5\u30a4\u30c8\u304c\u4f11\u6b62\u3057\u3066\u3044\u308b\u304b\u307e\u305f\u306f\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002SonicWall GMS \u30b5\u30fc\u30d0\u304c\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-9), "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u304c\u5229\u7528\u53ef\u80fd\u306a\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-10), "\u65e2\u306b SonicWall GMS \u7ba1\u7406\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-11), "\u4e0d\u6b63\u306a\u88c5\u7f6e\u3092\u8a2d\u5b9a\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-15), "\u5b58\u5728\u3057\u306a\u3044\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3059\u308b\u30eb\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-16), "SonicWall \u30e9\u30a4\u30bb\u30f3\u30b9\u9055\u53cd\u3067\u3059\u3002"}, {Integer.toString(-17), "SonicWall GMS \u5185\u90e8\u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-18), "\u30b3\u30f3\u30c6\u30f3\u30c4 \u30d5\u30a3\u30eb\u30bf \u30ea\u30b9\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-19), "\u30eb\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-47), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-20), "\u5185\u90e8\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30a8\u30e9\u30fc"}, {Integer.toString(-21), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5f85\u6a5f\u4e2d\u3067\u3059"}, {Integer.toString(-22), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u7121\u52b9\u3067\u3059\u3002"}, {Integer.toString(-23), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u65e2\u306b\u4f7f\u7528\u4e2d\u3067\u3059\u3002"}, {Integer.toString(-24), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-25), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u66f4\u65b0\u30ab\u30a6\u30f3\u30c8 \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-26), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u66f4\u65b0\u304c\u65e9\u3059\u304e\u307e\u3059\u3002"}, {Integer.toString(-27), "\u63a8\u85a6\u3055\u308c\u308b\u88c5\u7f6e\u3088\u308a\u3082\u53e4\u3044\u88c5\u7f6e\u3092\u7ba1\u7406\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-28), "\u81ea\u52d5\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c\u73fe\u5728\u4f11\u6b62\u3057\u3066\u3044\u308b\u304b\u307e\u305f\u306f\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-85), "\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0 \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u52d5\u4f5c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-29), "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u88c5\u7f6e\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-62), "\u4e0d\u6b63\u306a\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u88c5\u7f6e\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-60), "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306b\u5bfe\u3059\u308b\u6700\u5927\u30d5\u30a1\u30a4\u30eb \u30b5\u30a4\u30ba\u306f 4 MB \u3067\u3059\u3002"}, {Integer.toString(-31), "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u30ed\u30fc\u30ab\u30eb \u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u8fbc\u3080\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-30), "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u81ea\u52d5\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c\u73fe\u5728\u5229\u7528\u3067\u304d\u306a\u3044\u304b\u307e\u305f\u306f\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-32), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30a2\u30af\u30bb\u30b9 \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-33), "\u88c5\u7f6e\u3092\u8a2d\u5b9a\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-34), "\u30e6\u30fc\u30b6\u3092\u8a8d\u8a3c\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-68), "\u30c9\u30e1\u30a4\u30f3\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u304b\u307e\u305f\u306f\u4e0d\u6b63\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u3067\u3059\u3002"}, {Integer.toString(-35), "CMP \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-36), "\u767b\u9332\u53ef\u80fd\u306a\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-37), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3067\u304d\u306a\u3044\u304b\u3001\u307e\u305f\u306f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30b5\u30fc\u30d0\u3088\u308a\u4e0d\u660e\u306a\u30a8\u30e9\u30fc\u304c\u5831\u544a\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-38), "\u767b\u9332\u307e\u305f\u306f\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u306a\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-39), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-40), "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-41), "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u969b\u306b\u4e0d\u660e\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-48), "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {Integer.toString(-49), "CLI \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30a2\u30af\u30bb\u30b9\u304c\u62d2\u5426\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-42), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u66f4\u65b0\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-43), "1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u96fb\u5b50\u30e1\u30fc\u30eb\u304c\u9001\u4fe1\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-44), "\u6280\u8853\u30b5\u30dd\u30fc\u30c8 \u30ec\u30dd\u30fc\u30c8\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-45), "SPD \u30d5\u30a1\u30a4\u30eb\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-46), "\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-50), "\u30c8\u30f3\u30cd\u30eb\u72b6\u6cc1\u76e3\u8996\u60c5\u5831\u304c\u540c\u671f\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-51), "RCF \u30d5\u30a1\u30a4\u30eb\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-52), "\u30e6\u30fc\u30b6 \u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u7121\u52b9\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30ed\u30b0\u30a4\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-61), "\u524d\u56de\u5b9f\u884c\u3057\u305f\u30bf\u30b9\u30af\u306f\u518d\u8d77\u52d5\u304c\u5fc5\u8981\u3067\u3059\u3002\u6b21\u306e\u9593\u9694\u3067\u30bf\u30b9\u30af\u3092\u8a66\u884c\u3057\u307e\u3059\u3002"}, {Integer.toString(-229), "\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001\u6709\u52b9\u306a\u300c\u96fb\u5b50\u30e1\u30fc\u30eb\u9632\u5fa1\u300d\u306e\u8cfc\u8aad\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {Integer.toString(-230), "\u3053\u306e SonicOS \u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 (\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u8cfc\u8aad) \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3059\u308b\u304b\u3001\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9 \u30ad\u30fc\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-231), "\u76f8\u9055\u3059\u308b WANOPT \u30e2\u30c7\u30eb\u306e\u6709\u52b9\u5316\u30ad\u30fc\u3092\u6df7\u5408\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-232), "\u3053\u306e WANOPT \u30e2\u30c7\u30eb\u306f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 (\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u8cfc\u8aad) \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-201), "API \u30d1\u30e9\u30e1\u30fc\u30bf \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-202), "\u30e6\u30fc\u30b6\u306f\u65e2\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-203), "SonicWall GMS API \u306f\u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-204), "\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-205), "SonicWall GMS Shell \u3092\u7d42\u4e86\u3057\u307e\u3059"}, {Integer.toString(-206), "API \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059"}, {Integer.toString(-207), "\u3053\u306e\u7a2e\u5225\u306b\u5bfe\u3059\u308b\u5217\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-208), "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-209), "\u6709\u52b9\u5316\u7a2e\u5225\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-210), "IP \u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-211), "\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u304c\u77ed\u304b\u3059\u304e\u307e\u3059\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-212), "\u6587\u5b57\u5217\u306f 16 \u9032\u6570\u6587\u5b57\u306e\u307f\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-213), "\u30b9\u30bf\u30f3\u30d0\u30a4 \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e IP \u30a2\u30c9\u30ec\u30b9\u306f\u30d7\u30e9\u30a4\u30de\u30ea \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3068\u540c\u3058\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-214), "\u6307\u5b9a\u3055\u308c\u305f IP \u30a2\u30c9\u30ec\u30b9\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-215), "\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-226), "\u6709\u52b9\u306a\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-225), "\u5165\u529b\u3055\u308c\u305f XML \u3092\u89e3\u6790\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-228), "\u7121\u52b9\u306a\u5185\u5bb9\u304c\u5165\u529b\u3055\u308c\u305f XML \u306b\u898b\u3064\u304b\u308a\u307e\u3057\u305f"}, {Integer.toString(-216), "\u4e0d\u6b63\u307e\u305f\u306f\u4e0d\u660e\u306a\u30ec\u30dd\u30fc\u30c8\u7a2e\u5225\u3067\u3059\u3002\u30ec\u30dd\u30fc\u30c8\u304c\u65e5\u6b21\u3001\u9031\u6b21\u3001\u6708\u6b21\u306e\u3044\u305a\u308c\u304b\u3092\u78ba\u5b9a\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-217), "\u4e0d\u6b63\u306a\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9\u9001\u4fe1\u5148\u3067\u3059\u3002\u6709\u52b9\u306a\u9001\u4fe1\u5148\u30a2\u30c9\u30ec\u30b9\u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {Integer.toString(-218), "\u4e0d\u6b63\u306a\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9\u9001\u4fe1\u5143\u3067\u3059"}, {Integer.toString(-219), "\u4e0d\u6b63\u306a SMTP \u30b5\u30fc\u30d0 \u30a2\u30c9\u30ec\u30b9\u3067\u3059"}, {Integer.toString(-220), "\u4e0d\u6b63\u306a\u30ec\u30dd\u30fc\u30c8 \u30ea\u30b9\u30c8\u3067\u3059\u3002\u6709\u52b9\u306a\u30ec\u30dd\u30fc\u30c8 ID \u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044"}, {Integer.toString(-221), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b Analyzer \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e IP \u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-222), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b Analyzer \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-223), "\u4e0d\u6b63\u306a\u307e\u305f\u306f\u4e0d\u660e\u306a\u30ec\u30dd\u30fc\u30c8\u306e\u65e5\u4ed8\u3067\u3059\u3002\u30ec\u30dd\u30fc\u30c8\u306e\u65e5\u4ed8\u306f mm/dd/yyyy \u5f62\u5f0f\u3067\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {Integer.toString(-224), "\u5165\u529b\u3055\u308c\u305f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb ID \u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-502), "zip \u30d5\u30a1\u30a4\u30eb \u30d1\u30b9\u30ef\u30fc\u30c9\u4fdd\u8b77\u306e\u305f\u3081\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059"}, {Integer.toString(-503), "\u4e0d\u6b63\u306a\u30ce\u30fc\u30c9\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\u30b7\u30ea\u30a2\u30eb\u756a\u53f7 (unitNode \u306e\u5834\u5408) \u307e\u305f\u306f\u8868\u793a\u540d (groupNode \u306e\u5834\u5408) \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-10001), "\u901a\u4fe1\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f"}, {Integer.toString(-10002), "\u5165\u529b\u3055\u308c\u305f XML \u3092\u89e3\u6790\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10005), "\u4e0d\u660e\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3057\u305f"}, {Integer.toString(-10006), "\u4e0d\u660e\u306a\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3057\u305f"}, {Integer.toString(-10011), "\u671f\u9650\u5207\u308c\u306e\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u3092\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10012), "\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u88c5\u7f6e\u306b\u5bfe\u3057\u3066\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u3092\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10013), "\u73fe\u5728\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u6570\u3088\u308a\u3082\u5c11\u306a\u3044\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u3092\u66f4\u65b0\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10014), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u3092\u66f4\u65b0\u6642\u671f\u3088\u308a\u3082\u65e9\u304f\u66f4\u65b0\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10020), "\u524d\u56de\u306e\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30d1\u30b9\u30ef\u30fc\u30c9\u5909\u66f4\u30bf\u30b9\u30af\u304c\u5f85\u6a5f\u4e2d\u3067\u3059\u3002"}, {Integer.toString(-10100), "McAfee \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u306e\u901a\u4fe1\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f"}, {Integer.toString(-10101), "McAfee \u306f\u3053\u306e\u30b5\u30a4\u30c8\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-10102), "McAfee \u306f\u3053\u306e\u30b5\u30a4\u30c8\u306e\u53e4\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-10103), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30b5\u30a4\u30c8\u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-10200), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b5\u30fc\u30d0\u3068\u306e\u901a\u4fe1\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f"}, {Integer.toString(-10201), "\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-10202), "\u5165\u529b\u3055\u308c\u305f\u30e9\u30a4\u30bb\u30f3\u30b9 \u30ad\u30fc\u306f\u65e2\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059"}, {Integer.toString(-10203), "\u3053\u306e\u88c5\u7f6e\u306b\u306f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-10204), "\u5165\u529b\u3055\u308c\u305f\u8907\u6570\u306e\u30ad\u30fc\u306f\u540c\u4e00\u671f\u9593\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093"}, {Integer.toString(-10205), "\u7121\u6599\u30c8\u30e9\u30a4\u30a2\u30eb \u30ad\u30fc\u306e\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-10206), "1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4e0d\u6b63\u306a\u5024\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-10210), "\u5165\u529b\u3055\u308c\u305f\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10211), "\u5165\u529b\u3055\u308c\u305f\u30e9\u30a4\u30bb\u30f3\u30b9 \u30ad\u30fc\u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059"}, {Integer.toString(-10212), "\u5165\u529b\u3055\u308c\u305f\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u4e0d\u6b63\u306a\u6587\u5b57\u3092\u542b\u3093\u3067\u3044\u308b\u3001\u3042\u308b\u3044\u306f\u30016 \uff5e 12 \u6587\u5b57\u306e\u7bc4\u56f2\u5185\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10213), "\u5165\u529b\u3055\u308c\u305f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10214), "\u5165\u529b\u3055\u308c\u305f OEM \u30b3\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10215), "\u5165\u529b\u3055\u308c\u305f WAN IP \u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10220), "\u3053\u306e\u88c5\u7f6e\u306b\u5bfe\u3059\u308b\u524d\u56de\u306e\u8981\u6c42\u304c\u307e\u3060\u5f85\u6a5f\u4e2d\u3067\u3059"}, {Integer.toString(-10250), "\u88c5\u7f6e\u306b\u306f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u304c\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u518d\u6709\u52b9\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-10251), "\u4e0d\u6b63\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u305f\u3081\u3001\u88c5\u7f6e\u306e\u518d\u6709\u52b9\u5316\u306f\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-10260), "\u5165\u529b\u3055\u308c\u305f\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-10261), "\u5165\u529b\u3055\u308c\u305f\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10262), "\u88c5\u7f6e\u306f\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10263), "\u88c5\u7f6e\u306f\u65e2\u306b\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u8cfc\u8aad\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-10264), "\u88c5\u7f6e\u306f\u3053\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10265), "\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u6240\u6709\u8005\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-10266), "\u88c5\u7f6e\u306f\u65e2\u306b\u4ed6\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u3059"}, {Integer.toString(-10267), "\u5165\u529b\u3055\u308c\u305f\u65b0\u3057\u3044\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u30e6\u30fc\u30b6\u6570\u304c\u5229\u7528\u53ef\u80fd\u306a\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u6570\u3092\u8d85\u3048\u3066\u3044\u307e\u3059"}, {Integer.toString(-10004), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u64cd\u4f5c\u306b\u5bfe\u3057\u3066\u30011 \u307e\u305f\u306f\u8907\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059"}, {Integer.toString(-10300), "\u5165\u529b\u3055\u308c\u305f\u300c\u5b8c\u5168\u30bb\u30ad\u30e5\u30a2 \u30d1\u30fc\u30c8\u30ca\u30fc\u300c\u306b\u95a2\u3059\u308b\u60c5\u5831\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093"}, {Integer.toString(-10301), "\u5165\u529b\u3055\u308c\u305f\u300c\u5b8c\u5168\u30bb\u30ad\u30e5\u30a2 \u30d1\u30fc\u30c8\u30ca\u30fc\u300c\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10303), "\u5165\u529b\u3055\u308c\u305f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u30e6\u30fc\u30b6\u6570\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10304), "\u300c\u5b8c\u5168\u30bb\u30ad\u30e5\u30a2 \u30d1\u30fc\u30c8\u30ca\u30fc\u300d\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u306a\u3044\u88c5\u7f6e\u3092\u7ba1\u7406\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f"}, {Integer.toString(-20000), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b5\u30fc\u30d0\u3068\u306e\u901a\u4fe1\u4e2d\u306b\u4e0d\u660e\u306a\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20101), "\u5165\u529b\u3055\u308c\u305f\u9023\u7d61\u5148\u306f\u65e2\u306b\u30e6\u30fc\u30b6\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20102), "\u5165\u529b\u3055\u308c\u305f\u9023\u7d61\u5148\u3092\u30e6\u30fc\u30b6\u306b\u5bfe\u3057\u3066\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20106), "\u30e6\u30fc\u30b6\u60c5\u5831\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u305f\u3081\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-20111), "\u9023\u7d61\u5148\u60c5\u5831\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20112), "\u9023\u7d61\u5148\u60c5\u5831\u304c\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20113), "\u9023\u7d61\u5148\u60c5\u5831\u304c\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20116), "\u65e2\u306b\u88c5\u7f6e\u306f\u5225\u306e MySonicWall.com \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20117), "\u6307\u5b9a\u3057\u305f\u88c5\u7f6e\u304c\u88c5\u7f6e\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u4e0a\u306b\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20118), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u88c5\u7f6e\u3092\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20119), "\u6307\u5b9a\u3057\u305f\u88c5\u7f6e\u306e\u72b6\u6cc1\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20121), "\u6307\u5b9a\u3057\u305f\u88c5\u7f6e\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20122), "\u6307\u5b9a\u3057\u305f\u6709\u52b9\u5316\u30ad\u30fc\u306f\u65e2\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20123), "\u4e0d\u6b63\u306a\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u4f7f\u7528\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20124), "\u4e0d\u6b63\u306a\u6709\u52b9\u5316\u30b3\u30fc\u30c9/\u88c5\u7f6e\u306e\u7d44\u307f\u5408\u308f\u305b\u304c\u4f7f\u7528\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20125), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u3067\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20126), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u3067\u6709\u52b9\u5316\u304c\u5b8c\u4e86\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20131), "SonicWall GMS \u30b7\u30b9\u30c6\u30e0\u306e\u8aa4\u3063\u305f MAC \u30a2\u30c9\u30ec\u30b9\u306e\u767b\u9332\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-20132), "SonicWall GMS \u30b7\u30b9\u30c6\u30e0\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20133), "\u5165\u529b\u3055\u308c\u305f SonicWall GMS \u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-20134), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u3067 SonicWall GMS \u72b6\u6cc1\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20135), "SonicWall GMS \u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20136), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306f SonicWall GMS \u30b7\u30b9\u30c6\u30e0\u3092\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20142), "\u4e0d\u6b63\u306a MAC \u30a2\u30c9\u30ec\u30b9\u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20143), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u3067 SonicWall GMS \u306e\u5229\u7528\u53ef\u80fd\u306a\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20144), "\u57fa\u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u671f\u9593\u304c\u6307\u5b9a\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20145), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u5185\u3067\u57fa\u672c\u30d1\u30c3\u30b1\u30fc\u30b8 \u30b7\u30b9\u30c6\u30e0\u60c5\u5831\u306e\u8aad\u307f\u8fbc\u307f\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20146), "\u3053\u306e\u88fd\u54c1\u306b\u5bfe\u3059\u308b\u30ce\u30fc\u30c9 \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-20147), "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b SonicWall GMS \u306f\u65e2\u306b\u88fd\u54c1\u7248\u3067\u3059\u3002"}, {Integer.toString(-20148), "\u7b50\u4f53\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20149), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u5185\u3067 SonicWall GMS \u30b7\u30b9\u30c6\u30e0\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20150), "\u5165\u529b\u3055\u308c\u305f SonicWall GMS \u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f\u30e6\u30fc\u30b6\u306b\u5bfe\u3057\u3066\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20151), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u5185\u3067\u30ec\u30dd\u30fc\u30c8\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20152), "\u4e0d\u6b63\u306a SonicWall GMS \u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3068\u30e6\u30fc\u30b6\u540d\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3059\u3002"}, {Integer.toString(-20153), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u5185\u3067 ViewPoint \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b SonicWall GMS \u306e\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20154), "\u7b50\u4f53\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3001\u3042\u308b\u3044\u306f\u4e0d\u6b63\u306a\u30e6\u30fc\u30b6\u540d\u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20155), "\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3059\u308b\u57fa\u672c\u9023\u7d61\u5148\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3001\u307e\u305f\u306f\u6709\u52b9\u671f\u9650\u5207\u308c\u3067\u3059\u3002"}, {Integer.toString(-20201), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9 \u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b XML \u5165\u529b\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-20202), "\u5185\u90e8\u30a8\u30e9\u30fc: \u5165\u529b\u306b\u30e6\u30fc\u30b6\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20203), "SonicWall GMS \u767b\u9332\u30b7\u30b9\u30c6\u30e0 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-20204), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u4e0d\u6b63\u306a\u65b9\u5f0f\u304c\u8981\u6c42\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20205), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u4e0d\u6b63\u306a XML \u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8981\u6c42\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20401), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20402), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u30ec\u30b8\u30b9\u30c8\u30ea \u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20403), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20404), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc \u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20140), "\u6307\u5b9a\u3055\u308c\u305f\u7b50\u4f53\u306b\u5bfe\u3059\u308b PKI \u60c5\u5831\u304c\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20141), "\u6307\u5b9a\u3055\u308c\u305f\u7b50\u4f53\u306b\u5bfe\u3059\u308b PKI \u30b5\u30fc\u30d3\u30b9\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-227), "\u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306b\u5bfe\u3059\u308b\u30e1\u30e2\u30ea\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3088\u308a\u3082\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {Integer.toString(-66), "\u7b50\u4f53\u306b\u5bfe\u3057\u3066\u4e0d\u6b63\u306a\u30b7\u30b0\u30cd\u30c1\u30e3 \u30d5\u30a1\u30a4\u30eb\u304c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-67), "\u30b7\u30b0\u30cd\u30c1\u30e3 \u30d5\u30a1\u30a4\u30eb\u3092\u88c5\u7f6e\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3053\u306e\u88c5\u7f6e\u306e\u30e2\u30c7\u30eb/\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30b7\u30b0\u30cd\u30c1\u30e3 \u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u64cd\u4f5c\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-500), "lm2.sonicwall.com \u304b\u3089\u306e\u53d7\u4fe1\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-501), "lm2.sonicwall.com \u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-907), "\u88c5\u7f6e\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-901), "\u30ec\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 ID \u304c\u7121\u52b9\u3067\u3042\u308b\u304b\u3001\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-902), "\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3 \u30a8\u30f3\u30af\u30ed\u30fc\u30ba \u30ec\u30b3\u30fc\u30c9\u3092\u9069\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-903), "\u30ec\u30b3\u30fc\u30c9\u3092\u9069\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-904), "\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 ID \u304c\u7121\u52b9\u3067\u3042\u308b\u304b\u3001\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-905), "\u30ec\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-906), "\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u9069\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-908), "\u30d7\u30fc\u30eb\u304b\u3089\u306e\u63a5\u7d9a\u306e\u5f85\u6a5f\u4e2d\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-909), "\u30ea\u30e2\u30fc\u30c8 \u30db\u30b9\u30c8\u3078\u306e\u63a5\u7d9a\u306e\u5f85\u6a5f\u4e2d\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-910), "\u3053\u306e\u88c5\u7f6e\u7a2e\u5225\u306e\u69cb\u6210\u8a2d\u5b9a\u306f\u8aa4\u3063\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-911), "\u3053\u306e\u88c5\u7f6e\u306b\u9069\u7528\u53ef\u80fd\u306a\u69cb\u6210\u8a2d\u5b9a\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u3057\u3070\u3089\u304f\u304a\u5f85\u3061\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-912), "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9 \u30db\u30b9\u30c8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-913), "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u63a5\u7d9a\u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-914), "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3092\u901a\u3058\u3066\u30c7\u30fc\u30bf\u307e\u305f\u306f\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306b\u554f\u984c\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-915), "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3092\u8a8d\u8a3c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-800), "\u3053\u306e\u88c5\u7f6e\u3067\u306f\u300cGMS \u3078\u306e\u5916\u90e8\u30d5\u30ed\u30fc\u5831\u544a\u300d\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-801), "\u300cFlow Forwarder Gateway\u300d(\u30d5\u30ed\u30fc\u8ee2\u9001\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4) \u306e\u8a2d\u5b9a\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-802), "\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\u300cGMS \u3078\u306e\u5916\u90e8\u30d5\u30ed\u30fc\u5831\u544a\u300d\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-803), "\u3053\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u300cGMS \u3078\u306e\u5916\u90e8\u30d5\u30ed\u30fc\u5831\u544a\u300d\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-804), "\u3053\u306e\u88c5\u7f6e\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u53ef\u8996\u5316\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-805), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u305f\u3081\u306e\u5341\u5206\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-806), "\u30e9\u30f3\u30bf\u30a4\u30e0 \u30e1\u30e2\u30ea\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-807), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1 \u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-808), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2 \u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-809), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1 \u3068 2 \u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-810), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1 \u3068\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc\u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-811), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1\u30012\u3001\u304a\u3088\u3073\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc\u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-812), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2 \u3068\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc\u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-813), "\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc\u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-814), "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3092 GMS \u3067\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-815), "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u7d42\u7aef\u306b\u30c8\u30f3\u30cd\u30eb\u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-816), "\u30de\u30cd\u30fc\u30b8\u30c9\u88c5\u7f6e\u306e\u7d42\u7aef\u306b\u30c8\u30f3\u30cd\u30eb\u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-817), "\u300cCloud GMS Management and Reporting\u300d(\u30af\u30e9\u30a6\u30c9 GMS \u306e\u7ba1\u7406\u3068\u30ec\u30dd\u30fc\u30c8) \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u88c5\u7f6e\u306b\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-818), "\u51e6\u7406\u80fd\u529b\u304c\u8db3\u308a\u306a\u3044\u305f\u3081\u306b\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-819), "\u5e2f\u57df\u5e45\u304c\u8db3\u308a\u306a\u3044\u305f\u3081\u306b\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093"}, {"EDIT_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u3092\u7de8\u96c6"}, {"VIEW_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u306e\u8a73\u7d30\u3092\u8868\u793a"}, {"ADD_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u3092\u8ffd\u52a0"}, {"SELECT_TO_DELETE", "\u524a\u9664\u3059\u308b\u30c9\u30e1\u30a4\u30f3/\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SELECT_AS_TO_DEL", "\u524a\u9664\u3059\u308b\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"DELETE_CONFIRMATION", "\u6b21\u306e\u30c9\u30e1\u30a4\u30f3\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f: '"}, {"USER_DELETE_CONFIRMATION", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3001\u30e6\u30fc\u30b6\u3001\u30e6\u30fc\u30b6\u7a2e\u5225\u3001\u304a\u3088\u3073\u305d\u308c\u3089\u306e\u8a2d\u5b9a\u3082\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002"}, {"USER_AS_DELETE_CONFIRMATION", "\u30e6\u30fc\u30b6\u3001\u30e6\u30fc\u30b6\u7a2e\u5225\u3001\u304a\u3088\u3073\u305d\u308c\u3089\u306e\u8a2d\u5b9a\u3082\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002"}, {"SURE_WANT_TO_CONTINUE", "\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"MULTIPLE_DELETE_CONFIRMATION", "\u6b21\u306e\u30c9\u30e1\u30a4\u30f3\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f:"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "\u6b21\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f:"}, {"AND_AS_DELETE_CONFIRMATION", "\u6b21\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u524a\u9664\u3057\u307e\u3059:"}, {"WANT_TO_CONTINUE", "\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"DOMAINS", "\u30c9\u30e1\u30a4\u30f3"}, {"SEARCH", "\u691c\u7d22"}, {"NAME", "\u540d\u524d"}, {"DOMAIN_TYPE", "\u30c9\u30e1\u30a4\u30f3\u7a2e\u5225"}, {"DOMAIN_SETTINGS", "\u30c9\u30e1\u30a4\u30f3\u306e\u8a2d\u5b9a"}, {"ALIAS", "\u30a8\u30a4\u30ea\u30a2\u30b9"}, {"DISPLAY_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u3092\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u8868\u793a"}, {"SET_AS_DEFAULT", "\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c9\u30e1\u30a4\u30f3\u306b\u8a2d\u5b9a"}, {"HOST_NAME", "\u30db\u30b9\u30c8\u540d"}, {"HOST_TYPE", "\u30c9\u30e1\u30a4\u30f3\u7a2e\u5225"}, {"EQUALS", "\u540c\u3058"}, {"STARTS_WITH", "\u6b21\u3067\u59cb\u307e\u308b"}, {"ENDS_WITH", "\u6b21\u3067\u7d42\u308f\u308b"}, {"CONTAINS", "\u6b21\u3092\u542b\u3080"}, {"LOCAL", "\u30ed\u30fc\u30ab\u30eb"}, {"REMOTE", "\u30ea\u30e2\u30fc\u30c8"}, {"DOMAINS", "\u30c9\u30e1\u30a4\u30f3"}, {"SSL_USED", "SSL \u3092\u4f7f\u7528"}, {"CONFIGURE", "\u8a2d\u5b9a"}, {"NO_DOMAIN_FOUND", "\u30c9\u30e1\u30a4\u30f3\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"NO_AS_FOUND", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"ADD_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u3092\u8ffd\u52a0"}, {"DELETE_DOMAINS", "\u30c9\u30e1\u30a4\u30f3/\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u524a\u9664"}, {"DELETE_ASS", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u524a\u9664"}, {"EQUALS", "\u540c\u3058"}, {"STARTS_WITH", "\u6b21\u3067\u59cb\u307e\u308b"}, {"ENDS_WITH", "\u6b21\u3067\u7d42\u308f\u308b"}, {"CONTAINS", "\u6b21\u3092\u542b\u3080"}, {"LOCAL", "\u30ed\u30fc\u30ab\u30eb"}, {"REMOTE", "\u30ea\u30e2\u30fc\u30c8"}, {"REMOTE_DOMAIN", "\u30ea\u30e2\u30fc\u30c8 \u30c9\u30e1\u30a4\u30f3"}, {"ADMIN_PASSWORD", "\u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"DEFAULT_ADMIN_USER", "\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u30e6\u30fc\u30b6"}, {"AUTH_PORT", "\u8a8d\u8a3c\u30dd\u30fc\u30c8"}, {"ACCT_PORT", "\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0 \u30dd\u30fc\u30c8"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "\u57fa\u672c\u8b58\u5225\u540d"}, {"SEARCH_FILTER", "\u691c\u7d22\u30d5\u30a3\u30eb\u30bf"}, {"SHARED_SECRET", "\u5171\u6709\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"USE_SSL", "SSL \u3092\u4f7f\u7528"}, {"SSL_PORT", "SSL \u30dd\u30fc\u30c8"}, {"ANONYMOUS_LOGIN", "\u533f\u540d\u30ed\u30b0\u30a4\u30f3"}, {"LOGIN_USER_NAME", "\u30ed\u30b0\u30a4\u30f3 \u30e6\u30fc\u30b6\u306e\u8b58\u5225\u540d"}, {"DNAME_MSG", "\u30d0\u30a4\u30f3\u30c9\u306e\u5b9f\u884c\u6642\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30fc\u30d0\u3078\u306e\u8a8d\u8a3c\u306b\u4f7f\u7528\u3055\u308c\u308b\u8b58\u5225\u540d (DN: Distinguished Nname) \u3067\u3059\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3059\u308b\u5024\u306f\u8b58\u5225\u540d\u3068\u3057\u3066\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b: [uid=xyz,ou=People,dc=example,dc=com]\u3001[cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "\u30ed\u30b0\u30a4\u30f3 \u30d1\u30b9\u30ef\u30fc\u30c9"}, {"PROTOCOL_VERSION", "\u30d7\u30ed\u30c8\u30b3\u30eb \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"LDAPV2", "LDAP \u30d0\u30fc\u30b8\u30e7\u30f3 2"}, {"LDAPV3", "LDAP \u30d0\u30fc\u30b8\u30e7\u30f3 3"}, {"SETTINGS", "\u8a2d\u5b9a"}, {"USER_DIRECTORY_LDAP", "\u30e6\u30fc\u30b6 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea LDAP \u30b9\u30ad\u30fc\u30de"}, {"LDAP_SCHEMA", "LDAP \u30b9\u30ad\u30fc\u30de"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "\u30e6\u30fc\u30b6\u5b9a\u7fa9"}, {"USER_OBJECTS", "\u30e6\u30fc\u30b6 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "\u30ed\u30b0\u30a4\u30f3\u540d\u5c5e\u6027"}, {"FIRST_NAME", "\u30d5\u30a1\u30fc\u30b9\u30c8 \u30cd\u30fc\u30e0\u5c5e\u6027"}, {"LAST_NAME", "\u30e9\u30b9\u30c8 \u30cd\u30fc\u30e0\u5c5e\u6027"}, {"EMAIL", "\u96fb\u5b50\u30e1\u30fc\u30eb\u5c5e\u6027"}, {"TELEPHONE", "\u96fb\u8a71\u5c5e\u6027"}, {"CON_TIMEOUT", "\u63a5\u7d9a\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8"}, {"SCHEMA", "\u30b9\u30ad\u30fc\u30de"}, {"TEST_SETTINGS", "\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8"}, {"TEST_RADIUS_SETTINGS", "RADIUS \u306e\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8"}, {"TEST_LDAP_MSG", "LDAP \u306e\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u6709\u52b9\u306a LDAP \u3092\u5165\u529b\u3057\u307e\u3059\u3002"}, {"TEST_RADIUS_MSG", "RADIUS \u306e\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u6709\u52b9\u306a RADIUS \u3092\u5165\u529b\u3057\u307e\u3059\u3002"}, {"TEST_MSG", "\u30ed\u30b0\u30a4\u30f3\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3057\u3066\u3001\u300c\u30c6\u30b9\u30c8\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u3053\u306e\u64cd\u4f5c\u3092\u884c\u3046\u3068\u3001\u3053\u308c\u307e\u3067\u306b\u884c\u3063\u305f\u5909\u66f4\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002"}, {"USER", "\u30e6\u30fc\u30b6"}, {"PWD", "\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"RUN_CLIENT_TEST", "\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c"}, {"TEST_STATUS", "\u30c6\u30b9\u30c8\u72b6\u6cc1"}, {"RETURNED_USER_ATTRIBUTES", "\u30c6\u30b9\u30c8\u7d50\u679c"}, {"TEST", "\u30c6\u30b9\u30c8"}, {"OK", "OK"}, {"CANCEL", "\u30ad\u30e3\u30f3\u30bb\u30eb"}, {"CLOSE", "\u9589\u3058\u308b"}, {"CANT_DELETE_LOCALDOMAIN", "LocalDomain \u306f\u7de8\u96c6/\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CANT_EDIT", "\u30c9\u30e1\u30a4\u30f3\u304c 1 \u3064\u3057\u304b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u7de8\u96c6\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_NAME", "\u540d\u524d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_ADMIN_PWD", "\u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_ADMIN_USER", "\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u30e6\u30fc\u30b6\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_AUTH_PORT", "\u8a8d\u8a3c\u30dd\u30fc\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_AUTH_PORT", "\u8a8d\u8a3c\u30dd\u30fc\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"AUTH_PORT_RANGE", "\u8a8d\u8a3c\u30dd\u30fc\u30c8\u306b\u306f 0 \uff5e 65535 \u306e\u7bc4\u56f2\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"EMPTY_ACCT_PORT", "\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0 \u30dd\u30fc\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_ACCT_PORT", "\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0 \u30dd\u30fc\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"EMPTY_BD_NAME", "\u57fa\u672c\u8b58\u5225\u540d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_SEARCH_FILTER", "\u691c\u7d22\u30d5\u30a3\u30eb\u30bf\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_SHRED_SECRET", "\u5171\u6709\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_SSL_PORT", "SSL \u30dd\u30fc\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_SSL_PORT", "SSL \u30dd\u30fc\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"SSL_PORT_RANGE", "SSL \u30dd\u30fc\u30c8\u306b\u306f 0 \uff5e 65535 \u306e\u7bc4\u56f2\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"EMPTY_LOGIN", "\u30ed\u30b0\u30a4\u30f3 \u30e6\u30fc\u30b6\u306e\u8b58\u5225\u540d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_LOGIN_PWD", "\u30ed\u30b0\u30a4\u30f3 \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_CON_TIMEOUT", "\u63a5\u7d9a\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_CON_TIMEOUT", "\u63a5\u7d9a\u30dd\u30fc\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"RECOMMEND_SSL", "\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3068\u306e\u30bb\u30ad\u30e5\u30a2\u306a\u901a\u4fe1\u306b\u306f SSL \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002"}, {"CON_NOT_SECURE", "SSL \u3092\u4f7f\u7528\u3057\u306a\u3044\u3068\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306a\u63a5\u7d9a\u3092\u78ba\u7acb\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DOMAIN_EXISTS", "\u30c9\u30e1\u30a4\u30f3\u540d\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"ALIAS_EXISTS", "\u3053\u306e\u540d\u524d\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"DOMAIN_INVALID", "\u7121\u52b9\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"DOMAIN_VALID_CHARS", "\u540d\u524d\u306b\u306f\u6b21\u306e\u6587\u5b57\u306e\u307f\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059:"}, {"DOMAIN_VALID_CHARS_LIST", "\u82f1\u6570\u5b57\u3001. (\u30d4\u30ea\u30aa\u30c9)\u3001- (\u30cf\u30a4\u30d5\u30f3)\u3001_ (\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2)\u3001\u30b9\u30da\u30fc\u30b9\u3002"}, {"SPECIFY_VALID_NAME", "\u6709\u52b9\u306a\u6587\u5b57\u3092\u4f7f\u7528\u3057\u305f\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"DIR_GRP_SETTINGS", "Active Directory \u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "AD \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u306e\u307f\u3092\u8a31\u53ef"}, {"DIR_GROUPS", "Active Directory \u30b0\u30eb\u30fc\u30d7"}, {"GRP_NAME_INVALID", "\u7121\u52b9\u306a\u30b0\u30eb\u30fc\u30d7\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"GRP_NAME_INVALID_LENGTH", "\u30b0\u30eb\u30fc\u30d7\u540d\u306b\u4f7f\u7528\u3067\u304d\u308b\u6587\u5b57\u6570\u306f 200 \u6587\u5b57\u4ee5\u4e0b\u3067\u3059\u3002"}, {"AUTH_SERVER_NAME", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u540d"}, {"ADD_AUTH_SERVER", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u8ffd\u52a0"}, {"ADD_AUTHSERVER", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u8ffd\u52a0"}, {"EDIT_AUTHSERVER", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u7de8\u96c6"}, {"DELETE_DOMAIN", "\u3053\u306e\u30c9\u30e1\u30a4\u30f3\u3092\u524a\u9664"}, {"CANT_DELETE_LOCAL_AS", "\u30ed\u30fc\u30ab\u30eb\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306f\u7de8\u96c6/\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CANT_DELETE_ADMIN_AS", "\u3053\u306e\u30c9\u30e1\u30a4\u30f3\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u306f\u3001\u3053\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306b\u5bfe\u3057\u3066\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u3092\u5225\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306b\u79fb\u52d5\u3057\u305f\u3089\u3001\u64cd\u4f5c\u3092\u3084\u308a\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"EDIT_AUTH_SERVER", "\u3053\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u7de8\u96c6"}, {"VIEW_AUTH_SERVER", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u8a73\u7d30\u3092\u8868\u793a"}, {"DELETE_AUTH_SERVER", "\u3053\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u524a\u9664"}, {"AS_INVALID", "\u7121\u52b9\u306a\u8a8d\u8a3c\u30b5\u30fc\u30d0\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"AS_EXISTS", "\u3053\u306e\u540d\u524d\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"EMPTY_AS_NAME", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u540d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"AS_NAME_MSG", "\u4f5c\u6210\u3059\u308b\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u540d\u524d\u3002\u3053\u306e\u540d\u524d\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u5185\u306e\u5225\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u7ba1\u7406\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002"}, {"AS_DELETE_CONFIRMATION", "\u6b21\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f: '"}, {"PRI_RADIUS", "\u30d7\u30e9\u30a4\u30de\u30ea RADIUS \u30b5\u30fc\u30d0"}, {"AUTH_PROTOCOL", "\u8a8d\u8a3c\u30d7\u30ed\u30c8\u30b3\u30eb"}, {"RADIUS_TIMEOUT", "RADIUS \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8 (\u79d2)"}, {"MAX_RETRIES", "\u6700\u5927\u518d\u8a66\u884c\u56de\u6570"}, {"BACK_RADIUS", "\u30d0\u30c3\u30af\u30a2\u30c3\u30d7 RADIUS \u30b5\u30fc\u30d0"}, {"RADIUS_USER_GROUP", "RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a"}, {"ALLOW_GROUP_MEMBERS", "RADIUS \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u306e\u307f\u3092\u8a31\u53ef"}, {"USE_SW_VSA", "USE_SW_VSA\tSonicWall \u30d9\u30f3\u30c0\u30fc\u56fa\u6709\u306e\u5c5e\u6027\u3092 RADIUS \u30b5\u30fc\u30d0\u3067\u4f7f\u7528\u3059\u308b"}, {"USE_FILTER_ID", "Filter-ID \u5c5e\u6027\u3092 RADIUS \u30b5\u30fc\u30d0\u3067\u4f7f\u7528"}, {"ALLOW_GROUPS", "\u8a31\u53ef\u3055\u308c\u3066\u3044\u308b RADIUS \u30b0\u30eb\u30fc\u30d7"}, {"USER_GROUP", "\u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"EMPTY_MAX_RETRIES", "\u6700\u5927\u8a66\u884c\u56de\u6570\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_MAX_RETRIES", "\u6700\u5927\u518d\u8a66\u884c\u56de\u6570\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"TEST_USER_NAME", "\u300c\u30c6\u30b9\u30c8 \u30e6\u30fc\u30b6\u540d\u300d\u3092\u7a7a\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {"TEST_USER_PWD", "\u300c\u30c6\u30b9\u30c8 \u30e6\u30fc\u30b6 \u30d1\u30b9\u30ef\u30fc\u30c9\u300d\u3092\u7a7a\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DOMAIN_NAME_MSG", "\u4f5c\u6210\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u306e\u540d\u524d\u3002\u3053\u306e\u540d\u524d\u306f\u3001\u30ed\u30b0\u30a4\u30f3 \u30da\u30fc\u30b8\u306e\u300c\u30c9\u30e1\u30a4\u30f3\u300d\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002"}, {"DOMAIN_TYPE_MSG", "\u30c9\u30e1\u30a4\u30f3\u306e\u7a2e\u5225\u3002[\u30ed\u30fc\u30ab\u30eb] \u307e\u305f\u306f [\u30ea\u30e2\u30fc\u30c8] \u304c\u3042\u308a\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u3067\u3001LDAP \u307e\u305f\u306f AD \u30b5\u30fc\u30d0\u306a\u3069\u306e\u5916\u90e8\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\u30e6\u30fc\u30b6\u3092\u8a8d\u8a3c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001[\u30ea\u30e2\u30fc\u30c8] \u7a2e\u5225\u306e\u30c9\u30e1\u30a4\u30f3\u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002[\u30ed\u30fc\u30ab\u30eb] \u7a2e\u5225\u306e\u30c9\u30e1\u30a4\u30f3\u306b\u306f\u3001SGMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306e\u30e6\u30fc\u30b6 \u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u8a8d\u8a3c\u306e\u8a73\u7d30\u304c\u542b\u307e\u308c\u307e\u3059\u3002[\u30ed\u30fc\u30ab\u30eb] \u7a2e\u5225\u306e\u30c9\u30e1\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001SGMS \u5185\u3067\u8907\u6570\u306e\u30c9\u30e1\u30a4\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3067\u304d\u3001\u5916\u90e8\u8a8d\u8a3c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002"}, {"ADMIN_PASSWORD_MSG", "[\u30ed\u30fc\u30ab\u30eb] \u7a2e\u5225\u306e\u30c9\u30e1\u30a4\u30f3\u3092\u65b0\u3057\u304f\u4f5c\u6210\u3059\u308b\u3068\u3001\u305d\u306e\u30c9\u30e1\u30a4\u30f3\u306e [\u7ba1\u7406\u8005] \u30e6\u30fc\u30b6\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u7ba1\u7406\u8005\u30e6\u30fc\u30b6\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"ADMIN_USERID_MSG", "\u30c9\u30e1\u30a4\u30f3\u306e\u7ba1\u7406\u8005\u306b\u306a\u308b\u5fc5\u8981\u304c\u3042\u308b\u30e6\u30fc\u30b6\u306e\u30e6\u30fc\u30b6\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u30e6\u30fc\u30b6\u540d\u306b\u306f\u3001\u3053\u306e\u30c9\u30e1\u30a4\u30f3\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30fc\u30d0\u5185\u306e\u6709\u52b9\u306a\u30e6\u30fc\u30b6\u540d\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u540d\u524d [\u7ba1\u7406\u8005] \u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u30e6\u30fc\u30b6 ID [\u7ba1\u7406\u8005] \u3092\u6301\u3064\u30e6\u30fc\u30b6\u304c\u95a2\u9023\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b58\u5728\u3057\u3001\u305d\u306e\u30e6\u30fc\u30b6\u304c\u7ba1\u7406\u8005\u6a29\u9650\u3092\u6301\u3064\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b: jdoe"}, {"HOST_NAME_MSG", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u30db\u30b9\u30c8\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002\u4f8b: \t[mydc.example.com]\u3001[X.X.X.X] (IP \u30a2\u30c9\u30ec\u30b9)\u3001[company.com]\u3002\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c Windows Active Directory (AD) \u30b5\u30fc\u30d0\u3067\u3001AD \u30d5\u30a9\u30ec\u30b9\u30c8\u4e0b\u306e\u30e6\u30fc\u30b6\u3092\u8a8d\u8a3c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30c9\u30e1\u30a4\u30f3\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001AD \u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u30b0\u30ed\u30fc\u30d0\u30eb \u30ab\u30bf\u30ed\u30b0\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3092\u30db\u30b9\u30c8\u540d\u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002"}, {"AUTHENTICATION_PORT_MSG", "\u8a8d\u8a3c\u8981\u6c42\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b LDAP \u307e\u305f\u306f AD \u30b5\u30fc\u30d0\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u3002LDAP/AD \u30b5\u30fc\u30d0\u306e\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 389 \u3067\u3059\u3002AD \u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u30b0\u30ed\u30fc\u30d0\u30eb \u30ab\u30bf\u30ed\u30b0\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3092\u30db\u30b9\u30c8\u540d\u3068\u3057\u3066\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u5bfe\u5fdc\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3082\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3268 \u3067\u3059\u3002"}, {"HOST_TYPE_MSG", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u30b5\u30fc\u30d0\u304c LDAP \u30b5\u30fc\u30d0\u3001Windows Active Directory\u3001\u307e\u305f\u306f RADIUS \u30b5\u30fc\u30d0\u306e\u5834\u5408\u3001\u3053\u306e\u5024\u306f\u3001\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u7a2e\u5225\u3092\u793a\u3057\u307e\u3059\u3002"}, {"ALIAS_MSG", "\u30c9\u30e1\u30a4\u30f3\u540d\u306e\u7c21\u7565\u5f62\u5f0f\u3002\u30c9\u30e1\u30a4\u30f3\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u306b\u3001GMS \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u304b\u3089\u306e\u30ed\u30b0\u30a4\u30f3\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059 (\u4f8b: \u30a8\u30a4\u30ea\u30a2\u30b9\\\\\u30e6\u30fc\u30b6\u30fc\u540d)\u3002\u30c9\u30e1\u30a4\u30f3\u540d\u306e\u9577\u3055\u304c 16 \u6587\u5b57\u4ee5\u4e0b\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u30a8\u30a4\u30ea\u30a2\u30b9\u306b\u81ea\u52d5\u7684\u306b\u5165\u529b\u3055\u308c\u307e\u3059\u3002"}, {"PROTOCOL_VERSION_MSG", "\u3053\u308c\u306f\u3001\u30ea\u30e2\u30fc\u30c8 LDAP/AD \u30b5\u30fc\u30d0\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b LDAP \u30d7\u30ed\u30c8\u30b3\u30eb \u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002"}, {"BASE_DN_MSG", "\u57fa\u672c\u8b58\u5225\u540d\u306f\u3001SGMS \u306b\u3088\u308b\u691c\u7d22\u306e\u958b\u59cb\u5143\u3068\u306a\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306e\u30eb\u30fc\u30c8 \u30a8\u30f3\u30c8\u30ea\u3092\u8b58\u5225\u3059\u308b\u306e\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u57fa\u672c DN (example.com \u306a\u3069) \u306f\u3001[dc=example,dc=com] \u5f62\u5f0f\u3067\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6700\u4e0a\u4f4d\u30ec\u30d9\u30eb\u306e\u30ce\u30fc\u30c9\u306f\u3001SGMS \u306b\u30ed\u30b0\u30a4\u30f3\u53ef\u80fd\u306a\u30e6\u30fc\u30b6\u304c\u3059\u3079\u3066\u8868\u793a\u3055\u308c\u308b\u3068\u60f3\u5b9a\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30c4\u30ea\u30fc\u306e\u57fa\u672c DN \u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"USE_SSL_MSG", "\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3078\u306e\u30d0\u30a4\u30f3\u30c9\u306b SSL \u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3078\u306e\u30d0\u30a4\u30f3\u30c9\u306b\u306f SSL \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u306e CA \u8a3c\u660e\u66f8\u3001\u307e\u305f\u306f\u30b5\u30fc\u30d0\u306e\u8a3c\u660e\u66f8\u306b\u7f72\u540d\u3057\u305f CA \u306e\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u306f\u3001SGMS \u306e\u30ad\u30fc\u30b9\u30c8\u30ed\u30fc\u30af\u306b\u4fe1\u983c\u6e08\u307f CA \u3068\u3057\u3066\u5b58\u5728\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"SSL_PORT_MSG", "\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c SSL \u30d0\u30a4\u30f3\u30c9\u8981\u6c42\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3002LDAP/AD \u30b5\u30fc\u30d0\u306e\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 636 \u3067\u3059\u3002AD \u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u30b0\u30ed\u30fc\u30d0\u30eb \u30ab\u30bf\u30ed\u30b0\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3092\u30db\u30b9\u30c8\u540d\u3068\u3057\u3066\u6307\u5b9a\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u5bfe\u5fdc\u3059\u308b SSL \u30dd\u30fc\u30c8\u756a\u53f7\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u3082\u3042\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3269 \u3067\u3059\u3002"}, {"ANONYMOUS_LOGIN_MSG", "(\u975e\u63a8\u5968)\u3002SGMS \u3092\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u306b\u533f\u540d\u3067\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u30ea\u30e2\u30fc\u30c8 LDAP/AD \u30b5\u30fc\u30d0\u306f\u3001\u533f\u540d\u30d0\u30a4\u30f3\u30c9\u3092\u8a31\u53ef\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u533f\u540d\u30d0\u30a4\u30f3\u30c9\u306f\u3001\u30b5\u30fc\u30d3\u30b9 \u30a2\u30ab\u30a6\u30f3\u30c8 (\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u6709\u52b9\u306a\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e\u30e6\u30fc\u30b6 \u30a2\u30ab\u30a6\u30f3\u30c8) \u304c\u4e8b\u524d\u306b\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u306e\u307f\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306b\u533f\u540d\u30d0\u30a4\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u304a\u52e7\u3081\u3067\u304d\u307e\u305b\u3093\u3002"}, {"LOGIN_USER_DN_MSG", "\u30d0\u30a4\u30f3\u30c9\u306e\u5b9f\u884c\u6642\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30fc\u30d0\u3078\u306e\u8a8d\u8a3c\u306b\u4f7f\u7528\u3055\u308c\u308b\u8b58\u5225\u540d (DN: Distinguished Nname) \u3067\u3059\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3059\u308b\u5024\u306f\u8b58\u5225\u540d\u3068\u3057\u3066\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b: [uid=xyz, ou=People, dc=example, dc=com]\u3001[cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "\u30ed\u30b0\u30a4\u30f3 \u30e6\u30fc\u30b6 DN \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3002"}, {"CONN_TIMEOUT_MSG", "\u3053\u306e\u5024\u306f\u3001\u63a5\u7d9a\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u307e\u3067\u306e\u6642\u9593 (\u30df\u30ea\u79d2) \u3067\u3059\u3002\u3053\u306e\u6642\u9593\u306e\u7d4c\u904e\u5f8c\u3082\u3001\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a\u3092\u78ba\u7acb\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u63a5\u7d9a\u8a66\u884c\u304c\u53d6\u308a\u6d88\u3055\u308c\u307e\u3059\u3002"}, {"LDAP_SCHEMA_MSG", "\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b LDAP/AD \u30b5\u30fc\u30d0\u306e LDAP \u30b9\u30ad\u30fc\u30de\u3002"}, {"OBJ_CLASS_MSG", "\u30e6\u30fc\u30b6\u304c\u6240\u5c5e\u3059\u308b\u6a19\u6e96\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u30af\u30e9\u30b9\u306e\u3044\u305a\u308c\u304b\u306e\u540d\u524d\u3002"}, {"LOGIN_NAME_ATTRIBUTE_MSG", "LDAP/AD \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u30e6\u30fc\u30b6 ID \u3092\u8868\u3057\u307e\u3059\u3002\u3053\u308c\u306f LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u3067\u3001\u305d\u306e\u5c5e\u6027\u5024\u306f SGMS \u30ed\u30b0\u30a4\u30f3 \u30da\u30fc\u30b8\u3067\u30e6\u30fc\u30b6 ID \u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059 (\u4f8b: uid\u3001sAMAccountName)\u3002"}, {"FIRST_NAME_ATTRIBUTE_MSG", "LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u30d5\u30a1\u30fc\u30b9\u30c8 \u30cd\u30fc\u30e0\u3092\u8868\u3057\u307e\u3059\u3002\u4f8b: givenName\u3002"}, {"LAST_NAME_ATTRIBUTE_MSG", "LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u30e9\u30b9\u30c8 \u30cd\u30fc\u30e0\u3092\u8868\u3057\u307e\u3059\u3002\u4f8b: sn\u3002"}, {"EMAIL_ATTRIBUTE_MSG", "LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u96fb\u5b50\u30e1\u30fc\u30eb ID \u3092\u8868\u3057\u307e\u3059\u3002\u4f8b: mail\u3002"}, {"TELEPHONE_ATTRIBUTE_MSG", "LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u96fb\u8a71\u756a\u53f7\u3092\u8868\u3057\u307e\u3059\u3002\u4f8b: telephoneNumber\u3002"}, {"TEST_PANE_MSG", "\u3053\u3053\u3067\u306f\u3001\u8a2d\u5b9a\u30d1\u30cd\u30eb\u3067\u5165\u529b\u3057\u305f\u8a8d\u8a3c\u30b5\u30fc\u30d0 (LDAP/AD/RADIUS) \u306e\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002"}, {"TEST_PANE_USER_MSG", "\u6709\u52b9\u306a\u30e6\u30fc\u30b6\u540d\u3092\u5165\u529b\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001SGMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u6642\u306b\u300cSGMS \u30ed\u30b0\u30a4\u30f3\u300d\u30da\u30fc\u30b8\u3067\u5165\u529b\u3059\u308b\u30e6\u30fc\u30b6\u540d\u3067\u3059\u3002\u3053\u306e\u30e6\u30fc\u30b6\u540d\u306f\u6709\u52b9\u306a\u540d\u524d\u3067\u3042\u308b\u3053\u3068\u3001\u307e\u305f\u3001\u3053\u306e\u30c9\u30e1\u30a4\u30f3\u306e\u95a2\u9023\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b58\u5728\u3059\u308b\u540d\u524d\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306e\u30e6\u30fc\u30b6\u540d\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3082\u5165\u529b\u3057\u307e\u3059\u3002"}, {"EMPTY_DIR_GROUP", "\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b0\u30eb\u30fc\u30d7\u540d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f Active Directory \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6240\u5c5e\u3059\u308b\u30e6\u30fc\u30b6\u306e\u307f\u304c GMS \u306b\u30ed\u30b0\u30aa\u30f3\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f\u3001\u8a2d\u5b9a\u30d1\u30cd\u30eb\u3067\u300c\u30db\u30b9\u30c8\u7a2e\u5225\u300d\u3092 [Active Directory] \u306b\u9078\u629e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"DIR_GROUPS_MSG", "AD \u30b0\u30eb\u30fc\u30d7\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001GMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3092\u8a31\u53ef\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30e1\u30f3\u30d0\u3067\u3059\u3002\u8907\u6570\u306e AD \u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u8907\u6570\u306e\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u5404\u30b0\u30eb\u30fc\u30d7\u3092\u30bb\u30df\u30b3\u30ed\u30f3\u3067\u533a\u5207\u308a\u307e\u3059\u3002\u4f8b: [GMSUsers]\u3001[ADGroup1;AD group2;GMS Users;Group4]\u3002"}, {"RADIUS_HOST_NAME_MSG", "RADIUS \u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u30db\u30b9\u30c8\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3002\u4f8b: [myradius.example.com]\u3001[X.X.X.X] (IP \u30a2\u30c9\u30ec\u30b9)\u3001[company.com]\u3002"}, {"RADIUS_AUTH_PORT_MSG", "\u8a8d\u8a3c\u8981\u6c42\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b RADIUS \u30b5\u30fc\u30d0\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 1812 \u3067\u3059\u3002"}, {"RADIUS_SHARED_SECRET_MSG", "GMS \u3068 RADIUS \u30b5\u30fc\u30d0\u306e\u9593\u3067\u5171\u6709\u3059\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u3002\u3053\u308c\u306f\u3001RADIUS \u30b5\u30fc\u30d0\u3068 RADIUS \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3057\u304b\u77e5\u3089\u306a\u3044\u6587\u5b57\u5217\u5024\u3067\u3059\u3002"}, {"RADIUS_AUTH_PROTOCOL_MSG", "\u8a8d\u8a3c\u3067\u4f7f\u7528\u3059\u308b RADIUS \u8a8d\u8a3c\u30d7\u30ed\u30c8\u30b3\u30eb\u3002"}, {"RADIUS_TIMEOUT_MSG", "\u3053\u306e\u5024\u306f\u3001\u63a5\u7d9a\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u307e\u3067\u306e\u6642\u9593 (\u79d2) \u3092\u793a\u3057\u307e\u3059\u3002\u3053\u306e\u6642\u9593\u306e\u7d4c\u904e\u5f8c\u3082\u3001RADIUS \u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a\u3092\u78ba\u7acb\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u63a5\u7d9a\u8a66\u884c\u304c\u53d6\u308a\u6d88\u3055\u308c\u307e\u3059\u3002"}, {"RADIUS_MAX_RETRIES_MSG", "\u3053\u306e\u5024\u306f\u3001RADIUS \u30b5\u30fc\u30d0\u3078\u306e\u8a8d\u8a3c\u3092\u518d\u8a66\u884c\u3059\u308b\u56de\u6570\u3092\u793a\u3057\u307e\u3059\u3002\u6307\u5b9a\u56de\u6570\u306e\u7d4c\u904e\u5f8c\u3082\u3001\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3078\u306e\u8a8d\u8a3c\u3092\u5b9f\u884c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u8a8d\u8a3c\u8a66\u884c\u304c\u53d6\u308a\u6d88\u3055\u308c\u307e\u3059\u3002"}, {"RADIUS_ONLY_GROUP_MSG", "\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6240\u5c5e\u3059\u308b\u30e6\u30fc\u30b6\u306e\u307f\u304c GMS \u306b\u30ed\u30b0\u30aa\u30f3\u3067\u304d\u307e\u3059\u3002"}, {"RADIUS_USE_FILTER_MSG", "\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3068\u3001RADIUS \u5c5e\u6027\u306e \\'Filter-ID\\' \u306e\u5024\u3092 RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u8b58\u5225\u5b50\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001GMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3067 RADIUS \u30b5\u30fc\u30d0\u304b\u3089\u8a8d\u8a3c\u3055\u308c\u308b\u5404\u30e6\u30fc\u30b6 ID \u3068\u30da\u30a2\u3068\u306a\u308b\u3001\u3053\u306e\u5c5e\u6027\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b RADIUS \u30b5\u30fc\u30d0\u3092\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"RADIUS_USE_SW_MSG", "\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3068\u3001SonicWall \u30d9\u30f3\u30c0\u30fc\u56fa\u6709\u306e\u5c5e\u6027 [SonicWall-User-Group \u304a\u3088\u3073 SonicWall-User-Groups] \u306e\u5024\u304c RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u8b58\u5225\u5b50\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001GMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3067 RADIUS \u30b5\u30fc\u30d0\u304b\u3089\u8a8d\u8a3c\u3055\u308c\u308b\u5404\u30e6\u30fc\u30b6 ID \u3068\u30da\u30a2\u3068\u306a\u308b\u3001SonicWall \u30d9\u30f3\u30c0\u30fc\u56fa\u6709\u306e\u5c5e\u6027\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b RADIUS \u30b5\u30fc\u30d0\u3092\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"RADIUS_ALLOW_GROUPS_MSG", "RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001GMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3092\u8a31\u53ef\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30e1\u30f3\u30d0\u3067\u3059\u3002\u4f8b: [GMSUsers]\u3002\u8907\u6570\u306e RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u8907\u6570\u306e\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u6587\u5b57\u5217\u3092\u30bb\u30df\u30b3\u30ed\u30f3\u3067\u533a\u5207\u308a\u307e\u3059\u3002\u4f8b: [RadGroup1;Rad group2;GMS Users;Group4]\u3002"}, {"ADD_AUTH_SERVER_MSG", "\u3053\u308c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u3001\u30c9\u30e1\u30a4\u30f3\u306e\u8ffd\u52a0\u6642\u306b\u3001\u65b0\u3057\u3044\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002"}, {"PAGE_LABEL", "\u30da\u30fc\u30b8"}, {"MANAGE_PAGE", "\u30da\u30fc\u30b8\u3092\u7ba1\u7406"}, {"ADD_COMPONENT", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8ffd\u52a0"}, {"PAGE_MANAGER", "\u30da\u30fc\u30b8\u7ba1\u7406"}, {"ADD_NEW_PAGE", "\u65b0\u3057\u3044\u30da\u30fc\u30b8\u3092\u8ffd\u52a0"}, {"DEFAULT_PAGE", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30da\u30fc\u30b8"}, {"PAGE_DETAILS", "\u30da\u30fc\u30b8 \u8a73\u7d30"}, {"PAGE_TITLE", "\u30da\u30fc\u30b8 \u30bf\u30a4\u30c8\u30eb"}, {"COMPONENT_TITLE", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u30bf\u30a4\u30c8\u30eb"}, {"PAGE_LAYOUT", "\u30ec\u30a4\u30a2\u30a6\u30c8"}, {"ONE_COLUMN_LAYOUT", "1 \u4f8b (100)"}, {"TWO_COLUMN_LAYOUT", "2 \u5217 (50:50)"}, {"THREE_COLUMN_LAYOUT", "3 \u5217 (30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 \u5217 (25:25:25:25)"}, {"ADD", "\u8ffd\u52a0"}, {"EDIT", "\u7de8\u96c6"}, {"DELETE", "\u524a\u9664"}, {"ADD_COMPONENT_MANAGER", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u7ba1\u7406\u3092\u8ffd\u52a0"}, {"TYPE", "\u7a2e\u5225"}, {"RSS_FEED_DETAILS", "RSS \u30d5\u30a3\u30fc\u30c9\u8a73\u7d30"}, {"RSS_FEEDS", "RSS \u30d5\u30a3\u30fc\u30c9"}, {"TITLE", "\u30bf\u30a4\u30c8\u30eb"}, {"ITEMS", "\u8868\u793a\u9805\u76ee\u6570 (\u6700\u5927)"}, {"REFRESH_INTERVAL", "\u66f4\u65b0\u9593\u9694"}, {"REFRESH_INTERVAL_MINUTE", "\u5206"}, {"EVENT_ALERT_DETAILS", "\u30a4\u30d9\u30f3\u30c8\u8b66\u544a\u8a73\u7d30"}, {"ALERT_TYPES", "\u30a2\u30e9\u30fc\u30c8\u7a2e\u5225"}, {"REFRESH_INTERVAL_HOUR", "\u6642\u9593"}, {"ALERT_SHOW_TIME_HOURS", "\u30a2\u30e9\u30fc\u30c8\u767a\u751f\u3092\u8868\u793a\u3059\u308b\u671f\u9593: \u904e\u53bb"}, {"APPLICATION_WIDGET_DETAILS", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u8a73\u7d30"}, {"WIDGETS", "\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8"}, {"RSS_FEED_TYPE", "RSS \u30d5\u30a3\u30fc\u30c9"}, {"EVENT_ALERT_TYPE", "\u30a4\u30d9\u30f3\u30c8 \u30a2\u30e9\u30fc\u30c8"}, {"APPLICATION_WIDGET_TYPE", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8"}, {"CUSTOM_RSS_FEED", "\u30e6\u30fc\u30b6\u5b9a\u7fa9 RSS \u30d5\u30a9\u30fc\u30c9"}, {"CUSTOM_RSS_URL", "\u30e6\u30fc\u30b6\u5b9a\u7fa9 RSS URL"}, {"END_EDIT", "\u7de8\u96c6\u7d42\u4e86"}, {"RSS_URL", "RSS URL "}, {"SAVE", "\u4fdd\u5b58"}, {"DEFAULT_PAGE", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30da\u30fc\u30b8"}, {"SAVE_LAYOUT_FAIL_MSG", "\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u4fdd\u5b58\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb \u30d0\u30fc\u72b6\u6cc1\u306e\u4fdd\u5b58\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"ADD_COMPONENT_FAIL_MSG", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8ffd\u52a0\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"DELETE_COMPONENT_FAIL_MSG", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u524a\u9664\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"PAGE_ACTION_FAIL_MSG", "\u30da\u30fc\u30b8\u52d5\u4f5c\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"RSS_FEED_FAIL_MSG", "RSS \u30d5\u30a3\u30fc\u30c9\u306e\u691c\u7d22\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"EVENT_ALERT_FAIL_MSG", "GEM \u30a2\u30e9\u30fc\u30c8\u306e\u691c\u7d22\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"APPLICATION_WIDGET_FAIL_MSG", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u691c\u7d22\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306b\u5bfe\u3059\u308b\u30a2\u30e9\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"NO_ALERT_FOUND_MSG", "\u8868\u793a\u3059\u308b\u30a2\u30e9\u30fc\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"CHANGE_DEFAULT_PAGE_MSG", "\u3053\u306e\u30da\u30fc\u30b8\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u4ee5\u524d\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30da\u30fc\u30b8\u306e\u8a2d\u5b9a\u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\u7d99\u7d9a\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"DELETE_DEFAULT_PAGE_MSG", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30da\u30fc\u30b8\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002\u4ed6\u306e\u30da\u30fc\u30b8\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u6307\u5b9a\u3057\u305f\u4e0a\u3067\u3001\u3053\u306e\u30da\u30fc\u30b8\u3092\u524a\u9664\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"DELETE_PAGE_AND_COMPONENT_MSG", "\u30da\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u3068\u3001\u305d\u306e\u30da\u30fc\u30b8\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u524a\u9664\u3092\u7d99\u7d9a\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"VALID_URL_MSG", "URL \u3092 http://www.yourdomain.com \u5f62\u5f0f\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CONFIRM_DELETE_COMPONENT_MSG", "\u3053\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u524a\u9664\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"NO_COMPONENT_MSG", "\u73fe\u5728\u3053\u306e\u30da\u30fc\u30b8\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"LOAD_DATA_MSG", "\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u4e2d..."}, {"COMPONENT_EXISTS_MSG", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\u5b58\u5728\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8a73\u7d30: "}, {"REFRESH_INTERVAL_RANGE", "\u66f4\u65b0\u9593\u9694\u304c\u7bc4\u56f2\u5916\u3067\u3059\u3002\u6709\u52b9\u306a\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"ITEMS_RANGE", "\u9805\u76ee\u6570\u304c\u7bc4\u56f2\u5916\u3067\u3059\u3002\u6709\u52b9\u306a\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"ALERT_SHOWTIME_RANGE", "\u30a2\u30e9\u30fc\u30c8\u306e\u8868\u793a\u671f\u9593\u304c\u7bc4\u56f2\u5916\u3067\u3059\u3002\u6709\u52b9\u306a\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"NO_COMPONENT_SELECTED_ERR", "\u3053\u306e\u30da\u30fc\u30b8\u306b\u8ffd\u52a0\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"ADDCOMPONENT_ERR_QUOTES", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30bf\u30a4\u30c8\u30eb\u306b\u306f\u3001\u4e00\u91cd\u5f15\u7528\u7b26\u3001\u4e8c\u91cd\u5f15\u7528\u7b26\u3001\u30b3\u30ed\u30f3\u3001\u30d1\u30fc\u30bb\u30f3\u30c8\u8a18\u53f7\u3001\u30cf\u30c3\u30b7\u30e5\u8a18\u53f7\u3001\u7591\u554f\u7b26\u3001\u304a\u3088\u3073\u30d1\u30a4\u30d7\u8a18\u53f7\u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"ADDPAGE_ERR_QUOTES", "\u30da\u30fc\u30b8\u306e\u30bf\u30a4\u30c8\u30eb\u306b\u306f\u3001\u4e00\u91cd\u5f15\u7528\u7b26\u3001\u4e8c\u91cd\u5f15\u7528\u7b26\u3001\u30b3\u30ed\u30f3\u3001\u30d1\u30fc\u30bb\u30f3\u30c8\u8a18\u53f7\u3001\u30cf\u30c3\u30b7\u30e5\u8a18\u53f7\u3001\u7591\u554f\u7b26\u3001\u304a\u3088\u3073\u30d1\u30a4\u30d7\u8a18\u53f7\u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"TIME_PERIOD", "\u671f\u9593"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "\u30da\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u3068\u3001\u30da\u30fc\u30b8\u5185\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u304c\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30da\u30fc\u30b8\u3092\u524a\u9664\u3057\u307e\u3059\u304b?"}, {"ADDWIDGET_ERR_QUOTES", "\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u30bf\u30a4\u30c8\u30eb\u306b\u306f\u3001\u4e00\u91cd\u5f15\u7528\u7b26\u3001\u4e8c\u91cd\u5f15\u7528\u7b26\u3001\u30b3\u30ed\u30f3\u3001\u30d1\u30fc\u30bb\u30f3\u30c8\u8a18\u53f7\u3001\u30cf\u30c3\u30b7\u30e5\u8a18\u53f7\u3001\u7591\u554f\u7b26\u3001\u304a\u3088\u3073\u30d1\u30a4\u30d7\u8a18\u53f7\u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"TIME_PERIOD", "\u671f\u9593"}, {"COPY_WIDGET_VALIDATION_MSG", "\u30b3\u30d4\u30fc\u3059\u308b\u30da\u30fc\u30b8\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"COPY_WIDGET_HEADER", "\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3092\u30b3\u30d4\u30fc"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "\u3053\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306b\u8a72\u5f53\u3059\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u691c\u7d22\u6587\u5b57\u5217\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"IGNORED_INVALID_SEARCH_FILTER", "\u4e0d\u6b63\u306a\u691c\u7d22\u30d5\u30a3\u30eb\u30bf\u3092\u7121\u8996\u3057\u307e\u3057\u305f\u3002"}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "\u5730\u7406\u7684\u306a\u5834\u6240\u3092\u6301\u305f\u306a\u3044 GMSVP \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c 1 \u3064\u4ee5\u4e0a\u3042\u308a\u307e\u3059\u3002"}, {"NDA_NG_REPORTING_WIDGET_MSG", "\u4e00\u81f4\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "\u30a2\u30e9\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u6700\u7d42\u30ec\u30dd\u30fc\u30c8\u65e5\u6642"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "\u30a2\u30e9\u30fc\u30c8\u7a2e\u5225"}, {"LOGS_WIDGET_COL_MESSAGE", "\u30e1\u30c3\u30bb\u30fc\u30b8"}, {"LOGS_WIDGET_COL_DATE", "\u65e5\u4ed8"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "\u30e6\u30fc\u30b6\u8a73\u7d30"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "\u6700\u7d42\u30a2\u30af\u30bb\u30b9\u65e5\u6642"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "\u8aac\u660e"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "\u4e88\u5b9a\u65e5\u6642 (\u73fe\u5730)"}, {"DSB_CONFIRM_DELETE_WIDGET", "\u3053\u306e\u64cd\u4f5c\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"DSB_SEARCH_DIALOG_MESG", "\u3053\u308c\u3089\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u304c\u6b21\u306e\u7d50\u679c\u3068\u4e00\u81f4\u3057\u307e\u3057\u305f: "}, {"DSB_SEARCH_DIALOG_HEADER", "\u305d\u306e\u4ed6\u306e\u691c\u7d22\u7d50\u679c"}, {"DSB_CLEARHISTORY_MESG", "\u691c\u7d22\u5c65\u6b74\u3092\u3059\u3079\u3066\u30af\u30ea\u30a2\u3057\u307e\u3059\u304b?"}, {"DSB_CLEARHISTORY_HDR", "\u691c\u7d22\u5c65\u6b74"}, {"DSB_ADDNEW_WIDGET_LBL", "\u65b0\u3057\u3044\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3092\u8ffd\u52a0: "}, {"DSB_GENSTTINGS_HDR", "\u4e00\u822c\u8a2d\u5b9a "}, {"DSB_ASSOCPROD_HDR", "\u95a2\u9023\u88fd\u54c1 "}, {"DSB_SUBALERTS_HDR", "\u30b5\u30d6 \u30a2\u30e9\u30fc\u30c8\u3092\u542b\u3080 "}, {"DSB_WIDGETTITLE_LBL", "\u30bf\u30a4\u30c8\u30eb: "}, {"DSB_NOFITEMS_LBL", "\u9805\u76ee\u6570: "}, {"DSB_REFINT_LBL", "\u66f4\u65b0\u9593\u9694: "}, {"DSB_ALERTSTRIGGERED_LBL", "\u6b21\u306e\u76f4\u524d\u306e\u671f\u9593\u5185\u306b\u751f\u6210\u3055\u308c\u305f\u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a: "}, {"DSB_NEWSUBALERTS_LBL", "\u65b0\u3057\u3044\u30b5\u30d6 \u30a2\u30e9\u30fc\u30c8: "}, {"DSB_CUSTRSSURL_LBL", "\u30ab\u30b9\u30bf\u30e0 RSS URL: "}, {"DSB_WRAPTEXT_LBL", "\u30c6\u30ad\u30b9\u30c8\u3092\u6298\u308a\u8fd4\u3059: "}, {"DSB_ADDPAGE_HDR", "\u65b0\u3057\u3044\u30da\u30fc\u30b8\u3092\u8ffd\u52a0 "}, {"DSB_ADDPAGE_LBL", "\u30da\u30fc\u30b8 \u30bf\u30a4\u30c8\u30eb: "}, {"DSB_MAPLOCATIONDLG_HDR", "\u5834\u6240\u3092\u8ffd\u52a0/\u7de8\u96c6"}, {"DSB_ADDRESS_LBL", "\u4f4f\u6240: "}, {"DSB_GEOLOCATION_LBL", "\u5730\u7406\u7684\u306a\u5834\u6240: "}, {"DSB_DELPAGE_LBL", "\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30da\u30fc\u30b8\u3002\u3053\u306e\u30da\u30fc\u30b8\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DSB_DELPAGE_HDR", "\u30da\u30fc\u30b8\u3092\u524a\u9664\u3057\u307e\u3059\u304b?"}, {"DSB_DELPAGECONFIRM_MSG", "\u3053\u306e\u30da\u30fc\u30b8\u3092\u524a\u9664\u3057\u307e\u3059\u304b?"}, {"CZ_YES", "\u306f\u3044"}, {"CZ_CERT_ISSUER", "\u8a3c\u660e\u66f8\u306e\u767a\u884c\u5143"}, {"CZ_SUB_DN", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u8b58\u5225\u540d"}, {"CZ_CERT_SN", "\u8a3c\u660e\u66f8\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"CZ_VALID_FROM", "\u6709\u52b9\u671f\u9593 (\u958b\u59cb)"}, {"CZ_EXPIRES_ON", "\u6709\u52b9\u671f\u9593 (\u7d42\u4e86)"}, {"CZ_STATUS", "\u72b6\u6cc1"}, {"CZ_REQ_GEN", "\u751f\u6210\u3055\u308c\u305f\u8981\u6c42"}, {"CZ_SUB_KEY_ID", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8 \u30ad\u30fc\u8b58\u5225\u5b50"}, {"CZ_CRL_STATUS", "CRL \u306e\u72b6\u6cc1"}, {"CZ_CRL_EXPIRES_ON", "CRL \u306e\u6709\u52b9\u671f\u9593 (\u7d42\u4e86)"}, {"CZ_CRL_REQUIRED", "CRL \u304c\u5fc5\u8981"}, {"CZ_CRL_AUTO_URL", "CRL \u306e\u81ea\u52d5\u66f4\u65b0 URL"}, {"CZ_HEADER", "\u8a3c\u660e\u66f8\u3068\u8a3c\u660e\u66f8\u8981\u6c42"}, {"CZ_NAME", "\u540d\u524d"}, {"CZ_TYPE", "\u7a2e\u5225"}, {"CZ_VALIDATED", "\u691c\u8a3c\u6e08\u307f"}, {"CZ_EXPIRES", "\u671f\u9650\u5207\u308c"}, {"CZ_DETAILS", "\u8a73\u7d30"}, {"CZ_CONFIGURE", "\u8a2d\u5b9a"}, {"CZ_DELETE_CERT", "\u3053\u306e\u8a3c\u660e\u66f8\u3092\u524a\u9664\u3059\u308b"}, {"CZ_CANT_DELETE_CERT", "\u3053\u308c\u306f\u7d44\u307f\u8fbc\u307f\u8a3c\u660e\u66f8\u3067\u3059\u3002\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CZ_EMAIL_CERT", "\u3053\u306e\u8a3c\u660e\u66f8\u3092\u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u9001\u4fe1\u3059\u308b"}, {"CZ_CANT_EMAIL_CERT", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30ed\u30fc\u30ab\u30eb\u8a3c\u660e\u66f8\u3068\u7f72\u540d\u8981\u6c42\u306e\u307f\u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u9001\u4fe1\u3067\u304d\u307e\u3059"}, {"CZ_IMPORT_CERT_CRL", "\u8a3c\u660e\u66f8\u5931\u52b9\u30ea\u30b9\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_UPLOAD_SIGNED_CERT", "\u7f72\u540d\u6e08\u307f\u8a3c\u660e\u66f8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b"}, {"CZ_CERT_SEARCH", "\u8a3c\u660e\u66f8\u306e\u691c\u7d22"}, {"CZ_CERT_SELECTED", "\u8a3c\u660e\u66f8\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002"}, {"CZ_SURE", "\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"CZ_CERTS_SELECTED", "\u6b21\u306e\u8a3c\u660e\u66f8\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002"}, {"CZ_PLZ_SELECT", "\u524a\u9664\u3059\u308b\u8a3c\u660e\u66f8\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_VIEW_STYLE", "\u8a3c\u660e\u66f8\u306e\u8868\u793a\u65b9\u6cd5"}, {"CZ_ALL_CERTS", "\u3059\u3079\u3066\u306e\u8a3c\u660e\u66f8"}, {"CZ_IMPORT_CERTS", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u3068\u8981\u6c42"}, {"CZ_BUILTIN_CERTS", "\u7d44\u307f\u8fbc\u307f\u8a3c\u660e\u66f8"}, {"CZ_INCLUDE_EXPIRED_CERTS", "\u6709\u52b9\u671f\u9650\u5207\u308c\u306e\u7d44\u307f\u8fbc\u307f\u8a3c\u660e\u66f8\u3092\u542b\u3080"}, {"CZ_IMPORT", "\u30a4\u30f3\u30dd\u30fc\u30c8..."}, {"CZ_NEW_REQ", "\u65b0\u3057\u3044\u7f72\u540d\u306e\u8981\u6c42..."}, {"CZ_DEL_CERTS", "\u8a3c\u660e\u66f8\u3092\u524a\u9664"}, {"CZ_REQUIRE_CERT", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u8a3c\u660e\u66f8\u540d\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_IMPORT_REQUIRE_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_NO_DOT", "\u8a3c\u660e\u66f8\u540d\u304c\u7121\u52b9\u3067\u3059\u3002\u540d\u524d\u306b\u306f '.' \u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CZ_IMPORT_REQUIRE_CMP", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u8a3c\u660e\u66f8\u7ba1\u7406\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_IMPORT_CERT", "\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8"}, {"CZ_IMPORT_LOCAL", "\u30ed\u30fc\u30ab\u30eb \u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u8a3c\u660e\u66f8\u3068\u79d8\u5bc6\u9375\u3092 PKCS#12 (.p12 \u307e\u305f\u306f .pfx) \u30a8\u30f3\u30b3\u30fc\u30c9\u5316\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_IMPORT_CA", "CA \u8a3c\u660e\u66f8\u3092 PKCS#7 (.p7b)\u3001PEM (.pem)\u3001\u307e\u305f\u306f DER (.der \u307e\u305f\u306f .cer) \u30a8\u30f3\u30b3\u30fc\u30c9\u5316\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_CERT_NAME", "\u8a3c\u660e\u66f8\u540d"}, {"CZ_CMP", "\u8a3c\u660e\u66f8\u7ba1\u7406\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"CZ_SEL_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_UPLOAD_CERT", "\u8a3c\u660e\u66f8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9"}, {"CZ_UPLOAD_SIGN_CERT", "\u7f72\u540d\u8981\u6c42\u306e\u305f\u3081\u306b\u7f72\u540d\u6e08\u307f\u8a3c\u660e\u66f8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9"}, {"CZ_SEL_UPLOAD_FILE", "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_FILE_FORMAT", "\u30d5\u30a1\u30a4\u30eb\u3092 PEM (.pem) \u307e\u305f\u306f DER (.der \u307e\u305f\u306f .cer) \u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"CZ_EXPORT_CERT", "\u8a3c\u660e\u66f8\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8"}, {"CZ_EXPORT_CERT_REQ", "\u8a3c\u660e\u66f8\u8981\u6c42\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8"}, {"CZ_CERT_EMAIL_CONTENT", "PKCS#10 \u8a3c\u660e\u66f8\u8981\u6c42\u304c\u751f\u6210\u6e08\u307f\u3067\u3001\u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u767b\u9332\u307e\u305f\u306f\u8a3c\u660e\u6a5f\u95a2\u306b\u767b\u9332\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30ab\u30eb \u30c7\u30a3\u30b9\u30af\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b PEM \u8a3c\u660e\u8981\u6c42\u5f62\u5f0f\u3067\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002"}, {"CZ_CHANGE_FILE_NAME", "(\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u306b\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5909\u66f4\u3067\u304d\u307e\u3059)\u3002"}, {"CZ_SPECIFY_URL", "CRL \u306e URL \u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_CRL_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b CRL \u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_INVALID_FILE", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306f\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"CZ_SPECIFY_VALID_LC", "\u6709\u52b9\u306a\u30ed\u30fc\u30ab\u30eb\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_VALID_CA", "\u6709\u52b9\u306a CA \u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_VALID_CRL", "\u6709\u52b9\u306a CRL \u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_VALID_SIGNED", "\u6709\u52b9\u306a\u7f72\u540d\u6e08\u307f\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_IMPORT_CRL", "CRL \u3092\u30a4\u30f3\u30dd\u30fc\u30c8"}, {"CZ_IMPORT_CRL_FULL", "\u8a3c\u660e\u66f8\u5931\u52b9\u30ea\u30b9\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8"}, {"CZ_IMPORT_CRL_FILE", "CRL \u3092 PEM (.pem) \u307e\u305f\u306f DER (.der \u307e\u305f\u306f .crl) \u30a8\u30f3\u30b3\u30fc\u30c9\u5316\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u76f4\u63a5\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_SEL_CRL_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b CRL \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e"}, {"CZ_AUTO_IMPORT_CRL", "HTTP \u3092\u5229\u7528\u3057\u3066 CRL \u3092\u5b9a\u671f\u7684\u306b\u81ea\u52d5\u7684\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_CRL_LOC", "CRL \u306e\u5834\u6240 (URL) \u3092\u5165\u529b\u3059\u308b"}, {"CZ_INVALIDATE_CERTS", "CRL \u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u307e\u305f\u306f\u51e6\u7406\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u3001\u8a3c\u660e\u66f8\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 \u30a2\u30bd\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u7121\u52b9\u306b\u3059\u308b"}, {"CZ_CMP_REQUIRE", "\u8a3c\u660e\u66f8\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u306b\u306f\u3001\u8a3c\u660e\u66f8\u7ba1\u7406\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u5fc5\u8981"}, {"CZ_CERT_NAME_REQUIRE", "PKCS10 \u751f\u6210\u306b\u306f\u8a3c\u660e\u66f8\u540d\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_CERT_NAME_IN_USE", "\u8a3c\u660e\u66f8\u540d\u306f\u65e2\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5225\u306e\u8a3c\u660e\u66f8\u540d\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SUB_DN_REQUIRE", "PKCS10 \u306b\u3088\u308b\u751f\u6210\u306b\u306f\u3001\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u540d\u5c5e\u6027\u304c\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_CN_TWO_CHARS", "\u56fd\u540d\u306f 2 \u6587\u5b57\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"CZ_DOMAIN_INVALID", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u4ee3\u66ff\u540d\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u7121\u52b9\u3067\u3059\u3002"}, {"CZ_IP_INVALID", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u4ee3\u66ff\u540d\u306e IP \u30a2\u30c9\u30ec\u30b9\u304c\u7121\u52b9\u3067\u3059\u3002"}, {"CZ_EMAIL_INVALID", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u4ee3\u66ff\u540d\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9\u304c\u7121\u52b9\u3067\u3059\u3002"}, {"CZ_CERT_REQ", "\u8a3c\u660e\u66f8\u7f72\u540d\u8981\u6c42"}, {"CZ_GEN_CERT_REQ", "\u8a3c\u660e\u66f8\u7f72\u540d\u8981\u6c42\u3092\u751f\u6210"}, {"CZ_CERT_ALIAS", "\u8a3c\u660e\u66f8\u30a8\u30a4\u30ea\u30a2\u30b9"}, {"CZ_COUNTRY", "\u56fd"}, {"CZ_STATE", "\u90fd\u9053\u5e9c\u770c"}, {"CZ_LOC", "\u5730\u65b9\u307e\u305f\u306f\u90e1"}, {"CZ_COMPANY", "\u4f1a\u793e\u307e\u305f\u306f\u7d44\u7e54"}, {"CZ_LOC_CITY", "\u5730\u65b9\u3001\u90fd\u5e02\u3001\u307e\u305f\u306f\u90e1"}, {"CZ_DEPT", "\u90e8\u9580"}, {"CZ_GROUP", "\u30b0\u30eb\u30fc\u30d7"}, {"CZ_TEAM", "\u30c1\u30fc\u30e0"}, {"CZ_CNAME", "\u5171\u901a\u540d"}, {"CZ_SN", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"CZ_EMAIL", "\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9"}, {"CZ_SUB_ALT_NAME", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u4ee3\u66ff\u540d (\u30aa\u30d7\u30b7\u30e7\u30f3)"}, {"CZ_DOMAIN_NAME", "\u30c9\u30e1\u30a4\u30f3\u540d"}, {"CZ_IPV4", "IPv4 \u30a2\u30c9\u30ec\u30b9"}, {"CZ_SUB_KEY_TYPE", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8 \u30ad\u30fc\u306e\u7a2e\u5225"}, {"CZ_SIG_ALGORITHM", "\u300c\u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u300d"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8 \u30ad\u30fc\u306e\u30b5\u30a4\u30ba"}, {"CZ_NO_CERTS", "\u8a3c\u660e\u66f8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"IMPORT", "\u30a4\u30f3\u30dd\u30fc\u30c8"}, {"CZ_SCEP_CONFIG", "SCEP \u306e\u8a2d\u5b9a"}, {"CZ_CSR_LIST", "CSR \u30ea\u30b9\u30c8"}, {"CZ_NO_CSR", "CSR \u306a\u3057"}, {"CZ_CHALLENGE_PWD", "\u30c1\u30e3\u30ec\u30f3\u30b8 \u30d1\u30b9\u30ef\u30fc\u30c9 (\u30aa\u30d7\u30b7\u30e7\u30f3)"}, {"CZ_CA_URL", "CA \u306e URL"}, {"CZ_REQ_COUNT", "\u8981\u6c42\u6570"}, {"CZ_POLL_INTERVAL", "\u30dd\u30fc\u30ea\u30f3\u30b0\u9593\u9694 (\u79d2)"}, {"CZ_POLL_TIME", "\u6700\u5927\u30dd\u30fc\u30ea\u30f3\u30b0\u6642\u9593 (\u79d2)"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA \u306e URL \u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CZ_GEN_CSR", "\u5229\u7528\u53ef\u80fd\u306a CSR \u304c\u3042\u308a\u307e\u305b\u3093\u3002CSR \u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u751f\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\u306f\u3059\u3079\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u30b0\u30eb\u30fc\u30d7 \u30ce\u30fc\u30c9\u4e0b\u306e\u3059\u3079\u3066\u306e\u88c5\u7f6e\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002"}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\u306f\u3059\u3079\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u88c5\u7f6e\u306e\u89aa\u30ce\u30fc\u30c9\u304b\u3089\u7d99\u627f\u3055\u308c\u307e\u3059\u3002"}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\u306f\u3059\u3079\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u30b0\u30eb\u30fc\u30d7 \u30ce\u30fc\u30c9\u304b\u3089\u89aa\u30ce\u30fc\u30c9\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002<br>\u89aa\u30ce\u30fc\u30c9 (\u9078\u629e\u3055\u308c\u305f\u30ce\u30fc\u30c9\u3068\u305d\u306e\u5b50\u30ce\u30fc\u30c9\u3092\u9664\u304f) \u4e0b\u306e\u3059\u3079\u3066\u306e\u88c5\u7f6e\u306b\u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b\u306b\u306f\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u753b\u9762\u3067\u9069\u5207\u306b\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\u306f\u3059\u3079\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u88c5\u7f6e\u304b\u3089\u89aa\u30ce\u30fc\u30c9\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002<br>\u89aa\u30ce\u30fc\u30c9\u4e0b\u306e\u3059\u3079\u3066\u306e\u88c5\u7f6e (\u9078\u629e\u3055\u308c\u305f\u88c5\u7f6e\u3092\u9664\u304f) \u306b\u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b\u306b\u306f\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u753b\u9762\u3067\u9069\u5207\u306b\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"WS_URI_HEADER", "\u30d1\u30d6\u30ea\u30c3\u30af URI"}, {"WS_URI_INSTRUCTIONS", "\u3053\u306e\u914d\u5099\u306e\u30d1\u30d6\u30ea\u30c3\u30af \u30b5\u30fc\u30d0\u540d\u3092\u5165\u529b\u3057\u307e\u3059\u3002\u3053\u306e\u540d\u524d\u306f\u3001\u3053\u306e\u30b5\u30fc\u30d0\u306e\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u4f7f\u7528\u3055\u308c\u3001\u57cb\u3081\u8fbc\u307f\u30af\u30ed\u30b9\u30ea\u30f3\u30af\u306b\u542b\u307e\u308c\u307e\u3059\u3002"}, {"WS_URI_NOTE", "\u88dc\u8db3: \u30d1\u30d6\u30ea\u30c3\u30af \u30b5\u30fc\u30d0 \u30dd\u30fc\u30c8\u306f\u3001\u30d1\u30d6\u30ea\u30c3\u30af \u30c9\u30e1\u30a4\u30f3\u304b\u3089\u306e GMS \u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002GMS \u304c\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3059\u308b\u30dd\u30fc\u30c8\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001\u300cSystem Interface > Deployment > Settings\u300d\u306b\u79fb\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"WS_DEPLOYMENT_HEADER", "GMS \u306e\u914d\u5099"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u914d\u5099\u3092\u9078\u629e\u3057\u307e\u3059\u3002"}, {"WS_DEPLOYMENT_ERROR", "\u30e9\u30a4\u30bb\u30f3\u30b9\u6e08\u307f\u306e\u914d\u5099\u3067\u3001\u73fe\u5728\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u3082\u306e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"WS_STATUS_HEADER", "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9"}, {"WS_SERVICES_ERROR", "\u3053\u306e\u914d\u5099\u306e\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"WS_DEPLOYMENTS_EMPTY", "\u914d\u5099\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u306e GMSVP \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"WS_DISTRIBUTED_HEADER", "\u5206\u6563\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9"}, {"WS_DISTRIBUTED_EMPTY", "\u3053\u306e\u30b5\u30fc\u30d0\u7528\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u5206\u6563\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u9069\u7528: "}, {"HM_APPLY_RECORDING_TASK_DESC", "\u30ec\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528: "}, {"LM_CONFIRM_DELETE_RULE", "\u9078\u629e\u3057\u305f\u30eb\u30fc\u30eb\u3092\u524a\u9664\u3057\u307e\u3059\u304b?"}, {"LM_SUCCESS_DELETE_RULE", "\u30eb\u30fc\u30eb\u306f\u6b63\u5e38\u306b\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LM_FAILURE_DELETE_RULE", "\u9078\u629e\u3057\u305f\u30eb\u30fc\u30eb\u3092\u6b63\u5e38\u306b\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_SUCCESS_UPDATE_RULE", "\u30eb\u30fc\u30eb\u306f\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LM_FAILURE_UPDATE_RULE", "\u30eb\u30fc\u30eb\u3092\u6b63\u5e38\u306b\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_DUPLICATE_STMT_NAME", "\u540c\u3058\u540d\u524d\u306e\u30eb\u30fc\u30eb\u304c\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\\n\u30eb\u30fc\u30eb\u540d\u306b\u306f\u4e00\u610f\u306e\u540d\u524d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_DESTINATION_EMPTY", "\u9001\u4fe1\u5148\u304c\u7a7a\u767d\u3067\u3059\u3002\\n\u6709\u52b9\u306a\u30a8\u30f3\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "\u9001\u4fe1\u5148\u306b\u4f7f\u7528\u3067\u304d\u308b\u6587\u5b57\u6570\u306f 256 \u6587\u5b57\u4ee5\u4e0b\u3067\u3059\u3002\\n\u6709\u52b9\u306a\u30a8\u30f3\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "\u9078\u629e\u3057\u305f\u7a2e\u5225\u306b\u9001\u4fe1\u5148\u5024\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u6709\u52b9\u306a\u30a8\u30f3\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306f\u3059\u3079\u3066\u306e\u9001\u4fe1\u5148\u306b\u5272\u308a\u5f53\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u6709\u52b9\u306a\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u307e\u305f\u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb \u30b0\u30eb\u30fc\u30d7\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "\u3053\u306e\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u9001\u4fe1\u5148\u306e\u30c9\u30e1\u30a4\u30f3\u304c\u3001\\n\u524d\u306e\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u91cd\u5927\u5ea6\u306e\u9001\u4fe1\u5148\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002\\n\\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u540c\u3058\u30c9\u30e1\u30a4\u30f3\u5185\u304b\u3089\u9078\u629e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u9078\u629e\u3057\u305f\u91cd\u5927\u5ea6\u304c\u9069\u5207\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u524d\u306b\u623b\u3063\u3066\u3001\u76ee\u7684\u306e\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u91cd\u5927\u5ea6\u3092\u9078\u629e\u3057\u307e\u3059\u3002\\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u91cd\u5927\u5ea6\u304c\u4e00\u81f4\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u9001\u4fe1\u5148\u3092\u9078\u629e\u3057\u307e\u3059\u3002"}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "\u3053\u306e\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306e\u30c9\u30e1\u30a4\u30f3\u304c\u3001\\n\u524d\u306e\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u91cd\u5927\u5ea6\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002\\n\\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u540c\u3058\u30c9\u30e1\u30a4\u30f3\u5185\u304b\u3089\u9078\u629e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u9078\u629e\u3057\u305f\u91cd\u5927\u5ea6\u304c\u9069\u5207\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u524d\u306b\u623b\u3063\u3066\u3001\u76ee\u7684\u306e\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u91cd\u5927\u8981\u5ea6\u3092\u9078\u629e\u3057\u307e\u3059\u3002\\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u91cd\u5927\u5ea6\u304c\u4e00\u81f4\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u9078\u629e\u3057\u307e\u3059\u3002"}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb \u30d0\u30fc\u72b6\u6cc1\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "\u81ea\u52d5\u30b9\u30af\u30ed\u30fc\u30eb\u72b6\u6cc1\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_READER_START_SUCCESS", "Live Monitoring Reader \u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002"}, {"LM_READER_START_FAILURE", "Live Monitoring Reader \u3092\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n (\u88dc\u8db3: \u6307\u5b9a\u3055\u308c\u305f\u8ee2\u9001\u5148\u30a2\u30c9\u30ec\u30b9\u304a\u3088\u3073\u30dd\u30fc\u30c8\u306b\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb/\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d0\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059)\u3002"}, {"LM_READER_STOP_SUCCESS", "Live Monitoring Reader \u304c\u505c\u6b62\u3057\u307e\u3057\u305f\u3002"}, {"LM_READER_STOP_FAILURE", "Live Monitoring Reader \u3092\u505c\u6b62\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_EC_DISABLED", "Syslog \u306e\u8ee2\u9001\u306f\u73fe\u5728\u7121\u52b9\u3067\u3059\u3002<br>Syslog \u306f\u3001\u76e3\u8996\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30a4\u30d9\u30f3\u30c8 \u30de\u30cd\u30fc\u30b8\u30e3 \u30b5\u30fc\u30d3\u30b9\u306b\u8ee2\u9001\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<br>Syslog \u306e\u8ee2\u9001\u3092\u6709\u52b9\u306b\u3057\u3066\u76e3\u8996\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001\u4e0a\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb \u30d0\u30fc\u306e\u300c\u8a2d\u5b9a\u300d\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_READER_NO_ALERT_MSG", "Reader \u306b\u65b0\u3057\u3044\u30a2\u30e9\u30fc\u30c8\u306f\u5c4a\u3044\u3066\u3044\u307e\u305b\u3093\u3002<br>\u88dc\u8db3: \u554f\u984c\u304c\u89e3\u6d88\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u300c\u76e3\u8996\u8a2d\u5b9a\u300d\u3068\u88c5\u7f6e\u306e Syslog \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_READER_STOPPED_MSG", "Reader \u306f\u73fe\u5728\u505c\u6b62\u3057\u3066\u3044\u307e\u3059\u3002\u4e0a\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb \u30d0\u30fc\u306e\u300c\u8d77\u52d5\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001Reader \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "\u88c5\u7f6e\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u8a31\u53ef\u3055\u308c\u307e\u305b\u3093\u3002<br>\u88c5\u7f6e\u304b\u3089\u8ee2\u9001\u3055\u308c\u308b Syslog \u3092\u76e3\u8996\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u7ba1\u7406\u8005\u306b\u9023\u7d61\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_READER_ERROR_MSG", "\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002<br>Live Monitoring Reader \u306e\u53ce\u96c6\u51e6\u7406\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"LM_READER_SOCKET_ERROR_MSG", "\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002<br>Live Monitoring Reader \u306e\u8d77\u52d5\u6642\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002<br>\u4f8b\u5916\u306e\u8a73\u7d30: "}, {"LM_FAILURE_UPDATE_SETTINGS", "\u30e9\u30a4\u30d6\u76e3\u8996\u306e\u8a2d\u5b9a\u3092\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_SUCCESS_UPDATE_SETTINGS", "\u30e9\u30a4\u30d6\u76e3\u8996\u306e\u8a2d\u5b9a\u306f\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LM_WARN_ENABLE_EC", "\u30a4\u30d9\u30f3\u30c8 \u30de\u30cd\u30fc\u30b8\u30e3\u306f\u3001Syslog \u30b3\u30ec\u30af\u30bf\u304b\u3089\u8ee2\u9001\u3055\u308c\u308b Syslog \u3092\u76e3\u8996\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e Syslog \u306f\u3001\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306b\u57fa\u3065\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b\u30a8\u30f3\u30b8\u30f3\u306b\u9001\u4fe1\u3055\u308c\u307e\u3059\u3002\\n\\n\u88dc\u8db3:\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u3001\u914d\u5099\u5185\u306e\u3059\u3079\u3066\u306e Syslog \u30b3\u30ec\u30af\u30bf \u30b5\u30fc\u30d3\u30b9\u306b\u3088\u3063\u3066\u53d7\u4fe1\u3055\u308c\u305f Syslog \u304c\u4e2d\u592e\u30a4\u30d9\u30f3\u30c8 \u30de\u30cd\u30fc\u30b8\u30e3 \u30b5\u30fc\u30d3\u30b9\u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u3059\u3079\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u306e\u305f\u3081\u306b Syslog \u30b3\u30ec\u30af\u30bf\u306b\u3088\u3063\u3066\u8907\u88fd\u3055\u308c\u308b\u305f\u3081\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5168\u4f53\u3067 Syslog \u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u5897\u52a0\u3057\u307e\u3059\u3002"}, {"LM_STMT_CHANGED_MSG_1", "\u9078\u629e\u3057\u305f\u30eb\u30fc\u30eb\u306b\u5909\u66f4\u3092\u52a0\u3048\u307e\u3057\u305f\u3002"}, {"LM_STMT_CHANGED_MSG_2", "\\n\u524d\u306e\u753b\u9762 (\u300c\u30eb\u30fc\u30eb \u30ea\u30b9\u30c8\u300d\u30da\u30fc\u30b8) \u306b\u623b\u308b\u3068\u3001\u5909\u66f4\u5185\u5bb9\u304c\u5931\u308f\u308c\u307e\u3059\u3002\u300c\u30eb\u30fc\u30eb \u30ea\u30b9\u30c8\u300d\u30da\u30fc\u30b8\u306b\u623b\u308b\u5834\u5408\u306f\u300cOK\u300d\u3092\u3001\u30eb\u30fc\u30eb\u306e\u7de8\u96c6\u3092\u7d9a\u884c\u3059\u308b\u5834\u5408\u306f\u300c\u30ad\u30e3\u30f3\u30bb\u30eb\u300d\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002"}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "\u30c9\u30c3\u30ad\u30f3\u30b0\u72b6\u6cc1\u3092\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "\u3053\u306e\u753b\u9762\u3067\u66f4\u65b0\u3092\u884c\u3046\u305f\u3081\u306e\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"LM_DELETE_STMT_EMPTY", "\u524a\u9664\u3059\u308b\u30eb\u30fc\u30eb\u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_STMT_RULE_EMPTY", "\u30eb\u30fc\u30eb\u7a2e\u5225\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\\n\u30eb\u30fc\u30eb\u7a2e\u5225\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_STMT_RULE_DUPLICATE", "\u540c\u3058\u30eb\u30fc\u30eb\u7a2e\u5225\u3068\u540c\u3058\u30a8\u30c7\u30a3\u30bf \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3064\u30eb\u30fc\u30eb\u304c\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\\n\u3053\u306e\u30eb\u30fc\u30eb\u306b\u4e00\u610f\u306e\u30eb\u30fc\u30eb \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "Reader \u306e\u8ee2\u9001\u30dd\u30fc\u30c8\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002Reader \u304c\u6b63\u5e38\u306b\u518d\u8d77\u52d5\u3059\u308b\u307e\u3067\u306b 2 \uff5e 3 \u79d2\u304b\u304b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002"}, {"LM_NO_RULE_EDITABLE", "\u9078\u629e\u3057\u305f\u30b0\u30eb\u30fc\u30d7\u306b\u306f\u7de8\u96c6\u53ef\u80fd\u306a\u30eb\u30fc\u30eb\u7a2e\u5225\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u5225\u306e\u30b0\u30eb\u30fc\u30d7/\u30eb\u30fc\u30eb\u7a2e\u5225\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_DISABLE_STMT_EMPTY", "\u6709\u52b9\u5316/\u7121\u52b9\u5316\u64cd\u4f5c\u7528\u306e\u30eb\u30fc\u30eb\u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_SUCCESS_DISABLE_RULE", "\u30eb\u30fc\u30eb\u306e\u6709\u52b9\u5316/\u7121\u52b9\u5316\u306f\u6b63\u5e38\u306b\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LM_FAILURE_DISABLE_RULE", "\u9078\u629e\u3057\u305f\u30eb\u30fc\u30eb\u3092\u6b63\u5e38\u306b\u6709\u52b9/\u7121\u52b9\u306b\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_EDIT_RULE_MSG_1", "\u6b21\u306e\u30eb\u30fc\u30eb\u306e\u7de8\u96c6\u3092\u9078\u629e\u3057\u307e\u3057\u305f:\\n"}, {"LM_EDIT_RULE_MSG_2", "\\n\u9078\u629e\u3057\u305f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306f\u3069\u308c\u3082\u7de8\u96c6\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n\u5225\u306e\u30eb\u30fc\u30eb\u3092\u9078\u629e\u3057\u3066\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_EDIT_RULE_MSG_3", "\\n\u9078\u629e\u3057\u305f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306e\u3046\u3061\u3001* \u304c\u4ed8\u3044\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306f\u7de8\u96c6\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n\u6b8b\u308a\u306e\u30eb\u30fc\u30eb\u306e\u7de8\u96c6\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"LM_DELETE_RULE_MSG_1", "\u6b21\u306e\u30eb\u30fc\u30eb\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f:\\n"}, {"LM_DELETE_RULE_MSG_2", "\\n\u9078\u629e\u3057\u305f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306f\u3069\u308c\u3082\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n\u5225\u306e\u30eb\u30fc\u30eb\u3092\u9078\u629e\u3057\u3066\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_DELETE_RULE_MSG_3", "\\n\u9078\u629e\u3057\u305f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306e\u3046\u3061\u3001* \u304c\u4ed8\u3044\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n\u6b8b\u308a\u306e\u30eb\u30fc\u30eb\u306e\u524a\u9664\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"LM_DELETE_RULE_MSG_4", "\\n\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"MASKED_LIVEMONITOR_MESSAGE", "\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8868\u793a\u304c\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u5f37\u5236\u30dd\u30ea\u30b7\u30fc\u306b\u57fa\u3065\u3044\u3066\u6291\u5236\u3055\u308c\u307e\u3057\u305f\u3002"}, {"MASKED_ADDITIONAL_INFORMATION", "\u8ffd\u52a0\u306e\u60c5\u5831\u306e\u8868\u793a\u304c\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u5f37\u5236\u30dd\u30ea\u30b7\u30fc\u306b\u57fa\u3065\u3044\u3066\u6291\u5236\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DSB_NONENGFW_ALERT_TITLE", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3\u8b66\u544a!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "GMS \u306f\u82f1\u8a9e\u4ee5\u5916\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b SonicOS \u88c5\u7f6e\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002"}, {"DSB_NONENGFW_ALERT_MSGPART2", "\u82f1\u6570\u5b57\u4ee5\u5916\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304a\u3088\u3073\u30dd\u30ea\u30b7\u30fc\u306f\u3001GMS \u306e\u30e6\u30fc\u30b6 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u305d\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304a\u3088\u3073\u30dd\u30ea\u30b7\u30fc\u306e\u5909\u66f4\u304a\u3088\u3073\u8ffd\u52a0\u306f\u3001\u671f\u5f85\u3059\u308b\u7d50\u679c\u306b\u306a\u3089\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"}, {"SYSLOGTAIL_STARTED", "Syslog Reader (Syslog \u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u7528) \u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002"}, {"SYSLOGTAIL_START_FAILED", "Syslog Reader \u304c\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002Syslog \u306e\u8ee2\u9001\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002&nbsp;&nbsp;(\u88dc\u8db3: \u6307\u5b9a\u3055\u308c\u305f\u8ee2\u9001\u5148\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8\u306f\u3001Console/Web Server \u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093)\u3002"}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog Reader (Syslog \u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u7528) \u306f\u65e2\u306b\u52d5\u4f5c\u3057\u3066\u3044\u307e\u3059\u3002\u5909\u66f4\u306f\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f"}, {"SYSLOGTAIL_STOPPED", "Syslog Reader (Syslog \u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u7528) \u304c\u505c\u6b62\u3057\u307e\u3057\u305f\u3002"}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog Reader (Syslog \u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u7528) \u306f\u65e2\u306b\u505c\u6b62\u3057\u3066\u3044\u307e\u3059\u3002\u5909\u66f4\u306f\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "Reader \u304c\u53d7\u4fe1\u3057\u305f\u65b0\u3057\u3044 Syslog \u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(Reader \u306f\u7d99\u7d9a\u3057\u3066 Syslog \u306e\u53ce\u96c6\u3092\u8a66\u307f\u307e\u3059)\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(\u984c\u304c\u3042\u308b\u5834\u5408\u306f\u3001Syslog Reader \u306e\u8a2d\u5b9a\u3068\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044)\u3002"}, {"SYSLOGTAIL_CONFIG_CHECK", "Syslog Reader \u306e\u8a2d\u5b9a\u3068\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "Syslog \u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER", "\u7d50\u679c\u306e\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u306b\u306f\u3001\u30d5\u30a3\u30eb\u30bf\u6587\u5b57\u5217\u3092\u5de5\u592b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "((\u88dc\u8db3: \u7d50\u679c\u306e\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u306b\u306f\u3001<b>AND</b> \u307e\u305f\u306f <b>OR</b> \u3092\u6587\u5b57\u5217\u9593\u3067\u4f7f\u7528\u3057\u307e\u3059)\u3002"}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Syslog Reader \u306f\u73fe\u5728\u505c\u6b62\u3057\u3066\u3044\u307e\u3059"}, {"SYSLOGTAIL_START", "Syslog Reader \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SYSLOGTAIL_ERROR", "\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"SYSLOGTAIL_ERROR_MESSAGE", "Syslog \u306e\u53ce\u96c6\u51e6\u7406\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Syslog \u306e\u8ee2\u9001\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Syslog \u306e\u8ee2\u9001\u306e\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a\u3057\u305f\u3089\u3001Syslog Reader \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"MASKED_SYSLOG_MESSAGE", "\u9069\u7528\u3055\u308c\u308b\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc \u30dd\u30ea\u30b7\u30fc\u306b\u57fa\u3065\u304d\u3001Syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6b8b\u308a\u306f\u8868\u793a\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u30de\u30b9\u30af\u3055\u308c\u3066\u3044\u307e\u3059"}, {"EVENT_ALERTS_SEARCH", "\u30a2\u30e9\u30fc\u30c8\u306e\u691c\u7d22"}, {"EVENT_ALERTS_DELETE", "\u30a2\u30e9\u30fc\u30c8\u3092\u524a\u9664"}, {"EVENT_ALERTS_ENABLE_DISABLE", "\u30a2\u30e9\u30fc\u30c8\u3092\u6709\u52b9\u5316/\u7121\u52b9\u5316"}, {"EVENT_ALERTS_ADD", "\u30a2\u30e9\u30fc\u30c8\u3092\u8ffd\u52a0"}, {"EVENT_ALERTS_HEADER", "\u8b66\u544a"}, {"EVENT_ALERTS_ALERT_NAME", "\u540d\u524d"}, {"EVENT_ALERTS_ALERT_TYPE", "\u30a2\u30e9\u30fc\u30c8\u7a2e\u5225"}, {"EVENT_ALERTS_INTERVAL", "\u9593\u9694"}, {"EVENT_ALERTS_DEST_SCHED", "\u5b9b\u5148/\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb"}, {"EVENT_ALERTS_ENABLED", "\u6709\u52b9"}, {"EVENT_ALERTS_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"EVENT_ALERTS_CONFIGURE", "\u8a2d\u5b9a"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "\u30a2\u30e9\u30fc\u30c8\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f"}, {"DTF_ANY", "\u968f\u6642"}, {"DTF_ADD", "\u88c5\u7f6e\u3092\u8ffd\u52a0"}, {"DTF_EXECUTE", "\u5b9f\u884c"}, {"DTF_ENABLED", "\u6709\u52b9"}, {"DTF_SEARCH", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u691c\u7d22"}, {"DTF_NOT_FOUND", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"DTF_DT", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af"}, {"DTF_DESC", "\u8aac\u660e"}, {"DTF_TOU", "\u88c5\u7f6e\u7a2e\u5225"}, {"DTF_DURING", "\u30bf\u30b9\u30af\u4f5c\u6210\u671f\u9593:"}, {"DTF_NO_DTS", "\u5b9f\u884c\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"DTF_EXEC", "\u3053\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002"}, {"DTF_NO_DISABLE", "\u3053\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306f\u7121\u52b9\u5316\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DTF_NO_EXEC", "\u3053\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306f\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DTF_SEL_UNITS", "\u88c5\u7f6e\u3092\u9078\u629e"}, {"DTF_EXEC_METHOD", "\u5b9f\u884c\u65b9\u6cd5"}, {"DTF_ATLEAST_ONE", "\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u88c5\u7f6e\u3092\u6700\u4f4e 1 \u53f0\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"DTF_EXEC_ALL", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u3092\u30b7\u30b9\u30c6\u30e0\u306e\u5168\u88c5\u7f6e\u3067\u5b9f\u884c\u3059\u308b"}, {"DTF_EXEC_FOLL", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u3092\u6b21\u306e\u88c5\u7f6e\u3067\u5b9f\u884c\u3059\u308b"}, {"DTF_REAPPLY_1", "\u524d\u56de\u9069\u7528\u5916\u306e\u5834\u5408\u306b\u306e\u307f\u5b9f\u884c\u3059\u308b"}, {"DTF_REAPPLY_2", "\u9078\u629e\u3057\u305f\u88c5\u7f6e\u3067\u524d\u56de\u306f\u9069\u7528\u3055\u308c\u306a\u304b\u3063\u305f\u30bf\u30b9\u30af\u3060\u3051\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002"}, {"DTF_REAPPLY_3", "\u305d\u306e\u88c5\u7f6e\u3067\u5b9f\u884c\u6e08\u307f\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002"}, {"DTF_EXEC_1", "\u524d\u56de\u9069\u7528\u6e08\u307f\u3067\u3082\u5b9f\u884c\u3059\u308b"}, {"DTF_EXEC_2", "\u9078\u629e\u3057\u305f\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u304c\u3001\u524d\u56de\u306b\u9069\u7528\u3055\u308c\u305f\u30bf\u30b9\u30af\u3082\u542b\u3081\u3001\u9078\u629e\u3057\u305f\u88c5\u7f6e\u3067\u518d\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002"}, {"DTF_ENABLE_SUCCESS", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306e\u9078\u629e\u304c\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DTF_ENABLE_FAIL", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306e\u9078\u629e\u3092\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"DTF_SCHEDULE_SUCCESS", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306e\u5b9f\u884c\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u304c\u6b63\u5e38\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DTF_SCHEDULE_FAIL", "\u9078\u629e\u3055\u308c\u305f\u30bf\u30b9\u30af\u304c\u9069\u7528\u53ef\u80fd\u3067\u306f\u306a\u3044\u3001\u307e\u305f\u306f\u65e2\u306b\u5b9f\u884c\u6e08\u307f\u306e\u305f\u3081\u3001\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002."}, {"AUTOASSIGN_AGENT_HEADER", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5272\u308a\u5f53\u3066\u8a2d\u5b9a"}, {"AUTOASSIGN_AGENT_MSG_1", " \u7ba1\u7406\u3001\u30ec\u30dd\u30fc\u30c8\u3001\u304a\u3088\u3073\u76e3\u8996\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u5c02\u7528\u306e\u30e6\u30cb\u30c3\u30c8\u304c\u5fc5\u8981\u3067\u3059\u3002\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u81ea\u52d5\u5272\u308a\u5f53\u3066\u306f\u3001\u30e6\u30cb\u30c3\u30c8\u3092\u5747\u7b49\u306b\u914d\u5206\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u3088\u308a\u9069\u5207\u306a\u5272\u308a\u5f53\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u6700\u9069\u5316\u3001\u5341\u5206\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u9ad8\u3044\u53ef\u7528\u6027\u3092\u78ba\u5b9f\u306a\u3082\u306e\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u6a5f\u80fd\u306f\u3001\u300c\u30e6\u30cb\u30c3\u30c8\u306e\u8ffd\u52a0\u300d\u64cd\u4f5c\u4e2d\u306b\u9078\u629e\u3057\u305f\u7ba1\u7406\u30e2\u30fc\u30c9\u306b\u57fa\u3065\u3044\u3066\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "\u30e6\u30fc\u30b6\u306f\u300c<i>\u30e6\u30cb\u30c3\u30c8\u306e\u5909\u66f4</i>\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u304b\u3089\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u518d\u5ea6\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}, {"AUTOASSIGN_AGENT_MSG_2", "\u30e6\u30fc\u30b6\u306f\u300c<i>\u30e6\u30cb\u30c3\u30c8\u306e\u5909\u66f4</i>\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u304b\u3089\u3001\u307e\u305f\u306f\u300c<i>\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u518d\u5272\u308a\u5f53\u3066</i>\u300d\u64cd\u4f5c\u3067\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u518d\u5ea6\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\u300c\u65e2\u5b58\u306e\u30c8\u30f3\u30cd\u30eb\u300d\u307e\u305f\u306fLAN\u3001SSL \u7ba1\u7406\u30e2\u30fc\u30c9\u306e\u307f:\u81ea\u52d5\u5272\u308a\u5f53\u3066\u304c\u9069\u7528\u3055\u308c\u308b\u306e\u306f\u3001\u300c<i>\u65e2\u5b58\u306e\u30c8\u30f3\u30cd\u30eb</i>\u300d\u30e2\u30fc\u30c9\u3068\u300c<i>SSL</i>\u300d\u30e2\u30fc\u30c9\u3060\u3051\u3067\u3059\u304c\u3001\u300c<i>\u7ba1\u7406\u30c8\u30f3\u30cd\u30eb</i>\u300d\u306e\u624b\u52d5\u5272\u308a\u5f53\u3066\u304c\u5fc5\u8981\u306b\u306a\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002"}, {"AUTOASSIGN_AGENT_MSG_ALL", "\u3059\u3079\u3066\u306e\u7ba1\u7406\u30e2\u30fc\u30c9:\u81ea\u52d5\u5272\u308a\u5f53\u3066\u306f\u3059\u3079\u3066\u306e\u30e2\u30fc\u30c9\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u300c<i>\u7ba1\u7406\u30c8\u30f3\u30cd\u30eb</i>\u300d\u30e2\u30fc\u30c9\u3067\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u8a2d\u5b9a\u3092\u30de\u30cd\u30fc\u30b8\u30c9 \u30e6\u30cb\u30c3\u30c8\u4e0a\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "\u81ea\u52d5\u5272\u308a\u5f53\u3066\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3057\u305f"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "\u81ea\u52d5\u5272\u308a\u5f53\u3066\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u7121\u52b9\u306b\u306a\u308a\u307e\u3057\u305f"}, {"AUTOASSIGN_AGENT_ENABLE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u81ea\u52d5\u5272\u308a\u5f53\u3066\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL \u304a\u3088\u3073\u65e2\u5b58\u306e\u30c8\u30f3\u30cd\u30eb\u307e\u305f\u306f LAN \u306e\u4f7f\u7528"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "\u3059\u3079\u3066"}, {"TEMPLATE_SETTINGS_TITLE", "[JP]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[JP]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[JP]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[JP]Apply Default Configuration"}, {"CUI_NO_FS", "\u30d5\u30ed\u30fc \u30b5\u30fc\u30d0\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"LOGCONFIG_SECTITLE_2", "\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8"}, {"LOGCONFIG_DELLABEL", "\u6b21\u306e\u65e5\u4ed8\u3088\u308a\u53e4\u3044\u30ed\u30b0\u3092\u524a\u9664:"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u65e5"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u671f\u9593"}, {"LOGCONFIG_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "\u30a8\u30e9\u30fc:\u8a2d\u5b9a\u3092\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u5909\u66f4\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\u30ed\u30b0 \u30d5\u30a1\u30a4\u30eb\u306e\u6700\u5927\u6570\u3092\u5909\u66f4\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "\u30a2\u30fc\u30ab\u30a4\u30d6 "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " \u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8"}, {"APPLOG_CONFIG_DELETE_MSG_1", "\u30ed\u30b0\u306f\u3001\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306e\u8ffd\u8de1\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306f\u3001\u30e6\u30fc\u30b6\u304c\u958b\u59cb\u3057\u305f\u52d5\u4f5c\u306b\u76f4\u63a5\u7684\u307e\u305f\u306f\u9593\u63a5\u7684\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u304b\u3001\u30b7\u30b9\u30c6\u30e0\u304c\u958b\u59cb\u3057\u305f\u52d5\u4f5c\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30ed\u30b0\u306f\u3001\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u306e\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3060\u3051\u3067\u306a\u304f\u3001\u76e3\u67fb\u8a3c\u8de1\u304a\u3088\u3073\u30b3\u30f3\u30d7\u30e9\u30a4\u30a2\u30f3\u30b9\u306e\u305f\u3081\u306b\u3082\u91cd\u8981\u3067\u3059\u3002"}, {"APPLOG_CONFIG_DELETE_MSG_2", "\u30b7\u30b9\u30c6\u30e0\u306b\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u3063\u305f\u30ed\u30b0\u306f\u3001\u624b\u52d5\u3067\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f 1 \u56de\u306e\u52d5\u4f5c\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u524a\u9664\u7528\u306b\u9078\u629e\u3057\u305f\u65e5\u4ed8\u306b\u57fa\u3065\u3044\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 "}, {"APPLOG_CONFIG_DELETE_MSG_21", "\u3053\u306e\u753b\u9762\u306e\u524a\u9664\u52d5\u4f5c\u3067\u306f\u3001\u5909\u66f4\u547d\u4ee4\u3068\u95a2\u4fc2\u306e\u306a\u3044\u30ed\u30b0\u306e\u307f\u304c\u6d88\u53bb\u3055\u308c\u307e\u3059\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "\u30b7\u30b9\u30c6\u30e0\u306b\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u3063\u305f\u30ed\u30b0\u306f\u3001CSV/HTML \u5f62\u5f0f\u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30aa\u30d5\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a2\u30fc\u30ab\u30a4\u30d6 \u30d7\u30ed\u30bb\u30b9\u3067\u306f\u3001\u6700\u521d\u306b\u300c\"\u30ed\u30b0\u306e\u30a2\u30fc\u30ab\u30a4\u30d6 \u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\"\u300d\u306b\u5f93\u3063\u3066\u30c7\u30fc\u30bf\u304c <i>archivedLogs</i> \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30a2\u30fc\u30ab\u30a4\u30d6\u3055\u308c\u3001\u6b21\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "\u30a2\u30fc\u30ab\u30a4\u30d6\u52d5\u4f5c\u3067\u306f\u3001\u5909\u66f4\u547d\u4ee4\u3068\u95a2\u4fc2\u306e\u3042\u308b\u30ed\u30b0\u3082\u542b\u3081\u3001\u3059\u3079\u3066\u306e\u30ed\u30b0\u304c\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u304c\u3001\u524a\u9664\u3067\u306f\u3001\u5909\u66f4\u547d\u4ee4\u3068\u95a2\u4fc2\u306e\u3042\u308b\u30a8\u30f3\u30c8\u30ea\u306e\u6d88\u53bb\u306f\u30b9\u30ad\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "\u88dc\u8db3:\u30a6\u30a3\u30f3\u30c9\u30a6\u4ee5\u5916\u306e\u914d\u5099\u306e\u5834\u5408:\u30a2\u30fc\u30ab\u30a4\u30d6\u3057\u305f\u30ed\u30b0 \u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30ab\u30eb \u30c9\u30e9\u30a4\u30d6\u306b\u30aa\u30d5\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f\u3001\u300c\u88c5\u7f6e > \u30b7\u30b9\u30c6\u30e0 > \u30d5\u30a1\u30a4\u30eb \u30de\u30cd\u30fc\u30b8\u30e3\u300d\u753b\u9762\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002"}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "\u30a2\u30fc\u30ab\u30a4\u30d6\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "\u4fdd\u6301 "}, {"APPLOG_CONFIG_ARCHIVE_For", " \u671f\u9593:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "\u6700\u5927\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8 \u30d5\u30a1\u30a4\u30eb:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "\u30a2\u30fc\u30ab\u30a4\u30d6\u5f62\u5f0f:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "\u30a2\u30fc\u30ab\u30a4\u30d6\u306e\u8a2d\u5b9a"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6b63\u3057\u304f\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "\u6b21\u306b\u5bfe\u3059\u308b GMS \u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30a2\u30fc\u30ab\u30a4\u30d6:"}, {"WF_SETTINGS_TITLE", "\u8a2d\u5b9a"}, {"WF_SETTINGS_MSG_1", "\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u30011 \u53f0\u307e\u305f\u306f\u8907\u6570\u306e\u88c5\u7f6e\u306b\u5bfe\u3057\u3066\u884c\u3046\u8a2d\u5b9a\u5909\u66f4\u3092\u76e3\u8996\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u63d0\u6848\u3055\u308c\u305f\u5909\u66f4\u306b\u5bfe\u3059\u308b\u30ec\u30d3\u30e5\u30fc\u306e\u5b9f\u884c\u3068\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u306e\u63d0\u4f9b\u3001\u3059\u3079\u3066\u306e\u52d5\u4f5c\u306b\u5bfe\u3059\u308b\u30aa\u30fc\u30ca\u30fc\u30b7\u30c3\u30d7\u306e\u5272\u308a\u5f53\u3066\u3068\u8aac\u660e\u8cac\u4efb\u306e\u6307\u5b9a\u3001\u3055\u3089\u306b\u76e3\u67fb\u7528\u306e\u8a73\u7d30\u306a\u30ed\u30b0\u8a18\u9332\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u306f\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3042\u308a\u3001\u88c5\u7f6e\u306b\u5bfe\u3057\u3066\u884c\u308f\u308c\u305f\u5909\u66f4\u3092\u8868\u793a\u3057\u305f\u308a\u3001\u88c5\u7f6e\u306b\u5bfe\u5fdc\u3059\u308b\u5909\u66f4\u3092\u753b\u9762\u4e0a\u3067\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u30d7\u30ec\u30d3\u30e5\u30fc\u3057\u305f\u308a\u3001\u8907\u6570\u306e\u5909\u66f4\u547d\u4ee4\u3092\u6bd4\u8f03\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 "}, {"WF_SETTINGS_MSG_2", "\u88dc\u8db3:\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u3068\u627f\u8a8d\u7ba1\u7406\u306f\u30c9\u30e1\u30a4\u30f3 \u30ec\u30d9\u30eb\u3067\u6709\u52b9/\u7121\u52b9\u306b\u3067\u304d\u307e\u3059\u3002\u627f\u8a8d\u7ba1\u7406\u3092\u7121\u52b9\u306b\u3057\u3066\u3082\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u306f\u5f71\u97ff\u3092\u53d7\u3051\u307e\u305b\u3093\u304c\u3001\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u3092\u7121\u52b9\u306b\u3059\u308b\u3068\u627f\u8a8d\u7ba1\u7406\u3082\u7121\u52b9\u306b\u306a\u308a\u307e\u3059\u3002"}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u3066\u3082\u3001\u4ee5\u4e0b\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5b9f\u969b\u306b\u3042\u308b\u88c5\u7f6e\u4e0a\u3067\u3057\u304b\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u9069\u7528\u3055\u308c\u307e\u305b\u3093\u3002 "}, {"WF_SETTINGS_ENABLE_COM", "\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"WF_SETTINGS_ENABLE_WF", "\u627f\u8a8d\u7ba1\u7406\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "\u5909\u66f4\u547d\u4ee4\u306e\u65e2\u5b9a\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u8a2d\u5b9a"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "\u5909\u66f4\u547d\u4ee4\u306f\u3001\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u306b\u57fa\u3065\u3044\u3066\u5b9f\u884c\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u9001\u4fe1\u6642\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u65e2\u5b9a\u5024\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u65b0\u3057\u3044\u5909\u66f4\u547d\u4ee4\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u3001\u9078\u629e\u3057\u305f\u8a2d\u5b9a\u304c\u81ea\u52d5\u7684\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb - "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "\u624b\u52d5\u3067\u5b9f\u884c\u3059\u308b"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "\u627f\u8a8d\u76f4\u5f8c"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "\u6307\u5b9a\u65e5\u6642"}, {"WF_CONFIG_DELETE_MSG_1", "\u30ed\u30b0\u306f\u3001\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306e\u8ffd\u8de1\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306f\u3001\u30e6\u30fc\u30b6\u304c\u958b\u59cb\u3057\u305f\u52d5\u4f5c\u306b\u76f4\u63a5\u7684\u307e\u305f\u306f\u9593\u63a5\u7684\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u304b\u3001\u30b7\u30b9\u30c6\u30e0\u304c\u958b\u59cb\u3057\u305f\u52d5\u4f5c\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30ed\u30b0\u306f\u3001\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u306e\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3060\u3051\u3067\u306a\u304f\u3001\u76e3\u67fb\u8a3c\u8de1\u304a\u3088\u3073\u30b3\u30f3\u30d7\u30e9\u30a4\u30a2\u30f3\u30b9\u306e\u305f\u3081\u306b\u3082\u91cd\u8981\u3067\u3059\u3002"}, {"WF_CONFIG_DELETE_MSG_2", "\u901a\u5e38\u3001 "}, {"WF_CONFIG_DELETE_MSG_3", " \u3088\u308a\u9577\u304f\u7d4c\u904e\u3057\u3001\u30b7\u30b9\u30c6\u30e0\u306b\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u3063\u305f\u5909\u66f4\u547d\u4ee4\u306f\u3001\u624b\u52d5\u3067\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f 1 \u56de\u306e\u52d5\u4f5c\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u524a\u9664\u7528\u306b\u9078\u629e\u3057\u305f\u65e5\u4ed8\u306b\u57fa\u3065\u3044\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u753b\u9762\u306e\u524a\u9664\u52d5\u4f5c\u3067\u306f\u3001\u5909\u66f4\u547d\u4ee4\u3068\u95a2\u4fc2\u306e\u3042\u308b\u30c7\u30fc\u30bf\u3001\u30bf\u30b9\u30af\u3001\u30ed\u30b0\u306e\u307f\u304c\u6d88\u53bb\u3055\u308c\u307e\u3059\u3002"}, {"APPLOG_CONFIG_DEL_DATA", "\u6b21\u306e\u5834\u6240\u306e\u30c7\u30fc\u30bf\u3092\u524a\u9664:"}, {"FA_UNIT_STATUS_HEADER", "\u30e6\u30cb\u30c3\u30c8\u306e\u8a73\u7d30"}, {"FA_UNIT_STATUS_SERIAL", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"FA_UNIT_STATUS_NODE_NAME", "\u30e6\u30cb\u30c3\u30c8\u540d"}, {"FA_UNIT_STATUS_MODEL", "\u30e2\u30c7\u30eb"}, {"FA_UNIT_STATUS_FIRMWARE", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"FA_UNIT_STATUS_IP", "\u7ba1\u7406 IP"}, {"FA_UNIT_STATUS_LICENSE", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u53ef\u8996\u5316"}, {"FA_GROUP_STATUS_HEADER1", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u8a73\u7d30"}, {"FA_GROUP_STATUS_HEADER2", "\u30d5\u30ed\u30fc\u5831\u544a\u30e9\u30a4\u30bb\u30f3\u30b9\u72b6\u6cc1"}, {"FA_GROUP_STATUS_NO_DATA", "\u5229\u7528\u53ef\u80fd\u306a\u30c7\u30fc\u30bf\u304c\u3042\u308a\u307e\u305b\u3093"}, {"FA_LICENSE_NOT_AVAILABLE", "\u672a\u8cfc\u8aad"}, {"FA_LICENSE_AVAILABLE", "\u8cfc\u8aad\u6e08"}, {"FA_LICENSE_FREE_TRAIL", "\u7121\u6599\u30c8\u30e9\u30a4\u30a2\u30eb"}, {"FA_LICENSE_EXPIRED", "\u671f\u9650\u5207\u308c"}, {"FA_GROUP_FIREWALL_COUNT", "\u30b7\u30b9\u30c6\u30e0\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"FA_FLOW_IP1", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1"}, {"FA_FLOW_IP2", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2"}, {"FA_FLOW_AGENT_STATUS", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u72b6\u6cc1"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u8a2d\u5b9a"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN \u30c8\u30f3\u30cd\u30eb"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "\u30ea\u30e2\u30fc\u30c8 IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "\u30c7\u30fc\u30bf\u4fdd\u6301 (\u65e5\u6570)"}, {"FA_FLOW_FORWARDER_IP", "\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc"}, {"FA_FLOWS_COLLECTED", "\u53ce\u96c6\u3055\u308c\u305f\u30d5\u30ed\u30fc"}, {"FA_DISK_ALLOCATED", "\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30c7\u30a3\u30b9\u30af"}, {"FA_DISK_USED", "\u4f7f\u7528\u4e2d\u306e\u30c7\u30a3\u30b9\u30af"}, {"FA_FLOW_STATUS", "\u72b6\u6cc1"}, {"FA_NO_AGENT", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u305b\u3093"}, {"FA_MODELSUPPORT", "\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\u3001\u30d5\u30ed\u30fc\u5831\u544a\u306f\u6709\u52b9\u5316\u3055\u308c\u307e\u305b\u3093"}, {"FA_FIRMWARESUPPORT", "\u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001\u30d5\u30ed\u30fc\u5831\u544a\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093"}, {"FA_LICENSESUPPORT", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u53ef\u8996\u5316\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u304c\u3042\u308a\u307e\u305b\u3093"}, {"FA_HEADING", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"FA_FLOW_AGENT", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"FA_FLOW_HEAD_IP1", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1"}, {"FA_FLOW_HEAD_IP2", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2"}, {"FA_FLOW_HEAD_HDD", "\u30cf\u30fc\u30c9 \u30c7\u30a3\u30b9\u30af (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "\u5e2f\u57df\u5e45 (%)"}, {"FA_FLOW_FORWARDER_HEAD", "\u30d5\u30ed\u30fc\u8ee2\u9001\u5143"}, {"FA_FLOW_PAIR", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u30da\u30a2"}, {"FA_FLOW_HEAD_DISKSIZE", "\u30c7\u30a3\u30b9\u30af \u30b5\u30a4\u30ba"}, {"FA_FLOW_HEAD_GATEWAY", "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"FA_FLOW_HEAD_TUNNELS", "\u30c8\u30f3\u30cd\u30eb"}, {"FA_FLOW_HEAD_TENANTS", "\u30c6\u30ca\u30f3\u30c8"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "\u540d\u524d"}, {"GF_GATEWAY", "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4"}, {"GF_LAST_UPDATED", "\u6700\u7d42\u66f4\u65b0\u65e5"}, {"GF_DEST_ADDRESS_RANGE", "\u9001\u4fe1\u5148\u30a2\u30c9\u30ec\u30b9\u7bc4\u56f2"}, {"GF_LOCAL_ADDRESS_RANGE", "\u30ed\u30fc\u30ab\u30eb \u30a2\u30c9\u30ec\u30b9\u7bc4\u56f2"}, {"FA_STATUS", "\u72b6\u6cc1"}, {"CLOUDSETTINGS_SECTITLE_1", "\u65b0\u898f\u306e\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u30da\u30a2\u3092\u8ffd\u52a0"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "\u30e1\u30e2\u30ea (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "\u30d5\u30ed\u30fc \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b9\u30c8\u30ec\u30fc\u30b8 (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "\u30af\u30e9\u30a6\u30c9 Syslog \u30b5\u30fc\u30d0\u306e\u8a2d\u5b9a"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Syslog \u30b5\u30fc\u30d0\u3078\u306e Syslog \u5831\u544a\u3092\u6709\u52b9\u5316:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Syslog \u30b5\u30fc\u30d0\u306e IP \u30a2\u30c9\u30ec\u30b9:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog \u30b5\u30fc\u30d0\u306e\u30dd\u30fc\u30c8:"}, {"CLOUDSETTINGS_SECTITLE_3", "\u30af\u30e9\u30a6\u30c9 \u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u8a2d\u5b9a"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3042\u305f\u308a\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6570:"}, {"CLOUDSETTINGS_SECTITLE_5", "[JP]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[JP]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "\u30b5\u30d6 \u30e6\u30cb\u30c3\u30c8 \u30ce\u30fc\u30c9\u306e\u72b6\u6cc1\u60c5\u5831: "}, {"SP_INFO", "SonicPoint \u60c5\u5831"}, {"SP_MANAGEDBY", "\u7ba1\u7406\u8005"}, {"SP_IPADDR", "IP \u30a2\u30c9\u30ec\u30b9"}, {"SP_SUBNET", "\u30b5\u30d6\u30cd\u30c3\u30c8 \u30de\u30b9\u30af"}, {"SP_IFACE", "\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9"}, {"SP_ZONE", "\u30be\u30fc\u30f3"}, {"SP_MODEL", "SonicPoint \u30e2\u30c7\u30eb"}, {"SP_ENABLED", "\u6709\u52b9"}, {"SP_MACADDR", "MAC \u30a2\u30c9\u30ec\u30b9"}, {"TICKET_INFORMATION", "ConnectWise \u30c1\u30b1\u30c3\u30c8"}, {"TICKET_DETAILS", "\u8a73\u7d30"}, {"CONNECTWISE_NOTE", "GMS \u3068 ConnectWise Manage \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u7d71\u5408\u3059\u308b\u3053\u3068\u3067\u3001\u57fa\u672c\u7684\u306a\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u8a73\u7d30\u3092 ConnectWise \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068\u540c\u671f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u8b66\u544a\u306b\u5bfe\u3059\u308b\u81ea\u52d5\u30b5\u30fc\u30d3\u30b9 \u30c1\u30b1\u30c3\u30c8\u3092 ConnectWise Manage \u4e0a\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002ConnectWise \u7d71\u5408\u306f\u3001API \u30d0\u30fc\u30b8\u30e7\u30f3 3.0 \u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002"}, {Integer.toString(-919), "[JP]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[JP]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[JP]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[JP]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[JP]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[JP]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[JP]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[JP]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[JP]Successfully authenticated with the unit."}, {Integer.toString(-928), "[JP]Authentication with the unit failed."}, {Integer.toString(-929), "[JP]The unit is registered with the backend."}, {Integer.toString(-930), "[JP]The unit is not registered with the backend."}, {Integer.toString(-931), "[JP]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[JP]Heart beats for the unit have been started."}, {Integer.toString(-933), "[JP]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[JP]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[JP]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[JP]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[JP]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[JP]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[JP]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[JP]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[JP]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[JP]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[JP]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[JP]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[JP]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[JP]ZeroTouch feature was disabled for the firewall."}};
+    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "\u88c5\u7f6e (\u5358\u4f53)"}, {"APPLIANCE_NAME_PLURAL", "\u88c5\u7f6e (\u8907\u6570)"}, {"APPLIANCE_DESC", "\u88c5\u7f6e\u306e\u8aac\u660e"}, {"SONICWALL_NAME", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"SONICWALL_NAME_PLURAL", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"SONICWALL_DESC", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u88c5\u7f6e"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMA"}, {"SSLVPN_DESC", "SMA \u88c5\u7f6e"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDP"}, {"CDP_DESC", "CDP \u88c5\u7f6e"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Aventail SMA \u88c5\u7f6e"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "Email Security \u88c5\u7f6e"}, {"OTHERS_NAME", "\u305d\u306e\u4ed6"}, {"OTHERS_NAME_PLURAL", "\u305d\u306e\u4ed6"}, {"OTHERS_DESC", "\u305d\u306e\u4ed6\u306e\u88c5\u7f6e"}, {"MINUTE", "\u5206"}, {"TEST_STRING", "\u3053\u308c\u306f\u30c6\u30b9\u30c8\u6587\u5b57\u5217\u3067\u3059\u3002\u51fa\u8377\u3059\u308b\u524d\u306b\u3053\u308c\u3092\u524a\u9664\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PROGRESS_ACTION_TIMED", "\u3053\u306e\u52d5\u4f5c\u3092\u5b8c\u4e86\u3059\u308b\u307e\u3067\u3057\u3070\u3089\u304f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002"}, {"PROGRESS_PLEASE_WAIT", "\u3057\u3070\u3089\u304f\u304a\u5f85\u3061\u4e0b\u3055\u3044..."}, {"LOADING_PLEASE_WAIT", "\u8aad\u307f\u8fbc\u307f\u4e2d\u3001\u3057\u3070\u3089\u304f\u304a\u5f85\u3061\u304f\u3060\u3055\u3044..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "\u3053\u306e\u753b\u9762\u306e\u66f4\u65b0\u6a29\u9650\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "\u753b\u9762\u3092\u8868\u793a\u3059\u308b\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u3001\u7ba1\u7406\u8005\u306b\u304a\u554f\u3044\u5408\u308f\u305b\u304f\u3060\u3055\u3044\u3002"}, {"UPDATE", "\u66f4\u65b0"}, {"RESET", "\u30ea\u30bb\u30c3\u30c8"}, {"NO_PANEL_PERMISSIONS", "\u3053\u306e\u30d1\u30cd\u30eb\u306b\u5bfe\u3059\u308b\u5341\u5206\u306a\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u7ba1\u7406\u8005\u306b\u304a\u554f\u3044\u5408\u308f\u305b\u304f\u3060\u3055\u3044\u3002"}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "\u30e2\u30c7\u30eb \u30b3\u30fc\u30c9\u306e\u540c\u671f\u306b\u6210\u529f\u3057\u307e\u3057\u305f"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "\u30e2\u30c7\u30eb \u30b3\u30fc\u30c9\u306e\u540c\u671f\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "\u30bf\u30b9\u30af\u306e\u30b9\u30d7\u30fc\u30ea\u30f3\u30b0\u306f\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "\u5931\u6557 - \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "\u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u6b63\u5e38\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u6b63\u5e38\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"ERROR_ADD_ACTIVATION_CODE", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u8ffd\u52a0\u30a8\u30e9\u30fc: \u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059 - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "\u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u6b63\u5e38\u306b\u524a\u9664\u3055\u308c\u307e\u3057\u305f - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u6b63\u5e38\u306b\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002"}, {"ERROR_DELETE_ACTIVATION_CODE", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u524a\u9664\u30a8\u30e9\u30fc: \u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u5b58\u5728\u3057\u307e\u305b\u3093 - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u524a\u9664\u30a8\u30e9\u30fc: \u4ee5\u4e0b\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3 \u30b3\u30fc\u30c9\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093 - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "\u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f -  "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c SGMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u524a\u9664\u3055\u308c\u307e\u3057\u305f - "}, {"UPDATE_DB_MESSAGE", "\u5909\u66f4\u306f SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u3067\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"FAILURE_UPDATE_DB_MESSAGE", "\u66f4\u65b0\u306e\u5931\u6557: \u5909\u66f4\u306f SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u3067\u6b63\u5e38\u306b\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"NO_UNITS_FOR_REGISTRATION", "\u767b\u9332\u7528\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"FREE_TRAIL_NOT_APPLIED", "\u3059\u3079\u3066\u306e\u88c5\u7f6e\u306f\u3001\u672a\u767b\u9332\u304b\u65e2\u306b\u8cfc\u8aad\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"AV_FAILURE_MESSAGE", "\u767b\u9332\u304a\u3088\u3073\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"AV_SUCCESS_MESSAGE", "\u767b\u9332\u304a\u3088\u3073\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306e\u305f\u3081\u306e\u30bf\u30b9\u30af\u304c\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"AV_SUCCESS_UPGRADE", "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306e\u305f\u3081\u306e\u30bf\u30b9\u30af\u304c\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"AV_NO_SUCCESS_REG", "\u767b\u9332\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"AV_SUCCESS_REG", "\u767b\u9332\u306e\u305f\u3081\u306e\u30bf\u30b9\u30af\u304c\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"AV_NO_SUCCESS_UPGRADE", "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"TASK_SUCCESS_MESSAGE", "\u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"TASK_CMP_ERROR", "CMP \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u88c5\u7f6e\u30ec\u30d9\u30eb\u3067\u306e\u307f\u5909\u66f4\u53ef\u80fd\u3067\u3059\u3002"}, {"TASK_ERROR_MESSAGE", "\u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u958b\u59cb\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u53ef\u80fd\u306a\u88c5\u7f6e\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SGMS_EMAIL_BOTTOM_MSG1", "Powered by "}, {"SGMS_EMAIL_BOTTOM_MSG2", " \u30d0\u30fc\u30b8\u30e7\u30f3 "}, {"SGMS_EMAIL_BOTTOM_MSG3", " \u30b7\u30ea\u30a2\u30eb: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " \u30b5\u30fc\u30d0: "}, {"FIRMWARE_DOWNLOADED", "\u65b0\u3057\u3044\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " \u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306f\u3082\u3046\u3059\u3050\u5931\u52b9\u3057\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u8cfc\u8aad\u306e\u66f4\u65b0\u7528\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306e\u8cfc\u5165\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001SonicWall \u306b\u304a\u554f\u3044\u5408\u308f\u305b\u304f\u3060\u3055\u3044\u3002"}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "\u8cfc\u8aad\u306e\u5931\u52b9\u60c5\u5831"}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "\u5931\u52b9\u671f\u65e5\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"VERSION_MESSAGE", "SonicWall GMS \u30d0\u30fc\u30b8\u30e7\u30f3:  "}, {"NUM_NODES_MESSAGE", "\u3053\u306e SonicWall GMS \u3067\u7ba1\u7406\u53ef\u80fd\u306a\u30ce\u30fc\u30c9\u6570:  "}, {"PRODUCT_DESCRIPTION_MESSAGE", "SGMS \u88fd\u54c1\u306e\u8aac\u660e: "}, {"DATABASE_TYPE_MESSAGE", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7a2e\u5225: "}, {"MODEL_TYPES_MESSAGE", "\u30ce\u30fc\u30c9\u6570\u3068\u30e2\u30c7\u30eb\u540d: "}, {"NUM_AGENTS_MESSAGE", "\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u6570: "}, {"AGENT_IP_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e IP \u30a2\u30c9\u30ec\u30b9: "}, {"UNKNOWN_MESSAGE", "\u4e0d\u660e"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e0d\u660e"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "\u88c5\u7f6e\u540d\u306b\u7121\u52b9\u306a\u6587\u5b57 [<\u3001\\] \u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"PM_NAME_KEYWORD", " \u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u88c5\u7f6e\u540d\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4ed6\u306e\u540d\u524d\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PM_NAME_EXISTS_A", "'"}, {"PM_NAME_EXISTS_B", "' \u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059 "}, {"PM_UNKNOWN", "\u4e0d\u660e"}, {"PM_UNKNOWN_UNREGISTERED", "\u4e0d\u660e/\u672a\u767b\u9332"}, {"PM_UNREGISTERED", "\u672a\u767b\u9332"}, {"PM_YES", "\u306f\u3044"}, {"PM_NO", "\u3044\u3044\u3048"}, {"PM_ENABLED", "\u6709\u52b9"}, {"PM_DISABLED", "\u7121\u52b9"}, {"PM_NOTAVAILABLE", "\u5229\u7528\u4e0d\u53ef"}, {"PM_UNLIMITED", "\u7121\u5236\u9650"}, {"PM_CURRENT", "\u6709\u52b9"}, {"PM_DEFAULT", "\u30c7\u30d5\u30a9\u30eb\u30c8"}, {"PM_EXPIRED", "\u5931\u52b9\u6e08"}, {"PM_UP", "\u7a3c\u50cd\u4e2d"}, {"PM_DOWN", "\u4f11\u6b62\u4e2d"}, {"PM_NOT_ACQUIRED", "\u672a\u53d6\u5f97"}, {"PM_SINCE", " \u767a\u751f\u65e5 "}, {"PM_NONE", "\u306a\u3057"}, {"PM_N_A", "\u8a72\u5f53\u306a\u3057"}, {"PM_NO_LICENSE", "\u672a\u8cfc\u8aad"}, {"PM_MODEL", "\u30e2\u30c7\u30eb"}, {"PM_SERIAL_NUM", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"PM_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"PM_NUM_LAN_IPS", "\u8a31\u53ef\u3055\u308c\u3066\u3044\u308b LAN IP \u6570"}, {"PM_HA", "\u9ad8\u53ef\u7528\u6027"}, {"PM_DMZ_PORT", "DMZ \u30dd\u30fc\u30c8"}, {"PM_NUM_WORKPORTS", "\u8a31\u53ef\u3055\u308c\u3066\u3044\u308b WorkPort IP \u6570"}, {"PM_HOMEPORT", "\u30db\u30fc\u30e0\u30dd\u30fc\u30c8"}, {"PM_WLAN_PORT", "WLAN \u30dd\u30fc\u30c8"}, {"PM_OPT_PORT", "OPT \u30dd\u30fc\u30c8"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9"}, {"PM_VPN_CLIENTS", "\u30b0\u30ed\u30fc\u30d0\u30eb VPN \u30af\u30e9\u30a4\u30a2\u30f3\u30c8"}, {"PM_IPS", "\u4fb5\u5165\u9632\u5fa1\u30b5\u30fc\u30d3\u30b9"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9"}, {"PM_FIRMWARE_VERSION", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"PM_REGISTRATION_CODE", "\u767b\u9332\u30b3\u30fc\u30c9"}, {"PM_CFS_SUB", "\u30b3\u30f3\u30c6\u30f3\u30c4 \u30d5\u30a3\u30eb\u30bf \u30ea\u30b9\u30c8/\u30b5\u30fc\u30d3\u30b9\u8cfc\u8aad"}, {"PM_PKI_SUB", "PKI \u8cfc\u8aad"}, {"PM_AV_SUB", "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u8cfc\u8aad"}, {"PM_WARRANTY", "\u62e1\u5f35\u4fdd\u8a3c"}, {"PM_SW_STATUS", "\u72b6\u6cc1"}, {"PM_SW_MANAGEDINSTANCE", "\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3088\u308b\u7ba1\u7406"}, {"PM_TASKS_PENDING", "\u5f85\u6a5f\u4e2d\u30bf\u30b9\u30af"}, {"PM_LAST_LOG", "\u6700\u5f8c\u306e\u30ed\u30b0 \u30a8\u30f3\u30c8\u30ea"}, {"PM_SAS_CONFIG_INFO", "SA \u8a2d\u5b9a\u60c5\u5831"}, {"PM_SAS_DEFINED", "\u5b9a\u7fa9\u6e08\u307f SA"}, {"PM_SAS_ENABLED", "\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b SA"}, {"PM_SAS_AVAILABLE", "\u4f7f\u7528\u53ef\u80fd\u306a SA"}, {"PM_SAS_REMAINING", "\u6b8b\u308a\u306e SA"}, {"PM_SAS_INTERCONNECTED", "\u76f8\u4e92\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b SA"}, {"PM_AGENT_ASSIGNED", "\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"PM_PRIMARY_AGENT", "\u30d7\u30e9\u30a4\u30de\u30ea \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"PM_STANDBY_AGENT", "\u5f85\u6a5f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"PM_TUNNEL_MGMT", "\u7ba1\u7406\u30e2\u30fc\u30c9"}, {"PM_FW_ADDED_TO_GMS", "SonicWall GMS \u306b\u8ffd\u52a0\u3055\u308c\u305f\u88c5\u7f6e"}, {"PM_FW_UP_SINCE", "\u88c5\u7f6e\u304c\u7a3c\u50cd\u3057\u305f\u65e5\u6642"}, {"PM_FW_DOWN_SINCE", "\u88c5\u7f6e\u304c\u4f11\u6b62\u3057\u305f\u65e5\u6642"}, {"PM_SW_IP", "SonicWall \u306e IP"}, {"PM_TIME_ZONE", "\u30bf\u30a4\u30e0\u30be\u30fc\u30f3"}, {"PM_SW_IN_SYSTEM", "\u30b7\u30b9\u30c6\u30e0\u5185"}, {"PM_SW_IN_DMZ", "DMZ \u5185"}, {"PM_SW_IN_GROUP", "\u30b0\u30eb\u30fc\u30d7\u5185"}, {"PM_SW_UNREGISTERED", "\u306e\u3046\u3061\u3001\u672a\u767b\u9332\u306e\u3082\u306e"}, {"PM_SW_VPN_UPGRADE", "VPN \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u6e08\u307f"}, {"PM_SW_VPN_CLIENT", "\u30b0\u30ed\u30fc\u30d0\u30eb VPN \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u6e08\u307f"}, {"PM_SW_MSSP", "\u306e\u3046\u3061\u3001MSSP \u5bfe\u5fdc\u306e\u3082\u306e"}, {"PM_CFL_SUBSCRIPTION", "\u30b3\u30f3\u30c6\u30f3\u30c4 \u30d5\u30a3\u30eb\u30bf \u30ea\u30b9\u30c8/\u30b5\u30fc\u30d3\u30b9\u8cfc\u8aad"}, {"PM_PKI_SUBSCRIPTION", "PKI \u8cfc\u8aad"}, {"PM_AV_SUBSCRIPTION", "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u8cfc\u8aad"}, {"PM_HGMS_SUBSCRIPTION", "\u30af\u30e9\u30a6\u30c9 \u30b5\u30fc\u30d3\u30b9"}, {"PM_SUPPORT_SUBSCRIPTION", "\u30b5\u30dd\u30fc\u30c8 "}, {"PM_EXTENDED_WARRANTY", "\u62e1\u5f35\u4fdd\u8a3c"}, {"PM_UNITS_DOWN", "\u4f11\u6b62\u3057\u3066\u3044\u308b\u88c5\u7f6e"}, {"PM_PENDING_TASKS", "\u5f85\u6a5f\u4e2d\u30bf\u30b9\u30af\u306e\u3042\u308b\u88c5\u7f6e"}, {"PM_MANAGED_WITH_TUNNEL", "\u7ba1\u7406\u7528\u30c8\u30f3\u30cd\u30eb\u3092\u4f7f\u7528\u3057\u3066\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u88c5\u7f6e"}, {"PM_TASK_SPOOLED", "\u30db\u30b9\u30c8\u540d\u5909\u66f4\u306e\u305f\u3081\u306e\u30bf\u30b9\u30af\u304c\u30b9\u30d7\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"PM_RAVLIN_MODEL", "Ravlin \u30e2\u30c7\u30eb"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"PM_WAN_MAC", "WAN \u306e MAC"}, {"PM_FIRMWARE_VERSION", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"PM_HW_VERSION", "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"PM_ROM_VERSION", "ROM \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"PM_SECURITY_ID", "\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 ID"}, {"PM_RAVLIN_STATUS", "Ravlin \u72b6\u6cc1"}, {"PM_TASKS_PENDING", "\u5f85\u6a5f\u4e2d\u30bf\u30b9\u30af"}, {"PM_AGENT_ASSIGNED", "\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"PM_RAVLINS_IN_NODE", "\u30ce\u30fc\u30c9\u5185\u306e Ravlin"}, {"PM_RAVLINS_DOWN", "\u4f11\u6b62\u3057\u3066\u3044\u308b Ravlin"}, {"PM_RAVLINS_PENDING_TASKS", "\u5f85\u6a5f\u4e2d\u30bf\u30b9\u30af\u306e\u3042\u308b Ravlin"}, {"PM_FIX_UNIT_ERROR", "\u88c5\u7f6e\u4fee\u5fa9\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"PM_MOD_UNIT_EXISTS", "\u4fee\u6b63\u3055\u308c\u305f\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "\u4fee\u6b63\u3055\u308c\u305f\u88c5\u7f6e"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"PM_ADD_ERR_PRIVILEGES", "\u30a8\u30e9\u30fc: \u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306e\u5341\u5206\u306a\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"PM_UNIT_EXISTS", "\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"PM_UNIT_NAME_EXISTS_A", "\u88c5\u7f6e"}, {"PM_UNIT_NAME_EXISTS_B", "\u65e2\u306b\u7bc4\u56f2\u306b\u5b58\u5728\u3057\u3066\u3044\u308b "}, {"PM_ADD_UNIT_ERR", "SonicWall \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u88c5\u7f6e\u306e\u8ffd\u52a0\u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", ""}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "\u6841\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f 16 \u9032\u6570\u6587\u5b57\u3060\u3051\u3067\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PM_GET_PREFS_ERR", "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "\u30e6\u30cb\u30c3\u30c8\u306b\u30af\u30e9\u30a6\u30c9 \u30b5\u30fc\u30d3\u30b9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u3092 MySonicWall.com \u3067\u767b\u9332\u3057\u3066\u304b\u3089\u30e6\u30cb\u30c3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " \u3053\u308c\u3092\u884c\u308f\u306a\u3044\u3068\u3001\u3053\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\n\u5f8c\u3067\u3082\u3046\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002"}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " \u3053\u308c\u3092\u884c\u308f\u306a\u3044\u3068\u3001MySonicWall.com \u3068\u901a\u4fe1\u3057\u3066\u3053\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u305b\u3093\u3002\n\u5f8c\u3067\u3082\u3046\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002"}, {"PM_LICENSED", "\u8cfc\u8aad\u6e08"}, {"PM_NOT_LICENSED", "\u672a\u8cfc\u8aad"}, {"PM_IS_MSSP", "MSSP \u88c5\u7f6e"}, {"PM_SYSLOG_FORMAT", "Syslog \u5f62\u5f0f"}, {"PM_STATUS_MSG_ONLY", "\u72b6\u6cc1\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f"}, {"PM_SYSLOG_IN_UTC", "UTC \u5f62\u5f0f\u306e\u30ed\u30b0"}, {"PM_VIEWPOINT_MODE", "Analyzer \u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"PM_NAME_RESOLUTION", "\u540d\u524d\u89e3\u6c7a\u30e2\u30fc\u30c9"}, {"PM_ACCESS_MODE", "\u30a2\u30af\u30bb\u30b9 \u30e2\u30fc\u30c9"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS\u3001NetBios \u306e\u9806"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"PM_CONNECTWISE_STATUS", "ConnectWise Manage"}, {"PM_CONNECTWISE_NA", "\u5229\u7528\u4e0d\u53ef"}, {"VM_PATCH_DETECTED_MSG1", " \u306f\u3001\u65b0\u3057\u3044\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u66f4\u65b0\u304c\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002"}, {"VM_PATCH_DETECTED_MSG2", "\u7ba1\u7406\u8005\u306b\u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u65b0\u3057\u3044\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u66f4\u65b0\u60c5\u5831\u3092\u901a\u77e5\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002SMTP \u307e\u305f\u306f\u7ba1\u7406\u8005\u306e\u96fb\u5b50\u30e1\u30fc\u30eb\u304c\u672a\u8a2d\u5b9a\u3067\u3059\u3002"}, {"VM_PATCH_DETECTED_MSG3", " \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u66f4\u65b0\u304c\u5229\u7528\u53ef\u80fd\u3067\u3059\n\n"}, {"VM_NEW", "\u65b0\u3057\u3044 "}, {"VM_PATCH_DETECTED_MSG4", "\u30ea\u30ea\u30fc\u30b9 \u30ce\u30fc\u30c8\u304a\u3088\u3073\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001<a href=https://www.mysonicwall.com>MySonicWall.com</a> \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"VM_SCREEN", " \u753b\u9762"}, {"VM_PATCH_DETECTED_MSG5", " \u30d1\u30c3\u30c1 \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u66f4\u65b0\u306e\u78ba\u8a8d\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\u65b0\u3057\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u66f4\u65b0\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u96fb\u5b50\u30e1\u30fc\u30eb\u304c\u7ba1\u7406\u8005\u3078\u9001\u4fe1\u3055\u308c\u307e\u3057\u305f\u3002"}, {"VM_PATCH_DETECTED_MSG6", "\u66f4\u65b0\u3055\u308c\u305f "}, {"VM_FOR", " \u30d1\u30c3\u30c1\u3092 "}, {"VM_ON", " \u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"VM_PATCH_DETECTED_MSG7", " \u30d1\u30c3\u30c1 \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306f\u7570\u5e38\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\u30d1\u30c3\u30c1 \u30d5\u30a1\u30a4\u30eb\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059: "}, {"VM_PATCH_DETECTED_MSG8", " \u30d1\u30c3\u30c1 \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f: "}, {"VM_PATCH_DETECTED_MSG9", "\u30d1\u30c3\u30c1 \u30d5\u30a1\u30a4\u30eb "}, {"VM_PATCH_DETECTED_MSG10", " \u3092\u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u8fbc\u3080\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"SDM_UPDATE_SUCCESS", "\u66f4\u65b0\u304c\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"SDM_UPDATE_FAILURE", "\u66f4\u65b0\u304c\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"SDM_UPDATE_SPECIAL_FAILURE", "SA \u3092\u524a\u9664\u3059\u308b\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"SDM_UPDATE_INVALID", "\u66f4\u65b0\u8981\u6c42\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SDM_SCREEN_ID_INVALID", "\u753b\u9762 ID \u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {"SDM_READY", "\u30ec\u30c7\u30a3"}, {"SDM_CGI_ERROR", "CGI_NAME \u53d6\u5f97\u30a8\u30e9\u30fc "}, {"SDM_DEFAULT_ERROR", "DEFAULT_VALUE \u53d6\u5f97\u30a8\u30e9\u30fc: "}, {"SDM_INVALID_TARGET", "\u30a8\u30e9\u30fc: \u9001\u4fe1\u5143\u307e\u305f\u306f\u9001\u4fe1\u5148\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {"SDM_METADATA_ERROR", "\u30e1\u30bf\u30c7\u30fc\u30bf\u53d6\u5f97\u30a8\u30e9\u30fc "}, {"SDM_DB_ERROR", "SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30a2\u30af\u30bb\u30b9 \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {"SDM_NOVPN_ERROR", "\u3053\u306e\u88c5\u7f6e\u3067 VPN \u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NO_TARGET_VPN_ERROR", "\u30bf\u30fc\u30b2\u30c3\u30c8\u3067 VPN \u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NOSAS_ERROR", "\u3053\u306e\u88c5\u7f6e\u306b\u5229\u7528\u53ef\u80fd\u306a\u6b8b\u5b58\u306e SA \u304c\u3042\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NO_TARGET_SAS_ERROR", "\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u5229\u7528\u53ef\u80fd\u306a\u6b8b\u5b58\u306e SA \u304c\u3042\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NO_UNITS_ERROR", "\u4f5c\u6210\u3055\u308c\u305f\u30bf\u30b9\u30af\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SDM_NO_3RDPARTYCERTS_ERROR", "\u6709\u52b9\u306a\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3 \u30ed\u30fc\u30ab\u30eb\u8a3c\u660e\u66f8\u3068 CA \u8a3c\u660e\u66f8\u306e\u7d44\u307f\u5408\u308f\u305b\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u306b\u5bfe\u3059\u308b VPN SA \u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002"}, {"SDM_DHCP_ERROR", "\u52d5\u7684\u30a2\u30c9\u30ec\u30b9\u304c\u9001\u4fe1\u5143\u3068\u9001\u4fe1\u5148\u306e\u53cc\u65b9\u3067\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001SA \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002VPN SA \u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002"}, {"SDM_NOAES_ERROR", "\u3053\u306e\u88c5\u7f6e\u3067 AES \u304c\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_NO_TARGET_AES_ERROR", "\u30bf\u30fc\u30b2\u30c3\u30c8\u3067 AES \u304c\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u88c5\u7f6e\u3078\u306e VPN \u4f5c\u6210\u30a8\u30e9\u30fc\u3002"}, {"SDM_DELETE_SUCCESS", "\u524a\u9664\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"SDM_DELETE_FAILURE", "\u524a\u9664\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"SDM_AGENTNAME_INVALID", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u540d\u306b\u4e0d\u6b63\u306a\u6587\u5b57 [<,\\,:,',@,#,*,$] \u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002"}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "\u62e1\u5f35\u76f8\u4e92\u63a5\u7d9a VPNS SA \u3067\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u3092\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "\u6b21\u306b\u5bfe\u3059\u308b\u30b0\u30eb\u30fc\u30d7\u66f4\u65b0\u3092\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "\u62e1\u5f35\u76f8\u4e92\u63a5\u7d9a VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "\u6a19\u6e96\u76f8\u4e92\u63a5\u7d9a VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "\u62e1\u5f35\u975e\u76f8\u4e92\u63a5\u7d9a VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "\u6a19\u6e96\u975e\u76f8\u4e92\u63a5\u7d9a VPN SA"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "\u3053\u306e\u88c5\u7f6e\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3\u4ee5\u964d\u3067\u3001\u3053\u306e\u88c5\u7f6e\u306b\u5bfe\u3059\u308b SA \u306e\u4f5c\u6210\u3092\u7701\u7565\u3059\u308b\u3068\u3001\u30c8\u30f3\u30cd\u30eb \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u7a2e\u5225\u3092\u30b5\u30dd\u30fc\u30c8\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30bf\u30b9\u30af\u306e\u5b9f\u884c: "}, {"PASSWORD_CHANGED", "SonicWall GMS \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u5e38\u306b\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002"}, {"PASSWORD_NOT_CHANGED_A", "\u5165\u529b\u3055\u308c\u305f\u53e4\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\u3002<BR>"}, {"PASSWORD_NOT_CHANGED_B", " \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"PASSWORD_NOT_CHANGED", "\u5165\u529b\u3055\u308c\u305f\u53e4\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LOGS_PASSWD_CHANGED", "\u30e6\u30fc\u30b6 \u30ed\u30b0\u30a4\u30f3 \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u5e38\u306b\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LOGS_PASSWD_NOT_CHANGED", "\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u30ed\u30b0\u30a4\u30f3 \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30b6\u3092\u8a8d\u8a3c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LOGS_ADDED_NEW_USER", "SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9:  "}, {"LOGS_ADDED_NEW_USER_TYPE", "SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8ffd\u52a0\u3055\u308c\u308b\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u7a2e\u5225:  "}, {"LOGS_DELETED_USER", "\u30e6\u30fc\u30b6\u3068\u95a2\u4fc2\u3059\u308b\u60c5\u5831\u3092 SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u524a\u9664\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9:  "}, {"LOGS_DELETED_GROUP", "\u4ee5\u4e0b\u306e\u30ab\u30b9\u30bf\u30e0 \u30b0\u30eb\u30fc\u30d7\u3068\u3053\u306e\u30ab\u30b9\u30bf\u30e0 \u30b0\u30eb\u30fc\u30d7\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30d3\u30e5\u30fc\u3092 SonicWall GMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u524a\u9664\u3057\u307e\u3057\u305f:  "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "\u30ab\u30b9\u30bf\u30e0\u5c5e\u6027\u5024 ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") \u306b\u306f\u82f1\u6570\u5b57\u306e\u307f\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"}, {"LOGS_ADD_CUSTOM_GROUP", "\u6b21\u306e\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30b0\u30eb\u30fc\u30d7\u540d/\u65e2\u5b9a\u5024\u304c\u30b7\u30b9\u30c6\u30e0\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f: "}, {"LOGS_MOD_CUSTOM_GROUP", "\u6b21\u306e\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30b0\u30eb\u30fc\u30d7\u540d/\u65e2\u5b9a\u5024\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f: "}, {"LOGS_DEL_CUSTOM_GROUP", "\u6b21\u306e\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30b0\u30eb\u30fc\u30d7\u540d/\u65e2\u5b9a\u5024\u304c\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u524a\u9664\u3055\u308c\u307e\u3057\u305f: "}, {"READY", "\u30ec\u30c7\u30a3"}, {"NAV_OF", " / "}, {"NAV_PREVIOUS", "\u524d\u3078"}, {"NAV_NEXT", "\u6b21\u3078"}, {"NAV_DISPLAYING", "\u8868\u793a\u7bc4\u56f2"}, {"NAV_FIREWALLS", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "\u3053\u306e\u753b\u9762\u4e0a\u3067\u306e\u66f4\u65b0\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"ACT_WRONG_FILE_FORMAT", "\u30a8\u30e9\u30fc:\u4e0d\u6b63\u306a\u30d5\u30a1\u30a4\u30eb \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3059\u3002\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093\u3002"}, {"AUTH_INVALID_PARAMS", "\u4e0d\u6b63\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\u3002\u518d\u8a66\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"AUTH_AUTHENTICATE", "\u8a8d\u8a3c\u3059\u308b"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "\u30ed\u30b0\u30a4\u30f3\u4e71\u6570\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3055\u308c\u307e\u3057\u305f\u3002"}, {"AUTH_LOGIN_TIMEOUT", "\u30ed\u30b0\u30a4\u30f3 \u30da\u30fc\u30b8\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002\u518d\u8a66\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"AUTH_LOGIN_FAILURE", "\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3002\u518d\u8a66\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"AUTH_LOGIN_FAILURE_LOG", "\u30ed\u30b0\u30a4\u30f3\u5931\u6557"}, {"NO_DOMAIN_SPECIFIED", "\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"SPECIFY_DOMAIN", "\u30ed\u30b0\u30a4\u30f3\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"INVALID_IP", "\u30db\u30b9\u30c8\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u304f\u3060\u3055\u3044\u3002"}, {"INVALID_DOMAIN_MSG", "\u30c9\u30e1\u30a4\u30f3\u304c\u7121\u52b9\u3067\u3059\u3002\u6709\u52b9\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"INVALID_ALIAS_MSG", "\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u7121\u52b9\u3067\u3059\u3002\u6709\u52b9\u306a\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"REMOTE_SUCCESSFUL_LOGIN", "\u6b21\u306e\u30e6\u30fc\u30b6\u306f\u30b7\u30b9\u30c6\u30e0\u306b\u6b63\u5e38\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3057\u305f: "}, {"REMOTE_FAILED_LOGIN", "\u6b21\u306e\u30e6\u30fc\u30b6\u3092\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f: "}, {"XML_REMOTE_FAILED_LOGIN", "\u6b21\u306e\u30e6\u30fc\u30b6\u3092 XML \u30d9\u30fc\u30b9\u3067\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f: "}, {"NEW_USER_ADDED", "\u8ffd\u52a0\u3055\u308c\u305f\u65b0\u3057\u3044\u30e6\u30fc\u30b6: "}, {"TO_USER_TYPE", "\u30e6\u30fc\u30b6\u7a2e\u5225: "}, {"CLICK_TO_TRY_AGAIN", "\u518d\u8a66\u884c\u3059\u308b\u306b\u306f\u3053\u3053\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059"}, {"USER_LOCKED_OUT", "\u30e6\u30fc\u30b6\u304c\u30ed\u30c3\u30af\u30a2\u30a6\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u304f\u3060\u3055\u3044\u3002"}, {"USER_DISABLED", "\u30e6\u30fc\u30b6 \u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002GMS \u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u4e0b\u3055\u3044\u3002"}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002GMS \u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u308b\u304b\u3001\u518d\u8a66\u884c\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"LDAP_AUTH_FAILED", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"LDAP_USER_NOT_FOUND", "\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30e6\u30fc\u30b6\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u304b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {"LDAP_INVALID_CREDENTIALS", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f: \u4e0d\u6b63\u306a\u8a8d\u8a3c\u60c5\u5831\u3067\u3059"}, {"LDAP_COMMUNICATION_ERROR", "\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u305f\u306f\u30cd\u30fc\u30e0 \u30b5\u30fc\u30d3\u30b9\u3068\u306e\u901a\u4fe1\u304c\u3067\u304d\u307e\u305b\u3093\u3002"}, {"LDAP_ANONYMOUS_BIND_SET", "\u6b21\u306e\u30c9\u30e1\u30a4\u30f3\u306f\u533f\u540d\u30d0\u30a4\u30f3\u30c9 (Anonymous Bind) \u3092\u8a31\u53ef\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059: "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c\u533f\u540d\u30d0\u30a4\u30f3\u30c9\u3092\u8a31\u53ef\u3057\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"LDAP_INVALID_GROUPS_SPECIFIED", "\u4e0d\u6b63\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b0\u30eb\u30fc\u30d7\u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002GMS \u7ba1\u7406\u8005\u306b\u554f\u3044\u5408\u308f\u305b\u3066\u4e0b\u3055\u3044\u3002"}, {"LDAP_INVALID_GROUP_MEMBER", "\u30e6\u30fc\u30b6\u306f\u8a31\u53ef\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"RADIUS_UNKNOWN_HOST", "RADIUS \u30b5\u30fc\u30d0 \u30db\u30b9\u30c8\u304c\u4e0d\u660e\u3067\u3059\u3002"}, {"RADIUS_CONNECTION_TIMEOUT", "\u30ea\u30e2\u30fc\u30c8 RADIUS \u30b5\u30fc\u30d0\u3068\u306e\u63a5\u7d9a\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002"}, {"RADIUS_FAILED_LOGIN", "\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u8cc7\u683c\u60c5\u5831\u304c\u7121\u52b9\u3067\u3059\u3002"}, {"RADIUS_EXCEPTION", "RADIUS \u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"RADIUS_INVALID_GROUP_MEMBER", "\u3053\u306e\u30e6\u30fc\u30b6\u306f\u3001\u8a31\u53ef\u3055\u308c\u305f RADIUS \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"PWD_CHANGE_SCREEN", "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u307e\u3059\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u6587\u5b57\u6570\u304c\u591a\u3059\u304e\u307e\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u4f7f\u7528\u3067\u304d\u308b\u6587\u5b57\u6570\u306f 7 \u6587\u5b57\u4ee5\u4e0a\u300115 \u6587\u5b57\u4ee5\u4e0b\u3067\u3059\u3002"}, {"PWD_VALIDATION_FAILURE", "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u4f7f\u7528\u3067\u304d\u308b\u6587\u5b57\u6570\u306f 15 \u6587\u5b57\u4ee5\u4e0b\u3067\u3059\u3002"}, {"PWD_EXPIRATION", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306f {0} \u65e5\u3054\u3068\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 "}, {"PWD_CHANGE_NEXT_LOGIN", "\u7ba1\u7406\u8005\u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PASSWORD_EXISTS", "\u904e\u53bb 5 \u3064\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u6b21\u306e\u6587\u5b57\u7a2e\u5225\u304b\u3089\u5c11\u306a\u304f\u3068\u3082 2 \u7a2e\u5225\u3092\u542b\u307e\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093: \u82f1\u5b57\u3001\u6570\u5b57\u3001\u8a18\u53f7\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u30e6\u30fc\u30b6\u306e\u6587\u5b57\u5217\u306f\u76f8\u9055\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002"}, {"CUI_LICENSE_READ_FAILURE", "\u30e9\u30a4\u30bb\u30f3\u30b9 \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3081\u307e\u305b\u3093\u3002"}, {"CUI_UPGRADE_SUCCESS", "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u6210\u529f"}, {"CUI_UPGRADE_FAIL", "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u5931\u6557: "}, {"CUI_SYNCH_SUCCESS", "\u540c\u671f\u6210\u529f"}, {"CUI_SYNCH_FAIL", "\u540c\u671f\u5931\u6557: "}, {"CUI_PRORATE_SUCCESS", "ProRate \u8981\u6c42\u6210\u529f"}, {"CUI_PRORATE_FAIL", "ProRate \u8981\u6c42\u5931\u6557: "}, {"CUI_CHANGE_PW_SUCCESS", "\u6210\u529f\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306fMySonicWall.com \u306b\u3066\u53d7\u3051\u5165\u308c\u3089\u308c\u307e\u3057\u305f\u3002"}, {"CUI_CHANGE_PW_FAIL", "\u5931\u6557\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f MySonicWall.com \u306b\u3066\u53d7\u3051\u5165\u308c\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f: "}, {"CUI_EMAIL_SUCCESS", "\u30c6\u30af\u30cb\u30ab\u30eb \u30b5\u30dd\u30fc\u30c8 \u30d5\u30a9\u30fc\u30e0\u306f\u96fb\u5b50\u30e1\u30fc\u30eb\u3067 SonicWall GMS \u30b5\u30dd\u30fc\u30c8 \u30bb\u30f3\u30bf\u30fc\u3078\u9001\u4ed8\u3055\u308c\u307e\u3057\u305f\u3002"}, {"CUI_EMAIL_FAIL", "\u30c6\u30af\u30cb\u30ab\u30eb \u30b5\u30dd\u30fc\u30c8 \u30ec\u30dd\u30fc\u30c8\u3092 SGMS \u30b5\u30dd\u30fc\u30c8 \u30bb\u30f3\u30bf\u30fc\u3078\u9001\u4ed8\u3059\u308b\u969b\u306b\u554f\u984c\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002<br>\u5f8c\u3067\u3082\u3046\u4e00\u5ea6\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CUI_SESSION_TERMINATED", " \u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002"}, {"CUI_SESSIONS_TERMINATED", " \u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002"}, {"CUI_NO_AGENTS", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"CUI_FILTER_ADDED", "\u65b0\u3057\u3044\u30d5\u30a3\u30eb\u30bf\u304c\u6b63\u5e38\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DIAG_DIAG_REQUEST_A", ""}, {"DIAG_DIAG_REQUEST_B", " \u3067\u4f5c\u6210\u3055\u308c\u305f\u8a3a\u65ad\u8981\u6c42\u304c\u9069\u7528\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DIAG_DELETE_SUCCESS", "\u524a\u9664\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"DIAG_EMAIL_SUCCESS", "\u96fb\u5b50\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"DIAG_UNIT_UNKNOWN", "'\u4e0d\u660e\u306a\u88c5\u7f6e\u540d '"}, {"DIAG_UNIT", "' \u88c5\u7f6e "}, {"VPN_DUPLICATE_UFI", "\u66f4\u65b0\u5931\u6557\u3002\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u8b58\u5225\u5b50\u304c SonicWall GMS \u5185\u3067\u7af6\u5408\u3057\u3066\u3044\u307e\u3059\u3002"}, {"NO_LOGS_MESSAGE", "\u30ed\u30b0\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "\u63d0\u4f9b\u3055\u308c\u305f\u691c\u7d22\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u30ed\u30b0\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"LOG_START_SEARCH", "\u65b0\u898f\u691c\u7d22\u306e\u958b\u59cb"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "{0,number,integer} \u30ec\u30b3\u30fc\u30c9\u306e\u691c\u7d22\u7d50\u679c\u306f\u591a\u3059\u304e\u307e\u3059\u3002\u691c\u7d22\u6761\u4ef6\u306b\u5236\u9650\u3092\u52a0\u3048\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SQL_EXCEPTION_ERROR_MESSAGE", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u7a3c\u52d5\u4e2d\u304b\u3001\u3042\u308b\u3044\u306f\u691c\u7d22\u6761\u4ef6\u306e\u5236\u9650\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"UNKNOWN_EXCEPTION_MESSAGE", "\u691c\u7d22\u306e\u5b9f\u884c\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u7a3c\u52d5\u4e2d\u304b\u3001\u3042\u308b\u3044\u306f\u691c\u7d22\u6761\u4ef6\u306e\u5236\u9650\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOG_NEXT", "\u6b21\u3078"}, {"LOG_PREVIOUS", "\u524d\u3078"}, {"LOG_UPDATE_SUCCESS", "\u66f4\u65b0\u306f\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"LOG_OF", " / "}, {"LOG_OF", " / "}, {"PREFS_SYNCHRONIZE_STARTED", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3068\u306e\u60c5\u5831\u306e\u540c\u671f\u3092\u6b63\u5e38\u306b\u958b\u59cb\u3057\u307e\u3057\u305f\u3002"}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u60c5\u5831\u306e\u540c\u671f\u304c\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306b\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u305b\u3093\u3002"}, {"MON_NO_PRIVILEGES", "\u3053\u306e\u753b\u9762\u306e\u5341\u5206\u306a\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"MON_SYNC_TASK_CREATED", "\u540c\u671f\u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002"}, {"MON_SYNC_TASK_FAIL", "\u540c\u671f\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"MON_RENEGOTIATE_TASK_CREATED", "\u518d\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3 \u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002"}, {"MON_RENEGOTIATE_FAILED", "\u518d\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3 \u30bf\u30b9\u30af\u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"MON_NO_SELECTED", "\u518d\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u30c8\u30f3\u30cd\u30eb\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"MON_REFRESH_CREATED", "\u7d71\u8a08\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5 \u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002"}, {"MON_REFRESH_FAIL", "\u7d71\u8a08\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5 \u30bf\u30b9\u30af\u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"MON_NO_SELECTED_REFRESH", "\u7d71\u8a08\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3092\u884c\u3046\u30c8\u30f3\u30cd\u30eb\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"MON_UPDATE_SUCCESS", "\u66f4\u65b0\u306f\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {"MON_UPDATE_FAIL", "\u66f4\u65b0\u306f\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"MON_NO_MONITORING", "\u30c8\u30f3\u30cd\u30eb\u306f\u76e3\u8996\u3067\u304d\u307e\u305b\u3093\u3002"}, {"MON_NAME", "\u540d\u524d"}, {"MON_GATEWAY", "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4"}, {"MON_LAST_UPDATED", "\u6700\u7d42\u66f4\u65b0"}, {"MON_DEST_ADDR_RANGE", "\u9001\u4fe1\u5148\u30a2\u30c9\u30ec\u30b9\u7bc4\u56f2"}, {"MON_LOCAL_ADDR_RANGE", "\u30ed\u30fc\u30ab\u30eb \u30a2\u30c9\u30ec\u30b9\u7bc4\u56f2"}, {"MON_NO_TUNNELS_FOUND", "\u30c8\u30f3\u30cd\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"MON_TITLE", "VPN \u30c8\u30f3\u30cd\u30eb\u7d71\u8a08"}, {"MON_DESCRIPTION", "\u8aac\u660e"}, {"MON_VALUE", "\u5024"}, {"MON_CREATE_TIME", "\u4f5c\u6210\u6642\u9593"}, {"MON_VALID_UNTIL", "\u30c8\u30f3\u30cd\u30eb\u6709\u52b9\u671f\u9593"}, {"MON_PACKETS_IN", "\u53d7\u4fe1\u30d1\u30b1\u30c3\u30c8\u6570"}, {"MON_PACKETS_OUT", "\u9001\u4fe1\u30d1\u30b1\u30c3\u30c8\u6570"}, {"MON_BYTES_IN", "\u53d7\u4fe1\u30d0\u30a4\u30c8\u6570"}, {"MON_BYTES_OUT", "\u9001\u4fe1\u30d0\u30a4\u30c8\u6570"}, {"MON_FRAGMENTS_IN", "\u53d7\u4fe1\u65ad\u7247\u5316\u30d1\u30b1\u30c3\u30c8\u6570"}, {"MON_FRAGMENTS_OUT", "\u9001\u4fe1\u65ad\u7247\u5316\u30d1\u30b1\u30c3\u30c8\u6570"}, {"MON_TUNNEL_ACTIVE", "\u30c8\u30f3\u30cd\u30eb\u306f\u6709\u52b9\u3067\u3059"}, {"REG_NO_PERMISSION", "\u3053\u306e\u753b\u9762\u4e0a\u3067\u66f4\u65b0\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"REG_ERROR_RETRIEVING_COUNT", "\u767b\u9332/\u672a\u767b\u9332\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6570\u306e\u53d6\u5f97\u30a8\u30e9\u30fc"}, {"REG_CURRENT", "\u8cfc\u8aad"}, {"REG_EXPIRED", "\u5931\u52b9"}, {"REG_NO_LICENSE", "\u672a\u8cfc\u8aad"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30a4\u30e1\u30fc\u30b8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {"TASKS_SUCCESSFUL_DELETION", "\u30bf\u30b9\u30af\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u6b63\u5e38\u306b\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002"}, {"TASKS_ERROR_DELETION", "\u30a8\u30e9\u30fc:\u30bf\u30b9\u30af\u3092\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"TASKS_EXECUTION_SET", "\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u304c\u6b63\u5e38\u306b\u884c\u308f\u308c\u307e\u3057\u305f\u3002"}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", " \u4ed5\u4e8b\u3092\u5b9f\u884c\u3059\u308b\u7121\u8a31\u53ef\u306e\u8a66\u307f"}, {"TASKS_ERROR_EXECUTION", "\u30a8\u30e9\u30fc:\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u6642\u9593\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"TASK_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u306e\u30bf\u30b9\u30af\u306f\u30e6\u30fc\u30b6\u306b\u3088\u308a\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002"}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "\u30bf\u30b9\u30af\u306e\u524a\u9664\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"NO_TASKS_MESSAGE", "\u30bf\u30b9\u30af\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "\u63d0\u4f9b\u3055\u308c\u305f\u691c\u7d22\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u30bf\u30b9\u30af\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"TASKS_RESCHEDULED", "\u30bf\u30b9\u30af\u306f\u6b63\u5e38\u306b\u518d\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\u3002"}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "\u30bf\u30b9\u30af\u306e\u518d\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306f\u8a8d\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"TASKS_ERROR_RESCHEDULE", "\u30a8\u30e9\u30fc:\u30bf\u30b9\u30af\u306e\u518d\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"IMMEDIATE_STRING", "\u5373\u6642"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "\u30ed\u30fc\u30ab\u30eb"}, {"AGENT_STRING", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "\u30e6\u30fc\u30b6 "}, {"FROM_LOG_MESSAGE", " \u306b\u3088\u3063\u3066\u30bf\u30b9\u30af\u304c\u518d\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f: "}, {"TO_LOG_MESSAGE", " \u304b\u3089 "}, {"IMMEDIATE_LOG_MESSAGE", "\u5373\u6642\u5b9f\u884c"}, {"REG_PASSWORD_SUCCESS", "\u6210\u529f\u3057\u307e\u3057\u305f\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f MySonicWall.com \u306b\u53d7\u8afe\u3055\u308c\u307e\u3057\u305f\u3002\u66f4\u65b0\u3092\u9078\u629e\u3057\u3066\u7d9a\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"REG_PASSWORD_FAIL", "\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u306f MySonicWall.com \u306b\u53d7\u8afe\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f: "}, {"LOGIN_MESSAGE", "\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044"}, {"LOGIN_DEFAULT_MESSAGE", "\u65e2\u5b9a\u306e\u30e6\u30fc\u30b6 'admin' \u3068\u30d1\u30b9\u30ef\u30fc\u30c9 'password' \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "\u65e2\u5b9a\u306e\u30e6\u30fc\u30b6 'admin' \u3068\u30d1\u30b9\u30ef\u30fc\u30c9 (/appliance \u3068\u540c\u3058\u3082\u306e) \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044"}, {"LOGIN_DEMO_MESSAGE", "\u30e6\u30fc\u30b6 'demo' \u3068\u30d1\u30b9\u30ef\u30fc\u30c9 'password' \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044"}, {"SETTINGSVPS_CHANGED", "Analyzer \u306e\u8a2d\u5b9a\u304c\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SETTINGS_CHANGED", "\u8a2d\u5b9a\u304c\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LOGS_USER_FORCEDOUT", " \u30b7\u30b9\u30c6\u30e0\u304b\u3089\u4ee5\u4e0b\u306e\u30e6\u30fc\u30b6\u304c\u5f37\u5236\u7684\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SLAVE_STATE_CHANGED_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u72b6\u614b\u304c\u6b63\u5e38\u306b\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "\u5931\u6557:\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u72b6\u614b\u3092\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u66f4\u65b0\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"SCHEDULER_UP_STATE", "\u7a3c\u50cd\u4e2d"}, {"SCHEDULER_DOWN_STATE", "\u4f11\u6b62\u4e2d"}, {"SCHEDULER_UNDETERMINED_STATE", "\u672a\u78ba\u5b9a"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u66f4\u65b0\u3059\u308b\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SMTPSERVER_INVALID", "SMTP \u30b5\u30fc\u30d0\u306e\u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {"APPLIANCE_MANAGE_FAILED", "\u88c5\u7f6e\u306b\u5bfe\u3059\u308b\u7ba1\u7406\u8a2d\u5b9a\u306e\u5909\u66f4\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"EMPTY_SMTP_PWD", "SMTP \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u7a7a\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093"}, {"TREE_AGENT_STARTED", "\u30d7\u30e9\u30a4\u30de\u30ea \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u518d\u5272\u308a\u5f53\u3066\u304c\u53ef\u80fd\u306a\u958b\u59cb\u72b6\u614b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"TREE_STANDBY_STARTED", "\u5f85\u6a5f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u518d\u5272\u308a\u5f53\u3066\u304c\u53ef\u80fd\u306a\u958b\u59cb\u72b6\u614b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"TREE_LICENSE_EXCEEDED", "\u3053\u308c\u4ee5\u4e0a\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"TREE_IP_EMPTY", "\u6b63\u3057\u3044 IP \u30a2\u30c9\u30ec\u30b9\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_AUTH_FAIL", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_NO_RESPONSE", "\u88c5\u7f6e\u306f\u5230\u9054\u4e0d\u80fd\u3067\u3059\u3002\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_FIREWALL_NOT_LICENSED", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306f Analyzer \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"TREE_FIREWALL_STATE_ERROR", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u72b6\u614b\u306e\u60c5\u5831\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\n\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u66f4\u65b0\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"TREE_MODEL_FAIL", "\u30e2\u30c7\u30eb\u60c5\u5831\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"TREE_FIRMWARE_VERSION_FAIL", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb \u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"TREE_UNMATCHED_SERIAL", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {"TREE_TIMEZONE_FAIL", "\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"TREE_UTC_FAIL", "\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8\u306f UTC \u5f62\u5f0f\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u9593\u9055\u3063\u305f\u6642\u9593\u304c\u30ec\u30dd\u30fc\u30c8\u306b\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092 UTC \u5f62\u5f0f\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "\u300cLog > ViewPoint\u300d\u753b\u9762\u306e\u300cViewPoint \u306e\u8a2d\u5b9a\u3092\u6709\u52b9\u306b\u3059\u308b\u300d\u3092\u6709\u52b9\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\t1. Syslog \u3092 UTC \u3067\u9001\u4fe1\n\t2. \u300cSyslog \u30a4\u30d9\u30f3\u30c8\u5197\u9577\u30d5\u30a3\u30eb\u30bf\u300d(\u30df\u30ea\u79d2) \u3092 0 \u306b\u8a2d\u5b9a\n\t3. \u300cSyslog \u5f62\u5f0f\u300d\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u8a2d\u5b9a"}, {"TREE_NO_SCHEDULER", "\u6307\u5b9a\u3055\u308c\u305f IP \u30a2\u30c9\u30ec\u30b9\u4e0a\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"TREE_GET_PREFS_ERR", "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {"TREE_FIREWALL_NOT_REGISTERED", "\u3053\u306e\u88c5\u7f6e\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002Analyzer \u306b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u524d\u306b\u3001MySonicWall.com \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u88c5\u7f6e\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TREE_BACKEND_COMM_FAILURE", "Analyzer \u304c MySonicWall.com \u3068\u901a\u4fe1\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u691c\u8a3c\u3067\u304d\u307e\u305b\u3093\u3002\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002Analyzer \u30b5\u30fc\u30d0\u306f MySonicWall.com \u3068\u901a\u4fe1\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"SU_DB_SIZE_EMAILBODY1", "\u73fe\u5728\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b5\u30a4\u30ba\u306f\n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\n\u3067\u3059\u3002:\u6ce8\u610f:\u6700\u5927\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b5\u30a4\u30ba\u5236\u9650\u306f 2GB \u3067\u3059\u3002 \n\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5168\u4f53\u306e\u4f7f\u7528\u91cf\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\t\u300cConsole \u30d1\u30cd\u30eb -> Reports -> Settings\u300d\u30da\u30fc\u30b8\u306e\u3001\u300cRaw \u30c7\u30fc\u30bf\u306e\u4fdd\u7ba1\u671f\u9593\u300d\u8a2d\u5b9a\u306e\u65e5\u6570\u3092\u6e1b\u3089\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\t\u300cConsole \u30d1\u30cd\u30eb -> Reports -> Summarizer\u300d\u30da\u30fc\u30b8\u306e\u3001\u300c\u96c6\u8a08\u30c7\u30fc\u30bf\u306e\u4fdd\u7ba1\u65e5\u6570\u300d\u8a2d\u5b9a\u306e\u65e5\u6570\u3092\u6e1b\u3089\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\n\u88dc\u8db3: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u6700\u5927\u30b5\u30a4\u30ba\u5236\u9650\u306f 2GB \u3067\u3059\u3002\n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u5909\u66f4\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u7dcf\u4f7f\u7528\u5bb9\u91cf\u306b\u5f71\u97ff\u3057\u307e\u3059:\n\t\u300cConsole \u30d1\u30cd\u30eb -> Reports -> Settings\u300d\u753b\u9762\u3067 \"Raw \u30c7\u30fc\u30bf\u306e\u4fdd\u7ba1\u671f\u9593\" \u306e\u65e5\u6570\u8a2d\u5b9a\u3092\u6e1b\u5c11\u3055\u305b\u308b\u3002\n\t\u300cConsole \u30d1\u30cd\u30eb -> Reports -> Summarizer\u300d\u753b\u9762\u3067 \"\u96c6\u8a08\u30c7\u30fc\u30bf\u306e\u4fdd\u7ba1\u65e5\u6570\" \u306e\u65e5\u6570\u3092\u6e1b\u5c11\u3055\u305b\u308b\u3002"}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "\u8b66\u544a: \n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9 \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u8a08\u753b\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u65e2\u5b58\u306e\u8a08\u753b\u306b\u5f93\u3063\u3066\u30ed\u30b0\u304c\u30af\u30ea\u30a2\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u8a08\u753b\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3 \u30ed\u30b0\u306e\u30b5\u30a4\u30ba\u304c\u5897\u52a0\u3057\u3066\u3001\u30cf\u30fc\u30c9 \u30c7\u30a3\u30b9\u30af\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u308a\u307e\u3059\u3002\n\u30cf\u30fc\u30c9 \u30c7\u30a3\u30b9\u30af\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u308b\u3068\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068 GMS \u30b7\u30b9\u30c6\u30e0\u306f\u6b63\u5e38\u306b\u6a5f\u80fd\u3057\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u3066\u3044\u308b\u3068\u3001\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6700\u65b0\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306b\u5fa9\u5143\u3067\u304d\u307e\u305b\u3093\u3002"}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: SGMSDB \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "\u30e9\u30a4\u30bb\u30f3\u30b9\u78ba\u8a8d\u306e\u305f\u3081\u306e\u88c5\u7f6e\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u304c\u3001\u6b21\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092\u3082\u3064\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u305f\u3081\u306b\u5931\u6557\u3057\u307e\u3057\u305f - "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", "\u3002\u30ed\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u8a2d\u5b9a\u304c\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u4e0a\u3067\u30ed\u30fc\u30ab\u30eb\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002VPS \u3067\u306e\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b\u306f\u300c\u88c5\u7f6e\u306e\u7de8\u96c6\u300d\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002", "Analyzer \u306b\u3088\u308b\u30e9\u30a4\u30bb\u30f3\u30b9\u78ba\u8a8d"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "Analyzer \u306b\u3088\u308b\u30e9\u30a4\u30bb\u30f3\u30b9\u78ba\u8a8d"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "\u3054\u5229\u7528\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " \u3078\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u78ba\u8a8d\u305f\u3081\u306e\u30ed\u30b0\u30a4\u30f3\u304c\u5931\u6557\u3057\u3001\u7336\u4e88\u671f\u9593\u3092\u904e\u304e\u307e\u3057\u305f\u3002\u30ed\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u8a2d\u5b9a\u304c\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u4e0a\u3067\u30ed\u30fc\u30ab\u30eb\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002VPS \u3067\u306e\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b\u306f\u300c\u88c5\u7f6e\u306e\u7de8\u96c6\u300d\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "Analyzer \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5931\u52b9\u3057\u307e\u3057\u305f\u3002"}, {"SU_LIC_EXPIRED_BODY1", "\u88c5\u7f6e "}, {"SU_LIC_EXPIRED_BODY2", " \u306f Analyzer \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u88c5\u7f6e\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SU_LIC_EXPIRED_SUBJECT", "Analyzer \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5931\u52b9\u3057\u307e\u3057\u305f\u3002"}, {"LOGVIEW_WRONG_START_DT", "\u958b\u59cb\u65e5\u306e\u5f62\u5f0f\u304c\u4e0d\u6b63\u3067\u3059\u3002\u65e5\u4ed8\u306f\u3001mm/dd/yyyy \u5f62\u5f0f\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGVIEW_WRONG_END_DT", "\u7d42\u4e86\u65e5\u306e\u5f62\u5f0f\u304c\u4e0d\u6b63\u3067\u3059\u3002\u65e5\u4ed8\u306f\u3001mm/dd/yyyy \u5f62\u5f0f\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGVIEW_ENDDT_LESS_STARTDT", "\u7d42\u4e86\u65e5\u304c\u958b\u59cb\u65e5\u3088\u308a\u524d\u306e\u65e5\u4ed8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6709\u52b9\u306a\u958b\u59cb/\u7d42\u4e86\u65e5\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGVIEW_MSGS_PERSCRN", "1 \u753b\u9762\u3042\u305f\u308a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u6570"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "{0,number,integer} \u306e\u30ed\u30b0 \u30a8\u30f3\u30c8\u30ea\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u672c\u5f53\u306b\u3053\u308c\u3092\u5b9f\u884c\u3057\u307e\u3059\u304b? \u5b9f\u884c\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u3067\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u3001\u691c\u7d22\u6761\u4ef6\u3092\u5236\u9650\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGVIEW_GOTO_MSG", "\u8868\u793a\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u756a\u53f7:"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "1 \u753b\u9762\u3042\u305f\u308a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u6570:"}, {"LOGVIEW_RANGE", "(\u7bc4\u56f2: 10-100)"}, {"LOGVIEW_COL_DT", "\u65e5\u4ed8"}, {"LOGVIEW_COL_MSG", "\u30e1\u30c3\u30bb\u30fc\u30b8"}, {"LOGVIEW_COL_SEV", "\u91cd\u5927\u5ea6"}, {"LOGVIEW_COL_USER", "GMS \u30e6\u30fc\u30b6"}, {"LOGVIEW_COL_CO", "\u9806\u5e8f\u306e\u5909\u66f4"}, {"LOGVIEW_COL_IP", "\u30e6\u30fc\u30b6 IP"}, {"LOGVIEW_SEARCH_RESULTS", "\u691c\u7d22\u7d50\u679c"}, {"LOGVIEW_SEARCH_CRITERIA", "\u691c\u7d22\u6761\u4ef6"}, {"LOGVIEW_EXPORT_LOGS", "\u30ed\u30b0\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8"}, {"LOGVIEW_CLEAR_LOGS", "\u691c\u7d22\u30af\u30ea\u30a2"}, {"LOGVIEW_SEARCH_LOGS", "\u691c\u7d22\u958b\u59cb"}, {"LOGVIEW_MATCH_CASE", "\u82f1\u5927\u6587\u5b57/\u5c0f\u6587\u5b57\u3092\u533a\u5225"}, {"LOGVIEW_EXACT_PHRASE", "\u30d5\u30ec\u30fc\u30ba\u5168\u4f53"}, {"LOGVIEW_ANY_WORD", "\u3044\u305a\u308c\u304b\u306e\u5358\u8a9e"}, {"LOGVIEW_ALL_WORDS", "\u3059\u3079\u3066\u306e\u5358\u8a9e"}, {"LOGVIEW_MSG", "\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u5217:"}, {"LOGVIEW_CO", "\u9806\u5e8f\u306e\u5909\u66f4:"}, {"LOGVIEW_TIME", "\u30ed\u30b0\u306e\u65e5\u4ed8\u306e\u9078\u629e:  \u958b\u59cb\u65e5:"}, {"LOGVIEW_TIME_TO", "\u7d42\u4e86\u65e5: "}, {"LOGVIEW_NODE_NAME", "SonicWall \u30ce\u30fc\u30c9:"}, {"LOGVIEW_USER", " \u30e6\u30fc\u30b6: "}, {"LOGVIEW_SEV", "\u91cd\u5927\u5ea6: "}, {"LOGVIEW_CALENDAR", "\u30ab\u30ec\u30f3\u30c0\u30fc"}, {"LOGVIEW_ALL", "\u3059\u3079\u3066 (\u30a2\u30e9\u30fc\u30c8\u3001\u8b66\u544a\u3001\u304a\u3088\u3073\u30e1\u30e2)"}, {"LOGVIEW_ALERT_WARNING", "\u30a2\u30e9\u30fc\u30c8\u3068\u8b66\u544a"}, {"LOGVIEW_ALERT", "\u30a2\u30e9\u30fc\u30c8"}, {"LOGVIEW_STR_FORMAT", "\u691c\u7d22\u6587\u5b57\u5217\u306e\u5f62\u5f0f: user@domain\u3002<br>\u30e6\u30fc\u30b6\u306e\u307f\u306e\u5834\u5408\u306f\u3001user \u3092\u5165\u529b\u3057\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u306e\u307f\u306e\u5834\u5408\u306f\u3001@domain \u3092\u5165\u529b\u3057\u307e\u3059\u3002<br><i>\u88dc\u8db3: user \u5024\u306b @ \u6587\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u5f8c\u306e @ \u307e\u3067\u3092\u691c\u7d22\u6587\u5b57\u5217\u3068\u3057\u307e\u3059\u3002</i>"}, {"HELPABOUT_VERSION", "\u30d0\u30fc\u30b8\u30e7\u30f3:"}, {"HELPABOUT_LIC", "\u30e9\u30a4\u30bb\u30f3\u30b9\u4fdd\u6301\u8005:"}, {"HELPABOUT_SN", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7:"}, {"HELPABOUT_DBDRIVER", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30c9\u30e9\u30a4\u30d0:"}, {"HELPABOUT_DBVERSION", "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30d0\u30fc\u30b8\u30e7\u30f3:"}, {"HELPABOUT_REPORT_DBVERSION", "\u30ec\u30dd\u30fc\u30c8 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30d0\u30fc\u30b8\u30e7\u30f3:"}, {"LOGIN_TITLE", "\u30ed\u30b0\u30a4\u30f3"}, {"LOGIN_ISBLANK", " \u304c\u7a7a\u767d\u3067\u3059\u3002\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGIN_INVALIDID", "\u7121\u52b9\u306a\u30e6\u30fc\u30b6 ID \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"LOGIN_INVALIDID2", "\u30e6\u30fc\u30b6 ID \u306b\u306f\u6b21\u306e\u6587\u5b57\u306e\u307f\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059:"}, {"LOGIN_INVALIDID3", "\u82f1\u6570\u5b57\u3001. (\u30d4\u30ea\u30aa\u30c9)\u3001- (\u30cf\u30a4\u30d5\u30f3)\u3001_ (\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2)\u3001@ (\u30a2\u30c3\u30c8\u30de\u30fc\u30af)\u3002"}, {"LOGIN_INVALIDID4", "\u6709\u52b9\u306a\u6587\u5b57\u3092\u4f7f\u7528\u3057\u305f\u30e6\u30fc\u30b6 ID \u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LOGIN_USERNAME", "\u30e6\u30fc\u30b6\u540d"}, {"LOGIN_PASSWORD", "\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"LOGIN_LOGIN", "\u30ed\u30b0\u30a4\u30f3"}, {"LOGIN_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"LOGIN_SWITCH_EN_US", "\u82f1\u8a9e\u7248 UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_JA_JP", "\u65e5\u672c\u8a9e\u7248 UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_ZH_CN", "\u7c21\u4f53\u5b57\u4e2d\u56fd\u8a9e\u7248 UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_ZH_TW", "\u7e41\u4f53\u5b57\u4e2d\u56fd\u8a9e\u7248 UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_KO_KR", "\u97d3\u56fd\u8a9e\u306e UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_SWITCH_PT_BR", "\u30d6\u30e9\u30b8\u30eb \u30dd\u30eb\u30c8\u30ac\u30eb\u8a9e\u306e UI \u306b\u5207\u308a\u66ff\u3048"}, {"LOGIN_MSG_CREDENTIALS", "\u8cc7\u683c\u60c5\u5831\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b"}, {"LOGOUT_TITLE", "\u30ed\u30b0\u30a2\u30a6\u30c8"}, {"LOGOUT_VPMSG", "SonicWall Analyzer \u30b7\u30b9\u30c6\u30e0\u304b\u3089\u6b63\u5e38\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002"}, {"LOGOUT_VPMSG1", "\u65b0\u3057\u3044 SonicWall Analyzer \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u3053\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u308b\u304b\u7d42\u4e86\u3057\u3066\u3001&nbsp<br>&nbsp\u65b0\u3057\u304f\u30d6\u30e9\u30a6\u30b6\u3092\u8d77\u52d5\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002"}, {"LOGOUT_GMSMSG", "SonicWall \u30b0\u30ed\u30fc\u30d0\u30eb\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u6b63\u5e38\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002 "}, {"LOGOUT_GMSMSG1", "\u65b0\u3057\u3044 SonicWall GMS \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u3053\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u9589\u3058\u308b\u304b\u7d42\u4e86\u3057\u3066\u3001&nbsp<br>&nbsp\u65b0\u3057\u304f\u30d6\u30e9\u30a6\u30b6\u3092\u8d77\u52d5\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002"}, {"SETTINGSUSER_CHANGE", "\u5909\u66f4"}, {"SETTINGSUSER_OLD", "\u53e4\u3044"}, {"SETTINGSUSER_PASSWORD", "\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"SETTINGSUSER_NEW", "\u65b0\u3057\u3044"}, {"SETTINGSUSER_CONFIRMMSG", "\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u518d\u5165\u529b"}, {"SETTINGSUSER_FAILMSG", "\u30d1\u30b9\u30ef\u30fc\u30c9' \u3068 '\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u518d\u5165\u529b' \u304c\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u306f\u82f1\u6570 7 \u6587\u5b57\u4ee5\u4e0a\u3092\u6307\u5b9a\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"INVALID_PASSWORD", "\u7121\u52b9\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"PWD_RULES", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u6b21\u306e\u30eb\u30fc\u30eb\u306b\u57fa\u3065\u3044\u3066\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"VALID_PWD_RULE_FOR_PCI", "    - 7 \u6587\u5b57\u4ee5\u4e0a\u3002"}, {"MAX_PWD_LEN", "    - 15 \u6587\u5b57\u4ee5\u4e0b\u3002"}, {"PWD_ALPHANUMERIC_CHARS", "    - \u82f1\u6570\u5b57\u3092\u4f7f\u7528\u3067\u304d\u308b\u3002"}, {"PWD_SPCIAL_CHARS", "    - \u7279\u6b8a\u6587\u5b57\u3092\u4f7f\u7528\u3067\u304d\u308b\u3002"}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "    - \u6b21\u306e\u6587\u5b57\u7a2e\u5225\u304b\u3089\u5c11\u306a\u304f\u3068\u3082 2 \u7a2e\u5225\u3092\u542b\u307e\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093: \u82f1\u5b57\u3001\u6570\u5b57\u3001\u8a18\u53f7\u3002"}, {"PWD_USERID_SIMILAR", "    - \u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u30e6\u30fc\u30b6\u306e\u6587\u5b57\u5217\u306f\u76f8\u9055\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002"}, {"PREV_PWD_SEQUENCE", "    - \u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u524d\u56de\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u6587\u5b57\u5217\u3092 3 \u3064\u4ee5\u4e0a\u542b\u3081\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002"}, {"PWD_MEETS_REQS", "\u3053\u308c\u3089\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SETTINGSUSER_MISCSETTINGS", "\u305d\u306e\u4ed6\u306e\u8a2d\u5b9a"}, {"SETTINGSUSER_TIMEOUTPERIOD", "\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u671f\u9593\u306f\u3001-1 \u304b [5 \uff5e 120] \u306e\u7bc4\u56f2\u5185\u3067\u3059\u3002\u6709\u52b9\u306a\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"SETTINGSUSER_NEVERTIMEOUT", "\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u306a\u3044"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "\u7121\u52d5\u4f5c\u6642\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "\u88c5\u7f6e\u9078\u629e\u30d1\u30cd\u30eb\u306e\u8868\u793a:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u30a2\u30a4\u30b3\u30f3"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "\u30c6\u30ad\u30b9\u30c8"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u30a2\u30a4\u30b3\u30f3\u3068\u30c6\u30ad\u30b9\u30c8 (\u30c7\u30d5\u30a9\u30eb\u30c8)"}, {"MAX_ROWS_PER_SCREEN", "\u753b\u9762\u3054\u3068\u306e\u6700\u5927\u5217:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "\u7bc4\u56f2: [10 \uff5e 100] (\u30ec\u30dd\u30fc\u30c8\u3055\u308c\u306a\u3044\u30da\u30fc\u30b8\u5358\u4f4d\u306e\u753b\u9762\u306e\u307f\u306b\u9069\u7528\u3067\u304d\u307e\u3059)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "\u300c\u753b\u9762\u3054\u3068\u306e\u6700\u5927\u5217\u300d\u306e\u5024\u304c\u7bc4\u56f2\u5916\u3067\u3059\u3002\uff6410 \u304b\u3089 100 \u306e\u7bc4\u56f2\u5185\u3067\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "\u300c\u753b\u9762\u3054\u3068\u306e\u6700\u5927\u5217\u300d\u306e\u5024\u304c\u6570\u5024\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6709\u52b9\u306a\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306e\u81ea\u52d5\u4fdd\u5b58\u306e\u8a2d\u5b9a:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1 \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u81ea\u52d5\u4fdd\u5b58\u306f\u6709\u52b9\u306b\u306a\u308a\u307e\u305b\u3093\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001[1..60] \u306e\u7bc4\u56f2\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "\u300c\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306e\u81ea\u52d5\u4fdd\u5b58\u306e\u8a2d\u5b9a\u300d\u306b\u306f\u3001-1 \u307e\u305f\u306f [1..60] \u306e\u7bc4\u56f2\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u6709\u52b9\u306a\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CHANGEPASSWORD_OLD", " \u53e4\u3044\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"CHANGEPASSWORD_NEW", " \u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"CHANGEPASSWORD_CONFIRM", "\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u518d\u5165\u529b"}, {"CHANGEPASSWORD_USER", " \u30e6\u30fc\u30b6"}, {"CUSTLOGSETTINGS_NOTE1", "\u88dc\u8db3: \u8907\u6570\u306e\u96fb\u5b50\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u30bb\u30df\u30b3\u30ed\u30f3 (\";\") \u533a\u5207\u308a\u3067\u5165\u529b\u3067\u304d\u307e\u3059\u3002"}, {"CUSTLOGSETTINGS_SECTITLE1", "\u96fb\u5b50\u30e1\u30fc\u30eb\u8b66\u544a\u306e\u9001\u4fe1\u5148\u3068\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb"}, {"CUSTLOGSETTINGS_WEEKDAY", "\u5e73\u65e5:"}, {"CUSTLOGSETTINGS_SCHED1", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb 1:"}, {"CUSTLOGSETTINGS_SCHED2", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb 2:"}, {"CUSTLOGSETTINGS_SCHED3", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb 3:"}, {"CUSTLOGSETTINGS_SAT", "\u571f\u66dc\u65e5"}, {"CUSTLOGSETTINGS_SUN", "\u65e5\u66dc\u65e5"}, {"CUSTLOGSETTINGS_WEEKEND", "\u9031\u672b:"}, {"CUSTLOGSETTINGS_HRS", "\u6642"}, {"CUSTLOGSETTINGS_TO", "\u304b\u3089"}, {"CUSTLOGSETTINGS_ALERTFMT", "\u96fb\u5b50\u30e1\u30fc\u30eb\u8b66\u544a\u306e\u5f62\u5f0f"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "\u30c6\u30ad\u30b9\u30c8\u3001\u8272\u3001\u753b\u50cf\u3068\u30ea\u30f3\u30af\u304c\u542b\u307e\u308c\u307e\u3059\u3002HTML \u8868\u793a\u306e\u53ef\u80fd\u306a\u96fb\u5b50\u30e1\u30fc\u30eb \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u307f\u306b\u4e92\u63db\u304c\u3042\u308a\u307e\u3059\u3002"}, {"CUSTLOGSETTINGS_TEXT", "\u30c6\u30ad\u30b9\u30c8"}, {"CUSTLOGSETTINGS_TEXT_DESC", "\u3059\u3079\u3066\u306e\u8a73\u7d30\u304c\u30d7\u30ec\u30fc\u30f3 \u30c6\u30ad\u30b9\u30c8\u3067\u542b\u307e\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u4e92\u63db\u304c\u3042\u308a\u307e\u3059\u3002"}, {"CUSTLOGSETTINGS_PAGER", "\u30c6\u30ad\u30b9\u30c8 (\u7c21\u7d20)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "\u77ed\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30d7\u30ec\u30fc\u30f3 \u30c6\u30ad\u30b9\u30c8\u3067\u542b\u307e\u308c\u307e\u3059\u3002\u30dd\u30b1\u30d9\u30eb\u3001\u643a\u5e2f\u30e1\u30fc\u30eb (SMS) \u3084\u3001\u305d\u308c\u3089\u306b\u985e\u4f3c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6700\u9069\u3067\u3059\u3002"}, {"LOGCONFIG_SECTITLE_1", ""}, {"LOGCONFIG_SECTITLE_2", "\u306e\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u9664"}, {"LOGCONFIG_DELLABEL", "\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u3088\u308a\u53e4\u3044\u30ed\u30b0\u3092\u524a\u9664:"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u65e5"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u7d4c\u904e\u6642\u9593"}, {"LOGCONFIG_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"SESSIONS_NOSESSALERT", "\u7d42\u4e86\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"SESSIONS_NOSESSSELALERT", "\u7d42\u4e86\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SESSIONS_RUSUREALERT", "\u672c\u5f53\u306b\u9078\u629e\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u307e\u3059\u304b?"}, {"SESSIONS_TITLE", "\u73fe\u5728\u306e\u30bb\u30c3\u30b7\u30e7\u30f3"}, {"SESSIONS_COL1", "\u30e6\u30fc\u30b6\u540d"}, {"SESSIONS_COL2", "IP \u30a2\u30c9\u30ec\u30b9"}, {"SESSIONS_COL3", "\u30ed\u30b0\u30a4\u30f3\u6642\u9593"}, {"SESSIONS_COL4", "\u6700\u7d42\u30a2\u30af\u30bb\u30b9\u6642\u9593"}, {"SESSIONS_COL5", "\u30c9\u30e1\u30a4\u30f3\u540d"}, {"SESSIONS_END", "\u9078\u629e\u3057\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3059\u308b"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP \u30b5\u30fc\u30d0 \u30a2\u30c9\u30ec\u30b9"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP \u30dd\u30fc\u30c8"}, {"LOGINVPSSETTINGS_LABEL2", "\u9001\u4fe1\u8005\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9"}, {"LOGINVPSSETTINGS_LABEL3", "\u7ba1\u7406\u8005\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9"}, {"LOGINVPSSETTINGS_LABEL3_5", "TLS \u3092\u4f7f\u7528\u3059\u308b"}, {"LOGINVPSSETTINGS_LABEL4", "\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b"}, {"LOGINVPSSETTINGS_LABEL5", "\u30e6\u30fc\u30b6"}, {"LOGINVPSSETTINGS_LABEL6", "\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"LOGINVPSSETTINGS_NOTE", "\u88dc\u8db3: \u53d7\u4fe1\u8005\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001\u300cConsole > Management > Alert Settings\u300d\u3092\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "\u30b7\u30b9\u30c6\u30e0 \u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "\u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3068\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u3001\u3088\u308a\u8fc5\u901f\u306b\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u3053\u306e\u914d\u5099\u306b\u542b\u307e\u308c\u308b\u3059\u3079\u3066\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u30c7\u30d0\u30c3\u30b0 \u30ed\u30b0 \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u305f\u3081\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3057\u305f\u308a\u3001\u30c7\u30a3\u30b9\u30af\u304c\u4e00\u676f\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u305f\u3089\u3059\u3050\u306b\u300c<i>\u30c7\u30d0\u30c3\u30b0\u306a\u3057</i>\u300d\u306b\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u3001\u901a\u5e38\u306e\u64cd\u4f5c\u306b\u623b\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "\u88dc\u8db3: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb\u306e\u8a2d\u5b9a\u306f\u3001SonicWall \u30c6\u30af\u30cb\u30ab\u30eb \u30b5\u30dd\u30fc\u30c8\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u306b\u5f93\u3063\u3066\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u30c7\u30d0\u30c3\u30b0 \u30ec\u30d9\u30eb\u306e\u8a2d\u5b9a\u3092\u9ad8\u304f\u3059\u308b\u3068\u3001\u30c7\u30d0\u30c3\u30b0 \u30c7\u30fc\u30bf\u306e\u751f\u6210\u306b\u5fc5\u8981\u306a\u30b7\u30b9\u30c6\u30e0 \u30ea\u30bd\u30fc\u30b9\u304c\u5897\u52a0\u3059\u308b\u305f\u3081\u3001\u30b7\u30b9\u30c6\u30e0\u306e\u5168\u4f53\u7684\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3057\u307e\u3059\u3002"}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "\u3044\u307e\u3059\u3050\u30e2\u30c7\u30eb \u30b3\u30fc\u30c9\u60c5\u5831\u3092\u540c\u671f\u3059\u308b"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\u65e2\u306b\u5b58\u5728\u3059\u308b\u3059\u3079\u3066\u306e\u3001\u65b0\u3057\u3044 SMTP \u30b5\u30fc\u30d0 \u30a2\u30c9\u30ec\u30b9\u3092\u4f34\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30ec\u30dd\u30fc\u30c8\u306e\u305f\u3081\u306e SMTP \u30b5\u30fc\u30d0 \u30a2\u30c9\u30ec\u30b9\u3092\u66f4\u65b0\u3057\u307e\u3059\u304b?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "\u30e2\u30c7\u30eb \u30b3\u30fc\u30c9\u60c5\u5831\u306e\u540c\u671f\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "\u53e4\u3044\u5f62\u5f0f (Analyzer 7.0 \u4ee5\u524d) \u306e\u30ec\u30dd\u30fc\u30c8\u3092\u8868\u793a"}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "\u30d1\u30b9\u30ef\u30fc\u30c9 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u5f37\u5236\u3059\u308b"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5909\u66f4\u3092\u5f37\u5236\u3059\u308b\u65e5\u6570"}, {"GENVPSSTATUS_INVALIDIP", "\u4eca\u306e\u3068\u3053\u308d\u4e0d\u5b8c\u5168\u306a\u88c5\u7f6e\u306e\u8a8d\u8a3c\u60c5\u5831\u306b\u3088\u3063\u3066\u30ed\u30b0\u30a4\u30f3\u304c\u53ef\u80fd\u3067\u3059\u3002"}, {"GENVPSSTATUS_NODE", " \u30ce\u30fc\u30c9: "}, {"GENVPSSTATUS_INFO", "\u60c5\u5831"}, {"GENVPSSTATUS_SYSLOG", "Syslog \u30b5\u30fc\u30d0"}, {"GENVPSSTATUS_IPINFO", "IP \u30a2\u30c9\u30ec\u30b9"}, {"GENVPSSTATUS_PORT", "\u30dd\u30fc\u30c8"}, {"GENVPSSTATUS_SYNCNOW", "\u88c5\u7f6e\u306e\u8a2d\u5b9a\u304a\u3088\u3073\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u3092 MySonicWall.com \u3068\u540c\u671f\u3059\u308b"}, {"GENVPSSTATUS_GETSTARTED", "Analyzer \u306e\u5c0e\u5165"}, {"GENVPSSTATUS_GETSTARTOPEN", "\u65b0\u898f\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u5c0e\u5165\u30ac\u30a4\u30c9\u3092\u958b\u304f"}, {"GENVPSSTATUS_LOGINTITLE", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb \u30ed\u30b0\u30a4\u30f3"}, {"GENVPSSTATUS_LOGINHTTP", "\u5b89\u5168\u3067\u306a\u3044\u30ed\u30b0\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "\u5b89\u5168\u306a\u30ed\u30b0\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "\u30ed\u30b0\u30a4\u30f3"}, {"GENVPSSTATUS_CATEGORIES", "Syslog \u7a2e\u5225"}, {"GENVPSSTATUS_REFRESH_MSG", "\u88dc\u8db3: \u72b6\u6cc1\u60c5\u5831\u306f 24 \u6642\u9593\u3054\u3068\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u60c5\u5831\u3092\u518d\u8868\u793a\u3059\u308b\u306b\u306f\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001\u88c5\u7f6e\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3001\u624b\u52d5\u3067\u66f4\u65b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"GENVPSSTATUS_LOG_TYPE", "\u30ed\u30b0\u7a2e\u5225"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "\u30b7\u30b9\u30c6\u30e0 \u30e1\u30f3\u30c6\u30ca\u30f3\u30b9"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "\u30b7\u30b9\u30c6\u30e0 \u30a8\u30e9\u30fc"}, {"GENVPSSTATUS_BLOCKED_WEB", "\u906e\u65ad\u3055\u308c\u305f\u30a6\u30a7\u30d6 \u30b5\u30a4\u30c8"}, {"GENVPSSTATUS_BLOCKED_JAVA", "\u906e\u65ad\u3055\u308c\u305f Java \u305d\u306e\u4ed6"}, {"GENVPSSTATUS_USER_ACTIVITY", "\u30e6\u30fc\u30b6 \u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP \u7d71\u8a08\u60c5\u5831"}, {"GENVPSSTATUS_ATTACKS", "\u653b\u6483"}, {"GENVPSSTATUS_DROPPED_TCP", "\u7834\u68c4\u3055\u308c\u305f TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "\u7834\u68c4\u3055\u308c\u305f UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "\u7834\u68c4\u3055\u308c\u305f ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30c7\u30d0\u30c3\u30b0"}, {"GENVPSSTATUS_DENIED_LAN_IP", "\u62d2\u5426\u3055\u308c\u305f LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "Analyzer \u30e9\u30a4\u30bb\u30f3\u30b9\u72b6\u6cc1"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;\u4ee5\u4e0b\u306e\u624b\u9806\u306b\u5f93\u3063\u3066 \\\"\u672a\u8cfc\u8aad\\\" \u306e\u554f\u984c\u3092\u89e3\u6c7a\u3057\u3066\u304f\u3060\u3055\u3044:<br/>&nbsp;&nbsp;\u30b9\u30c6\u30c3\u30d7 1 - <a href=\"http://www.MySonicWall.com\" target=new>\u3053\u3053\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001MySonicWall.com \u3067\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u78ba\u8a8d\u3068\u6709\u52b9\u5316\u3092\u884c\u3044\u307e\u3059\u3002</a><br/>&nbsp;&nbsp;\u30b9\u30c6\u30c3\u30d7 2 - \u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001<a href=\"javascript:synchronizeInfo();\">\u3053\u3053\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u540c\u671f\u3057\u307e\u3059\u3002</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(MySonicWall.com \u3068\u306e\u901a\u4fe1\u306b\u5931\u6557\u3057\u307e\u3057\u305f)<br/>&nbsp;&nbsp;GMSVP \u30a6\u30a7\u30d6 \u30b5\u30fc\u30d0\u304c www.MySonicWall.com \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"COMPONENT", "\u8aac\u660e"}, {"COMPONENT_LC", "\u69cb\u6210\u8981\u7d20"}, {"FILE_SIZE", "\u30d5\u30a1\u30a4\u30eb \u30b5\u30a4\u30ba (KB)"}, {"IP_ADDRESS", "IP \u30a2\u30c9\u30ec\u30b9"}, {"CURRENT_VERSION", "\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3"}, {"LATEST_VERSION", "\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3"}, {"RELEASE_NOTES", "\u30ea\u30ea\u30fc\u30b9 \u30ce\u30fc\u30c8"}, {"LAST_DOWNLOADED", "\u6700\u7d42\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9"}, {"RELEASE_DATE", "\u30ea\u30ea\u30fc\u30b9\u65e5"}, {"DOWNLD_NEW", "\u65b0\u3057\u3044 "}, {"SOFTWARE_UPDATES", "\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u66f4\u65b0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"}, {"DEL_SEL_COMPS_FROM_LIST", "\u9078\u629e\u3057\u305f\u69cb\u6210\u8981\u7d20\u3092\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\u3059\u308b"}, {"LIC_DELETE_MSG", "\u524a\u9664\u3067\u304d\u307e\u305b\u3093:"}, {"LIC_PATCH_MSG", "\u30d1\u30c3\u30c1\u306f\u307e\u3060\u3042\u308a\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093:"}, {"LIC_NEW_GMS_SW", "\u65b0\u3057\u3044 GMS \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2"}, {"LIC_CONSOLE", "\u30b3\u30f3\u30bd\u30fc\u30eb"}, {"LIC_SELECT_COMPONENT", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CHAP_TESTING", "CHAP \u30c6\u30b9\u30c8\u4e2d"}, {"CHAP_RADIUS_TESTING_MSG", "CHAP \u8a8d\u8a3c\u306f\u3001CHAP \u8a8d\u8a3c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b RADIUS \u30b5\u30fc\u30d0\u3067\u306e\u307f\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53ef\u9006\u7684\u306b\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b RADIUS \u30b5\u30fc\u30d0\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u3082\u3042\u308a\u307e\u3059\u3002"}, {"CHAP_LDAP_TESTING_MSG", "CHAP \u8a8d\u8a3c\u306f\u3001LDAP \u3092\u5229\u7528\u3057\u305f\u30e6\u30fc\u30b6 \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u53d6\u5f97\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30b5\u30fc\u30d0\u3067\u306e\u307f\u6a5f\u80fd\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53ef\u9006\u7684\u306b\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b LDAP \u30b5\u30fc\u30d0\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u3082\u3042\u308a\u307e\u3059\u3002"}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "\u307e\u305f\u3001CHAP \u306f Microsoft Active Directory \u307e\u305f\u306f Novell eDirectory \u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"PERF_NO_SUMMARIZER", "\u96c6\u8a08\u6027\u80fd\u30e1\u30c8\u30ea\u30c3\u30af\u306f\u73fe\u5728\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"PERF_SUMMARIZER_INFO", "\u96c6\u8a08\u60c5\u5831"}, {"PERF_SUMMARIZER", "\u96c6\u8a08"}, {"PERF_SYSLOG_INFO", "\u30c7\u30fc\u30bf \u30d5\u30a1\u30a4\u30eb\u60c5\u5831"}, {"PERF_SYSLOG_FILE_TYPE", "\u30c7\u30fc\u30bf \u30d5\u30a1\u30a4\u30eb\u7a2e\u5225"}, {"PERF_FILE_STATS", "\u30d5\u30a1\u30a4\u30eb\u7d71\u8a08"}, {"PERF_OLDEST", "\u6700\u3082\u53e4\u3044\u30d5\u30a1\u30a4\u30eb"}, {"PERF_PRD_LABEL", "\u51e6\u7406\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_SRC_LABEL", "\u30b0\u30eb\u30fc\u30d7\u5316\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_UNP_LABEL", "\u672a\u51e6\u7406\u30d5\u30a1\u30a4\u30eb"}, {"PERF_NMM_LABEL", "\u672a\u767b\u9332\u88c5\u7f6e\u306e\u30d5\u30a1\u30a4\u30eb"}, {"PERF_IMF_LABEL", "\u611f\u67d3\u30d5\u30a1\u30a4\u30eb"}, {"PERF_ZIP_LABEL", "\u30a2\u30fc\u30ab\u30a4\u30d6\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_PRE_LABEL", "\u4e0d\u6b63\u306a\u30ed\u30b0 \u30d5\u30a1\u30a4\u30eb\u3067\u3059"}, {"PERF_UPE_LABEL", "\u4e0d\u6b63\u306a\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9 \u30d5\u30a1\u30a4\u30eb"}, {"PERF_UPD_LABEL", "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_UPL_LABEL", "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u672a\u6c7a\u30d5\u30a1\u30a4\u30eb"}, {"PERF_RDB_LABEL", "\u30ec\u30dd\u30fc\u30c8 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9"}, {"PERF_OPT_STATE_LABEL", "\u6700\u9069\u5316\u72b6\u6cc1"}, {"PERF_OPT_PENDING_LABEL", "\u6700\u9069\u5316\u4fdd\u7559\u4e2d"}, {"PERF_OPT_TOTAL_LABEL", "\u672a\u6700\u9069\u5316\u65e5\u6570\u5408\u8a08"}, {"PERF_BKP_LABEL", "\u30d0\u30c3\u30af\u30a2\u30c3\u30d7 \u30d5\u30a1\u30a4\u30eb"}, {"PERF_FILE_ELEMENT", " \u30d5\u30a1\u30a4\u30eb - "}, {"PERF_THREAD_INFO", "\u96c6\u8a08\u51e6\u7406\u306e\u8a73\u7d30"}, {"PERF_NUM_THREADS", "\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u73fe\u5728\u5b9f\u884c\u4e2d\u3067\u3059\u3002"}, {"PERF_SUMMARIZER_IDLE", "\u96c6\u8a08\u306f\u7121\u52d5\u4f5c\u72b6\u614b\u3067\u3059\u3002"}, {"PERF_THREAD", "\u30b9\u30ec\u30c3\u30c9"}, {"PERF_FIREWALL", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"PERF_FILE", "\u30d5\u30a1\u30a4\u30eb"}, {"PERF_STATE", "\u72b6\u614b"}, {"PERF_START_TIME", "\u958b\u59cb\u6642\u523b"}, {"PERF_SUMMARIZER_STATS", "\u96c6\u8a08\u7d71\u8a08"}, {"PERF_PAST_24", "24 \u6642\u9593\u4ee5\u4e0a\u7d4c\u904e (\u958b\u59cb\u65e5\u6642 "}, {"PERF_PAST_7_DAYS", "7 \u65e5\u4ee5\u4e0a\u7d4c\u904e (\u958b\u59cb\u65e5\u6642 "}, {"PERF_PAST_30_DAYS", "30 \u65e5\u4ee5\u4e0a\u7d4c\u904e (\u958b\u59cb\u65e5\u6642 "}, {"PERF_NUM_SYSLOGS", "\u8907\u6570\u306e Syslog \u304c\u96c6\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"PERF_AVERAGE_PER_MINUTE", "1 \u5206\u6bce\u306b\u96c6\u8a08\u3055\u308c\u305f Syslog \u5e73\u5747"}, {"PERF_NOT_ACTIVE", "\u904e\u53bb 7 \u65e5\u9593\u3067\u96c6\u8a08\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"PERF_NO_GEN2", "\u96c6\u8a08\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306f\u3001\u5206\u6563\u96c6\u8a08\u8a2d\u5b9a\u306e\u307f\u3067\u5229\u7528\u53ef\u80fd\u3067\u3059"}, {"PERF_MEM_USAGE", "\u96c6\u8a08\u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf"}, {"PERF_LAST_RUN", "\u6700\u7d42\u5b9f\u884c\u6642\u9593"}, {"PERF_NEXT_RUN", "\u6b21\u56de\u5b9f\u884c\u6642\u9593"}, {"PERF_SUMMARIZER_STATISTICS", "7 \u65e5\u9593\u306e\u96c6\u8a08\u72b6\u6cc1"}, {"PERF_SUMMARIZER_UTILIZATION", "\u96c6\u8a08\u306e\u5229\u7528\u72b6\u6cc1"}, {"PERF_TOTAL_RUN_TIME", "1 \u65e5\u6bce\u306e\u5b9f\u884c\u6642\u9593\u5e73\u5747"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "\u63a8\u5b9a\u5bb9\u91cf"}, {"PERF_METRIC_SYSLOG", "(100 \u4e07 Syslog/\u65e5)"}, {"PERF_METRIC_XML", "(XML \u30d5\u30a1\u30a4\u30eb/\u65e5)"}, {"PERF_TOTAL_LOAD", "\u8ca0\u8377\u5e73\u5747"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "\u96c6\u8a08\u3055\u308c\u305f Syslog \u5e73\u5747 (100 \u4e07/\u65e5)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "1 \u65e5\u6bce\u306b\u96c6\u8a08\u3055\u308c\u305f XML \u30d5\u30a1\u30a4\u30eb \u5e73\u5747"}, {"PERF_NO_DATA_SUMMARIZED", "\u904e\u53bb 7 \u65e5\u9593\u306b\u96c6\u8a08\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u3042\u308a\u307e\u305b\u3093"}, {"PERF_REPORTING_INFO", "\u30ec\u30dd\u30fc\u30c8\u306e\u8a73\u7d30"}, {"PERF_TOP_UNITS", "\u96c6\u8a08\u306e\u4f7f\u7528\u72b6\u6cc1\u306e\u30c8\u30c3\u30d7\u88c5\u7f6e"}, {"PERF_UNIT_NAME", "\u88c5\u7f6e"}, {"PERF_REPORTING_DB_SIZE", "\u30ec\u30dd\u30fc\u30c8 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b5\u30a4\u30ba"}, {"PERF_BACKUPS_DIR_SIZE", "\u30d0\u30c3\u30af\u30a2\u30c3\u30d7 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30a4\u30ba"}, {"PERF_SYSLOG_DIR_SIZE", "Raw \u30c7\u30fc\u30bf \u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30a4\u30ba"}, {"PERF_CACHE_SIZE", "\u63a8\u5b9a\u30ad\u30e3\u30c3\u30b7\u30e5 \u30b5\u30a4\u30ba"}, {"PERF_BAD_DIR_SIZE", "\u4e0d\u826f\u30c7\u30fc\u30bf \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30b5\u30a4\u30ba"}, {"PERF_PER_SUMMARIZER_INFO", "\u96c6\u8a08\u306e\u8a73\u7d30 "}, {"PERF_AVG_UTILIZATION", "\u96c6\u8a08\u306e\u5e73\u5747\u5229\u7528\u72b6\u6cc1"}, {"PERF_PEAK_UTILIZATION", "\u96c6\u8a08\u306e\u30d4\u30fc\u30af\u5229\u7528\u72b6\u6cc1"}, {"NMM_DETAILS", "\u30ec\u30dd\u30fc\u30c8\u3068\u7ba1\u7406\u306b\u5b58\u5728\u3057\u306a\u3044\u88c5\u7f6e\u306b\u5bfe\u3057\u3066\u96c6\u8a08\u3055\u308c\u305f Syslog"}, {"NMM_SERIALS", "Summarizer \u7528\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"NO_NMM_SERIAL", "\u30ec\u30dd\u30fc\u30c8\u3068\u7ba1\u7406\u306b\u5b58\u5728\u3057\u306a\u3044\u88c5\u7f6e\u3067 Syslog \u3092\u9001\u4fe1\u3057\u3066\u3044\u308b\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093  "}, {"MISCONFIGURED_SERIALS", "\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7  "}, {"NO_MISCONFIGURED_SERIALS", "\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093  "}, {"NMM_MSG_NOTE", "\u88dc\u8db3: "}, {"NMM_MSG1", "* \u88c5\u7f6e\u306b\u30ed\u30b0\u30a4\u30f3\u3057 Syslog \u3092\u7121\u52b9\u306b\u3057\u307e\u3059"}, {"NMM_MSG2", "* \u88c5\u7f6e\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306b\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092\u906e\u65ad\u3059\u308b\u30eb\u30fc\u30eb\u3092\u9069\u7528\u3057\u307e\u3059"}, {"NMM_MSG3", "* \u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092\u4fee\u6b63\u3059\u308b\u306b\u306f\u3001\u88c5\u7f6e\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3001GMS \u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u307e\u3059"}, {"NMM_MSG4", "* \u3053\u3053\u306b\u4e00\u89a7\u3055\u308c\u3066\u3044\u308b\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f 12 \u6642\u9593\u6bce\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059"}, {"PERF_SUMMARIZER_STATUS", "\u72b6\u6cc1"}, {"PERF_DEPLOYMENT_STATUS", "\u914d\u5099\u72b6\u6cc1"}, {"PERF_MSG_HIGH_CAPACITY", "Summarizer \u304c\u9ad8\u8ca0\u8377\u3067\u52d5\u4f5c\u3057\u3066\u3044\u307e\u3059\u3002\u88c5\u7f6e\u3092\u518d\u5272\u308a\u5f53\u3066\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "\u904e\u53bb 7 \u65e5\u9593\u3067\u914d\u5099\u5185\u306e 1 \u3064\u4ee5\u4e0a\u306e Summarizer \u304c\u7a3c\u50cd\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u8d85\u3048\u307e\u3057\u305f\u3002\u300cSummarizer \u4f7f\u7528\u72b6\u6cc1\u300d\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u72b6\u6cc1\u5217\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u914d\u5099\u306e\u7ba1\u7406\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001GMS \u30b5\u30a4\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_REASSIGN_UNITS", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u9593\u3067\u88c5\u7f6e\u3092\u518d\u5272\u308a\u5f53\u3066\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_DISK_LOW", "\u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30a3\u30b9\u30af\u3092\u8ffd\u52a0\u3059\u308b\u304b\u30c7\u30a3\u30b9\u30af\u306e\u5272\u308a\u5f53\u3066\u3092\u5897\u3084\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_DISK_LOW_RDB", "\u30ec\u30dd\u30fc\u30c8 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7528\u306e\u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30a3\u30b9\u30af\u3092\u8ffd\u52a0\u3059\u308b\u304b\u30c7\u30a3\u30b9\u30af\u306e\u5272\u308a\u5f53\u3066\u3092\u5897\u3084\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_CAPACITY_PLANNING", "\u914d\u5099\u306e\u7ba1\u7406\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306f\u3001<a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS \u30a6\u30a7\u30d6 \u30b5\u30a4\u30c8</a>\u3092\u8a2a\u554f\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "\u88dc\u8db3: \u8ca0\u8377\u5e73\u5747\u3068\u63a8\u5b9a\u5bb9\u91cf\u306f\u305d\u306e\u914d\u5099\u306b\u56fa\u6709\u3067\u3042\u308a\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u3067\u306f\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"}, {"PERF_OF", "/"}, {"PERF_ON_DISK", "(\u30c7\u30a3\u30b9\u30af\u4e0a)"}, {"PERF_OPT_EXPORT_PROGRESS", "\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u4e2d"}, {"PERF_OPT_EXPORT_DONE", "\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u5b8c\u4e86"}, {"PERF_OPT_DELETE_PROGRESS", "\u524a\u9664\u4e2d"}, {"PERF_OPT_DELETE_DONE", "\u524a\u9664\u5b8c\u4e86"}, {"PERF_OPT_IMPORT_PROGRESS", "\u30a4\u30f3\u30dd\u30fc\u30c8\u4e2d"}, {"PERF_OPT_QUEUED_UP", "\u5f85\u3061\u884c\u5217\u306b\u8ffd\u52a0\u6e08"}, {"PERF_OPT_IDLE", "\u30a2\u30a4\u30c9\u30eb"}, {"PERF_OPT_CURRENT", "\u73fe\u5728"}, {"PERF_OPT_INFO", "\u6700\u9069\u5316\u60c5\u5831"}, {"PERF_XML_FILE_INFO", "XML \u30d5\u30a1\u30a4\u30eb\u60c5\u5831"}, {"PERF_XML_LABEL", "\u672a\u51e6\u7406\u306e XML \u30d5\u30a1\u30a4\u30eb"}, {"PERF_XPG_LABEL", "\u51e6\u7406\u4e2d\u306e\u30d5\u30a1\u30a4\u30eb"}, {"PERF_XPD_LABEL", "\u30a2\u30fc\u30ab\u30a4\u30d6\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb"}, {"PERF_XPE_LABEL", "\u7121\u52b9\u306a\u30d5\u30a1\u30a4\u30eb"}, {"ALERT_NO_ALERTS", "\u73fe\u5728\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u6709\u52b9\u306a\u30a2\u30e9\u30fc\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"ALERT_DESCRIPTION", "\u6982\u8981"}, {"ALERT_NODE_NAME", "\u88c5\u7f6e\u540d"}, {"ALERT_SEVERITY", "\u91cd\u5927\u5ea6"}, {"ALERT_LISTING", "\u30a2\u30e9\u30fc\u30c8 \u30ea\u30b9\u30c8"}, {"CAL_SUN", "\u65e5"}, {"CAL_MON", "\u6708"}, {"CAL_TUE", "\u706b"}, {"CAL_WED", "\u6c34"}, {"CAL_THU", "\u6728"}, {"CAL_FRI", "\u91d1"}, {"CAL_SAT", "\u571f"}, {"CAL_JAN", "1 \u6708"}, {"CAL_FEB", "2 \u6708"}, {"CAL_MAR", "3 \u6708"}, {"CAL_APR", "4 \u6708"}, {"CAL_MAY", "5 \u6708"}, {"CAL_JUN", "6 \u6708"}, {"CAL_JUL", "7 \u6708"}, {"CAL_AUG", "8 \u6708"}, {"CAL_SEP", "9 \u6708"}, {"CAL_OCT", "10 \u6708"}, {"CAL_NOV", "11 \u6708"}, {"CAL_DEC", "12 \u6708"}, {Integer.toString(1), "\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u306b\u6210\u529f\u3057\u307e\u3057\u305f: "}, {Integer.toString(0), "\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(42), "\u8b66\u544a\u4ed8\u304d\u3067\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u306b\u6210\u529f\u3057\u307e\u3057\u305f: "}, {Integer.toString(10), "\u30b3\u30de\u30f3\u30c9\u306f\u6b63\u5e38\u306b\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-12), "\u30b3\u30de\u30f3\u30c9\u3092\u4e00\u90e8\u3001\u307e\u305f\u306f\u307e\u3063\u305f\u304f\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-57), "\u3053\u306e\u64cd\u4f5c\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30b6\u6a29\u9650\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-58), "\u30b3\u30de\u30f3\u30c9\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u60c5\u5831\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-59), "\u3053\u306e\u64cd\u4f5c\u3092\u968f\u6642\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-56), "LocalDomain \u306e\u7ba1\u7406\u8005\u30b0\u30eb\u30fc\u30d7\u306e\u30e6\u30fc\u30b6\u306e\u307f\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u6a29\u9650\u3092\u6301\u3061\u307e\u3059\u3002"}, {Integer.toString(2), "\u65b0\u3057\u3044\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u78ba\u8a8d\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u304c\u3001\u5229\u7528\u53ef\u80fd\u306a\u65b0\u3057\u3044\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(3), "\u524d\u56de\u306e\u30bf\u30b9\u30af\u306b\u5bfe\u3059\u308b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u64cd\u4f5c\u306e\u5b9f\u884c\u306b\u6210\u529f\u3057\u307e\u3057\u305f: "}, {Integer.toString(4), "\u30bf\u30b9\u30af\u306b\u5bfe\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u66f4\u65b0\u64cd\u4f5c\u306b\u6210\u529f\u3057\u307e\u3057\u305f: "}, {Integer.toString(5), "\u88c5\u7f6e\u306f\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3068\u767b\u9332\u304c\u5229\u7528\u53ef\u80fd\u3067\u3059"}, {Integer.toString(6), "\u7121\u6599\u30c8\u30e9\u30a4\u30a2\u30eb\u306f\u305d\u306e\u88c5\u7f6e\u306b\u9069\u7528\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(7), "\u88c5\u7f6e\u306f\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u3067\u3059\u304c\u3001\u767b\u9332\u306f\u53ef\u80fd\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(8), "\u88c5\u7f6e\u306f\u767b\u9332\u53ef\u80fd\u3067\u3059\u304c\u3001\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306f\u5229\u7528\u53ef\u80fd\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-1), "\u88c5\u7f6e\u306e\u3044\u304f\u3064\u304b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u307e\u305b\u3093\u3002"}, {Integer.toString(-53), "\u88c5\u7f6e\u306f\u7ba1\u7406\u8005\u306e\u540c\u6642\u30ed\u30b0\u30a4\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-63), "\u88c5\u7f6e\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u8a8d\u8a3c\u60c5\u5831\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-69), "\u73fe\u5728\u306e\u30ed\u30b0\u30a4\u30f3 IP \u30a2\u30c9\u30ec\u30b9\u304c\u53d6\u5f97\u3055\u308c\u308b\u307e\u3067\u5f85\u6a5f\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-70), "JVM OOM: \u7d99\u7d9a\u3059\u308b\u305f\u3081\u306e\u30e1\u30e2\u30ea\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\u6b21\u56de\u306e\u5b9f\u884c\u6642\u306b\u30bf\u30b9\u30af\u3092\u518d\u8a66\u884c\u3057\u307e\u3059\u3002"}, {Integer.toString(-64), "\u7ba1\u7406\u5bfe\u8c61\u88c5\u7f6e\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u8a8d\u8a3c\u30da\u30fc\u30b8\u306e\u53d6\u5f97\u304c\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-64) + "_TT", "- \u3053\u306e\u88c5\u7f6e\u306e\u7ba1\u7406\u30a2\u30c9\u30ec\u30b9\u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3002\n- \u3053\u306e\u88c5\u7f6e\u306f\u540c\u6642\u30ed\u30b0\u30a4\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n  \u5225\u306e\u30d6\u30e9\u30a6\u30b6\u304c\u88c5\u7f6e\u306b\u76f4\u63a5\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-65), "\u30ed\u30b0\u30a4\u30f3 \u30dd\u30b9\u30c8\u306e\u5fdc\u7b54\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-83), "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u4e00\u81f4\u3057\u306a\u3044\u305f\u3081\u3001\u30ed\u30b0\u30a4\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-83) + "_TT", "- GMS \u306b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u6307\u5b9a\u3057\u305f\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\n\u305d\u306e\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-84), "\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u305b\u3093\u3002\u6307\u5b9a\u3055\u308c\u305f\u30ed\u30b0\u30a4\u30f3 \u30e2\u30fc\u30c9\u306f\u7121\u52b9\u3067\u3059\u3002"}, {Integer.toString(-84) + "_TT", "- \u6307\u5b9a\u3055\u308c\u305f\u30ed\u30b0\u30a4\u30f3 \u30e2\u30fc\u30c9\u306f\u3001\n\u8a31\u53ef\u3055\u308c\u305f\u30e2\u30fc\u30c9\u306e\u4e00\u89a7\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-2), "\u88c5\u7f6e\u306e\u30e6\u30fc\u30b6\u540d\u307e\u305f\u306f\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-918), "\u88c5\u7f6e\u306f\u30bc\u30ed\u30bf\u30c3\u30c1 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-916), "MD5 \u7f72\u540d\u4ed8\u304d\u306e SSL \u8a3c\u660e\u66f8\u3092\u4f7f\u7528\u3059\u308b\u88c5\u7f6e\u306f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u7406\u7531\u3067\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u304b\u3089\u5916\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u88c5\u7f6e\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u8a3c\u660e\u66f8\u3092\u518d\u751f\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-917), "\u30e6\u30cb\u30c3\u30c8\u306b\u3001\u3053\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-71), "\u88c5\u7f6e\u3078\u306e\u7121\u52b9\u306a\u30a2\u30af\u30bb\u30b9 URL \u3067\u3059\u3002"}, {Integer.toString(-71) + "_TT", "- IP \u30a2\u30c9\u30ec\u30b9\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3055\u308c\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-72), "\u72b6\u6cc1 xml \u306e\u8981\u6c42\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "\u72b6\u6cc1 xml \u306e\u8981\u6c42\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u5fdc\u7b54\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8981\u6c42\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-950), "Gen7 \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u304c\u300c\u30dd\u30ea\u30b7\u30fc \u30e2\u30fc\u30c9\u300d\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8981\u6c42\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u5fdc\u7b54\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "\u7121\u52b9\u306a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002"}, {Integer.toString(-76) + "_TT", "- \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n- \u53d6\u5f97\u3057\u305f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u7834\u640d\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n- \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u4e0d\u5b8c\u5168\u3067\u3042\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-77), "\u88c5\u7f6e\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "\u53d7\u4fe1\u3057\u305f\u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u3002"}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "\u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-78) + "_TT", "- \u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u88c5\u7f6e\u304b\u3089\u9001\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n- \u88c5\u7f6e\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f\u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c GMS \u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3002\n- SA (\u30c8\u30f3\u30cd\u30eb) \u304c GMS \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u4e0a\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n- Syslog \u3092\u8a31\u53ef\u3059\u308b\u30eb\u30fc\u30eb\u304c GMS \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u4e0a\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n- \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u88c5\u7f6e\u306e\u5834\u5408\u306f\u3001\u300cConsole - Web Services - Distributed Deployments\u300d\u306e\u300c\u88dc\u8db3:\u300d\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u8aac\u660e\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-79), "\u53d7\u4fe1\u3057\u305f\u30cf\u30fc\u30c8\u30d3\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5fa9\u53f7\u5316\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-79) + "_TT", "- GMS \u306b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u756a\u53f7\u304c\n\u305d\u306e\u88c5\u7f6e\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u756a\u53f7\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(13), "\u53d7\u4fe1\u3057\u305f syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u3002"}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u53d7\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-81) + "_TT", "- Syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u88c5\u7f6e\u304b\u3089\u9001\u4fe1\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002D138- \u88c5\u7f6e\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f Syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u304c GMS \u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3002\n- SA (\u30c8\u30f3\u30cd\u30eb) \u304c GMS \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u4e0a\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n- Syslog \u3092\u8a31\u53ef\u3059\u308b\u30eb\u30fc\u30eb\u304c GMS \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u4e0a\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-82), "\u53d7\u4fe1\u3057\u305f syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5fa9\u53f7\u5316\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-82) + "_TT", "- GMS \u306b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u756a\u53f7\u304c\n\u305d\u306e\u88c5\u7f6e\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u756a\u53f7\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(12), "\u88c5\u7f6e\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u53d6\u5f97\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002"}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "\u88c5\u7f6e\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002\u53d6\u5f97\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002"}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "\u88c5\u7f6e\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\u88c5\u7f6e\u307e\u305f\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u30c0\u30a6\u30f3\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-4), "\u88c5\u7f6e\u8a2d\u5b9a\u306b\u5bfe\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u4ee5\u4e0a\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-5), "SonicWall \u767b\u9332\u30a6\u30a7\u30d6 \u30b5\u30a4\u30c8\u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-6), "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9/\u8cfc\u8aad\u306e\u305f\u3081\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-7), "\u88c5\u7f6e\u306f\u767b\u9332\u3055\u308c\u307e\u305b\u3093\u3002"}, {Integer.toString(-8), "SonicWall GMS \u767b\u9332\u30b5\u30a4\u30c8\u304c\u4f11\u6b62\u3057\u3066\u3044\u308b\u304b\u307e\u305f\u306f\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002SonicWall GMS \u30b5\u30fc\u30d0\u304c\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-9), "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u304c\u5229\u7528\u53ef\u80fd\u306a\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-10), "\u65e2\u306b SonicWall GMS \u7ba1\u7406\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u88c5\u7f6e\u3092\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-11), "\u4e0d\u6b63\u306a\u88c5\u7f6e\u3092\u8a2d\u5b9a\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-15), "\u5b58\u5728\u3057\u306a\u3044\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3059\u308b\u30eb\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-16), "SonicWall \u30e9\u30a4\u30bb\u30f3\u30b9\u9055\u53cd\u3067\u3059\u3002"}, {Integer.toString(-17), "SonicWall GMS \u5185\u90e8\u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-18), "\u30b3\u30f3\u30c6\u30f3\u30c4 \u30d5\u30a3\u30eb\u30bf \u30ea\u30b9\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-19), "\u30eb\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-47), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-20), "\u5185\u90e8\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30a8\u30e9\u30fc"}, {Integer.toString(-21), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5f85\u6a5f\u4e2d\u3067\u3059"}, {Integer.toString(-22), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u7121\u52b9\u3067\u3059\u3002"}, {Integer.toString(-23), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u306f\u65e2\u306b\u4f7f\u7528\u4e2d\u3067\u3059\u3002"}, {Integer.toString(-24), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-25), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u66f4\u65b0\u30ab\u30a6\u30f3\u30c8 \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-26), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u306e\u66f4\u65b0\u304c\u65e9\u3059\u304e\u307e\u3059\u3002"}, {Integer.toString(-27), "\u63a8\u85a6\u3055\u308c\u308b\u88c5\u7f6e\u3088\u308a\u3082\u53e4\u3044\u88c5\u7f6e\u3092\u7ba1\u7406\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-28), "\u81ea\u52d5\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c\u73fe\u5728\u4f11\u6b62\u3057\u3066\u3044\u308b\u304b\u307e\u305f\u306f\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-85), "\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0 \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u52d5\u4f5c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-29), "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u88c5\u7f6e\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-62), "\u4e0d\u6b63\u306a\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u88c5\u7f6e\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-60), "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306b\u5bfe\u3059\u308b\u6700\u5927\u30d5\u30a1\u30a4\u30eb \u30b5\u30a4\u30ba\u306f 4 MB \u3067\u3059\u3002"}, {Integer.toString(-31), "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u30ed\u30fc\u30ab\u30eb \u30c7\u30a3\u30b9\u30af\u306b\u66f8\u304d\u8fbc\u3080\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-30), "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u81ea\u52d5\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c\u73fe\u5728\u5229\u7528\u3067\u304d\u306a\u3044\u304b\u307e\u305f\u306f\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-32), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30a2\u30af\u30bb\u30b9 \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-33), "\u88c5\u7f6e\u3092\u8a2d\u5b9a\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-34), "\u30e6\u30fc\u30b6\u3092\u8a8d\u8a3c\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-68), "\u30c9\u30e1\u30a4\u30f3\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u304b\u307e\u305f\u306f\u4e0d\u6b63\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u3067\u3059\u3002"}, {Integer.toString(-35), "CMP \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u66f4\u65b0\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-36), "\u767b\u9332\u53ef\u80fd\u306a\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-37), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3067\u304d\u306a\u3044\u304b\u3001\u307e\u305f\u306f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30b5\u30fc\u30d0\u3088\u308a\u4e0d\u660e\u306a\u30a8\u30e9\u30fc\u304c\u5831\u544a\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-38), "\u767b\u9332\u307e\u305f\u306f\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u53ef\u80fd\u306a\u88c5\u7f6e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-39), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-40), "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-41), "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u969b\u306b\u4e0d\u660e\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-48), "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {Integer.toString(-49), "CLI \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30a2\u30af\u30bb\u30b9\u304c\u62d2\u5426\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-42), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u66f4\u65b0\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-43), "1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u96fb\u5b50\u30e1\u30fc\u30eb\u304c\u9001\u4fe1\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-44), "\u6280\u8853\u30b5\u30dd\u30fc\u30c8 \u30ec\u30dd\u30fc\u30c8\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-45), "SPD \u30d5\u30a1\u30a4\u30eb\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-46), "\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-50), "\u30c8\u30f3\u30cd\u30eb\u72b6\u6cc1\u76e3\u8996\u60c5\u5831\u304c\u540c\u671f\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-51), "RCF \u30d5\u30a1\u30a4\u30eb\u304c\u88c5\u7f6e\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-52), "\u30e6\u30fc\u30b6 \u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u7121\u52b9\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30ed\u30b0\u30a4\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-61), "\u524d\u56de\u5b9f\u884c\u3057\u305f\u30bf\u30b9\u30af\u306f\u518d\u8d77\u52d5\u304c\u5fc5\u8981\u3067\u3059\u3002\u6b21\u306e\u9593\u9694\u3067\u30bf\u30b9\u30af\u3092\u8a66\u884c\u3057\u307e\u3059\u3002"}, {Integer.toString(-229), "\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001\u6709\u52b9\u306a\u300c\u96fb\u5b50\u30e1\u30fc\u30eb\u9632\u5fa1\u300d\u306e\u8cfc\u8aad\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {Integer.toString(-230), "\u3053\u306e SonicOS \u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 (\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u8cfc\u8aad) \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3059\u308b\u304b\u3001\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9 \u30ad\u30fc\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-231), "\u76f8\u9055\u3059\u308b WANOPT \u30e2\u30c7\u30eb\u306e\u6709\u52b9\u5316\u30ad\u30fc\u3092\u6df7\u5408\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-232), "\u3053\u306e WANOPT \u30e2\u30c7\u30eb\u306f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 (\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u8cfc\u8aad) \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-201), "API \u30d1\u30e9\u30e1\u30fc\u30bf \u30a8\u30e9\u30fc\u3067\u3059\u3002"}, {Integer.toString(-202), "\u30e6\u30fc\u30b6\u306f\u65e2\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-203), "SonicWall GMS API \u306f\u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-204), "\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-205), "SonicWall GMS Shell \u3092\u7d42\u4e86\u3057\u307e\u3059"}, {Integer.toString(-206), "API \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059"}, {Integer.toString(-207), "\u3053\u306e\u7a2e\u5225\u306b\u5bfe\u3059\u308b\u5217\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-208), "\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-209), "\u6709\u52b9\u5316\u7a2e\u5225\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-210), "IP \u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-211), "\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u304c\u77ed\u304b\u3059\u304e\u307e\u3059\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-212), "\u6587\u5b57\u5217\u306f 16 \u9032\u6570\u6587\u5b57\u306e\u307f\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-213), "\u30b9\u30bf\u30f3\u30d0\u30a4 \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e IP \u30a2\u30c9\u30ec\u30b9\u306f\u30d7\u30e9\u30a4\u30de\u30ea \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3068\u540c\u3058\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-214), "\u6307\u5b9a\u3055\u308c\u305f IP \u30a2\u30c9\u30ec\u30b9\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u88c5\u7f6e\u306f\u8ffd\u52a0\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-215), "\u88c5\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-226), "\u6709\u52b9\u306a\u30e9\u30a4\u30bb\u30f3\u30b9\u3092\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-225), "\u5165\u529b\u3055\u308c\u305f XML \u3092\u89e3\u6790\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-228), "\u7121\u52b9\u306a\u5185\u5bb9\u304c\u5165\u529b\u3055\u308c\u305f XML \u306b\u898b\u3064\u304b\u308a\u307e\u3057\u305f"}, {Integer.toString(-216), "\u4e0d\u6b63\u307e\u305f\u306f\u4e0d\u660e\u306a\u30ec\u30dd\u30fc\u30c8\u7a2e\u5225\u3067\u3059\u3002\u30ec\u30dd\u30fc\u30c8\u304c\u65e5\u6b21\u3001\u9031\u6b21\u3001\u6708\u6b21\u306e\u3044\u305a\u308c\u304b\u3092\u78ba\u5b9a\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-217), "\u4e0d\u6b63\u306a\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9\u9001\u4fe1\u5148\u3067\u3059\u3002\u6709\u52b9\u306a\u9001\u4fe1\u5148\u30a2\u30c9\u30ec\u30b9\u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {Integer.toString(-218), "\u4e0d\u6b63\u306a\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9\u9001\u4fe1\u5143\u3067\u3059"}, {Integer.toString(-219), "\u4e0d\u6b63\u306a SMTP \u30b5\u30fc\u30d0 \u30a2\u30c9\u30ec\u30b9\u3067\u3059"}, {Integer.toString(-220), "\u4e0d\u6b63\u306a\u30ec\u30dd\u30fc\u30c8 \u30ea\u30b9\u30c8\u3067\u3059\u3002\u6709\u52b9\u306a\u30ec\u30dd\u30fc\u30c8 ID \u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044"}, {Integer.toString(-221), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b Analyzer \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e IP \u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-222), "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b Analyzer \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-223), "\u4e0d\u6b63\u306a\u307e\u305f\u306f\u4e0d\u660e\u306a\u30ec\u30dd\u30fc\u30c8\u306e\u65e5\u4ed8\u3067\u3059\u3002\u30ec\u30dd\u30fc\u30c8\u306e\u65e5\u4ed8\u306f mm/dd/yyyy \u5f62\u5f0f\u3067\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {Integer.toString(-224), "\u5165\u529b\u3055\u308c\u305f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb ID \u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-502), "zip \u30d5\u30a1\u30a4\u30eb \u30d1\u30b9\u30ef\u30fc\u30c9\u4fdd\u8b77\u306e\u305f\u3081\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059"}, {Integer.toString(-503), "\u4e0d\u6b63\u306a\u30ce\u30fc\u30c9\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\u30b7\u30ea\u30a2\u30eb\u756a\u53f7 (unitNode \u306e\u5834\u5408) \u307e\u305f\u306f\u8868\u793a\u540d (groupNode \u306e\u5834\u5408) \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-10001), "\u901a\u4fe1\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f"}, {Integer.toString(-10002), "\u5165\u529b\u3055\u308c\u305f XML \u3092\u89e3\u6790\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10005), "\u4e0d\u660e\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3057\u305f"}, {Integer.toString(-10006), "\u4e0d\u660e\u306a\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3057\u305f"}, {Integer.toString(-10011), "\u671f\u9650\u5207\u308c\u306e\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u3092\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10012), "\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u88c5\u7f6e\u306b\u5bfe\u3057\u3066\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u3092\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10013), "\u73fe\u5728\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u6570\u3088\u308a\u3082\u5c11\u306a\u3044\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u3092\u66f4\u65b0\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10014), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u3092\u66f4\u65b0\u6642\u671f\u3088\u308a\u3082\u65e9\u304f\u66f4\u65b0\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-10020), "\u524d\u56de\u306e\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30d1\u30b9\u30ef\u30fc\u30c9\u5909\u66f4\u30bf\u30b9\u30af\u304c\u5f85\u6a5f\u4e2d\u3067\u3059\u3002"}, {Integer.toString(-10100), "McAfee \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u306e\u901a\u4fe1\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f"}, {Integer.toString(-10101), "McAfee \u306f\u3053\u306e\u30b5\u30a4\u30c8\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-10102), "McAfee \u306f\u3053\u306e\u30b5\u30a4\u30c8\u306e\u53e4\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-10103), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30b5\u30a4\u30c8\u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-10200), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b5\u30fc\u30d0\u3068\u306e\u901a\u4fe1\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f"}, {Integer.toString(-10201), "\u88c5\u7f6e\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-10202), "\u5165\u529b\u3055\u308c\u305f\u30e9\u30a4\u30bb\u30f3\u30b9 \u30ad\u30fc\u306f\u65e2\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059"}, {Integer.toString(-10203), "\u3053\u306e\u88c5\u7f6e\u306b\u306f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-10204), "\u5165\u529b\u3055\u308c\u305f\u8907\u6570\u306e\u30ad\u30fc\u306f\u540c\u4e00\u671f\u9593\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093"}, {Integer.toString(-10205), "\u7121\u6599\u30c8\u30e9\u30a4\u30a2\u30eb \u30ad\u30fc\u306e\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-10206), "1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4e0d\u6b63\u306a\u5024\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-10210), "\u5165\u529b\u3055\u308c\u305f\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10211), "\u5165\u529b\u3055\u308c\u305f\u30e9\u30a4\u30bb\u30f3\u30b9 \u30ad\u30fc\u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059"}, {Integer.toString(-10212), "\u5165\u529b\u3055\u308c\u305f\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u4e0d\u6b63\u306a\u6587\u5b57\u3092\u542b\u3093\u3067\u3044\u308b\u3001\u3042\u308b\u3044\u306f\u30016 \uff5e 12 \u6587\u5b57\u306e\u7bc4\u56f2\u5185\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10213), "\u5165\u529b\u3055\u308c\u305f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10214), "\u5165\u529b\u3055\u308c\u305f OEM \u30b3\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10215), "\u5165\u529b\u3055\u308c\u305f WAN IP \u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10220), "\u3053\u306e\u88c5\u7f6e\u306b\u5bfe\u3059\u308b\u524d\u56de\u306e\u8981\u6c42\u304c\u307e\u3060\u5f85\u6a5f\u4e2d\u3067\u3059"}, {Integer.toString(-10250), "\u88c5\u7f6e\u306b\u306f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u304c\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u518d\u6709\u52b9\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {Integer.toString(-10251), "\u4e0d\u6b63\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u305f\u3081\u3001\u88c5\u7f6e\u306e\u518d\u6709\u52b9\u5316\u306f\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-10260), "\u5165\u529b\u3055\u308c\u305f\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-10261), "\u5165\u529b\u3055\u308c\u305f\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10262), "\u88c5\u7f6e\u306f\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10263), "\u88c5\u7f6e\u306f\u65e2\u306b\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u8cfc\u8aad\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-10264), "\u88c5\u7f6e\u306f\u3053\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u306f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10265), "\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u6240\u6709\u8005\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-10266), "\u88c5\u7f6e\u306f\u65e2\u306b\u4ed6\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3067\u3059"}, {Integer.toString(-10267), "\u5165\u529b\u3055\u308c\u305f\u65b0\u3057\u3044\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u30e6\u30fc\u30b6\u6570\u304c\u5229\u7528\u53ef\u80fd\u306a\u30e9\u30a4\u30bb\u30f3\u30b9\u5171\u6709\u30b0\u30eb\u30fc\u30d7\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u6570\u3092\u8d85\u3048\u3066\u3044\u307e\u3059"}, {Integer.toString(-10004), "\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u64cd\u4f5c\u306b\u5bfe\u3057\u3066\u30011 \u307e\u305f\u306f\u8907\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059"}, {Integer.toString(-10300), "\u5165\u529b\u3055\u308c\u305f\u300c\u5b8c\u5168\u30bb\u30ad\u30e5\u30a2 \u30d1\u30fc\u30c8\u30ca\u30fc\u300c\u306b\u95a2\u3059\u308b\u60c5\u5831\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093"}, {Integer.toString(-10301), "\u5165\u529b\u3055\u308c\u305f\u300c\u5b8c\u5168\u30bb\u30ad\u30e5\u30a2 \u30d1\u30fc\u30c8\u30ca\u30fc\u300c\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-10303), "\u5165\u529b\u3055\u308c\u305f\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9 \u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u30e6\u30fc\u30b6\u6570\u304c\u4e0d\u6b63\u3067\u3059"}, {Integer.toString(-10304), "\u300c\u5b8c\u5168\u30bb\u30ad\u30e5\u30a2 \u30d1\u30fc\u30c8\u30ca\u30fc\u300d\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u306a\u3044\u88c5\u7f6e\u3092\u7ba1\u7406\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f"}, {Integer.toString(-20000), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b5\u30fc\u30d0\u3068\u306e\u901a\u4fe1\u4e2d\u306b\u4e0d\u660e\u306a\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20101), "\u5165\u529b\u3055\u308c\u305f\u9023\u7d61\u5148\u306f\u65e2\u306b\u30e6\u30fc\u30b6\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20102), "\u5165\u529b\u3055\u308c\u305f\u9023\u7d61\u5148\u3092\u30e6\u30fc\u30b6\u306b\u5bfe\u3057\u3066\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20106), "\u30e6\u30fc\u30b6\u60c5\u5831\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u305f\u3081\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-20111), "\u9023\u7d61\u5148\u60c5\u5831\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20112), "\u9023\u7d61\u5148\u60c5\u5831\u304c\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20113), "\u9023\u7d61\u5148\u60c5\u5831\u304c\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20116), "\u65e2\u306b\u88c5\u7f6e\u306f\u5225\u306e MySonicWall.com \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20117), "\u6307\u5b9a\u3057\u305f\u88c5\u7f6e\u304c\u88c5\u7f6e\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u4e0a\u306b\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20118), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u88c5\u7f6e\u3092\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20119), "\u6307\u5b9a\u3057\u305f\u88c5\u7f6e\u306e\u72b6\u6cc1\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20121), "\u6307\u5b9a\u3057\u305f\u88c5\u7f6e\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20122), "\u6307\u5b9a\u3057\u305f\u6709\u52b9\u5316\u30ad\u30fc\u306f\u65e2\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20123), "\u4e0d\u6b63\u306a\u6709\u52b9\u5316\u30b3\u30fc\u30c9\u304c\u4f7f\u7528\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20124), "\u4e0d\u6b63\u306a\u6709\u52b9\u5316\u30b3\u30fc\u30c9/\u88c5\u7f6e\u306e\u7d44\u307f\u5408\u308f\u305b\u304c\u4f7f\u7528\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20125), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u3067\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20126), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u3067\u6709\u52b9\u5316\u304c\u5b8c\u4e86\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20131), "SonicWall GMS \u30b7\u30b9\u30c6\u30e0\u306e\u8aa4\u3063\u305f MAC \u30a2\u30c9\u30ec\u30b9\u306e\u767b\u9332\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-20132), "SonicWall GMS \u30b7\u30b9\u30c6\u30e0\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20133), "\u5165\u529b\u3055\u308c\u305f SonicWall GMS \u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-20134), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u3067 SonicWall GMS \u72b6\u6cc1\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20135), "SonicWall GMS \u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20136), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306f SonicWall GMS \u30b7\u30b9\u30c6\u30e0\u3092\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20142), "\u4e0d\u6b63\u306a MAC \u30a2\u30c9\u30ec\u30b9\u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-20143), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u3067 SonicWall GMS \u306e\u5229\u7528\u53ef\u80fd\u306a\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20144), "\u57fa\u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u671f\u9593\u304c\u6307\u5b9a\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20145), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u5185\u3067\u57fa\u672c\u30d1\u30c3\u30b1\u30fc\u30b8 \u30b7\u30b9\u30c6\u30e0\u60c5\u5831\u306e\u8aad\u307f\u8fbc\u307f\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20146), "\u3053\u306e\u88fd\u54c1\u306b\u5bfe\u3059\u308b\u30ce\u30fc\u30c9 \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {Integer.toString(-20147), "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b SonicWall GMS \u306f\u65e2\u306b\u88fd\u54c1\u7248\u3067\u3059\u3002"}, {Integer.toString(-20148), "\u7b50\u4f53\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20149), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u5185\u3067 SonicWall GMS \u30b7\u30b9\u30c6\u30e0\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20150), "\u5165\u529b\u3055\u308c\u305f SonicWall GMS \u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u306f\u30e6\u30fc\u30b6\u306b\u5bfe\u3057\u3066\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20151), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u5185\u3067\u30ec\u30dd\u30fc\u30c8\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20152), "\u4e0d\u6b63\u306a SonicWall GMS \u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3068\u30e6\u30fc\u30b6\u540d\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3059\u3002"}, {Integer.toString(-20153), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u5185\u3067 ViewPoint \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b SonicWall GMS \u306e\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306b\u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20154), "\u7b50\u4f53\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3001\u3042\u308b\u3044\u306f\u4e0d\u6b63\u306a\u30e6\u30fc\u30b6\u540d\u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20155), "\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3059\u308b\u57fa\u672c\u9023\u7d61\u5148\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3001\u307e\u305f\u306f\u6709\u52b9\u671f\u9650\u5207\u308c\u3067\u3059\u3002"}, {Integer.toString(-20201), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9 \u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b XML \u5165\u529b\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-20202), "\u5185\u90e8\u30a8\u30e9\u30fc: \u5165\u529b\u306b\u30e6\u30fc\u30b6\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-20203), "SonicWall GMS \u767b\u9332\u30b7\u30b9\u30c6\u30e0 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e0d\u6b63\u3067\u3059\u3002"}, {Integer.toString(-20204), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u4e0d\u6b63\u306a\u65b9\u5f0f\u304c\u8981\u6c42\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20205), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u4e0d\u6b63\u306a XML \u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8981\u6c42\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-20401), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20402), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u30ec\u30b8\u30b9\u30c8\u30ea \u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20403), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20404), "\u5185\u90e8\u30a8\u30e9\u30fc: \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc \u30a8\u30e9\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002"}, {Integer.toString(-20140), "\u6307\u5b9a\u3055\u308c\u305f\u7b50\u4f53\u306b\u5bfe\u3059\u308b PKI \u60c5\u5831\u304c\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u767b\u9332\u30b7\u30b9\u30c6\u30e0\u306b\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-20141), "\u6307\u5b9a\u3055\u308c\u305f\u7b50\u4f53\u306b\u5bfe\u3059\u308b PKI \u30b5\u30fc\u30d3\u30b9\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-227), "\u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306b\u5bfe\u3059\u308b\u30e1\u30e2\u30ea\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3088\u308a\u3082\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {Integer.toString(-66), "\u7b50\u4f53\u306b\u5bfe\u3057\u3066\u4e0d\u6b63\u306a\u30b7\u30b0\u30cd\u30c1\u30e3 \u30d5\u30a1\u30a4\u30eb\u304c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u3088\u3046\u3068\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-67), "\u30b7\u30b0\u30cd\u30c1\u30e3 \u30d5\u30a1\u30a4\u30eb\u3092\u88c5\u7f6e\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3053\u306e\u88c5\u7f6e\u306e\u30e2\u30c7\u30eb/\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30b7\u30b0\u30cd\u30c1\u30e3 \u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u64cd\u4f5c\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-500), "lm2.sonicwall.com \u304b\u3089\u306e\u53d7\u4fe1\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-501), "lm2.sonicwall.com \u306b\u5230\u9054\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-907), "\u88c5\u7f6e\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-901), "\u30ec\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 ID \u304c\u7121\u52b9\u3067\u3042\u308b\u304b\u3001\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-902), "\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3 \u30a8\u30f3\u30af\u30ed\u30fc\u30ba \u30ec\u30b3\u30fc\u30c9\u3092\u9069\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-903), "\u30ec\u30b3\u30fc\u30c9\u3092\u9069\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-904), "\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 ID \u304c\u7121\u52b9\u3067\u3042\u308b\u304b\u3001\u5b58\u5728\u3057\u307e\u305b\u3093\u3002"}, {Integer.toString(-905), "\u30ec\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-906), "\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u9069\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-908), "\u30d7\u30fc\u30eb\u304b\u3089\u306e\u63a5\u7d9a\u306e\u5f85\u6a5f\u4e2d\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-909), "\u30ea\u30e2\u30fc\u30c8 \u30db\u30b9\u30c8\u3078\u306e\u63a5\u7d9a\u306e\u5f85\u6a5f\u4e2d\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-910), "\u3053\u306e\u88c5\u7f6e\u7a2e\u5225\u306e\u69cb\u6210\u8a2d\u5b9a\u306f\u8aa4\u3063\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-911), "\u3053\u306e\u88c5\u7f6e\u306b\u9069\u7528\u53ef\u80fd\u306a\u69cb\u6210\u8a2d\u5b9a\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u3057\u3070\u3089\u304f\u304a\u5f85\u3061\u304f\u3060\u3055\u3044\u3002"}, {Integer.toString(-912), "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9 \u30db\u30b9\u30c8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-913), "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u63a5\u7d9a\u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-914), "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3092\u901a\u3058\u3066\u30c7\u30fc\u30bf\u307e\u305f\u306f\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306b\u554f\u984c\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-915), "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3092\u8a8d\u8a3c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {Integer.toString(-800), "\u3053\u306e\u88c5\u7f6e\u3067\u306f\u300cGMS \u3078\u306e\u5916\u90e8\u30d5\u30ed\u30fc\u5831\u544a\u300d\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-801), "\u300cFlow Forwarder Gateway\u300d(\u30d5\u30ed\u30fc\u8ee2\u9001\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4) \u306e\u8a2d\u5b9a\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-802), "\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\u300cGMS \u3078\u306e\u5916\u90e8\u30d5\u30ed\u30fc\u5831\u544a\u300d\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-803), "\u3053\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u300cGMS \u3078\u306e\u5916\u90e8\u30d5\u30ed\u30fc\u5831\u544a\u300d\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093"}, {Integer.toString(-804), "\u3053\u306e\u88c5\u7f6e\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u53ef\u8996\u5316\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-805), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u305f\u3081\u306e\u5341\u5206\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-806), "\u30e9\u30f3\u30bf\u30a4\u30e0 \u30e1\u30e2\u30ea\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-807), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1 \u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-808), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2 \u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-809), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1 \u3068 2 \u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-810), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1 \u3068\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc\u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-811), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1\u30012\u3001\u304a\u3088\u3073\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc\u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-812), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2 \u3068\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc\u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-813), "\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc\u306b\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-814), "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3092 GMS \u3067\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-815), "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u7d42\u7aef\u306b\u30c8\u30f3\u30cd\u30eb\u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-816), "\u30de\u30cd\u30fc\u30b8\u30c9\u88c5\u7f6e\u306e\u7d42\u7aef\u306b\u30c8\u30f3\u30cd\u30eb\u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {Integer.toString(-817), "\u300cCloud GMS Management and Reporting (\u30af\u30e9\u30a6\u30c9 GMS \u7ba1\u7406\u3068\u30ec\u30dd\u30fc\u30c8)\u300d\u307e\u305f\u306f\u300cAnalytics (\u5206\u6790)\u300d\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u88c5\u7f6e\u306b\u3042\u308a\u307e\u305b\u3093"}, {Integer.toString(-818), "\u51e6\u7406\u80fd\u529b\u304c\u8db3\u308a\u306a\u3044\u305f\u3081\u306b\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-819), "\u5e2f\u57df\u5e45\u304c\u8db3\u308a\u306a\u3044\u305f\u3081\u306b\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093"}, {Integer.toString(-820), "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u767b\u9332\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"EDIT_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u3092\u7de8\u96c6"}, {"VIEW_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u306e\u8a73\u7d30\u3092\u8868\u793a"}, {"ADD_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u3092\u8ffd\u52a0"}, {"SELECT_TO_DELETE", "\u524a\u9664\u3059\u308b\u30c9\u30e1\u30a4\u30f3/\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SELECT_AS_TO_DEL", "\u524a\u9664\u3059\u308b\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"DELETE_CONFIRMATION", "\u6b21\u306e\u30c9\u30e1\u30a4\u30f3\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f: '"}, {"USER_DELETE_CONFIRMATION", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3001\u30e6\u30fc\u30b6\u3001\u30e6\u30fc\u30b6\u7a2e\u5225\u3001\u304a\u3088\u3073\u305d\u308c\u3089\u306e\u8a2d\u5b9a\u3082\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002"}, {"USER_AS_DELETE_CONFIRMATION", "\u30e6\u30fc\u30b6\u3001\u30e6\u30fc\u30b6\u7a2e\u5225\u3001\u304a\u3088\u3073\u305d\u308c\u3089\u306e\u8a2d\u5b9a\u3082\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002"}, {"SURE_WANT_TO_CONTINUE", "\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"MULTIPLE_DELETE_CONFIRMATION", "\u6b21\u306e\u30c9\u30e1\u30a4\u30f3\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f:"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "\u6b21\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f:"}, {"AND_AS_DELETE_CONFIRMATION", "\u6b21\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u524a\u9664\u3057\u307e\u3059:"}, {"WANT_TO_CONTINUE", "\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"DOMAINS", "\u30c9\u30e1\u30a4\u30f3"}, {"SEARCH", "\u691c\u7d22"}, {"NAME", "\u540d\u524d"}, {"DOMAIN_TYPE", "\u30c9\u30e1\u30a4\u30f3\u7a2e\u5225"}, {"DOMAIN_SETTINGS", "\u30c9\u30e1\u30a4\u30f3\u306e\u8a2d\u5b9a"}, {"ALIAS", "\u30a8\u30a4\u30ea\u30a2\u30b9"}, {"DISPLAY_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u3092\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u8868\u793a"}, {"SET_AS_DEFAULT", "\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c9\u30e1\u30a4\u30f3\u306b\u8a2d\u5b9a"}, {"HOST_NAME", "\u30db\u30b9\u30c8\u540d"}, {"HOST_TYPE", "\u30c9\u30e1\u30a4\u30f3\u7a2e\u5225"}, {"EQUALS", "\u540c\u3058"}, {"STARTS_WITH", "\u6b21\u3067\u59cb\u307e\u308b"}, {"ENDS_WITH", "\u6b21\u3067\u7d42\u308f\u308b"}, {"CONTAINS", "\u6b21\u3092\u542b\u3080"}, {"LOCAL", "\u30ed\u30fc\u30ab\u30eb"}, {"REMOTE", "\u30ea\u30e2\u30fc\u30c8"}, {"DOMAINS", "\u30c9\u30e1\u30a4\u30f3"}, {"SSL_USED", "SSL \u3092\u4f7f\u7528"}, {"CONFIGURE", "\u8a2d\u5b9a"}, {"NO_DOMAIN_FOUND", "\u30c9\u30e1\u30a4\u30f3\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"NO_AS_FOUND", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"ADD_DOMAIN", "\u30c9\u30e1\u30a4\u30f3\u3092\u8ffd\u52a0"}, {"DELETE_DOMAINS", "\u30c9\u30e1\u30a4\u30f3/\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u524a\u9664"}, {"DELETE_ASS", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u524a\u9664"}, {"EQUALS", "\u540c\u3058"}, {"STARTS_WITH", "\u6b21\u3067\u59cb\u307e\u308b"}, {"ENDS_WITH", "\u6b21\u3067\u7d42\u308f\u308b"}, {"CONTAINS", "\u6b21\u3092\u542b\u3080"}, {"LOCAL", "\u30ed\u30fc\u30ab\u30eb"}, {"REMOTE", "\u30ea\u30e2\u30fc\u30c8"}, {"REMOTE_DOMAIN", "\u30ea\u30e2\u30fc\u30c8 \u30c9\u30e1\u30a4\u30f3"}, {"ADMIN_PASSWORD", "\u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"DEFAULT_ADMIN_USER", "\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u30e6\u30fc\u30b6"}, {"AUTH_PORT", "\u8a8d\u8a3c\u30dd\u30fc\u30c8"}, {"ACCT_PORT", "\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0 \u30dd\u30fc\u30c8"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "\u57fa\u672c\u8b58\u5225\u540d"}, {"SEARCH_FILTER", "\u691c\u7d22\u30d5\u30a3\u30eb\u30bf"}, {"SHARED_SECRET", "\u5171\u6709\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"USE_SSL", "SSL \u3092\u4f7f\u7528"}, {"SSL_PORT", "SSL \u30dd\u30fc\u30c8"}, {"ANONYMOUS_LOGIN", "\u533f\u540d\u30ed\u30b0\u30a4\u30f3"}, {"LOGIN_USER_NAME", "\u30ed\u30b0\u30a4\u30f3 \u30e6\u30fc\u30b6\u306e\u8b58\u5225\u540d"}, {"DNAME_MSG", "\u30d0\u30a4\u30f3\u30c9\u306e\u5b9f\u884c\u6642\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30fc\u30d0\u3078\u306e\u8a8d\u8a3c\u306b\u4f7f\u7528\u3055\u308c\u308b\u8b58\u5225\u540d (DN: Distinguished Name) \u3067\u3059\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3059\u308b\u5024\u306f\u8b58\u5225\u540d\u3068\u3057\u3066\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b: [uid=xyz,ou=People,dc=example,dc=com]\u3001[cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "\u30ed\u30b0\u30a4\u30f3 \u30d1\u30b9\u30ef\u30fc\u30c9"}, {"PROTOCOL_VERSION", "\u30d7\u30ed\u30c8\u30b3\u30eb \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"LDAPV2", "LDAP \u30d0\u30fc\u30b8\u30e7\u30f3 2"}, {"LDAPV3", "LDAP \u30d0\u30fc\u30b8\u30e7\u30f3 3"}, {"SETTINGS", "\u8a2d\u5b9a"}, {"USER_DIRECTORY_LDAP", "\u30e6\u30fc\u30b6 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea LDAP \u30b9\u30ad\u30fc\u30de"}, {"LDAP_SCHEMA", "LDAP \u30b9\u30ad\u30fc\u30de"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "\u30e6\u30fc\u30b6\u5b9a\u7fa9"}, {"USER_OBJECTS", "\u30e6\u30fc\u30b6 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "\u30ed\u30b0\u30a4\u30f3\u540d\u5c5e\u6027"}, {"FIRST_NAME", "\u30d5\u30a1\u30fc\u30b9\u30c8 \u30cd\u30fc\u30e0\u5c5e\u6027"}, {"LAST_NAME", "\u30e9\u30b9\u30c8 \u30cd\u30fc\u30e0\u5c5e\u6027"}, {"EMAIL", "\u96fb\u5b50\u30e1\u30fc\u30eb\u5c5e\u6027"}, {"TELEPHONE", "\u96fb\u8a71\u5c5e\u6027"}, {"CON_TIMEOUT", "\u63a5\u7d9a\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8"}, {"SCHEMA", "\u30b9\u30ad\u30fc\u30de"}, {"TEST_SETTINGS", "\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8"}, {"TEST_RADIUS_SETTINGS", "RADIUS \u306e\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8"}, {"TEST_LDAP_MSG", "LDAP \u306e\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u6709\u52b9\u306a LDAP \u3092\u5165\u529b\u3057\u307e\u3059\u3002"}, {"TEST_RADIUS_MSG", "RADIUS \u306e\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u6709\u52b9\u306a RADIUS \u3092\u5165\u529b\u3057\u307e\u3059\u3002"}, {"TEST_MSG", "\u30ed\u30b0\u30a4\u30f3\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3057\u3066\u3001\u300c\u30c6\u30b9\u30c8\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u3053\u306e\u64cd\u4f5c\u3092\u884c\u3046\u3068\u3001\u3053\u308c\u307e\u3067\u306b\u884c\u3063\u305f\u5909\u66f4\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002"}, {"USER", "\u30e6\u30fc\u30b6"}, {"PWD", "\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"RUN_CLIENT_TEST", "\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c"}, {"TEST_STATUS", "\u30c6\u30b9\u30c8\u72b6\u6cc1"}, {"RETURNED_USER_ATTRIBUTES", "\u30c6\u30b9\u30c8\u7d50\u679c"}, {"TEST", "\u30c6\u30b9\u30c8"}, {"OK", "OK"}, {"CANCEL", "\u30ad\u30e3\u30f3\u30bb\u30eb"}, {"CLOSE", "\u9589\u3058\u308b"}, {"CANT_DELETE_LOCALDOMAIN", "LocalDomain \u306f\u7de8\u96c6/\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CANT_EDIT", "\u30c9\u30e1\u30a4\u30f3\u304c 1 \u3064\u3057\u304b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u7de8\u96c6\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_NAME", "\u540d\u524d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_ADMIN_PWD", "\u7ba1\u7406\u8005\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_ADMIN_USER", "\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u30e6\u30fc\u30b6\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_AUTH_PORT", "\u8a8d\u8a3c\u30dd\u30fc\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_AUTH_PORT", "\u8a8d\u8a3c\u30dd\u30fc\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"AUTH_PORT_RANGE", "\u8a8d\u8a3c\u30dd\u30fc\u30c8\u306b\u306f 0 \uff5e 65535 \u306e\u7bc4\u56f2\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"EMPTY_ACCT_PORT", "\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0 \u30dd\u30fc\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_ACCT_PORT", "\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0 \u30dd\u30fc\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"EMPTY_BD_NAME", "\u57fa\u672c\u8b58\u5225\u540d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_SEARCH_FILTER", "\u691c\u7d22\u30d5\u30a3\u30eb\u30bf\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_SHRED_SECRET", "\u5171\u6709\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_SSL_PORT", "SSL \u30dd\u30fc\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_SSL_PORT", "SSL \u30dd\u30fc\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"SSL_PORT_RANGE", "SSL \u30dd\u30fc\u30c8\u306b\u306f 0 \uff5e 65535 \u306e\u7bc4\u56f2\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"EMPTY_LOGIN", "\u30ed\u30b0\u30a4\u30f3 \u30e6\u30fc\u30b6\u306e\u8b58\u5225\u540d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_LOGIN_PWD", "\u30ed\u30b0\u30a4\u30f3 \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"EMPTY_CON_TIMEOUT", "\u63a5\u7d9a\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_CON_TIMEOUT", "\u63a5\u7d9a\u30dd\u30fc\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"RECOMMEND_SSL", "\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3068\u306e\u30bb\u30ad\u30e5\u30a2\u306a\u901a\u4fe1\u306b\u306f SSL \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002"}, {"CON_NOT_SECURE", "SSL \u3092\u4f7f\u7528\u3057\u306a\u3044\u3068\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306a\u63a5\u7d9a\u3092\u78ba\u7acb\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DOMAIN_EXISTS", "\u30c9\u30e1\u30a4\u30f3\u540d\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"ALIAS_EXISTS", "\u3053\u306e\u540d\u524d\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"DOMAIN_INVALID", "\u7121\u52b9\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"DOMAIN_VALID_CHARS", "\u540d\u524d\u306b\u306f\u6b21\u306e\u6587\u5b57\u306e\u307f\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059:"}, {"DOMAIN_VALID_CHARS_LIST", "\u82f1\u6570\u5b57\u3001. (\u30d4\u30ea\u30aa\u30c9)\u3001- (\u30cf\u30a4\u30d5\u30f3)\u3001_ (\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2)\u3001\u30b9\u30da\u30fc\u30b9\u3002"}, {"SPECIFY_VALID_NAME", "\u6709\u52b9\u306a\u6587\u5b57\u3092\u4f7f\u7528\u3057\u305f\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"DIR_GRP_SETTINGS", "Active Directory \u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "AD \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u306e\u307f\u3092\u8a31\u53ef"}, {"DIR_GROUPS", "Active Directory \u30b0\u30eb\u30fc\u30d7"}, {"GRP_NAME_INVALID", "\u7121\u52b9\u306a\u30b0\u30eb\u30fc\u30d7\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"GRP_NAME_INVALID_LENGTH", "\u30b0\u30eb\u30fc\u30d7\u540d\u306b\u4f7f\u7528\u3067\u304d\u308b\u6587\u5b57\u6570\u306f 200 \u6587\u5b57\u4ee5\u4e0b\u3067\u3059\u3002"}, {"AUTH_SERVER_NAME", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u540d"}, {"ADD_AUTH_SERVER", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u8ffd\u52a0"}, {"ADD_AUTHSERVER", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u8ffd\u52a0"}, {"EDIT_AUTHSERVER", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u7de8\u96c6"}, {"DELETE_DOMAIN", "\u3053\u306e\u30c9\u30e1\u30a4\u30f3\u3092\u524a\u9664"}, {"CANT_DELETE_LOCAL_AS", "\u30ed\u30fc\u30ab\u30eb\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306f\u7de8\u96c6/\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CANT_DELETE_ADMIN_AS", "\u3053\u306e\u30c9\u30e1\u30a4\u30f3\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u306f\u3001\u3053\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306b\u5bfe\u3057\u3066\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u3092\u5225\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306b\u79fb\u52d5\u3057\u305f\u3089\u3001\u64cd\u4f5c\u3092\u3084\u308a\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"EDIT_AUTH_SERVER", "\u3053\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u7de8\u96c6"}, {"VIEW_AUTH_SERVER", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u8a73\u7d30\u3092\u8868\u793a"}, {"DELETE_AUTH_SERVER", "\u3053\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u524a\u9664"}, {"AS_INVALID", "\u7121\u52b9\u306a\u8a8d\u8a3c\u30b5\u30fc\u30d0\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {"AS_EXISTS", "\u3053\u306e\u540d\u524d\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002"}, {"EMPTY_AS_NAME", "\u8a8d\u8a3c\u30b5\u30fc\u30d0\u540d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"AS_NAME_MSG", "\u4f5c\u6210\u3059\u308b\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u540d\u524d\u3002\u3053\u306e\u540d\u524d\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u5185\u306e\u5225\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u3092\u7ba1\u7406\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002"}, {"AS_DELETE_CONFIRMATION", "\u6b21\u306e\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f: '"}, {"PRI_RADIUS", "\u30d7\u30e9\u30a4\u30de\u30ea RADIUS \u30b5\u30fc\u30d0"}, {"AUTH_PROTOCOL", "\u8a8d\u8a3c\u30d7\u30ed\u30c8\u30b3\u30eb"}, {"RADIUS_TIMEOUT", "RADIUS \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8 (\u79d2)"}, {"MAX_RETRIES", "\u6700\u5927\u518d\u8a66\u884c\u56de\u6570"}, {"BACK_RADIUS", "\u30d0\u30c3\u30af\u30a2\u30c3\u30d7 RADIUS \u30b5\u30fc\u30d0"}, {"RADIUS_USER_GROUP", "RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a"}, {"ALLOW_GROUP_MEMBERS", "RADIUS \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u306e\u307f\u3092\u8a31\u53ef"}, {"USE_SW_VSA", "USE_SW_VSA\tSonicWall \u30d9\u30f3\u30c0\u30fc\u56fa\u6709\u306e\u5c5e\u6027\u3092 RADIUS \u30b5\u30fc\u30d0\u3067\u4f7f\u7528\u3059\u308b"}, {"USE_FILTER_ID", "Filter-ID \u5c5e\u6027\u3092 RADIUS \u30b5\u30fc\u30d0\u3067\u4f7f\u7528"}, {"ALLOW_GROUPS", "\u8a31\u53ef\u3055\u308c\u3066\u3044\u308b RADIUS \u30b0\u30eb\u30fc\u30d7"}, {"USER_GROUP", "\u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"EMPTY_MAX_RETRIES", "\u6700\u5927\u8a66\u884c\u56de\u6570\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"POSITIVE_MAX_RETRIES", "\u6700\u5927\u518d\u8a66\u884c\u56de\u6570\u306b\u306f\u6b63\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"TEST_USER_NAME", "\u300c\u30c6\u30b9\u30c8 \u30e6\u30fc\u30b6\u540d\u300d\u3092\u7a7a\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {"TEST_USER_PWD", "\u300c\u30c6\u30b9\u30c8 \u30e6\u30fc\u30b6 \u30d1\u30b9\u30ef\u30fc\u30c9\u300d\u3092\u7a7a\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DOMAIN_NAME_MSG", "\u4f5c\u6210\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u306e\u540d\u524d\u3002\u3053\u306e\u540d\u524d\u306f\u3001\u30ed\u30b0\u30a4\u30f3 \u30da\u30fc\u30b8\u306e\u300c\u30c9\u30e1\u30a4\u30f3\u300d\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002"}, {"DOMAIN_TYPE_MSG", "\u30c9\u30e1\u30a4\u30f3\u306e\u7a2e\u5225\u3002[\u30ed\u30fc\u30ab\u30eb] \u307e\u305f\u306f [\u30ea\u30e2\u30fc\u30c8] \u304c\u3042\u308a\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u3067\u3001LDAP \u307e\u305f\u306f AD \u30b5\u30fc\u30d0\u306a\u3069\u306e\u5916\u90e8\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\u30e6\u30fc\u30b6\u3092\u8a8d\u8a3c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001[\u30ea\u30e2\u30fc\u30c8] \u7a2e\u5225\u306e\u30c9\u30e1\u30a4\u30f3\u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002[\u30ed\u30fc\u30ab\u30eb] \u7a2e\u5225\u306e\u30c9\u30e1\u30a4\u30f3\u306b\u306f\u3001SGMS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306e\u30e6\u30fc\u30b6 \u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u8a8d\u8a3c\u306e\u8a73\u7d30\u304c\u542b\u307e\u308c\u307e\u3059\u3002[\u30ed\u30fc\u30ab\u30eb] \u7a2e\u5225\u306e\u30c9\u30e1\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001SGMS \u5185\u3067\u8907\u6570\u306e\u30c9\u30e1\u30a4\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3067\u304d\u3001\u5916\u90e8\u8a8d\u8a3c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002"}, {"ADMIN_PASSWORD_MSG", "[\u30ed\u30fc\u30ab\u30eb] \u7a2e\u5225\u306e\u30c9\u30e1\u30a4\u30f3\u3092\u65b0\u3057\u304f\u4f5c\u6210\u3059\u308b\u3068\u3001\u305d\u306e\u30c9\u30e1\u30a4\u30f3\u306e [\u7ba1\u7406\u8005] \u30e6\u30fc\u30b6\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u7ba1\u7406\u8005\u30e6\u30fc\u30b6\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"ADMIN_USERID_MSG", "\u30c9\u30e1\u30a4\u30f3\u306e\u7ba1\u7406\u8005\u306b\u306a\u308b\u5fc5\u8981\u304c\u3042\u308b\u30e6\u30fc\u30b6\u306e\u30e6\u30fc\u30b6\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u30e6\u30fc\u30b6\u540d\u306b\u306f\u3001\u3053\u306e\u30c9\u30e1\u30a4\u30f3\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30fc\u30d0\u5185\u306e\u6709\u52b9\u306a\u30e6\u30fc\u30b6\u540d\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u540d\u524d [\u7ba1\u7406\u8005] \u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u30e6\u30fc\u30b6 ID [\u7ba1\u7406\u8005] \u3092\u6301\u3064\u30e6\u30fc\u30b6\u304c\u95a2\u9023\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b58\u5728\u3057\u3001\u305d\u306e\u30e6\u30fc\u30b6\u304c\u7ba1\u7406\u8005\u6a29\u9650\u3092\u6301\u3064\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b: jdoe"}, {"HOST_NAME_MSG", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u30db\u30b9\u30c8\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002\u4f8b: \t[mydc.example.com]\u3001[X.X.X.X] (IP \u30a2\u30c9\u30ec\u30b9)\u3001[company.com]\u3002\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c Windows Active Directory (AD) \u30b5\u30fc\u30d0\u3067\u3001AD \u30d5\u30a9\u30ec\u30b9\u30c8\u4e0b\u306e\u30e6\u30fc\u30b6\u3092\u8a8d\u8a3c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30c9\u30e1\u30a4\u30f3\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001AD \u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u30b0\u30ed\u30fc\u30d0\u30eb \u30ab\u30bf\u30ed\u30b0\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3092\u30db\u30b9\u30c8\u540d\u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002"}, {"AUTHENTICATION_PORT_MSG", "\u8a8d\u8a3c\u8981\u6c42\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b LDAP \u307e\u305f\u306f AD \u30b5\u30fc\u30d0\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u3002LDAP/AD \u30b5\u30fc\u30d0\u306e\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 389 \u3067\u3059\u3002AD \u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u30b0\u30ed\u30fc\u30d0\u30eb \u30ab\u30bf\u30ed\u30b0\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3092\u30db\u30b9\u30c8\u540d\u3068\u3057\u3066\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u5bfe\u5fdc\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3082\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3268 \u3067\u3059\u3002"}, {"HOST_TYPE_MSG", "\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u30b5\u30fc\u30d0\u304c LDAP \u30b5\u30fc\u30d0\u3001Windows Active Directory\u3001\u307e\u305f\u306f RADIUS \u30b5\u30fc\u30d0\u306e\u5834\u5408\u3001\u3053\u306e\u5024\u306f\u3001\u30ea\u30e2\u30fc\u30c8\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u7a2e\u5225\u3092\u793a\u3057\u307e\u3059\u3002"}, {"ALIAS_MSG", "\u30c9\u30e1\u30a4\u30f3\u540d\u306e\u7c21\u7565\u5f62\u5f0f\u3002\u30c9\u30e1\u30a4\u30f3\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u306b\u3001GMS \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u304b\u3089\u306e\u30ed\u30b0\u30a4\u30f3\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059 (\u4f8b: \u30a8\u30a4\u30ea\u30a2\u30b9\\\\\u30e6\u30fc\u30b6\u30fc\u540d)\u3002\u30c9\u30e1\u30a4\u30f3\u540d\u306e\u9577\u3055\u304c 16 \u6587\u5b57\u4ee5\u4e0b\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u30a8\u30a4\u30ea\u30a2\u30b9\u306b\u81ea\u52d5\u7684\u306b\u5165\u529b\u3055\u308c\u307e\u3059\u3002"}, {"PROTOCOL_VERSION_MSG", "\u3053\u308c\u306f\u3001\u30ea\u30e2\u30fc\u30c8 LDAP/AD \u30b5\u30fc\u30d0\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b LDAP \u30d7\u30ed\u30c8\u30b3\u30eb \u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002"}, {"BASE_DN_MSG", "\u57fa\u672c\u8b58\u5225\u540d\u306f\u3001SGMS \u306b\u3088\u308b\u691c\u7d22\u306e\u958b\u59cb\u5143\u3068\u306a\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306e\u30eb\u30fc\u30c8 \u30a8\u30f3\u30c8\u30ea\u3092\u8b58\u5225\u3059\u308b\u306e\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u57fa\u672c DN (example.com \u306a\u3069) \u306f\u3001[dc=example,dc=com] \u5f62\u5f0f\u3067\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6700\u4e0a\u4f4d\u30ec\u30d9\u30eb\u306e\u30ce\u30fc\u30c9\u306f\u3001SGMS \u306b\u30ed\u30b0\u30a4\u30f3\u53ef\u80fd\u306a\u30e6\u30fc\u30b6\u304c\u3059\u3079\u3066\u8868\u793a\u3055\u308c\u308b\u3068\u60f3\u5b9a\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30c4\u30ea\u30fc\u306e\u57fa\u672c DN \u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"USE_SSL_MSG", "\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3078\u306e\u30d0\u30a4\u30f3\u30c9\u306b SSL \u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3078\u306e\u30d0\u30a4\u30f3\u30c9\u306b\u306f SSL \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u306e CA \u8a3c\u660e\u66f8\u3001\u307e\u305f\u306f\u30b5\u30fc\u30d0\u306e\u8a3c\u660e\u66f8\u306b\u7f72\u540d\u3057\u305f CA \u306e\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u306f\u3001SGMS \u306e\u30ad\u30fc\u30b9\u30c8\u30ed\u30fc\u30af\u306b\u4fe1\u983c\u6e08\u307f CA \u3068\u3057\u3066\u5b58\u5728\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"SSL_PORT_MSG", "\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u304c SSL \u30d0\u30a4\u30f3\u30c9\u8981\u6c42\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3002LDAP/AD \u30b5\u30fc\u30d0\u306e\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 636 \u3067\u3059\u3002AD \u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u30b0\u30ed\u30fc\u30d0\u30eb \u30ab\u30bf\u30ed\u30b0\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3092\u30db\u30b9\u30c8\u540d\u3068\u3057\u3066\u6307\u5b9a\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u5bfe\u5fdc\u3059\u308b SSL \u30dd\u30fc\u30c8\u756a\u53f7\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u3082\u3042\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3269 \u3067\u3059\u3002"}, {"ANONYMOUS_LOGIN_MSG", "(\u975e\u63a8\u5968)\u3002SGMS \u3092\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u306b\u533f\u540d\u3067\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u30ea\u30e2\u30fc\u30c8 LDAP/AD \u30b5\u30fc\u30d0\u306f\u3001\u533f\u540d\u30d0\u30a4\u30f3\u30c9\u3092\u8a31\u53ef\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u533f\u540d\u30d0\u30a4\u30f3\u30c9\u306f\u3001\u30b5\u30fc\u30d3\u30b9 \u30a2\u30ab\u30a6\u30f3\u30c8 (\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u6709\u52b9\u306a\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e\u30e6\u30fc\u30b6 \u30a2\u30ab\u30a6\u30f3\u30c8) \u304c\u4e8b\u524d\u306b\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u306e\u307f\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306b\u533f\u540d\u30d0\u30a4\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u304a\u52e7\u3081\u3067\u304d\u307e\u305b\u3093\u3002"}, {"LOGIN_USER_DN_MSG", "\u30d0\u30a4\u30f3\u30c9\u306e\u5b9f\u884c\u6642\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b5\u30fc\u30d0\u3078\u306e\u8a8d\u8a3c\u306b\u4f7f\u7528\u3055\u308c\u308b\u8b58\u5225\u540d (DN: Distinguished Nname) \u3067\u3059\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3059\u308b\u5024\u306f\u8b58\u5225\u540d\u3068\u3057\u3066\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b: [uid=xyz, ou=People, dc=example, dc=com]\u3001[cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "\u30ed\u30b0\u30a4\u30f3 \u30e6\u30fc\u30b6 DN \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3002"}, {"CONN_TIMEOUT_MSG", "\u3053\u306e\u5024\u306f\u3001\u63a5\u7d9a\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u307e\u3067\u306e\u6642\u9593 (\u30df\u30ea\u79d2) \u3067\u3059\u3002\u3053\u306e\u6642\u9593\u306e\u7d4c\u904e\u5f8c\u3082\u3001\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a\u3092\u78ba\u7acb\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u63a5\u7d9a\u8a66\u884c\u304c\u53d6\u308a\u6d88\u3055\u308c\u307e\u3059\u3002"}, {"LDAP_SCHEMA_MSG", "\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b LDAP/AD \u30b5\u30fc\u30d0\u306e LDAP \u30b9\u30ad\u30fc\u30de\u3002"}, {"OBJ_CLASS_MSG", "\u30e6\u30fc\u30b6\u304c\u6240\u5c5e\u3059\u308b\u6a19\u6e96\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u30af\u30e9\u30b9\u306e\u3044\u305a\u308c\u304b\u306e\u540d\u524d\u3002"}, {"LOGIN_NAME_ATTRIBUTE_MSG", "LDAP/AD \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u30e6\u30fc\u30b6 ID \u3092\u8868\u3057\u307e\u3059\u3002\u3053\u308c\u306f LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u3067\u3001\u305d\u306e\u5c5e\u6027\u5024\u306f SGMS \u30ed\u30b0\u30a4\u30f3 \u30da\u30fc\u30b8\u3067\u30e6\u30fc\u30b6 ID \u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059 (\u4f8b: uid\u3001sAMAccountName)\u3002"}, {"FIRST_NAME_ATTRIBUTE_MSG", "LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u30d5\u30a1\u30fc\u30b9\u30c8 \u30cd\u30fc\u30e0\u3092\u8868\u3057\u307e\u3059\u3002\u4f8b: givenName\u3002"}, {"LAST_NAME_ATTRIBUTE_MSG", "LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u30e9\u30b9\u30c8 \u30cd\u30fc\u30e0\u3092\u8868\u3057\u307e\u3059\u3002\u4f8b: sn\u3002"}, {"EMAIL_ATTRIBUTE_MSG", "LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u96fb\u5b50\u30e1\u30fc\u30eb ID \u3092\u8868\u3057\u307e\u3059\u3002\u4f8b: mail\u3002"}, {"TELEPHONE_ATTRIBUTE_MSG", "LDAP \u30b5\u30fc\u30d0\u306e\u5c5e\u6027\u540d\u3002\u96fb\u8a71\u756a\u53f7\u3092\u8868\u3057\u307e\u3059\u3002\u4f8b: telephoneNumber\u3002"}, {"TEST_PANE_MSG", "\u3053\u3053\u3067\u306f\u3001\u8a2d\u5b9a\u30d1\u30cd\u30eb\u3067\u5165\u529b\u3057\u305f\u8a8d\u8a3c\u30b5\u30fc\u30d0 (LDAP/AD/RADIUS) \u306e\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002"}, {"TEST_PANE_USER_MSG", "\u6709\u52b9\u306a\u30e6\u30fc\u30b6\u540d\u3092\u5165\u529b\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001SGMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u6642\u306b\u300cSGMS \u30ed\u30b0\u30a4\u30f3\u300d\u30da\u30fc\u30b8\u3067\u5165\u529b\u3059\u308b\u30e6\u30fc\u30b6\u540d\u3067\u3059\u3002\u3053\u306e\u30e6\u30fc\u30b6\u540d\u306f\u6709\u52b9\u306a\u540d\u524d\u3067\u3042\u308b\u3053\u3068\u3001\u307e\u305f\u3001\u3053\u306e\u30c9\u30e1\u30a4\u30f3\u306e\u95a2\u9023\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b58\u5728\u3059\u308b\u540d\u524d\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306e\u30e6\u30fc\u30b6\u540d\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3082\u5165\u529b\u3057\u307e\u3059\u3002"}, {"EMPTY_DIR_GROUP", "\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u30b0\u30eb\u30fc\u30d7\u540d\u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f Active Directory \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6240\u5c5e\u3059\u308b\u30e6\u30fc\u30b6\u306e\u307f\u304c GMS \u306b\u30ed\u30b0\u30aa\u30f3\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f\u3001\u8a2d\u5b9a\u30d1\u30cd\u30eb\u3067\u300c\u30db\u30b9\u30c8\u7a2e\u5225\u300d\u3092 [Active Directory] \u306b\u9078\u629e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"DIR_GROUPS_MSG", "AD \u30b0\u30eb\u30fc\u30d7\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001GMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3092\u8a31\u53ef\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30e1\u30f3\u30d0\u3067\u3059\u3002\u8907\u6570\u306e AD \u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u8907\u6570\u306e\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u5404\u30b0\u30eb\u30fc\u30d7\u3092\u30bb\u30df\u30b3\u30ed\u30f3\u3067\u533a\u5207\u308a\u307e\u3059\u3002\u4f8b: [GMSUsers]\u3001[ADGroup1;AD group2;GMS Users;Group4]\u3002"}, {"RADIUS_HOST_NAME_MSG", "RADIUS \u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u30db\u30b9\u30c8\u540d\u307e\u305f\u306f IP \u30a2\u30c9\u30ec\u30b9\u3002\u4f8b: [myradius.example.com]\u3001[X.X.X.X] (IP \u30a2\u30c9\u30ec\u30b9)\u3001[company.com]\u3002"}, {"RADIUS_AUTH_PORT_MSG", "\u8a8d\u8a3c\u8981\u6c42\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b RADIUS \u30b5\u30fc\u30d0\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 1812 \u3067\u3059\u3002"}, {"RADIUS_SHARED_SECRET_MSG", "GMS \u3068 RADIUS \u30b5\u30fc\u30d0\u306e\u9593\u3067\u5171\u6709\u3059\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u3002\u3053\u308c\u306f\u3001RADIUS \u30b5\u30fc\u30d0\u3068 RADIUS \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3057\u304b\u77e5\u3089\u306a\u3044\u6587\u5b57\u5217\u5024\u3067\u3059\u3002"}, {"RADIUS_AUTH_PROTOCOL_MSG", "\u8a8d\u8a3c\u3067\u4f7f\u7528\u3059\u308b RADIUS \u8a8d\u8a3c\u30d7\u30ed\u30c8\u30b3\u30eb\u3002"}, {"RADIUS_TIMEOUT_MSG", "\u3053\u306e\u5024\u306f\u3001\u63a5\u7d9a\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u307e\u3067\u306e\u6642\u9593 (\u79d2) \u3092\u793a\u3057\u307e\u3059\u3002\u3053\u306e\u6642\u9593\u306e\u7d4c\u904e\u5f8c\u3082\u3001RADIUS \u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a\u3092\u78ba\u7acb\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u63a5\u7d9a\u8a66\u884c\u304c\u53d6\u308a\u6d88\u3055\u308c\u307e\u3059\u3002"}, {"RADIUS_MAX_RETRIES_MSG", "\u3053\u306e\u5024\u306f\u3001RADIUS \u30b5\u30fc\u30d0\u3078\u306e\u8a8d\u8a3c\u3092\u518d\u8a66\u884c\u3059\u308b\u56de\u6570\u3092\u793a\u3057\u307e\u3059\u3002\u6307\u5b9a\u56de\u6570\u306e\u7d4c\u904e\u5f8c\u3082\u3001\u30ea\u30e2\u30fc\u30c8 \u30b5\u30fc\u30d0\u3078\u306e\u8a8d\u8a3c\u3092\u5b9f\u884c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u8a8d\u8a3c\u8a66\u884c\u304c\u53d6\u308a\u6d88\u3055\u308c\u307e\u3059\u3002"}, {"RADIUS_ONLY_GROUP_MSG", "\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6240\u5c5e\u3059\u308b\u30e6\u30fc\u30b6\u306e\u307f\u304c GMS \u306b\u30ed\u30b0\u30aa\u30f3\u3067\u304d\u307e\u3059\u3002"}, {"RADIUS_USE_FILTER_MSG", "\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3068\u3001RADIUS \u5c5e\u6027\u306e \\'Filter-ID\\' \u306e\u5024\u3092 RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u8b58\u5225\u5b50\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001GMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3067 RADIUS \u30b5\u30fc\u30d0\u304b\u3089\u8a8d\u8a3c\u3055\u308c\u308b\u5404\u30e6\u30fc\u30b6 ID \u3068\u30da\u30a2\u3068\u306a\u308b\u3001\u3053\u306e\u5c5e\u6027\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b RADIUS \u30b5\u30fc\u30d0\u3092\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"RADIUS_USE_SW_MSG", "\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3068\u3001SonicWall \u30d9\u30f3\u30c0\u30fc\u56fa\u6709\u306e\u5c5e\u6027 [SonicWall-User-Group \u304a\u3088\u3073 SonicWall-User-Groups] \u306e\u5024\u304c RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u8b58\u5225\u5b50\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001GMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3067 RADIUS \u30b5\u30fc\u30d0\u304b\u3089\u8a8d\u8a3c\u3055\u308c\u308b\u5404\u30e6\u30fc\u30b6 ID \u3068\u30da\u30a2\u3068\u306a\u308b\u3001SonicWall \u30d9\u30f3\u30c0\u30fc\u56fa\u6709\u306e\u5c5e\u6027\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b RADIUS \u30b5\u30fc\u30d0\u3092\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"RADIUS_ALLOW_GROUPS_MSG", "RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001GMS \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3092\u8a31\u53ef\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30e1\u30f3\u30d0\u3067\u3059\u3002\u4f8b: [GMSUsers]\u3002\u8907\u6570\u306e RADIUS \u30e6\u30fc\u30b6 \u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u8907\u6570\u306e\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u6587\u5b57\u5217\u3092\u30bb\u30df\u30b3\u30ed\u30f3\u3067\u533a\u5207\u308a\u307e\u3059\u3002\u4f8b: [RadGroup1;Rad group2;GMS Users;Group4]\u3002"}, {"ADD_AUTH_SERVER_MSG", "\u3053\u308c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u3001\u30c9\u30e1\u30a4\u30f3\u306e\u8ffd\u52a0\u6642\u306b\u3001\u65b0\u3057\u3044\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002"}, {"PAGE_LABEL", "\u30da\u30fc\u30b8"}, {"MANAGE_PAGE", "\u30da\u30fc\u30b8\u3092\u7ba1\u7406"}, {"ADD_COMPONENT", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8ffd\u52a0"}, {"PAGE_MANAGER", "\u30da\u30fc\u30b8\u7ba1\u7406"}, {"ADD_NEW_PAGE", "\u65b0\u3057\u3044\u30da\u30fc\u30b8\u3092\u8ffd\u52a0"}, {"DEFAULT_PAGE", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30da\u30fc\u30b8"}, {"PAGE_DETAILS", "\u30da\u30fc\u30b8 \u8a73\u7d30"}, {"PAGE_TITLE", "\u30da\u30fc\u30b8 \u30bf\u30a4\u30c8\u30eb"}, {"COMPONENT_TITLE", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 \u30bf\u30a4\u30c8\u30eb"}, {"PAGE_LAYOUT", "\u30ec\u30a4\u30a2\u30a6\u30c8"}, {"ONE_COLUMN_LAYOUT", "1 \u4f8b (100)"}, {"TWO_COLUMN_LAYOUT", "2 \u5217 (50:50)"}, {"THREE_COLUMN_LAYOUT", "3 \u5217 (30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 \u5217 (25:25:25:25)"}, {"ADD", "\u8ffd\u52a0"}, {"EDIT", "\u7de8\u96c6"}, {"DELETE", "\u524a\u9664"}, {"ADD_COMPONENT_MANAGER", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u7ba1\u7406\u3092\u8ffd\u52a0"}, {"TYPE", "\u7a2e\u5225"}, {"RSS_FEED_DETAILS", "RSS \u30d5\u30a3\u30fc\u30c9\u8a73\u7d30"}, {"RSS_FEEDS", "RSS \u30d5\u30a3\u30fc\u30c9"}, {"TITLE", "\u30bf\u30a4\u30c8\u30eb"}, {"ITEMS", "\u8868\u793a\u9805\u76ee\u6570 (\u6700\u5927)"}, {"REFRESH_INTERVAL", "\u66f4\u65b0\u9593\u9694"}, {"REFRESH_INTERVAL_MINUTE", "\u5206"}, {"EVENT_ALERT_DETAILS", "\u30a4\u30d9\u30f3\u30c8\u8b66\u544a\u8a73\u7d30"}, {"ALERT_TYPES", "\u30a2\u30e9\u30fc\u30c8\u7a2e\u5225"}, {"REFRESH_INTERVAL_HOUR", "\u6642\u9593"}, {"ALERT_SHOW_TIME_HOURS", "\u30a2\u30e9\u30fc\u30c8\u767a\u751f\u3092\u8868\u793a\u3059\u308b\u671f\u9593: \u904e\u53bb"}, {"APPLICATION_WIDGET_DETAILS", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u8a73\u7d30"}, {"WIDGETS", "\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8"}, {"RSS_FEED_TYPE", "RSS \u30d5\u30a3\u30fc\u30c9"}, {"EVENT_ALERT_TYPE", "\u30a4\u30d9\u30f3\u30c8 \u30a2\u30e9\u30fc\u30c8"}, {"APPLICATION_WIDGET_TYPE", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8"}, {"CUSTOM_RSS_FEED", "\u30e6\u30fc\u30b6\u5b9a\u7fa9 RSS \u30d5\u30a9\u30fc\u30c9"}, {"CUSTOM_RSS_URL", "\u30e6\u30fc\u30b6\u5b9a\u7fa9 RSS URL"}, {"END_EDIT", "\u7de8\u96c6\u7d42\u4e86"}, {"RSS_URL", "RSS URL "}, {"SAVE", "\u4fdd\u5b58"}, {"DEFAULT_PAGE", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30da\u30fc\u30b8"}, {"SAVE_LAYOUT_FAIL_MSG", "\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u4fdd\u5b58\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb \u30d0\u30fc\u72b6\u6cc1\u306e\u4fdd\u5b58\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"ADD_COMPONENT_FAIL_MSG", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8ffd\u52a0\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"DELETE_COMPONENT_FAIL_MSG", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u524a\u9664\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"PAGE_ACTION_FAIL_MSG", "\u30da\u30fc\u30b8\u52d5\u4f5c\u306b\u5931\u6557\u3057\u307e\u3057\u305f"}, {"RSS_FEED_FAIL_MSG", "RSS \u30d5\u30a3\u30fc\u30c9\u306e\u691c\u7d22\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"EVENT_ALERT_FAIL_MSG", "GEM \u30a2\u30e9\u30fc\u30c8\u306e\u691c\u7d22\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"APPLICATION_WIDGET_FAIL_MSG", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u691c\u7d22\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306b\u5bfe\u3059\u308b\u30a2\u30e9\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"NO_ALERT_FOUND_MSG", "\u8868\u793a\u3059\u308b\u30a2\u30e9\u30fc\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"CHANGE_DEFAULT_PAGE_MSG", "\u3053\u306e\u30da\u30fc\u30b8\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u4ee5\u524d\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30da\u30fc\u30b8\u306e\u8a2d\u5b9a\u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\u7d99\u7d9a\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"DELETE_DEFAULT_PAGE_MSG", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30da\u30fc\u30b8\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002\u4ed6\u306e\u30da\u30fc\u30b8\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u6307\u5b9a\u3057\u305f\u4e0a\u3067\u3001\u3053\u306e\u30da\u30fc\u30b8\u3092\u524a\u9664\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"DELETE_PAGE_AND_COMPONENT_MSG", "\u30da\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u3068\u3001\u305d\u306e\u30da\u30fc\u30b8\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u524a\u9664\u3092\u7d99\u7d9a\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"VALID_URL_MSG", "URL \u3092 http://www.yourdomain.com \u5f62\u5f0f\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CONFIRM_DELETE_COMPONENT_MSG", "\u3053\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u524a\u9664\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"NO_COMPONENT_MSG", "\u73fe\u5728\u3053\u306e\u30da\u30fc\u30b8\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"LOAD_DATA_MSG", "\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u4e2d..."}, {"COMPONENT_EXISTS_MSG", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\u5b58\u5728\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8a73\u7d30: "}, {"REFRESH_INTERVAL_RANGE", "\u66f4\u65b0\u9593\u9694\u304c\u7bc4\u56f2\u5916\u3067\u3059\u3002\u6709\u52b9\u306a\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"ITEMS_RANGE", "\u9805\u76ee\u6570\u304c\u7bc4\u56f2\u5916\u3067\u3059\u3002\u6709\u52b9\u306a\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"ALERT_SHOWTIME_RANGE", "\u30a2\u30e9\u30fc\u30c8\u306e\u8868\u793a\u671f\u9593\u304c\u7bc4\u56f2\u5916\u3067\u3059\u3002\u6709\u52b9\u306a\u5024\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002"}, {"NO_COMPONENT_SELECTED_ERR", "\u3053\u306e\u30da\u30fc\u30b8\u306b\u8ffd\u52a0\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"ADDCOMPONENT_ERR_QUOTES", "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30bf\u30a4\u30c8\u30eb\u306b\u306f\u3001\u4e00\u91cd\u5f15\u7528\u7b26\u3001\u4e8c\u91cd\u5f15\u7528\u7b26\u3001\u30b3\u30ed\u30f3\u3001\u30d1\u30fc\u30bb\u30f3\u30c8\u8a18\u53f7\u3001\u30cf\u30c3\u30b7\u30e5\u8a18\u53f7\u3001\u7591\u554f\u7b26\u3001\u304a\u3088\u3073\u30d1\u30a4\u30d7\u8a18\u53f7\u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"ADDPAGE_ERR_QUOTES", "\u30da\u30fc\u30b8\u306e\u30bf\u30a4\u30c8\u30eb\u306b\u306f\u3001\u4e00\u91cd\u5f15\u7528\u7b26\u3001\u4e8c\u91cd\u5f15\u7528\u7b26\u3001\u30b3\u30ed\u30f3\u3001\u30d1\u30fc\u30bb\u30f3\u30c8\u8a18\u53f7\u3001\u30cf\u30c3\u30b7\u30e5\u8a18\u53f7\u3001\u7591\u554f\u7b26\u3001\u304a\u3088\u3073\u30d1\u30a4\u30d7\u8a18\u53f7\u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"TIME_PERIOD", "\u671f\u9593"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "\u30da\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u3068\u3001\u30da\u30fc\u30b8\u5185\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u304c\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30da\u30fc\u30b8\u3092\u524a\u9664\u3057\u307e\u3059\u304b?"}, {"ADDWIDGET_ERR_QUOTES", "\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u30bf\u30a4\u30c8\u30eb\u306b\u306f\u3001\u4e00\u91cd\u5f15\u7528\u7b26\u3001\u4e8c\u91cd\u5f15\u7528\u7b26\u3001\u30b3\u30ed\u30f3\u3001\u30d1\u30fc\u30bb\u30f3\u30c8\u8a18\u53f7\u3001\u30cf\u30c3\u30b7\u30e5\u8a18\u53f7\u3001\u7591\u554f\u7b26\u3001\u304a\u3088\u3073\u30d1\u30a4\u30d7\u8a18\u53f7\u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"TIME_PERIOD", "\u671f\u9593"}, {"COPY_WIDGET_VALIDATION_MSG", "\u30b3\u30d4\u30fc\u3059\u308b\u30da\u30fc\u30b8\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"COPY_WIDGET_HEADER", "\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3092\u30b3\u30d4\u30fc"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "\u3053\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306b\u8a72\u5f53\u3059\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u691c\u7d22\u6587\u5b57\u5217\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"IGNORED_INVALID_SEARCH_FILTER", "\u4e0d\u6b63\u306a\u691c\u7d22\u30d5\u30a3\u30eb\u30bf\u3092\u7121\u8996\u3057\u307e\u3057\u305f\u3002"}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "\u5730\u7406\u7684\u306a\u5834\u6240\u3092\u6301\u305f\u306a\u3044 GMSVP \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c 1 \u3064\u4ee5\u4e0a\u3042\u308a\u307e\u3059\u3002"}, {"NDA_NG_REPORTING_WIDGET_MSG", "\u4e00\u81f4\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "\u30a2\u30e9\u30fc\u30c8 \u30e1\u30c3\u30bb\u30fc\u30b8"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u6700\u7d42\u30ec\u30dd\u30fc\u30c8\u65e5\u6642"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "\u30a2\u30e9\u30fc\u30c8\u7a2e\u5225"}, {"LOGS_WIDGET_COL_MESSAGE", "\u30e1\u30c3\u30bb\u30fc\u30b8"}, {"LOGS_WIDGET_COL_DATE", "\u65e5\u4ed8"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "\u30e6\u30fc\u30b6\u8a73\u7d30"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "\u6700\u7d42\u30a2\u30af\u30bb\u30b9\u65e5\u6642"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "\u8aac\u660e"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "\u4e88\u5b9a\u65e5\u6642 (\u73fe\u5730)"}, {"DSB_CONFIRM_DELETE_WIDGET", "\u3053\u306e\u64cd\u4f5c\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"DSB_SEARCH_DIALOG_MESG", "\u3053\u308c\u3089\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u304c\u6b21\u306e\u7d50\u679c\u3068\u4e00\u81f4\u3057\u307e\u3057\u305f: "}, {"DSB_SEARCH_DIALOG_HEADER", "\u305d\u306e\u4ed6\u306e\u691c\u7d22\u7d50\u679c"}, {"DSB_CLEARHISTORY_MESG", "\u691c\u7d22\u5c65\u6b74\u3092\u3059\u3079\u3066\u30af\u30ea\u30a2\u3057\u307e\u3059\u304b?"}, {"DSB_CLEARHISTORY_HDR", "\u691c\u7d22\u5c65\u6b74"}, {"DSB_ADDNEW_WIDGET_LBL", "\u65b0\u3057\u3044\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3092\u8ffd\u52a0: "}, {"DSB_GENSTTINGS_HDR", "\u4e00\u822c\u8a2d\u5b9a "}, {"DSB_ASSOCPROD_HDR", "\u95a2\u9023\u88fd\u54c1 "}, {"DSB_SUBALERTS_HDR", "\u30b5\u30d6 \u30a2\u30e9\u30fc\u30c8\u3092\u542b\u3080 "}, {"DSB_WIDGETTITLE_LBL", "\u30bf\u30a4\u30c8\u30eb: "}, {"DSB_NOFITEMS_LBL", "\u9805\u76ee\u6570: "}, {"DSB_REFINT_LBL", "\u66f4\u65b0\u9593\u9694: "}, {"DSB_ALERTSTRIGGERED_LBL", "\u6b21\u306e\u76f4\u524d\u306e\u671f\u9593\u5185\u306b\u751f\u6210\u3055\u308c\u305f\u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a: "}, {"DSB_NEWSUBALERTS_LBL", "\u65b0\u3057\u3044\u30b5\u30d6 \u30a2\u30e9\u30fc\u30c8: "}, {"DSB_CUSTRSSURL_LBL", "\u30ab\u30b9\u30bf\u30e0 RSS URL: "}, {"DSB_WRAPTEXT_LBL", "\u30c6\u30ad\u30b9\u30c8\u3092\u6298\u308a\u8fd4\u3059: "}, {"DSB_ADDPAGE_HDR", "\u65b0\u3057\u3044\u30da\u30fc\u30b8\u3092\u8ffd\u52a0 "}, {"DSB_ADDPAGE_LBL", "\u30da\u30fc\u30b8 \u30bf\u30a4\u30c8\u30eb: "}, {"DSB_MAPLOCATIONDLG_HDR", "\u5834\u6240\u3092\u8ffd\u52a0/\u7de8\u96c6"}, {"DSB_ADDRESS_LBL", "\u4f4f\u6240: "}, {"DSB_GEOLOCATION_LBL", "\u5730\u7406\u7684\u306a\u5834\u6240: "}, {"DSB_DELPAGE_LBL", "\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30da\u30fc\u30b8\u3002\u3053\u306e\u30da\u30fc\u30b8\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DSB_DELPAGE_HDR", "\u30da\u30fc\u30b8\u3092\u524a\u9664\u3057\u307e\u3059\u304b?"}, {"DSB_DELPAGECONFIRM_MSG", "\u3053\u306e\u30da\u30fc\u30b8\u3092\u524a\u9664\u3057\u307e\u3059\u304b?"}, {"CZ_YES", "\u306f\u3044"}, {"CZ_CERT_ISSUER", "\u8a3c\u660e\u66f8\u306e\u767a\u884c\u5143"}, {"CZ_SUB_DN", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u8b58\u5225\u540d"}, {"CZ_CERT_SN", "\u8a3c\u660e\u66f8\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"CZ_VALID_FROM", "\u6709\u52b9\u671f\u9593 (\u958b\u59cb)"}, {"CZ_EXPIRES_ON", "\u6709\u52b9\u671f\u9593 (\u7d42\u4e86)"}, {"CZ_STATUS", "\u72b6\u6cc1"}, {"CZ_REQ_GEN", "\u751f\u6210\u3055\u308c\u305f\u8981\u6c42"}, {"CZ_SUB_KEY_ID", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8 \u30ad\u30fc\u8b58\u5225\u5b50"}, {"CZ_CRL_STATUS", "CRL \u306e\u72b6\u6cc1"}, {"CZ_CRL_EXPIRES_ON", "CRL \u306e\u6709\u52b9\u671f\u9593 (\u7d42\u4e86)"}, {"CZ_CRL_REQUIRED", "CRL \u304c\u5fc5\u8981"}, {"CZ_CRL_AUTO_URL", "CRL \u306e\u81ea\u52d5\u66f4\u65b0 URL"}, {"CZ_HEADER", "\u8a3c\u660e\u66f8\u3068\u8a3c\u660e\u66f8\u8981\u6c42"}, {"CZ_NAME", "\u540d\u524d"}, {"CZ_TYPE", "\u7a2e\u5225"}, {"CZ_VALIDATED", "\u691c\u8a3c\u6e08\u307f"}, {"CZ_EXPIRES", "\u671f\u9650\u5207\u308c"}, {"CZ_DETAILS", "\u8a73\u7d30"}, {"CZ_CONFIGURE", "\u8a2d\u5b9a"}, {"CZ_DELETE_CERT", "\u3053\u306e\u8a3c\u660e\u66f8\u3092\u524a\u9664\u3059\u308b"}, {"CZ_CANT_DELETE_CERT", "\u3053\u308c\u306f\u7d44\u307f\u8fbc\u307f\u8a3c\u660e\u66f8\u3067\u3059\u3002\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CZ_EMAIL_CERT", "\u3053\u306e\u8a3c\u660e\u66f8\u3092\u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u9001\u4fe1\u3059\u308b"}, {"CZ_CANT_EMAIL_CERT", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30ed\u30fc\u30ab\u30eb\u8a3c\u660e\u66f8\u3068\u7f72\u540d\u8981\u6c42\u306e\u307f\u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u9001\u4fe1\u3067\u304d\u307e\u3059"}, {"CZ_IMPORT_CERT_CRL", "\u8a3c\u660e\u66f8\u5931\u52b9\u30ea\u30b9\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_UPLOAD_SIGNED_CERT", "\u7f72\u540d\u6e08\u307f\u8a3c\u660e\u66f8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b"}, {"CZ_CERT_SEARCH", "\u8a3c\u660e\u66f8\u306e\u691c\u7d22"}, {"CZ_CERT_SELECTED", "\u8a3c\u660e\u66f8\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002"}, {"CZ_SURE", "\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"CZ_CERTS_SELECTED", "\u6b21\u306e\u8a3c\u660e\u66f8\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002"}, {"CZ_PLZ_SELECT", "\u524a\u9664\u3059\u308b\u8a3c\u660e\u66f8\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_VIEW_STYLE", "\u8a3c\u660e\u66f8\u306e\u8868\u793a\u65b9\u6cd5"}, {"CZ_ALL_CERTS", "\u3059\u3079\u3066\u306e\u8a3c\u660e\u66f8"}, {"CZ_IMPORT_CERTS", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u3068\u8981\u6c42"}, {"CZ_BUILTIN_CERTS", "\u7d44\u307f\u8fbc\u307f\u8a3c\u660e\u66f8"}, {"CZ_INCLUDE_EXPIRED_CERTS", "\u6709\u52b9\u671f\u9650\u5207\u308c\u306e\u7d44\u307f\u8fbc\u307f\u8a3c\u660e\u66f8\u3092\u542b\u3080"}, {"CZ_IMPORT", "\u30a4\u30f3\u30dd\u30fc\u30c8..."}, {"CZ_NEW_REQ", "\u65b0\u3057\u3044\u7f72\u540d\u306e\u8981\u6c42..."}, {"CZ_DEL_CERTS", "\u8a3c\u660e\u66f8\u3092\u524a\u9664"}, {"CZ_REQUIRE_CERT", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u8a3c\u660e\u66f8\u540d\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_IMPORT_REQUIRE_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_NO_DOT", "\u8a3c\u660e\u66f8\u540d\u304c\u7121\u52b9\u3067\u3059\u3002\u540d\u524d\u306b\u306f '.' \u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CZ_IMPORT_REQUIRE_CMP", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u8a3c\u660e\u66f8\u7ba1\u7406\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_IMPORT_CERT", "\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8"}, {"CZ_IMPORT_LOCAL", "\u30ed\u30fc\u30ab\u30eb \u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u8a3c\u660e\u66f8\u3068\u79d8\u5bc6\u9375\u3092 PKCS#12 (.p12 \u307e\u305f\u306f .pfx) \u30a8\u30f3\u30b3\u30fc\u30c9\u5316\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_IMPORT_CA", "CA \u8a3c\u660e\u66f8\u3092 PKCS#7 (.p7b)\u3001PEM (.pem)\u3001\u307e\u305f\u306f DER (.der \u307e\u305f\u306f .cer) \u30a8\u30f3\u30b3\u30fc\u30c9\u5316\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_CERT_NAME", "\u8a3c\u660e\u66f8\u540d"}, {"CZ_CMP", "\u8a3c\u660e\u66f8\u7ba1\u7406\u30d1\u30b9\u30ef\u30fc\u30c9"}, {"CZ_SEL_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_UPLOAD_CERT", "\u8a3c\u660e\u66f8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9"}, {"CZ_UPLOAD_SIGN_CERT", "\u7f72\u540d\u8981\u6c42\u306e\u305f\u3081\u306b\u7f72\u540d\u6e08\u307f\u8a3c\u660e\u66f8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9"}, {"CZ_SEL_UPLOAD_FILE", "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_FILE_FORMAT", "\u30d5\u30a1\u30a4\u30eb\u3092 PEM (.pem) \u307e\u305f\u306f DER (.der \u307e\u305f\u306f .cer) \u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"CZ_EXPORT_CERT", "\u8a3c\u660e\u66f8\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8"}, {"CZ_EXPORT_CERT_REQ", "\u8a3c\u660e\u66f8\u8981\u6c42\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8"}, {"CZ_CERT_EMAIL_CONTENT", "PKCS#10 \u8a3c\u660e\u66f8\u8981\u6c42\u304c\u751f\u6210\u6e08\u307f\u3067\u3001\u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u767b\u9332\u307e\u305f\u306f\u8a3c\u660e\u6a5f\u95a2\u306b\u767b\u9332\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30ab\u30eb \u30c7\u30a3\u30b9\u30af\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b PEM \u8a3c\u660e\u8981\u6c42\u5f62\u5f0f\u3067\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002"}, {"CZ_CHANGE_FILE_NAME", "(\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u306b\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5909\u66f4\u3067\u304d\u307e\u3059)\u3002"}, {"CZ_SPECIFY_URL", "CRL \u306e URL \u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_CRL_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b CRL \u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_INVALID_FILE", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306f\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"CZ_SPECIFY_VALID_LC", "\u6709\u52b9\u306a\u30ed\u30fc\u30ab\u30eb\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_VALID_CA", "\u6709\u52b9\u306a CA \u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_VALID_CRL", "\u6709\u52b9\u306a CRL \u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SPECIFY_VALID_SIGNED", "\u6709\u52b9\u306a\u7f72\u540d\u6e08\u307f\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_IMPORT_CRL", "CRL \u3092\u30a4\u30f3\u30dd\u30fc\u30c8"}, {"CZ_IMPORT_CRL_FULL", "\u8a3c\u660e\u66f8\u5931\u52b9\u30ea\u30b9\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8"}, {"CZ_IMPORT_CRL_FILE", "CRL \u3092 PEM (.pem) \u307e\u305f\u306f DER (.der \u307e\u305f\u306f .crl) \u30a8\u30f3\u30b3\u30fc\u30c9\u5316\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u76f4\u63a5\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_SEL_CRL_FILE", "\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b CRL \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e"}, {"CZ_AUTO_IMPORT_CRL", "HTTP \u3092\u5229\u7528\u3057\u3066 CRL \u3092\u5b9a\u671f\u7684\u306b\u81ea\u52d5\u7684\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b"}, {"CZ_CRL_LOC", "CRL \u306e\u5834\u6240 (URL) \u3092\u5165\u529b\u3059\u308b"}, {"CZ_INVALIDATE_CERTS", "CRL \u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u307e\u305f\u306f\u51e6\u7406\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u3001\u8a3c\u660e\u66f8\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 \u30a2\u30bd\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u7121\u52b9\u306b\u3059\u308b"}, {"CZ_CMP_REQUIRE", "\u8a3c\u660e\u66f8\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u306b\u306f\u3001\u8a3c\u660e\u66f8\u7ba1\u7406\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u5fc5\u8981"}, {"CZ_CERT_NAME_REQUIRE", "PKCS10 \u751f\u6210\u306b\u306f\u8a3c\u660e\u66f8\u540d\u304c\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_CERT_NAME_IN_USE", "\u8a3c\u660e\u66f8\u540d\u306f\u65e2\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5225\u306e\u8a3c\u660e\u66f8\u540d\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"CZ_SUB_DN_REQUIRE", "PKCS10 \u306b\u3088\u308b\u751f\u6210\u306b\u306f\u3001\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u540d\u5c5e\u6027\u304c\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u5fc5\u8981\u3067\u3059\u3002"}, {"CZ_CN_TWO_CHARS", "\u56fd\u540d\u306f 2 \u6587\u5b57\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"CZ_DOMAIN_INVALID", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u4ee3\u66ff\u540d\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u7121\u52b9\u3067\u3059\u3002"}, {"CZ_IP_INVALID", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u4ee3\u66ff\u540d\u306e IP \u30a2\u30c9\u30ec\u30b9\u304c\u7121\u52b9\u3067\u3059\u3002"}, {"CZ_EMAIL_INVALID", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u4ee3\u66ff\u540d\u306e\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9\u304c\u7121\u52b9\u3067\u3059\u3002"}, {"CZ_CERT_REQ", "\u8a3c\u660e\u66f8\u7f72\u540d\u8981\u6c42"}, {"CZ_GEN_CERT_REQ", "\u8a3c\u660e\u66f8\u7f72\u540d\u8981\u6c42\u3092\u751f\u6210"}, {"CZ_CERT_ALIAS", "\u8a3c\u660e\u66f8\u30a8\u30a4\u30ea\u30a2\u30b9"}, {"CZ_COUNTRY", "\u56fd"}, {"CZ_STATE", "\u90fd\u9053\u5e9c\u770c"}, {"CZ_LOC", "\u5730\u65b9\u307e\u305f\u306f\u90e1"}, {"CZ_COMPANY", "\u4f1a\u793e\u307e\u305f\u306f\u7d44\u7e54"}, {"CZ_LOC_CITY", "\u5730\u65b9\u3001\u90fd\u5e02\u3001\u307e\u305f\u306f\u90e1"}, {"CZ_DEPT", "\u90e8\u9580"}, {"CZ_GROUP", "\u30b0\u30eb\u30fc\u30d7"}, {"CZ_TEAM", "\u30c1\u30fc\u30e0"}, {"CZ_CNAME", "\u5171\u901a\u540d"}, {"CZ_SN", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"CZ_EMAIL", "\u96fb\u5b50\u30e1\u30fc\u30eb \u30a2\u30c9\u30ec\u30b9"}, {"CZ_SUB_ALT_NAME", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u4ee3\u66ff\u540d (\u30aa\u30d7\u30b7\u30e7\u30f3)"}, {"CZ_DOMAIN_NAME", "\u30c9\u30e1\u30a4\u30f3\u540d"}, {"CZ_IPV4", "IPv4 \u30a2\u30c9\u30ec\u30b9"}, {"CZ_SUB_KEY_TYPE", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8 \u30ad\u30fc\u306e\u7a2e\u5225"}, {"CZ_SIG_ALGORITHM", "\u300c\u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u300d"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "\u30b5\u30d6\u30b8\u30a7\u30af\u30c8 \u30ad\u30fc\u306e\u30b5\u30a4\u30ba"}, {"CZ_NO_CERTS", "\u8a3c\u660e\u66f8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"IMPORT", "\u30a4\u30f3\u30dd\u30fc\u30c8"}, {"CZ_SCEP_CONFIG", "SCEP \u306e\u8a2d\u5b9a"}, {"CZ_CSR_LIST", "CSR \u30ea\u30b9\u30c8"}, {"CZ_NO_CSR", "CSR \u306a\u3057"}, {"CZ_CHALLENGE_PWD", "\u30c1\u30e3\u30ec\u30f3\u30b8 \u30d1\u30b9\u30ef\u30fc\u30c9 (\u30aa\u30d7\u30b7\u30e7\u30f3)"}, {"CZ_CA_URL", "CA \u306e URL"}, {"CZ_REQ_COUNT", "\u8981\u6c42\u6570"}, {"CZ_POLL_INTERVAL", "\u30dd\u30fc\u30ea\u30f3\u30b0\u9593\u9694 (\u79d2)"}, {"CZ_POLL_TIME", "\u6700\u5927\u30dd\u30fc\u30ea\u30f3\u30b0\u6642\u9593 (\u79d2)"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA \u306e URL \u306f\u7a7a\u767d\u306b\u3067\u304d\u307e\u305b\u3093\u3002"}, {"CZ_GEN_CSR", "\u5229\u7528\u53ef\u80fd\u306a CSR \u304c\u3042\u308a\u307e\u305b\u3093\u3002CSR \u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u751f\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\u306f\u3059\u3079\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u30b0\u30eb\u30fc\u30d7 \u30ce\u30fc\u30c9\u4e0b\u306e\u3059\u3079\u3066\u306e\u88c5\u7f6e\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002"}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\u306f\u3059\u3079\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u88c5\u7f6e\u306e\u89aa\u30ce\u30fc\u30c9\u304b\u3089\u7d99\u627f\u3055\u308c\u307e\u3059\u3002"}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\u306f\u3059\u3079\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u30b0\u30eb\u30fc\u30d7 \u30ce\u30fc\u30c9\u304b\u3089\u89aa\u30ce\u30fc\u30c9\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002<br>\u89aa\u30ce\u30fc\u30c9 (\u9078\u629e\u3055\u308c\u305f\u30ce\u30fc\u30c9\u3068\u305d\u306e\u5b50\u30ce\u30fc\u30c9\u3092\u9664\u304f) \u4e0b\u306e\u3059\u3079\u3066\u306e\u88c5\u7f6e\u306b\u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b\u306b\u306f\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u753b\u9762\u3067\u9069\u5207\u306b\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "\u9078\u629e\u3055\u308c\u305f\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\u306f\u3059\u3079\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u88c5\u7f6e\u304b\u3089\u89aa\u30ce\u30fc\u30c9\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002<br>\u89aa\u30ce\u30fc\u30c9\u4e0b\u306e\u3059\u3079\u3066\u306e\u88c5\u7f6e (\u9078\u629e\u3055\u308c\u305f\u88c5\u7f6e\u3092\u9664\u304f) \u306b\u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b\u306b\u306f\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u753b\u9762\u3067\u9069\u5207\u306b\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"WS_URI_HEADER", "\u30d1\u30d6\u30ea\u30c3\u30af URI"}, {"WS_URI_INSTRUCTIONS", "\u3053\u306e\u914d\u5099\u306e\u30d1\u30d6\u30ea\u30c3\u30af \u30b5\u30fc\u30d0\u540d\u3092\u5165\u529b\u3057\u307e\u3059\u3002\u3053\u306e\u540d\u524d\u306f\u3001\u3053\u306e\u30b5\u30fc\u30d0\u306e\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u4f7f\u7528\u3055\u308c\u3001\u57cb\u3081\u8fbc\u307f\u30af\u30ed\u30b9\u30ea\u30f3\u30af\u306b\u542b\u307e\u308c\u307e\u3059\u3002"}, {"WS_URI_NOTE", "\u88dc\u8db3: \u30d1\u30d6\u30ea\u30c3\u30af \u30b5\u30fc\u30d0 \u30dd\u30fc\u30c8\u306f\u3001\u30d1\u30d6\u30ea\u30c3\u30af \u30c9\u30e1\u30a4\u30f3\u304b\u3089\u306e GMS \u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002GMS \u304c\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3059\u308b\u30dd\u30fc\u30c8\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001\u300cSystem Interface > Deployment > Settings\u300d\u306b\u79fb\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"WS_DEPLOYMENT_HEADER", "GMS \u306e\u914d\u5099"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u914d\u5099\u3092\u9078\u629e\u3057\u307e\u3059\u3002"}, {"WS_DEPLOYMENT_ERROR", "\u30e9\u30a4\u30bb\u30f3\u30b9\u6e08\u307f\u306e\u914d\u5099\u3067\u3001\u73fe\u5728\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u3082\u306e\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"WS_STATUS_HEADER", "\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9"}, {"WS_SERVICES_ERROR", "\u3053\u306e\u914d\u5099\u306e\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d3\u30b9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"WS_DEPLOYMENTS_EMPTY", "\u914d\u5099\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u306e GMSVP \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"WS_DISTRIBUTED_HEADER", "\u5206\u6563\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9"}, {"WS_DISTRIBUTED_EMPTY", "\u3053\u306e\u30b5\u30fc\u30d0\u7528\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u5206\u6563\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3042\u308a\u307e\u305b\u3093\u3002"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u9069\u7528: "}, {"HM_APPLY_RECORDING_TASK_DESC", "\u30ec\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u9069\u7528: "}, {"LM_CONFIRM_DELETE_RULE", "\u9078\u629e\u3057\u305f\u30eb\u30fc\u30eb\u3092\u524a\u9664\u3057\u307e\u3059\u304b?"}, {"LM_SUCCESS_DELETE_RULE", "\u30eb\u30fc\u30eb\u306f\u6b63\u5e38\u306b\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LM_FAILURE_DELETE_RULE", "\u9078\u629e\u3057\u305f\u30eb\u30fc\u30eb\u3092\u6b63\u5e38\u306b\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_SUCCESS_UPDATE_RULE", "\u30eb\u30fc\u30eb\u306f\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LM_FAILURE_UPDATE_RULE", "\u30eb\u30fc\u30eb\u3092\u6b63\u5e38\u306b\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_DUPLICATE_STMT_NAME", "\u540c\u3058\u540d\u524d\u306e\u30eb\u30fc\u30eb\u304c\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\\n\u30eb\u30fc\u30eb\u540d\u306b\u306f\u4e00\u610f\u306e\u540d\u524d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_DESTINATION_EMPTY", "\u9001\u4fe1\u5148\u304c\u7a7a\u767d\u3067\u3059\u3002\\n\u6709\u52b9\u306a\u30a8\u30f3\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "\u9001\u4fe1\u5148\u306b\u4f7f\u7528\u3067\u304d\u308b\u6587\u5b57\u6570\u306f 256 \u6587\u5b57\u4ee5\u4e0b\u3067\u3059\u3002\\n\u6709\u52b9\u306a\u30a8\u30f3\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "\u9078\u629e\u3057\u305f\u7a2e\u5225\u306b\u9001\u4fe1\u5148\u5024\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u6709\u52b9\u306a\u30a8\u30f3\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306f\u3059\u3079\u3066\u306e\u9001\u4fe1\u5148\u306b\u5272\u308a\u5f53\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u6709\u52b9\u306a\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u307e\u305f\u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb \u30b0\u30eb\u30fc\u30d7\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "\u3053\u306e\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u9001\u4fe1\u5148\u306e\u30c9\u30e1\u30a4\u30f3\u304c\u3001\\n\u524d\u306e\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u91cd\u5927\u5ea6\u306e\u9001\u4fe1\u5148\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002\\n\\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u540c\u3058\u30c9\u30e1\u30a4\u30f3\u5185\u304b\u3089\u9078\u629e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u9078\u629e\u3057\u305f\u91cd\u5927\u5ea6\u304c\u9069\u5207\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u524d\u306b\u623b\u3063\u3066\u3001\u76ee\u7684\u306e\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u91cd\u5927\u5ea6\u3092\u9078\u629e\u3057\u307e\u3059\u3002\\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u91cd\u5927\u5ea6\u304c\u4e00\u81f4\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u9001\u4fe1\u5148\u3092\u9078\u629e\u3057\u307e\u3059\u3002"}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "\u3053\u306e\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306e\u30c9\u30e1\u30a4\u30f3\u304c\u3001\\n\u524d\u306e\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u91cd\u5927\u5ea6\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002\\n\\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u540c\u3058\u30c9\u30e1\u30a4\u30f3\u5185\u304b\u3089\u9078\u629e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\u9078\u629e\u3057\u305f\u91cd\u5927\u5ea6\u304c\u9069\u5207\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u524d\u306b\u623b\u3063\u3066\u3001\u76ee\u7684\u306e\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u91cd\u5927\u8981\u5ea6\u3092\u9078\u629e\u3057\u307e\u3059\u3002\\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u91cd\u5927\u5ea6\u304c\u4e00\u81f4\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u9078\u629e\u3057\u307e\u3059\u3002"}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb \u30d0\u30fc\u72b6\u6cc1\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "\u81ea\u52d5\u30b9\u30af\u30ed\u30fc\u30eb\u72b6\u6cc1\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_READER_START_SUCCESS", "Live Monitoring Reader \u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002"}, {"LM_READER_START_FAILURE", "Live Monitoring Reader \u3092\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n (\u88dc\u8db3: \u6307\u5b9a\u3055\u308c\u305f\u8ee2\u9001\u5148\u30a2\u30c9\u30ec\u30b9\u304a\u3088\u3073\u30dd\u30fc\u30c8\u306b\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb/\u30a6\u30a7\u30d6 \u30b5\u30fc\u30d0\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059)\u3002"}, {"LM_READER_STOP_SUCCESS", "Live Monitoring Reader \u304c\u505c\u6b62\u3057\u307e\u3057\u305f\u3002"}, {"LM_READER_STOP_FAILURE", "Live Monitoring Reader \u3092\u505c\u6b62\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_EC_DISABLED", "Syslog \u306e\u8ee2\u9001\u306f\u73fe\u5728\u7121\u52b9\u3067\u3059\u3002<br>Syslog \u306f\u3001\u76e3\u8996\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30a4\u30d9\u30f3\u30c8 \u30de\u30cd\u30fc\u30b8\u30e3 \u30b5\u30fc\u30d3\u30b9\u306b\u8ee2\u9001\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<br>Syslog \u306e\u8ee2\u9001\u3092\u6709\u52b9\u306b\u3057\u3066\u76e3\u8996\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001\u4e0a\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb \u30d0\u30fc\u306e\u300c\u8a2d\u5b9a\u300d\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_READER_NO_ALERT_MSG", "Reader \u306b\u65b0\u3057\u3044\u30a2\u30e9\u30fc\u30c8\u306f\u5c4a\u3044\u3066\u3044\u307e\u305b\u3093\u3002<br>\u88dc\u8db3: \u554f\u984c\u304c\u89e3\u6d88\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u300c\u76e3\u8996\u8a2d\u5b9a\u300d\u3068\u88c5\u7f6e\u306e Syslog \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_READER_STOPPED_MSG", "Reader \u306f\u73fe\u5728\u505c\u6b62\u3057\u3066\u3044\u307e\u3059\u3002\u4e0a\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb \u30d0\u30fc\u306e\u300c\u8d77\u52d5\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001Reader \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "\u88c5\u7f6e\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u8a31\u53ef\u3055\u308c\u307e\u305b\u3093\u3002<br>\u88c5\u7f6e\u304b\u3089\u8ee2\u9001\u3055\u308c\u308b Syslog \u3092\u76e3\u8996\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u7ba1\u7406\u8005\u306b\u9023\u7d61\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_READER_ERROR_MSG", "\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002<br>Live Monitoring Reader \u306e\u53ce\u96c6\u51e6\u7406\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"LM_READER_SOCKET_ERROR_MSG", "\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002<br>Live Monitoring Reader \u306e\u8d77\u52d5\u6642\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002<br>\u4f8b\u5916\u306e\u8a73\u7d30: "}, {"LM_FAILURE_UPDATE_SETTINGS", "\u30e9\u30a4\u30d6\u76e3\u8996\u306e\u8a2d\u5b9a\u3092\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_SUCCESS_UPDATE_SETTINGS", "\u30e9\u30a4\u30d6\u76e3\u8996\u306e\u8a2d\u5b9a\u306f\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LM_WARN_ENABLE_EC", "\u30a4\u30d9\u30f3\u30c8 \u30de\u30cd\u30fc\u30b8\u30e3\u306f\u3001Syslog \u30b3\u30ec\u30af\u30bf\u304b\u3089\u8ee2\u9001\u3055\u308c\u308b Syslog \u3092\u76e3\u8996\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e Syslog \u306f\u3001\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306b\u57fa\u3065\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b\u30a8\u30f3\u30b8\u30f3\u306b\u9001\u4fe1\u3055\u308c\u307e\u3059\u3002\\n\\n\u88dc\u8db3:\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u3001\u914d\u5099\u5185\u306e\u3059\u3079\u3066\u306e Syslog \u30b3\u30ec\u30af\u30bf \u30b5\u30fc\u30d3\u30b9\u306b\u3088\u3063\u3066\u53d7\u4fe1\u3055\u308c\u305f Syslog \u304c\u4e2d\u592e\u30a4\u30d9\u30f3\u30c8 \u30de\u30cd\u30fc\u30b8\u30e3 \u30b5\u30fc\u30d3\u30b9\u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u3059\u3079\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u306e\u305f\u3081\u306b Syslog \u30b3\u30ec\u30af\u30bf\u306b\u3088\u3063\u3066\u8907\u88fd\u3055\u308c\u308b\u305f\u3081\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5168\u4f53\u3067 Syslog \u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u5897\u52a0\u3057\u307e\u3059\u3002"}, {"LM_STMT_CHANGED_MSG_1", "\u9078\u629e\u3057\u305f\u30eb\u30fc\u30eb\u306b\u5909\u66f4\u3092\u52a0\u3048\u307e\u3057\u305f\u3002"}, {"LM_STMT_CHANGED_MSG_2", "\\n\u524d\u306e\u753b\u9762 (\u300c\u30eb\u30fc\u30eb \u30ea\u30b9\u30c8\u300d\u30da\u30fc\u30b8) \u306b\u623b\u308b\u3068\u3001\u5909\u66f4\u5185\u5bb9\u304c\u5931\u308f\u308c\u307e\u3059\u3002\u300c\u30eb\u30fc\u30eb \u30ea\u30b9\u30c8\u300d\u30da\u30fc\u30b8\u306b\u623b\u308b\u5834\u5408\u306f\u300cOK\u300d\u3092\u3001\u30eb\u30fc\u30eb\u306e\u7de8\u96c6\u3092\u7d9a\u884c\u3059\u308b\u5834\u5408\u306f\u300c\u30ad\u30e3\u30f3\u30bb\u30eb\u300d\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002"}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "\u30c9\u30c3\u30ad\u30f3\u30b0\u72b6\u6cc1\u3092\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "\u3053\u306e\u753b\u9762\u3067\u66f4\u65b0\u3092\u884c\u3046\u305f\u3081\u306e\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {"LM_DELETE_STMT_EMPTY", "\u524a\u9664\u3059\u308b\u30eb\u30fc\u30eb\u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_STMT_RULE_EMPTY", "\u30eb\u30fc\u30eb\u7a2e\u5225\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\\n\u30eb\u30fc\u30eb\u7a2e\u5225\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_STMT_RULE_DUPLICATE", "\u540c\u3058\u30eb\u30fc\u30eb\u7a2e\u5225\u3068\u540c\u3058\u30a8\u30c7\u30a3\u30bf \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3064\u30eb\u30fc\u30eb\u304c\u65e2\u306b\u5b58\u5728\u3057\u307e\u3059\u3002\\n\u3053\u306e\u30eb\u30fc\u30eb\u306b\u4e00\u610f\u306e\u30eb\u30fc\u30eb \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "Reader \u306e\u8ee2\u9001\u30dd\u30fc\u30c8\u304c\u5909\u66f4\u3055\u308c\u307e\u3057\u305f\u3002Reader \u304c\u6b63\u5e38\u306b\u518d\u8d77\u52d5\u3059\u308b\u307e\u3067\u306b 2 \uff5e 3 \u79d2\u304b\u304b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002"}, {"LM_NO_RULE_EDITABLE", "\u9078\u629e\u3057\u305f\u30b0\u30eb\u30fc\u30d7\u306b\u306f\u7de8\u96c6\u53ef\u80fd\u306a\u30eb\u30fc\u30eb\u7a2e\u5225\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u5225\u306e\u30b0\u30eb\u30fc\u30d7/\u30eb\u30fc\u30eb\u7a2e\u5225\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_DISABLE_STMT_EMPTY", "\u6709\u52b9\u5316/\u7121\u52b9\u5316\u64cd\u4f5c\u7528\u306e\u30eb\u30fc\u30eb\u3092\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_SUCCESS_DISABLE_RULE", "\u30eb\u30fc\u30eb\u306e\u6709\u52b9\u5316/\u7121\u52b9\u5316\u306f\u6b63\u5e38\u306b\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\u3002"}, {"LM_FAILURE_DISABLE_RULE", "\u9078\u629e\u3057\u305f\u30eb\u30fc\u30eb\u3092\u6b63\u5e38\u306b\u6709\u52b9/\u7121\u52b9\u306b\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"LM_EDIT_RULE_MSG_1", "\u6b21\u306e\u30eb\u30fc\u30eb\u306e\u7de8\u96c6\u3092\u9078\u629e\u3057\u307e\u3057\u305f:\\n"}, {"LM_EDIT_RULE_MSG_2", "\\n\u9078\u629e\u3057\u305f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306f\u3069\u308c\u3082\u7de8\u96c6\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n\u5225\u306e\u30eb\u30fc\u30eb\u3092\u9078\u629e\u3057\u3066\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_EDIT_RULE_MSG_3", "\\n\u9078\u629e\u3057\u305f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306e\u3046\u3061\u3001* \u304c\u4ed8\u3044\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306f\u7de8\u96c6\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n\u6b8b\u308a\u306e\u30eb\u30fc\u30eb\u306e\u7de8\u96c6\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"LM_DELETE_RULE_MSG_1", "\u6b21\u306e\u30eb\u30fc\u30eb\u306e\u524a\u9664\u3092\u9078\u629e\u3057\u307e\u3057\u305f:\\n"}, {"LM_DELETE_RULE_MSG_2", "\\n\u9078\u629e\u3057\u305f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306f\u3069\u308c\u3082\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n\u5225\u306e\u30eb\u30fc\u30eb\u3092\u9078\u629e\u3057\u3066\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"LM_DELETE_RULE_MSG_3", "\\n\u9078\u629e\u3057\u305f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306e\u3046\u3061\u3001* \u304c\u4ed8\u3044\u3066\u3044\u308b\u30eb\u30fc\u30eb\u306f\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3002\\n\\n\u6b8b\u308a\u306e\u30eb\u30fc\u30eb\u306e\u524a\u9664\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"LM_DELETE_RULE_MSG_4", "\\n\u64cd\u4f5c\u3092\u7d9a\u884c\u3057\u307e\u3059\u304b?"}, {"MASKED_LIVEMONITOR_MESSAGE", "\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8868\u793a\u304c\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u5f37\u5236\u30dd\u30ea\u30b7\u30fc\u306b\u57fa\u3065\u3044\u3066\u6291\u5236\u3055\u308c\u307e\u3057\u305f\u3002"}, {"MASKED_ADDITIONAL_INFORMATION", "\u8ffd\u52a0\u306e\u60c5\u5831\u306e\u8868\u793a\u304c\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u5f37\u5236\u30dd\u30ea\u30b7\u30fc\u306b\u57fa\u3065\u3044\u3066\u6291\u5236\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DSB_NONENGFW_ALERT_TITLE", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3\u8b66\u544a!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "GMS \u306f\u82f1\u8a9e\u4ee5\u5916\u306e\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b SonicOS \u88c5\u7f6e\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002"}, {"DSB_NONENGFW_ALERT_MSGPART2", "\u82f1\u6570\u5b57\u4ee5\u5916\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304a\u3088\u3073\u30dd\u30ea\u30b7\u30fc\u306f\u3001GMS \u306e\u30e6\u30fc\u30b6 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u305d\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304a\u3088\u3073\u30dd\u30ea\u30b7\u30fc\u306e\u5909\u66f4\u304a\u3088\u3073\u8ffd\u52a0\u306f\u3001\u671f\u5f85\u3059\u308b\u7d50\u679c\u306b\u306a\u3089\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"}, {"SYSLOGTAIL_STARTED", "Syslog Reader (Syslog \u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u7528) \u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002"}, {"SYSLOGTAIL_START_FAILED", "Syslog Reader \u304c\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002Syslog \u306e\u8ee2\u9001\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002&nbsp;&nbsp;(\u88dc\u8db3: \u6307\u5b9a\u3055\u308c\u305f\u8ee2\u9001\u5148\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8\u306f\u3001Console/Web Server \u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093)\u3002"}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog Reader (Syslog \u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u7528) \u306f\u65e2\u306b\u52d5\u4f5c\u3057\u3066\u3044\u307e\u3059\u3002\u5909\u66f4\u306f\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f"}, {"SYSLOGTAIL_STOPPED", "Syslog Reader (Syslog \u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u7528) \u304c\u505c\u6b62\u3057\u307e\u3057\u305f\u3002"}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog Reader (Syslog \u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u7528) \u306f\u65e2\u306b\u505c\u6b62\u3057\u3066\u3044\u307e\u3059\u3002\u5909\u66f4\u306f\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "Reader \u304c\u53d7\u4fe1\u3057\u305f\u65b0\u3057\u3044 Syslog \u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(Reader \u306f\u7d99\u7d9a\u3057\u3066 Syslog \u306e\u53ce\u96c6\u3092\u8a66\u307f\u307e\u3059)\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(\u984c\u304c\u3042\u308b\u5834\u5408\u306f\u3001Syslog Reader \u306e\u8a2d\u5b9a\u3068\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044)\u3002"}, {"SYSLOGTAIL_CONFIG_CHECK", "Syslog Reader \u306e\u8a2d\u5b9a\u3068\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "Syslog \u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER", "\u7d50\u679c\u306e\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u306b\u306f\u3001\u30d5\u30a3\u30eb\u30bf\u6587\u5b57\u5217\u3092\u5de5\u592b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "((\u88dc\u8db3: \u7d50\u679c\u306e\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u306b\u306f\u3001<b>AND</b> \u307e\u305f\u306f <b>OR</b> \u3092\u6587\u5b57\u5217\u9593\u3067\u4f7f\u7528\u3057\u307e\u3059)\u3002"}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Syslog Reader \u306f\u73fe\u5728\u505c\u6b62\u3057\u3066\u3044\u307e\u3059"}, {"SYSLOGTAIL_START", "Syslog Reader \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"SYSLOGTAIL_ERROR", "\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"SYSLOGTAIL_ERROR_MESSAGE", "Syslog \u306e\u53ce\u96c6\u51e6\u7406\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Syslog \u306e\u8ee2\u9001\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Syslog \u306e\u8ee2\u9001\u306e\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a\u3057\u305f\u3089\u3001Syslog Reader \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"MASKED_SYSLOG_MESSAGE", "\u9069\u7528\u3055\u308c\u308b\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc \u30dd\u30ea\u30b7\u30fc\u306b\u57fa\u3065\u304d\u3001Syslog \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6b8b\u308a\u306f\u8868\u793a\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u30de\u30b9\u30af\u3055\u308c\u3066\u3044\u307e\u3059"}, {"EVENT_ALERTS_SEARCH", "\u30a2\u30e9\u30fc\u30c8\u306e\u691c\u7d22"}, {"EVENT_ALERTS_DELETE", "\u30a2\u30e9\u30fc\u30c8\u3092\u524a\u9664"}, {"EVENT_ALERTS_ENABLE_DISABLE", "\u30a2\u30e9\u30fc\u30c8\u3092\u6709\u52b9\u5316/\u7121\u52b9\u5316"}, {"EVENT_ALERTS_ADD", "\u30a2\u30e9\u30fc\u30c8\u3092\u8ffd\u52a0"}, {"EVENT_ALERTS_HEADER", "\u8b66\u544a"}, {"EVENT_ALERTS_ALERT_NAME", "\u540d\u524d"}, {"EVENT_ALERTS_ALERT_TYPE", "\u30a2\u30e9\u30fc\u30c8\u7a2e\u5225"}, {"EVENT_ALERTS_INTERVAL", "\u9593\u9694"}, {"EVENT_ALERTS_DEST_SCHED", "\u5b9b\u5148/\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb"}, {"EVENT_ALERTS_ENABLED", "\u6709\u52b9"}, {"EVENT_ALERTS_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"EVENT_ALERTS_CONFIGURE", "\u8a2d\u5b9a"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "\u30a2\u30e9\u30fc\u30c8\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f"}, {"DTF_ANY", "\u968f\u6642"}, {"DTF_ADD", "\u88c5\u7f6e\u3092\u8ffd\u52a0"}, {"DTF_EXECUTE", "\u5b9f\u884c"}, {"DTF_ENABLED", "\u6709\u52b9"}, {"DTF_SEARCH", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u691c\u7d22"}, {"DTF_NOT_FOUND", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"DTF_DT", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af"}, {"DTF_DESC", "\u8aac\u660e"}, {"DTF_TOU", "\u88c5\u7f6e\u7a2e\u5225"}, {"DTF_DURING", "\u30bf\u30b9\u30af\u4f5c\u6210\u671f\u9593:"}, {"DTF_NO_DTS", "\u5b9f\u884c\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {"DTF_EXEC", "\u3053\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002"}, {"DTF_NO_DISABLE", "\u3053\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306f\u7121\u52b9\u5316\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DTF_NO_EXEC", "\u3053\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306f\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3002"}, {"DTF_SEL_UNITS", "\u88c5\u7f6e\u3092\u9078\u629e"}, {"DTF_EXEC_METHOD", "\u5b9f\u884c\u65b9\u6cd5"}, {"DTF_ATLEAST_ONE", "\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u88c5\u7f6e\u3092\u6700\u4f4e 1 \u53f0\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}, {"DTF_EXEC_ALL", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u3092\u30b7\u30b9\u30c6\u30e0\u306e\u5168\u88c5\u7f6e\u3067\u5b9f\u884c\u3059\u308b"}, {"DTF_EXEC_FOLL", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u3092\u6b21\u306e\u88c5\u7f6e\u3067\u5b9f\u884c\u3059\u308b"}, {"DTF_REAPPLY_1", "\u524d\u56de\u9069\u7528\u5916\u306e\u5834\u5408\u306b\u306e\u307f\u5b9f\u884c\u3059\u308b"}, {"DTF_REAPPLY_2", "\u9078\u629e\u3057\u305f\u88c5\u7f6e\u3067\u524d\u56de\u306f\u9069\u7528\u3055\u308c\u306a\u304b\u3063\u305f\u30bf\u30b9\u30af\u3060\u3051\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002"}, {"DTF_REAPPLY_3", "\u305d\u306e\u88c5\u7f6e\u3067\u5b9f\u884c\u6e08\u307f\u306e\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002"}, {"DTF_EXEC_1", "\u524d\u56de\u9069\u7528\u6e08\u307f\u3067\u3082\u5b9f\u884c\u3059\u308b"}, {"DTF_EXEC_2", "\u9078\u629e\u3057\u305f\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u304c\u3001\u524d\u56de\u306b\u9069\u7528\u3055\u308c\u305f\u30bf\u30b9\u30af\u3082\u542b\u3081\u3001\u9078\u629e\u3057\u305f\u88c5\u7f6e\u3067\u518d\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002"}, {"DTF_ENABLE_SUCCESS", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306e\u9078\u629e\u304c\u6b63\u5e38\u306b\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DTF_ENABLE_FAIL", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306e\u9078\u629e\u3092\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002"}, {"DTF_SCHEDULE_SUCCESS", "\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u306e\u5b9f\u884c\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u304c\u6b63\u5e38\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002"}, {"DTF_SCHEDULE_FAIL", "\u9078\u629e\u3055\u308c\u305f\u30bf\u30b9\u30af\u304c\u9069\u7528\u53ef\u80fd\u3067\u306f\u306a\u3044\u3001\u307e\u305f\u306f\u65e2\u306b\u5b9f\u884c\u6e08\u307f\u306e\u305f\u3081\u3001\u30c7\u30d5\u30a9\u30eb\u30c8 \u30bf\u30b9\u30af\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002."}, {"AUTOASSIGN_AGENT_HEADER", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u5272\u308a\u5f53\u3066\u8a2d\u5b9a"}, {"AUTOASSIGN_AGENT_MSG_1", " \u7ba1\u7406\u3001\u30ec\u30dd\u30fc\u30c8\u3001\u304a\u3088\u3073\u76e3\u8996\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u5c02\u7528\u306e\u30e6\u30cb\u30c3\u30c8\u304c\u5fc5\u8981\u3067\u3059\u3002\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u81ea\u52d5\u5272\u308a\u5f53\u3066\u306f\u3001\u30e6\u30cb\u30c3\u30c8\u3092\u5747\u7b49\u306b\u914d\u5206\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u3088\u308a\u9069\u5207\u306a\u5272\u308a\u5f53\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u6700\u9069\u5316\u3001\u5341\u5206\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u9ad8\u3044\u53ef\u7528\u6027\u3092\u78ba\u5b9f\u306a\u3082\u306e\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u6a5f\u80fd\u306f\u3001\u300c\u30e6\u30cb\u30c3\u30c8\u306e\u8ffd\u52a0\u300d\u64cd\u4f5c\u4e2d\u306b\u9078\u629e\u3057\u305f\u7ba1\u7406\u30e2\u30fc\u30c9\u306b\u57fa\u3065\u3044\u3066\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "\u30e6\u30fc\u30b6\u306f\u300c<i>\u30e6\u30cb\u30c3\u30c8\u306e\u5909\u66f4</i>\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u304b\u3089\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u518d\u5ea6\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}, {"AUTOASSIGN_AGENT_MSG_2", "\u30e6\u30fc\u30b6\u306f\u300c<i>\u30e6\u30cb\u30c3\u30c8\u306e\u5909\u66f4</i>\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u304b\u3089 (\u672a\u53d6\u5f97\u306e\u88c5\u7f6e\u7528)\u3001\u307e\u305f\u306f\u300c<i>\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u518d\u5272\u308a\u5f53\u3066</i>\u300d\u64cd\u4f5c (\u53d6\u5f97\u6e08\u307f\u306e\u88c5\u7f6e\u7528) \u3067\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u518d\u5ea6\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\u300c\u65e2\u5b58\u306e\u30c8\u30f3\u30cd\u30eb\u300d\u307e\u305f\u306fLAN\u3001SSL \u7ba1\u7406\u30e2\u30fc\u30c9\u306e\u307f:\u81ea\u52d5\u5272\u308a\u5f53\u3066\u304c\u9069\u7528\u3055\u308c\u308b\u306e\u306f\u3001\u300c<i>\u65e2\u5b58\u306e\u30c8\u30f3\u30cd\u30eb</i>\u300d\u30e2\u30fc\u30c9\u3068\u300c<i>SSL</i>\u300d\u30e2\u30fc\u30c9\u3060\u3051\u3067\u3059\u304c\u3001\u300c<i>\u7ba1\u7406\u30c8\u30f3\u30cd\u30eb</i>\u300d\u306e\u624b\u52d5\u5272\u308a\u5f53\u3066\u304c\u5fc5\u8981\u306b\u306a\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002"}, {"AUTOASSIGN_AGENT_MSG_ALL", "\u3059\u3079\u3066\u306e\u7ba1\u7406\u30e2\u30fc\u30c9:\u81ea\u52d5\u5272\u308a\u5f53\u3066\u306f\u3059\u3079\u3066\u306e\u30e2\u30fc\u30c9\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u300c<i>\u7ba1\u7406\u30c8\u30f3\u30cd\u30eb</i>\u300d\u30e2\u30fc\u30c9\u3067\u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u8a2d\u5b9a\u3092\u30de\u30cd\u30fc\u30b8\u30c9 \u30e6\u30cb\u30c3\u30c8\u4e0a\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "\u81ea\u52d5\u5272\u308a\u5f53\u3066\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3057\u305f"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "\u81ea\u52d5\u5272\u308a\u5f53\u3066\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u7121\u52b9\u306b\u306a\u308a\u307e\u3057\u305f"}, {"AUTOASSIGN_AGENT_ENABLE", "\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u81ea\u52d5\u5272\u308a\u5f53\u3066\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL \u304a\u3088\u3073\u65e2\u5b58\u306e\u30c8\u30f3\u30cd\u30eb\u307e\u305f\u306f LAN \u306e\u4f7f\u7528"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "\u3059\u3079\u3066"}, {"CUI_NO_FS", "\u30d5\u30ed\u30fc \u30b5\u30fc\u30d0\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002"}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u81ea\u52d5\u5272\u308a\u5f53\u3066\u304c\u7121\u52b9\u5316\u3055\u308c\u307e\u3057\u305f"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u81ea\u52d5\u5272\u308a\u5f53\u3066\u304c\u6709\u52b9\u5316\u3055\u308c\u307e\u3057\u305f"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"LOGCONFIG_SECTITLE_2", "\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8"}, {"LOGCONFIG_DELLABEL", "\u6b21\u306e\u65e5\u4ed8\u3088\u308a\u53e4\u3044\u30ed\u30b0\u3092\u524a\u9664:"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u65e5"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u671f\u9593"}, {"LOGCONFIG_DOMAIN", "\u30c9\u30e1\u30a4\u30f3"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "\u30a8\u30e9\u30fc:\u8a2d\u5b9a\u3092\u66f4\u65b0\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u5909\u66f4\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\u30ed\u30b0 \u30d5\u30a1\u30a4\u30eb\u306e\u6700\u5927\u6570\u3092\u5909\u66f4\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "\u30a2\u30fc\u30ab\u30a4\u30d6 "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " \u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8"}, {"APPLOG_CONFIG_DELETE_MSG_1", "\u30ed\u30b0\u306f\u3001\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306e\u8ffd\u8de1\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306f\u3001\u30e6\u30fc\u30b6\u304c\u958b\u59cb\u3057\u305f\u52d5\u4f5c\u306b\u76f4\u63a5\u7684\u307e\u305f\u306f\u9593\u63a5\u7684\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u304b\u3001\u30b7\u30b9\u30c6\u30e0\u304c\u958b\u59cb\u3057\u305f\u52d5\u4f5c\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30ed\u30b0\u306f\u3001\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u306e\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3060\u3051\u3067\u306a\u304f\u3001\u76e3\u67fb\u8a3c\u8de1\u304a\u3088\u3073\u30b3\u30f3\u30d7\u30e9\u30a4\u30a2\u30f3\u30b9\u306e\u305f\u3081\u306b\u3082\u91cd\u8981\u3067\u3059\u3002"}, {"APPLOG_CONFIG_DELETE_MSG_2", "\u30b7\u30b9\u30c6\u30e0\u306b\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u3063\u305f\u30ed\u30b0\u306f\u3001\u624b\u52d5\u3067\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f 1 \u56de\u306e\u52d5\u4f5c\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u524a\u9664\u7528\u306b\u9078\u629e\u3057\u305f\u65e5\u4ed8\u306b\u57fa\u3065\u3044\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 "}, {"APPLOG_CONFIG_DELETE_MSG_21", "\u3053\u306e\u753b\u9762\u306e\u524a\u9664\u52d5\u4f5c\u3067\u306f\u3001\u5909\u66f4\u547d\u4ee4\u3068\u95a2\u4fc2\u306e\u306a\u3044\u30ed\u30b0\u306e\u307f\u304c\u6d88\u53bb\u3055\u308c\u307e\u3059\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "\u30b7\u30b9\u30c6\u30e0\u306b\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u3063\u305f\u30ed\u30b0\u306f\u3001CSV/HTML \u5f62\u5f0f\u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30aa\u30d5\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a2\u30fc\u30ab\u30a4\u30d6 \u30d7\u30ed\u30bb\u30b9\u3067\u306f\u3001\u6700\u521d\u306b\u300c\"\u30ed\u30b0\u306e\u30a2\u30fc\u30ab\u30a4\u30d6 \u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\"\u300d\u306b\u5f93\u3063\u3066\u30c7\u30fc\u30bf\u304c <i>archivedLogs</i> \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30a2\u30fc\u30ab\u30a4\u30d6\u3055\u308c\u3001\u6b21\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "\u30a2\u30fc\u30ab\u30a4\u30d6\u52d5\u4f5c\u3067\u306f\u3001\u5909\u66f4\u547d\u4ee4\u3068\u95a2\u4fc2\u306e\u3042\u308b\u30ed\u30b0\u3082\u542b\u3081\u3001\u3059\u3079\u3066\u306e\u30ed\u30b0\u304c\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u304c\u3001\u524a\u9664\u3067\u306f\u3001\u5909\u66f4\u547d\u4ee4\u3068\u95a2\u4fc2\u306e\u3042\u308b\u30a8\u30f3\u30c8\u30ea\u306e\u6d88\u53bb\u306f\u30b9\u30ad\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "\u88dc\u8db3:\u30a6\u30a3\u30f3\u30c9\u30a6\u4ee5\u5916\u306e\u914d\u5099\u306e\u5834\u5408:\u30a2\u30fc\u30ab\u30a4\u30d6\u3057\u305f\u30ed\u30b0 \u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30ab\u30eb \u30c9\u30e9\u30a4\u30d6\u306b\u30aa\u30d5\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f\u3001\u300c\u88c5\u7f6e > \u30b7\u30b9\u30c6\u30e0 > \u30d5\u30a1\u30a4\u30eb \u30de\u30cd\u30fc\u30b8\u30e3\u300d\u753b\u9762\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002"}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "\u30a2\u30fc\u30ab\u30a4\u30d6\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "\u4fdd\u6301 "}, {"APPLOG_CONFIG_ARCHIVE_For", " \u671f\u9593:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "\u6700\u5927\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8 \u30d5\u30a1\u30a4\u30eb:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "\u30a2\u30fc\u30ab\u30a4\u30d6\u5f62\u5f0f:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "\u30a2\u30fc\u30ab\u30a4\u30d6\u306e\u8a2d\u5b9a"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "\u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6b63\u3057\u304f\u66f4\u65b0\u3055\u308c\u307e\u3057\u305f"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "\u6b21\u306b\u5bfe\u3059\u308b GMS \u30ed\u30b0 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30a2\u30fc\u30ab\u30a4\u30d6:"}, {"WF_SETTINGS_TITLE", "\u8a2d\u5b9a"}, {"WF_SETTINGS_MSG_1", "\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u30011 \u53f0\u307e\u305f\u306f\u8907\u6570\u306e\u88c5\u7f6e\u306b\u5bfe\u3057\u3066\u884c\u3046\u8a2d\u5b9a\u5909\u66f4\u3092\u76e3\u8996\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u63d0\u6848\u3055\u308c\u305f\u5909\u66f4\u306b\u5bfe\u3059\u308b\u30ec\u30d3\u30e5\u30fc\u306e\u5b9f\u884c\u3068\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u306e\u63d0\u4f9b\u3001\u3059\u3079\u3066\u306e\u52d5\u4f5c\u306b\u5bfe\u3059\u308b\u30aa\u30fc\u30ca\u30fc\u30b7\u30c3\u30d7\u306e\u5272\u308a\u5f53\u3066\u3068\u8aac\u660e\u8cac\u4efb\u306e\u6307\u5b9a\u3001\u3055\u3089\u306b\u76e3\u67fb\u7528\u306e\u8a73\u7d30\u306a\u30ed\u30b0\u8a18\u9332\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u306f\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3042\u308a\u3001\u88c5\u7f6e\u306b\u5bfe\u3057\u3066\u884c\u308f\u308c\u305f\u5909\u66f4\u3092\u8868\u793a\u3057\u305f\u308a\u3001\u88c5\u7f6e\u306b\u5bfe\u5fdc\u3059\u308b\u5909\u66f4\u3092\u753b\u9762\u4e0a\u3067\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u30d7\u30ec\u30d3\u30e5\u30fc\u3057\u305f\u308a\u3001\u8907\u6570\u306e\u5909\u66f4\u547d\u4ee4\u3092\u6bd4\u8f03\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 "}, {"WF_SETTINGS_MSG_2", "\u88dc\u8db3:\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u3068\u627f\u8a8d\u7ba1\u7406\u306f\u30c9\u30e1\u30a4\u30f3 \u30ec\u30d9\u30eb\u3067\u6709\u52b9/\u7121\u52b9\u306b\u3067\u304d\u307e\u3059\u3002\u627f\u8a8d\u7ba1\u7406\u3092\u7121\u52b9\u306b\u3057\u3066\u3082\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u306f\u5f71\u97ff\u3092\u53d7\u3051\u307e\u305b\u3093\u304c\u3001\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u3092\u7121\u52b9\u306b\u3059\u308b\u3068\u627f\u8a8d\u7ba1\u7406\u3082\u7121\u52b9\u306b\u306a\u308a\u307e\u3059\u3002"}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u3066\u3082\u3001\u4ee5\u4e0b\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5b9f\u969b\u306b\u3042\u308b\u88c5\u7f6e\u4e0a\u3067\u3057\u304b\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u9069\u7528\u3055\u308c\u307e\u305b\u3093\u3002 "}, {"WF_SETTINGS_ENABLE_COM", "\u5909\u66f4\u547d\u4ee4\u7ba1\u7406\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"WF_SETTINGS_ENABLE_WF", "\u627f\u8a8d\u7ba1\u7406\u3092\u6709\u52b9\u306b\u3059\u308b"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "\u5909\u66f4\u547d\u4ee4\u306e\u65e2\u5b9a\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u8a2d\u5b9a"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "\u5909\u66f4\u547d\u4ee4\u306f\u3001\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u306b\u57fa\u3065\u3044\u3066\u5b9f\u884c\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u9001\u4fe1\u6642\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u65e2\u5b9a\u5024\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u65b0\u3057\u3044\u5909\u66f4\u547d\u4ee4\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u3001\u9078\u629e\u3057\u305f\u8a2d\u5b9a\u304c\u81ea\u52d5\u7684\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb - "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "\u624b\u52d5\u3067\u5b9f\u884c\u3059\u308b"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "\u627f\u8a8d\u76f4\u5f8c"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "\u6307\u5b9a\u65e5\u6642"}, {"WF_CONFIG_DELETE_MSG_1", "\u30ed\u30b0\u306f\u3001\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306e\u8ffd\u8de1\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306f\u3001\u30e6\u30fc\u30b6\u304c\u958b\u59cb\u3057\u305f\u52d5\u4f5c\u306b\u76f4\u63a5\u7684\u307e\u305f\u306f\u9593\u63a5\u7684\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u304b\u3001\u30b7\u30b9\u30c6\u30e0\u304c\u958b\u59cb\u3057\u305f\u52d5\u4f5c\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30ed\u30b0\u306f\u3001\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u306e\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3060\u3051\u3067\u306a\u304f\u3001\u76e3\u67fb\u8a3c\u8de1\u304a\u3088\u3073\u30b3\u30f3\u30d7\u30e9\u30a4\u30a2\u30f3\u30b9\u306e\u305f\u3081\u306b\u3082\u91cd\u8981\u3067\u3059\u3002"}, {"WF_CONFIG_DELETE_MSG_2", "\u901a\u5e38\u3001 "}, {"WF_CONFIG_DELETE_MSG_3", " \u3088\u308a\u9577\u304f\u7d4c\u904e\u3057\u3001\u30b7\u30b9\u30c6\u30e0\u306b\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u3063\u305f\u5909\u66f4\u547d\u4ee4\u306f\u3001\u624b\u52d5\u3067\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f 1 \u56de\u306e\u52d5\u4f5c\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u524a\u9664\u7528\u306b\u9078\u629e\u3057\u305f\u65e5\u4ed8\u306b\u57fa\u3065\u3044\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u753b\u9762\u306e\u524a\u9664\u52d5\u4f5c\u3067\u306f\u3001\u5909\u66f4\u547d\u4ee4\u3068\u95a2\u4fc2\u306e\u3042\u308b\u30c7\u30fc\u30bf\u3001\u30bf\u30b9\u30af\u3001\u30ed\u30b0\u306e\u307f\u304c\u6d88\u53bb\u3055\u308c\u307e\u3059\u3002"}, {"APPLOG_CONFIG_DEL_DATA", "\u6b21\u306e\u5834\u6240\u306e\u30c7\u30fc\u30bf\u3092\u524a\u9664:"}, {"TEMPLATE_SETTINGS_TITLE", "\u8a2d\u5b9a"}, {"TEMPLATE_SETTINGS_MSG_1", "\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u65b0\u3057\u304f\u8ffd\u52a0\u3055\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u304c GMS \u3067\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b\u524d\u306b\u3001\u305d\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3059\u308b\u81ea\u52d5\u64cd\u4f5c\u3092\u4f5c\u6210/\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e6\u30cb\u30c3\u30c8\u304c\u63a5\u7d9a\u3055\u308c\u3066\u53d6\u5f97\u3055\u308c\u308b\u3068\u3001\u76f4\u3061\u306b GMS \u306f\u8a2d\u5b9a (\u65e2\u5b9a\u307e\u305f\u306f\u30ab\u30b9\u30bf\u30e0) \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u64cd\u4f5c\u3092\u30e6\u30cb\u30c3\u30c8\u306b\u9001\u4fe1\u3057\u307e\u3059\u3002"}, {"TEMPLATE_SETTINGS_MSG_2", "\u88dc\u8db3: \u300c\u65e2\u5b9a\u306e\u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b\u300d\u304c\u6709\u52b9\u306e\u5834\u5408\u3001\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u30e6\u30cb\u30c3\u30c8\u306b\u3082\u65e2\u5b9a\u306e\u8a2d\u5b9a\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002"}, {"TEMPLATE_ENABLE_DT", "\u65e2\u5b9a\u306e\u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b"}, {"FA_UNIT_STATUS_HEADER", "\u30e6\u30cb\u30c3\u30c8\u306e\u8a73\u7d30"}, {"FA_UNIT_STATUS_SERIAL", "\u30b7\u30ea\u30a2\u30eb\u756a\u53f7"}, {"FA_UNIT_STATUS_NODE_NAME", "\u30e6\u30cb\u30c3\u30c8\u540d"}, {"FA_UNIT_STATUS_MODEL", "\u30e2\u30c7\u30eb"}, {"FA_UNIT_STATUS_FIRMWARE", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3"}, {"FA_UNIT_STATUS_IP", "\u7ba1\u7406 IP"}, {"FA_UNIT_STATUS_LICENSE", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u53ef\u8996\u5316"}, {"FA_GROUP_STATUS_HEADER1", "\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306e\u8a73\u7d30"}, {"FA_GROUP_STATUS_HEADER2", "\u30d5\u30ed\u30fc\u5831\u544a\u30e9\u30a4\u30bb\u30f3\u30b9\u72b6\u6cc1"}, {"FA_GROUP_STATUS_NO_DATA", "\u5229\u7528\u53ef\u80fd\u306a\u30c7\u30fc\u30bf\u304c\u3042\u308a\u307e\u305b\u3093"}, {"FA_LICENSE_NOT_AVAILABLE", "\u672a\u8cfc\u8aad"}, {"FA_LICENSE_AVAILABLE", "\u8cfc\u8aad\u6e08"}, {"FA_LICENSE_FREE_TRAIL", "\u7121\u6599\u30c8\u30e9\u30a4\u30a2\u30eb"}, {"FA_LICENSE_EXPIRED", "\u671f\u9650\u5207\u308c"}, {"FA_GROUP_FIREWALL_COUNT", "\u30b7\u30b9\u30c6\u30e0\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"FA_FLOW_IP1", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1"}, {"FA_FLOW_IP2", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2"}, {"FA_FLOW_AGENT_STATUS", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u72b6\u6cc1"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u8a2d\u5b9a"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN \u30c8\u30f3\u30cd\u30eb"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "\u30ea\u30e2\u30fc\u30c8 IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "\u30c7\u30fc\u30bf\u4fdd\u6301 (\u65e5\u6570)"}, {"FA_FLOW_FORWARDER_IP", "\u30d5\u30ed\u30fc \u30d5\u30a9\u30ef\u30fc\u30c0\u30fc"}, {"FA_FLOWS_COLLECTED", "\u53ce\u96c6\u3055\u308c\u305f\u30d5\u30ed\u30fc"}, {"FA_DISK_ALLOCATED", "\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30c7\u30a3\u30b9\u30af"}, {"FA_DISK_USED", "\u4f7f\u7528\u4e2d\u306e\u30c7\u30a3\u30b9\u30af"}, {"FA_FLOW_STATUS", "\u72b6\u6cc1"}, {"FA_NO_AGENT", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u305b\u3093"}, {"FA_MODELSUPPORT", "\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\u3001\u30d5\u30ed\u30fc\u5831\u544a\u306f\u6709\u52b9\u5316\u3055\u308c\u307e\u305b\u3093"}, {"FA_FIRMWARESUPPORT", "\u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001\u30d5\u30ed\u30fc\u5831\u544a\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093"}, {"FA_LICENSESUPPORT", "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u53ef\u8996\u5316\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u304c\u3042\u308a\u307e\u305b\u3093"}, {"FA_HEADING", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"FA_FLOW_AGENT", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8"}, {"FA_FLOW_HEAD_IP1", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1"}, {"FA_FLOW_HEAD_IP2", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2"}, {"FA_FLOW_HEAD_HDD", "\u30cf\u30fc\u30c9 \u30c7\u30a3\u30b9\u30af (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "\u5e2f\u57df\u5e45 (%)"}, {"FA_FLOW_FORWARDER_HEAD", "\u30d5\u30ed\u30fc\u8ee2\u9001\u5143"}, {"FA_FLOW_PAIR", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u30da\u30a2"}, {"FA_FLOW_HEAD_DISKSIZE", "\u30c7\u30a3\u30b9\u30af \u30b5\u30a4\u30ba"}, {"FA_FLOW_HEAD_GATEWAY", "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"FA_FLOW_HEAD_TUNNELS", "\u30c8\u30f3\u30cd\u30eb"}, {"FA_FLOW_HEAD_TENANTS", "\u30c6\u30ca\u30f3\u30c8"}, {"FA_FLOW_HEAD_FIREWALLS", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "\u540d\u524d"}, {"GF_GATEWAY", "\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4"}, {"GF_LAST_UPDATED", "\u6700\u7d42\u66f4\u65b0\u65e5"}, {"GF_DEST_ADDRESS_RANGE", "\u9001\u4fe1\u5148\u30a2\u30c9\u30ec\u30b9\u7bc4\u56f2"}, {"GF_LOCAL_ADDRESS_RANGE", "\u30ed\u30fc\u30ab\u30eb \u30a2\u30c9\u30ec\u30b9\u7bc4\u56f2"}, {"FA_STATUS", "\u72b6\u6cc1"}, {"FA_UNIT_INTERFACES", "\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9"}, {"FA_UNIT_CONNECTION_RATE", "\u63a5\u7d9a\u901f\u5ea6"}, {"FA_UNIT_ACTIVE_CONNECTIONS", "\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u63a5\u7d9a"}, {"FA_UNIT_BANDWIDTH", "\u5e2f\u57df\u5e45"}, {"FA_UNIT_CORE_UTILIZATION", "\u30b3\u30a2\u4f7f\u7528\u7387"}, {"CLOUDSETTINGS_SECTITLE_1", "\u65b0\u898f\u306e\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 \u30da\u30a2\u3092\u8ffd\u52a0"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "\u30e1\u30e2\u30ea (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "\u30d5\u30ed\u30fc \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b9\u30c8\u30ec\u30fc\u30b8 (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "\u30af\u30e9\u30a6\u30c9 Syslog \u30b5\u30fc\u30d0\u306e\u8a2d\u5b9a"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Syslog \u30b5\u30fc\u30d0\u3078\u306e Syslog \u5831\u544a\u3092\u6709\u52b9\u5316:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Syslog \u30b5\u30fc\u30d0\u306e IP \u30a2\u30c9\u30ec\u30b9:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog \u30b5\u30fc\u30d0\u306e\u30dd\u30fc\u30c8:"}, {"CLOUDSETTINGS_SECTITLE_3", "\u30af\u30e9\u30a6\u30c9 \u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u8a2d\u5b9a"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "\u30d5\u30ed\u30fc \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3042\u305f\u308a\u306e\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6570:"}, {"CLOUDSETTINGS_SECTITLE_4", "\u30af\u30e9\u30a6\u30c9 \u30a2\u30fc\u30ab\u30a4\u30d6\u306e\u30ec\u30dd\u30fc\u30c8\u306e\u8a2d\u5b9a"}, {"CLOUDSETTINGS_NUM_ARCHIVED_REPORTS_SUPPORTED", "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3042\u305f\u308a\u306e\u30a2\u30fc\u30ab\u30a4\u30d6 \u30ec\u30dd\u30fc\u30c8\u6570:"}, {"CLOUDSETTINGS_SECTITLE_5", "\u30af\u30e9\u30a6\u30c9 SWARM \u30b5\u30fc\u30d0\u306e\u8a2d\u5b9a"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "SWARM \u30b5\u30fc\u30d0 IP \u30a2\u30c9\u30ec\u30b9:"}, {"STATUS_SUB_UNIT", "SonicPoint \u30ce\u30fc\u30c9"}, {"SP_INFO", "SonicPoint \u60c5\u5831"}, {"SP_MANAGEDBY", "\u7ba1\u7406\u8005"}, {"SP_IPADDR", "IP \u30a2\u30c9\u30ec\u30b9"}, {"SP_SUBNET", "\u30b5\u30d6\u30cd\u30c3\u30c8 \u30de\u30b9\u30af"}, {"SP_IFACE", "\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9"}, {"SP_ZONE", "\u30be\u30fc\u30f3"}, {"SP_MODEL", "\u30e2\u30c7\u30eb"}, {"SP_ENABLED", "\u6709\u52b9"}, {"SP_DISABLED", "\u7121\u52b9"}, {"SP_STATUS", "\u72b6\u6cc1"}, {"SP_MACADDR", "MAC \u30a2\u30c9\u30ec\u30b9"}, {Integer.toString(-919), "\u30e6\u30cb\u30c3\u30c8\u304c\u8a8d\u8a3c\u30d5\u30a7\u30fc\u30ba 1 \u547c\u3073\u51fa\u3057\u306b\u5fdc\u7b54\u3059\u308b\u306e\u3092\u5f85\u6a5f\u4e2d\u3067\u3059\u3002"}, {Integer.toString(-920), "\u30e6\u30cb\u30c3\u30c8\u304c\u8a8d\u8a3c\u30d5\u30a7\u30fc\u30ba 1 \u547c\u3073\u51fa\u3057\u306b\u5fdc\u7b54\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-921), "\u30e6\u30cb\u30c3\u30c8\u3068\u306e\u8a8d\u8a3c\u30d5\u30a7\u30fc\u30ba 1 \u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-922), "\u30e6\u30cb\u30c3\u30c8\u3068\u306e\u8a8d\u8a3c\u30d5\u30a7\u30fc\u30ba 1 \u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-923), "\u30e6\u30cb\u30c3\u30c8\u304c\u8a8d\u8a3c\u30d5\u30a7\u30fc\u30ba 2 \u547c\u3073\u51fa\u3057\u306b\u5fdc\u7b54\u3059\u308b\u306e\u3092\u5f85\u6a5f\u4e2d\u3067\u3059\u3002"}, {Integer.toString(-924), "\u30e6\u30cb\u30c3\u30c8\u304c\u8a8d\u8a3c\u30d5\u30a7\u30fc\u30ba 2 \u547c\u3073\u51fa\u3057\u306b\u5fdc\u7b54\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-925), "\u30e6\u30cb\u30c3\u30c8\u3068\u306e\u8a8d\u8a3c\u30d5\u30a7\u30fc\u30ba 2 \u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-926), "\u30e6\u30cb\u30c3\u30c8\u3068\u306e\u8a8d\u8a3c\u30d5\u30a7\u30fc\u30ba 1 \u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-927), "\u30e6\u30cb\u30c3\u30c8\u3068\u306e\u8a8d\u8a3c\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-928), "\u30e6\u30cb\u30c3\u30c8\u3068\u306e\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-929), "\u30e6\u30cb\u30c3\u30c8\u306f\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}, {Integer.toString(-930), "\u30e6\u30cb\u30c3\u30c8\u306f\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-931), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u306e\u30e6\u30cb\u30c3\u30c8 \u30b7\u30ea\u30a2\u30eb\u306e\u78ba\u8a8d\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-932), "\u30e6\u30cb\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u30cf\u30fc\u30c8 \u30d3\u30fc\u30c8\u304c\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-933), "\u30bc\u30ed\u30bf\u30c3\u30c1 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3068\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u9593\u306e\u30bb\u30c3\u30b7\u30e7\u30f3 ID \u306e\u8a2d\u5b9a\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-934), "\u30e6\u30cb\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3 ID \u306e\u8a2d\u5b9a\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-935), "\u30e6\u30cb\u30c3\u30c8\u306f\u53d6\u5f97\u306e\u6e96\u5099\u304c\u307e\u3060\u6574\u3063\u3066\u3044\u307e\u305b\u3093\u3002"}, {Integer.toString(-936), "\u30e6\u30cb\u30c3\u30c8\u306f\u30bc\u30ed\u30bf\u30c3\u30c1 \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u3044\u307e\u63a5\u7d9a\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-937), "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u8981\u6c42\u304c\u4e0d\u6b63\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u30b7\u30ea\u30a2\u30eb\u304c\u3042\u308a\u307e\u305b\u3093\u3002"}, {Integer.toString(-938), "\u30e6\u30cb\u30c3\u30c8\u306e\u30ad\u30fc\u30bb\u30c3\u30c8\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-939), "\u30e6\u30cb\u30c3\u30c8\u306e\u30ad\u30fc\u30bb\u30c3\u30c8\u306e\u53d6\u5f97\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-940), "\u30e6\u30cb\u30c3\u30c8\u306b\u30ad\u30fc\u30bb\u30c3\u30c8\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-941), "\u30e6\u30cb\u30c3\u30c8\u306b\u30ad\u30fc\u30bb\u30c3\u30c8\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-944), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304b\u3089\u30bc\u30ed\u30bf\u30c3\u30c1 \u30ad\u30fc\u306e\u53d6\u5f97\u306b\u6210\u529f\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-945), "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304b\u3089\u30bc\u30ed\u30bf\u30c3\u30c1 \u30ad\u30fc\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-946), "\u4e0d\u6b63\u306a\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb \u30bc\u30ed\u30bf\u30c3\u30c1 \u30ad\u30fc\u3092\u53d7\u4fe1\u3057\u307e\u3057\u305f\u3002"}, {Integer.toString(-947), "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u30bc\u30ed\u30bf\u30c3\u30c1\u6a5f\u80fd\u304c\u6709\u52b9\u5316\u3055\u308c\u307e\u3057\u305f\u3002"}, {Integer.toString(-948), "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u30bc\u30ed\u30bf\u30c3\u30c1\u6a5f\u80fd\u304c\u7121\u52b9\u5316\u3055\u308c\u307e\u3057\u305f\u3002"}, {"TICKET_INFORMATION", "ConnectWise \u30c1\u30b1\u30c3\u30c8"}, {"TICKET_DETAILS", "\u8a73\u7d30"}, {"CONNECTWISE_NOTE", "GMS \u3068 ConnectWise Manage \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u7d71\u5408\u3059\u308b\u3053\u3068\u3067\u3001\u57fa\u672c\u7684\u306a\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306e\u8a73\u7d30\u3092 ConnectWise \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068\u540c\u671f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u8b66\u544a\u306b\u5bfe\u3059\u308b\u81ea\u52d5\u30b5\u30fc\u30d3\u30b9 \u30c1\u30b1\u30c3\u30c8\u3092 ConnectWise Manage \u4e0a\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002ConnectWise \u7d71\u5408\u306f\u3001API \u30d0\u30fc\u30b8\u30e7\u30f3 3.0 \u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002"}, {"TWOFA_FAILED_LOGIN_MSG", "\u7121\u52b9\u306a\u8a8d\u8a3c\u30b3\u30fc\u30c9\u3067\u3059\u3002\u6709\u52b9\u306a\u8a8d\u8a3c\u30b3\u30fc\u30c9\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 (\u30e2\u30d0\u30a4\u30eb\u6642\u523b\u304c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u6642\u523b\u3068\u540c\u671f\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002) "}, {"TWOFA_EMERGENCY_CODE_RESET_MSG", "\u7dca\u6025\u30b3\u30fc\u30c9\u304c\u4f7f\u7528\u3055\u308c\u3001\u30e6\u30fc\u30b6\u30fc\u306e 2FA \u30ea\u30bb\u30c3\u30c8 : "}};
 
     @Override
     public Object[][] getContents() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_ko_KR.java decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_ko_KR.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_ko_KR.java	2023-09-08 15:13:13.227772141 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_ko_KR.java	2023-09-08 15:14:40.189258934 -0700
@@ -7,7 +7,7 @@
 
 public class sgmsResources_ko_KR
 extends ListResourceBundle {
-    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4(\ub2e8\uc218)"}, {"APPLIANCE_NAME_PLURAL", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4(\ubcf5\uc218)"}, {"APPLIANCE_DESC", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uc124\uba85"}, {"SONICWALL_NAME", "\ubc29\ud654\ubcbd"}, {"SONICWALL_NAME_PLURAL", "\ubc29\ud654\ubcbd"}, {"SONICWALL_DESC", "\ubc29\ud654\ubcbd \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMA"}, {"SSLVPN_DESC", "SMA \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDP"}, {"CDP_DESC", "CDP \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Aventail SMA \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "Email Security \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"OTHERS_NAME", "\uae30\ud0c0"}, {"OTHERS_NAME_PLURAL", "\uae30\ud0c0"}, {"OTHERS_DESC", "\uae30\ud0c0 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"MINUTE", "\ubd84"}, {"TEST_STRING", "\ud14c\uc2a4\ud2b8 \ubb38\uc790\uc5f4\ub85c, \ucd9c\uace0 \uc804 \uc81c\uac70\ub429\ub2c8\ub2e4."}, {"PROGRESS_ACTION_TIMED", "\uc774 \uc791\uc5c5\uc740 \uc644\ub8cc\ud558\ub294 \ub370 \uc2dc\uac04\uc774 \ub2e4\uc18c \uc18c\uc694\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PROGRESS_PLEASE_WAIT", "\uc7a0\uc2dc \uae30\ub2e4\ub824 \uc8fc\uc2ed\uc2dc\uc624..."}, {"LOADING_PLEASE_WAIT", "\ub85c\ub529 \uc911, \uc7a0\uc2dc \uae30\ub2e4\ub824\uc8fc\uc2ed\uc2dc\uc624..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "\uc774 \ud654\uba74\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "\ud654\uba74\uc744 \ubcfc \uc218 \uc788\ub294 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ub85c\uadf8\uc544\uc6c3\ud55c \ub2e4\uc74c \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"UPDATE", "\uc5c5\ub370\uc774\ud2b8"}, {"RESET", "\uc7ac\uc124\uc815"}, {"NO_PANEL_PERMISSIONS", "[KR]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "\ubaa8\ub378 \ucf54\ub4dc\uac00 \ub3d9\uae30\ud654\ub428"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "\ubaa8\ub378 \ucf54\ub4dc\ub97c \ub3d9\uae30\ud654\ud558\uc9c0 \ubabb\ud568"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "\uc791\uc5c5 \uc2a4\ud480\ub9c1\uc774 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "\uc2e4\ud328 - \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "\ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \ucd94\uac00\ub428 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "\ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"ERROR_ADD_ACTIVATION_CODE", "\ud65c\uc131\ud654 \ucf54\ub4dc \ucd94\uac00 \uc624\ub958: \ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc774\ubbf8 \uc788\uc74c - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "\ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc0ad\uc81c\ub428 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "\ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc0ad\uc81c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"ERROR_DELETE_ACTIVATION_CODE", "\ud65c\uc131\ud654 \ucf54\ub4dc \uc0ad\uc81c \uc624\ub958: \ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc5c6\uc74c - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "\ud65c\uc131\ud654 \ucf54\ub4dc \uc0ad\uc81c \uc624\ub958: \ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc74c - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "\ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ucd94\uac00\ub428: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "\ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucf54\ub4dc \ud480\uc5d0\uc11c \uc81c\uac70\ub428: "}, {"UPDATE_DB_MESSAGE", "\ubcc0\uacbd \ub0b4\uc6a9\uc774 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"FAILURE_UPDATE_DB_MESSAGE", "\uc5c5\ub370\uc774\ud2b8 \uc2e4\ud328: \ubcc0\uacbd \ub0b4\uc6a9\uc744 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_UNITS_FOR_REGISTRATION", "\ub4f1\ub85d\ud560 \uc7a5\uce58 \uc5c6\uc74c"}, {"FREE_TRAIL_NOT_APPLIED", "\ubaa8\ub4e0 \uc7a5\uce58\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uac70\ub098 \uc774\ubbf8 \uad6c\ub3c5 \uc0c1\ud0dc\uc784"}, {"AV_FAILURE_MESSAGE", "\uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc74c"}, {"AV_SUCCESS_MESSAGE", "\uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \ub4f1\ub85d\uc744 \uc704\ud55c \uc791\uc5c5\uc774 \uc2dc\uc791\ub428"}, {"AV_SUCCESS_UPGRADE", "\uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc704\ud55c \uc791\uc5c5\uc774 \uc2dc\uc791\ub428"}, {"AV_NO_SUCCESS_REG", "\ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc74c"}, {"AV_SUCCESS_REG", "\ub4f1\ub85d\uc744 \uc704\ud55c \uc791\uc5c5\uc774 \uc2dc\uc791\ub428"}, {"AV_NO_SUCCESS_UPGRADE", "\uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc74c"}, {"TASK_SUCCESS_MESSAGE", "\uc791\uc5c5\uc774 \uc2dc\uc791\ub428"}, {"TASK_CMP_ERROR", "CMP \uc554\ud638\ub294 \uc7a5\uce58 \uc218\uc900\uc5d0\uc11c\ub9cc \ubcc0\uacbd\ud560 \uc218 \uc788\uc74c"}, {"TASK_ERROR_MESSAGE", "\uc791\uc5c5\uc774 \uc2dc\uc791\ub418\uc9c0 \uc54a\uc74c"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "\ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc74c"}, {"SGMS_EMAIL_BOTTOM_MSG1", "\uc81c\uacf5\ucc98: "}, {"SGMS_EMAIL_BOTTOM_MSG2", " \ubc84\uc804 "}, {"SGMS_EMAIL_BOTTOM_MSG3", " \uc2dc\ub9ac\uc5bc: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " \uc11c\ubc84: "}, {"FIRMWARE_DOWNLOADED", "\ud38c\uc6e8\uc5b4\uc758 \uc0c8 \ubcf5\uc0ac\ubcf8\uc774 \ub2e4\uc6b4\ub85c\ub4dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " \uc774(\uac00) \ub2e4\uc74c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 \uace7 \ub9cc\ub8cc\ub429\ub2c8\ub2e4.\nSonicWall \uc601\uc5c5\ud300\uc5d0 \ubb38\uc758\ud558\uc5ec \ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \uad6c\ub9e4\ud558\uc5ec \uc774 \uad6c\ub3c5\uc744 \uac31\uc2e0\ud558\uc2ed\uc2dc\uc624."}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "\uad6c\ub3c5 \ub9cc\ub8cc \uc815\ubcf4\uc785\ub2c8\ub2e4."}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "\ub9cc\ub8cc\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"VERSION_MESSAGE", "SonicWall GMS \ubc84\uc804#: "}, {"NUM_NODES_MESSAGE", "\uc774 SonicWall GMS\uc5d0\uc11c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \ub178\ub4dc \uc218: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "GMS \uc81c\ud488 \uc124\uba85: "}, {"DATABASE_TYPE_MESSAGE", "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc720\ud615: "}, {"MODEL_TYPES_MESSAGE", "\ub178\ub4dc \uc218 \ubc0f \ubaa8\ub378 \uc774\ub984: "}, {"NUM_AGENTS_MESSAGE", "\uc2dc\uc2a4\ud15c\uc758 \uc5d0\uc774\uc804\ud2b8 \uc218: "}, {"AGENT_IP_MESSAGE", "\uc5d0\uc774\uc804\ud2b8\uc758 IP \uc8fc\uc18c: "}, {"UNKNOWN_MESSAGE", "\uc54c \uc218 \uc5c6\uc74c"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "\uc54c \uc218 \uc5c6\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "\uc7a5\uce58 \uc774\ub984\uc5d0 \uc798\ubabb\ub41c \ubb38\uc790([<,\\,:])\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {"PM_NAME_KEYWORD", " \uc740(\ub294) \ud0a4\uc6cc\ub4dc\uc774\ubbc0\ub85c \uc7a5\uce58 \uc774\ub984\uc744 \uc9c0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624,"}, {"PM_NAME_EXISTS_A", "\uc774\ub984\uc774 '"}, {"PM_NAME_EXISTS_B", "'\uc778 \uc7a5\uce58\uac00 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4. "}, {"PM_UNKNOWN", "\uc54c \uc218 \uc5c6\uc74c"}, {"PM_UNKNOWN_UNREGISTERED", "\uc54c \uc218 \uc5c6\uc74c/\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc74c"}, {"PM_UNREGISTERED", "\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc74c"}, {"PM_YES", "\uc608"}, {"PM_NO", "\uc544\ub2c8\uc694"}, {"PM_ENABLED", "\uc0ac\uc6a9"}, {"PM_DISABLED", "\uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c"}, {"PM_NOTAVAILABLE", "\uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c"}, {"PM_UNLIMITED", "\uc81c\ud55c\ub418\uc9c0 \uc54a\uc74c"}, {"PM_CURRENT", "\ud604\uc7ac"}, {"PM_DEFAULT", "\uae30\ubcf8\uac12"}, {"PM_EXPIRED", "\ub9cc\ub8cc\ub428"}, {"PM_UP", "\uc704"}, {"PM_DOWN", "\uc544\ub798"}, {"PM_NOT_ACQUIRED", "\ud68d\ub4dd\ud558\uc9c0 \ubabb\ud568"}, {"PM_SINCE", " \uc774\ud6c4 "}, {"PM_NONE", "\uc5c6\uc74c"}, {"PM_N_A", "\ud574\ub2f9 \uc5c6\uc74c"}, {"PM_NO_LICENSE", "\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c"}, {"PM_MODEL", "\ubaa8\ub378"}, {"PM_SERIAL_NUM", "\uc77c\ub828 \ubc88\ud638"}, {"PM_DOMAIN", "\ub3c4\uba54\uc778"}, {"PM_NUM_LAN_IPS", "\ud5c8\uc6a9\ub418\ub294 LAN IP \uc218"}, {"PM_HA", "\uace0\uac00\uc6a9\uc131"}, {"PM_DMZ_PORT", "DMZ \ud3ec\ud2b8"}, {"PM_NUM_WORKPORTS", "\ud5c8\uc6a9\ub418\ub294 WorkPort IP \uc218"}, {"PM_HOMEPORT", "HomePort"}, {"PM_WLAN_PORT", "WLAN \ud3ec\ud2b8"}, {"PM_OPT_PORT", "OPT \ud3ec\ud2b8"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN \uc5c5\uadf8\ub808\uc774\ub4dc"}, {"PM_VPN_CLIENTS", "\uc804\uc5ed VPN \ud074\ub77c\uc774\uc5b8\ud2b8"}, {"PM_IPS", "\uce68\uc785 \ubc29\uc9c0 \uc11c\ube44\uc2a4"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "\uac8c\uc774\ud2b8\uc6e8\uc774 \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0"}, {"PM_FIRMWARE_VERSION", "\ud38c\uc6e8\uc5b4 \ubc84\uc804"}, {"PM_REGISTRATION_CODE", "\ub4f1\ub85d \ucf54\ub4dc"}, {"PM_CFS_SUB", "\ucf58\ud150\uce20 \ud544\ud130 \ubaa9\ub85d/\uc11c\ube44\uc2a4"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "\ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0"}, {"PM_WARRANTY", "\ud655\uc7a5\ub41c \ubcf4\uc99d"}, {"PM_SW_STATUS", "\uc0c1\ud0dc"}, {"PM_SW_MANAGEDINSTANCE", "\uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uad00\ub9ac"}, {"PM_TASKS_PENDING", "\uc791\uc5c5 \ubcf4\ub958 \uc911"}, {"PM_LAST_LOG", "\ub9c8\uc9c0\ub9c9 \ub85c\uadf8 \ud56d\ubaa9"}, {"PM_SAS_CONFIG_INFO", "SA \uad6c\uc131 \uc815\ubcf4"}, {"PM_SAS_DEFINED", "\uc815\uc758\ub41c SA"}, {"PM_SAS_ENABLED", "\uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub41c SA"}, {"PM_SAS_AVAILABLE", "\uc0ac\uc6a9 \uac00\ub2a5\ud55c SA"}, {"PM_SAS_REMAINING", "\ub0a8\uc740 SA"}, {"PM_SAS_INTERCONNECTED", "\uc0c1\ud638 \uc5f0\uacb0\ub41c SA"}, {"PM_AGENT_ASSIGNED", "\uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\ub428"}, {"PM_PRIMARY_AGENT", "\uae30\ubcf8 \uc5d0\uc774\uc804\ud2b8"}, {"PM_STANDBY_AGENT", "\ub300\uae30 \uc5d0\uc774\uc804\ud2b8"}, {"PM_TUNNEL_MGMT", "\uad00\ub9ac \ubaa8\ub4dc"}, {"PM_FW_ADDED_TO_GMS", "SonicWall GMS\uc5d0 \ucd94\uac00\ub41c \uc7a5\uce58"}, {"PM_FW_UP_SINCE", "\ub2e4\uc74c \uc774\ud6c4 \uc791\ub3d9\ud558\ub294 \uc7a5\uce58"}, {"PM_FW_DOWN_SINCE", "\ub2e4\uc74c \uc774\ud6c4 \uc791\ub3d9\ud558\uc9c0 \uc54a\ub294 \uc7a5\uce58"}, {"PM_SW_IP", "SonicWall IP"}, {"PM_TIME_ZONE", "\ud45c\uc900 \uc2dc\uac04\ub300"}, {"PM_SW_IN_SYSTEM", "\uc2dc\uc2a4\ud15c\uc5d0\uc11c"}, {"PM_SW_IN_DMZ", "DMZ\uc5d0\uc11c"}, {"PM_SW_IN_GROUP", "\uadf8\ub8f9\uc5d0\uc11c"}, {"PM_SW_UNREGISTERED", "\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc74c"}, {"PM_SW_VPN_UPGRADE", "VPN \uc5c5\uadf8\ub808\uc774\ub4dc \ud3ec\ud568"}, {"PM_SW_VPN_CLIENT", "\uc804\uc5ed VPN \ud074\ub77c\uc774\uc5b8\ud2b8 \uc5c5\uadf8\ub808\uc774\ub4dc \ud3ec\ud568"}, {"PM_SW_MSSP", "MSSP \uc9c0\uc6d0"}, {"PM_CFL_SUBSCRIPTION", "\ucf58\ud150\uce20 \ud544\ud130 \ubaa9\ub85d/\uc11c\ube44\uc2a4"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "\ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0"}, {"PM_HGMS_SUBSCRIPTION", "\ud074\ub77c\uc6b0\ub4dc \uc11c\ube44\uc2a4"}, {"PM_SUPPORT_SUBSCRIPTION", "\uc9c0\uc6d0"}, {"PM_EXTENDED_WARRANTY", "\ud655\uc7a5\ub41c \ubcf4\uc99d"}, {"PM_UNITS_DOWN", "\uc791\ub3d9\ud558\uc9c0 \uc54a\ub294 SonicWall"}, {"PM_PENDING_TASKS", "\ubcf4\ub958 \uc911\uc778 \uc791\uc5c5\uc774 \ud3ec\ud568\ub41c SonicWall"}, {"PM_MANAGED_WITH_TUNNEL", "\uad00\ub9ac \ud130\ub110\uc744 \uc0ac\uc6a9\ud558\uc5ec \uad00\ub9ac\ub418\ub294 SonicWall"}, {"PM_TASK_SPOOLED", "\ud638\uc2a4\ud2b8 \uc774\ub984\uc744 \ubcc0\uacbd\ud558\ub3c4\ub85d \uc791\uc5c5\uc774 \uc2a4\ud480\ub9c1\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"PM_RAVLIN_MODEL", "Ravlin \ubaa8\ub378"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/\uc77c\ub828 \ubc88\ud638"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "\ud38c\uc6e8\uc5b4 \ubc84\uc804"}, {"PM_HW_VERSION", "\ud558\ub4dc\uc6e8\uc5b4 \ubc84\uc804"}, {"PM_ROM_VERSION", "ROM \ubc84\uc804"}, {"PM_SECURITY_ID", "\ubcf4\uc548 ID"}, {"PM_RAVLIN_STATUS", "Ravlin \uc0c1\ud0dc"}, {"PM_TASKS_PENDING", "\uc791\uc5c5 \ubcf4\ub958 \uc911"}, {"PM_AGENT_ASSIGNED", "\uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\ub428"}, {"PM_RAVLINS_IN_NODE", "\ub178\ub4dc\uc758 Ravlin"}, {"PM_RAVLINS_DOWN", "\uc791\ub3d9\ud558\uc9c0 \uc54a\ub294 Ravlin"}, {"PM_RAVLINS_PENDING_TASKS", "\ubcf4\ub958 \uc911\uc778 \uc791\uc5c5\uc774 \ud3ec\ud568\ub41c Ravlin"}, {"PM_FIX_UNIT_ERROR", "\uc7a5\uce58\ub97c \uc218\uc815\ud558\ub294 \uc911 \uc624\ub958 \ubc1c\uc0dd "}, {"PM_MOD_UNIT_EXISTS", "\ub2e4\uc74c \uc77c\ub828 \ubc88\ud638\ub97c \uac00\uc9c4 \uc218\uc815\ub41c \uc7a5\uce58\uac00 \uc774\ubbf8 \uc788\uc74c"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "\uc774\ub984"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "\uc744(\ub97c) \uac00\uc9c4 \uc218\uc815\ub41c \uc7a5\uce58\uac00 \uc774\ubbf8 \uc788\uc74c "}, {"PM_ADD_ERR_PRIVILEGES", "\uc624\ub958: \uc7a5\uce58\ub97c \ucd94\uac00\ud560 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PM_UNIT_EXISTS", "\ub2e4\uc74c \uc77c\ub828 \ubc88\ud638\ub97c \uac00\uc9c4 \uc7a5\uce58\uac00 \uc774\ubbf8 \uc788\uc74c"}, {"PM_UNIT_NAME_EXISTS_A", "\uc774\ub984"}, {"PM_UNIT_NAME_EXISTS_B", "\uc744(\ub97c) \uac00\uc9c4 \uc7a5\uce58\uac00 \ub3c4\uba54\uc778\uc5d0 \uc774\ubbf8 \uc788\uc74c "}, {"PM_ADD_UNIT_ERR", "SonicWall \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "\uc720\ud6a8\ud55c \uc77c\ub828 \ubc88\ud638\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624.\n\uc77c\ub828 \ubc88\ud638\ub294 "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "\uc790\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "\uc77c\ub828 \ubc88\ud638\ub294 16\uc9c4\uc218 \ubb38\uc790\ub9cc \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"PM_GET_PREFS_ERR", "\uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc744 \uac80\uc0c9\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "\ud074\ub77c\uc6b0\ub4dc \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc7a5\uce58 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\n\uc7a5\uce58\uc5d0 \ucd94\uac00\ud558\uae30 \uc804\uc5d0 MySonicWall.com\uc5d0\uc11c \ub2e4\uc74c \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ub77c\uc774\uc120\uc2a4\ub97c \ubc1b\uc73c\uc2ed\uc2dc\uc624. "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " \uc5d0\uc11c \uc774 \uc7a5\uce58\uc5d0 \ub300\ud55c \ub77c\uc774\uc120\uc2a4\ub97c \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\ub098\uc911\uc5d0 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " \uc5d0\uc11c \uc774 \uc7a5\uce58\uc5d0 \ub300\ud55c \ub77c\uc774\uc120\uc2a4\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 MySonicWall.com\uacfc \ud1b5\uc2e0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\ub098\uc911\uc5d0 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"PM_LICENSED", "\ub77c\uc774\uc120\uc2a4 \uc788\uc74c"}, {"PM_NOT_LICENSED", "\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c"}, {"PM_IS_MSSP", "MSSP \uc7a5\uce58"}, {"PM_SYSLOG_FORMAT", "Syslog \ud615\uc2dd"}, {"PM_STATUS_MSG_ONLY", "\uc0c1\ud0dc \uba54\uc2dc\uc9c0\ub9cc"}, {"PM_SYSLOG_IN_UTC", "\ub85c\uadf8(UTC)"}, {"PM_VIEWPOINT_MODE", "\ubd84\uc11d\uae30 \ubaa8\ub4dc\uac00 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub428"}, {"PM_NAME_RESOLUTION", "\uc774\ub984 \ud655\uc778 \ubaa8\ub4dc"}, {"PM_ACCESS_MODE", "\uc561\uc138\uc2a4 \ubaa8\ub4dc"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS \uc774\ud6c4 NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"VM_PATCH_DETECTED_MSG1", " \uc5d0\uc11c \uc0c8 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5c5\ub370\uc774\ud2b8\uac00 \uac80\uc0c9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"VM_PATCH_DETECTED_MSG2", "\uad00\ub9ac\uc790\uc5d0\uac8c \uc0c8 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5c5\ub370\uc774\ud2b8 \uc815\ubcf4\ub97c \uc804\uc790 \uba54\uc77c\ub85c \ubcf4\ub0b4\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. SMTP \ub610\ub294 \uad00\ub9ac\uc790 \uc804\uc790 \uba54\uc77c\uc774 \uad6c\uc131\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"VM_PATCH_DETECTED_MSG3", " \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5c5\ub370\uc774\ud2b8 \uc0ac\uc6a9 \uac00\ub2a5\n\n"}, {"VM_NEW", "\uc0c8\ub85c \ub9cc\ub4e4\uae30 "}, {"VM_PATCH_DETECTED_MSG4", "\ub9b4\ub9ac\uc2a4 \uc815\ubcf4 \ubc0f \ub2e4\uc6b4\ub85c\ub4dc \uc815\ubcf4\ub97c \ubcf4\ub824\uba74 <a href=https://www.mysonicwall.com>MySonicWall.com</a> \uacc4\uc815"}, {"VM_SCREEN", " \ud654\uba74\uc5d0 \ub85c\uadf8\uc778\ud558\uc2ed\uc2dc\uc624."}, {"VM_PATCH_DETECTED_MSG5", " \uad6c\uc131 \uc694\uc18c \ud328\uce58 \uc5c5\ub370\uc774\ud2b8\uac00 \ud655\uc778\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc0c8 \uad6c\uc131 \uc694\uc18c \uc5c5\ub370\uc774\ud2b8\uac00 \ubc1c\uacac\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \uc804\uc790 \uba54\uc77c\uc774 \uc804\uc1a1\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"VM_PATCH_DETECTED_MSG6", "\ud328\uce58 \uc5c5\ub370\uc774\ud2b8\ub97c \ub2e4\uc6b4\ub85c\ub4dc\ud558\uc9c0 \ubabb\ud568 "}, {"VM_FOR", " \ub300\uc0c1 "}, {"VM_ON", " \ub0a0\uc9dc "}, {"VM_PATCH_DETECTED_MSG7", " \uad6c\uc131 \uc694\uc18c \ud328\uce58 \ub2e4\uc6b4\ub85c\ub4dc\uac00 \uc911\ub2e8\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud328\uce58 \ud30c\uc77c\uc774 \uc774\ubbf8 \uc788\uc74c: "}, {"VM_PATCH_DETECTED_MSG8", " \uad6c\uc131 \uc694\uc18c \ud328\uce58\uac00 \ub2e4\uc6b4\ub85c\ub4dc\ub428: "}, {"VM_PATCH_DETECTED_MSG9", "\ud328\uce58 \ud30c\uc77c "}, {"VM_PATCH_DETECTED_MSG10", " \uc744(\ub97c) \ub514\uc2a4\ud06c\uc5d0 \uc791\uc131\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_UPDATE_SUCCESS", "\uc5c5\ub370\uc774\ud2b8\uac00 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SDM_UPDATE_FAILURE", "\uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_UPDATE_SPECIAL_FAILURE", "SA\ub97c \uc0ad\uc81c\ud558\ub294 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_UPDATE_INVALID", "\uc5c5\ub370\uc774\ud2b8 \uc694\uccad\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SDM_SCREEN_ID_INVALID", "\ud654\uba74 ID\uac00 \uc798\ubabb\ub428"}, {"SDM_READY", "\uc900\ube44"}, {"SDM_CGI_ERROR", "\ub2e4\uc74c\uc5d0 \ub300\ud55c CGI_NAME\uc744(\ub97c) \uac00\uc838\uc624\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_DEFAULT_ERROR", "\ub2e4\uc74c\uc5d0 \ub300\ud55c DEFAULT_VALUE\uc744(\ub97c) \uac00\uc838\uc624\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_INVALID_TARGET", "\uc624\ub958: \uc6d0\ubcf8 \uadf8\ub8f9\uc774\ub098 \ub300\uc0c1 \uadf8\ub8f9\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SDM_METADATA_ERROR", "\ub2e4\uc74c\uc5d0 \ub300\ud55c \uba54\ud0c0\ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_DB_ERROR", "SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_NOVPN_ERROR", "\uc774 \uc7a5\uce58\uc5d0 \ub300\ud574 VPN\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NO_TARGET_VPN_ERROR", "\ub300\uc0c1\uc5d0\uc11c VPN\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NOSAS_ERROR", "\uc774 \uc7a5\uce58\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub0a8\uc740 SA\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NO_TARGET_SAS_ERROR", "\ub300\uc0c1\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub0a8\uc740 SA\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NO_UNITS_ERROR", "\uc791\uc5c5\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"SDM_NO_3RDPARTYCERTS_ERROR", "\uc720\ud6a8\ud55c \ud0c0\uc0ac \ub85c\uceec/CA \uc778\uc99d\uc11c \uc870\ud569\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud574 VPN SA\ub97c \uac74\ub108\ub6f0\ub294 \uc911\uc785\ub2c8\ub2e4. "}, {"SDM_DHCP_ERROR", "\uc6d0\ubcf8 \uc7a5\uce58 \ubc0f \ub300\uc0c1 \uc7a5\uce58 \ub458 \ub2e4\uc5d0 \ub300\ud574 \ub3d9\uc801 \uc8fc\uc18c \uc9c0\uc815\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc73c\ubbc0\ub85c SA\ub97c \ub9cc\ub4e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. VPN SA \ub9cc\ub4e4\uae30\ub97c \uac74\ub108\ub6f0\uace0 \uc788\uc2b5\ub2c8\ub2e4. "}, {"SDM_NOAES_ERROR", "\uc774 \uc7a5\uce58\uc5d0 AES\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NO_TARGET_AES_ERROR", "\ub300\uc0c1\uc5d0 AES\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_DELETE_SUCCESS", "\uc0ad\uc81c\uac00 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"SDM_DELETE_FAILURE", "\uc0ad\uc81c\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_AGENTNAME_INVALID", "[<,\\,:,',@,\ub294 \uc798\ubabb\ub41c \ubb38\uc790\uc785\ub2c8\ub2e4.#,*,$] in Agent name."}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "\ud5a5\uc0c1\ub41c \uc0c1\ud638 \uc5f0\uacb0 VPNS SA\uc5d0 \ub300\ud574 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "\ub2e4\uc74c\uc5d0 \ub300\ud574 \uadf8\ub8f9 \uc5c5\ub370\uc774\ud2b8\uac00 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "\ud5a5\uc0c1\ub41c \uc0c1\ud638 \uc5f0\uacb0 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "\ud45c\uc900 \uc0c1\ud638 \uc5f0\uacb0 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "\ud5a5\uc0c1\ub41c \ube44 \uc0c1\ud638 \uc5f0\uacb0 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "\ud45c\uc900 \ube44 \uc0c1\ud638 \uc5f0\uacb0 VPN SA"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "\uc774 \uc7a5\uce58\uc758 \ud38c\uc6e8\uc5b4 \ubc84\uc804\uc5d0\uc11c \ud130\ub110 \uc778\ud130\ud398\uc774\uc2a4 \uc720\ud615\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \uc774 \uc7a5\uce58\uc5d0 \ub300\ud574 SA \ub9cc\ub4e4\uae30\ub97c \uac74\ub108\ub6f0\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "\ub2e4\uc74c \ub0a0\uc9dc\uc5d0 \uc2e4\ud589\ud558\ub3c4\ub85d \uc608\uc57d\ub41c \uc791\uc5c5"}, {"PASSWORD_CHANGED", "SonicWall GMS \uc554\ud638\uac00 \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"PASSWORD_NOT_CHANGED_A", "\uc9c0\uc815\ud55c \uc774\uc804 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4.<BR>"}, {"PASSWORD_NOT_CHANGED_B", " \uc554\ud638\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"PASSWORD_NOT_CHANGED", "\uc9c0\uc815\ud55c \uc774\uc804 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc554\ud638\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"LOGS_PASSWD_CHANGED", "\uc0ac\uc6a9\uc790 \ub85c\uadf8\uc778 \uc554\ud638\uac00 \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"LOGS_PASSWD_NOT_CHANGED", "\uc2dc\uc2a4\ud15c\uc5d0\uc11c \ub85c\uadf8\uc778 \uc554\ud638\ub97c \ubcc0\uacbd\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. "}, {"LOGS_ADDED_NEW_USER", "\uc0c8 \uc0ac\uc6a9\uc790\uac00 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ucd94\uac00\ub428: "}, {"LOGS_ADDED_NEW_USER_TYPE", "\uc0c8 \uc0ac\uc6a9\uc790 \uc720\ud615\uc774 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ucd94\uac00\ub428: "}, {"LOGS_DELETED_USER", "\uc0ac\uc6a9\uc790 \ubc0f \ud574\ub2f9 \uc815\ubcf4\uac00 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ad\uc81c\ub428: "}, {"LOGS_DELETED_GROUP", "\ub2e4\uc74c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9 \ubc0f \uc774 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 \ubcf4\uae30\uac00 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ad\uc81c\ub428: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ud2b9\uc131 \uac12("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ")\uc5d0\ub294 \uc601\uc22b\uc790\ub9cc \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"LOGS_ADD_CUSTOM_GROUP", "\ub2e4\uc74c\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9 \uc774\ub984/\uae30\ubcf8\uac12\uc774 \uc2dc\uc2a4\ud15c\uc5d0 \ucd94\uac00\ub418\uc5c8\uc74c: "}, {"LOGS_MOD_CUSTOM_GROUP", "\ub2e4\uc74c\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9 \uc774\ub984/\uae30\ubcf8\uac12\uc774 \uc218\uc815\ub418\uc5c8\uc74c: "}, {"LOGS_DEL_CUSTOM_GROUP", "\ub2e4\uc74c\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9\uc774 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc0ad\uc81c\ub418\uc5c8\uc74c: "}, {"READY", "\uc900\ube44"}, {"NAV_OF", " / "}, {"NAV_PREVIOUS", "\uc774\uc804"}, {"NAV_NEXT", "\ub2e4\uc74c"}, {"NAV_DISPLAYING", "\ud45c\uc2dc"}, {"NAV_FIREWALLS", "\ubc29\ud654\ubcbd"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "\uc774 \ud654\uba74\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ACT_WRONG_FILE_FORMAT", "\uc624\ub958: \uc798\ubabb\ub41c \ud30c\uc77c \ud615\uc2dd\uc774\ubbc0\ub85c \ucf54\ub4dc\ub97c \ucd94\uac00\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"AUTH_INVALID_PARAMS", "\uc798\ubabb\ub41c \ub9e4\uac1c \ubcc0\uc218\uc785\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"AUTH_AUTHENTICATE", "\uc778\uc99d"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "\ub85c\uadf8\uc778 \ub09c\uc218\uc758 \uc2dc\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"AUTH_LOGIN_TIMEOUT", "\ub85c\uadf8\uc778 \ud398\uc774\uc9c0\uc758 \uc2dc\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"AUTH_LOGIN_FAILURE", "\ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"AUTH_LOGIN_FAILURE_LOG", "\ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {"NO_DOMAIN_SPECIFIED", "\ub85c\uadf8\uc778\uc5d0 \ub300\ud574 \ub3c4\uba54\uc778 \uc774\ub984\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"SPECIFY_DOMAIN", "\ub85c\uadf8\uc778\uc5d0 \ub300\ud574 \ub3c4\uba54\uc778 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"INVALID_IP", "[KR]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "\uc798\ubabb\ub41c \ub3c4\uba54\uc778\uc785\ub2c8\ub2e4. \uc720\ud6a8\ud55c \ub3c4\uba54\uc778 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"INVALID_ALIAS_MSG", "\uc798\ubabb\ub41c \ubcc4\uce6d\uc785\ub2c8\ub2e4. \uc720\ud6a8\ud55c \ubcc4\uce6d\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"REMOTE_SUCCESSFUL_LOGIN", "\uc0ac\uc6a9\uc790\uac00 \uc2dc\uc2a4\ud15c\uc5d0 \ub85c\uadf8\uc778\ub428: "}, {"REMOTE_FAILED_LOGIN", "\uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \uc6d0\uaca9 \uc778\uc99d\uc774 \uc2e4\ud328\ud568: "}, {"XML_REMOTE_FAILED_LOGIN", "\uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 XML \uae30\ubc18 \uc6d0\uaca9 \uc778\uc99d\uc774 \uc2e4\ud328\ud568: "}, {"NEW_USER_ADDED", "\uc0c8 \uc0ac\uc6a9\uc790\uac00 \ucd94\uac00\ub428: "}, {"TO_USER_TYPE", "\uc0ac\uc6a9\uc790 \uc720\ud615: "}, {"CLICK_TO_TRY_AGAIN", "\uc5ec\uae30\ub97c \ud074\ub9ad\ud558\uc5ec \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"USER_LOCKED_OUT", "\uc0ac\uc6a9\uc790\uac00 \uc7a0\uacbc\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"USER_DISABLED", "\uc0ac\uc6a9\uc790 \uacc4\uc815\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "\uc6d0\uaca9 \uc778\uc99d\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. GMS \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "\uc6d0\uaca9 \uc778\uc99d\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. GMS \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uac70\ub098 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_AUTH_FAILED", "\uc6d0\uaca9 \uc778\uc99d\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {"LDAP_USER_NOT_FOUND", "\ub514\ub809\ud130\ub9ac\uc5d0\uc11c \uc0ac\uc6a9\uc790\ub97c \ucc3e\uc744 \uc218 \uc5c6\uac70\ub098 \uc0ac\uc6a9\uc790\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LDAP_INVALID_CREDENTIALS", "\uc6d0\uaca9 \uc778\uc99d \uc2e4\ud328: \uc798\ubabb\ub41c \uc790\uaca9 \uc99d\uba85"}, {"LDAP_COMMUNICATION_ERROR", "\ub514\ub809\ud130\ub9ac\ub098 \uba85\uba85 \uc11c\ube44\uc2a4\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LDAP_ANONYMOUS_BIND_SET", "AnonymousBind\uac00 \ub3c4\uba54\uc778\uc5d0 \ub300\ud574 \ud5c8\uc6a9\ub428\uc73c\ub85c \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "\uc6d0\uaca9 \uc11c\ubc84\uc5d0\uc11c \uc775\uba85 \ubc14\uc778\ub529\uc744 \ud5c8\uc6a9\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_INVALID_GROUPS_SPECIFIED", "\uc798\ubabb\ub41c \ub514\ub809\ud130\ub9ac \uadf8\ub8f9\uc774 \uc9c0\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. GMS \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_INVALID_GROUP_MEMBER", "\uc0ac\uc6a9\uc790\uac00 \ud5c8\uc6a9\ub418\ub294 \ub514\ub809\ud130\ub9ac \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc774 \uc544\ub2d9\ub2c8\ub2e4."}, {"RADIUS_UNKNOWN_HOST", "\uc54c \uc218 \uc5c6\ub294 RADIUS \uc11c\ubc84 \ud638\uc2a4\ud2b8\uc785\ub2c8\ub2e4."}, {"RADIUS_CONNECTION_TIMEOUT", "\uc6d0\uaca9 RADIUS \uc11c\ubc84\ub85c\uc758 \uc5f0\uacb0\uc774 \uc2dc\uac04 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"RADIUS_FAILED_LOGIN", "\uc778\uc99d\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. \uc798\ubabb\ub41c \uc790\uaca9 \uc99d\uba85\uc785\ub2c8\ub2e4."}, {"RADIUS_EXCEPTION", "RADIUS \uc608\uc678\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"RADIUS_INVALID_GROUP_MEMBER", "\uc0ac\uc6a9\uc790\uac00 \ud5c8\uc6a9\ub418\ub294 RADIUS \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc774 \uc544\ub2d9\ub2c8\ub2e4."}, {"PWD_CHANGE_SCREEN", "\uc554\ud638\ub97c \ubcc0\uacbd\ud569\ub2c8\ub2e4."}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "\uc554\ud638 \ubcc0\uacbd \uae38\uc774\uac00 \ud5c8\uc6a9\ub41c \ubc94\uc704(7\uc790 - 15\uc790)\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"PWD_VALIDATION_FAILURE", "\uc554\ud638 \ubcc0\uacbd \uae38\uc774\ub294 15\uc790\ub97c \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PWD_EXPIRATION", "\uc554\ud638\ub294 {0}\uc77c\ub9c8\ub2e4 \ubcc0\uacbd\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"PWD_CHANGE_NEXT_LOGIN", "\uad00\ub9ac\uc790\uac00 \uac15\uc81c\ub85c \uc548\ud638\ub97c \ubcc0\uacbd\ud588\uc2b5\ub2c8\ub2e4."}, {"PASSWORD_EXISTS", "[KR]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[KR]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[KR]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "\ub77c\uc774\uc120\uc2a4 \ud30c\uc77c\uc744 \uc77d\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CUI_UPGRADE_SUCCESS", "\uc5c5\uadf8\ub808\uc774\ub4dc \uc131\uacf5"}, {"CUI_UPGRADE_FAIL", "\uc5c5\uadf8\ub808\uc774\ub4dc \uc2e4\ud328: "}, {"CUI_SYNCH_SUCCESS", "\ub3d9\uae30\ud654 \uc131\uacf5"}, {"CUI_SYNCH_FAIL", "\ub3d9\uae30\ud654 \uc2e4\ud328: "}, {"CUI_PRORATE_SUCCESS", "ProRate \uc694\uccad \uc131\uacf5"}, {"CUI_PRORATE_FAIL", "ProRate \uc694\uccad \uc2e4\ud328: "}, {"CUI_CHANGE_PW_SUCCESS", "\uc131\uacf5.  MySonicWall.com\uc5d0\uc11c \uc554\ud638\uac00 \uc218\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CUI_CHANGE_PW_FAIL", "\uc2e4\ud328.  MySonicWall.com\uc5d0\uc11c \uc554\ud638\uac00 \uc218\ub77d\ub418\uc9c0 \uc54a\uc74c: "}, {"CUI_EMAIL_SUCCESS", "TechSupport \uc591\uc2dd\uc774 SonicWall GMS \uc9c0\uc6d0 \uc13c\ud130\ub85c \uc804\uc790 \uba54\uc77c\uc744 \ud1b5\ud574 \uc804\uc1a1\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CUI_EMAIL_FAIL", "TechSupport \ubcf4\uace0\uc11c\ub97c SonicWall GMS \uc9c0\uc6d0 \uc13c\ud130\ub85c \ubcf4\ub0b4\ub294 \uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.<br>\ub098\uc911\uc5d0 \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"CUI_SESSION_TERMINATED", " \uc138\uc158\uc774 \uc885\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CUI_SESSIONS_TERMINATED", " \uc138\uc158\uc774 \uc885\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CUI_NO_AGENTS", "\uc5d0\uc774\uc804\ud2b8\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CUI_FILTER_ADDED", "\uc0c8 \ud544\ud130\uac00 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"DIAG_DIAG_REQUEST_A", "\uc9c4\ub2e8 \uc694\uccad(\ub9cc\ub4e4\uc5b4\uc9c4 \uc704\uce58: "}, {"DIAG_DIAG_REQUEST_B", " )\uc774 \uc81c\ucd9c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DIAG_DELETE_SUCCESS", "\uc0ad\uc81c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DIAG_EMAIL_SUCCESS", "\uc804\uc790 \uba54\uc77c\uc774 \uc804\uc1a1\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DIAG_UNIT_UNKNOWN", "'\uc7a5\uce58 \uc774\ub984\uc744 \uc54c \uc218 \uc5c6\uc74c'"}, {"DIAG_UNIT", "'\uc7a5\uce58 "}, {"VPN_DUPLICATE_UFI", "\uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4. \uace0\uc720 \ubc29\ud654\ubcbd \uc2dd\ubcc4\uc790\uac00 SonicWall GMS\uc5d0\uc11c \uace0\uc720\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"NO_LOGS_MESSAGE", "\ub85c\uadf8\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "\uc81c\uacf5\ub41c \uac80\uc0c9 \uc870\uac74\uc5d0 \ud574\ub2f9\ud558\ub294 \ub85c\uadf8\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LOG_START_SEARCH", "\uc0c8 \uac80\uc0c9 \uc2dc\uc791"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "{0,number,integer} \ub808\ucf54\ub4dc\uc5d0 \ub300\ud55c \ucffc\ub9ac\uac00 \ub108\ubb34 \ud07d\ub2c8\ub2e4. \uac80\uc0c9 \uc870\uac74\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624."}, {"SQL_EXCEPTION_ERROR_MESSAGE", "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\uacb0\uc5d0 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uc0ac\uc6a9 \uac00\ub2a5\ud55c\uc9c0 \ud655\uc778\ud558\uac70\ub098 \uac80\uc0c9 \uc870\uac74\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624."}, {"UNKNOWN_EXCEPTION_MESSAGE", "\uac80\uc0c9\uc744 \uc2e4\ud589\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uc0ac\uc6a9 \uac00\ub2a5\ud55c\uc9c0 \ud655\uc778\ud558\uac70\ub098 \uac80\uc0c9 \uc870\uac74\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624."}, {"LOG_NEXT", "\ub2e4\uc74c"}, {"LOG_PREVIOUS", "\uc774\uc804"}, {"LOG_UPDATE_SUCCESS", "\uc5c5\ub370\uc774\ud2b8\uac00 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LOG_OF", " / "}, {"LOG_OF", " / "}, {"PREFS_SYNCHRONIZE_STARTED", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc640 \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud558\ub294 \uc791\uc5c5\uc774 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud558\uc9c0 \ubabb\ud588\uc73c\ubbc0\ub85c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub85c\uadf8\uc778\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"MON_NO_PRIVILEGES", "\uc774 \ud654\uba74\uc5d0 \ub300\ud55c \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"MON_SYNC_TASK_CREATED", "\ub3d9\uae30\ud654 \uc791\uc5c5\uc774 \ub9cc\ub4e4\uc5b4\uc84c\uc2b5\ub2c8\ub2e4."}, {"MON_SYNC_TASK_FAIL", "\ub3d9\uae30\ud654 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"MON_RENEGOTIATE_TASK_CREATED", "\uc7ac\ud611\uc0c1 \uc791\uc5c5\uc774 \ub9cc\ub4e4\uc5b4\uc84c\uc2b5\ub2c8\ub2e4."}, {"MON_RENEGOTIATE_FAILED", "\uc7ac\ud611\uc0c1 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"MON_NO_SELECTED", "\uc7ac\ud611\uc0c1\ud560 \ud130\ub110\uc744 \uc120\ud0dd\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"MON_REFRESH_CREATED", "\ud1b5\uacc4 \uc0c8\ub85c \uace0\uce68 \uc791\uc5c5\uc774 \ub9cc\ub4e4\uc5b4\uc84c\uc2b5\ub2c8\ub2e4."}, {"MON_REFRESH_FAIL", "\ud130\ub110 \ud1b5\uacc4\uc5d0 \ub300\ud574 \uc0c8\ub85c \uace0\uce68 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"MON_NO_SELECTED_REFRESH", "\ud1b5\uacc4\ub97c \uc0c8\ub85c \uace0\uce60 \ud130\ub110\uc744 \uc120\ud0dd\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"MON_UPDATE_SUCCESS", "\uc5c5\ub370\uc774\ud2b8\uac00 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"MON_UPDATE_FAIL", "\uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"MON_NO_MONITORING", "\ud130\ub110\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"MON_NAME", "\uc774\ub984"}, {"MON_GATEWAY", "\uac8c\uc774\ud2b8\uc6e8\uc774"}, {"MON_LAST_UPDATED", "\ub9c8\uc9c0\ub9c9 \uc5c5\ub370\uc774\ud2b8"}, {"MON_DEST_ADDR_RANGE", "\ub300\uc0c1 \uc8fc\uc18c \ubc94\uc704"}, {"MON_LOCAL_ADDR_RANGE", "\ub85c\uceec \uc8fc\uc18c \ubc94\uc704"}, {"MON_NO_TUNNELS_FOUND", "\ud130\ub110\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"MON_TITLE", "VPN \ud130\ub110 \ud1b5\uacc4"}, {"MON_DESCRIPTION", "\uc124\uba85"}, {"MON_VALUE", "\uac12"}, {"MON_CREATE_TIME", "\ub9cc\ub4e0 \uc2dc\uac04"}, {"MON_VALID_UNTIL", "\ud130\ub110 \uc720\ud6a8 \uae30\uac04:"}, {"MON_PACKETS_IN", "\ud328\ud0b7 \uc785\ub825"}, {"MON_PACKETS_OUT", "\ud328\ud0b7 \ucd9c\ub825"}, {"MON_BYTES_IN", "\ubc14\uc774\ud2b8 \uc785\ub825"}, {"MON_BYTES_OUT", "\ubc14\uc774\ud2b8 \ucd9c\ub825"}, {"MON_FRAGMENTS_IN", "\uc870\uac01 \ud328\ud0b7 \uc785\ub825"}, {"MON_FRAGMENTS_OUT", "\uc870\uac01 \ud328\ud0b7 \ucd9c\ub825"}, {"MON_TUNNEL_ACTIVE", "\ud130\ub110\uc774 \ud65c\uc131 \uc0c1\ud0dc\uc785\ub2c8\ub2e4."}, {"REG_NO_PERMISSION", "\uc774 \ud654\uba74\uc5d0 \ub300\ud55c \uc5c5\ub370\uc774\ud2b8 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"REG_ERROR_RETRIEVING_COUNT", "\ub4f1\ub85d\ub41c/\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc740 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc218\ub97c \uac80\uc0c9\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"REG_CURRENT", "\ud604\uc7ac"}, {"REG_EXPIRED", "\ub9cc\ub8cc\ub428"}, {"REG_NO_LICENSE", "\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "\ud38c\uc6e8\uc5b4 \uc774\ubbf8\uc9c0\ub97c \uc5c5\ub85c\ub4dc\ud560 \uc218 \uc5c6\uc74c"}, {"TASKS_SUCCESSFUL_DELETION", "\uc791\uc5c5\uc774 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ad\uc81c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASKS_ERROR_DELETION", "\uc624\ub958: \uc791\uc5c5\uc744 \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TASKS_EXECUTION_SET", "\uc791\uc5c5\uc774 \uc989\uc2dc \uc2e4\ud589\ub418\ub3c4\ub85d \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "\uc791\uc5c5\uc744 \ubb34\ub2e8\uc73c\ub85c \uc2e4\ud589\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASKS_ERROR_EXECUTION", "\uc624\ub958: \uc2e4\ud589\uc744 \uc704\ud574 \uc791\uc5c5\uc744 \uc608\uc57d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TASK_DELETED_LOG_MESSAGE", "\uc0ac\uc6a9\uc790\uac00 \ub2e4\uc74c \uc791\uc5c5\uc744 \uc0ad\uc81c\ud588\uc2b5\ub2c8\ub2e4. "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "\uc791\uc5c5\uc744 \ubb34\ub2e8\uc73c\ub85c \uc0ad\uc81c\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {"NO_TASKS_MESSAGE", "\uc791\uc5c5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "\uc81c\uacf5\ub41c \uac80\uc0c9 \uc870\uac74\uc5d0 \ud574\ub2f9\ud558\ub294 \uc791\uc5c5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TASKS_RESCHEDULED", "\uc791\uc5c5\uc774 \ub2e4\uc2dc \uc608\uc57d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "\uc791\uc5c5\uc744 \ubb34\ub2e8\uc73c\ub85c \ub2e4\uc2dc \uc608\uc57d\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASKS_ERROR_RESCHEDULE", "\uc624\ub958: \uc791\uc5c5\uc744 \ub2e4\uc2dc \uc608\uc57d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"IMMEDIATE_STRING", "\uc989\uc2dc"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "\ub85c\uceec"}, {"AGENT_STRING", "\uc5d0\uc774\uc804\ud2b8"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "\uc0ac\uc6a9\uc790\uac00 \ub2e4\uc74c \uc791\uc5c5\uc744 \ub2e4\uc2dc \uc608\uc57d\ud588\uc2b5\ub2c8\ub2e4. "}, {"FROM_LOG_MESSAGE", " \uc2dc\uc791 "}, {"TO_LOG_MESSAGE", " \uc885\ub8cc "}, {"IMMEDIATE_LOG_MESSAGE", "\uc989\uc2dc \uc2e4\ud589"}, {"REG_PASSWORD_SUCCESS", "\uc131\uacf5.  MySonicWall.com\uc5d0\uc11c \uc554\ud638\uac00 \uc218\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uacc4\uc18d\ud558\ub824\uba74 [\uc5c5\ub370\uc774\ud2b8]\ub97c \ub204\ub974\uc2ed\uc2dc\uc624."}, {"REG_PASSWORD_FAIL", "\uc2e4\ud328.  MySonicWall.com\uc5d0\uc11c \uc554\ud638\uac00 \uc218\ub77d\ub418\uc9c0 \uc54a\uc74c: "}, {"LOGIN_MESSAGE", "\ub85c\uadf8\uc778\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_DEFAULT_MESSAGE", "\uae30\ubcf8 \uc0ac\uc6a9\uc790 'admin' \ubc0f \uc554\ud638 'password'\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\uc778\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "\uae30\ubcf8 \uc0ac\uc6a9\uc790 'admin' \ubc0f \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc640 \ub3d9\uc77c\ud55c \uc554\ud638\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_DEMO_MESSAGE", "\uc0ac\uc6a9\uc790 'demo' \ubc0f \uc554\ud638:'password'\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\uc778\ud558\uc2ed\uc2dc\uc624."}, {"SETTINGSVPS_CHANGED", "\ubd84\uc11d\uae30 \uc124\uc815\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SETTINGS_CHANGED", "\uc124\uc815\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LOGS_USER_FORCEDOUT", " \uc5d0\uc11c \ub2e4\uc74c \uc0ac\uc6a9\uc790\ub97c \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uac15\uc81c \ub85c\uadf8\uc544\uc6c3\ud568: "}, {"SLAVE_STATE_CHANGED_MESSAGE", "\ud574\ub2f9 \uc0c1\ud0dc\ub97c \ubcc0\uacbd\ud558\ub3c4\ub85d \uc5d0\uc774\uc804\ud2b8\uac00 \uad6c\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "\uc2dc\ub3c4 \uc2e4\ud328: \uc5d0\uc774\uc804\ud2b8 \uc0c1\ud0dc\ub97c \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \ub9e4\uac1c \ubcc0\uc218\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \ub9e4\uac1c \ubcc0\uc218\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SCHEDULER_UP_STATE", "\uc704"}, {"SCHEDULER_DOWN_STATE", "\uc544\ub798"}, {"SCHEDULER_UNDETERMINED_STATE", "\uacb0\uc815\ub418\uc9c0 \uc54a\uc74c"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \uc18d\uc131\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SMTPSERVER_INVALID", "\uc798\ubabb\ub41c SMTP \uc11c\ubc84 \uc8fc\uc18c\uc785\ub2c8\ub2e4."}, {"APPLIANCE_MANAGE_FAILED", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uad00\ub9ac \uae30\ubcf8 \uc124\uc815\uc744 \ubcc0\uacbd\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"EMPTY_SMTP_PWD", "SMTP \uc554\ud638\ub294 \ube44\uc6cc \ub458 \uc218 \uc5c6\uc74c"}, {"TREE_AGENT_STARTED", "\uc5d0\uc774\uc804\ud2b8\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud558\ub824\uba74 \uae30\ubcf8 \uc5d0\uc774\uc804\ud2b8\uac00 \uc2dc\uc791\ub41c \uc0c1\ud0dc\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"TREE_STANDBY_STARTED", "\uc5d0\uc774\uc804\ud2b8\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud558\ub824\uba74 \ub300\uae30 \uc5d0\uc774\uc804\ud2b8\uac00 \uc2dc\uc791\ub41c \uc0c1\ud0dc\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"TREE_LICENSE_EXCEEDED", "\uad00\ub9ac \uc911\uc778 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub354 \uc774\uc0c1 \ucd94\uac00\ud560 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TREE_IP_EMPTY", "IP\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc720\ud6a8\ud55c IP \uc8fc\uc18c\ub97c \uc81c\uacf5\ud558\uc2ed\uc2dc\uc624."}, {"TREE_AUTH_FAIL", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc778\uc99d\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. \uc124\uc815\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"TREE_NO_RESPONSE", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc124\uc815\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"TREE_FIREWALL_NOT_LICENSED", "\ubd84\uc11d\uae30\uc5d0 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TREE_FIREWALL_STATE_ERROR", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc0c1\ud0dc \uc815\ubcf4\ub97c \uac80\uc0c9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4.\n\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ud38c\uc6e8\uc5b4\ub97c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"TREE_MODEL_FAIL", "\ubaa8\ub378 \uc815\ubcf4\ub97c \uac80\uc0c9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"TREE_FIRMWARE_VERSION_FAIL", "\ud38c\uc6e8\uc5b4 \ubc84\uc804\uc744 \uac80\uc0c9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"TREE_UNMATCHED_SERIAL", "\uc77c\ub828 \ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"TREE_TIMEZONE_FAIL", "\ud45c\uc900 \uc2dc\uac04\ub300\ub97c \uac80\uc0c9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"TREE_UTC_FAIL", "\ub85c\uadf8 \uba54\uc2dc\uc9c0\uac00 UTC \ud615\uc2dd\uc774 \uc544\ub2d9\ub2c8\ub2e4. \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ud615\uc2dd\uc744 UTC\ub85c \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc0dd\uc131\ub418\ub294 \ubcf4\uace0\uc11c\uc5d0 \uc798\ubabb\ub41c \uc2dc\uac04\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4."}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "[\ub85c\uadf8] > [\ubdf0\ud3ec\uc778\ud2b8] \ud654\uba74\uc5d0\uc11c [Enable ViewPoint Settings(\ubdf0\ud3ec\uc778\ud2b8 \uc124\uc815 \uc0ac\uc6a9)] \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \uc774 \uc124\uc815\uc73c\ub85c \ub2e4\uc74c \ub0b4\uc6a9\uc774 \ubcc0\uacbd\ub429\ub2c8\ub2e4.\n\t1. Syslog\uac00 UTC\ub85c \uc804\uc1a1\ub429\ub2c8\ub2e4.\n\t2. [Syslog \uc774\ubca4\ud2b8 \uc911\ubcf5 \ud544\ud130(\ucd08)]\uac00 0\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4.\n\t3. [Syslog \ud615\uc2dd]\uc774 [\uae30\ubcf8\uac12]\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4."}, {"TREE_NO_SCHEDULER", "\uc9c0\uc815\ub41c IP \uc8fc\uc18c\uc5d0 \uc2a4\ucf00\uc904\ub7ec\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"TREE_GET_PREFS_ERR", "\uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc744 \uac80\uc0c9\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"TREE_FIREWALL_NOT_REGISTERED", "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub294 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.  \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ubd84\uc11d\uae30\uc5d0 \ucd94\uac00\ud558\uae30 \uc804\uc5d0 MySonicWall.com\uc744 \ubc29\ubb38\ud558\uace0 \ud574\ub2f9 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub4f1\ub85d\ud558\uc2ed\uc2dc\uc624."}, {"TREE_BACKEND_COMM_FAILURE", "\ubd84\uc11d\uae30\uc5d0\uc11c \ub77c\uc774\uc120\uc2a4\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 MySonicWall.com\uacfc \ud1b5\uc2e0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ubd84\uc11d\uae30 \uc11c\ubc84\uac00 MySonicWall.com\uacfc \ud1b5\uc2e0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. "}, {"SU_DB_SIZE_EMAILBODY1", "\ud604\uc7ac \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.\n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\n\ucc38\uace0: \ucd5c\ub300 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30 \uc81c\ud55c\uc740 2GB\uc785\ub2c8\ub2e4.\n\n \n\ub2e4\uc74c \uad6c\uc131 \ubcc0\uacbd \ub0b4\uc6a9\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0ac\uc6a9\uc758 \uc804\uccb4 \ud06c\uae30\uc5d0 \uc601\ud5a5\uc744 \uc90d\ub2c8\ub2e4.\n\t[Console Panel(\ucf58\uc194 \ud328\ub110)]->[\ubcf4\uace0\uc11c]->[\uc124\uc815] \ud654\uba74\uc5d0\uc11c [Days To Store Raw Data(\uc6d0\uc2dc \ub370\uc774\ud130 \uc800\uc7a5 \uc77c\uc218)]\uc5d0 \ub300\ud55c \uc77c\uc218 \uc124\uc815\uc744 \uc904\uc785\ub2c8\ub2e4.\n\t[Console Panel(\ucf58\uc194 \ud328\ub110)]->[\ubcf4\uace0\uc11c]->[Summarizer(\uc694\uc57d \uc791\uc131\uae30)] \ud654\uba74\uc5d0\uc11c [Days To Store Summarized Data(\uc694\uc57d \ub370\uc774\ud130 \uc800\uc7a5 \uc77c\uc218)] \uc124\uc815\uc5d0 \ub300\ud55c \uc77c\uc218\ub098 \uc22b\uc790\ub97c \uc904\uc785\ub2c8\ub2e4."}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\n\ucc38\uace0: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "\ucd5c\ub300 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30 \uc81c\ud55c\uc740 2GB\uc785\ub2c8\ub2e4.\n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\n\ub2e4\uc74c \uad6c\uc131 \ubcc0\uacbd \ub0b4\uc6a9\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0ac\uc6a9\uc758 \uc804\uccb4 \ud06c\uae30\uc5d0 \uc601\ud5a5\uc744 \uc90d\ub2c8\ub2e4.\n\t[Console Panel(\ucf58\uc194 \ud328\ub110)]->[\ubcf4\uace0\uc11c]->[\uc124\uc815] \ud654\uba74\uc5d0\uc11c [Days To Store Raw Data(\uc6d0\uc2dc \ub370\uc774\ud130 \uc800\uc7a5 \uc77c\uc218)]\uc5d0 \ub300\ud55c \uc77c\uc218 \uc124\uc815\uc744 \uc904\uc785\ub2c8\ub2e4.\n\t[Console Panel(\ucf58\uc194 \ud328\ub110)]->[\ubcf4\uace0\uc11c]->[Summarizer(\uc694\uc57d \uc791\uc131\uae30)] \ud654\uba74\uc5d0\uc11c [Days To Store Summarized Data(\uc694\uc57d \ub370\uc774\ud130 \uc800\uc7a5 \uc77c\uc218)] \uc124\uc815\uc5d0 \ub300\ud55c \uc77c\uc218\ub098 \uc22b\uc790\ub97c \uc904\uc785\ub2c8\ub2e4."}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "\uacbd\uace0:\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "\uc720\uc9c0 \uad00\ub9ac \ubc31\uc5c5 \uacc4\ud68d\uc5d0\uc11c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc124\uc815\ud558\uc9c0 \uc54a\uc558\ub294\uc9c0, \uae30\uc874 \uacc4\ud68d\uc5d0\uc11c \ub85c\uadf8\ub97c \uc9c0\uc6b0\uc9c0 \ubabb\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\n\uc720\uc9c0 \uad00\ub9ac \uacc4\ud68d\uc5d0\uc11c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc124\uc815\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ud2b8\ub79c\uc7ad\uc158 \ub85c\uadf8\uac00 \uacc4\uc18d\ud574\uc11c \ud655\uc7a5\ub418\uace0 \uc804\uccb4 \ud558\ub4dc \ub514\uc2a4\ud06c\ub97c \ucc44\uc6b0\uac8c \ub429\ub2c8\ub2e4.\n\uadf8\ub807\uac8c \ub418\uba74 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc0f GMS \uc2dc\uc2a4\ud15c\uc774 \uc791\ub3d9\ud558\uc9c0 \uc54a\uac8c \ub429\ub2c8\ub2e4. \ub2e4\uc74c\uc73c\ub85c, \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \ucda9\ub3cc\ud560 \uacbd\uc6b0\n\ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc54c\ub824\uc9c4 \ub9c8\uc9c0\ub9c9 \ubc31\uc5c5\uc73c\ub85c \ubcf5\uc6d0\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4."}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall \ubd84\uc11d\uae30: \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0c1\ud0dc \ud655\uc778"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "\ub2e4\uc74c \uc77c\ub828 \ubc88\ud638\ub97c \ud3ec\ud568\ud55c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 \ub77c\uc774\uc120\uc2a4 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc704\ud55c \uc7a5\uce58 \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4 "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", ". \ub85c\uadf8\uc778\uc5d0 \ud544\uc694\ud55c \uc124\uc815\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \ub85c\uceec\ub85c \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. [Modify Unit(\uc7a5\uce58 \uc218\uc815)]\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubd84\uc11d\uae30\uc5d0 \ubcc0\uacbd \ub0b4\uc6a9 \ubc18\uc601", "\ubd84\uc11d\uae30\uc5d0\uc11c\uc758 \ub77c\uc774\uc120\uc2a4 \uc720\ud6a8\uc131 \uac80\uc0ac"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "\ubd84\uc11d\uae30\uc5d0\uc11c\uc758 \ub77c\uc774\uc120\uc2a4 \uc720\ud6a8\uc131 \uac80\uc0ac"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "\ub77c\uc774\uc120\uc2a4 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc704\ud55c "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc73c\uba70 \uc720\uc608 \uae30\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub85c\uadf8\uc778\uc5d0 \ud544\uc694\ud55c \uc124\uc815\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \ub85c\uceec\ub85c \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. [Modify Unit(\uc7a5\uce58 \uc218\uc815)]\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubd84\uc11d\uae30\uc5d0 \ubcc0\uacbd \ub0b4\uc6a9 \ubc18\uc601"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "\ubd84\uc11d\uae30 \ub77c\uc774\uc120\uc2a4\uac00 \ub9cc\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4!"}, {"SU_LIC_EXPIRED_BODY1", "\ubd84\uc11d\uae30\uc5d0 \ub300\ud574 "}, {"SU_LIC_EXPIRED_BODY2", " \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc124\uc815\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"SU_LIC_EXPIRED_SUBJECT", "\ubd84\uc11d\uae30 \ub77c\uc774\uc120\uc2a4\uac00 \ub9cc\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4!"}, {"LOGVIEW_WRONG_START_DT", "\uc2dc\uc791 \ub0a0\uc9dc \ud615\uc2dd\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub0a0\uc9dc\ub294 mm/dd/yyyy \ud615\uc2dd\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"LOGVIEW_WRONG_END_DT", "\uc885\ub8cc \ub0a0\uc9dc \ud615\uc2dd\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub0a0\uc9dc\ub294 mm/dd/yyyy \ud615\uc2dd\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"LOGVIEW_ENDDT_LESS_STARTDT", "\uc885\ub8cc \ub0a0\uc9dc\uac00 \uc2dc\uc791 \ub0a0\uc9dc\ubcf4\ub2e4 \uc774\uc804\uc785\ub2c8\ub2e4. \uc62c\ubc14\ub978 \uc2dc\uc791 \ub0a0\uc9dc\uc640 \uc885\ub8cc \ub0a0\uc9dc\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"LOGVIEW_MSGS_PERSCRN", "\ud654\uba74\ub2f9 \uba54\uc2dc\uc9c0 \uc218"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "{0,number,integer}\uac1c\uc758 \ub85c\uadf8 \ud56d\ubaa9\uc744 \ub0b4\ubcf4\ub0b4\ub824\uace0 \ud569\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c? \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 \uc774 \ub300\ud654 \uc0c1\uc790\ub97c \ucde8\uc18c\ud558\uace0 \uac80\uc0c9 \uc870\uac74\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624."}, {"LOGVIEW_GOTO_MSG", "\uba54\uc2dc\uc9c0 \ubc88\ud638\ub85c \uc774\ub3d9"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "\ud654\uba74\ub2f9 \uba54\uc2dc\uc9c0 \uc218 \ud45c\uc2dc:"}, {"LOGVIEW_RANGE", "(\ubc94\uc704: 10-100)"}, {"LOGVIEW_COL_DT", "\ub0a0\uc9dc"}, {"LOGVIEW_COL_MSG", "\uba54\uc2dc\uc9c0"}, {"LOGVIEW_COL_SEV", "\uc2ec\uac01\ub3c4"}, {"LOGVIEW_COL_USER", "GMS \uc0ac\uc6a9\uc790"}, {"LOGVIEW_COL_CO", "\uc21c\uc11c \ubcc0\uacbd"}, {"LOGVIEW_COL_IP", "\uc0ac\uc6a9\uc790 IP"}, {"LOGVIEW_SEARCH_RESULTS", "\uac80\uc0c9 \uacb0\uacfc"}, {"LOGVIEW_SEARCH_CRITERIA", "\uac80\uc0c9 \uc870\uac74"}, {"LOGVIEW_EXPORT_LOGS", "\ub85c\uadf8 \ub0b4\ubcf4\ub0b4\uae30"}, {"LOGVIEW_CLEAR_LOGS", "\uac80\uc0c9 \uc9c0\uc6b0\uae30"}, {"LOGVIEW_SEARCH_LOGS", "\uac80\uc0c9 \uc2dc\uc791"}, {"LOGVIEW_MATCH_CASE", "\ub300/\uc18c\ubb38\uc790 \uad6c\ubd84"}, {"LOGVIEW_EXACT_PHRASE", "\uc815\ud655\ud558\uac8c \uc77c\uce58\ud558\ub294 \uad6c"}, {"LOGVIEW_ANY_WORD", "\ub2e8\uc5b4 \ub2e8\uc704\ub85c \ucc3e\uae30(OR)"}, {"LOGVIEW_ALL_WORDS", "\ub2e8\uc5b4 \ub2e8\uc704\ub85c \ucc3e\uae30(AND)"}, {"LOGVIEW_MSG", "\uba54\uc2dc\uc9c0 \ub0b4\uc6a9:"}, {"LOGVIEW_CO", "\uc21c\uc11c \ubcc0\uacbd:"}, {"LOGVIEW_TIME", "\ub85c\uadf8 \uc2dc\uac04 \uc120\ud0dd: \uc2dc\uc791:"}, {"LOGVIEW_TIME_TO", "\uc885\ub8cc: "}, {"LOGVIEW_NODE_NAME", "SonicWall \ub178\ub4dc:"}, {"LOGVIEW_USER", "\uc0ac\uc6a9\uc790: "}, {"LOGVIEW_SEV", "\uc2ec\uac01\ub3c4: "}, {"LOGVIEW_CALENDAR", "\uce98\ub9b0\ub354"}, {"LOGVIEW_ALL", "\ubaa8\ub450(\uacbd\uace0 \ubc0f Info)"}, {"LOGVIEW_ALERT_WARNING", "\uacbd\uace0"}, {"LOGVIEW_ALERT", "\uacbd\uace0"}, {"LOGVIEW_STR_FORMAT", "\uac80\uc0c9 \ubb38\uc790\uc5f4 \ud615\uc2dd\uc740 user@domain\uc785\ub2c8\ub2e4.<br>\uc0ac\uc6a9\uc790\ub9cc \uac80\uc0c9\ud558\ub824\uba74 \uc0ac\uc6a9\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624.<br>\ub3c4\uba54\uc778\ub9cc \uac80\uc0c9\ud558\ub824\uba74 @\ub3c4\uba54\uc778\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624.<br><i>\ucc38\uace0: \uc0ac\uc6a9\uc790 \uac12\uc5d0 @ \ubb38\uc790\uac00 \ud3ec\ud568\ub41c \uacbd\uc6b0 \ub2e4\ub978 @\ub85c \uac80\uc0c9 \ubb38\uc790\uc5f4\uc744 \uc885\ub8cc\ud558\uc2ed\uc2dc\uc624.</i>"}, {"HELPABOUT_VERSION", "\ubc84\uc804:"}, {"HELPABOUT_LIC", "\ub77c\uc774\uc120\uc2a4\uac00 \ubd80\uc5ec\ub41c \uc0ac\uc6a9\uc790:"}, {"HELPABOUT_SN", "\uc77c\ub828 \ubc88\ud638:"}, {"HELPABOUT_DBDRIVER", "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub4dc\ub77c\uc774\ubc84:"}, {"HELPABOUT_DBVERSION", "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc84\uc804:"}, {"HELPABOUT_REPORT_DBVERSION", "\ubcf4\uace0\uc11c \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc84\uc804:"}, {"LOGIN_TITLE", "\ub85c\uadf8\uc778"}, {"LOGIN_ISBLANK", " \uc774(\uac00) \ube44\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uac12\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_INVALIDID", "\uc9c0\uc815\ub41c \uc0ac\uc6a9\uc790 ID\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LOGIN_INVALIDID2", "\uc0ac\uc6a9\uc790 ID\uc5d0\ub294"}, {"LOGIN_INVALIDID3", "\uc601\uc22b\uc790, \ub9c8\uce68\ud45c(.), \ud558\uc774\ud508(-), \ubc11\uc904(_) \ubc0f @ \uae30\ud638\ub9cc \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"LOGIN_INVALIDID4", "\ud5c8\uc6a9\ub418\ub294 \ubb38\uc790\ub85c \uc0ac\uc6a9\uc790 ID\ub97c \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_USERNAME", "\uc0ac\uc6a9\uc790 \uc774\ub984"}, {"LOGIN_PASSWORD", "\uc554\ud638"}, {"LOGIN_LOGIN", "\ub85c\uadf8\uc778"}, {"LOGIN_DOMAIN", "\ub3c4\uba54\uc778"}, {"LOGIN_SWITCH_EN_US", "\uc601\uc5b4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_JA_JP", "\uc77c\ubcf8\uc5b4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_ZH_CN", "\uc911\uad6d\uc5b4 \uac04\uccb4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_ZH_TW", "\uc911\uad6d\uc5b4 \ubc88\uccb4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_KO_KR", "\ud55c\uad6d\uc5b4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_PT_BR", "\ud3ec\ub974\ud22c\uac08\uc5b4(\ube0c\ub77c\uc9c8) UI\ub85c \uc804\ud658"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "\ub85c\uadf8\uc544\uc6c3"}, {"LOGOUT_VPMSG", "\uc774\uc81c SonicWall \ubd84\uc11d\uae30 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ub85c\uadf8\uc544\uc6c3\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LOGOUT_VPMSG1", "\uc0c8 SonicWall \ubd84\uc11d\uae30 \uc138\uc158\uc744 \uc2dc\uc791\ud558\ub824\uba74 \uc774 \ube0c\ub77c\uc6b0\uc800\ub97c \ub2eb\uac70\ub098 \uc885\ub8cc\ud55c \ud6c4<br> \uc0c8 \ube0c\ub77c\uc6b0\uc800 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5ec\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}, {"LOGOUT_GMSMSG", "\uc774\uc81c SonicWall \uc804\uc5ed \uad00\ub9ac \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ub85c\uadf8\uc544\uc6c3\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"LOGOUT_GMSMSG1", "\uc0c8 SonicWall GMS \uc138\uc158\uc744 \uc2dc\uc791\ud558\ub824\uba74 \uc774 \ube0c\ub77c\uc6b0\uc800\ub97c \ub2eb\uac70\ub098 \uc885\ub8cc\ud55c \ud6c4<br> \uc0c8 \ube0c\ub77c\uc6b0\uc800 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5ec\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}, {"SETTINGSUSER_CHANGE", "\ubcc0\uacbd"}, {"SETTINGSUSER_OLD", "\ud604\uc7ac"}, {"SETTINGSUSER_PASSWORD", "\uc554\ud638"}, {"SETTINGSUSER_NEW", "\uc0c8\ub85c \ub9cc\ub4e4\uae30"}, {"SETTINGSUSER_CONFIRMMSG", "\uc0c8 \uc554\ud638 \ud655\uc778"}, {"SETTINGSUSER_FAILMSG", " [\uc554\ud638] \ubc0f [\uc0c8 \uc554\ud638 \ud655\uc778] \ud56d\ubaa9\uc774 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "\uc554\ud638\ub294 7\uc790 \uc774\uc0c1\uc774\uc5b4\uc57c \ud558\uba70, \ubb38\uc790 \ubc0f/\ub610\ub294 \uc22b\uc790\ub85c \uad6c\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"INVALID_PASSWORD", "\uc9c0\uc815\ub41c \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"PWD_RULES", "\uc554\ud638\ub294 \ub2e4\uc74c \uaddc\uce59\uc744 \ubc14\ud0d5\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. "}, {"VALID_PWD_RULE_FOR_PCI", "    - 7\uc790 \uc774\uc0c1\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"MAX_PWD_LEN", "    - 15\uc790 \uc774\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"PWD_ALPHANUMERIC_CHARS", "    - \uc601\uc22b\uc790\ub97c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PWD_SPCIAL_CHARS", "    - \ud2b9\uc218 \ubb38\uc790\ub97c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[KR]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[KR]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[KR]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "\uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud558\ub294 \uc554\ud638\ub97c \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"SETTINGSUSER_MISCSETTINGS", "\uae30\ud0c0 \uc124\uc815"}, {"SETTINGSUSER_TIMEOUTPERIOD", "\uc2dc\uac04 \uc81c\ud55c \uae30\uac04\uc740 -1 \ub610\ub294 [5..120] \ubc94\uc704\uc758 \uae30\uac04\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"SETTINGSUSER_NEVERTIMEOUT", "\uc2dc\uac04 \uc81c\ud55c \uc5c6\uc74c"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "\ube44\ud65c\uc131 \uc2dc\uac04 \uc81c\ud55c"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc120\ud0dd \ud328\ub110, \ud45c\uc2dc:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\uc544\uc774\ucf58"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "\ud14d\uc2a4\ud2b8"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\uc544\uc774\ucf58 \ubc0f \ud14d\uc2a4\ud2b8(\uae30\ubcf8\uac12)"}, {"MAX_ROWS_PER_SCREEN", "\ud654\uba74\ub2f9 \ucd5c\ub300 \ud589 \uc218:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "\ubc94\uc704: [10..100](\ube44-\ubcf4\uace0 \uad00\ub828 \ud398\uc774\uc9c0\uac00 \ub9e4\uaca8\uc9c4 \ud654\uba74\uc5d0\ub9cc \uc801\uc6a9 \uac00\ub2a5)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "\ud654\uba74\ub2f9 \ucd5c\ub300 \ud589 \uc218 \uac12\uc774 \uc720\ud6a8\ud55c \ubc94\uc704\ub97c \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. 10 - 100 \uc0ac\uc774\uc758 \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "\ud654\uba74\ub2f9 \ucd5c\ub300 \ud589 \uc218 \uac12\uc774 \uc22b\uc790\uac00 \uc544\ub2d9\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "\uc790\ub3d9 \uc800\uc7a5 \ub300\uc2dc\ubcf4\ub4dc \uc124\uc815:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1: \uc790\ub3d9 \uc800\uc7a5\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c \ub610\ub294 \ubc94\uc704: [1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "\uc790\ub3d9 \uc800\uc7a5 \ub300\uc2dc\ubcf4\ub4dc \uc124\uc815\uc740 -1 \ub610\ub294 [1..60] \ubc94\uc704\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"CHANGEPASSWORD_OLD", "\ud604\uc7ac \uc554\ud638"}, {"CHANGEPASSWORD_NEW", "\uc0c8 \uc554\ud638"}, {"CHANGEPASSWORD_CONFIRM", "\uc0c8 \uc554\ud638 \ud655\uc778"}, {"CHANGEPASSWORD_USER", "\uc0ac\uc6a9\uc790"}, {"CUSTLOGSETTINGS_NOTE1", "\ucc38\uace0: \uc138\ubbf8\ucf5c\ub860(\";\")\uc73c\ub85c \uad6c\ubd84\ub41c \uc5ec\ub7ec \uc804\uc790 \uba54\uc77c \uc8fc\uc18c\ub97c \uc785\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"CUSTLOGSETTINGS_SECTITLE1", "\uc804\uc790 \uba54\uc77c \uacbd\uace0 \ubc1b\ub294 \uc0ac\ub78c \uc77c\uc815"}, {"CUSTLOGSETTINGS_WEEKDAY", "\ud3c9\uc77c:"}, {"CUSTLOGSETTINGS_SCHED1", "\uc77c\uc815 1:"}, {"CUSTLOGSETTINGS_SCHED2", "\uc77c\uc815 2:"}, {"CUSTLOGSETTINGS_SCHED3", "\uc77c\uc815 3:"}, {"CUSTLOGSETTINGS_SAT", "\ud1a0\uc694\uc77c"}, {"CUSTLOGSETTINGS_SUN", "\uc77c\uc694\uc77c"}, {"CUSTLOGSETTINGS_WEEKEND", "\uc8fc\ub9d0:"}, {"CUSTLOGSETTINGS_HRS", "\uc2dc"}, {"CUSTLOGSETTINGS_TO", "\uc885\ub8cc"}, {"CUSTLOGSETTINGS_ALERTFMT", "\uc804\uc790 \uba54\uc77c \uacbd\uace0 \ud615\uc2dd \uae30\ubcf8 \uc124\uc815"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "\ud14d\uc2a4\ud2b8, \uc0c9\uc0c1, \uc774\ubbf8\uc9c0 \ubc0f \ub9c1\ud06c\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. HTML \uc9c0\uc6d0 \uc804\uc790 \uba54\uc77c \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc640\ub9cc \ud638\ud658\ub429\ub2c8\ub2e4."}, {"CUSTLOGSETTINGS_TEXT", "\uc77c\ubc18 \ud14d\uc2a4\ud2b8"}, {"CUSTLOGSETTINGS_TEXT_DESC", "\uc77c\ubc18 \ud14d\uc2a4\ud2b8\ub85c \ub41c \ubaa8\ub4e0 \uc138\ubd80 \uc815\ubcf4\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc804\uc790 \uba54\uc77c \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc640 \ud638\ud658\ub429\ub2c8\ub2e4."}, {"CUSTLOGSETTINGS_PAGER", "\uc77c\ubc18 \ud14d\uc2a4\ud2b8(\ub2e8\uc21c)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "\uc77c\ubc18 \ud14d\uc2a4\ud2b8\ub85c \ub41c \uc9e7\uc740 \uba54\uc2dc\uc9c0\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \ud638\ucd9c\uae30, SMS(Short Message Service) \ubc0f \uc774\uc640 \uc720\uc0ac\ud55c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4."}, {"LOGCONFIG_SECTITLE_1", "\uc0ad\uc81c"}, {"LOGCONFIG_SECTITLE_2", "\ub85c\uadf8 \uba54\uc2dc\uc9c0"}, {"LOGCONFIG_DELLABEL", "\ub2e4\uc74c\ubcf4\ub2e4 \uc624\ub798\ub41c \ub85c\uadf8 \uba54\uc2dc\uc9c0 \uc0ad\uc81c:"}, {"LOGCONFIG_MONTH", "\uc6d4"}, {"LOGCONFIG_DAY", "\uc77c"}, {"LOGCONFIG_YEAR", "\ub144"}, {"LOGCONFIG_FORLABEL", "\ub300\uc0c1"}, {"LOGCONFIG_DOMAIN", "\ub3c4\uba54\uc778"}, {"SESSIONS_NOSESSALERT", "\uc885\ub8cc\ud560 \uc138\uc158\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SESSIONS_NOSESSSELALERT", "\uc885\ub8cc\ud560 \uc138\uc158\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"SESSIONS_RUSUREALERT", "\uc120\ud0dd\ud55c \uc138\uc158\uc744 \uc885\ub8cc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"SESSIONS_TITLE", "\ud604\uc7ac \uc138\uc158"}, {"SESSIONS_COL1", "\uc0ac\uc6a9\uc790 \uc774\ub984"}, {"SESSIONS_COL2", "IP \uc8fc\uc18c"}, {"SESSIONS_COL3", "\ub85c\uadf8\uc778 \uc2dc\uac04"}, {"SESSIONS_COL4", "\ub9c8\uc9c0\ub9c9 \uc561\uc138\uc2a4 \uc2dc\uac04"}, {"SESSIONS_COL5", "\ub3c4\uba54\uc778 \uc774\ub984"}, {"SESSIONS_END", "\uc120\ud0dd\ud55c \uc138\uc158 \uc885\ub8cc"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP \uc11c\ubc84 \uc8fc\uc18c"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP \ud3ec\ud2b8"}, {"LOGINVPSSETTINGS_LABEL2", "\ubcf4\ub0b8 \uc0ac\ub78c \uc804\uc790 \uba54\uc77c \uc8fc\uc18c"}, {"LOGINVPSSETTINGS_LABEL3", "\uad00\ub9ac\uc790 \uc804\uc790 \uba54\uc77c \uc8fc\uc18c"}, {"LOGINVPSSETTINGS_LABEL3_5", "\uc0ac\uc6a9 TLS"}, {"LOGINVPSSETTINGS_LABEL4", "\uc778\uc99d \uc0ac\uc6a9"}, {"LOGINVPSSETTINGS_LABEL5", "\uc0ac\uc6a9\uc790"}, {"LOGINVPSSETTINGS_LABEL6", "\uc554\ud638"}, {"LOGINVPSSETTINGS_NOTE", "\ucc38\uace0: \uc774\uba54\uc77c \uc8fc\uc18c \uc218\uc2e0\uc790\ub97c \ubcc0\uacbd\ud558\ub824\uba74 \ucf58\uc194 > \uacbd\uace0 > \uae30\ubcf8 \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624."}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "\uc2dc\uc2a4\ud15c \ub514\ubc84\uadf8 \uc218\uc900:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "\ub514\ubc84\uadf8 \uc218\uc900\uc744 \uc124\uc815\ud558\uba74 \uc7a0\uc7ac\uc801\uc778 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ubb38\uc81c\ub97c \ubcf4\ub2e4 \ube60\ub974\uac8c \ud574\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uba74 \uc774 \ubc30\ud3ec\uc758 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ub514\ubc84\uadf8 \ub85c\uadf8 \ud30c\uc77c\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\uba70, \uc774\ub85c \uc778\ud574 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc131\ub2a5\uc774 \uc800\ud558\ub418\uace0 \ub514\uc2a4\ud06c \uacf5\uac04\uc774 \uac00\ub4dd \ucc30 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\uc0c1\uc801\uc778 \uc791\ub3d9\uc744 \uc704\ud574 \uc7a0\uc7ac\uc801\uc778 \ubb38\uc81c\uac00 \ud574\uacb0\ub418\uba74 \ubc14\ub85c <i>No Debug(\ub514\ubc84\uadf8 \uc5c6\uc74c)</i>\ub85c \ub2e4\uc2dc \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "\ucc38\uace0: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "\u00a0\u00a0\u00a0\u00a0-\u00a0\ub514\ubc84\uadf8 \uc218\uc900\uc740 \ubc18\ub4dc\uc2dc SonicWall \uae30\uc220 \uc9c0\uc6d0\ubd80\uc758 \uc9c0\uce68\uc5d0 \ub530\ub77c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "\u00a0\u00a0\u00a0\u00a0-\u00a0\ub514\ubc84\uadf8 \uc218\uc900\uc774 \ub192\uc744\uc218\ub85d \ub514\ubc84\uadf8 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4\uac00 \ub9ce\uc544\uc9c0\uba70 \uc774\uc5d0 \ub530\ub77c \uc804\uccb4 \uc2dc\uc2a4\ud15c \uc131\ub2a5\uc774 \uc800\ud558\ub429\ub2c8\ub2e4."}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "\uc9c0\uae08 \ubaa8\ub378 \ucf54\ub4dc \uc815\ubcf4 \ub3d9\uae30\ud654"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\uae30\uc874\uc758 \uc608\uc57d\ub41c \ubaa8\ub4e0 \ubcf4\uace0\uc11c\uc5d0 \ub300\ud55c SMTP \uc11c\ubc84 \uc8fc\uc18c\ub97c \uc0c8 SMTP \uc11c\ubc84 \uc8fc\uc18c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "\ubaa8\ub378 \ucf54\ub4dc \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "\ub808\uac70\uc2dc(Analyzer 7.0 \uc774\uc804) \ubcf4\uace0\uc11c \ud45c\uc2dc "}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "\uc554\ud638 \ubcf4\uc548 \uac15\uc81c \uc801\uc6a9"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "\uc554\ud638 \ubcc0\uacbd \uac15\uc81c \uc801\uc6a9 \uc77c\uc218"}, {"GENVPSSTATUS_INVALIDIP", "\ud604\uc7ac \ub85c\uadf8\uc778\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc790\uaca9 \uc815\ubcf4\uac00 \ubd88\uc644\uc804\ud568"}, {"GENVPSSTATUS_NODE", " \ub178\ub4dc: "}, {"GENVPSSTATUS_INFO", "\uc815\ubcf4"}, {"GENVPSSTATUS_SYSLOG", "Syslog \uc11c\ubc84"}, {"GENVPSSTATUS_IPINFO", "IP \uc8fc\uc18c"}, {"GENVPSSTATUS_PORT", "\ud3ec\ud2b8"}, {"GENVPSSTATUS_SYNCNOW", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc640 \uc124\uc815 \ub3d9\uae30\ud654, MySonicWall.com\uacfc \ub77c\uc774\uc120\uc2a4 \uc815\ubcf4 \ub3d9\uae30\ud654"}, {"GENVPSSTATUS_GETSTARTED", "\ubd84\uc11d\uae30 \uc2dc\uc791\ud558\uae30"}, {"GENVPSSTATUS_GETSTARTOPEN", "\uc0c8 \ucc3d\uc5d0\uc11c \uc2dc\uc791\ud558\uae30 \uad00\ub828 \uc9c0\uce68 \uc5f4\uae30"}, {"GENVPSSTATUS_LOGINTITLE", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub85c\uadf8\uc778"}, {"GENVPSSTATUS_LOGINHTTP", "\ube44\ubcf4\uc548 \ub85c\uadf8\uc778 \uc0ac\uc6a9(HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "\ubcf4\uc548 \ub85c\uadf8\uc778 \uc0ac\uc6a9(HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "\ub85c\uadf8\uc778"}, {"GENVPSSTATUS_CATEGORIES", "Syslog \ubc94\uc8fc"}, {"GENVPSSTATUS_REFRESH_MSG", "\ucc38\uace0: \uc0c1\ud0dc \uc815\ubcf4\ub294 24\uc2dc\uac04\ub9c8\ub2e4 \uc5c5\ub370\uc774\ud2b8\ub429\ub2c8\ub2e4. \uc815\ubcf4\ub97c \uc0c8\ub85c \uace0\uce58\ub824\uba74 \uc704\uc758 \ub9c1\ud06c\ub97c \ud074\ub9ad\ud558\uc2ed\uc2dc\uc624. \uc774 \uc124\uc815\uc744 \ubcc0\uacbd\ud558\ub824\uba74 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub85c\uadf8\uc778\ud55c \ud6c4 \uc124\uc815\uc744 \uc218\ub3d9\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"GENVPSSTATUS_LOG_TYPE", "\ub85c\uadf8 \uc720\ud615"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "\uc2dc\uc2a4\ud15c \uc720\uc9c0 \uad00\ub9ac"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "\uc2dc\uc2a4\ud15c \uc624\ub958"}, {"GENVPSSTATUS_BLOCKED_WEB", "\ucc28\ub2e8\ub41c \uc6f9 \uc0ac\uc774\ud2b8"}, {"GENVPSSTATUS_BLOCKED_JAVA", "\ucc28\ub2e8\ub41c Java \ub4f1"}, {"GENVPSSTATUS_USER_ACTIVITY", "\uc0ac\uc6a9\uc790 \ud65c\ub3d9"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP \ud1b5\uacc4"}, {"GENVPSSTATUS_ATTACKS", "\uacf5\uaca9"}, {"GENVPSSTATUS_DROPPED_TCP", "\uc0ad\uc81c\ub41c TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "\uc0ad\uc81c\ub41c UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "\uc0ad\uc81c\ub41c ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "\ub124\ud2b8\uc6cc\ud06c \ub514\ubc84\uadf8"}, {"GENVPSSTATUS_DENIED_LAN_IP", "\uac70\ubd80\ub41c LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "\ubd84\uc11d\uae30 \ub77c\uc774\uc120\uc2a4 \uc0c1\ud0dc"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>\u00a0\u00a0\\\"\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c\\\" \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub824\uba74 \ub2e4\uc74c \ub2e8\uacc4\ub97c \uc218\ud589\ud558\uc2ed\uc2dc\uc624.<br/>\u00a0\u00a01\ub2e8\uacc4 - <a href=\"http://www.MySonicWall.com\" target=new>\uc5ec\uae30\ub97c \ud074\ub9ad\ud558\uc5ec MySonicWall.com\uc5d0\uc11c \ub77c\uc774\uc120\uc2a4\ub97c \ud655\uc778\ud558\uac70\ub098 \ud65c\uc131\ud654\ud558\uc2ed\uc2dc\uc624.</a><br/>\u00a0\u00a02\ub2e8\uacc4 - \ub77c\uc774\uc120\uc2a4\uac00 \ud65c\uc131 \uc0c1\ud0dc\uc778 \uacbd\uc6b0 <a href=\"javascript:synchronizeInfo();\">\uc5ec\uae30\ub97c \ud074\ub9ad\ud558\uc5ec \ub77c\uc774\uc120\uc2a4 \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud558\uc2ed\uc2dc\uc624.</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(MySonicWall.com\uc5d0 \uc5f0\uacb0\ud560 \ub54c \ud1b5\uc2e0 \uc624\ub958 \ubc1c\uc0dd)<br/>\u00a0\u00a0GMSVP \uc6f9 \uc11c\ubc84\uc5d0\uc11c www.MySonicWall.com\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"COMPONENT", "\uc124\uba85"}, {"COMPONENT_LC", "\uad6c\uc131 \uc694\uc18c"}, {"FILE_SIZE", "\ud30c\uc77c \ud06c\uae30(KB)"}, {"IP_ADDRESS", "IP \uc8fc\uc18c"}, {"CURRENT_VERSION", "\ud604\uc7ac \ubc84\uc804"}, {"LATEST_VERSION", "\ucd5c\uc2e0 \ubc84\uc804"}, {"RELEASE_NOTES", "\ub9b4\ub9ac\uc2a4 \uc815\ubcf4"}, {"LAST_DOWNLOADED", "\ub9c8\uc9c0\ub9c9 \ub2e4\uc6b4\ub85c\ub4dc"}, {"RELEASE_DATE", "\ub9b4\ub9ac\uc2a4 \ub0a0\uc9dc"}, {"DOWNLD_NEW", "\uc0c8\ub85c \ub2e4\uc6b4\ub85c\ub4dc "}, {"SOFTWARE_UPDATES", "\uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5c5\ub370\uc774\ud2b8"}, {"DEL_SEL_COMPS_FROM_LIST", "\ubaa9\ub85d\uc5d0\uc11c \uc120\ud0dd\ud55c \uad6c\uc131 \uc694\uc18c \uc0ad\uc81c"}, {"LIC_DELETE_MSG", "\ub2e4\uc74c\uc744 \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LIC_PATCH_MSG", "\ud328\uce58\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc73c\uba70 \ub2e4\uc74c \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud574 \ub2e4\uc6b4\ub85c\ub4dc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"LIC_NEW_GMS_SW", "\uc0c8 GMS \uc18c\ud504\ud2b8\uc6e8\uc5b4"}, {"LIC_CONSOLE", "\ucf58\uc194"}, {"LIC_SELECT_COMPONENT", "\uad6c\uc131 \uc694\uc18c\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CHAP_TESTING", "CHAP \ud14c\uc2a4\ud2b8"}, {"CHAP_RADIUS_TESTING_MSG", "CHAP \uc778\uc99d\uc740 \uc774 \uc778\uc99d\uc744 \uc9c0\uc6d0\ud558\ub294 RADIUS \uc11c\ubc84\uc5d0\uc11c\ub9cc \uc791\ub3d9\ud558\uba70, \uc77c\ubd80 \uacbd\uc6b0 \uc554\ud638\ub97c \uc5ed\uc73c\ub85c \uc800\uc7a5\ud558\ub3c4\ub85d \uc11c\ubc84\ub97c \uad6c\uc131\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"CHAP_LDAP_TESTING_MSG", "CHAP \uc778\uc99d\uc740 LDAP\ub97c \ud1b5\ud55c \uc0ac\uc6a9\uc790 \uc554\ud638 \uac80\uc0c9\uc744 \uc9c0\uc6d0\ud558\ub294 \uc11c\ubc84\uc5d0\uc11c\ub9cc \uc791\ub3d9\ud558\uba70,\uc77c\ubd80 \uacbd\uc6b0 \uc554\ud638\ub97c \uc5ed\uc73c\ub85c \uc800\uc7a5\ud558\ub3c4\ub85d LDAP \uc11c\ubc84\ub97c \uad6c\uc131\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "Microsoft Active Directory \ub610\ub294 Novell eDirectory\uc5d0\uc11c\ub294 CHAP\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4\ub294 \uc810\ub3c4 \uc720\uc758\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"PERF_NO_SUMMARIZER", "\ud604\uc7ac \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc694\uc57d \uc791\uc131\uae30 \uc131\ub2a5 \uba54\ud2b8\ub9ad\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PERF_SUMMARIZER_INFO", "\uc694\uc57d \uc791\uc131\uae30 \uc815\ubcf4"}, {"PERF_SUMMARIZER", "\uc694\uc57d \uc791\uc131\uae30"}, {"PERF_SYSLOG_INFO", "\ub370\uc774\ud130 \ud30c\uc77c \uc815\ubcf4"}, {"PERF_SYSLOG_FILE_TYPE", "\ub370\uc774\ud130 \ud30c\uc77c \ud615\uc2dd"}, {"PERF_FILE_STATS", "\ud30c\uc77c \ud1b5\uacc4"}, {"PERF_OLDEST", "\uc624\ub798\ub41c \ud56d\ubaa9"}, {"PERF_PRD_LABEL", "\ucc98\ub9ac\ub41c \ud30c\uc77c"}, {"PERF_SRC_LABEL", "\uadf8\ub8f9\ud654\ub41c \ud30c\uc77c"}, {"PERF_UNP_LABEL", "\ucc98\ub9ac\ub418\uc9c0 \uc54a\uc740 \ud30c\uc77c"}, {"PERF_NMM_LABEL", "\ub0b4 \uc18c\uc720\uac00 \uc544\ub2cc \ud30c\uc77c"}, {"PERF_IMF_LABEL", "\uac10\uc5fc\ub41c \ud30c\uc77c"}, {"PERF_ZIP_LABEL", "\ubcf4\uad00\ub41c \ud30c\uc77c"}, {"PERF_PRE_LABEL", "\uc798\ubabb\ub41c \ub85c\uadf8 \ud30c\uc77c"}, {"PERF_UPE_LABEL", "\uc798\ubabb\ub41c \uc5c5\ub85c\ub4dc \ud30c\uc77c"}, {"PERF_UPD_LABEL", "\uc5c5\ub85c\ub4dc\ub41c \ud30c\uc77c"}, {"PERF_UPL_LABEL", "\uc5c5\ub85c\ub4dc \ubcf4\ub958 \uc911\uc778 \ud30c\uc77c"}, {"PERF_RDB_LABEL", "\ubcf4\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4"}, {"PERF_OPT_STATE_LABEL", "\ucd5c\uc801\ud654 \uc0c1\ud0dc"}, {"PERF_OPT_PENDING_LABEL", "\ucd5c\uc801\ud654 \ubcf4\ub958 \uc911"}, {"PERF_OPT_TOTAL_LABEL", "\ucd5c\uc801\ud654\ub418\uc9c0 \uc54a\uc740 \ucd1d \uc77c\uc218"}, {"PERF_BKP_LABEL", "\ubc31\uc5c5 \ud30c\uc77c"}, {"PERF_FILE_ELEMENT", " \ud30c\uc77c - "}, {"PERF_THREAD_INFO", "\uc694\uc57d \uc791\uc131\uae30 \ud504\ub85c\uc138\uc2a4 \uc138\ubd80 \uc815\ubcf4"}, {"PERF_NUM_THREADS", "\ud604\uc7ac \uc2e4\ud589 \uc911\uc778 \uc2a4\ub808\ub4dc \uc218"}, {"PERF_SUMMARIZER_IDLE", "\uc694\uc57d \uc791\uc131\uae30\uac00 \uc720\ud734 \uc0c1\ud0dc\uc785\ub2c8\ub2e4."}, {"PERF_THREAD", "\uc2a4\ub808\ub4dc"}, {"PERF_FIREWALL", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"PERF_FILE", "\ud30c\uc77c"}, {"PERF_STATE", "\uc2dc/\ub3c4"}, {"PERF_START_TIME", "\uc2dc\uc791 \uc2dc\uac04"}, {"PERF_SUMMARIZER_STATS", "\uc694\uc57d \uc791\uc131\uae30 \ud1b5\uacc4"}, {"PERF_PAST_24", "\uc9c0\ub09c 24\uc2dc\uac04 \ub3d9\uc548(\ub2e4\uc74c \uc774\ud6c4: "}, {"PERF_PAST_7_DAYS", "\uc9c0\ub09c 7\uc77c \ub3d9\uc548(\ub2e4\uc74c \uc774\ud6c4: "}, {"PERF_PAST_30_DAYS", "\uc9c0\ub09c 30\uc77c \ub3d9\uc548(\ub2e4\uc74c \uc774\ud6c4: "}, {"PERF_NUM_SYSLOGS", "\uc694\uc57d\ub41c Syslog \uc218 "}, {"PERF_AVERAGE_PER_MINUTE", "\ubd84\ub2f9 \uc694\uc57d\ub41c \ud3c9\uade0 Syslog \uc218"}, {"PERF_NOT_ACTIVE", "\uc9c0\ub09c 7\uc77c \ub3d9\uc548 \uc694\uc57d\ub41c \ub370\uc774\ud130\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PERF_NO_GEN2", "\ubd84\uc0b0 \uc694\uc57d \uc791\uc131\uae30 \uad6c\uc131\uc5d0 \ub300\ud574\uc11c\ub9cc \uc694\uc57d \uc791\uc131\uae30 \uc131\ub2a5 \uba54\ud2b8\ub9ad\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PERF_MEM_USAGE", "\uc694\uc57d \uc791\uc131\uae30 \uba54\ubaa8\ub9ac \uc18c\ubaa8"}, {"PERF_LAST_RUN", "\ub9c8\uc9c0\ub9c9 \uc2e4\ud589 \uc2dc\uac04"}, {"PERF_NEXT_RUN", "\ub2e4\uc74c \uc2e4\ud589 \uc2dc\uac04"}, {"PERF_SUMMARIZER_STATISTICS", "7\uc77c \ub3d9\uc548 \uc694\uc57d \uc791\uc131\uae30 \uc0c1\ud0dc"}, {"PERF_SUMMARIZER_UTILIZATION", "\uc694\uc57d \uc791\uc131\uae30 \uc0ac\uc6a9\ub960"}, {"PERF_TOTAL_RUN_TIME", "\uc77c\ubcc4 \ud3c9\uade0 \uc2e4\ud589 \uc2dc\uac04"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "\uc608\uc0c1 \uc6a9\ub7c9"}, {"PERF_METRIC_SYSLOG", "(100\ub9cc \uac1c\uc758 syslog/\uc77c)"}, {"PERF_METRIC_XML", "(XML \ud30c\uc77c/\uc77c)"}, {"PERF_TOTAL_LOAD", "\ud3c9\uade0 \ubd80\ud558"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "\uc694\uc57d\ub41c \ud3c9\uade0 Syslog(100\ub9cc \uac1c/\uc77c)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "\uc77c\ubcc4 \uc694\uc57d\ub41c \ud3c9\uade0 XML \ud30c\uc77c"}, {"PERF_NO_DATA_SUMMARIZED", "\ub9c8\uc9c0\ub9c9 7\uc77c \ub3d9\uc548 \uc694\uc57d\ub41c \ub370\uc774\ud130\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PERF_REPORTING_INFO", "\ubcf4\uace0 \uc138\ubd80 \uc815\ubcf4"}, {"PERF_TOP_UNITS", "\uc694\uc57d \uc791\uc131\uae30 \uc0ac\uc6a9 \ucd5c\uc0c1\uc704 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"PERF_UNIT_NAME", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"PERF_REPORTING_DB_SIZE", "\ubcf4\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30"}, {"PERF_BACKUPS_DIR_SIZE", "\ubc31\uc5c5 \ub514\ub809\ud130\ub9ac \ud06c\uae30"}, {"PERF_SYSLOG_DIR_SIZE", "\uc6d0\uc2dc \ub370\uc774\ud130 \ub514\ub809\ud130\ub9ac \ud06c\uae30"}, {"PERF_CACHE_SIZE", "\uc608\uc0c1 \uce90\uc2dc \ud06c\uae30"}, {"PERF_BAD_DIR_SIZE", "\uc798\ubabb\ub41c \ub370\uc774\ud130 \ub514\ub809\ud130\ub9ac \ud06c\uae30"}, {"PERF_PER_SUMMARIZER_INFO", "\uc694\uc57d \uc791\uc131\uae30 \uc138\ubd80 \uc815\ubcf4 "}, {"PERF_AVG_UTILIZATION", "\ud3c9\uade0 \uc694\uc57d \uc791\uc131\uae30 \uc0ac\uc6a9\ub960"}, {"PERF_PEAK_UTILIZATION", "\ucd5c\ub300 \uc694\uc57d \uc791\uc131\uae30 \uc0ac\uc6a9\ub960"}, {"NMM_DETAILS", "\ubcf4\uace0 \ubc0f \uad00\ub9ac \uc911\uc774\uc9c0 \uc54a\uc740 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \uc804\uc1a1\ub41c Syslog"}, {"NMM_SERIALS", "\uc9c1\ub82c # of appliances for Summarizer "}, {"NO_NMM_SERIAL", "\ubcf4\uace0 \ubc0f \uad00\ub9ac \uc911\uc774\uc9c0 \uc54a\uc740 \uc5b4\ub5a4 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub3c4 syslog\ub97c \ubcf4\ub0b4\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. "}, {"MISCONFIGURED_SERIALS", "\uc9c1\ub82c # of appliances that are misconfigured "}, {"NO_MISCONFIGURED_SERIALS", "\uc5b4\ub5a4 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub3c4 \uc798\ubabb \uad6c\uc131\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. "}, {"NMM_MSG_NOTE", "\ucc38\uace0: "}, {"NMM_MSG1", "* \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub85c\uadf8\uc778\ud55c \ud6c4 syslog\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud569\ub2c8\ub2e4."}, {"NMM_MSG2", "* \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \uc5c6\ub294 \uacbd\uc6b0 \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0 \ub300\ud55c \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc9c1\ub82c \uc7a5\uce58\ub97c \ucc28\ub2e8\ud558\uc2ed\uc2dc\uc624."}, {"NMM_MSG3", "* \uc798\ubabb \uad6c\uc131\ub41c \uc9c1\ub82c \uc7a5\uce58\ub97c \uc218\uc815\ud558\ub824\uba74 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub85c\uadf8\uc778\ud55c \ud6c4 GMS \uc124\uc815\uc744 \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624."}, {"NMM_MSG4", "* \uc5ec\uae30\uc5d0 \ub098\uc5f4\ub41c \uc9c1\ub82c \uc7a5\uce58\ub294 12\uc2dc\uac04\ub9c8\ub2e4 \uc0c8\ub85c \uace0\uccd0\uc9d1\ub2c8\ub2e4."}, {"PERF_SUMMARIZER_STATUS", "\uc0c1\ud0dc"}, {"PERF_DEPLOYMENT_STATUS", "\ubc30\ud3ec \uc0c1\ud0dc"}, {"PERF_MSG_HIGH_CAPACITY", "\uc694\uc57d \uc791\uc131\uae30\uac00 \ub9e4\uc6b0 \ub192\uc740 \uc6a9\ub7c9\uc73c\ub85c \uc791\ub3d9\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud558\uc2ed\uc2dc\uc624."}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "\uc9c0\ub09c 7\uc77c \ub3d9\uc548 \ubc30\ud3ec\uc758 \uc694\uc57d \uc791\uc131\uae30 \uc911 \ud558\ub098 \uc774\uc0c1\uc774 \ud574\ub2f9 \uc791\ub3d9 \uc6a9\ub7c9\uc744 \ucd08\uacfc\ud588\uc2b5\ub2c8\ub2e4. [Summarizer Utilization(\uc694\uc57d \uc791\uc131\uae30 \ud65c\uc6a9\ub960)] \uc139\uc158\uc5d0\uc11c \uc0c1\ud0dc \uc5f4\uc744 \ud655\uc778\ud55c \ud6c4 GMS \uc0ac\uc774\ud2b8\ub97c \ubc29\ubb38\ud558\uc5ec \ubc30\ud3ec\ub97c \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624."}, {"PERF_MSG_REASSIGN_UNITS", "\uc5d0\uc774\uc804\ud2b8 \uac04 \uc7a5\uce58\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud558\uc2ed\uc2dc\uc624."}, {"PERF_MSG_DISK_LOW", "\ub514\uc2a4\ud06c \uacf5\uac04\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4. \ub514\uc2a4\ud06c\ub97c \ucd94\uac00\ud558\uac70\ub098 \ub514\uc2a4\ud06c \ud560\ub2f9\uc744 \ub298\ub9ac\uc2ed\uc2dc\uc624."}, {"PERF_MSG_DISK_LOW_RDB", "\ubcf4\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub300\ud574 \ub514\uc2a4\ud06c \uacf5\uac04\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4. \ub514\uc2a4\ud06c\ub97c \ucd94\uac00\ud558\uac70\ub098 \ub514\uc2a4\ud06c \ud560\ub2f9\uc744 \ub298\ub9ac\uc2ed\uc2dc\uc624."}, {"PERF_MSG_CAPACITY_PLANNING", "\ubc30\ud3ec\ub97c \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ubcf4\ub824\uba74 <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS \uc6f9 \uc0ac\uc774\ud2b8</a>\ub97c \ubc29\ubb38\ud558\uc2ed\uc2dc\uc624."}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "\ucc38\uace0: \ud3c9\uade0 \ubd80\ud558 \ubc0f \uc608\uc0c1 \uc6a9\ub7c9\uc740 \ubc30\ud3ec\uc640 \uad00\ub828\ub418\uba70, \uc2dc\uc2a4\ud15c\ub9c8\ub2e4 \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PERF_OF", "/"}, {"PERF_ON_DISK", "\ub514\uc2a4\ud06c"}, {"PERF_OPT_EXPORT_PROGRESS", "\ub0b4\ubcf4\ub0b4\uae30 \uc9c4\ud589 \uc911"}, {"PERF_OPT_EXPORT_DONE", "\ub0b4\ubcf4\ub0b4\uae30 \uc644\ub8cc"}, {"PERF_OPT_DELETE_PROGRESS", "\uc0ad\uc81c \uc9c4\ud589 \uc911"}, {"PERF_OPT_DELETE_DONE", "\uc0ad\uc81c \uc644\ub8cc"}, {"PERF_OPT_IMPORT_PROGRESS", "\uac00\uc838\uc624\uae30 \uc9c4\ud589 \uc911"}, {"PERF_OPT_QUEUED_UP", "\ud050\uc5d0 \uc788\uc74c"}, {"PERF_OPT_IDLE", "\uc720\ud734"}, {"PERF_OPT_CURRENT", "\ud604\uc7ac"}, {"PERF_OPT_INFO", "\ucd5c\uc801\ud654 \uc815\ubcf4"}, {"PERF_XML_FILE_INFO", "XML \ud30c\uc77c \uc815\ubcf4"}, {"PERF_XML_LABEL", "\ucc98\ub9ac\ub418\uc9c0 \uc54a\uc740 XML \ud30c\uc77c"}, {"PERF_XPG_LABEL", "\ud504\ub85c\uc138\uc2a4\uc758 \ud30c\uc77c"}, {"PERF_XPD_LABEL", "\ubcf4\uad00\ub41c \ud30c\uc77c"}, {"PERF_XPE_LABEL", "\uc798\ubabb\ub41c \ud30c\uc77c"}, {"ALERT_NO_ALERTS", "\ud604\uc7ac \uc774 \uc139\uc158\uc5d0 \ub300\ud55c \ud65c\uc131 \uacbd\uace0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ALERT_DESCRIPTION", "\uc124\uba85"}, {"ALERT_NODE_NAME", "\uc7a5\uce58 \uc774\ub984"}, {"ALERT_SEVERITY", "\uc2ec\uac01\ub3c4"}, {"ALERT_LISTING", "\uacbd\uace0 \ubaa9\ub85d"}, {"CAL_SUN", "\uc77c\uc694\uc77c"}, {"CAL_MON", "\uc6d4\uc694\uc77c"}, {"CAL_TUE", "\ud654\uc694\uc77c"}, {"CAL_WED", "\uc218\uc694\uc77c"}, {"CAL_THU", "\ubaa9\uc694\uc77c"}, {"CAL_FRI", "\uae08\uc694\uc77c"}, {"CAL_SAT", "\ud1a0\uc694\uc77c"}, {"CAL_JAN", "1\uc6d4"}, {"CAL_FEB", "2\uc6d4"}, {"CAL_MAR", "3\uc6d4"}, {"CAL_APR", "4\uc6d4"}, {"CAL_MAY", "5\uc6d4"}, {"CAL_JUN", "6\uc6d4"}, {"CAL_JUL", "7\uc6d4"}, {"CAL_AUG", "8\uc6d4"}, {"CAL_SEP", "9\uc6d4"}, {"CAL_OCT", "10\uc6d4"}, {"CAL_NOV", "11\uc6d4"}, {"CAL_DEC", "12\uc6d4"}, {Integer.toString(1), "\uc791\uc5c5\uc774 \uc2e4\ud589\ub428: "}, {Integer.toString(0), "\uc791\uc5c5\uc744 \uc2e4\ud589\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(42), "\uc791\uc5c5\uc774 \uc2e4\ud589\ub418\uc5c8\uc9c0\ub9cc \uacbd\uace0\uac00 \ubc18\ud658\ub428: "}, {Integer.toString(10), "\uba85\ub839\uc774 \uc2e4\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-12), "\uba85\ub839\uc774 \ubd80\ubd84\uc801\uc73c\ub85c \ub610\ub294 \uc644\uc804\ud788 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-57), "\uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc0ac\uc6a9\uc790 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-58), "\uba85\ub839\uc744 \ucc98\ub9ac\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-59), "\uc774 \uc791\uc5c5\uc740 \uc544\ubb34 \ub54c\ub098 \uc218\ud589\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-56), "LocalDomain\uc758 \uad00\ub9ac\uc790 \uadf8\ub8f9\uc5d0 \uc18d\ud55c \uc0ac\uc6a9\uc790\ub9cc \uc774 \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uad8c\ud55c\uc744 \uac00\uc9d1\ub2c8\ub2e4."}, {Integer.toString(2), "\uc0c8 \ud38c\uc6e8\uc5b4\uac00 \ud655\uc778\ub418\uc5c8\uc9c0\ub9cc \uc0c8 \ud38c\uc6e8\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. "}, {Integer.toString(3), "\uc791\uc5c5\uc5d0 \ub300\ud574 \uc774\uc804\uc5d0 \ubc31\uc5d4\ub4dc \uc791\uc5c5\uc774 \uc218\ud589\ub428: "}, {Integer.toString(4), "\uc791\uc5c5\uc5d0 \ub300\ud574 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc774 \uc218\ud589\ub428: "}, {Integer.toString(5), "\uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \uc7a5\uce58"}, {Integer.toString(6), "\ubb34\ub8cc \ud3c9\uac00\ud310\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc74c"}, {Integer.toString(7), "\uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\uc9c0\ub9cc \ub4f1\ub85d\ud560 \uc218 \uc5c6\ub294 \uc7a5\uce58"}, {Integer.toString(8), "\ub4f1\ub85d\ud560 \uc218 \uc788\uc9c0\ub9cc \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc5c6\ub294 \uc7a5\uce58"}, {Integer.toString(-1), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc77c\ubd80 \ub9e4\uac1c \ubcc0\uc218\uac00 \uc81c\ub300\ub85c \uad6c\uc131\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-53), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \ub3d9\uc2dc \uad00\ub9ac\uc790 \ub85c\uadf8\uc778\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-63), "\ub85c\uadf8\uc778\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc790\uaca9 \uc99d\uba85\uc774 \ub204\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-69), "\ud604\uc7ac \ub85c\uadf8\uc778 IP \uc8fc\uc18c\ub97c \uac00\uc838\uc624\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-70), "JVM OOM: \uacc4\uc18d\ud560 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc2e4\ud589 \uc2dc \uc791\uc5c5\uc774 \ub2e4\uc2dc \uc2dc\ub3c4\ub429\ub2c8\ub2e4."}, {Integer.toString(-64), "\ub85c\uadf8\uc778\ud560 \uad00\ub9ac\ub418\ub294 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc778\uc99d \ud398\uc774\uc9c0\ub97c \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-64) + "_TT", "- \uad00\ub9ac\ub418\ub294 \uc8fc\uc18c\uc5d0\uc11c \uc7a5\uce58\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n- \uc7a5\uce58\uc5d0\uc11c \ub3d9\uc2dc \ub85c\uadf8\uc778\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc7a5\uce58\uc5d0 \uc9c1\uc811 \ub85c\uadf8\uc778\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-65), "\ub85c\uadf8\uc778 \uac8c\uc2dc\ubb3c\uc5d0 \ub300\ud55c \uc751\ub2f5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-83), "\uc77c\ub828 \ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-83) + "_TT", "- GMS\uc5d0 \uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc9c0\uc815\ub41c \uc77c\ub828 \ubc88\ud638\uac00\n \uc7a5\uce58\uc758 \uc77c\ub828 \ubc88\ud638\uc640 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-84), "\uc9c0\uc815\ub41c \ub85c\uadf8\uc778 \ubaa8\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc73c\ubbc0\ub85c \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-84) + "_TT", "- \uc9c0\uc815\ub41c \ub85c\uadf8\uc778 \ubaa8\ub4dc\uac00 \ud5c8\uc6a9\ub41c \ubaa8\ub4dc\uc758 \ubaa9\ub85d\uc5d0\n \uc18d\ud574 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-2), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc0ac\uc6a9\uc790 \uc774\ub984\uc774\ub098 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-918), "[KR]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "\uc7a5\uce58\uc5d0\uc11c \ubcf4\uc548\uc0c1\uc758 \uc774\uc720\ub85c \ub354 \uc774\uc0c1 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294 MD5 \uc11c\uba85\uc774 \uc788\ub294 SSL \uc778\uc99d\uc11c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc7a5\uce58\ub97c \uad00\ub9ac\ud558\ub824\uba74 \uc778\uc99d\uc11c\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-917), "\uc7a5\uce58\uc5d0 \uc774 \uc791\uc5c5\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-71), "\uc7a5\uce58\uc5d0 \ub300\ud55c \uc798\ubabb\ub41c \uc561\uc138\uc2a4 URL\uc785\ub2c8\ub2e4."}, {Integer.toString(-71) + "_TT", "- \uc7a5\uce58\uc5d0\uc11c IP \uc8fc\uc18c\ub97c \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-72), "\uc0c1\ud0dc xml\uc5d0 \ub300\ud55c \uc694\uccad\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "\uc0c1\ud0dc xml\uc5d0 \ub300\ud55c \uc694\uccad\uc774 \uc2e4\ud328\ud588\uc73c\uba70, \uc751\ub2f5\uc774 \uc218\uc2e0\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "\uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc5d0 \ub300\ud55c \uc694\uccad\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-950), "[KR]Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "\uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc5d0 \ub300\ud55c \uc694\uccad\uc774 \uc2e4\ud328\ud588\uc73c\uba70, \uc751\ub2f5\uc774 \uc218\uc2e0\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "\uc798\ubabb\ub41c \uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc785\ub2c8\ub2e4."}, {Integer.toString(-76) + "_TT", "- \uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc774 \uc218\uc2e0\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- \uac00\uc838\uc628 \uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc774 \uc190\uc0c1\ub418\uc5c8\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n- \uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc774 \uc644\uc804\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-77), "\uc7a5\uce58\ub97c \ud68d\ub4dd\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "\ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\uac00 \uc218\uc2e0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "\uc218\uc2e0\ub41c \ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-78) + "_TT", "- \uc7a5\uce58\uc5d0\uc11c \ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\uac00 \uc804\uc1a1\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- \uc7a5\uce58\uc5d0\uc11c \uc804\uc1a1\ub41c \ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\ub97c GMS\uc5d0 \uc804\ub2ec\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n- GMS \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0\uc11c SA(\ud130\ub110)\uac00 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- GMS \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0\uc11c Syslog\ub97c \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- \uc778\uc2a4\ud134\uc2a4 \uc7a5\uce58\uc758 \uacbd\uc6b0 \ucf58\uc194-\uc6f9 \uc11c\ube44\uc2a4 \ubd84\uc0b0 \ubc30\ud3ec\uc758 \ucc38\uace0: \uc139\uc158\uc5d0 \uc124\uba85\ub41c \uc9c0\uce68\uc744 \ub530\ub974\uc2ed\uc2dc\uc624."}, {Integer.toString(-79), "\uc218\uc2e0\ub41c \ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\ub97c \ud574\ub3c5\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-79) + "_TT", "- GMS\uc5d0 \uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc9c0\uc815\ub41c \uc554\ud638\uac00\n \uc7a5\uce58\uc758 \uc554\ud638\uc640 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(13), "syslog \uba54\uc2dc\uc9c0\uac00 \uc218\uc2e0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "\uc218\uc2e0\ub41c syslog \uba54\uc2dc\uc9c0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-81) + "_TT", "- \uc7a5\uce58\uc5d0\uc11c syslog \uba54\uc2dc\uc9c0\uac00 \uc804\uc1a1\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- \uc7a5\uce58\uc5d0\uc11c \uc804\uc1a1\ub41c syslog \uba54\uc2dc\uc9c0\ub97c GMS\uc5d0 \uc804\ub2ec\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n- GMS \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0\uc11c SA(\ud130\ub110)\uac00 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- GMS \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0\uc11c syslog\ub97c \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-82), "\uc218\uc2e0\ub41c syslog \uba54\uc2dc\uc9c0\ub97c \ud574\ub3c5\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-82) + "_TT", "- GMS\uc5d0 \uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc9c0\uc815\ub41c \uc554\ud638\uac00\n \uc7a5\uce58\uc758 \uc554\ud638\uc640 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(12), "\uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ud68d\ub4dd\ub418\ub3c4\ub85d \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "\uc7a5\uce58\uac00 \uc218\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ud68d\ub4dd\ub418\ub3c4\ub85d \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "\uc7a5\uce58\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\ub098 \ub124\ud2b8\uc6cc\ud06c\uac00 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-4), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uad6c\uc131\uc758 \ud558\ub098 \uc774\uc0c1\uc758 \ub9e4\uac1c \ubcc0\uc218\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-5), "SonicWall \ub4f1\ub85d \uc6f9 \uc0ac\uc774\ud2b8\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-6), "\uc5c5\uadf8\ub808\uc774\ub4dc/\uad6c\ub3c5\uc744 \uc704\ud55c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-7), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4"}, {Integer.toString(-8), "SonicWall GMS \ub4f1\ub85d \uc0ac\uc774\ud2b8\uac00 \uc791\ub3d9\ud558\uc9c0 \uc54a\uac70\ub098 \uc774 \uc0ac\uc774\ud2b8\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. SonicWall GMS \uc11c\ubc84\uc5d0\uc11c \uc778\ud130\ub137 \uc561\uc138\uc2a4\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-9), "\uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10), "SonicWall GMS\uc5d0\uc11c \uc774\ubbf8 \uad00\ub9ac \uc911\uc778 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ucd94\uac00\ud558\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-11), "\uc798\ubabb\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad6c\uc131\ud558\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-15), "\uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uaddc\uce59\uc744 \ub9cc\ub4e4\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-16), "SonicWall \ub77c\uc774\uc120\uc2a4 \uc704\ubc18\uc785\ub2c8\ub2e4."}, {Integer.toString(-17), "SonicWall GMS \ub0b4\ubd80 \uc624\ub958\uc785\ub2c8\ub2e4."}, {Integer.toString(-18), "\ucf58\ud150\uce20 \ud544\ud130 \ubaa9\ub85d\uc744 \ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-19), "\uaddc\uce59\uc774 \uc788\ub294 \uc11c\ube44\uc2a4\ub97c \uc0ad\uc81c\ud558\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-47), "AV \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20), "\ub0b4\ubd80 AV \uc624\ub958"}, {Integer.toString(-21), "AV \uc791\uc5c5 \ubcf4\ub958 \uc911"}, {Integer.toString(-22), "AV \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-23), "AV \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc774\ubbf8 \uc0ac\uc6a9 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-24), "AV \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-25), "AV \uac31\uc2e0 \ud69f\uc218 \uc624\ub958\uc785\ub2c8\ub2e4."}, {Integer.toString(-26), "AV \uac31\uc2e0\uc774 \ub108\ubb34 \uc774\ub985\ub2c8\ub2e4."}, {Integer.toString(-27), "\uad8c\uc7a5\ub418\ub294 \uae30\uac04\ubcf4\ub2e4 \ub354 \uc624\ub798\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad00\ub9ac\ud558\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-28), "\uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 \uc11c\ubc84\uac00 \ud604\uc7ac \uc791\ub3d9\ud558\uc9c0 \uc54a\uac70\ub098 \uc774 \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-85), "\uc2dc\uc2a4\ud15c \ubc31\uc5c5 \uad00\ub9ac \uc791\uc5c5\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-29), "\ud38c\uc6e8\uc5b4\ub97c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5c5\ub85c\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-62), "\uc798\ubabb\ub41c \ud38c\uc6e8\uc5b4\ub97c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5c5\ub85c\ub4dc\ud558\ub824\uace0 \ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-60), "\ud38c\uc6e8\uc5b4 \uc5c5\uadf8\ub808\uc774\ub4dc\uc758 \ucd5c\ub300 \ud30c\uc77c \ud06c\uae30\ub294 4MB\uc785\ub2c8\ub2e4."}, {Integer.toString(-31), "\ud38c\uc6e8\uc5b4\ub97c \ub85c\uceec \ub514\uc2a4\ud06c\uc5d0 \uc4f0\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-30), "\ud38c\uc6e8\uc5b4\ub97c \ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 \uc11c\ubc84\ub97c \ud604\uc7ac \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac70\ub098 \uc774 \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-32), "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc561\uc138\uc2a4 \uc624\ub958\uc785\ub2c8\ub2e4."}, {Integer.toString(-33), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad6c\uc131\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-34), "\uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-68), "\ub3c4\uba54\uc778\uc744 \ucc3e\uc744 \uc218 \uc5c6\uac70\ub098 \uc798\ubabb\ub41c \ub3c4\uba54\uc778 \uc774\ub984\uc785\ub2c8\ub2e4."}, {Integer.toString(-35), "CMP \uc554\ud638\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-36), "\ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-37), "\ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uac70\ub098 \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uc11c\ubc84\uc5d0\uc11c \uc54c \uc218 \uc5c6\ub294 \uc624\ub958\uac00 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-38), "\ub4f1\ub85d \ub610\ub294 \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-39), "\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\ub294 \uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-40), "\ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \uc0ad\uc81c\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ud574\ub2f9 \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-41), "\ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \uc0ad\uc81c\ud558\ub294 \uc911 \uc54c \uc218 \uc5c6\ub294 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-48), "\uc5c5\uadf8\ub808\uc774\ub4dc \uc2e4\ud328"}, {Integer.toString(-49), "CLI \uba85\ub839\uc744 \uc2e4\ud589\ud558\ub824\ub294 \uc561\uc138\uc2a4\uac00 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-42), "\ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-43), "\uc804\uc790 \uba54\uc77c\uc744 \ud558\ub098 \uc774\uc0c1\uc758 \uc8fc\uc18c\uc5d0 \uc804\uc1a1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-44), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c TechSupport \ubcf4\uace0\uc11c\ub97c \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-45), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c SPD \ud30c\uc77c\uc744 \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-46), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \uc778\uc99d\uc11c \ud30c\uc77c\uc744 \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-50), "\ud130\ub110 \uc0c1\ud0dc \ubaa8\ub2c8\ud130\ub9c1 \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-51), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c RCF \ud30c\uc77c\uc744 \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-52), "\uc0ac\uc6a9\uc790 \uacc4\uc815\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-61), "\uc774\uc804\uc5d0 \uc2e4\ud589\ub41c \uc791\uc5c5\uc744 \ub2e4\uc2dc \uc2dc\uc791\ud574\uc57c \ud558\uba70, \ub2e4\uc74c \uac04\uaca9\uc5d0 \uc791\uc5c5\uc774 \ub2e4\uc2dc \uc2dc\ub3c4\ub429\ub2c8\ub2e4."}, {Integer.toString(-229), "\uc774 \uc11c\ube44\uc2a4\ub97c \ud65c\uc131\ud654\ud558\ub824\uba74 Email Protection\uc5d0 \ub300\ud55c \uc720\ud6a8\ud55c \uad6c\ub3c5\uc774 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-230), "Sonic OS \ubc84\uc804\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub9c1(\ub2e4\uc911 \ub178\ub4dc \uad6c\ub3c5)\uc774 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uac70\ub098 \ub2e8\uc77c \ub178\ub4dc \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-231), "\uc5ec\ub7ec WANOPT \ubaa8\ub378\uc758 \ud65c\uc131\ud654 \ud0a4\ub97c \ud63c\ud569\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-232), "WANOPT \ubaa8\ub378\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub9c1(\ub2e4\uc911 \ub178\ub4dc \uad6c\ub3c5)\uc774 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-201), "API \ub9e4\uac1c \ubcc0\uc218\uc5d0 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-202), "\uc0ac\uc6a9\uc790\uac00 \uc774\ubbf8 \ub85c\uadf8\uc778\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-203), "\uc774 \ub9b4\ub9ac\uc2a4\uc5d0\uc11c SonicWall GMS API\uac00 \uad6c\ud604\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-204), "\uc138\uc158\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-205), "SonicWall GMS \uc178\uc744 \ub05d\ub0b4\ub294 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-206), "API \ub9e4\uac1c \ubcc0\uc218\uac00 \ub204\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-207), "\uc774 \ubc94\uc8fc\uc5d0 \ub300\ud55c \ud589\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-208), "\uc81c\uacf5\ub41c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-209), "\ud65c\uc131\ud654 \uc720\ud615\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-210), "IP \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-211), "\uc9c0\uc815\ub41c \uae38\uc774\uac00 \ud544\uc694\ud55c \uae38\uc774\ubcf4\ub2e4 \uc9e7\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-212), "\ubb38\uc790\uc5f4\uc5d0\ub294 16\uc9c4\uc218\ub9cc \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-213), "\ub300\uae30 \uc2a4\ucf00\uc904\ub7ec\uc758 IP \uc8fc\uc18c\uac00 \uae30\ubcf8 \uc2a4\ucf00\uc904\ub7ec\uc758 IP \uc8fc\uc18c\uc640 \uac19\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-214), "\uc9c0\uc815\ub41c IP \uc8fc\uc18c\uc5d0\uc11c \uc2a4\ucf00\uc904\ub7ec\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-215), "\uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-226), "\uc720\ud6a8\ud55c \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-225), "\uc785\ub825 XML\uc758 \uad6c\ubb38\uc744 \ubd84\uc11d\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-228), "\uc785\ub825 XML\uc5d0 \uc798\ubabb\ub41c \ub0b4\uc6a9\uc774 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-216), "\uc798\ubabb\ub418\uc5c8\uac70\ub098 \uc54c \uc218 \uc5c6\ub294 \ubcf4\uace0\uc11c \uc720\ud615\uc785\ub2c8\ub2e4. \ub9e4\uc77c \ubcf4\uace0\uc11c\uc778\uc9c0, \ub9e4\uc8fc \ubcf4\uace0\uc11c\uc778\uc9c0 \ub9e4\uc6d4 \ubcf4\uace0\uc11c\uc778\uc9c0 \uc54c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-217), "\uc798\ubabb\ub41c \ub300\uc0c1 \uc804\uc790 \uba54\uc77c \uc8fc\uc18c\uc785\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 \uc720\ud6a8\ud55c \ub300\uc0c1 \uc8fc\uc18c\ub97c \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-218), "\uc798\ubabb\ub41c \uc6d0\ubcf8 \uc804\uc790 \uba54\uc77c \uc8fc\uc18c"}, {Integer.toString(-219), "\uc798\ubabb\ub41c SMTP \uc11c\ubc84 \uc8fc\uc18c"}, {Integer.toString(-220), "\uc798\ubabb\ub41c \ubcf4\uace0\uc11c \ubaa9\ub85d\uc785\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 \uc720\ud6a8\ud55c \ubcf4\uace0\uc11c ID\ub97c \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-221), "\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub4f1\ub85d\ub41c \ubd84\uc11d\uae30 \uc2a4\ucf00\uc904\ub7ec IP \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-222), "\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub4f1\ub85d\ub41c \ubd84\uc11d\uae30 \uc2a4\ucf00\uc904\ub7ec \ud3ec\ud2b8 \ubc88\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-223), "\uc798\ubabb\ub418\uc5c8\uac70\ub098 \uc54c \uc218 \uc5c6\ub294 \ubcf4\uace0\uc11c \ub0a0\uc9dc\uc785\ub2c8\ub2e4. \uc81c\uacf5\ub41c \ubcf4\uace0\uc11c \ub0a0\uc9dc\ub294 mm/dd/yyyy \ud615\uc2dd\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-224), "\uc81c\uacf5\ub41c \uc77c\uc815 ID\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-502), "zip \ud30c\uc77c \uc554\ud638 \ubcf4\ud638\ub97c \uc704\ud55c \uc554\ud638\uac00 \ub204\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-503), "\uc81c\uacf5\ub41c \ub178\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. unitNode\uc5d0 \ub300\ud55c \uc77c\ub828 \ubc88\ud638\ub098 groupNode\uc5d0 \ub300\ud55c \ud45c\uc2dc \uc774\ub984\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-10001), "\ud1b5\uc2e0 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10002), "\uc785\ub825 XML\uc758 \uad6c\ubb38\uc744 \ubd84\uc11d\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10005), "\uc54c \uc218 \uc5c6\ub294 \uad6c\uc131 \uc694\uc18c\uac00 \ud638\ucd9c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10006), "\uc54c \uc218 \uc5c6\ub294 AV \uba54\uc11c\ub4dc\uac00 \ud638\ucd9c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10011), "\ub9cc\ub8cc \ud6c4 AV\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10012), "\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc740 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 AV\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10013), "\ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \uac83\ubcf4\ub2e4 \ub354 \uc801\uc740 \ub178\ub4dc\uc5d0 \ub300\ud574 AV\ub97c \uac31\uc2e0\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10014), "AV\ub97c \ub108\ubb34 \uc774\ub974\uac8c \uac31\uc2e0\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10020), "AV \uc554\ud638\ub97c \ubcc0\uacbd\ud558\uae30 \uc704\ud55c \uc774\uc804 \uc791\uc5c5\uc774 \ubcf4\ub958 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-10100), "McAfee \ubc31\uc5d4\ub4dc\uc640 \ud1b5\uc2e0\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10101), "\uc774 \uc0ac\uc774\ud2b8\uc5d0 \ub300\ud574 McAfee\uc5d0\uc11c \uc544\ubb34 \ub808\ucf54\ub4dc\ub3c4 \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10102), "\uc774 \uc0ac\uc774\ud2b8\uc5d0 \ub300\ud574 McAfee\uc5d0\uc11c \uc774\uc804 \uc554\ud638\uc640 \uc77c\uce58\uc2dc\ud0ac \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10103), "AV \uc0ac\uc774\ud2b8\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10200), "AV \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10201), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc77c\ub828 \ubc88\ud638\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10202), "\uc81c\uacf5\ub41c \ub77c\uc774\uc120\uc2a4 \ud0a4\uac00 \uc774\ubbf8 \uc0ac\uc6a9 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-10203), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0\uc774 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10204), "\uc81c\uacf5\ub41c \uc5ec\ub7ec \ud0a4\uc758 \uae30\uac04\uc774 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-10205), "\uc5c5\uadf8\ub808\uc774\ub4dc \uc2dc \ubb34\ub8cc \ud3c9\uac00\ud310 \ud0a4\ub294 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10206), "\ud558\ub098 \uc774\uc0c1\uc758 \ub9e4\uac1c \ubcc0\uc218\uc5d0 \ub300\ud574 \uc81c\uacf5\ub41c \uac12\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10210), "\uc81c\uacf5\ub41c \uc77c\ub828 \ubc88\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10211), "\uc81c\uacf5\ub41c \ub77c\uc774\uc120\uc2a4 \ud0a4\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10212), "\uc81c\uacf5\ub41c \uc0c8 \uc554\ud638\uc5d0 \uc798\ubabb\ub41c \ubb38\uc790\uac00 \uc788\uac70\ub098 \uc554\ud638 \uae38\uc774\uac00 6 - 12\uc790\uac00 \uc544\ub2d9\ub2c8\ub2e4."}, {Integer.toString(-10213), "\uc81c\uacf5\ub41c \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10214), "\uc81c\uacf5\ub41c OEM \ucf54\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10215), "\uc81c\uacf5\ub41c WAN IP \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10220), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uc774\uc804 \uc694\uccad\uc774 \uc5ec\uc804\ud788 \ubcf4\ub958 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-10250), "AV\uc5d0 \ub300\ud574 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc73c\uba70 \ub2e4\uc2dc \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-10251), "\uc798\ubabb\ub41c \uc554\ud638\ub85c \uc778\ud574 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub2e4\uc2dc \ud65c\uc131\ud654\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10260), "\uc81c\uacf5\ub41c \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9 \uc77c\ub828 \ubc88\ud638\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10261), "\uc81c\uacf5\ub41c \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9 \uc77c\ub828 \ubc88\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10262), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc544\ubb34 \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\ub3c4 \uc544\ub2d9\ub2c8\ub2e4."}, {Integer.toString(-10263), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc774\ubbf8 \ud65c\uc131 \uc0c1\ud0dc\uc758 \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uad6c\ub3c5\uc774 \uc788\uc73c\ubbc0\ub85c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc5d0 \ucd94\uac00\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10264), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc774 \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc774 \uc544\ub2d9\ub2c8\ub2e4."}, {Integer.toString(-10265), "\ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc758 \uc18c\uc720\uc790\ub294 \uc81c\uac70\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10266), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc774\ubbf8 \ub2e4\ub978 \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc785\ub2c8\ub2e4."}, {Integer.toString(-10267), "\uc81c\uacf5\ub41c \uc0c8 \ub77c\uc774\uc120\uc2a4 \uc218\uac00 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9 \ub77c\uc774\uc120\uc2a4\uc758 \uc218\ub97c \ucd08\uacfc\ud569\ub2c8\ub2e4."}, {Integer.toString(-10004), "\ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uc791\uc5c5\uc5d0 \ub300\ud574 \ud558\ub098 \uc774\uc0c1\uc758 \ub9e4\uac1c \ubcc0\uc218\uac00 \ub204\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10300), "Total Secure \ud30c\ud2b8\ub108\uc5d0 \ub300\ud574 \uc81c\uacf5\ub41c \uc815\ubcf4\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10301), "\uc81c\uacf5\ub41c Total Secure \ud30c\ud2b8\ub108 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10303), "\uc81c\uacf5\ub41c \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \ub77c\uc774\uc120\uc2a4 \uc218\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10304), "Total Secure \ud30c\ud2b8\ub108\uc5d0\uac8c \ud560\ub2f9\ub418\uc9c0 \uc54a\uc740 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad00\ub9ac\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20000), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud558\ub294 \uc911 \uc54c \uc218 \uc5c6\ub294 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20101), "\uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \uc694\uccad\ub41c \uc5f0\ub77d\ucc98\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20102), "\uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \uc694\uccad\ub41c \uc5f0\ub77d\ucc98\ub97c \ucd94\uac00\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20106), "\uc0ac\uc6a9\uc790 \uc815\ubcf4\uac00 \uc5c6\uc73c\ubbc0\ub85c \uc218\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20111), "\uc5f0\ub77d\ucc98 \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20112), "\uc5f0\ub77d\ucc98 \uc815\ubcf4\ub97c \uc218\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20113), "\uc5f0\ub77d\ucc98 \uc815\ubcf4\ub97c \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20116), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc774\ubbf8 \ub2e4\ub978 MySonicWall.com \uacc4\uc815\uc5d0 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20117), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20118), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub4f1\ub85d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20119), "\uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uc0c1\ud0dc\ub97c \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20121), "\uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20122), "\uc9c0\uc815\ub41c \ud65c\uc131\ud654 \ud0a4\uac00 \uc774\ubbf8 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20123), "\uc798\ubabb\ub41c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20124), "\uc798\ubabb\ub41c \ud65c\uc131\ud654 \ucf54\ub4dc/\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc870\ud569\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20125), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \uc644\ub8cc\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20126), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ud65c\uc131\ud654\uac00 \uc644\ub8cc\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20131), "SonicWall GMS \uc2dc\uc2a4\ud15c\uc758 \uc798\ubabb\ub41c MAC \uc8fc\uc18c\ub97c \ub4f1\ub85d\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20132), "SonicWall GMS \uc2dc\uc2a4\ud15c\uc774 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20133), "\uc9c0\uc815\ub41c SonicWall GMS \uc77c\ub828 \ubc88\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20134), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c SonicWall GMS \uc0c1\ud0dc\ub97c \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20135), "SonicWall GMS\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20136), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc0ac\uc6a9\uc790\uc758 SonicWall GMS \uc2dc\uc2a4\ud15c\uc744 \ub4f1\ub85d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20142), "\uc798\ubabb\ub41c MAC \uc8fc\uc18c\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20143), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c SonicWall GMS\uc5d0 \ub300\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20144), "\uae30\ubcf8 \ud328\ud0a4\uc9c0 \uae30\uac04\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20145), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uae30\ubcf8 \ud328\ud0a4\uc9c0 \uc2dc\uc2a4\ud15c \uc815\ubcf4\ub97c \uc77d\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20146), "\uc774 \uc81c\ud488\uc5d0 \ub300\ud574 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20147), "\uc0ac\uc6a9\uc790\uc758 SonicWall GMS \uc124\uce58\uac00 \uc774\ubbf8 \uc815\uc2dd \ubc84\uc804\uc785\ub2c8\ub2e4."}, {Integer.toString(-20148), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4"}, {Integer.toString(-20149), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc11c\ubc84\uc5d0\uc11c SonicWall GMS \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uac80\uc0c9\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20150), "\uc9c0\uc815\ub41c SonicWall GMS \uc77c\ub828 \ubc88\ud638\uac00 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20151), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ubcf4\uace0 \uc815\ubcf4\ub97c \uc0bd\uc785\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20152), "\uc798\ubabb\ub41c SonicWall GMS \uc77c\ub828 \ubc88\ud638 \ubc0f \uc0ac\uc6a9\uc790 \uc774\ub984 \uc870\ud569\uc785\ub2c8\ub2e4."}, {Integer.toString(-20153), "\ubdf0\ud3ec\uc778\ud2b8 \ud1b5\ud569\uc744 \uc704\ud574 SonicWall GMS\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ub54c \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20154), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uac70\ub098 \uc798\ubabb\ub41c \uc0ac\uc6a9\uc790 \uc774\ub984\uc774 \uc9c0\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20155), "\uc774 \uc11c\ube44\uc2a4\uc758 \uae30\ubcf8 \uacc4\uc57d\uc774 \ud65c\uc131\ud654\ub418\uc9c0 \uc54a\uc558\uac70\ub098 \uc774 \uacc4\uc57d\uc774 \ub9cc\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20201), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c XML \uc785\ub825\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20202), "\ub0b4\ubd80 \uc624\ub958: \uc785\ub825\uc5d0 \uc0ac\uc6a9\uc790 \uc774\ub984\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20203), "SonicWall GMS \ub4f1\ub85d \uc2dc\uc2a4\ud15c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \uc9c0\uc815\ub41c \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20204), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud574 \uc798\ubabb\ub41c \uba54\uc11c\ub4dc\uac00 \uc694\uccad\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20205), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud574 \uc798\ubabb\ub41c XML \ubc84\uc804\uc774 \uc694\uccad\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20401), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20402), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20403), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \uad6c\uc131 \uc694\uc18c \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20404), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ud504\ub85c\uc2dc\uc800 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20140), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c PKI \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20141), "\uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 PKI \uc11c\ube44\uc2a4\uac00 \ud65c\uc131\ud654\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-227), "\ud30c\uc77c\uc744 \uc5c5\ub85c\ub4dc\ud558\uae30\uc5d0 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud569\ub2c8\ub2e4. \uc880 \ub354 \uc791\uc740 \ud06c\uae30\uc758 \ud30c\uc77c\uc744 \uc5c5\ub85c\ub4dc\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-66), "\uc798\ubabb\ub41c \uc11c\uba85 \ud30c\uc77c\uc744 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5c5\ub85c\ub4dc\ud558\ub824\uace0 \ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-67), "\uc11c\uba85 \ud30c\uc77c\uc744 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5c5\ub85c\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \ubaa8\ub378/\ubc84\uc804\uc5d0 \uc774 \uc791\uc5c5\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-500), "lm2.sonicwall.com\uc5d0\uc11c \uc218\uc2e0\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-501), "lm2.sonicwall.com \uc6f9 \uc0ac\uc774\ud2b8\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-907), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \ud38c\uc6e8\uc5b4 \ubc84\uc804\uc774 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-901), "\uae30\ub85d ID\uac00 \uc798\ubabb\ub418\uc5c8\uac70\ub098 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-902), "\uc5d4\ud130\ud2f0 \ubc14\uae65\ucabd \ub808\ucf54\ub4dc\ub97c \uc801\uc6a9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-903), "\ub808\ucf54\ub4dc\ub97c \uc801\uc6a9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-904), "\ud15c\ud50c\ub9bf ID\uac00 \uc798\ubabb\ub418\uc5c8\uac70\ub098 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-905), "\uae30\ub85d\uc744 \uc801\uc6a9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-906), "\ud15c\ud50c\ub9bf\uc744 \uc801\uc6a9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-908), "\ud480\uc5d0\uc11c \uc5f0\uacb0\uc744 \ub300\uae30\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-909), "\uc6d0\uaca9 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc5f0\uacb0\uc744 \ub300\uae30\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-910), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uad6c\uc131 \uc124\uc815\uc774 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-911), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 \uc801\uc6a9 \uac00\ub2a5\ud55c \uad6c\uc131 \uc124\uc815\uc744 \uacb0\uc815\ud558\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-912), "\uc6f9 \uc11c\ube44\uc2a4 \ud638\uc2a4\ud2b8\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-913), "\uc6f9 \uc11c\ube44\uc2a4 \uc5f0\uacb0\uc744 \ub9cc\ub4e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-914), "\uc6f9 \uc11c\ube44\uc2a4\ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub098 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-915), "\uc6f9 \uc11c\ube44\uc2a4\ub97c \uc778\uc99d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-800), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub294 GMS\uc5d0 \ub300\ud55c \uc678\ubd80 \ud750\ub984 \ubcf4\uace0\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-801), "\ud750\ub984 \uc804\ub2ec\uc790 \uac8c\uc774\ud2b8\uc6e8\uc774 \uad6c\uc131\uc774 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-802), "\uc774 \ubaa8\ub378\uc740 GMS\uc5d0 \ub300\ud55c \uc678\ubd80 \ud750\ub984 \ubcf4\uace0\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-803), "\uc774 \ud38c\uc6e8\uc5b4 \ubc84\uc804\uc740 GMS\uc5d0 \ub300\ud55c \uc678\ubd80 \ud750\ub984 \ubcf4\uace0\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-804), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc571 \uc2dc\uac01\ud654 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-805), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc800\uc7a5 \uacf5\uac04\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4."}, {Integer.toString(-806), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub7f0\ud0c0\uc784 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud569\ub2c8\ub2e4."}, {Integer.toString(-807), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-808), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-809), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1\uacfc 2\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-810), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1\uacfc \ud750\ub984 \uc804\ub2ec\uc790\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-811), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1\uacfc 2, \ud750\ub984 \uc804\ub2ec\uc790\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-812), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2\uc640 \ud750\ub984 \uc804\ub2ec\uc790\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-813), "\ud750\ub984 \uc804\ub2ec\uc790\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-814), "GMS\uc5d0\uc11c \uac8c\uc774\ud2b8\uc6e8\uc774 \ubc29\ud654\ubcbd\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-815), "\uac8c\uc774\ud2b8\uc6e8\uc774 \ubc29\ud654\ubcbd \ub05d\uc5d0\uc11c \ud130\ub110\uc744 \uc0dd\uc131\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-816), "\uad00\ub9ac\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub05d\uc5d0\uc11c \ud130\ub110\uc744 \uc0dd\uc131\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-817), "\ud074\ub77c\uc6b0\ub4dc GMS \uad00\ub9ac \ubc0f \ubcf4\uace0\uc5d0 \ub300\ud55c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-818), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucc98\ub9ac \ub2a5\ub825\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4."}, {Integer.toString(-819), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub300\uc5ed\ud3ed\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4."}, {"EDIT_DOMAIN", "\ub3c4\uba54\uc778 \ud3b8\uc9d1"}, {"VIEW_DOMAIN", "\ub3c4\uba54\uc778 \uc138\ubd80 \uc815\ubcf4 \ubcf4\uae30"}, {"ADD_DOMAIN", "\ub3c4\uba54\uc778 \ucd94\uac00"}, {"SELECT_TO_DELETE", "\uc0ad\uc81c\ud560 \ub3c4\uba54\uc778/\uc778\uc99d \uc11c\ubc84\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"SELECT_AS_TO_DEL", "\uc0ad\uc81c\ud560 \uc778\uc99d \uc11c\ubc84\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"DELETE_CONFIRMATION", "\ub2e4\uc74c \ub3c4\uba54\uc778\uc744 \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4. '"}, {"USER_DELETE_CONFIRMATION", "\uc778\uc99d \uc11c\ubc84, \uc0ac\uc6a9\uc790, \uc0ac\uc6a9\uc790 \uc720\ud615 \ubc0f \ud574\ub2f9 \uc124\uc815\ub3c4 \ubaa8\ub450 \uc0ad\uc81c\ub429\ub2c8\ub2e4."}, {"USER_AS_DELETE_CONFIRMATION", "\uc0ac\uc6a9\uc790, \uc0ac\uc6a9\uc790 \uc720\ud615 \ubc0f \ud574\ub2f9 \uc124\uc815\ub3c4 \ubaa8\ub450 \uc0ad\uc81c\ub429\ub2c8\ub2e4."}, {"SURE_WANT_TO_CONTINUE", "\uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"MULTIPLE_DELETE_CONFIRMATION", "\ub2e4\uc74c \ub3c4\uba54\uc778\uc744 \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "\ub2e4\uc74c \uc778\uc99d \uc11c\ubc84\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"AND_AS_DELETE_CONFIRMATION", "\ub2e4\uc74c \uc778\uc99d \uc11c\ubc84\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"WANT_TO_CONTINUE", "\uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DOMAIN", "\ub3c4\uba54\uc778"}, {"DOMAINS", "\ub3c4\uba54\uc778"}, {"SEARCH", "\uac80\uc0c9"}, {"NAME", "\uc774\ub984"}, {"DOMAIN_TYPE", "\ub3c4\uba54\uc778 \uc720\ud615"}, {"DOMAIN_SETTINGS", "\ub3c4\uba54\uc778 \uc124\uc815"}, {"ALIAS", "\ubcc4\uce6d"}, {"DISPLAY_DOMAIN", "\ub85c\uadf8\uc778 \ud654\uba74\uc5d0 \ub3c4\uba54\uc778 \ud45c\uc2dc"}, {"SET_AS_DEFAULT", "\uae30\ubcf8 \ub3c4\uba54\uc778\uc73c\ub85c \uc124\uc815"}, {"HOST_NAME", "\ud638\uc2a4\ud2b8 \uc774\ub984"}, {"HOST_TYPE", "\ud638\uc2a4\ud2b8 \uc720\ud615"}, {"EQUALS", "\uac19\uc74c"}, {"STARTS_WITH", "\uc2dc\uc791 \ubb38\uc790"}, {"ENDS_WITH", "\uc885\ub8cc \ubb38\uc790"}, {"CONTAINS", "\ud3ec\ud568"}, {"LOCAL", "\ub85c\uceec"}, {"REMOTE", "\uc6d0\uaca9"}, {"DOMAINS", "\ub3c4\uba54\uc778"}, {"SSL_USED", "SSL \uc0ac\uc6a9\ub428"}, {"CONFIGURE", "\uad6c\uc131"}, {"NO_DOMAIN_FOUND", "\ub3c4\uba54\uc778 \uc5c6\uc74c"}, {"NO_AS_FOUND", "\uc778\uc99d \uc11c\ubc84 \uc5c6\uc74c"}, {"ADD_DOMAIN", "\ub3c4\uba54\uc778 \ucd94\uac00"}, {"DELETE_DOMAINS", "\ub3c4\uba54\uc778/\uc778\uc99d \uc11c\ubc84 \uc0ad\uc81c"}, {"DELETE_ASS", "\uc778\uc99d \uc11c\ubc84 \uc0ad\uc81c"}, {"EQUALS", "\uac19\uc74c"}, {"STARTS_WITH", "\uc2dc\uc791 \ubb38\uc790"}, {"ENDS_WITH", "\uc885\ub8cc \ubb38\uc790"}, {"CONTAINS", "\ud3ec\ud568"}, {"LOCAL", "\ub85c\uceec"}, {"REMOTE", "\uc6d0\uaca9"}, {"REMOTE_DOMAIN", "\uc6d0\uaca9 \ub3c4\uba54\uc778"}, {"ADMIN_PASSWORD", "\uad00\ub9ac\uc790 \uc554\ud638"}, {"DEFAULT_ADMIN_USER", "\uae30\ubcf8 \uad00\ub9ac \uc0ac\uc6a9\uc790"}, {"AUTH_PORT", "\uc778\uc99d \ud3ec\ud2b8"}, {"ACCT_PORT", "\uacc4\uc815 \ud3ec\ud2b8"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "\uae30\ubcf8 \uace0\uc720 \uc774\ub984"}, {"SEARCH_FILTER", "\uac80\uc0c9 \ud544\ud130"}, {"SHARED_SECRET", "\uacf5\uc720 \ube44\ubc00"}, {"USE_SSL", "SSL \uc0ac\uc6a9"}, {"SSL_PORT", "SSL \ud3ec\ud2b8"}, {"ANONYMOUS_LOGIN", "\uc775\uba85 \ub85c\uadf8\uc778"}, {"LOGIN_USER_NAME", "\ub85c\uadf8\uc778 \uc0ac\uc6a9\uc790 \uace0\uc720 \uc774\ub984"}, {"DNAME_MSG", "\ubc14\uc778\ub529 \uc218\ud589 \uc2dc \ub514\ub809\ud130\ub9ac \uc11c\ubc84\ub97c \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uace0\uc720 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc758 \uac12\uc740 DN(\uace0\uc720 \uc774\ub984)\uc73c\ub85c \uc9c0\uc815\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uc608: [uid=xyz,ou=People,dc=example,dc=com] , [cn=jdoe,cn=users,dc=sv,dc=company,dc=com])."}, {"LOGIN_PWD", "\ub85c\uadf8\uc778 \uc554\ud638"}, {"PROTOCOL_VERSION", "\ud504\ub85c\ud1a0\ucf5c \ubc84\uc804"}, {"LDAPV2", "LDAP \ubc84\uc804 2"}, {"LDAPV3", "LDAP \ubc84\uc804 3"}, {"SETTINGS", "\uc124\uc815"}, {"USER_DIRECTORY_LDAP", "\uc0ac\uc6a9\uc790 \ub514\ub809\ud130\ub9ac LDAP \uc2a4\ud0a4\ub9c8"}, {"LDAP_SCHEMA", "LDAP \uc2a4\ud0a4\ub9c8"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "\uc0ac\uc6a9\uc790 \uc815\uc758"}, {"USER_OBJECTS", "\uc0ac\uc6a9\uc790 \uac1c\uccb4"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "\ub85c\uadf8\uc778 \uc774\ub984 \ud2b9\uc131"}, {"FIRST_NAME", "\uc774\ub984 \ud2b9\uc131"}, {"LAST_NAME", "\uc131 \ud2b9\uc131"}, {"EMAIL", "\uc804\uc790 \uba54\uc77c \ud2b9\uc131"}, {"TELEPHONE", "\uc804\ud654 \ubc88\ud638 \ud2b9\uc131"}, {"CON_TIMEOUT", "\uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c"}, {"SCHEMA", "\uc2a4\ud0a4\ub9c8"}, {"TEST_SETTINGS", "\uc124\uc815 \ud14c\uc2a4\ud2b8"}, {"TEST_RADIUS_SETTINGS", "RADIUS \uc124\uc815 \ud14c\uc2a4\ud2b8"}, {"TEST_LDAP_MSG", "LDAP \uc124\uc815\uc744 \ud14c\uc2a4\ud2b8\ud558\ub824\uba74 \uc62c\ubc14\ub978 LDAP,"}, {"TEST_RADIUS_MSG", "RADIUS \uc124\uc815\uc744 \ud14c\uc2a4\ud2b8\ud558\ub824\uba74 \uc62c\ubc14\ub978 RADIUS,"}, {"TEST_MSG", "\ub85c\uadf8\uc778 \uc774\ub984 \ubc0f \uc554\ud638\ub97c \uc785\ub825\ud558\uace0 [\ud14c\uc2a4\ud2b8] \ub2e8\ucd94\ub97c \ud074\ub9ad\ud558\uc2ed\uc2dc\uc624. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uba74 \ubcc0\uacbd\ub41c \ub0b4\uc6a9\uc774 \ubaa8\ub450 \uc801\uc6a9\ub429\ub2c8\ub2e4."}, {"USER", "\uc0ac\uc6a9\uc790"}, {"PWD", "\uc554\ud638"}, {"RUN_CLIENT_TEST", "\ud074\ub77c\uc774\uc5b8\ud2b8 \ud14c\uc2a4\ud2b8 \uc2e4\ud589"}, {"TEST_STATUS", "\ud14c\uc2a4\ud2b8 \uc0c1\ud0dc"}, {"RETURNED_USER_ATTRIBUTES", "\ubc18\ud658\ub41c \ud14c\uc2a4\ud2b8 \uacb0\uacfc"}, {"TEST", "\ud14c\uc2a4\ud2b8"}, {"OK", "\ud655\uc778"}, {"CANCEL", "\ucde8\uc18c"}, {"CLOSE", "\ub2eb\uae30"}, {"CANT_DELETE_LOCALDOMAIN", "LocalDomain\uc744 \ud3b8\uc9d1/\uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CANT_EDIT", "\ub3c4\uba54\uc778\uc774 \ud558\ub098\ub9cc \uc788\ub294 \uacbd\uc6b0 \ud3b8\uc9d1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_NAME", "\uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_ADMIN_PWD", "\uad00\ub9ac\uc790 \uc554\ud638\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_ADMIN_USER", "\uae30\ubcf8 \uad00\ub9ac \uc0ac\uc6a9\uc790\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_AUTH_PORT", "\uc778\uc99d \ud3ec\ud2b8\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_AUTH_PORT", "\uc778\uc99d \ud3ec\ud2b8\ub294 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"AUTH_PORT_RANGE", "\uc778\uc99d \ud3ec\ud2b8 \ubc94\uc704\ub294 0 - 65535 \uc0ac\uc774\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"EMPTY_ACCT_PORT", "\uacc4\uc815 \ud3ec\ud2b8\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_ACCT_PORT", "\uacc4\uc815 \ud3ec\ud2b8\ub294 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"EMPTY_BD_NAME", "\uae30\ubcf8 \uace0\uc720 \uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_SEARCH_FILTER", "\uac80\uc0c9 \ud544\ud130\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_SHRED_SECRET", "\uacf5\uc720 \ube44\ubc00\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_SSL_PORT", "SSL \ud3ec\ud2b8\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_SSL_PORT", "SSL \ud3ec\ud2b8\ub294 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"SSL_PORT_RANGE", "SSL \ud3ec\ud2b8 \ubc94\uc704\ub294 0 - 65535 \uc0ac\uc774\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"EMPTY_LOGIN", "\ub85c\uadf8\uc778 \uc0ac\uc6a9\uc790 \uace0\uc720 \uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_LOGIN_PWD", "\ub85c\uadf8\uc778 \uc554\ud638\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_CON_TIMEOUT", "\uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_CON_TIMEOUT", "\uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c\uc740 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"RECOMMEND_SSL", "\uc6d0\uaca9 \uc11c\ubc84\uc640\uc758 \uc548\uc804\ud55c \ud1b5\uc2e0\uc744 \uc704\ud574 SSL\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}, {"CON_NOT_SECURE", "SSL\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \uc5f0\uacb0\uc5d0 \ub300\ud574 \ubcf4\uc548\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"DOMAIN_EXISTS", "\uc774 \uc774\ub984\uc744 \uac00\uc9c4 \ub3c4\uba54\uc778\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4."}, {"ALIAS_EXISTS", "\uc774 \uc774\ub984\uc744 \uac00\uc9c4 \ubcc4\uce6d\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4."}, {"DOMAIN_INVALID", "\uc9c0\uc815\ub41c \ub3c4\uba54\uc778 \uc774\ub984\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DOMAIN_VALID_CHARS", "\uc774\ub984\uc5d0\ub294"}, {"DOMAIN_VALID_CHARS_LIST", "\uc601\uc22b\uc790, \ub9c8\uce68\ud45c(.), \ud558\uc774\ud508(-), \ubc11\uc904(_) \ubc0f \uacf5\ubc31\ub9cc \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"SPECIFY_VALID_NAME", "\ud5c8\uc6a9\ub418\ub294 \ubb38\uc790\uac00 \ud3ec\ud568\ub41c \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"DIR_GRP_SETTINGS", "Active Directory \uadf8\ub8f9 \uc124\uc815"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "AD \uadf8\ub8f9 \uad6c\uc131\uc6d0\ub9cc \ud5c8\uc6a9"}, {"DIR_GROUPS", "Active Directory \uadf8\ub8f9"}, {"GRP_NAME_INVALID", "\uc9c0\uc815\ub41c \uadf8\ub8f9 \uc774\ub984\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"GRP_NAME_INVALID_LENGTH", "\uadf8\ub8f9 \uc774\ub984\uc740 200\uc790\ub97c \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"AUTH_SERVER_NAME", "\uc778\uc99d \uc11c\ubc84 \uc774\ub984"}, {"ADD_AUTH_SERVER", "\uc778\uc99d \uc11c\ubc84 \ucd94\uac00"}, {"ADD_AUTHSERVER", "\uc778\uc99d \uc11c\ubc84 \ucd94\uac00"}, {"EDIT_AUTHSERVER", "\uc778\uc99d \uc11c\ubc84 \ud3b8\uc9d1"}, {"DELETE_DOMAIN", "\uc774 \ub3c4\uba54\uc778 \uc0ad\uc81c"}, {"CANT_DELETE_LOCAL_AS", "\ub85c\uceec \uc778\uc99d \uc11c\ubc84\ub97c \ud3b8\uc9d1/\uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CANT_DELETE_ADMIN_AS", "\uc774 \ub3c4\uba54\uc778\uc758 \uae30\ubcf8 \uad00\ub9ac\uc790\uac00 \uc774 \uc11c\ubc84\uc5d0 \ub300\ud574 \uc778\uc99d\ub418\uc5c8\uc73c\ubbc0\ub85c \uc774 \uc778\uc99d \uc11c\ubc84\ub97c \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\uae30\ubcf8 \uad00\ub9ac\uc790\ub97c \ub2e4\ub978 \uc778\uc99d \uc11c\ubc84\ub85c \uc774\ub3d9\ud55c \ud6c4 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"EDIT_AUTH_SERVER", "\uc774 \uc778\uc99d \uc11c\ubc84 \ud3b8\uc9d1"}, {"VIEW_AUTH_SERVER", "\uc778\uc99d \uc11c\ubc84 \uc138\ubd80 \uc815\ubcf4 \ubcf4\uae30"}, {"DELETE_AUTH_SERVER", "\uc774 \uc778\uc99d \uc11c\ubc84 \uc0ad\uc81c"}, {"AS_INVALID", "\uc9c0\uc815\ub41c \uc778\uc99d \uc11c\ubc84\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"AS_EXISTS", "\uc774 \uc774\ub984\uc744 \uac00\uc9c4 \uc778\uc99d \uc11c\ubc84\uac00 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4."}, {"EMPTY_AS_NAME", "\uc778\uc99d \uc11c\ubc84 \uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"AS_NAME_MSG", "\ub9cc\ub4e4\uc5b4\uc9c4 \uc778\uc99d \uc11c\ubc84\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc774\ub984\uc740 \ub3c4\uba54\uc778\uc758 \ub2e4\ub978 \uc778\uc99d \uc11c\ubc84\ub97c \uad00\ub9ac\ud558\ub294 \ub370 \uc720\uc6a9\ud569\ub2c8\ub2e4."}, {"AS_DELETE_CONFIRMATION", "\ub2e4\uc74c \uc778\uc99d \uc11c\ubc84\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4. '"}, {"PRI_RADIUS", "\uae30\ubcf8 RADIUS \uc11c\ubc84"}, {"AUTH_PROTOCOL", "\uc778\uc99d \ud504\ub85c\ud1a0\ucf5c"}, {"RADIUS_TIMEOUT", "RADIUS \uc2dc\uac04 \uc81c\ud55c(\ucd08)"}, {"MAX_RETRIES", "\ucd5c\ub300 \ub2e4\uc2dc \uc2dc\ub3c4 \ud69f\uc218"}, {"BACK_RADIUS", "\ubc31\uc5c5 RADIUS \uc11c\ubc84"}, {"RADIUS_USER_GROUP", "RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9 \uc124\uc815"}, {"ALLOW_GROUP_MEMBERS", "RADIUS \uadf8\ub8f9 \uad6c\uc131\uc6d0\ub9cc \ud5c8\uc6a9"}, {"USE_SW_VSA", "RADIUS \uc11c\ubc84\uc5d0\uc11c SonicWall \uacf5\uae09\uc5c5\uccb4\ubcc4 \ud2b9\uc131 \uc0ac\uc6a9"}, {"USE_FILTER_ID", "RADIUS \uc11c\ubc84\uc5d0\uc11c Filter-ID \ud2b9\uc131 \uc0ac\uc6a9"}, {"ALLOW_GROUPS", "\ud5c8\uc6a9\ub418\ub294 RADIUS \uadf8\ub8f9"}, {"USER_GROUP", "\uc0ac\uc6a9\uc790 \uadf8\ub8f9"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS \uc2dc\uac04 \uc81c\ud55c\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS \uc2dc\uac04 \uc81c\ud55c\uc740 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"EMPTY_MAX_RETRIES", "\ucd5c\ub300 \ub2e4\uc2dc \uc2dc\ub3c4 \ud69f\uc218\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_MAX_RETRIES", "\ucd5c\ub300 \ub2e4\uc2dc \uc2dc\ub3c4 \ud69f\uc218\ub294 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"TEST_USER_NAME", "\ud14c\uc2a4\ud2b8 \uc0ac\uc6a9\uc790 \uc774\ub984\uc740 \ube44\uc6cc \ub458 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TEST_USER_PWD", "\ud14c\uc2a4\ud2b8 \uc0ac\uc6a9\uc790 \uc554\ud638\ub294 \ube44\uc6cc \ub458 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DOMAIN_NAME_MSG", "\ub9cc\ub4e4\uc5b4\uc9c4 \ub3c4\uba54\uc778\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc774\ub984\uc740 \ub85c\uadf8\uc778 \ud398\uc774\uc9c0\uc758 [\ub3c4\uba54\uc778] \ub4dc\ub86d\ub2e4\uc6b4\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4."}, {"DOMAIN_TYPE_MSG", "\ub3c4\uba54\uc778 \uc720\ud615\uc73c\ub85c\ub294 [\ub85c\uceec] \ub610\ub294 [\uc6d0\uaca9]\uc774 \uc788\uc2b5\ub2c8\ub2e4. LDAP\ub098 AD \uc11c\ubc84\uc640 \uac19\uc774 \uc678\ubd80 \ud50c\ub7ab\ud3fc\uc758 \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud574\uc57c \ud558\ub294 \ub3c4\uba54\uc778\uc740 [\uc6d0\uaca9] \uc720\ud615\uc758 \ub3c4\uba54\uc778\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. [\ub85c\uceec] \uc720\ud615\uc758 \ub3c4\uba54\uc778\uc5d0\ub294 SGMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ud45c\uc2dc\ub418\ub294 \uc0ac\uc6a9\uc790 \uacc4\uc815 \ubc0f \uc778\uc99d \uc138\ubd80 \uc815\ubcf4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. [\ub85c\uceec] \uc720\ud615\uc758 \ub3c4\uba54\uc778\uc744 \ub9cc\ub4e4\uba74 \uc678\ubd80 \uc778\uc99d \uc778\ud130\ud398\uc774\uc2a4 \uc5c6\uc774 SGMS \ub0b4\uc5d0\uc11c \uc5ec\ub7ec \ub3c4\uba54\uc778\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"ADMIN_PASSWORD_MSG", "\uc0c8\ub85c\uc6b4 [\ub85c\uceec] \uc720\ud615\uc758 \ub3c4\uba54\uc778\uc744 \ub9cc\ub4e4\uba74 \ub3c4\uba54\uc778\uc5d0 \ub300\ud574 [admin] \uc0ac\uc6a9\uc790\uac00 \uae30\ubcf8\uc801\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9d1\ub2c8\ub2e4. \uad00\ub9ac \uc0ac\uc6a9\uc790\uc758 \uc554\ud638\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"ADMIN_USERID_MSG", "\ub3c4\uba54\uc778\uc5d0 \ub300\ud574 \uad00\ub9ac\uc790\ub85c \uc9c0\uc815\ud574\uc57c \ud558\ub294 \uc0ac\uc6a9\uc790 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624. \uc774 \uc0ac\uc6a9\uc790 \uc774\ub984\uc740 \uc774 \ub3c4\uba54\uc778\uc5d0 \uc5f0\uacb0\ub41c \ub514\ub809\ud130\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc720\ud6a8\ud55c \uc0ac\uc6a9\uc790 \uc774\ub984\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc5d0 \ub300\ud574 \uc774\ub984 [admin]\uc774 \uc9c0\uc815\ub41c \uacbd\uc6b0 \uc0ac\uc6a9\uc790 ID [admin]\uc744 \ud3ec\ud568\ud55c \uc0ac\uc6a9\uc790\uac00 \uc5f0\uad00\ub41c \ub514\ub809\ud130\ub9ac\uc5d0 \uc788\uc5b4\uc57c \ud558\uba70 \uc774 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uad00\ub9ac \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uc608: jdoe)."}, {"HOST_NAME_MSG", "\uc6d0\uaca9 \uc778\uc99d \uc11c\ubc84\uc758 IP \uc8fc\uc18c \ub610\ub294 \ud638\uc2a4\ud2b8 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: [mydc.example.com], [X.X.X.X](ip \uc8fc\uc18c), [company.com]). \uc6d0\uaca9 \uc11c\ubc84\uac00 Windows AD(Active Directory) \uc11c\ubc84\uc774\uace0 AD \ud3ec\ub9ac\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud574\uc57c \ud558\ub294 \uc5ec\ub7ec \ub3c4\uba54\uc778\uc774 \uc788\ub294 \uacbd\uc6b0 AD \ud3ec\ub9ac\uc2a4\ud2b8\uc758 IP \uc8fc\uc18c\ub098 \uc804\uc5ed \uce74\ud0c8\ub85c\uadf8 \uc774\ub984\uc744 \ud638\uc2a4\ud2b8 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"AUTHENTICATION_PORT_MSG", "\uc778\uc99d \uc694\uccad\uc5d0 \ub300\ud574 \uc218\uc2e0 \ub300\uae30\ud558\ub294 LDAP \ub610\ub294 AD \uc11c\ubc84\uc758 \ud3ec\ud2b8 \ubc88\ud638\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 389\uc785\ub2c8\ub2e4(LDAP/AD \uc11c\ubc84\uc758 \uacbd\uc6b0). AD \ud3ec\ub9ac\uc2a4\ud2b8\uc758 IP \uc8fc\uc18c\ub098 \uc804\uc5ed \uce74\ud0c8\ub85c\uadf8 \uc774\ub984\uc744 \ud638\uc2a4\ud2b8 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ud55c \uacbd\uc6b0 \ud574\ub2f9 \ud3ec\ud2b8 \ubc88\ud638\ub3c4 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 3268\uc785\ub2c8\ub2e4"}, {"HOST_TYPE_MSG", "LDAP \uc11c\ubc84, Windows Active Directory \ub610\ub294 RADIUS \uc11c\ubc84\uc77c \uacbd\uc6b0 \uc774 \uac12\uc740 \uc6d0\uaca9 \uc778\uc99d \uc11c\ubc84\uc758 \uc720\ud615\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4."}, {"ALIAS_MSG", "\ub3c4\uba54\uc778\uc774 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uc744 \ub54c \ub85c\uadf8\uc778\ud558\uae30 \uc704\ud574 GMS \ub85c\uadf8\uc778 \ud654\uba74\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub3c4\uba54\uc778 \uc774\ub984\uc758 \uc57d\uc2dd \ud45c\ud604\uc785\ub2c8\ub2e4 (\uc608: alias\\\\username). \ub3c4\uba54\uc778 \uc774\ub984 \uae38\uc774\uac00 16\uc790 \uc774\ud558\uc778 \uacbd\uc6b0 \ubcc4\uce6d\uc740 \ub3c4\uba54\uc778 \uc774\ub984\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \ucc44\uc6cc\uc9d1\ub2c8\ub2e4."}, {"PROTOCOL_VERSION_MSG", "\uc6d0\uaca9 LDAP/AD \uc11c\ubc84\uac00 \uc2e4\ud589 \uc911\uc778 LDAP \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc785\ub2c8\ub2e4."}, {"BASE_DN_MSG", "\uae30\ubcf8 \uace0\uc720 \uc774\ub984\uc740 SGMS\uc5d0\uc11c \uc2dc\uc791\ub41c \uac80\uc0c9\uc774 \uc218\ud589\ub418\ub294 \ub514\ub809\ud130\ub9ac\uc5d0\uc11c \ub8e8\ud2b8 \ud56d\ubaa9\uc744 \uc2dd\ubcc4\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub514\ub809\ud130\ub9ac\uc758 \uae30\ubcf8 DN(example.com\ub77c\uace0 \ud568)\uc740 [dc=example,dc=com] \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. SGMS\uc5d0 \ub85c\uadf8\uc778\ud560 \uc218 \uc788\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\uac00 \ud45c\uc2dc\ub418\ub3c4\ub85d, \ud56d\uc0c1 \ucd5c\uc0c1\uc704 \uc218\uc900 \ub178\ub4dc\ub97c \ub514\ub809\ud130\ub9ac \ud2b8\ub9ac\uc758 \uae30\ubcf8 DN\uc73c\ub85c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"USE_SSL_MSG", "\uc6d0\uaca9 \uc11c\ubc84\uc5d0 \ubc14\uc778\ub529 \uc2dc SSL\uc744 \uc0ac\uc6a9\ud560\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. SSL\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 \uc6d0\uaca9 \uc11c\ubc84\uc758 CA \uc778\uc99d\uc11c\ub098 \uc11c\ubc84 \uc778\uc99d\uc11c\uc5d0 \uc11c\uba85\ud55c CA\uc758 \ub8e8\ud2b8 \uc778\uc99d\uc11c\uac00 SGMS\uc758 \ud0a4 \uc800\uc7a5\uc18c\uc5d0 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 CA\ub85c \ud45c\uc2dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"SSL_PORT_MSG", "SSL \ubc14\uc778\ub529 \uc694\uccad\uc5d0 \ub300\ud574 \uc6d0\uaca9 \uc11c\ubc84\uac00 \uc218\uc2e0 \ub300\uae30\ud558\uace0 \uc788\ub294 \ud3ec\ud2b8 \ubc88\ud638\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 636\uc785\ub2c8\ub2e4(LDAP/AD \uc11c\ubc84\uc758 \uacbd\uc6b0). AD \ud3ec\ub9ac\uc2a4\ud2b8\uc758 IP \uc8fc\uc18c\ub098 \uc804\uc5ed \uce74\ud0c8\ub85c\uadf8 \uc774\ub984\uc744 \ud638\uc2a4\ud2b8 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ud55c \uacbd\uc6b0 \ud574\ub2f9 SSL \ud3ec\ud2b8 \ubc88\ud638\ub3c4 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 3269\uc785\ub2c8\ub2e4"}, {"ANONYMOUS_LOGIN_MSG", "(\uad8c\uc7a5\ub418\uc9c0 \uc54a\uc74c). SGMS\ub97c \uc6d0\uaca9 \uc11c\ubc84\uc5d0 \uc775\uba85\uc73c\ub85c \ubc14\uc778\ub529\ud560\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 \uc6d0\uaca9 LDAP/AD \uc11c\ubc84\uc5d0\uc11c \uc775\uba85 \ubc14\uc778\ub529\uc744 \ud5c8\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc775\uba85 \ubc14\uc778\ub529\uc740 \uc11c\ube44\uc2a4 \uacc4\uc815(\ub514\ub809\ud130\ub9ac\uc758 \ud558\ub098 \uc774\uc0c1\uc758 \uc720\ud6a8\ud55c \uc0ac\uc6a9\uc790 \uacc4\uc815)\uc774 \uc774\uc804\uc5d0 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub9cc \uc2dc\ub3c4\ub418\uc5b4\uc57c \ud558\uba70, \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}, {"LOGIN_USER_DN_MSG", "\ubc14\uc778\ub529 \uc218\ud589 \uc2dc \ub514\ub809\ud130\ub9ac \uc11c\ubc84\ub97c \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uace0\uc720 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc758 \uac12\uc740 DN(\uace0\uc720 \uc774\ub984)\uc73c\ub85c \uc9c0\uc815\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uc608: [uid=xyz, ou=People, dc=example, dc=com] , [cn=jdoe, cn=users, dc=sv, dc=company, dc=com])."}, {"LOGIN_USER_PASSWORD_MSG", "\ub85c\uadf8\uc778 \uc0ac\uc6a9\uc790 DN\uc758 \uc554\ud638\uc785\ub2c8\ub2e4."}, {"CONN_TIMEOUT_MSG", "\uc774 \uac12(\ubc00\ub9ac\ucd08)\uc740 \uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c \uae30\uac04\uc785\ub2c8\ub2e4. \uc5f0\uacb0 \uc2e4\ud328 \uc2dc \uc774 \uae30\uac04\uc774 \uc9c0\ub098\uba74 \uc6d0\uaca9 \uc11c\ubc84\uc640\uc758 \uc5f0\uacb0 \uc2dc\ub3c4\uac00 \ud3ec\uae30\ub429\ub2c8\ub2e4."}, {"LDAP_SCHEMA_MSG", "\uc5f0\uacb0\ub41c LDAP/AD \uc11c\ubc84\uc758 LDAP \uc2a4\ud0a4\ub9c8\uc785\ub2c8\ub2e4."}, {"OBJ_CLASS_MSG", "\uc0ac\uc6a9\uc790\uac00 \uc18d\ud55c \ud45c\uc900 \uac1c\uccb4 \ud074\ub798\uc2a4 \uc911 \ud558\ub098\uc758 \uc774\ub984\uc785\ub2c8\ub2e4."}, {"LOGIN_NAME_ATTRIBUTE_MSG", "\uc0ac\uc6a9\uc790 ID\ub97c \ub098\ud0c0\ub0b4\ub294 LDAP/AD \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \ud2b9\uc131\uc740 \uac12\uc774 SGMS \ub85c\uadf8\uc778 \ud398\uc774\uc9c0\uc5d0\uc11c \uc0ac\uc6a9\uc790 ID\ub85c \uc0ac\uc6a9\ub418\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131\uc785\ub2c8\ub2e4 (\uc608: uid, sAMAccountName etc)."}, {"FIRST_NAME_ATTRIBUTE_MSG", "\uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: givenName)."}, {"LAST_NAME_ATTRIBUTE_MSG", "\uc131\uc744 \ub098\ud0c0\ub0b4\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: sn)."}, {"EMAIL_ATTRIBUTE_MSG", "\uc804\uc790 \uba54\uc77c ID\ub97c \ub098\ud0c0\ub0b4\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: mail)."}, {"TELEPHONE_ATTRIBUTE_MSG", "\uc804\ud654 \ubc88\ud638\ub97c \ub098\ud0c0\ub0b4\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: telephoneNumber)."}, {"TEST_PANE_MSG", "\uc5ec\uae30\uc5d0\uc11c \uc124\uc815 \ud328\ub110\uc5d0 \uc785\ub825\ud55c \uc778\uc99d \uc11c\ubc84(LDAP/AD/RADIUS) \uad6c\uc131\uc744 \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"TEST_PANE_USER_MSG", "GMS\uc5d0 \ub85c\uadf8\uc778\ud558\uae30 \uc704\ud574 SGMS \ub85c\uadf8\uc778 \ud398\uc774\uc9c0\uc5d0 \uc785\ub825\ud558\ub294 \uc62c\ubc14\ub978 \uc0ac\uc6a9\uc790 \uc774\ub984\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624. \uc774 \uc0ac\uc6a9\uc790 \uc774\ub984\uc740 \uc720\ud6a8\ud574\uc57c \ud558\uba70 \uc774 \ub3c4\uba54\uc778\uc758 \uc5f0\uad00\ub41c \ub514\ub809\ud130\ub9ac\uc5d0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub514\ub809\ud130\ub9ac\uc758 \uc774 \uc0ac\uc6a9\uc790 \uc774\ub984\uc5d0 \ub300\ud55c \uc554\ud638\ub3c4 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"EMPTY_DIR_GROUP", "\ub514\ub809\ud130\ub9ac \uadf8\ub8f9 \uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "\uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud558\uba74 \uc9c0\uc815\ub41c Active Directory \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc778 \uc0ac\uc6a9\uc790\ub9cc GMS\uc5d0 \ub85c\uadf8\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud560 \uacbd\uc6b0 \uc124\uc815 \ud328\ub110\uc5d0\uc11c \ud638\uc2a4\ud2b8 \uc720\ud615\uc744 [Active Directory]\ub85c \uc120\ud0dd\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"DIR_GROUPS_MSG", "GMS\uc5d0 \ub85c\uadf8\uc778\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud560 \uad6c\uc131\uc6d0\uc778 AD \uadf8\ub8f9 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624. \uc138\ubbf8\ucf5c\ub860\uc73c\ub85c \uad6c\ubd84\ub41c \uc5ec\ub7ec AD \uadf8\ub8f9\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (\uc608: [GMSUsers], [ADGroup1;AD group2;GMS Users;Group4])."}, {"RADIUS_HOST_NAME_MSG", "RADIUS \uc778\uc99d \uc11c\ubc84\uc758 \ud638\uc2a4\ud2b8 \uc774\ub984\uc774\ub098 IP \uc8fc\uc18c\uc785\ub2c8\ub2e4 (\uc608: [myradius.example.com], [X.X.X.X](ip \uc8fc\uc18c), [company.com])."}, {"RADIUS_AUTH_PORT_MSG", "\uc778\uc99d \uc694\uccad\uc5d0 \ub300\ud574 \uc218\uc2e0 \ub300\uae30\ud558\ub294 RADIUS \uc11c\ubc84\uc758 \ud3ec\ud2b8 \ubc88\ud638\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 1812\uc785\ub2c8\ub2e4."}, {"RADIUS_SHARED_SECRET_MSG", "GMS\uc640 RADIUS \uc11c\ubc84 \uac04 \uacf5\uc720\ub418\ub294 \ube44\ubc00\uc785\ub2c8\ub2e4. \uc774 \ube44\ubc00\uc740 RADIUS \uc11c\ubc84\uc640 RADIUS \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc54c\ub824\uc9c4 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4."}, {"RADIUS_AUTH_PROTOCOL_MSG", "\uc778\uc99d \uc2dc \uc0ac\uc6a9\ud560 RADIUS \uc778\uc99d \ud504\ub85c\ud1a0\ucf5c\uc785\ub2c8\ub2e4."}, {"RADIUS_TIMEOUT_MSG", "\uc774 \uac12(\ucd08)\uc740 \uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c \uae30\uac04\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc5f0\uacb0 \uc2e4\ud328 \uc2dc \uc774 \uae30\uac04\uc774 \uc9c0\ub098\uba74 RADIUS \uc11c\ubc84\uc640\uc758 \uc5f0\uacb0 \uc2dc\ub3c4\uac00 \ud3ec\uae30\ub429\ub2c8\ub2e4."}, {"RADIUS_MAX_RETRIES_MSG", "\uc774 \uac12\uc740 RADIUS \uc11c\ubc84\uc5d0 \ub300\ud574 \uc778\uc99d\uc774 \uc2dc\ub3c4\ub418\ub294 \ud69f\uc218\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc778\uc99d \uc2e4\ud328 \uc2dc \uc9c0\uc815\ub41c \uc2dc\ub3c4 \ud69f\uc218\ub97c \ucd08\uacfc\ud558\uba74 \uc6d0\uaca9 \uc11c\ubc84\uc640\uc758 \uc778\uc99d \uc2dc\ub3c4\uac00 \ud3ec\uae30\ub429\ub2c8\ub2e4."}, {"RADIUS_ONLY_GROUP_MSG", "\uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud558\uba74 \uc9c0\uc815\ub41c RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc778 \uc0ac\uc6a9\uc790\ub9cc GMS\uc5d0 \ub85c\uadf8\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"RADIUS_USE_FILTER_MSG", "\uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud558\uba74 RADIUS \ud2b9\uc131 \\'Filter-ID\\'\uc758 \uac12\uc744 RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9 \uc2dd\ubcc4\uc790\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 GMS\uc5d0 \ub85c\uadf8\uc778\ud558\uae30 \uc704\ud574 RADIUS \uc11c\ubc84\uc5d0\uc11c \uc778\uc99d\ub418\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790-ID\uc640 \ud568\uaed8 \ud2b9\uc131-\uac12 \uc30d\uc744 \ubc18\ud658\ud558\ub3c4\ub85d RADIUS \uc11c\ubc84\ub97c \uc81c\ub300\ub85c \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"RADIUS_USE_SW_MSG", "\uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud55c \uacbd\uc6b0 SonicWall \uacf5\uae09\uc5c5\uccb4\ubcc4 \ud2b9\uc131 [SonicWall-User-Group \ubc0f SonicWall-User-Groups]\uc758 \uac12\uc774 RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9 \uc2dd\ubcc4\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 GMS\uc5d0 \ub85c\uadf8\uc778\ud558\uae30 \uc704\ud574 RADIUS \uc11c\ubc84\uc5d0\uc11c \uc778\uc99d\ub418\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790-ID\uc640 \ud568\uaed8 SonicWall \uacf5\uae09\uc5c5\uccb4\ubcc4 \ud2b9\uc131-\uac12 \uc30d\uc744 \ubc18\ud658\ud558\ub3c4\ub85d RADIUS \uc11c\ubc84\ub97c \uc81c\ub300\ub85c \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"RADIUS_ALLOW_GROUPS_MSG", "GMS\uc5d0 \ub85c\uadf8\uc778\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud560 \uad6c\uc131\uc6d0\uc778 RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9 \uc774\ub984\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4 (\uc608: [GMSUsers]). \uc5ec\ub7ec RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9\uc744 \uc138\ubbf8\ucf5c\ub860\uc73c\ub85c \uad6c\ubd84\ub41c \ubb38\uc790\uc5f4 \ud615\uc2dd\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (\uc608: [RadGroup1;Rad group2;GMS Users;Group4])."}, {"ADD_AUTH_SERVER_MSG", "\uc774 \uc635\uc158\uc774 \uc120\ud0dd\ub41c \uacbd\uc6b0 \ub3c4\uba54\uc778\uc744 \ucd94\uac00\ud558\ub294 \ub3d9\uc548 \uc0c8 \uc778\uc99d \uc11c\ubc84 \uad6c\uc131\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PAGE_LABEL", "\ud398\uc774\uc9c0"}, {"MANAGE_PAGE", "\ud398\uc774\uc9c0 \uad00\ub9ac"}, {"ADD_COMPONENT", "\uad6c\uc131 \uc694\uc18c \ucd94\uac00"}, {"PAGE_MANAGER", "\ud398\uc774\uc9c0 \uad00\ub9ac\uc790"}, {"ADD_NEW_PAGE", "\uc0c8 \ud398\uc774\uc9c0 \ucd94\uac00"}, {"DEFAULT_PAGE", "\uae30\ubcf8 \ud398\uc774\uc9c0"}, {"PAGE_DETAILS", "\ud398\uc774\uc9c0 \uc138\ubd80 \uc815\ubcf4"}, {"PAGE_TITLE", "\ud398\uc774\uc9c0 \uc81c\ubaa9"}, {"COMPONENT_TITLE", "\uad6c\uc131 \uc694\uc18c \uc81c\ubaa9"}, {"PAGE_LAYOUT", "\ud398\uc774\uc9c0 \ub808\uc774\uc544\uc6c3"}, {"ONE_COLUMN_LAYOUT", "1\uac1c \uc5f4(100)"}, {"TWO_COLUMN_LAYOUT", "2\uac1c \uc5f4(50:50)"}, {"THREE_COLUMN_LAYOUT", "3\uac1c \uc5f4(30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4\uac1c \uc5f4(25:25:25:25)"}, {"ADD", "\ucd94\uac00"}, {"EDIT", "\ud3b8\uc9d1"}, {"DELETE", "\uc0ad\uc81c"}, {"ADD_COMPONENT_MANAGER", "\uad6c\uc131 \uc694\uc18c \uad00\ub9ac\uc790 \ucd94\uac00"}, {"TYPE", "\uc720\ud615"}, {"RSS_FEED_DETAILS", "RSS \ud53c\ub4dc \uc138\ubd80 \uc815\ubcf4"}, {"RSS_FEEDS", "RSS \ud53c\ub4dc"}, {"TITLE", "\uc81c\ubaa9"}, {"ITEMS", "\ud45c\uc2dc\ud560 \ud56d\ubaa9 \uc218(\ucd5c\ub300)"}, {"REFRESH_INTERVAL", "\uc0c8\ub85c \uace0\uce68 \uac04\uaca9"}, {"REFRESH_INTERVAL_MINUTE", "(\ubd84)"}, {"EVENT_ALERT_DETAILS", "\uc774\ubca4\ud2b8 \uacbd\uace0 \uc138\ubd80 \uc815\ubcf4"}, {"ALERT_TYPES", "\uacbd\uace0 \uc720\ud615"}, {"REFRESH_INTERVAL_HOUR", "(\uc2dc\uac04)"}, {"ALERT_SHOW_TIME_HOURS", "\uc9c0\ub09c \ub2e4\uc74c \uae30\uac04 \ub0b4 \ud2b8\ub9ac\uac70\ub41c \uacbd\uace0 \ud45c\uc2dc"}, {"APPLICATION_WIDGET_DETAILS", "\uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc704\uc82f \uc138\ubd80 \uc815\ubcf4"}, {"WIDGETS", "\uc704\uc82f"}, {"RSS_FEED_TYPE", "RSS \ud53c\ub4dc"}, {"EVENT_ALERT_TYPE", "\uc774\ubca4\ud2b8 \uacbd\uace0"}, {"APPLICATION_WIDGET_TYPE", "\uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc704\uc82f"}, {"CUSTOM_RSS_FEED", "\uc0ac\uc6a9\uc790 \uc9c0\uc815 RSS \ud53c\ub4dc"}, {"CUSTOM_RSS_URL", "\uc0ac\uc6a9\uc790 \uc9c0\uc815 RSS URL"}, {"END_EDIT", "\ud3b8\uc9d1 \uc885\ub8cc"}, {"RSS_URL", "RSS URL"}, {"SAVE", "\uc800\uc7a5"}, {"DEFAULT_PAGE", "\uae30\ubcf8 \ud398\uc774\uc9c0"}, {"SAVE_LAYOUT_FAIL_MSG", "\ub808\uc774\uc544\uc6c3\uc744 \uc800\uc7a5\ud558\uc9c0 \ubabb\ud568"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "\ucee8\ud2b8\ub864 \ub9c9\ub300 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\uc9c0 \ubabb\ud568"}, {"ADD_COMPONENT_FAIL_MSG", "\uad6c\uc131 \uc694\uc18c\ub97c \ucd94\uac00\ud558\uc9c0 \ubabb\ud568"}, {"DELETE_COMPONENT_FAIL_MSG", "\uad6c\uc131 \uc694\uc18c\ub97c \uc0ad\uc81c\ud558\uc9c0 \ubabb\ud568"}, {"PAGE_ACTION_FAIL_MSG", "\ud398\uc774\uc9c0 \uc791\uc5c5\uc774 \uc2e4\ud328\ud568"}, {"RSS_FEED_FAIL_MSG", "RSS \ud53c\ub4dc\ub97c \uac00\uc838\uc624\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"EVENT_ALERT_FAIL_MSG", "GEM \uacbd\uace0\ub97c \uac00\uc838\uc624\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"APPLICATION_WIDGET_FAIL_MSG", "\uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc704\uc82f\uc744 \uac00\uc838\uc624\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "\ub300\uc0c1: \ub300\uc2dc\ubcf4\ub4dc\uc5d0 \ub300\ud574 \uad6c\uc131\ub41c \uacbd\uace0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_ALERT_FOUND_MSG", "\ud45c\uc2dc\ud560 \uacbd\uace0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CHANGE_DEFAULT_PAGE_MSG", "\uc774 \ud398\uc774\uc9c0\ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc124\uc815\ud558\uba74 \uc774\uc804 \uae30\ubcf8 \ud398\uc774\uc9c0 \uc124\uc815\uc774 \ubaa8\ub450 \ubcc0\uacbd\ub429\ub2c8\ub2e4. \uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DELETE_DEFAULT_PAGE_MSG", "\uae30\ubcf8 \ud398\uc774\uc9c0\ub294 \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ud398\uc774\uc9c0\ub85c \uc124\uc815\ud560 \ub2e4\ub978 \ud398\uc774\uc9c0\ub97c \uc120\ud0dd\ud55c \ud6c4 \uc774 \ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2ed\uc2dc\uc624."}, {"DELETE_PAGE_AND_COMPONENT_MSG", "\ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uba74 \ud574\ub2f9 \ud398\uc774\uc9c0\uc758 \ubaa8\ub4e0 \uad6c\uc131 \uc694\uc18c\ub3c4 \uc0ad\uc81c\ub429\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"VALID_URL_MSG", "URL\uc744 http://www.yourdomain.com \ud615\uc2dd\uc73c\ub85c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"CONFIRM_DELETE_COMPONENT_MSG", "\uc774 \uad6c\uc131 \uc694\uc18c\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"NO_COMPONENT_MSG", "\ud604\uc7ac \ud398\uc774\uc9c0\uc5d0 \ucd94\uac00\ub41c \uad6c\uc131 \uc694\uc18c\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LOAD_DATA_MSG", "\ub370\uc774\ud130 \ub85c\ub4dc \uc911..."}, {"COMPONENT_EXISTS_MSG", "\uad6c\uc131 \uc694\uc18c\uac00 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4. \uae30\uc874 \uad6c\uc131 \uc694\uc18c \uc138\ubd80 \uc815\ubcf4: "}, {"REFRESH_INTERVAL_RANGE", "\uc0c8\ub85c \uace0\uce68 \uac04\uaca9\uc774 \ubc94\uc704\ub97c \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uac12\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"ITEMS_RANGE", "\ud56d\ubaa9 \uc218\uac00 \ubc94\uc704\ub97c \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"ALERT_SHOWTIME_RANGE", "\uacbd\uace0\uc5d0 \ub300\ud55c \ud45c\uc2dc \uc2dc\uac04\uc774 \ubc94\uc704\ub97c \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uac12\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"NO_COMPONENT_SELECTED_ERR", ":\ud398\uc774\uc9c0\uc5d0 \uad6c\uc131 \uc694\uc18c\ub97c \ucd94\uac00\ud558\uae30 \uc804\uc5d0 \uad6c\uc131 \uc694\uc18c\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"ADDCOMPONENT_ERR_QUOTES", "\uad6c\uc131 \uc694\uc18c \uc81c\ubaa9\uc5d0\ub294 \uc791\uc740\ub530\uc634\ud45c('), \ud070\ub530\uc634\ud45c(\"), \ucf5c\ub860(:), \ubc31\ubd84\uc728 \uae30\ud638(%), \ud574\uc2dc(#), \ubb3c\uc74c\ud45c(?) \ubc0f \ud30c\uc774\ud504 \uae30\ud638(l)\uac00 \ud3ec\ud568\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ADDPAGE_ERR_QUOTES", "\ud398\uc774\uc9c0 \uc81c\ubaa9\uc5d0\ub294 \uc791\uc740\ub530\uc634\ud45c('), \ud070\ub530\uc634\ud45c(\"), \ucf5c\ub860(:), \ubc31\ubd84\uc728 \uae30\ud638(%), \ud574\uc2dc(#), \ubb3c\uc74c\ud45c(?) \ubc0f \ud30c\uc774\ud504 \uae30\ud638(l)\uac00 \ud3ec\ud568\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TIME_PERIOD", "\uae30\uac04"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "\ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uba74 \ud574\ub2f9 \ud398\uc774\uc9c0\uc758 \ubaa8\ub4e0 \uc704\uc82f\ub3c4 \uc0ad\uc81c\ub429\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"ADDWIDGET_ERR_QUOTES", "\uc704\uc82f \uc81c\ubaa9\uc5d0\ub294 \uc791\uc740\ub530\uc634\ud45c('), \ud070\ub530\uc634\ud45c(\"), \ucf5c\ub860(:), \ubc31\ubd84\uc728 \uae30\ud638(%), \ud574\uc2dc(#), \ubb3c\uc74c\ud45c(?) \ubc0f \ud30c\uc774\ud504 \uae30\ud638(l)\uac00 \ud3ec\ud568\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TIME_PERIOD", "\uae30\uac04"}, {"COPY_WIDGET_VALIDATION_MSG", "\ubcf5\uc0ac\ud560 \ud398\uc774\uc9c0\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"COPY_WIDGET_HEADER", "\uc704\uc82f \ubcf5\uc0ac"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "\uac80\uc0c9 \ubb38\uc790\uc5f4\uc758 \ud0a4\uc6cc\ub4dc\uac00 \uc774 \uc704\uc82f\uc5d0 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc74c"}, {"IGNORED_INVALID_SEARCH_FILTER", "\uc798\ubabb\ub41c \uac80\uc0c9 \ud544\ud130\uac00 \ubb34\uc2dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "\ud558\ub098 \uc774\uc0c1\uc758 GMSVP \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc9c0\ub9ac\uc801 \uc704\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NDA_NG_REPORTING_WIDGET_MSG", "\uc77c\uce58\ub418\ub294 \ub808\ucf54\ub4dc\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "\uacbd\uace0 \uba54\uc2dc\uc9c0"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\ub9c8\uc9c0\ub9c9\uc73c\ub85c \ubcf4\uace0\ub41c \uc2dc\uac04"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "\uacbd\uace0 \uc720\ud615"}, {"LOGS_WIDGET_COL_MESSAGE", "\uba54\uc2dc\uc9c0"}, {"LOGS_WIDGET_COL_DATE", "\ub0a0\uc9dc"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "\uc0ac\uc6a9\uc790 \uc138\ubd80 \uc815\ubcf4"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "\ub9c8\uc9c0\ub9c9 \uc561\uc138\uc2a4 \uc2dc\uac04"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "\uc124\uba85"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "\uc608\uc57d\ub41c \uc2dc\uac04(\ud604\uc9c0)"}, {"DSB_CONFIRM_DELETE_WIDGET", "\uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uba74 \uc704\uc82f\uc774 \uc0ad\uc81c\ub429\ub2c8\ub2e4. \uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DSB_SEARCH_DIALOG_MESG", "\uc774 \uc704\uc82f\uc740 \ub2e4\uc74c\uc5d0 \ub300\ud55c \uacb0\uacfc\uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. "}, {"DSB_SEARCH_DIALOG_HEADER", "\ucd94\uac00 \uac80\uc0c9 \uacb0\uacfc"}, {"DSB_CLEARHISTORY_MESG", "\ubaa8\ub4e0 \uac80\uc0c9 \uae30\ub85d\uc744 \uc9c0\uc6b0\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DSB_CLEARHISTORY_HDR", "\uac80\uc0c9 \uae30\ub85d"}, {"DSB_ADDNEW_WIDGET_LBL", "\uc0c8 \uc704\uc82f \ucd94\uac00: "}, {"DSB_GENSTTINGS_HDR", "\uc77c\ubc18 \uc124\uc815 "}, {"DSB_ASSOCPROD_HDR", "\uc5f0\uacb0\ub41c \uc81c\ud488 "}, {"DSB_SUBALERTS_HDR", "\ud3ec\ud568\ub41c\ud558\uc704 \uacbd\uace0 "}, {"DSB_WIDGETTITLE_LBL", "\uc81c\ubaa9: "}, {"DSB_NOFITEMS_LBL", "\ud56d\ubaa9 \uc218: "}, {"DSB_REFINT_LBL", "\uc0c8\ub85c \uace0\uce68 \uac04\uaca9: "}, {"DSB_ALERTSTRIGGERED_LBL", "\ub2e4\uc74c \ucd5c\uadfc \uae30\uac04 \ub0b4\uc5d0 \ud2b8\ub9ac\uac70\ub41c \uacbd\uace0 \ud45c\uc2dc: "}, {"DSB_NEWSUBALERTS_LBL", "\uc0c8 \ud558\uc704 \uacbd\uace0: "}, {"DSB_CUSTRSSURL_LBL", "\uc0ac\uc6a9\uc790 \uc9c0\uc815 RSS URL: "}, {"DSB_WRAPTEXT_LBL", "\ud14d\uc2a4\ud2b8 \uc904 \ubc14\uafc8: "}, {"DSB_ADDPAGE_HDR", "\uc0c8 \ud398\uc774\uc9c0 \ucd94\uac00 "}, {"DSB_ADDPAGE_LBL", "\ud398\uc774\uc9c0 \uc81c\ubaa9: "}, {"DSB_MAPLOCATIONDLG_HDR", "\uc704\uce58 \ucd94\uac00/\ud3b8\uc9d1"}, {"DSB_ADDRESS_LBL", "\uc8fc\uc18c: "}, {"DSB_GEOLOCATION_LBL", "\uc9c0\ub9ac \uc704\uce58: "}, {"DSB_DELPAGE_LBL", "\uc2dc\uc2a4\ud15c \uc0dd\uc131 \ud398\uc774\uc9c0\ub85c, \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DSB_DELPAGE_HDR", "\ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DSB_DELPAGECONFIRM_MSG", "\ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"CZ_YES", "\uc608"}, {"CZ_CERT_ISSUER", "\uc778\uc99d\uc11c \ubc1c\uae09\uc790"}, {"CZ_SUB_DN", "\uc8fc\uccb4 \uace0\uc720 \uc774\ub984"}, {"CZ_CERT_SN", "\uc778\uc99d\uc11c \uc77c\ub828 \ubc88\ud638"}, {"CZ_VALID_FROM", "\uc720\ud6a8 \uc2dc\uc791 \uc2dc\uc810"}, {"CZ_EXPIRES_ON", "\ub9cc\ub8cc \uc2dc\uc810"}, {"CZ_STATUS", "\uc0c1\ud0dc"}, {"CZ_REQ_GEN", "\uc694\uccad \uc0dd\uc131\ub428"}, {"CZ_SUB_KEY_ID", "\uc8fc\uccb4 \ud0a4 \uc2dd\ubcc4\uc790"}, {"CZ_CRL_STATUS", "CRL \uc0c1\ud0dc"}, {"CZ_CRL_EXPIRES_ON", "CRL \ub9cc\ub8cc \uc2dc\uc810"}, {"CZ_CRL_REQUIRED", "CRL \ud544\uc218 \uc5ec\ubd80"}, {"CZ_CRL_AUTO_URL", "CRL \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 URL"}, {"CZ_HEADER", "\uc778\uc99d\uc11c \ubc0f \uc778\uc99d\uc11c \uc694\uccad"}, {"CZ_NAME", "\uc774\ub984"}, {"CZ_TYPE", "\uc720\ud615"}, {"CZ_VALIDATED", "\uc720\ud6a8\uc131 \uac80\uc0ac\ub428"}, {"CZ_EXPIRES", "\ub9cc\ub8cc"}, {"CZ_DETAILS", "\uc138\ubd80 \uc815\ubcf4"}, {"CZ_CONFIGURE", "\uad6c\uc131"}, {"CZ_DELETE_CERT", "\uc774 \uc778\uc99d\uc11c \uc0ad\uc81c"}, {"CZ_CANT_DELETE_CERT", "\uc774 \uc778\uc99d\uc11c\ub294 \uc0ad\uc81c\uac00 \ubd88\uac00\ub2a5\ud55c \uae30\ubcf8 \uc81c\uacf5 \uc778\uc99d\uc11c\uc785\ub2c8\ub2e4."}, {"CZ_EMAIL_CERT", "\uc774 \uc778\uc99d\uc11c\ub97c \uc804\uc790 \uba54\uc77c\ub85c \ubcf4\ub0b4\uae30"}, {"CZ_CANT_EMAIL_CERT", "\uac00\uc838\uc628 \ub85c\uceec \uc778\uc99d\uc11c\uc640 \uc11c\uba85 \uc694\uccad\ub9cc \uc804\uc790 \uba54\uc77c\ub85c \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"CZ_IMPORT_CERT_CRL", "\uc778\uc99d\uc11c \ud574\uc9c0 \ubaa9\ub85d \uac00\uc838\uc624\uae30"}, {"CZ_UPLOAD_SIGNED_CERT", "\uc11c\uba85\ud55c \uc778\uc99d\uc11c \uc5c5\ub85c\ub4dc"}, {"CZ_CERT_SEARCH", "\uc778\uc99d\uc11c \uac80\uc0c9"}, {"CZ_CERT_SELECTED", "\uc778\uc99d\uc11c\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"CZ_SURE", "\uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"CZ_CERTS_SELECTED", "\ub2e4\uc74c \uc778\uc99d\uc11c\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"CZ_PLZ_SELECT", "\uc0ad\uc81c\ud560 \uc778\uc99d\uc11c\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CZ_VIEW_STYLE", "\uc778\uc99d\uc11c \ubcf4\uae30 \uc2a4\ud0c0\uc77c"}, {"CZ_ALL_CERTS", "\ubaa8\ub4e0 \uc778\uc99d\uc11c"}, {"CZ_IMPORT_CERTS", "\uac00\uc838\uc628 \uc778\uc99d\uc11c \ubc0f \uc694\uccad"}, {"CZ_BUILTIN_CERTS", "\uae30\ubcf8 \uc81c\uacf5 \uc778\uc99d\uc11c"}, {"CZ_INCLUDE_EXPIRED_CERTS", "\ub9cc\ub8cc\ub41c, \uae30\ubcf8 \uc81c\uacf5 \uc778\uc99d\uc11c \ud3ec\ud568"}, {"CZ_IMPORT", "\uac00\uc838\uc624\uae30..."}, {"CZ_NEW_REQ", "\uc0c8 \uc11c\uba85 \uc694\uccad..."}, {"CZ_DEL_CERTS", "\uc778\uc99d\uc11c \uc0ad\uc81c"}, {"CZ_REQUIRE_CERT", "\uac00\uc838\uc624\uae30\ub97c \uc2e4\ud589\ud558\ub824\uba74 \uc778\uc99d\uc11c \uc774\ub984\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_IMPORT_REQUIRE_FILE", "\uac00\uc838\uc624\uae30\ub97c \uc2e4\ud589\ud558\ub824\uba74 \uc778\uc99d\uc11c \ud30c\uc77c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_NO_DOT", "\uc778\uc99d\uc11c \uc774\ub984\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub984\uc5d0\ub294 '.'\uac00 \ud3ec\ud568\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CZ_IMPORT_REQUIRE_CMP", "\uac00\uc838\uc624\uae30\ub97c \uc2e4\ud589\ud558\ub824\uba74 \uc778\uc99d\uc11c \uad00\ub9ac \uc554\ud638\uac00 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_IMPORT_CERT", "\uc778\uc99d\uc11c \uac00\uc838\uc624\uae30"}, {"CZ_IMPORT_LOCAL", "PKCS\uc5d0\uc11c \uac1c\uc778 \ud0a4\ub85c \ub85c\uceec \ucd5c\uc885 \uc0ac\uc6a9\uc790 \uc778\uc99d\uc11c \uac00\uc838\uc624\uae30#12 (.p12 or .pfx) encoded file"}, {"CZ_IMPORT_CA", "PKCS\uc5d0\uc11c CA \uc778\uc99d\uc11c \uac00\uc838\uc624\uae30#7 (.p7b), PEM (.pem) or DER (.der or .cer) encoded file"}, {"CZ_CERT_NAME", "\uc778\uc99d\uc11c \uc774\ub984"}, {"CZ_CMP", "\uc778\uc99d\uc11c \uad00\ub9ac \uc554\ud638"}, {"CZ_SEL_FILE", "\uac00\uc838\uc62c \ud30c\uc77c\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_FILE", "\uac00\uc838\uc62c \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_UPLOAD_CERT", "\uc778\uc99d\uc11c \uc5c5\ub85c\ub4dc"}, {"CZ_UPLOAD_SIGN_CERT", "\uc11c\uba85 \uc694\uccad\uc744 \uc704\ud574 \uc11c\uba85\ud55c \uc778\uc99d\uc11c \uc5c5\ub85c\ub4dc"}, {"CZ_SEL_UPLOAD_FILE", "\uc5c5\ub85c\ub4dc\ud560 \ud30c\uc77c\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CZ_FILE_FORMAT", "\ud30c\uc77c\uc774 PEM(.pem) \ub610\ub294 DER(.der \ub610\ub294 .cer) \uc778\ucf54\ub529 \ud30c\uc77c\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"CZ_EXPORT_CERT", "\uc778\uc99d\uc11c \ub0b4\ubcf4\ub0b4\uae30"}, {"CZ_EXPORT_CERT_REQ", "\uc778\uc99d\uc11c \ub0b4\ubcf4\ub0b4\uae30 \uc694\uccad"}, {"CZ_CERT_EMAIL_CONTENT", "PKCS#10 Certification Request has been generated and is available for email. Save this file on your local disk for submission to a Registration or Certificate Authority. The file will be saved in PEM Certificate Request format, by default as"}, {"CZ_CHANGE_FILE_NAME", "(\ud544\uc694\ud55c \uacbd\uc6b0 \ub2e4\uc6b4\ub85c\ub4dc \uc2dc \ud30c\uc77c \uc774\ub984\uc774 \ubcc0\uacbd\ub420 \uc218 \uc788\uc74c)"}, {"CZ_SPECIFY_URL", "CRL URL\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_CRL_FILE", "\uac00\uc838\uc62c CRL \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_INVALID_FILE", "\uc120\ud0dd\ud55c \ud30c\uc77c \ud615\uc2dd\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CZ_SPECIFY_VALID_LC", "\uc720\ud6a8\ud55c \ub85c\uceec \uc778\uc99d\uc11c \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_VALID_CA", "\uc720\ud6a8\ud55c CA \uc778\uc99d\uc11c \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_VALID_CRL", "\uc720\ud6a8\ud55c CRL \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_VALID_SIGNED", "\uc720\ud6a8\ud55c \uc11c\uba85\ub41c \uc778\uc99d\uc11c \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_IMPORT_CRL", "CRL \uac00\uc838\uc624\uae30"}, {"CZ_IMPORT_CRL_FULL", "\uc778\uc99d\uc11c \ud574\uc9c0 \ubaa9\ub85d \uac00\uc838\uc624\uae30"}, {"CZ_IMPORT_CRL_FILE", "PEM(.pem)\uc774\ub098 DER(.der \ub610\ub294 .crl) \uc778\ucf54\ub529 \ud30c\uc77c\uc5d0\uc11c CRL \uc9c1\uc811 \uac00\uc838\uc624\uae30"}, {"CZ_SEL_CRL_FILE", "\uac00\uc838\uc62c CRL \ud30c\uc77c \uc120\ud0dd"}, {"CZ_AUTO_IMPORT_CRL", "\uc815\uae30\uc801\uc73c\ub85c HTTP\ub97c \ud1b5\ud55c CRL \uc790\ub3d9 \uac00\uc838\uc624\uae30"}, {"CZ_CRL_LOC", "CRL \uc704\uce58 \uc785\ub825(URL)"}, {"CZ_INVALIDATE_CERTS", "CRL \uac00\uc838\uc624\uae30 \ub610\ub294 \ucc98\ub9ac \uc2e4\ud328 \uc2dc\uc5d0 \uc778\uc99d\uc11c \ubc0f \ubcf4\uc548 \uc5f0\uacb0 \ubb34\ud6a8\ud654"}, {"CZ_CMP_REQUIRE", "\uc778\uc99d\uc11c\ub97c \ub0b4\ubcf4\ub0b4\ub824\uba74 \uc778\uc99d\uc11c \uad00\ub9ac \uc554\ud638\uac00 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_CERT_NAME_REQUIRE", "PKCS10\uc744 \uc0dd\uc131\ud558\ub824\uba74 \uc778\uc99d\uc11c \uc774\ub984\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_CERT_NAME_IN_USE", "\uc778\uc99d\uc11c \uc774\ub984\uc774 \uc774\ubbf8 \uc0ac\uc6a9 \uc911\uc785\ub2c8\ub2e4. \ub2e4\ub978 \uc774\ub984\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SUB_DN_REQUIRE", "PKCS10\uc744 \uc0dd\uc131\ud558\ub824\uba74 \ud558\ub098 \uc774\uc0c1\uc758 \uc8fc\uccb4 \uc774\ub984 \ud2b9\uc131\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_CN_TWO_CHARS", "\uad6d\uac00 \uc774\ub984\uc740 2\uc790\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"CZ_DOMAIN_INVALID", "\uc8fc\uccb4 \ub300\uccb4 \uc774\ub984\uc5d0\uc11c \ub3c4\uba54\uc778 \uc774\ub984\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CZ_IP_INVALID", "\uc8fc\uccb4 \ub300\uccb4 \uc774\ub984\uc5d0\uc11c IP \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CZ_EMAIL_INVALID", "\uc8fc\uccb4 \ub300\uccb4 \uc774\ub984\uc5d0\uc11c \uc804\uc790 \uba54\uc77c \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CZ_CERT_REQ", "\uc778\uc99d\uc11c \uc11c\uba85 \uc694\uccad"}, {"CZ_GEN_CERT_REQ", "\uc778\uc99d\uc11c \uc11c\uba85 \uc694\uccad \uc0dd\uc131"}, {"CZ_CERT_ALIAS", "\uc778\uc99d\uc11c \ubcc4\uce6d"}, {"CZ_COUNTRY", "\uad6d\uac00"}, {"CZ_STATE", "\uc2dc/\ub3c4"}, {"CZ_LOC", "\uad6c \ub610\ub294 \uc2dc"}, {"CZ_COMPANY", "\ud68c\uc0ac \ub610\ub294 \uc870\uc9c1"}, {"CZ_LOC_CITY", "\uad6c/\uad70/\uc2dc"}, {"CZ_DEPT", "\ubd80\uc11c"}, {"CZ_GROUP", "\uadf8\ub8f9"}, {"CZ_TEAM", "\ud300"}, {"CZ_CNAME", "\uc77c\ubc18 \uc774\ub984"}, {"CZ_SN", "\uc77c\ub828 \ubc88\ud638"}, {"CZ_EMAIL", "\uc804\uc790 \uba54\uc77c \uc8fc\uc18c"}, {"CZ_SUB_ALT_NAME", "\uc8fc\uccb4 \ub300\uccb4 \uc774\ub984(\uc635\uc158)"}, {"CZ_DOMAIN_NAME", "\ub3c4\uba54\uc778 \uc774\ub984"}, {"CZ_IPV4", "IPv4 \uc8fc\uc18c"}, {"CZ_SUB_KEY_TYPE", "\uc8fc\uccb4 \ud0a4 \uc720\ud615"}, {"CZ_SIG_ALGORITHM", "\uc11c\uba85 \uc54c\uace0\ub9ac\uc998"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "\uc8fc\uccb4 \ud0a4 \ud06c\uae30"}, {"CZ_NO_CERTS", "\uc778\uc99d\uc11c \uc5c6\uc74c"}, {"IMPORT", "\uac00\uc838\uc624\uae30"}, {"CZ_SCEP_CONFIG", "SCEP \uad6c\uc131"}, {"CZ_CSR_LIST", "CSR \ubaa9\ub85d"}, {"CZ_NO_CSR", "CSR \uc5c6\uc74c"}, {"CZ_CHALLENGE_PWD", "\ucc4c\ub9b0\uc9c0 \uc554\ud638(\uc635\uc158)"}, {"CZ_CA_URL", "CA URL"}, {"CZ_REQ_COUNT", "\uc694\uccad \uc218"}, {"CZ_POLL_INTERVAL", "\ud3f4\ub9c1 \uac04\uaca9(\ucd08)"}, {"CZ_POLL_TIME", "\ucd5c\ub300 \ud3f4\ub9c1 \uc2dc\uac04(\ucd08)"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA URL\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CZ_GEN_CSR", "\uc0ac\uc6a9 \uac00\ub2a5\ud55c CSR\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 CSR\uc744 \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624."}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "\uc120\ud0dd\ud55c \ud544\ud130\uc758 \ubaa8\ub4e0 \uc124\uc815\uc774 \uc120\ud0dd\ud55c \uadf8\ub8f9 \ub178\ub4dc \uc544\ub798\uc758 \ubaa8\ub4e0 \uc7a5\uce58\uc5d0 \ud478\uc2dc\ub429\ub2c8\ub2e4."}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "\uc120\ud0dd\ud55c \ud544\ud130\uc758 \ubaa8\ub4e0 \uc124\uc815\uc740 \uc120\ud0dd\ud55c \uc7a5\uce58\uc758 \uc0c1\uc704 \ub178\ub4dc\uc5d0\uc11c \uc0c1\uc18d\ub429\ub2c8\ub2e4."}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "\uc120\ud0dd\ud55c \ud544\ud130\uc758 \ubaa8\ub4e0 \uc124\uc815\uc774 \uc120\ud0dd\ud55c \uadf8\ub8f9 \ub178\ub4dc\uc5d0\uc11c \uc0c1\uc704 \ub178\ub4dc\ub85c \ud478\uc2dc\ub429\ub2c8\ub2e4.<br>\uc0c1\uc704 \ub178\ub4dc\uc758 \ubaa8\ub4e0 \uc7a5\uce58\uc5d0 \uc124\uc815\uc744 \uc801\uc6a9\ud558\ub824\uba74(\uc120\ud0dd\ud55c \ub178\ub4dc \ubc0f \ud574\ub2f9 \ud558\uc704 \ud56d\ubaa9 \uc81c\uc678) [\ubbf8\ub9ac \ubcf4\uae30] \ud654\uba74\uc5d0\uc11c \uc801\uc808\ud55c \ud56d\ubaa9\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "\uc120\ud0dd\ud55c \ud544\ud130\uc758 \ubaa8\ub4e0 \uc124\uc815\uc774 \uc120\ud0dd\ud55c \uc7a5\uce58\uc5d0\uc11c \uc0c1\uc704 \ub178\ub4dc\ub85c \ud478\uc2dc\ub429\ub2c8\ub2e4.<br>\uc0c1\uc704 \ub178\ub4dc\uc758 \ubaa8\ub4e0 \uc7a5\uce58\uc5d0 \uc124\uc815\uc744 \uc801\uc6a9\ud558\ub824\uba74(\uc120\ud0dd\ud55c \uc7a5\uce58 \uc81c\uc678) [\ubbf8\ub9ac \ubcf4\uae30] \ud654\uba74\uc5d0\uc11c \uc801\uc808\ud55c \ud56d\ubaa9\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"WS_URI_HEADER", "\uacf5\uc6a9 URI"}, {"WS_URI_INSTRUCTIONS", "\uc774 \ubc30\ud3ec\uc758 \uacf5\uc6a9 \uc11c\ubc84 \uc774\ub984\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624.  \uc774 \uc774\ub984\uc740 \uc774 \uc11c\ubc84\uc758 \uc6f9 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\uba70 \ud3ec\ud568\ub41c \uad50\ucc28 \ub9c1\ud06c\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4."}, {"WS_URI_NOTE", "\ucc38\uace0: \uacf5\uc6a9 \uc11c\ubc84 \ud3ec\ud2b8\ub294 \uacf5\uc6a9 \ub3c4\uba54\uc778\uc5d0\uc11c GMS \uc6f9 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. GMS\uac00 \uc6f9 \uc11c\ube44\uc2a4\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ud558\ub294 \ud3ec\ud2b8\ub97c \uc218\uc815\ud558\ub824\uba74 [System Interface(\uc2dc\uc2a4\ud15c \uc778\ud130\ud398\uc774\uc2a4)]/[Deployment(\ubc30\ud3ec)]/[\uc124\uc815]\uc73c\ub85c \uc774\ub3d9\ud558\uc2ed\uc2dc\uc624."}, {"WS_DEPLOYMENT_HEADER", "GMS \ubc30\ud3ec"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "\uc6f9 \uc11c\ube44\uc2a4\ub97c \uad6c\uc131\ud560 \ubc30\ud3ec\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"WS_DEPLOYMENT_ERROR", "\ud604\uc7ac \ub77c\uc774\uc120\uc2a4\uac00 \uc788\ub294 \ubc30\ud3ec \uc911 \ud65c\uc131 \uc0c1\ud0dc\uc778 \ubc30\ud3ec\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"WS_STATUS_HEADER", "\uc6f9 \uc11c\ube44\uc2a4"}, {"WS_SERVICES_ERROR", "\uc774 \ubc30\ud3ec\uc5d0 \ub300\ud574 \uc6f9 \uc11c\ube44\uc2a4\uac00 \uc5c6\uc74c"}, {"WS_DEPLOYMENTS_EMPTY", "\ubc30\ud3ec \ubaa9\ub85d\uc744 \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.  GMSVP\uc758 \uc774 \uc778\uc2a4\ud134\uc2a4\ub97c \ub4f1\ub85d\ud558\uc2ed\uc2dc\uc624."}, {"WS_DISTRIBUTED_HEADER", "\ubd84\uc0b0 \uc778\uc2a4\ud134\uc2a4"}, {"WS_DISTRIBUTED_EMPTY", "\uc774 \uc11c\ubc84\uc5d0 \ub300\ud574 \uad6c\uc131\ub41c \ubd84\uc0b0 \uc778\uc2a4\ud134\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"HM_APPLY_TEMPLATE_TASK_DESC", "\ud15c\ud50c\ub9bf \uc801\uc6a9: "}, {"HM_APPLY_RECORDING_TASK_DESC", "\uae30\ub85d \uc801\uc6a9: "}, {"LM_CONFIRM_DELETE_RULE", "\uc120\ud0dd\ud55c \uaddc\uce59\uc744 \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LM_SUCCESS_DELETE_RULE", "\uaddc\uce59 \uc0ad\uc81c \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_FAILURE_DELETE_RULE", "\uc120\ud0dd\ud55c \uaddc\uce59\uc744 \uc0ad\uc81c\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_SUCCESS_UPDATE_RULE", "\uaddc\uce59 \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_FAILURE_UPDATE_RULE", "\uaddc\uce59 \uc5c5\ub370\uc774\ud2b8\ub97c \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_DUPLICATE_STMT_NAME", "\uc774\ub984\uc774 \uac19\uc740 \uaddc\uce59\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4.\\n\uaddc\uce59\uc5d0 \ub300\ud574 \uace0\uc720\ud55c \uc774\ub984\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_DESTINATION_EMPTY", "\ub300\uc0c1\uc774 \ube44\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\\n\uc720\ud6a8\ud55c \ud56d\ubaa9\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "\ub300\uc0c1\uc740 256\uc790\ub97c \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\\n\uc720\ud6a8\ud55c \ud56d\ubaa9\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "\ub300\uc0c1 \uac12\uc740 \uc120\ud0dd\ub41c \uc720\ud615\uc5d0 \ub300\ud574 \uc9c0\uc815\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\uc720\ud6a8\ud55c \ud56d\ubaa9\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "\uc77c\uc815\uc740 \ubaa8\ub4e0 \ub300\uc0c1\uc5d0 \ud560\ub2f9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\uc720\ud6a8\ud55c \uc77c\uc815 \ub610\ub294 \uc77c\uc815 \uadf8\ub8f9\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "\uc774 \ud398\uc774\uc9c0\uc5d0\uc11c \uc120\ud0dd\ud55c \ub300\uc0c1\uc758 \ub3c4\uba54\uc778\uc774\\n\uc774\uc804 \ud398\uc774\uc9c0\uc5d0\uc11c \uc120\ud0dd\ud55c \uc2ec\uac01\ub3c4\uc758 \ub3c4\uba54\uc778\uacfc \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\\n\\n\uac1c\uccb4\ub294 \uac19\uc740 \ub3c4\uba54\uc778\uc5d0\uc11c \uc120\ud0dd\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\uc120\ud0dd\ud55c \uc2ec\uac01\ub3c4\uac00 \uc798\ubabb\ub41c \uacbd\uc6b0 \ub4a4\ub85c \uc774\ub3d9\ud55c \ud6c4 \ud574\ub2f9 \ub3c4\uba54\uc778\uc5d0\uc11c \uc2ec\uac01\ub3c4\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624.\\n\uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc2ec\uac01\ub3c4\uc640 \uc77c\uce58\ud558\ub294 \ub3c4\uba54\uc778\uc5d0\uc11c \ub300\uc0c1\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "\uc774 \ud398\uc774\uc9c0\uc5d0\uc11c \uc120\ud0dd\ud55c \uc77c\uc815\uc758 \ub3c4\uba54\uc778\uc774\\n\uc774\uc804 \ud398\uc774\uc9c0\uc5d0\uc11c \uc120\ud0dd\ud55c \uc2ec\uac01\ub3c4\uc758 \ub3c4\uba54\uc778\uacfc \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\\n\\n\uac1c\uccb4\ub294 \uac19\uc740 \ub3c4\uba54\uc778\uc5d0\uc11c \uc120\ud0dd\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\uc120\ud0dd\ud55c \uc2ec\uac01\ub3c4\uac00 \uc798\ubabb\ub41c \uacbd\uc6b0 \ub4a4\ub85c \uc774\ub3d9\ud55c \ud6c4 \ud574\ub2f9 \ub3c4\uba54\uc778\uc5d0\uc11c \uc2ec\uac01\ub3c4\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624.\\n\uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc2ec\uac01\ub3c4\uc640 \uc77c\uce58\ud558\ub294 \ub3c4\uba54\uc778\uc5d0\uc11c \uc77c\uc815\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "\ucee8\ud2b8\ub864 \ub9c9\ub300 \uc0c1\ud0dc \uc124\uc815\uc744 \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "\uc790\ub3d9 \uc2a4\ud06c\ub864 \uc0c1\ud0dc \uc124\uc815\uc744 \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_READER_START_SUCCESS", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\uac00 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_READER_START_FAILURE", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc124\uc815 \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\\n \ucc38\uace0: \uc9c0\uc815\ub41c \ud3ec\ud2b8 \ubc0f \uc804\ub2ec \uc8fc\uc18c\ub294 \ucf58\uc194/\uc6f9 \uc11c\ubc84\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"LM_READER_STOP_SUCCESS", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\uac00 \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_READER_STOP_FAILURE", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\ub97c \uc911\uc9c0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LM_EC_DISABLED", "\ud604\uc7ac Syslog \uc804\ub2ec\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.<br>\ubaa8\ub2c8\ud130\ub9c1\ud558\ub824\uba74 Syslog\ub97c \uc774\ubca4\ud2b8 \uad00\ub9ac\uc790 \uc11c\ube44\uc2a4\uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4.<br>\ubaa8\ub2c8\ud130\ub9c1\uc744 \uc704\ud574 Syslog \uc804\ub2ec\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \uc704\uc758 \ucee8\ud2b8\ub864 \ub9c9\ub300\uc5d0\uc11c [\uc124\uc815]\uc744 \ud074\ub9ad\ud558\uc2ed\uc2dc\uc624."}, {"LM_READER_NO_ALERT_MSG", "\ud310\ub3c5\uae30\uc5d0\uc11c \uc218\uc2e0\ub41c \uc0c8 \uacbd\uace0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.<br>\ucc38\uace0: \ubb38\uc81c\uac00 \uacc4\uc18d\ub418\uba74 [Monitor Settings(\ubaa8\ub2c8\ud130\ub9c1 \uc124\uc815)] \ubc0f \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 syslog \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"LM_READER_STOPPED_MSG", "\ud310\ub3c5\uae30\uac00 \ud604\uc7ac \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4.<br>\uc704\uc758 \ucee8\ud2b8\ub864 \ub9c9\ub300\uc5d0\uc11c [\uc2dc\uc791] \ub2e8\ucd94\ub97c \ud074\ub9ad\ud558\uc5ec \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624."}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4/\uc7a5\uce58\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.<br>\uc774 \uc7a5\uce58 \uc911 \ud558\ub098\uc5d0\uc11c \uc804\ub2ec\ub41c syslog\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub824\uba74 \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"LM_READER_ERROR_MSG", "\uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.<br>\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30 \uc218\uc9d1\uc744 \ucc98\ub9ac\ud558\ub294 \ub3d9\uc548 \uc608\uc678\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_READER_SOCKET_ERROR_MSG", "\uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.<br>\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud558\ub294 \ub3d9\uc548 \uc608\uc678\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.<br>\uc608\uc678 \uc138\ubd80 \uc815\ubcf4: "}, {"LM_FAILURE_UPDATE_SETTINGS", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130 \uc124\uc815 \uc5c5\ub370\uc774\ud2b8\ub97c \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_SUCCESS_UPDATE_SETTINGS", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130 \uc124\uc815\uc744 \uc5c5\ub370\uc774\ud2b8\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_WARN_ENABLE_EC", "\uc774\ubca4\ud2b8 \uad00\ub9ac\uc790\ub294 Syslog \uc218\uc9d1\uae30\uc5d0\uc11c \uc804\ub2ec\ub41c syslog\ub97c \ubaa8\ub2c8\ud130\ub9c1\uc5d0 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 syslog\ub294 \uc815\uc758\ub41c \uaddc\uce59\uc744 \ubc14\ud0d5\uc73c\ub85c \uc774\ubca4\ud2b8\ub97c \uc2dd\ubcc4\ud558\uae30 \uc704\ud574 \uc5d4\uc9c4\uc5d0 \uc804\uc1a1\ub429\ub2c8\ub2e4.\\n\\n\ucc38\uace0: \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \ubc30\ud3ec \uc704\uce58\uc5d0 \uc788\ub294 \ubaa8\ub4e0 Syslog \uc218\uc9d1\uae30 \uc11c\ube44\uc2a4\uac00 \uc218\uc2e0\ud55c syslog\ub97c \uc911\uc559 \uc774\ubca4\ud2b8 \uad00\ub9ac\uc790 \uc11c\ube44\uc2a4\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc774\ubca4\ud2b8 \ucc98\ub9ac\ub97c \uc704\ud574 \ubaa8\ub4e0 \uba54\uc2dc\uc9c0\uac00 Syslog \uc218\uc9d1\uae30\uc5d0\uc11c \ubcf5\uc81c\ub418\ubbc0\ub85c \ub124\ud2b8\uc6cc\ud06c \uac04 syslog \ud2b8\ub798\ud53d\uc774 \uc99d\uac00\ud569\ub2c8\ub2e4."}, {"LM_STMT_CHANGED_MSG_1", "\uc120\ud0dd\ud55c \uaddc\uce59\uc744 \ubcc0\uacbd\ud588\uc2b5\ub2c8\ub2e4"}, {"LM_STMT_CHANGED_MSG_2", ".\\n\uc774\uc804 \ud654\uba74(\uaddc\uce59 \ubaa9\ub85d \ud398\uc774\uc9c0)\uc73c\ub85c \uc774\ub3d9\ud558\uba74 \ubcc0\uacbd \ub0b4\uc6a9\uc774 \uc190\uc2e4\ub429\ub2c8\ub2e4.\\n[\ud655\uc778]\uc744 \ub20c\ub7ec [\uaddc\uce59 \ubaa9\ub85d] \ud398\uc774\uc9c0\ub85c \uc774\ub3d9\ud558\uac70\ub098 [\ucde8\uc18c]\ub97c \ub20c\ub7ec \uc774 \uaddc\uce59\uc744 \uacc4\uc18d\ud574\uc11c \ud3b8\uc9d1\ud558\uc2ed\uc2dc\uc624."}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "\ub3c4\ud0b9 \uc0c1\ud0dc \uc5c5\ub370\uc774\ud2b8\ub97c \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "\uc774 \ud654\uba74\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LM_DELETE_STMT_EMPTY", "\uc0ad\uc81c\ub97c \uc704\ud55c \ud558\ub098 \uc774\uc0c1\uc758 \uaddc\uce59\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_STMT_RULE_EMPTY", "\uaddc\uce59 \uc720\ud615\uc744 \uc120\ud0dd\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\\n\uaddc\uce59 \uc720\ud615\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_STMT_RULE_DUPLICATE", "\ub3d9\uc77c\ud55c \uaddc\uce59 \uc720\ud615 \ubc0f \ud3b8\uc9d1\uae30 \uc18d\uc131\uc744 \uac00\uc9c4 \uaddc\uce59\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4.\\n\uc774 \uaddc\uce59\uc5d0 \ub300\ud55c \uace0\uc720\ud55c \uaddc\uce59 \uc18d\uc131\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "\ud310\ub3c5\uae30\uc5d0 \ub300\ud55c \uc804\ub2ec \ud3ec\ud2b8\uac00 \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\\n\ud310\ub3c5\uae30\ub97c \ub2e4\uc2dc \uc2dc\uc791\ud558\uae30\uae4c\uc9c0 \uba87 \ucd08 \uc815\ub3c4 \uc18c\uc694\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"LM_NO_RULE_EDITABLE", "\uc120\ud0dd\ud55c \uadf8\ub8f9 \ub0b4 \ud3b8\uc9d1 \uac00\ub2a5\ud55c \uaddc\uce59 \uc720\ud615\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.\n\ub2e4\ub978 \uadf8\ub8f9/\uaddc\uce59 \uc720\ud615\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_DISABLE_STMT_EMPTY", "\uc0ac\uc6a9/\uc0ac\uc6a9 \uc548 \ud568 \uc791\uc5c5\uc744 \uc704\ud55c \ud558\ub098 \uc774\uc0c1\uc758 \uaddc\uce59\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_SUCCESS_DISABLE_RULE", "\uaddc\uce59 \uc0ac\uc6a9/\uc0ac\uc6a9 \uc548 \ud568 \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_FAILURE_DISABLE_RULE", "\uc120\ud0dd\ud55c \uaddc\uce59\uc744 \uc0ac\uc6a9/\uc0ac\uc6a9 \uc548 \ud568 \uc124\uc815\uc744 \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_EDIT_RULE_MSG_1", "\ub2e4\uc74c \uaddc\uce59\uc744 \ud3b8\uc9d1\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4.\\n"}, {"LM_EDIT_RULE_MSG_2", "\\n\uc120\ud0dd\ud55c \ubaa9\ub85d\uc5d0 \ud3b8\uc9d1\ud560 \uc218 \uc5c6\ub294 \uc77c\ubd80 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\uacc4\uc18d\ud558\ub824\uba74 \ub2e4\ub978 \uaddc\uce59\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_EDIT_RULE_MSG_3", "\\n\uc120\ud0dd\ud55c \ubaa9\ub85d\uc5d0 *\uac00 \ud45c\uc2dc\ub41c, \ud3b8\uc9d1\ud560 \uc218 \uc5c6\ub294 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\ub098\uba38\uc9c0 \uaddc\uce59\uc744 \uacc4\uc18d\ud574\uc11c \ud3b8\uc9d1\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LM_DELETE_RULE_MSG_1", "\ub2e4\uc74c \uaddc\uce59\uc744 \uc0ad\uc81c\ud558\uae30 \uc704\ud574 \uc120\ud0dd\ud568:\\n"}, {"LM_DELETE_RULE_MSG_2", "\\n\uc120\ud0dd\ud55c \ubaa9\ub85d\uc5d0 \uc0ad\uc81c\ud560 \uc218 \uc5c6\ub294 \uc77c\ubd80 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\uacc4\uc18d\ud558\ub824\uba74 \ub2e4\ub978 \uaddc\uce59\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_DELETE_RULE_MSG_3", "\\n\uc120\ud0dd\ud55c \ubaa9\ub85d\uc5d0 *\uac00 \ud45c\uc2dc\ub41c, \uc0ad\uc81c\ud560 \uc218 \uc5c6\ub294 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\ub098\uba38\uc9c0 \uaddc\uce59\uc744 \uacc4\uc18d\ud574\uc11c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LM_DELETE_RULE_MSG_4", "\\n\uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"MASKED_LIVEMONITOR_MESSAGE", "\uacbd\uace0 \uba54\uc2dc\uc9c0\uac00 \uac15\uc81c \uc801\uc6a9\ub41c \uac1c\uc778 \uc815\ubcf4 \ucde8\uae09 \ubc29\uce68\uc744 \ubc14\ud0d5\uc73c\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c8\uc2a4\ud0b9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"MASKED_ADDITIONAL_INFORMATION", "\ucd94\uac00 \uc815\ubcf4\uac00 \uac15\uc81c \uc801\uc6a9\ub41c \uac1c\uc778 \uc815\ubcf4 \ucde8\uae09 \ubc29\uce68\uc744 \ubc14\ud0d5\uc73c\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c8\uc2a4\ud0b9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DSB_NONENGFW_ALERT_TITLE", "\ud38c\uc6e8\uc5b4 \ubc84\uc804 \uacbd\uace0!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "\uc774 GMS\uc5d0\uc11c \uc601\uc5b4 \uc774\uc678\uc758 \ud38c\uc6e8\uc5b4\ub97c \uc2e4\ud589\ud558\ub294 SonicOS \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad00\ub9ac\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {"DSB_NONENGFW_ALERT_MSGPART2", "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \uc601\uc5b4 \uc774\uc678\uc758 \ubb38\uc790\ub85c \uc815\uc758\ub41c \uac1c\uccb4\uc640 \uc815\ucc45\uc774 GMS UI\uc5d0\uc11c \uc81c\ub300\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac1c\uccb4 \ubc0f \uc815\ucc45\uc744 \uc218\uc815\ud558\uace0 \uc774\ub7ec\ud55c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub85c \ud478\uc2dc\ud558\uba74 \uc608\uc0c1\uce58 \ubabb\ud55c \uacb0\uacfc\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_STARTED", "Syslog \ud310\ub3c5\uae30(\ub77c\uc774\ube0c Syslog \ubaa8\ub2c8\ud130\ub9c1\uc6a9)\uac00 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_START_FAILED", "Syslog \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. Syslog \uc804\ub2ec \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\u00a0\u00a0(\ucc38\uace0: \uc9c0\uc815\ub41c \ud3ec\ud2b8 \ubc0f \uc804\ub2ec \uc8fc\uc18c\ub294 \ucf58\uc194/\uc6f9 \uc11c\ubc84\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.)"}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog \ud310\ub3c5\uae30(\ub77c\uc774\ube0c Syslog \ubaa8\ub2c8\ud130\ub9c1\uc6a9)\uac00 \uc774\ubbf8 \uc2e4\ud589 \uc911\uc785\ub2c8\ub2e4. \ubcc0\uacbd \ub0b4\uc6a9\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_STOPPED", "Syslog \ud310\ub3c5\uae30(\ub77c\uc774\ube0c Syslog \ubaa8\ub2c8\ud130\ub9c1\uc6a9)\uac00 \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog \ud310\ub3c5\uae30(\ub77c\uc774\ube0c Syslog \ubaa8\ub2c8\ud130\ub9c1\uc6a9)\uac00 \uc774\ubbf8 \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ubcc0\uacbd \ub0b4\uc6a9\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "\ud310\ub3c5\uae30\uc5d0\uc11c \uc218\uc2e0\ub41c \uc0c8 syslog\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(\ud310\ub3c5\uae30\uc5d0\uc11c \uacc4\uc18d\ud574\uc11c syslog\ub97c \uc218\uc9d1\ud558\ub824\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.)"}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(\ubb38\uc81c\uac00 \uacc4\uc18d\ub418\uba74 Syslog \ud310\ub3c5\uae30 \uc124\uc815 \ubc0f \ubc29\ud654\ubcbd \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.)"}, {"SYSLOGTAIL_CONFIG_CHECK", "Syslog \ud310\ub3c5\uae30 \uc124\uc815 \ubc0f \ubc29\ud654\ubcbd \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "syslog\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_MODIFY_FILTER", "\uacb0\uacfc\ub97c \ucd5c\uc801\ud654\ud558\ub824\uba74 \ud544\ud130 \ubb38\uc790\uc5f4\uc744 \uc218\uc815\ud574 \ubcf4\uc2ed\uc2dc\uc624."}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(\ucc38\uace0: \uacb0\uacfc\ub97c \ucd5c\uc801\ud654\ud558\ub824\uba74 \uc5ec\ub7ec \ubb38\uc790\uc5f4 \uac04 <b>AND</b> \ub610\ub294 <b>OR</b>\uc744 \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624.)"}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Syslog \ud310\ub3c5\uae30\uac00 \ud604\uc7ac \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_START", "Syslog \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624."}, {"SYSLOGTAIL_ERROR", "\uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_ERROR_MESSAGE", "syslog \uc218\uc9d1\uc744 \ucc98\ub9ac\ud558\ub294 \ub3d9\uc548 \uc608\uc678\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Syslog \uc804\ub2ec\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Syslog \uc804\ub2ec \uc8fc\uc18c \ubc0f \ud3ec\ud2b8\ub97c \uad6c\uc131\ud55c \ud6c4 Syslog \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624."}, {"MASKED_SYSLOG_MESSAGE", "\ub098\uba38\uc9c0 syslog \uba54\uc2dc\uc9c0\uac00 \uac15\uc81c \uc801\uc6a9\ub41c \uac1c\uc778 \uc815\ubcf4 \ucde8\uae09 \ubc29\uce68\uc744 \ubc14\ud0d5\uc73c\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c8\uc2a4\ud0b9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"EVENT_ALERTS_SEARCH", "\uacbd\uace0 \uac80\uc0c9"}, {"EVENT_ALERTS_DELETE", "\uacbd\uace0 \uc0ad\uc81c"}, {"EVENT_ALERTS_ENABLE_DISABLE", "\uacbd\uace0 \uc0ac\uc6a9/\uc0ac\uc6a9 \uc548 \ud568"}, {"EVENT_ALERTS_ADD", "\uacbd\uace0 \ucd94\uac00"}, {"EVENT_ALERTS_HEADER", "\uacbd\uace0"}, {"EVENT_ALERTS_ALERT_NAME", "\uc774\ub984"}, {"EVENT_ALERTS_ALERT_TYPE", "\uacbd\uace0 \uc720\ud615"}, {"EVENT_ALERTS_INTERVAL", "\uac04\uaca9"}, {"EVENT_ALERTS_DEST_SCHED", "\ub300\uc0c1/\uc77c\uc815"}, {"EVENT_ALERTS_ENABLED", "\uc0ac\uc6a9"}, {"EVENT_ALERTS_DOMAIN", "\ub3c4\uba54\uc778"}, {"EVENT_ALERTS_CONFIGURE", "\uad6c\uc131"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "\uacbd\uace0 \uc5c6\uc74c"}, {"DTF_ANY", "\ud56d\uc0c1"}, {"DTF_ADD", "\uc7a5\uce58 \ucd94\uac00"}, {"DTF_EXECUTE", "\uc2e4\ud589"}, {"DTF_ENABLED", "\uc0ac\uc6a9"}, {"DTF_SEARCH", "\uae30\ubcf8 \uc791\uc5c5 \uac80\uc0c9"}, {"DTF_NOT_FOUND", "\uae30\ubcf8 \uc791\uc5c5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DTF_DT", "\uae30\ubcf8 \uc791\uc5c5"}, {"DTF_DESC", "\uc124\uba85"}, {"DTF_TOU", "\uc7a5\uce58 \uc720\ud615"}, {"DTF_DURING", "\ub2e4\uc74c \ub3d9\uc548 \ub9cc\ub4e4\uc5b4\uc9c4 \uc791\uc5c5"}, {"DTF_NO_DTS", "\uc2e4\ud589\ud558\ub3c4\ub85d \uc120\ud0dd\ub41c \uae30\ubcf8 \uc791\uc5c5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DTF_EXEC", "\uc774 \uae30\ubcf8 \uc791\uc5c5\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4."}, {"DTF_NO_DISABLE", "\uc774 \uae30\ubcf8 \uc791\uc5c5\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DTF_NO_EXEC", "\uc774 \uae30\ubcf8 \uc791\uc5c5\uc744 \uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DTF_SEL_UNITS", "\uc7a5\uce58 \uc120\ud0dd"}, {"DTF_EXEC_METHOD", "\uc2e4\ud589 \ubc29\ubc95"}, {"DTF_ATLEAST_ONE", "\uc791\uc5c5\uc744 \uc2e4\ud589\ud560 \ud558\ub098 \uc774\uc0c1\uc758 \uc7a5\uce58\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"DTF_EXEC_ALL", "\uc2dc\uc2a4\ud15c\uc758 \ubaa8\ub4e0 \uc7a5\uce58\uc5d0\uc11c \uae30\ubcf8 \uc791\uc5c5 \uc2e4\ud589"}, {"DTF_EXEC_FOLL", "\uc120\ud0dd\ud55c \ub2e4\uc74c \uc7a5\uce58\uc5d0\uc11c \uae30\ubcf8 \uc791\uc5c5 \uc2e4\ud589"}, {"DTF_REAPPLY_1", "\uc774\uc804\uc5d0 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub9cc \uc2e4\ud589"}, {"DTF_REAPPLY_2", "\uc120\ud0dd\ud55c \uc7a5\uce58\uc5d0 \uc774\uc804\uc5d0 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc740 \uc791\uc5c5\ub9cc \uc2e4\ud589\ub429\ub2c8\ub2e4."}, {"DTF_REAPPLY_3", "\ud574\ub2f9 \uc7a5\uce58\uc5d0 \ub300\ud574 \uc774\ubbf8 \uc2e4\ud589\ub41c \uae30\ubcf8 \uc791\uc5c5\uc740 \ubb34\uc2dc\ub429\ub2c8\ub2e4."}, {"DTF_EXEC_1", "\uc774\uc804\uc5d0 \uc801\uc6a9\ub41c \uacbd\uc6b0\uc5d0\ub3c4 \uc2e4\ud589"}, {"DTF_EXEC_2", "\uc774\uc804\uc5d0 \uc801\uc6a9\ub41c \uc791\uc5c5\uc774\ub354\ub77c\ub3c4 \uc120\ud0dd\ud55c \ubaa8\ub4e0 \uc791\uc5c5\uc774 \uc120\ud0dd\ud55c \uc7a5\uce58\uc5d0\uc11c \ub2e4\uc2dc \uc2e4\ud589\ub429\ub2c8\ub2e4."}, {"DTF_ENABLE_SUCCESS", "\uae30\ubcf8 \uc791\uc5c5 \uc120\ud0dd\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DTF_ENABLE_FAIL", "\uae30\ubcf8 \uc791\uc5c5 \uc120\ud0dd\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"DTF_SCHEDULE_SUCCESS", "\uae30\ubcf8 \uc791\uc5c5\uc774 \uc2e4\ud589\ud558\ub3c4\ub85d \uc608\uc57d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DTF_SCHEDULE_FAIL", "\uc120\ud0dd\ud55c \uc791\uc5c5\uc744 \uc801\uc6a9\ud560 \uc218 \uc5c6\uac70\ub098 \uc774 \uc791\uc5c5\uc774 \uc774\ubbf8 \uc2e4\ud589\ub418\uc5c8\uc73c\ubbc0\ub85c \uae30\ubcf8 \uc791\uc5c5\uc774 \uc608\uc57d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_HEADER", "\uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9 \uc124\uc815"}, {"AUTOASSIGN_AGENT_MSG_1", " \uc5d0\uc11c \uad00\ub9ac, \ubcf4\uace0 \ubc0f \ubaa8\ub2c8\ud130\ub9c1\uc6a9 \uc7a5\uce58\ub97c \uc18c\uc720\ud55c \uc5d0\uc774\uc804\ud2b8\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc5d0\uc774\uc804\ud2b8 \uc790\ub3d9 \ud560\ub2f9\uc740 \ub9ac\uc18c\uc2a4 \ud560\ub2f9, \ucd5c\uc801\ud654\ub41c \uc131\ub2a5, \uc801\uc808\ud55c \uc800\uc7a5\uc18c \ubc0f \uace0 \uac00\uc6a9\uc131\uc744 \uc704\ud574 \uade0\ud615\uc744 \uade0\ub4f1\ud558\uac8c \uc720\uc9c0\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 \uc7a5\uce58 \ucd94\uac00 \uc791\uc5c5 \ub3c4\uc911 \uc120\ud0dd\ub41c \uad00\ub9ac \ubaa8\ub378\uc744 \ud1a0\ub300\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "\uc0ac\uc6a9\uc790\ub294 <i>\uc7a5\uce58 \uc218\uc815</i> \ub300\ud654 \uc0c1\uc790\uc5d0\uc11c \uc5d0\uc774\uc804\ud2b8\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_MSG_2", "\uc0ac\uc6a9\uc790\ub294 <i>\uc7a5\uce58 \uc218\uc815</i> \ub300\ud654 \uc0c1\uc790\ub098 <i>\uc5d0\uc774\uc804\ud2b8 \ub2e4\uc2dc \ud560\ub2f9</i> \uc791\uc5c5\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5d0\uc774\uc804\ud2b8\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\uae30\uc874 \ud130\ub110 \ub610\ub294 LAN, SSL \uad00\ub9ac \ubaa8\ub4dc\ub9cc: \uc790\ub3d9 \ud560\ub2f9\uc740 <i>\uae30\uc874 \ud130\ub110</i> \ubc0f <i>SSL</i> \ubaa8\ub4dc\uc5d0\ub9cc \uc801\uc6a9\ub418\uba70 <i>\uad00\ub9ac \ud130\ub110</i>\uc5d0\ub294 \uc218\ub3d9\uc73c\ub85c \ud560\ub2f9\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_MSG_ALL", "\ubaa8\ub4e0 \uad00\ub9ac \ubaa8\ub4dc: \uc790\ub3d9 \ud560\ub2f9\uc740 \ubaa8\ub4e0 \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. <i>\uad00\ub9ac \ud130\ub110</i> \ubaa8\ub4dc\uc758 \uacbd\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc124\uc815\uc774 \uad00\ub9ac\ub41c \uc7a5\uce58\uc5d0\uc11c \uad6c\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \uc790\ub3d9 \ud560\ub2f9\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5c8\uc74c"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \uc790\ub3d9 \ud560\ub2f9\uc774 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ub418\uc5c8\uc74c"}, {"AUTOASSIGN_AGENT_ENABLE", "\uc790\ub3d9\uc73c\ub85c \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9 \uc0ac\uc6a9"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL \ubc0f \uae30\uc874 \ud130\ub110 \ub610\ub294 LAN \uc0ac\uc6a9"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "\ubaa8\ub450"}, {"TEMPLATE_SETTINGS_TITLE", "[KR]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[KR]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[KR]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[KR]Apply Default Configuration"}, {"CUI_NO_FS", "Flow \uc11c\ubc84\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "KR The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "KR The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\uad6c\uc131\uc744 \ubcc0\uacbd\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LOGCONFIG_SECTITLE_2", "\ub85c\uadf8 \uba54\uc2dc\uc9c0"}, {"LOGCONFIG_DELLABEL", "\ub2e4\uc74c\ubcf4\ub2e4 \uc624\ub798\ub41c \ub85c\uadf8 \uc0ad\uc81c:"}, {"LOGCONFIG_MONTH", "\uc6d4"}, {"LOGCONFIG_DAY", "\uc77c"}, {"LOGCONFIG_YEAR", "\ub144"}, {"LOGCONFIG_FORLABEL", "\ub300\uc0c1"}, {"LOGCONFIG_DOMAIN", "\ub3c4\uba54\uc778"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "\uc624\ub958: \uad6c\uc131\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\uc77c\uc815\uc744 \ubcc0\uacbd\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\ucd5c\ub300 \ub85c\uadf8 \ud30c\uc77c \uc218\ub97c \ubcc0\uacbd\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "\ubcf4\uad00 "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " \ub85c\uadf8 \uba54\uc2dc\uc9c0"}, {"APPLOG_CONFIG_DELETE_MSG_1", "\ub85c\uadf8\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc218\ud589\ub41c \ud65c\ub3d9\uc744 \uc27d\uac8c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud65c\ub3d9\uc740 \uc0ac\uc6a9\uc790 \uc2dc\uc791 \uc791\uc5c5\uc5d0 \uc9c1\uc811 \ub610\ub294 \uac04\uc811\uc801\uc73c\ub85c \uc5f0\uad00\ub418\uac70\ub098 \uc2dc\uc2a4\ud15c \uc2dc\uc791 \uc791\uc5c5\uc5d0 \ub530\ub77c \uc218\ud589\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub85c\uadf8\ub294 \uac10\uc0ac \ucd94\uc801 \ubc0f \uc900\uc218\ub97c \uc704\ud574 \uc911\uc694\ud560 \ubfd0 \uc544\ub2c8\ub77c \ubb38\uc81c \ud574\uacb0 \uc2dc\uc2a4\ud15c \uc791\uc5c5\uc5d0\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4."}, {"APPLOG_CONFIG_DELETE_MSG_2", "\uc2dc\uc2a4\ud15c\uc5d0 \ub354 \uc774\uc0c1 \uc800\uc7a5\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub294 \ub85c\uadf8\ub294 \uc218\ub3d9\uc73c\ub85c \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc0ad\uc81c \uc791\uc5c5\uc740 \uc77c\ud68c\uc6a9 \uc791\uc5c5\uc73c\ub85c, \uc120\ud0dd\ub41c \uc0ad\uc81c \ub0a0\uc9dc\uc5d0 \ub530\ub77c \uc2e4\ud589\ub429\ub2c8\ub2e4. "}, {"APPLOG_CONFIG_DELETE_MSG_21", "\uc774 \ud654\uba74\uc758 \uc0ad\uc81c \uc791\uc5c5\uc740 \uc21c\uc11c \ubcc0\uacbd\uacfc \uad00\ub828 \uc5c6\ub294 \ub85c\uadf8\ub9cc \uc81c\uac70\ud569\ub2c8\ub2e4."}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "\uc2dc\uc2a4\ud15c\uc5d0 \ub354 \uc774\uc0c1 \uc800\uc7a5\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub294 \ub85c\uadf8\ub294 CSV/HTML \ud615\uc2dd\uc73c\ub85c \ub0b4\ubcf4\ub0b4 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc624\ud504\ub85c\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcf4\uad00 \ud504\ub85c\uc138\uc2a4\ub294 \"\ub85c\uadf8 \ubcf4\uad00 \uc77c\uc815\"\uc5d0 \ub530\ub77c \ub370\uc774\ud130\ub97c \uba3c\uc800 <i>archivedLogs</i> \ub514\ub809\ud130\ub9ac\uc5d0 \ubcf4\uad00\ud55c \ub2e4\uc74c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ad\uc81c\ud569\ub2c8\ub2e4. "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "\ubcf4\uad00 \uc791\uc5c5\uc740 \uc21c\uc11c \ubcc0\uacbd\uacfc \uad00\ub828\ub41c \ub85c\uadf8\ub97c \ud3ec\ud568\ud55c \ubaa8\ub4e0 \ub85c\uadf8\ub97c \ub0b4\ubcf4\ub0b4\uc9c0\ub9cc \uc0ad\uc81c \uc791\uc5c5\uc740 \uc21c\uc11c \ubcc0\uacbd \uad00\ub828 \ud56d\ubaa9\uc5d0 \ub300\ud55c \uc81c\uac70\ub97c \uac74\ub108\ub701\ub2c8\ub2e4."}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "\ucc38\uace0: Windows \uc774\uc678 \ubc30\ud3ec\uc758 \uacbd\uc6b0: \ubcf4\uad00\ub41c \ub85c\uadf8 \ud30c\uc77c\uc744 \ub85c\uceec \ub4dc\ub77c\uc774\ube0c\uc5d0 \uc624\ud504\ub85c\ub4dc\ud558\ub824\uba74 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 > \uc2dc\uc2a4\ud15c > \ud30c\uc77c \uad00\ub9ac\uc790 \ud654\uba74\uc73c\ub85c \uc774\ub3d9\ud569\ub2c8\ub2e4."}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "\ubcf4\uad00 \uc0ac\uc6a9"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "\uc720\uc9c0 "}, {"APPLOG_CONFIG_ARCHIVE_For", " \ub300\uc0c1:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "\ucd5c\ub300 \ub85c\uadf8 \uba54\uc2dc\uc9c0 \ud30c\uc77c \uc218:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "\ubcf4\uad00 \ud615\uc2dd:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "\ubcf4\uad00\uc5d0 \ub300\ud55c \uc124\uc815"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "\ub85c\uadf8 \uba54\uc2dc\uc9c0\uac00 \uc5c5\ub370\uc774\ud2b8\ub428"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "\ub2e4\uc74c\uc758 GMS \ub85c\uadf8 \uba54\uc2dc\uc9c0 \ubcf4\uad00"}, {"WF_SETTINGS_TITLE", "\uc124\uc815"}, {"WF_SETTINGS_MSG_1", "\uc6cc\ud06c\ud50c\ub85c\uc6b0\ub294 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ud558\ub098 \uc774\uc0c1\uc758 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uad6c\uc131 \ubcc0\uacbd\uc744 \uac10\ub3c5\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc81c\uc548\ub41c \ubcc0\uacbd \ub0b4\uc6a9\uc744 \uac80\ud1a0\ud558\uc5ec \ud53c\ub4dc\ubc31\uc744 \uc81c\uacf5\ud558\uace0, \ubaa8\ub4e0 \uc791\uc5c5\uc5d0 \ub300\ud574 \uc18c\uc720\uad8c\uc744 \ud560\ub2f9\ud558\uace0, \ucc45\uc784\uc744 \ubd80\uc5ec\ud560 \uc218 \uc788\uc73c\uba70 \uc774\ub7ec\ud55c \ubaa8\ub4e0 \uc218\ud589 \uc791\uc5c5\uc5d0\ub294 \uac10\uc0ac\ub97c \uc704\ud55c \uc644\ubcbd\ud55c \ub85c\uae45\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.  \uc21c\uc11c \ubcc0\uacbd \uad00\ub9ac\ub294 \uc6cc\ud06c\ud50c\ub85c\uc6b0\uc758 \ud55c \uad6c\uc131 \uc694\uc18c\ub85c\uc11c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \ubcc0\uacbd \ub0b4\uc6a9\uc744 \ubcf4\uace0, \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \ud654\uba74\uc758 \ubcc0\uacbd \ub0b4\uc6a9 \uc778\ub77c\uc778\uc744 \ubbf8\ub9ac \ubcf4\uace0, \uc5ec\ub7ec \uc21c\uc11c \ubcc0\uacbd\uc744 \ube44\uad50\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. "}, {"WF_SETTINGS_MSG_2", "\ucc38\uace0: \uc21c\uc11c \ubcc0\uacbd \ubc0f \uc2b9\uc778 \uad00\ub9ac\ub294 \ub3c4\uba54\uc778 \uc218\uc900\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ud558\uac70\ub098 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2b9\uc778 \uad00\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uac83\uc740 \uc21c\uc11c \ubcc0\uacbd \uad00\ub9ac\uc640 \ub3c5\ub9bd\uc801\uc774\uc9c0\ub9cc \uc21c\uc11c \ubcc0\uacbd \uad00\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud558\uba74 \uc2b9\uc778 \uad00\ub9ac\ub3c4 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ub429\ub2c8\ub2e4. "}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "\ud65c\uc131\ud654\ub418\ub354\ub77c\ub3c4 \uc6cc\ud06c\ud50c\ub85c\ub294 \ub2e4\uc74c \uc11c\ube44\uc2a4\uc5d0 \uc801\uadf9\uc801\uc73c\ub85c \ub77c\uc774\uc120\uc2a4\uac00 \ubd80\uc5ec\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. "}, {"WF_SETTINGS_ENABLE_COM", "\uc21c\uc11c \ubcc0\uacbd \uad00\ub9ac \uc0ac\uc6a9"}, {"WF_SETTINGS_ENABLE_WF", "\uc2b9\uc778 \uad00\ub9ac \uc0ac\uc6a9"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "\uc21c\uc11c \ubcc0\uacbd \uae30\ubcf8 \uc77c\uc815 \uc124\uc815"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "\uc21c\uc11c \ubcc0\uacbd\uc740 \ub2e4\uc74c \uc124\uc815\uc5d0 \ub530\ub77c \uc81c\ucd9c \uc2dc\uc5d0 \uc2e4\ud589\ub418\ub3c4\ub85d \uc608\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc744 \uc9c0\uc815\ud558\uba74 \uc0c8 \uc21c\uc11c \ubcc0\uacbd\uc774 \ub9cc\ub4e4\uc5b4\uc9c8 \ub54c \uc120\ud0dd\ub41c \uc124\uc815\uc774 \uc790\ub3d9\uc73c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4."}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "\uc608\uc57d: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "\uc218\ub3d9\uc73c\ub85c \uc2e4\ud589"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "\uc2b9\uc778 \uc989\uc2dc \uc2e4\ud589"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "\uc2e4\ud589 \uc2dc\uac04:"}, {"WF_CONFIG_DELETE_MSG_1", "\ub85c\uadf8\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc218\ud589\ub41c \ud65c\ub3d9\uc744 \uc27d\uac8c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud65c\ub3d9\uc740 \uc0ac\uc6a9\uc790 \uc2dc\uc791 \uc791\uc5c5\uc5d0 \uc9c1\uc811 \ub610\ub294 \uac04\uc811\uc801\uc73c\ub85c \uc5f0\uad00\ub418\uac70\ub098 \uc2dc\uc2a4\ud15c \uc2dc\uc791 \uc791\uc5c5\uc5d0 \ub530\ub77c \uc218\ud589\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub85c\uadf8\ub294 \uac10\uc0ac \ucd94\uc801 \ubc0f \uc900\uc218\ub97c \uc704\ud574 \uc911\uc694\ud560 \ubfd0 \uc544\ub2c8\ub77c \ubb38\uc81c \ud574\uacb0 \uc2dc\uc2a4\ud15c \uc791\uc5c5\uc5d0\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4."}, {"WF_CONFIG_DELETE_MSG_2", "\uc2dc\uc2a4\ud15c\uc5d0 \ub354 \uc774\uc0c1 \uc800\uc7a5\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub294, \uc77c\ubc18\uc801\uc73c\ub85c "}, {"WF_CONFIG_DELETE_MSG_3", " \uc77c\uc774 \uc9c0\ub09c \uc21c\uc11c \ubcc0\uacbd\uc740 \uc218\ub3d9\uc73c\ub85c \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc0ad\uc81c \uc791\uc5c5\uc740 \uc77c\ud68c\uc6a9 \uc791\uc5c5\uc73c\ub85c, \uc120\ud0dd\ub41c \uc0ad\uc81c \ub0a0\uc9dc\uc5d0 \ub530\ub77c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774 \ud654\uba74\uc758 \uc0ad\uc81c \uc791\uc5c5\uc740 \uc21c\uc11c \ubcc0\uacbd\uacfc \uad00\ub828\ub41c \ub370\uc774\ud130, \uc791\uc5c5 \ubc0f \ub85c\uadf8\ub9cc \uc81c\uac70\ud569\ub2c8\ub2e4."}, {"APPLOG_CONFIG_DEL_DATA", "\ub2e4\uc74c \ub0a0\uc9dc\uc5d0 \ub370\uc774\ud130 \uc0ad\uc81c:"}, {"FA_UNIT_STATUS_HEADER", "\uc7a5\uce58 \uc138\ubd80 \uc815\ubcf4"}, {"FA_UNIT_STATUS_SERIAL", "\uc77c\ub828 \ubc88\ud638"}, {"FA_UNIT_STATUS_NODE_NAME", "\uc7a5\uce58 \uc774\ub984"}, {"FA_UNIT_STATUS_MODEL", "\ubaa8\ub378"}, {"FA_UNIT_STATUS_FIRMWARE", "\ud38c\uc6e8\uc5b4 \ubc84\uc804"}, {"FA_UNIT_STATUS_IP", "\uad00\ub9ac\ub41c IP"}, {"FA_UNIT_STATUS_LICENSE", "\uc571 \uc2dc\uac01\ud654"}, {"FA_GROUP_STATUS_HEADER1", "\ud38c\uc6e8\uc5b4 \uc138\ubd80 \uc815\ubcf4"}, {"FA_GROUP_STATUS_HEADER2", "\ud750\ub984 \ubcf4\uace0 \ub77c\uc774\uc120\uc2a4 \uc0c1\ud0dc"}, {"FA_GROUP_STATUS_NO_DATA", "\ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c"}, {"FA_LICENSE_NOT_AVAILABLE", "\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c"}, {"FA_LICENSE_AVAILABLE", "\ub77c\uc774\uc120\uc2a4 \uc788\uc74c"}, {"FA_LICENSE_FREE_TRAIL", "\ubb34\ub8cc \uccb4\ud5d8"}, {"FA_LICENSE_EXPIRED", "\ub9cc\ub8cc\ub428"}, {"FA_GROUP_FIREWALL_COUNT", "\uc2dc\uc2a4\ud15c\uc758 \ubc29\ud654\ubcbd"}, {"FA_FLOW_IP1", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1"}, {"FA_FLOW_IP2", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2"}, {"FA_FLOW_AGENT_STATUS", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc0c1\ud0dc"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "\ubc29\ud654\ubcbd \uc124\uc815"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN \ud130\ub110"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "\uc6d0\uaca9 IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "\ub370\uc774\ud130 \ubcf4\uc874(\uc77c)"}, {"FA_FLOW_FORWARDER_IP", "\ud750\ub984 \uc804\ub2ec\uc790"}, {"FA_FLOWS_COLLECTED", "\ud750\ub984 \uc218\uc9d1\ub428"}, {"FA_DISK_ALLOCATED", "\ub514\uc2a4\ud06c \ud560\ub2f9\ub428"}, {"FA_DISK_USED", "\ub514\uc2a4\ud06c \uc0ac\uc6a9\ub428"}, {"FA_FLOW_STATUS", "\uc0c1\ud0dc"}, {"FA_NO_AGENT", "Flow \uc5d0\uc774\uc804\ud2b8\uac00 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4"}, {"FA_MODELSUPPORT", "\ud750\ub984 \ubcf4\uace0\uac00 \uc774 \ubaa8\ub378\uc5d0 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"FA_FIRMWARESUPPORT", "\ud750\ub984 \ubcf4\uace0\ub294 \uc774 \ubc84\uc804\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"FA_LICENSESUPPORT", "\uc571 \uc2dc\uac01\ud654 \ub77c\uc774\uc120\uc2a4 \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"FA_HEADING", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8"}, {"FA_FLOW_AGENT", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8"}, {"FA_FLOW_HEAD_IP1", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1"}, {"FA_FLOW_HEAD_IP2", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2"}, {"FA_FLOW_HEAD_HDD", "\ud558\ub4dc \ub514\uc2a4\ud06c(%)"}, {"FA_FLOW_HEAD_RAM", "RAM(%)"}, {"FA_FLOW_HEAD_CPU", "CPU(%)"}, {"FA_FLOW_HEAD_BW", "\ub300\uc5ed\ud3ed(%)"}, {"FA_FLOW_FORWARDER_HEAD", "\ud750\ub984 \uc804\ub2ec\uc790"}, {"FA_FLOW_PAIR", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc30d"}, {"FA_FLOW_HEAD_DISKSIZE", "\ub514\uc2a4\ud06c \ud06c\uae30"}, {"FA_FLOW_HEAD_GATEWAY", "\uac8c\uc774\ud2b8\uc6e8\uc774 \ubc29\ud654\ubcbd"}, {"FA_FLOW_HEAD_TUNNELS", "\ud130\ub110"}, {"FA_FLOW_HEAD_TENANTS", "\ud14c\ub10c\ud2b8"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "\uc774\ub984"}, {"GF_GATEWAY", "\uac8c\uc774\ud2b8\uc6e8\uc774"}, {"GF_LAST_UPDATED", "\ub9c8\uc9c0\ub9c9 \uc5c5\ub370\uc774\ud2b8"}, {"GF_DEST_ADDRESS_RANGE", "\ub300\uc0c1 \uc8fc\uc18c \ubc94\uc704"}, {"GF_LOCAL_ADDRESS_RANGE", "\ub85c\uceec \uc8fc\uc18c \ubc94\uc704"}, {"FA_STATUS", "\uc0c1\ud0dc"}, {"CLOUDSETTINGS_SECTITLE_1", "\uc0c8 \ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc30d \ucd94\uac00"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "\uba54\ubaa8\ub9ac(GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "\ud50c\ub85c\uc6b0 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc800\uc7a5\uc18c(GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "\ud074\ub77c\uc6b0\ub4dc Syslog \uc11c\ubc84 \uc124\uc815"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Syslog \uc11c\ubc84\uc5d0 Syslog \ubcf4\uace0 \uc0ac\uc6a9:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Syslog \uc11c\ubc84\uc758 IP \uc8fc\uc18c:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog \uc11c\ubc84 \ud3ec\ud2b8:"}, {"CLOUDSETTINGS_SECTITLE_3", "\ud074\ub77c\uc6b0\ub4dc \ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc124\uc815"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8\ub2f9 \ubc29\ud654\ubcbd \uc218:"}, {"CLOUDSETTINGS_SECTITLE_5", "[KR]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[KR]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "SonicPoint \uc815\ubcf4"}, {"SP_MANAGEDBY", "\ub2e4\uc74c\uc5d0\uc11c \uad00\ub9ac:"}, {"SP_IPADDR", "IP \uc8fc\uc18c"}, {"SP_SUBNET", "\uc11c\ube0c\ub137 \ub9c8\uc2a4\ud06c"}, {"SP_IFACE", "\uc778\ud130\ud398\uc774\uc2a4"}, {"SP_ZONE", "\uc601\uc5ed"}, {"SP_MODEL", "\ubaa8\ub378"}, {"SP_ENABLED", "\uc0ac\uc6a9"}, {"SP_DISABLED", "\uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c"}, {"SP_STATUS", "\uc0c1\ud0dc"}, {"SP_MACADDR", "MAC \uc8fc\uc18c"}, {"PM_CONNECTWISE_STATUS", "[KR]Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[KR]Not Available"}, {"TICKET_INFORMATION", "[KR]Connectwise Ticket"}, {"TICKET_DETAILS", "[KR]Details"}, {"CONNECTWISE_NOTE", "[KR]GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}, {Integer.toString(-919), "[KR]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[KR]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[KR]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[KR]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[KR]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[KR]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[KR]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[KR]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[KR]Successfully authenticated with the unit."}, {Integer.toString(-928), "[KR]Authentication with the unit failed."}, {Integer.toString(-929), "[KR]The unit is registered with the backend."}, {Integer.toString(-930), "[KR]The unit is not registered with the backend."}, {Integer.toString(-931), "[KR]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[KR]Heart beats for the unit have been started."}, {Integer.toString(-933), "[KR]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[KR]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[KR]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[KR]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[KR]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[KR]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[KR]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[KR]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[KR]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[KR]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[KR]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[KR]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[KR]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[KR]ZeroTouch feature was disabled for the firewall."}};
+    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4(\ub2e8\uc218)"}, {"APPLIANCE_NAME_PLURAL", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4(\ubcf5\uc218)"}, {"APPLIANCE_DESC", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uc124\uba85"}, {"SONICWALL_NAME", "\ubc29\ud654\ubcbd"}, {"SONICWALL_NAME_PLURAL", "\ubc29\ud654\ubcbd"}, {"SONICWALL_DESC", "\ubc29\ud654\ubcbd \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMA"}, {"SSLVPN_DESC", "SMA \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDP"}, {"CDP_DESC", "CDP \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Aventail SMA \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "Email Security \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"OTHERS_NAME", "\uae30\ud0c0"}, {"OTHERS_NAME_PLURAL", "\uae30\ud0c0"}, {"OTHERS_DESC", "\uae30\ud0c0 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"MINUTE", "\ubd84"}, {"TEST_STRING", "\ud14c\uc2a4\ud2b8 \ubb38\uc790\uc5f4\ub85c, \ucd9c\uace0 \uc804 \uc81c\uac70\ub429\ub2c8\ub2e4."}, {"PROGRESS_ACTION_TIMED", "\uc774 \uc791\uc5c5\uc740 \uc644\ub8cc\ud558\ub294 \ub370 \uc2dc\uac04\uc774 \ub2e4\uc18c \uc18c\uc694\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PROGRESS_PLEASE_WAIT", "\uc7a0\uc2dc \uae30\ub2e4\ub824 \uc8fc\uc2ed\uc2dc\uc624..."}, {"LOADING_PLEASE_WAIT", "\ub85c\ub529 \uc911, \uc7a0\uc2dc \uae30\ub2e4\ub824\uc8fc\uc2ed\uc2dc\uc624..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "\uc774 \ud654\uba74\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "\ud654\uba74\uc744 \ubcfc \uc218 \uc788\ub294 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ub85c\uadf8\uc544\uc6c3\ud55c \ub2e4\uc74c \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"UPDATE", "\uc5c5\ub370\uc774\ud2b8"}, {"RESET", "\uc7ac\uc124\uc815"}, {"NO_PANEL_PERMISSIONS", "[KR]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "\ubaa8\ub378 \ucf54\ub4dc\uac00 \ub3d9\uae30\ud654\ub428"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "\ubaa8\ub378 \ucf54\ub4dc\ub97c \ub3d9\uae30\ud654\ud558\uc9c0 \ubabb\ud568"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "\uc791\uc5c5 \uc2a4\ud480\ub9c1\uc774 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "\uc2e4\ud328 - \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "\ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \ucd94\uac00\ub428 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "\ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"ERROR_ADD_ACTIVATION_CODE", "\ud65c\uc131\ud654 \ucf54\ub4dc \ucd94\uac00 \uc624\ub958: \ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc774\ubbf8 \uc788\uc74c - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "\ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc0ad\uc81c\ub428 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "\ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc0ad\uc81c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"ERROR_DELETE_ACTIVATION_CODE", "\ud65c\uc131\ud654 \ucf54\ub4dc \uc0ad\uc81c \uc624\ub958: \ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc5c6\uc74c - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "\ud65c\uc131\ud654 \ucf54\ub4dc \uc0ad\uc81c \uc624\ub958: \ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc74c - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "\ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ucd94\uac00\ub428: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "\ub2e4\uc74c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucf54\ub4dc \ud480\uc5d0\uc11c \uc81c\uac70\ub428: "}, {"UPDATE_DB_MESSAGE", "\ubcc0\uacbd \ub0b4\uc6a9\uc774 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"FAILURE_UPDATE_DB_MESSAGE", "\uc5c5\ub370\uc774\ud2b8 \uc2e4\ud328: \ubcc0\uacbd \ub0b4\uc6a9\uc744 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_UNITS_FOR_REGISTRATION", "\ub4f1\ub85d\ud560 \uc7a5\uce58 \uc5c6\uc74c"}, {"FREE_TRAIL_NOT_APPLIED", "\ubaa8\ub4e0 \uc7a5\uce58\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uac70\ub098 \uc774\ubbf8 \uad6c\ub3c5 \uc0c1\ud0dc\uc784"}, {"AV_FAILURE_MESSAGE", "\uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc74c"}, {"AV_SUCCESS_MESSAGE", "\uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \ub4f1\ub85d\uc744 \uc704\ud55c \uc791\uc5c5\uc774 \uc2dc\uc791\ub428"}, {"AV_SUCCESS_UPGRADE", "\uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc704\ud55c \uc791\uc5c5\uc774 \uc2dc\uc791\ub428"}, {"AV_NO_SUCCESS_REG", "\ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc74c"}, {"AV_SUCCESS_REG", "\ub4f1\ub85d\uc744 \uc704\ud55c \uc791\uc5c5\uc774 \uc2dc\uc791\ub428"}, {"AV_NO_SUCCESS_UPGRADE", "\uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc74c"}, {"TASK_SUCCESS_MESSAGE", "\uc791\uc5c5\uc774 \uc2dc\uc791\ub428"}, {"TASK_CMP_ERROR", "CMP \uc554\ud638\ub294 \uc7a5\uce58 \uc218\uc900\uc5d0\uc11c\ub9cc \ubcc0\uacbd\ud560 \uc218 \uc788\uc74c"}, {"TASK_ERROR_MESSAGE", "\uc791\uc5c5\uc774 \uc2dc\uc791\ub418\uc9c0 \uc54a\uc74c"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "\ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc74c"}, {"SGMS_EMAIL_BOTTOM_MSG1", "\uc81c\uacf5\ucc98: "}, {"SGMS_EMAIL_BOTTOM_MSG2", " \ubc84\uc804 "}, {"SGMS_EMAIL_BOTTOM_MSG3", " \uc2dc\ub9ac\uc5bc: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " \uc11c\ubc84: "}, {"FIRMWARE_DOWNLOADED", "\ud38c\uc6e8\uc5b4\uc758 \uc0c8 \ubcf5\uc0ac\ubcf8\uc774 \ub2e4\uc6b4\ub85c\ub4dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " \uc774(\uac00) \ub2e4\uc74c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 \uace7 \ub9cc\ub8cc\ub429\ub2c8\ub2e4.\nSonicWall \uc601\uc5c5\ud300\uc5d0 \ubb38\uc758\ud558\uc5ec \ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \uad6c\ub9e4\ud558\uc5ec \uc774 \uad6c\ub3c5\uc744 \uac31\uc2e0\ud558\uc2ed\uc2dc\uc624."}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "\uad6c\ub3c5 \ub9cc\ub8cc \uc815\ubcf4\uc785\ub2c8\ub2e4."}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "\ub9cc\ub8cc\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"VERSION_MESSAGE", "SonicWall GMS \ubc84\uc804#: "}, {"NUM_NODES_MESSAGE", "\uc774 SonicWall GMS\uc5d0\uc11c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \ub178\ub4dc \uc218: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "GMS \uc81c\ud488 \uc124\uba85: "}, {"DATABASE_TYPE_MESSAGE", "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc720\ud615: "}, {"MODEL_TYPES_MESSAGE", "\ub178\ub4dc \uc218 \ubc0f \ubaa8\ub378 \uc774\ub984: "}, {"NUM_AGENTS_MESSAGE", "\uc2dc\uc2a4\ud15c\uc758 \uc5d0\uc774\uc804\ud2b8 \uc218: "}, {"AGENT_IP_MESSAGE", "\uc5d0\uc774\uc804\ud2b8\uc758 IP \uc8fc\uc18c: "}, {"UNKNOWN_MESSAGE", "\uc54c \uc218 \uc5c6\uc74c"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "\uc54c \uc218 \uc5c6\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "\uc7a5\uce58 \uc774\ub984\uc5d0 \uc798\ubabb\ub41c \ubb38\uc790([<,\\,:])\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {"PM_NAME_KEYWORD", " \uc740(\ub294) \ud0a4\uc6cc\ub4dc\uc774\ubbc0\ub85c \uc7a5\uce58 \uc774\ub984\uc744 \uc9c0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624,"}, {"PM_NAME_EXISTS_A", "\uc774\ub984\uc774 '"}, {"PM_NAME_EXISTS_B", "'\uc778 \uc7a5\uce58\uac00 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4. "}, {"PM_UNKNOWN", "\uc54c \uc218 \uc5c6\uc74c"}, {"PM_UNKNOWN_UNREGISTERED", "\uc54c \uc218 \uc5c6\uc74c/\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc74c"}, {"PM_UNREGISTERED", "\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc74c"}, {"PM_YES", "\uc608"}, {"PM_NO", "\uc544\ub2c8\uc694"}, {"PM_ENABLED", "\uc0ac\uc6a9"}, {"PM_DISABLED", "\uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c"}, {"PM_NOTAVAILABLE", "\uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c"}, {"PM_UNLIMITED", "\uc81c\ud55c\ub418\uc9c0 \uc54a\uc74c"}, {"PM_CURRENT", "\ud604\uc7ac"}, {"PM_DEFAULT", "\uae30\ubcf8\uac12"}, {"PM_EXPIRED", "\ub9cc\ub8cc\ub428"}, {"PM_UP", "\uc704"}, {"PM_DOWN", "\uc544\ub798"}, {"PM_NOT_ACQUIRED", "\ud68d\ub4dd\ud558\uc9c0 \ubabb\ud568"}, {"PM_SINCE", " \uc774\ud6c4 "}, {"PM_NONE", "\uc5c6\uc74c"}, {"PM_N_A", "\ud574\ub2f9 \uc5c6\uc74c"}, {"PM_NO_LICENSE", "\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c"}, {"PM_MODEL", "\ubaa8\ub378"}, {"PM_SERIAL_NUM", "\uc77c\ub828 \ubc88\ud638"}, {"PM_DOMAIN", "\ub3c4\uba54\uc778"}, {"PM_NUM_LAN_IPS", "\ud5c8\uc6a9\ub418\ub294 LAN IP \uc218"}, {"PM_HA", "\uace0\uac00\uc6a9\uc131"}, {"PM_DMZ_PORT", "DMZ \ud3ec\ud2b8"}, {"PM_NUM_WORKPORTS", "\ud5c8\uc6a9\ub418\ub294 WorkPort IP \uc218"}, {"PM_HOMEPORT", "HomePort"}, {"PM_WLAN_PORT", "WLAN \ud3ec\ud2b8"}, {"PM_OPT_PORT", "OPT \ud3ec\ud2b8"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN \uc5c5\uadf8\ub808\uc774\ub4dc"}, {"PM_VPN_CLIENTS", "\uc804\uc5ed VPN \ud074\ub77c\uc774\uc5b8\ud2b8"}, {"PM_IPS", "\uce68\uc785 \ubc29\uc9c0 \uc11c\ube44\uc2a4"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "\uac8c\uc774\ud2b8\uc6e8\uc774 \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0"}, {"PM_FIRMWARE_VERSION", "\ud38c\uc6e8\uc5b4 \ubc84\uc804"}, {"PM_REGISTRATION_CODE", "\ub4f1\ub85d \ucf54\ub4dc"}, {"PM_CFS_SUB", "\ucf58\ud150\uce20 \ud544\ud130 \ubaa9\ub85d/\uc11c\ube44\uc2a4"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "\ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0"}, {"PM_WARRANTY", "\ud655\uc7a5\ub41c \ubcf4\uc99d"}, {"PM_SW_STATUS", "\uc0c1\ud0dc"}, {"PM_SW_MANAGEDINSTANCE", "\uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uad00\ub9ac"}, {"PM_TASKS_PENDING", "\uc791\uc5c5 \ubcf4\ub958 \uc911"}, {"PM_LAST_LOG", "\ub9c8\uc9c0\ub9c9 \ub85c\uadf8 \ud56d\ubaa9"}, {"PM_SAS_CONFIG_INFO", "SA \uad6c\uc131 \uc815\ubcf4"}, {"PM_SAS_DEFINED", "\uc815\uc758\ub41c SA"}, {"PM_SAS_ENABLED", "\uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub41c SA"}, {"PM_SAS_AVAILABLE", "\uc0ac\uc6a9 \uac00\ub2a5\ud55c SA"}, {"PM_SAS_REMAINING", "\ub0a8\uc740 SA"}, {"PM_SAS_INTERCONNECTED", "\uc0c1\ud638 \uc5f0\uacb0\ub41c SA"}, {"PM_AGENT_ASSIGNED", "\uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\ub428"}, {"PM_PRIMARY_AGENT", "\uae30\ubcf8 \uc5d0\uc774\uc804\ud2b8"}, {"PM_STANDBY_AGENT", "\ub300\uae30 \uc5d0\uc774\uc804\ud2b8"}, {"PM_TUNNEL_MGMT", "\uad00\ub9ac \ubaa8\ub4dc"}, {"PM_FW_ADDED_TO_GMS", "SonicWall GMS\uc5d0 \ucd94\uac00\ub41c \uc7a5\uce58"}, {"PM_FW_UP_SINCE", "\ub2e4\uc74c \uc774\ud6c4 \uc791\ub3d9\ud558\ub294 \uc7a5\uce58"}, {"PM_FW_DOWN_SINCE", "\ub2e4\uc74c \uc774\ud6c4 \uc791\ub3d9\ud558\uc9c0 \uc54a\ub294 \uc7a5\uce58"}, {"PM_SW_IP", "SonicWall IP"}, {"PM_TIME_ZONE", "\ud45c\uc900 \uc2dc\uac04\ub300"}, {"PM_SW_IN_SYSTEM", "\uc2dc\uc2a4\ud15c\uc5d0\uc11c"}, {"PM_SW_IN_DMZ", "DMZ\uc5d0\uc11c"}, {"PM_SW_IN_GROUP", "\uadf8\ub8f9\uc5d0\uc11c"}, {"PM_SW_UNREGISTERED", "\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc74c"}, {"PM_SW_VPN_UPGRADE", "VPN \uc5c5\uadf8\ub808\uc774\ub4dc \ud3ec\ud568"}, {"PM_SW_VPN_CLIENT", "\uc804\uc5ed VPN \ud074\ub77c\uc774\uc5b8\ud2b8 \uc5c5\uadf8\ub808\uc774\ub4dc \ud3ec\ud568"}, {"PM_SW_MSSP", "MSSP \uc9c0\uc6d0"}, {"PM_CFL_SUBSCRIPTION", "\ucf58\ud150\uce20 \ud544\ud130 \ubaa9\ub85d/\uc11c\ube44\uc2a4"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "\ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0"}, {"PM_HGMS_SUBSCRIPTION", "\ud074\ub77c\uc6b0\ub4dc \uc11c\ube44\uc2a4"}, {"PM_SUPPORT_SUBSCRIPTION", "\uc9c0\uc6d0"}, {"PM_EXTENDED_WARRANTY", "\ud655\uc7a5\ub41c \ubcf4\uc99d"}, {"PM_UNITS_DOWN", "\uc791\ub3d9\ud558\uc9c0 \uc54a\ub294 SonicWall"}, {"PM_PENDING_TASKS", "\ubcf4\ub958 \uc911\uc778 \uc791\uc5c5\uc774 \ud3ec\ud568\ub41c SonicWall"}, {"PM_MANAGED_WITH_TUNNEL", "\uad00\ub9ac \ud130\ub110\uc744 \uc0ac\uc6a9\ud558\uc5ec \uad00\ub9ac\ub418\ub294 SonicWall"}, {"PM_TASK_SPOOLED", "\ud638\uc2a4\ud2b8 \uc774\ub984\uc744 \ubcc0\uacbd\ud558\ub3c4\ub85d \uc791\uc5c5\uc774 \uc2a4\ud480\ub9c1\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"PM_RAVLIN_MODEL", "Ravlin \ubaa8\ub378"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/\uc77c\ub828 \ubc88\ud638"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "\ud38c\uc6e8\uc5b4 \ubc84\uc804"}, {"PM_HW_VERSION", "\ud558\ub4dc\uc6e8\uc5b4 \ubc84\uc804"}, {"PM_ROM_VERSION", "ROM \ubc84\uc804"}, {"PM_SECURITY_ID", "\ubcf4\uc548 ID"}, {"PM_RAVLIN_STATUS", "Ravlin \uc0c1\ud0dc"}, {"PM_TASKS_PENDING", "\uc791\uc5c5 \ubcf4\ub958 \uc911"}, {"PM_AGENT_ASSIGNED", "\uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\ub428"}, {"PM_RAVLINS_IN_NODE", "\ub178\ub4dc\uc758 Ravlin"}, {"PM_RAVLINS_DOWN", "\uc791\ub3d9\ud558\uc9c0 \uc54a\ub294 Ravlin"}, {"PM_RAVLINS_PENDING_TASKS", "\ubcf4\ub958 \uc911\uc778 \uc791\uc5c5\uc774 \ud3ec\ud568\ub41c Ravlin"}, {"PM_FIX_UNIT_ERROR", "\uc7a5\uce58\ub97c \uc218\uc815\ud558\ub294 \uc911 \uc624\ub958 \ubc1c\uc0dd "}, {"PM_MOD_UNIT_EXISTS", "\ub2e4\uc74c \uc77c\ub828 \ubc88\ud638\ub97c \uac00\uc9c4 \uc218\uc815\ub41c \uc7a5\uce58\uac00 \uc774\ubbf8 \uc788\uc74c"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "\uc774\ub984"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "\uc744(\ub97c) \uac00\uc9c4 \uc218\uc815\ub41c \uc7a5\uce58\uac00 \uc774\ubbf8 \uc788\uc74c "}, {"PM_ADD_ERR_PRIVILEGES", "\uc624\ub958: \uc7a5\uce58\ub97c \ucd94\uac00\ud560 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PM_UNIT_EXISTS", "\ub2e4\uc74c \uc77c\ub828 \ubc88\ud638\ub97c \uac00\uc9c4 \uc7a5\uce58\uac00 \uc774\ubbf8 \uc788\uc74c"}, {"PM_UNIT_NAME_EXISTS_A", "\uc774\ub984"}, {"PM_UNIT_NAME_EXISTS_B", "\uc744(\ub97c) \uac00\uc9c4 \uc7a5\uce58\uac00 \ub3c4\uba54\uc778\uc5d0 \uc774\ubbf8 \uc788\uc74c "}, {"PM_ADD_UNIT_ERR", "SonicWall \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "\uc720\ud6a8\ud55c \uc77c\ub828 \ubc88\ud638\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624.\n\uc77c\ub828 \ubc88\ud638\ub294 "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "\uc790\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "\uc77c\ub828 \ubc88\ud638\ub294 16\uc9c4\uc218 \ubb38\uc790\ub9cc \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"PM_GET_PREFS_ERR", "\uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc744 \uac80\uc0c9\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "\ud074\ub77c\uc6b0\ub4dc \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc7a5\uce58 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\n\uc7a5\uce58\uc5d0 \ucd94\uac00\ud558\uae30 \uc804\uc5d0 MySonicWall.com\uc5d0\uc11c \ub2e4\uc74c \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ub77c\uc774\uc120\uc2a4\ub97c \ubc1b\uc73c\uc2ed\uc2dc\uc624. "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " \uc5d0\uc11c \uc774 \uc7a5\uce58\uc5d0 \ub300\ud55c \ub77c\uc774\uc120\uc2a4\ub97c \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\ub098\uc911\uc5d0 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " \uc5d0\uc11c \uc774 \uc7a5\uce58\uc5d0 \ub300\ud55c \ub77c\uc774\uc120\uc2a4\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 MySonicWall.com\uacfc \ud1b5\uc2e0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\ub098\uc911\uc5d0 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"PM_LICENSED", "\ub77c\uc774\uc120\uc2a4 \uc788\uc74c"}, {"PM_NOT_LICENSED", "\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c"}, {"PM_IS_MSSP", "MSSP \uc7a5\uce58"}, {"PM_SYSLOG_FORMAT", "Syslog \ud615\uc2dd"}, {"PM_STATUS_MSG_ONLY", "\uc0c1\ud0dc \uba54\uc2dc\uc9c0\ub9cc"}, {"PM_SYSLOG_IN_UTC", "\ub85c\uadf8(UTC)"}, {"PM_VIEWPOINT_MODE", "\ubd84\uc11d\uae30 \ubaa8\ub4dc\uac00 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub428"}, {"PM_NAME_RESOLUTION", "\uc774\ub984 \ud655\uc778 \ubaa8\ub4dc"}, {"PM_ACCESS_MODE", "\uc561\uc138\uc2a4 \ubaa8\ub4dc"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS \uc774\ud6c4 NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"VM_PATCH_DETECTED_MSG1", " \uc5d0\uc11c \uc0c8 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5c5\ub370\uc774\ud2b8\uac00 \uac80\uc0c9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"VM_PATCH_DETECTED_MSG2", "\uad00\ub9ac\uc790\uc5d0\uac8c \uc0c8 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5c5\ub370\uc774\ud2b8 \uc815\ubcf4\ub97c \uc804\uc790 \uba54\uc77c\ub85c \ubcf4\ub0b4\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. SMTP \ub610\ub294 \uad00\ub9ac\uc790 \uc804\uc790 \uba54\uc77c\uc774 \uad6c\uc131\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"VM_PATCH_DETECTED_MSG3", " \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5c5\ub370\uc774\ud2b8 \uc0ac\uc6a9 \uac00\ub2a5\n\n"}, {"VM_NEW", "\uc0c8\ub85c \ub9cc\ub4e4\uae30 "}, {"VM_PATCH_DETECTED_MSG4", "\ub9b4\ub9ac\uc2a4 \uc815\ubcf4 \ubc0f \ub2e4\uc6b4\ub85c\ub4dc \uc815\ubcf4\ub97c \ubcf4\ub824\uba74 <a href=https://www.mysonicwall.com>MySonicWall.com</a> \uacc4\uc815"}, {"VM_SCREEN", " \ud654\uba74\uc5d0 \ub85c\uadf8\uc778\ud558\uc2ed\uc2dc\uc624."}, {"VM_PATCH_DETECTED_MSG5", " \uad6c\uc131 \uc694\uc18c \ud328\uce58 \uc5c5\ub370\uc774\ud2b8\uac00 \ud655\uc778\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc0c8 \uad6c\uc131 \uc694\uc18c \uc5c5\ub370\uc774\ud2b8\uac00 \ubc1c\uacac\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \uc804\uc790 \uba54\uc77c\uc774 \uc804\uc1a1\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"VM_PATCH_DETECTED_MSG6", "\ud328\uce58 \uc5c5\ub370\uc774\ud2b8\ub97c \ub2e4\uc6b4\ub85c\ub4dc\ud558\uc9c0 \ubabb\ud568 "}, {"VM_FOR", " \ub300\uc0c1 "}, {"VM_ON", " \ub0a0\uc9dc "}, {"VM_PATCH_DETECTED_MSG7", " \uad6c\uc131 \uc694\uc18c \ud328\uce58 \ub2e4\uc6b4\ub85c\ub4dc\uac00 \uc911\ub2e8\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud328\uce58 \ud30c\uc77c\uc774 \uc774\ubbf8 \uc788\uc74c: "}, {"VM_PATCH_DETECTED_MSG8", " \uad6c\uc131 \uc694\uc18c \ud328\uce58\uac00 \ub2e4\uc6b4\ub85c\ub4dc\ub428: "}, {"VM_PATCH_DETECTED_MSG9", "\ud328\uce58 \ud30c\uc77c "}, {"VM_PATCH_DETECTED_MSG10", " \uc744(\ub97c) \ub514\uc2a4\ud06c\uc5d0 \uc791\uc131\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_UPDATE_SUCCESS", "\uc5c5\ub370\uc774\ud2b8\uac00 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SDM_UPDATE_FAILURE", "\uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_UPDATE_SPECIAL_FAILURE", "SA\ub97c \uc0ad\uc81c\ud558\ub294 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_UPDATE_INVALID", "\uc5c5\ub370\uc774\ud2b8 \uc694\uccad\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SDM_SCREEN_ID_INVALID", "\ud654\uba74 ID\uac00 \uc798\ubabb\ub428"}, {"SDM_READY", "\uc900\ube44"}, {"SDM_CGI_ERROR", "\ub2e4\uc74c\uc5d0 \ub300\ud55c CGI_NAME\uc744(\ub97c) \uac00\uc838\uc624\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_DEFAULT_ERROR", "\ub2e4\uc74c\uc5d0 \ub300\ud55c DEFAULT_VALUE\uc744(\ub97c) \uac00\uc838\uc624\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_INVALID_TARGET", "\uc624\ub958: \uc6d0\ubcf8 \uadf8\ub8f9\uc774\ub098 \ub300\uc0c1 \uadf8\ub8f9\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SDM_METADATA_ERROR", "\ub2e4\uc74c\uc5d0 \ub300\ud55c \uba54\ud0c0\ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_DB_ERROR", "SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_NOVPN_ERROR", "\uc774 \uc7a5\uce58\uc5d0 \ub300\ud574 VPN\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NO_TARGET_VPN_ERROR", "\ub300\uc0c1\uc5d0\uc11c VPN\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NOSAS_ERROR", "\uc774 \uc7a5\uce58\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub0a8\uc740 SA\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NO_TARGET_SAS_ERROR", "\ub300\uc0c1\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub0a8\uc740 SA\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NO_UNITS_ERROR", "\uc791\uc5c5\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"SDM_NO_3RDPARTYCERTS_ERROR", "\uc720\ud6a8\ud55c \ud0c0\uc0ac \ub85c\uceec/CA \uc778\uc99d\uc11c \uc870\ud569\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud574 VPN SA\ub97c \uac74\ub108\ub6f0\ub294 \uc911\uc785\ub2c8\ub2e4. "}, {"SDM_DHCP_ERROR", "\uc6d0\ubcf8 \uc7a5\uce58 \ubc0f \ub300\uc0c1 \uc7a5\uce58 \ub458 \ub2e4\uc5d0 \ub300\ud574 \ub3d9\uc801 \uc8fc\uc18c \uc9c0\uc815\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc73c\ubbc0\ub85c SA\ub97c \ub9cc\ub4e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. VPN SA \ub9cc\ub4e4\uae30\ub97c \uac74\ub108\ub6f0\uace0 \uc788\uc2b5\ub2c8\ub2e4. "}, {"SDM_NOAES_ERROR", "\uc774 \uc7a5\uce58\uc5d0 AES\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_NO_TARGET_AES_ERROR", "\ub300\uc0c1\uc5d0 AES\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uc5d0 \ub300\ud55c VPN\uc744 \ub9cc\ub4dc\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_DELETE_SUCCESS", "\uc0ad\uc81c\uac00 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"SDM_DELETE_FAILURE", "\uc0ad\uc81c\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_AGENTNAME_INVALID", "[<,\\,:,',@,\ub294 \uc798\ubabb\ub41c \ubb38\uc790\uc785\ub2c8\ub2e4.#,*,$] in Agent name."}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "\ud5a5\uc0c1\ub41c \uc0c1\ud638 \uc5f0\uacb0 VPNS SA\uc5d0 \ub300\ud574 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "\ub2e4\uc74c\uc5d0 \ub300\ud574 \uadf8\ub8f9 \uc5c5\ub370\uc774\ud2b8\uac00 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "\ud5a5\uc0c1\ub41c \uc0c1\ud638 \uc5f0\uacb0 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "\ud45c\uc900 \uc0c1\ud638 \uc5f0\uacb0 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "\ud5a5\uc0c1\ub41c \ube44 \uc0c1\ud638 \uc5f0\uacb0 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "\ud45c\uc900 \ube44 \uc0c1\ud638 \uc5f0\uacb0 VPN SA"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "\uc774 \uc7a5\uce58\uc758 \ud38c\uc6e8\uc5b4 \ubc84\uc804\uc5d0\uc11c \ud130\ub110 \uc778\ud130\ud398\uc774\uc2a4 \uc720\ud615\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \uc774 \uc7a5\uce58\uc5d0 \ub300\ud574 SA \ub9cc\ub4e4\uae30\ub97c \uac74\ub108\ub6f0\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "\ub2e4\uc74c \ub0a0\uc9dc\uc5d0 \uc2e4\ud589\ud558\ub3c4\ub85d \uc608\uc57d\ub41c \uc791\uc5c5"}, {"PASSWORD_CHANGED", "SonicWall GMS \uc554\ud638\uac00 \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"PASSWORD_NOT_CHANGED_A", "\uc9c0\uc815\ud55c \uc774\uc804 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4.<BR>"}, {"PASSWORD_NOT_CHANGED_B", " \uc554\ud638\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"PASSWORD_NOT_CHANGED", "\uc9c0\uc815\ud55c \uc774\uc804 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc554\ud638\uac00 \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"LOGS_PASSWD_CHANGED", "\uc0ac\uc6a9\uc790 \ub85c\uadf8\uc778 \uc554\ud638\uac00 \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"LOGS_PASSWD_NOT_CHANGED", "\uc2dc\uc2a4\ud15c\uc5d0\uc11c \ub85c\uadf8\uc778 \uc554\ud638\ub97c \ubcc0\uacbd\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. "}, {"LOGS_ADDED_NEW_USER", "\uc0c8 \uc0ac\uc6a9\uc790\uac00 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ucd94\uac00\ub428: "}, {"LOGS_ADDED_NEW_USER_TYPE", "\uc0c8 \uc0ac\uc6a9\uc790 \uc720\ud615\uc774 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ucd94\uac00\ub428: "}, {"LOGS_DELETED_USER", "\uc0ac\uc6a9\uc790 \ubc0f \ud574\ub2f9 \uc815\ubcf4\uac00 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ad\uc81c\ub428: "}, {"LOGS_DELETED_GROUP", "\ub2e4\uc74c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9 \ubc0f \uc774 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 \ubcf4\uae30\uac00 SonicWall GMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ad\uc81c\ub428: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ud2b9\uc131 \uac12("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ")\uc5d0\ub294 \uc601\uc22b\uc790\ub9cc \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"LOGS_ADD_CUSTOM_GROUP", "\ub2e4\uc74c\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9 \uc774\ub984/\uae30\ubcf8\uac12\uc774 \uc2dc\uc2a4\ud15c\uc5d0 \ucd94\uac00\ub418\uc5c8\uc74c: "}, {"LOGS_MOD_CUSTOM_GROUP", "\ub2e4\uc74c\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9 \uc774\ub984/\uae30\ubcf8\uac12\uc774 \uc218\uc815\ub418\uc5c8\uc74c: "}, {"LOGS_DEL_CUSTOM_GROUP", "\ub2e4\uc74c\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uadf8\ub8f9\uc774 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc0ad\uc81c\ub418\uc5c8\uc74c: "}, {"READY", "\uc900\ube44"}, {"NAV_OF", " / "}, {"NAV_PREVIOUS", "\uc774\uc804"}, {"NAV_NEXT", "\ub2e4\uc74c"}, {"NAV_DISPLAYING", "\ud45c\uc2dc"}, {"NAV_FIREWALLS", "\ubc29\ud654\ubcbd"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "\uc774 \ud654\uba74\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ACT_WRONG_FILE_FORMAT", "\uc624\ub958: \uc798\ubabb\ub41c \ud30c\uc77c \ud615\uc2dd\uc774\ubbc0\ub85c \ucf54\ub4dc\ub97c \ucd94\uac00\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"AUTH_INVALID_PARAMS", "\uc798\ubabb\ub41c \ub9e4\uac1c \ubcc0\uc218\uc785\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"AUTH_AUTHENTICATE", "\uc778\uc99d"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "\ub85c\uadf8\uc778 \ub09c\uc218\uc758 \uc2dc\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"AUTH_LOGIN_TIMEOUT", "\ub85c\uadf8\uc778 \ud398\uc774\uc9c0\uc758 \uc2dc\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"AUTH_LOGIN_FAILURE", "\ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"AUTH_LOGIN_FAILURE_LOG", "\ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {"NO_DOMAIN_SPECIFIED", "\ub85c\uadf8\uc778\uc5d0 \ub300\ud574 \ub3c4\uba54\uc778 \uc774\ub984\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"SPECIFY_DOMAIN", "\ub85c\uadf8\uc778\uc5d0 \ub300\ud574 \ub3c4\uba54\uc778 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"INVALID_IP", "[KR]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "\uc798\ubabb\ub41c \ub3c4\uba54\uc778\uc785\ub2c8\ub2e4. \uc720\ud6a8\ud55c \ub3c4\uba54\uc778 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"INVALID_ALIAS_MSG", "\uc798\ubabb\ub41c \ubcc4\uce6d\uc785\ub2c8\ub2e4. \uc720\ud6a8\ud55c \ubcc4\uce6d\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"REMOTE_SUCCESSFUL_LOGIN", "\uc0ac\uc6a9\uc790\uac00 \uc2dc\uc2a4\ud15c\uc5d0 \ub85c\uadf8\uc778\ub428: "}, {"TWOFA_FAILED_LOGIN_MSG", "[KR]Invalid Authentication Code. Please enter valid Authentication code. (Make sure that your mobile time is synced to your network time.) "}, {"TWOFA_EMERGENCY_CODE_RESET_MSG", "[KR]EMERGENCY Code Used, 2FA RESET for user : "}, {"REMOTE_FAILED_LOGIN", "\uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \uc6d0\uaca9 \uc778\uc99d\uc774 \uc2e4\ud328\ud568: "}, {"XML_REMOTE_FAILED_LOGIN", "\uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 XML \uae30\ubc18 \uc6d0\uaca9 \uc778\uc99d\uc774 \uc2e4\ud328\ud568: "}, {"NEW_USER_ADDED", "\uc0c8 \uc0ac\uc6a9\uc790\uac00 \ucd94\uac00\ub428: "}, {"TO_USER_TYPE", "\uc0ac\uc6a9\uc790 \uc720\ud615: "}, {"CLICK_TO_TRY_AGAIN", "\uc5ec\uae30\ub97c \ud074\ub9ad\ud558\uc5ec \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"USER_LOCKED_OUT", "\uc0ac\uc6a9\uc790\uac00 \uc7a0\uacbc\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"USER_DISABLED", "\uc0ac\uc6a9\uc790 \uacc4\uc815\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "\uc6d0\uaca9 \uc778\uc99d\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. GMS \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "\uc6d0\uaca9 \uc778\uc99d\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. GMS \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uac70\ub098 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_AUTH_FAILED", "\uc6d0\uaca9 \uc778\uc99d\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {"LDAP_USER_NOT_FOUND", "\ub514\ub809\ud130\ub9ac\uc5d0\uc11c \uc0ac\uc6a9\uc790\ub97c \ucc3e\uc744 \uc218 \uc5c6\uac70\ub098 \uc0ac\uc6a9\uc790\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LDAP_INVALID_CREDENTIALS", "\uc6d0\uaca9 \uc778\uc99d \uc2e4\ud328: \uc798\ubabb\ub41c \uc790\uaca9 \uc99d\uba85"}, {"LDAP_COMMUNICATION_ERROR", "\ub514\ub809\ud130\ub9ac\ub098 \uba85\uba85 \uc11c\ube44\uc2a4\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LDAP_ANONYMOUS_BIND_SET", "AnonymousBind\uac00 \ub3c4\uba54\uc778\uc5d0 \ub300\ud574 \ud5c8\uc6a9\ub428\uc73c\ub85c \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "\uc6d0\uaca9 \uc11c\ubc84\uc5d0\uc11c \uc775\uba85 \ubc14\uc778\ub529\uc744 \ud5c8\uc6a9\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_INVALID_GROUPS_SPECIFIED", "\uc798\ubabb\ub41c \ub514\ub809\ud130\ub9ac \uadf8\ub8f9\uc774 \uc9c0\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. GMS \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"LDAP_INVALID_GROUP_MEMBER", "\uc0ac\uc6a9\uc790\uac00 \ud5c8\uc6a9\ub418\ub294 \ub514\ub809\ud130\ub9ac \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc774 \uc544\ub2d9\ub2c8\ub2e4."}, {"RADIUS_UNKNOWN_HOST", "\uc54c \uc218 \uc5c6\ub294 RADIUS \uc11c\ubc84 \ud638\uc2a4\ud2b8\uc785\ub2c8\ub2e4."}, {"RADIUS_CONNECTION_TIMEOUT", "\uc6d0\uaca9 RADIUS \uc11c\ubc84\ub85c\uc758 \uc5f0\uacb0\uc774 \uc2dc\uac04 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"RADIUS_FAILED_LOGIN", "\uc778\uc99d\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. \uc798\ubabb\ub41c \uc790\uaca9 \uc99d\uba85\uc785\ub2c8\ub2e4."}, {"RADIUS_EXCEPTION", "RADIUS \uc608\uc678\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"RADIUS_INVALID_GROUP_MEMBER", "\uc0ac\uc6a9\uc790\uac00 \ud5c8\uc6a9\ub418\ub294 RADIUS \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc774 \uc544\ub2d9\ub2c8\ub2e4."}, {"PWD_CHANGE_SCREEN", "\uc554\ud638\ub97c \ubcc0\uacbd\ud569\ub2c8\ub2e4."}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "\uc554\ud638 \ubcc0\uacbd \uae38\uc774\uac00 \ud5c8\uc6a9\ub41c \ubc94\uc704(7\uc790 - 15\uc790)\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"PWD_VALIDATION_FAILURE", "\uc554\ud638 \ubcc0\uacbd \uae38\uc774\ub294 15\uc790\ub97c \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PWD_EXPIRATION", "\uc554\ud638\ub294 {0}\uc77c\ub9c8\ub2e4 \ubcc0\uacbd\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"PWD_CHANGE_NEXT_LOGIN", "\uad00\ub9ac\uc790\uac00 \uac15\uc81c\ub85c \uc548\ud638\ub97c \ubcc0\uacbd\ud588\uc2b5\ub2c8\ub2e4."}, {"PASSWORD_EXISTS", "[KR]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[KR]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[KR]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "\ub77c\uc774\uc120\uc2a4 \ud30c\uc77c\uc744 \uc77d\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CUI_UPGRADE_SUCCESS", "\uc5c5\uadf8\ub808\uc774\ub4dc \uc131\uacf5"}, {"CUI_UPGRADE_FAIL", "\uc5c5\uadf8\ub808\uc774\ub4dc \uc2e4\ud328: "}, {"CUI_SYNCH_SUCCESS", "\ub3d9\uae30\ud654 \uc131\uacf5"}, {"CUI_SYNCH_FAIL", "\ub3d9\uae30\ud654 \uc2e4\ud328: "}, {"CUI_PRORATE_SUCCESS", "ProRate \uc694\uccad \uc131\uacf5"}, {"CUI_PRORATE_FAIL", "ProRate \uc694\uccad \uc2e4\ud328: "}, {"CUI_CHANGE_PW_SUCCESS", "\uc131\uacf5.  MySonicWall.com\uc5d0\uc11c \uc554\ud638\uac00 \uc218\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CUI_CHANGE_PW_FAIL", "\uc2e4\ud328.  MySonicWall.com\uc5d0\uc11c \uc554\ud638\uac00 \uc218\ub77d\ub418\uc9c0 \uc54a\uc74c: "}, {"CUI_EMAIL_SUCCESS", "TechSupport \uc591\uc2dd\uc774 SonicWall GMS \uc9c0\uc6d0 \uc13c\ud130\ub85c \uc804\uc790 \uba54\uc77c\uc744 \ud1b5\ud574 \uc804\uc1a1\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CUI_EMAIL_FAIL", "TechSupport \ubcf4\uace0\uc11c\ub97c SonicWall GMS \uc9c0\uc6d0 \uc13c\ud130\ub85c \ubcf4\ub0b4\ub294 \uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.<br>\ub098\uc911\uc5d0 \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"CUI_SESSION_TERMINATED", " \uc138\uc158\uc774 \uc885\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CUI_SESSIONS_TERMINATED", " \uc138\uc158\uc774 \uc885\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CUI_NO_AGENTS", "\uc5d0\uc774\uc804\ud2b8\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CUI_FILTER_ADDED", "\uc0c8 \ud544\ud130\uac00 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"DIAG_DIAG_REQUEST_A", "\uc9c4\ub2e8 \uc694\uccad(\ub9cc\ub4e4\uc5b4\uc9c4 \uc704\uce58: "}, {"DIAG_DIAG_REQUEST_B", " )\uc774 \uc81c\ucd9c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DIAG_DELETE_SUCCESS", "\uc0ad\uc81c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DIAG_EMAIL_SUCCESS", "\uc804\uc790 \uba54\uc77c\uc774 \uc804\uc1a1\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DIAG_UNIT_UNKNOWN", "'\uc7a5\uce58 \uc774\ub984\uc744 \uc54c \uc218 \uc5c6\uc74c'"}, {"DIAG_UNIT", "'\uc7a5\uce58 "}, {"VPN_DUPLICATE_UFI", "\uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4. \uace0\uc720 \ubc29\ud654\ubcbd \uc2dd\ubcc4\uc790\uac00 SonicWall GMS\uc5d0\uc11c \uace0\uc720\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"NO_LOGS_MESSAGE", "\ub85c\uadf8\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "\uc81c\uacf5\ub41c \uac80\uc0c9 \uc870\uac74\uc5d0 \ud574\ub2f9\ud558\ub294 \ub85c\uadf8\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LOG_START_SEARCH", "\uc0c8 \uac80\uc0c9 \uc2dc\uc791"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "{0,number,integer} \ub808\ucf54\ub4dc\uc5d0 \ub300\ud55c \ucffc\ub9ac\uac00 \ub108\ubb34 \ud07d\ub2c8\ub2e4. \uac80\uc0c9 \uc870\uac74\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624."}, {"SQL_EXCEPTION_ERROR_MESSAGE", "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\uacb0\uc5d0 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uc0ac\uc6a9 \uac00\ub2a5\ud55c\uc9c0 \ud655\uc778\ud558\uac70\ub098 \uac80\uc0c9 \uc870\uac74\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624."}, {"UNKNOWN_EXCEPTION_MESSAGE", "\uac80\uc0c9\uc744 \uc2e4\ud589\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uc0ac\uc6a9 \uac00\ub2a5\ud55c\uc9c0 \ud655\uc778\ud558\uac70\ub098 \uac80\uc0c9 \uc870\uac74\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624."}, {"LOG_NEXT", "\ub2e4\uc74c"}, {"LOG_PREVIOUS", "\uc774\uc804"}, {"LOG_UPDATE_SUCCESS", "\uc5c5\ub370\uc774\ud2b8\uac00 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LOG_OF", " / "}, {"LOG_OF", " / "}, {"PREFS_SYNCHRONIZE_STARTED", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc640 \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud558\ub294 \uc791\uc5c5\uc774 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud558\uc9c0 \ubabb\ud588\uc73c\ubbc0\ub85c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub85c\uadf8\uc778\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"MON_NO_PRIVILEGES", "\uc774 \ud654\uba74\uc5d0 \ub300\ud55c \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"MON_SYNC_TASK_CREATED", "\ub3d9\uae30\ud654 \uc791\uc5c5\uc774 \ub9cc\ub4e4\uc5b4\uc84c\uc2b5\ub2c8\ub2e4."}, {"MON_SYNC_TASK_FAIL", "\ub3d9\uae30\ud654 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"MON_RENEGOTIATE_TASK_CREATED", "\uc7ac\ud611\uc0c1 \uc791\uc5c5\uc774 \ub9cc\ub4e4\uc5b4\uc84c\uc2b5\ub2c8\ub2e4."}, {"MON_RENEGOTIATE_FAILED", "\uc7ac\ud611\uc0c1 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"MON_NO_SELECTED", "\uc7ac\ud611\uc0c1\ud560 \ud130\ub110\uc744 \uc120\ud0dd\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"MON_REFRESH_CREATED", "\ud1b5\uacc4 \uc0c8\ub85c \uace0\uce68 \uc791\uc5c5\uc774 \ub9cc\ub4e4\uc5b4\uc84c\uc2b5\ub2c8\ub2e4."}, {"MON_REFRESH_FAIL", "\ud130\ub110 \ud1b5\uacc4\uc5d0 \ub300\ud574 \uc0c8\ub85c \uace0\uce68 \uc791\uc5c5\uc744 \ub9cc\ub4e4\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"MON_NO_SELECTED_REFRESH", "\ud1b5\uacc4\ub97c \uc0c8\ub85c \uace0\uce60 \ud130\ub110\uc744 \uc120\ud0dd\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"MON_UPDATE_SUCCESS", "\uc5c5\ub370\uc774\ud2b8\uac00 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"MON_UPDATE_FAIL", "\uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"MON_NO_MONITORING", "\ud130\ub110\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"MON_NAME", "\uc774\ub984"}, {"MON_GATEWAY", "\uac8c\uc774\ud2b8\uc6e8\uc774"}, {"MON_LAST_UPDATED", "\ub9c8\uc9c0\ub9c9 \uc5c5\ub370\uc774\ud2b8"}, {"MON_DEST_ADDR_RANGE", "\ub300\uc0c1 \uc8fc\uc18c \ubc94\uc704"}, {"MON_LOCAL_ADDR_RANGE", "\ub85c\uceec \uc8fc\uc18c \ubc94\uc704"}, {"MON_NO_TUNNELS_FOUND", "\ud130\ub110\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"MON_TITLE", "VPN \ud130\ub110 \ud1b5\uacc4"}, {"MON_DESCRIPTION", "\uc124\uba85"}, {"MON_VALUE", "\uac12"}, {"MON_CREATE_TIME", "\ub9cc\ub4e0 \uc2dc\uac04"}, {"MON_VALID_UNTIL", "\ud130\ub110 \uc720\ud6a8 \uae30\uac04:"}, {"MON_PACKETS_IN", "\ud328\ud0b7 \uc785\ub825"}, {"MON_PACKETS_OUT", "\ud328\ud0b7 \ucd9c\ub825"}, {"MON_BYTES_IN", "\ubc14\uc774\ud2b8 \uc785\ub825"}, {"MON_BYTES_OUT", "\ubc14\uc774\ud2b8 \ucd9c\ub825"}, {"MON_FRAGMENTS_IN", "\uc870\uac01 \ud328\ud0b7 \uc785\ub825"}, {"MON_FRAGMENTS_OUT", "\uc870\uac01 \ud328\ud0b7 \ucd9c\ub825"}, {"MON_TUNNEL_ACTIVE", "\ud130\ub110\uc774 \ud65c\uc131 \uc0c1\ud0dc\uc785\ub2c8\ub2e4."}, {"REG_NO_PERMISSION", "\uc774 \ud654\uba74\uc5d0 \ub300\ud55c \uc5c5\ub370\uc774\ud2b8 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"REG_ERROR_RETRIEVING_COUNT", "\ub4f1\ub85d\ub41c/\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc740 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc218\ub97c \uac80\uc0c9\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"REG_CURRENT", "\ud604\uc7ac"}, {"REG_EXPIRED", "\ub9cc\ub8cc\ub428"}, {"REG_NO_LICENSE", "\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "\ud38c\uc6e8\uc5b4 \uc774\ubbf8\uc9c0\ub97c \uc5c5\ub85c\ub4dc\ud560 \uc218 \uc5c6\uc74c"}, {"TASKS_SUCCESSFUL_DELETION", "\uc791\uc5c5\uc774 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ad\uc81c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASKS_ERROR_DELETION", "\uc624\ub958: \uc791\uc5c5\uc744 \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TASKS_EXECUTION_SET", "\uc791\uc5c5\uc774 \uc989\uc2dc \uc2e4\ud589\ub418\ub3c4\ub85d \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "\uc791\uc5c5\uc744 \ubb34\ub2e8\uc73c\ub85c \uc2e4\ud589\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASKS_ERROR_EXECUTION", "\uc624\ub958: \uc2e4\ud589\uc744 \uc704\ud574 \uc791\uc5c5\uc744 \uc608\uc57d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TASK_DELETED_LOG_MESSAGE", "\uc0ac\uc6a9\uc790\uac00 \ub2e4\uc74c \uc791\uc5c5\uc744 \uc0ad\uc81c\ud588\uc2b5\ub2c8\ub2e4. "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "\uc791\uc5c5\uc744 \ubb34\ub2e8\uc73c\ub85c \uc0ad\uc81c\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {"NO_TASKS_MESSAGE", "\uc791\uc5c5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "\uc81c\uacf5\ub41c \uac80\uc0c9 \uc870\uac74\uc5d0 \ud574\ub2f9\ud558\ub294 \uc791\uc5c5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TASKS_RESCHEDULED", "\uc791\uc5c5\uc774 \ub2e4\uc2dc \uc608\uc57d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "\uc791\uc5c5\uc744 \ubb34\ub2e8\uc73c\ub85c \ub2e4\uc2dc \uc608\uc57d\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {"TASKS_ERROR_RESCHEDULE", "\uc624\ub958: \uc791\uc5c5\uc744 \ub2e4\uc2dc \uc608\uc57d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"IMMEDIATE_STRING", "\uc989\uc2dc"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "\ub85c\uceec"}, {"AGENT_STRING", "\uc5d0\uc774\uc804\ud2b8"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "\uc0ac\uc6a9\uc790\uac00 \ub2e4\uc74c \uc791\uc5c5\uc744 \ub2e4\uc2dc \uc608\uc57d\ud588\uc2b5\ub2c8\ub2e4. "}, {"FROM_LOG_MESSAGE", " \uc2dc\uc791 "}, {"TO_LOG_MESSAGE", " \uc885\ub8cc "}, {"IMMEDIATE_LOG_MESSAGE", "\uc989\uc2dc \uc2e4\ud589"}, {"REG_PASSWORD_SUCCESS", "\uc131\uacf5.  MySonicWall.com\uc5d0\uc11c \uc554\ud638\uac00 \uc218\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uacc4\uc18d\ud558\ub824\uba74 [\uc5c5\ub370\uc774\ud2b8]\ub97c \ub204\ub974\uc2ed\uc2dc\uc624."}, {"REG_PASSWORD_FAIL", "\uc2e4\ud328.  MySonicWall.com\uc5d0\uc11c \uc554\ud638\uac00 \uc218\ub77d\ub418\uc9c0 \uc54a\uc74c: "}, {"LOGIN_MESSAGE", "\ub85c\uadf8\uc778\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_DEFAULT_MESSAGE", "\uae30\ubcf8 \uc0ac\uc6a9\uc790 'admin' \ubc0f \uc554\ud638 'password'\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\uc778\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "\uae30\ubcf8 \uc0ac\uc6a9\uc790 'admin' \ubc0f \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc640 \ub3d9\uc77c\ud55c \uc554\ud638\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_DEMO_MESSAGE", "\uc0ac\uc6a9\uc790 'demo' \ubc0f \uc554\ud638:'password'\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\uc778\ud558\uc2ed\uc2dc\uc624."}, {"SETTINGSVPS_CHANGED", "\ubd84\uc11d\uae30 \uc124\uc815\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SETTINGS_CHANGED", "\uc124\uc815\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LOGS_USER_FORCEDOUT", " \uc5d0\uc11c \ub2e4\uc74c \uc0ac\uc6a9\uc790\ub97c \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uac15\uc81c \ub85c\uadf8\uc544\uc6c3\ud568: "}, {"SLAVE_STATE_CHANGED_MESSAGE", "\ud574\ub2f9 \uc0c1\ud0dc\ub97c \ubcc0\uacbd\ud558\ub3c4\ub85d \uc5d0\uc774\uc804\ud2b8\uac00 \uad6c\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "\uc2dc\ub3c4 \uc2e4\ud328: \uc5d0\uc774\uc804\ud2b8 \uc0c1\ud0dc\ub97c \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \ub9e4\uac1c \ubcc0\uc218\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \ub9e4\uac1c \ubcc0\uc218\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SCHEDULER_UP_STATE", "\uc704"}, {"SCHEDULER_DOWN_STATE", "\uc544\ub798"}, {"SCHEDULER_UNDETERMINED_STATE", "\uacb0\uc815\ub418\uc9c0 \uc54a\uc74c"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \uc18d\uc131\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SMTPSERVER_INVALID", "\uc798\ubabb\ub41c SMTP \uc11c\ubc84 \uc8fc\uc18c\uc785\ub2c8\ub2e4."}, {"APPLIANCE_MANAGE_FAILED", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uad00\ub9ac \uae30\ubcf8 \uc124\uc815\uc744 \ubcc0\uacbd\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"EMPTY_SMTP_PWD", "SMTP \uc554\ud638\ub294 \ube44\uc6cc \ub458 \uc218 \uc5c6\uc74c"}, {"TREE_AGENT_STARTED", "\uc5d0\uc774\uc804\ud2b8\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud558\ub824\uba74 \uae30\ubcf8 \uc5d0\uc774\uc804\ud2b8\uac00 \uc2dc\uc791\ub41c \uc0c1\ud0dc\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"TREE_STANDBY_STARTED", "\uc5d0\uc774\uc804\ud2b8\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud558\ub824\uba74 \ub300\uae30 \uc5d0\uc774\uc804\ud2b8\uac00 \uc2dc\uc791\ub41c \uc0c1\ud0dc\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"TREE_LICENSE_EXCEEDED", "\uad00\ub9ac \uc911\uc778 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub354 \uc774\uc0c1 \ucd94\uac00\ud560 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TREE_IP_EMPTY", "IP\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc720\ud6a8\ud55c IP \uc8fc\uc18c\ub97c \uc81c\uacf5\ud558\uc2ed\uc2dc\uc624."}, {"TREE_AUTH_FAIL", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc778\uc99d\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. \uc124\uc815\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"TREE_NO_RESPONSE", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc124\uc815\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"TREE_FIREWALL_NOT_LICENSED", "\ubd84\uc11d\uae30\uc5d0 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TREE_FIREWALL_STATE_ERROR", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc0c1\ud0dc \uc815\ubcf4\ub97c \uac80\uc0c9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4.\n\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ud38c\uc6e8\uc5b4\ub97c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"TREE_MODEL_FAIL", "\ubaa8\ub378 \uc815\ubcf4\ub97c \uac80\uc0c9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"TREE_FIRMWARE_VERSION_FAIL", "\ud38c\uc6e8\uc5b4 \ubc84\uc804\uc744 \uac80\uc0c9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"TREE_UNMATCHED_SERIAL", "\uc77c\ub828 \ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"TREE_TIMEZONE_FAIL", "\ud45c\uc900 \uc2dc\uac04\ub300\ub97c \uac80\uc0c9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"TREE_UTC_FAIL", "\ub85c\uadf8 \uba54\uc2dc\uc9c0\uac00 UTC \ud615\uc2dd\uc774 \uc544\ub2d9\ub2c8\ub2e4. \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \ud0c0\uc784\uc2a4\ud0ec\ud504 \ud615\uc2dd\uc744 UTC\ub85c \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc0dd\uc131\ub418\ub294 \ubcf4\uace0\uc11c\uc5d0 \uc798\ubabb\ub41c \uc2dc\uac04\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4."}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "[\ub85c\uadf8] > [\ubdf0\ud3ec\uc778\ud2b8] \ud654\uba74\uc5d0\uc11c [Enable ViewPoint Settings(\ubdf0\ud3ec\uc778\ud2b8 \uc124\uc815 \uc0ac\uc6a9)] \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \uc774 \uc124\uc815\uc73c\ub85c \ub2e4\uc74c \ub0b4\uc6a9\uc774 \ubcc0\uacbd\ub429\ub2c8\ub2e4.\n\t1. Syslog\uac00 UTC\ub85c \uc804\uc1a1\ub429\ub2c8\ub2e4.\n\t2. [Syslog \uc774\ubca4\ud2b8 \uc911\ubcf5 \ud544\ud130(\ucd08)]\uac00 0\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4.\n\t3. [Syslog \ud615\uc2dd]\uc774 [\uae30\ubcf8\uac12]\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4."}, {"TREE_NO_SCHEDULER", "\uc9c0\uc815\ub41c IP \uc8fc\uc18c\uc5d0 \uc2a4\ucf00\uc904\ub7ec\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"TREE_GET_PREFS_ERR", "\uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc744 \uac80\uc0c9\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"TREE_FIREWALL_NOT_REGISTERED", "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub294 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.  \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ubd84\uc11d\uae30\uc5d0 \ucd94\uac00\ud558\uae30 \uc804\uc5d0 MySonicWall.com\uc744 \ubc29\ubb38\ud558\uace0 \ud574\ub2f9 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub4f1\ub85d\ud558\uc2ed\uc2dc\uc624."}, {"TREE_BACKEND_COMM_FAILURE", "\ubd84\uc11d\uae30\uc5d0\uc11c \ub77c\uc774\uc120\uc2a4\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 MySonicWall.com\uacfc \ud1b5\uc2e0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ubd84\uc11d\uae30 \uc11c\ubc84\uac00 MySonicWall.com\uacfc \ud1b5\uc2e0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. "}, {"SU_DB_SIZE_EMAILBODY1", "\ud604\uc7ac \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.\n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\n\ucc38\uace0: \ucd5c\ub300 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30 \uc81c\ud55c\uc740 2GB\uc785\ub2c8\ub2e4.\n\n \n\ub2e4\uc74c \uad6c\uc131 \ubcc0\uacbd \ub0b4\uc6a9\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0ac\uc6a9\uc758 \uc804\uccb4 \ud06c\uae30\uc5d0 \uc601\ud5a5\uc744 \uc90d\ub2c8\ub2e4.\n\t[Console Panel(\ucf58\uc194 \ud328\ub110)]->[\ubcf4\uace0\uc11c]->[\uc124\uc815] \ud654\uba74\uc5d0\uc11c [Days To Store Raw Data(\uc6d0\uc2dc \ub370\uc774\ud130 \uc800\uc7a5 \uc77c\uc218)]\uc5d0 \ub300\ud55c \uc77c\uc218 \uc124\uc815\uc744 \uc904\uc785\ub2c8\ub2e4.\n\t[Console Panel(\ucf58\uc194 \ud328\ub110)]->[\ubcf4\uace0\uc11c]->[Summarizer(\uc694\uc57d \uc791\uc131\uae30)] \ud654\uba74\uc5d0\uc11c [Days To Store Summarized Data(\uc694\uc57d \ub370\uc774\ud130 \uc800\uc7a5 \uc77c\uc218)] \uc124\uc815\uc5d0 \ub300\ud55c \uc77c\uc218\ub098 \uc22b\uc790\ub97c \uc904\uc785\ub2c8\ub2e4."}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\n\ucc38\uace0: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "\ucd5c\ub300 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30 \uc81c\ud55c\uc740 2GB\uc785\ub2c8\ub2e4.\n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\n\ub2e4\uc74c \uad6c\uc131 \ubcc0\uacbd \ub0b4\uc6a9\uc740 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0ac\uc6a9\uc758 \uc804\uccb4 \ud06c\uae30\uc5d0 \uc601\ud5a5\uc744 \uc90d\ub2c8\ub2e4.\n\t[Console Panel(\ucf58\uc194 \ud328\ub110)]->[\ubcf4\uace0\uc11c]->[\uc124\uc815] \ud654\uba74\uc5d0\uc11c [Days To Store Raw Data(\uc6d0\uc2dc \ub370\uc774\ud130 \uc800\uc7a5 \uc77c\uc218)]\uc5d0 \ub300\ud55c \uc77c\uc218 \uc124\uc815\uc744 \uc904\uc785\ub2c8\ub2e4.\n\t[Console Panel(\ucf58\uc194 \ud328\ub110)]->[\ubcf4\uace0\uc11c]->[Summarizer(\uc694\uc57d \uc791\uc131\uae30)] \ud654\uba74\uc5d0\uc11c [Days To Store Summarized Data(\uc694\uc57d \ub370\uc774\ud130 \uc800\uc7a5 \uc77c\uc218)] \uc124\uc815\uc5d0 \ub300\ud55c \uc77c\uc218\ub098 \uc22b\uc790\ub97c \uc904\uc785\ub2c8\ub2e4."}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "\uacbd\uace0:\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "\uc720\uc9c0 \uad00\ub9ac \ubc31\uc5c5 \uacc4\ud68d\uc5d0\uc11c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc124\uc815\ud558\uc9c0 \uc54a\uc558\ub294\uc9c0, \uae30\uc874 \uacc4\ud68d\uc5d0\uc11c \ub85c\uadf8\ub97c \uc9c0\uc6b0\uc9c0 \ubabb\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\n\uc720\uc9c0 \uad00\ub9ac \uacc4\ud68d\uc5d0\uc11c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc124\uc815\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ud2b8\ub79c\uc7ad\uc158 \ub85c\uadf8\uac00 \uacc4\uc18d\ud574\uc11c \ud655\uc7a5\ub418\uace0 \uc804\uccb4 \ud558\ub4dc \ub514\uc2a4\ud06c\ub97c \ucc44\uc6b0\uac8c \ub429\ub2c8\ub2e4.\n\uadf8\ub807\uac8c \ub418\uba74 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc0f GMS \uc2dc\uc2a4\ud15c\uc774 \uc791\ub3d9\ud558\uc9c0 \uc54a\uac8c \ub429\ub2c8\ub2e4. \ub2e4\uc74c\uc73c\ub85c, \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \ucda9\ub3cc\ud560 \uacbd\uc6b0\n\ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc54c\ub824\uc9c4 \ub9c8\uc9c0\ub9c9 \ubc31\uc5c5\uc73c\ub85c \ubcf5\uc6d0\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4."}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall \ubd84\uc11d\uae30: \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0c1\ud0dc \ud655\uc778"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "\ub2e4\uc74c \uc77c\ub828 \ubc88\ud638\ub97c \ud3ec\ud568\ud55c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 \ub77c\uc774\uc120\uc2a4 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc704\ud55c \uc7a5\uce58 \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4 "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", ". \ub85c\uadf8\uc778\uc5d0 \ud544\uc694\ud55c \uc124\uc815\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \ub85c\uceec\ub85c \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. [Modify Unit(\uc7a5\uce58 \uc218\uc815)]\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubd84\uc11d\uae30\uc5d0 \ubcc0\uacbd \ub0b4\uc6a9 \ubc18\uc601", "\ubd84\uc11d\uae30\uc5d0\uc11c\uc758 \ub77c\uc774\uc120\uc2a4 \uc720\ud6a8\uc131 \uac80\uc0ac"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "\ubd84\uc11d\uae30\uc5d0\uc11c\uc758 \ub77c\uc774\uc120\uc2a4 \uc720\ud6a8\uc131 \uac80\uc0ac"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "\ub77c\uc774\uc120\uc2a4 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc704\ud55c "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc73c\uba70 \uc720\uc608 \uae30\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub85c\uadf8\uc778\uc5d0 \ud544\uc694\ud55c \uc124\uc815\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \ub85c\uceec\ub85c \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. [Modify Unit(\uc7a5\uce58 \uc218\uc815)]\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubd84\uc11d\uae30\uc5d0 \ubcc0\uacbd \ub0b4\uc6a9 \ubc18\uc601"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "\ubd84\uc11d\uae30 \ub77c\uc774\uc120\uc2a4\uac00 \ub9cc\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4!"}, {"SU_LIC_EXPIRED_BODY1", "\ubd84\uc11d\uae30\uc5d0 \ub300\ud574 "}, {"SU_LIC_EXPIRED_BODY2", " \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc124\uc815\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"SU_LIC_EXPIRED_SUBJECT", "\ubd84\uc11d\uae30 \ub77c\uc774\uc120\uc2a4\uac00 \ub9cc\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4!"}, {"LOGVIEW_WRONG_START_DT", "\uc2dc\uc791 \ub0a0\uc9dc \ud615\uc2dd\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub0a0\uc9dc\ub294 mm/dd/yyyy \ud615\uc2dd\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"LOGVIEW_WRONG_END_DT", "\uc885\ub8cc \ub0a0\uc9dc \ud615\uc2dd\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub0a0\uc9dc\ub294 mm/dd/yyyy \ud615\uc2dd\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"LOGVIEW_ENDDT_LESS_STARTDT", "\uc885\ub8cc \ub0a0\uc9dc\uac00 \uc2dc\uc791 \ub0a0\uc9dc\ubcf4\ub2e4 \uc774\uc804\uc785\ub2c8\ub2e4. \uc62c\ubc14\ub978 \uc2dc\uc791 \ub0a0\uc9dc\uc640 \uc885\ub8cc \ub0a0\uc9dc\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"LOGVIEW_MSGS_PERSCRN", "\ud654\uba74\ub2f9 \uba54\uc2dc\uc9c0 \uc218"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "{0,number,integer}\uac1c\uc758 \ub85c\uadf8 \ud56d\ubaa9\uc744 \ub0b4\ubcf4\ub0b4\ub824\uace0 \ud569\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c? \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 \uc774 \ub300\ud654 \uc0c1\uc790\ub97c \ucde8\uc18c\ud558\uace0 \uac80\uc0c9 \uc870\uac74\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624."}, {"LOGVIEW_GOTO_MSG", "\uba54\uc2dc\uc9c0 \ubc88\ud638\ub85c \uc774\ub3d9"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "\ud654\uba74\ub2f9 \uba54\uc2dc\uc9c0 \uc218 \ud45c\uc2dc:"}, {"LOGVIEW_RANGE", "(\ubc94\uc704: 10-100)"}, {"LOGVIEW_COL_DT", "\ub0a0\uc9dc"}, {"LOGVIEW_COL_MSG", "\uba54\uc2dc\uc9c0"}, {"LOGVIEW_COL_SEV", "\uc2ec\uac01\ub3c4"}, {"LOGVIEW_COL_USER", "GMS \uc0ac\uc6a9\uc790"}, {"LOGVIEW_COL_CO", "\uc21c\uc11c \ubcc0\uacbd"}, {"LOGVIEW_COL_IP", "\uc0ac\uc6a9\uc790 IP"}, {"LOGVIEW_SEARCH_RESULTS", "\uac80\uc0c9 \uacb0\uacfc"}, {"LOGVIEW_SEARCH_CRITERIA", "\uac80\uc0c9 \uc870\uac74"}, {"LOGVIEW_EXPORT_LOGS", "\ub85c\uadf8 \ub0b4\ubcf4\ub0b4\uae30"}, {"LOGVIEW_CLEAR_LOGS", "\uac80\uc0c9 \uc9c0\uc6b0\uae30"}, {"LOGVIEW_SEARCH_LOGS", "\uac80\uc0c9 \uc2dc\uc791"}, {"LOGVIEW_MATCH_CASE", "\ub300/\uc18c\ubb38\uc790 \uad6c\ubd84"}, {"LOGVIEW_EXACT_PHRASE", "\uc815\ud655\ud558\uac8c \uc77c\uce58\ud558\ub294 \uad6c"}, {"LOGVIEW_ANY_WORD", "\ub2e8\uc5b4 \ub2e8\uc704\ub85c \ucc3e\uae30(OR)"}, {"LOGVIEW_ALL_WORDS", "\ub2e8\uc5b4 \ub2e8\uc704\ub85c \ucc3e\uae30(AND)"}, {"LOGVIEW_MSG", "\uba54\uc2dc\uc9c0 \ub0b4\uc6a9:"}, {"LOGVIEW_CO", "\uc21c\uc11c \ubcc0\uacbd:"}, {"LOGVIEW_TIME", "\ub85c\uadf8 \uc2dc\uac04 \uc120\ud0dd: \uc2dc\uc791:"}, {"LOGVIEW_TIME_TO", "\uc885\ub8cc: "}, {"LOGVIEW_NODE_NAME", "SonicWall \ub178\ub4dc:"}, {"LOGVIEW_USER", "\uc0ac\uc6a9\uc790: "}, {"LOGVIEW_SEV", "\uc2ec\uac01\ub3c4: "}, {"LOGVIEW_CALENDAR", "\uce98\ub9b0\ub354"}, {"LOGVIEW_ALL", "\ubaa8\ub450(\uacbd\uace0 \ubc0f Info)"}, {"LOGVIEW_ALERT_WARNING", "\uacbd\uace0"}, {"LOGVIEW_ALERT", "\uacbd\uace0"}, {"LOGVIEW_STR_FORMAT", "\uac80\uc0c9 \ubb38\uc790\uc5f4 \ud615\uc2dd\uc740 user@domain\uc785\ub2c8\ub2e4.<br>\uc0ac\uc6a9\uc790\ub9cc \uac80\uc0c9\ud558\ub824\uba74 \uc0ac\uc6a9\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624.<br>\ub3c4\uba54\uc778\ub9cc \uac80\uc0c9\ud558\ub824\uba74 @\ub3c4\uba54\uc778\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624.<br><i>\ucc38\uace0: \uc0ac\uc6a9\uc790 \uac12\uc5d0 @ \ubb38\uc790\uac00 \ud3ec\ud568\ub41c \uacbd\uc6b0 \ub2e4\ub978 @\ub85c \uac80\uc0c9 \ubb38\uc790\uc5f4\uc744 \uc885\ub8cc\ud558\uc2ed\uc2dc\uc624.</i>"}, {"HELPABOUT_VERSION", "\ubc84\uc804:"}, {"HELPABOUT_LIC", "\ub77c\uc774\uc120\uc2a4\uac00 \ubd80\uc5ec\ub41c \uc0ac\uc6a9\uc790:"}, {"HELPABOUT_SN", "\uc77c\ub828 \ubc88\ud638:"}, {"HELPABOUT_DBDRIVER", "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub4dc\ub77c\uc774\ubc84:"}, {"HELPABOUT_DBVERSION", "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc84\uc804:"}, {"HELPABOUT_REPORT_DBVERSION", "\ubcf4\uace0\uc11c \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc84\uc804:"}, {"LOGIN_TITLE", "\ub85c\uadf8\uc778"}, {"LOGIN_ISBLANK", " \uc774(\uac00) \ube44\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uac12\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_INVALIDID", "\uc9c0\uc815\ub41c \uc0ac\uc6a9\uc790 ID\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LOGIN_INVALIDID2", "\uc0ac\uc6a9\uc790 ID\uc5d0\ub294"}, {"LOGIN_INVALIDID3", "\uc601\uc22b\uc790, \ub9c8\uce68\ud45c(.), \ud558\uc774\ud508(-), \ubc11\uc904(_) \ubc0f @ \uae30\ud638\ub9cc \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"LOGIN_INVALIDID4", "\ud5c8\uc6a9\ub418\ub294 \ubb38\uc790\ub85c \uc0ac\uc6a9\uc790 ID\ub97c \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"LOGIN_USERNAME", "\uc0ac\uc6a9\uc790 \uc774\ub984"}, {"LOGIN_PASSWORD", "\uc554\ud638"}, {"LOGIN_LOGIN", "\ub85c\uadf8\uc778"}, {"LOGIN_DOMAIN", "\ub3c4\uba54\uc778"}, {"LOGIN_SWITCH_EN_US", "\uc601\uc5b4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_JA_JP", "\uc77c\ubcf8\uc5b4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_ZH_CN", "\uc911\uad6d\uc5b4 \uac04\uccb4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_ZH_TW", "\uc911\uad6d\uc5b4 \ubc88\uccb4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_KO_KR", "\ud55c\uad6d\uc5b4 UI\ub85c \uc804\ud658"}, {"LOGIN_SWITCH_PT_BR", "\ud3ec\ub974\ud22c\uac08\uc5b4(\ube0c\ub77c\uc9c8) UI\ub85c \uc804\ud658"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "\ub85c\uadf8\uc544\uc6c3"}, {"LOGOUT_VPMSG", "\uc774\uc81c SonicWall \ubd84\uc11d\uae30 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ub85c\uadf8\uc544\uc6c3\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LOGOUT_VPMSG1", "\uc0c8 SonicWall \ubd84\uc11d\uae30 \uc138\uc158\uc744 \uc2dc\uc791\ud558\ub824\uba74 \uc774 \ube0c\ub77c\uc6b0\uc800\ub97c \ub2eb\uac70\ub098 \uc885\ub8cc\ud55c \ud6c4<br> \uc0c8 \ube0c\ub77c\uc6b0\uc800 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5ec\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}, {"LOGOUT_GMSMSG", "\uc774\uc81c SonicWall \uc804\uc5ed \uad00\ub9ac \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ub85c\uadf8\uc544\uc6c3\ub418\uc5c8\uc2b5\ub2c8\ub2e4. "}, {"LOGOUT_GMSMSG1", "\uc0c8 SonicWall GMS \uc138\uc158\uc744 \uc2dc\uc791\ud558\ub824\uba74 \uc774 \ube0c\ub77c\uc6b0\uc800\ub97c \ub2eb\uac70\ub098 \uc885\ub8cc\ud55c \ud6c4<br> \uc0c8 \ube0c\ub77c\uc6b0\uc800 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5ec\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}, {"SETTINGSUSER_CHANGE", "\ubcc0\uacbd"}, {"SETTINGSUSER_OLD", "\ud604\uc7ac"}, {"SETTINGSUSER_PASSWORD", "\uc554\ud638"}, {"SETTINGSUSER_NEW", "\uc0c8\ub85c \ub9cc\ub4e4\uae30"}, {"SETTINGSUSER_CONFIRMMSG", "\uc0c8 \uc554\ud638 \ud655\uc778"}, {"SETTINGSUSER_FAILMSG", " [\uc554\ud638] \ubc0f [\uc0c8 \uc554\ud638 \ud655\uc778] \ud56d\ubaa9\uc774 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "\uc554\ud638\ub294 7\uc790 \uc774\uc0c1\uc774\uc5b4\uc57c \ud558\uba70, \ubb38\uc790 \ubc0f/\ub610\ub294 \uc22b\uc790\ub85c \uad6c\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"INVALID_PASSWORD", "\uc9c0\uc815\ub41c \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"PWD_RULES", "\uc554\ud638\ub294 \ub2e4\uc74c \uaddc\uce59\uc744 \ubc14\ud0d5\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. "}, {"VALID_PWD_RULE_FOR_PCI", "    - 7\uc790 \uc774\uc0c1\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"MAX_PWD_LEN", "    - 15\uc790 \uc774\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"PWD_ALPHANUMERIC_CHARS", "    - \uc601\uc22b\uc790\ub97c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PWD_SPCIAL_CHARS", "    - \ud2b9\uc218 \ubb38\uc790\ub97c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[KR]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[KR]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[KR]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "\uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud558\ub294 \uc554\ud638\ub97c \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"SETTINGSUSER_MISCSETTINGS", "\uae30\ud0c0 \uc124\uc815"}, {"SETTINGSUSER_TIMEOUTPERIOD", "\uc2dc\uac04 \uc81c\ud55c \uae30\uac04\uc740 -1 \ub610\ub294 [5..120] \ubc94\uc704\uc758 \uae30\uac04\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"SETTINGSUSER_NEVERTIMEOUT", "\uc2dc\uac04 \uc81c\ud55c \uc5c6\uc74c"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "\ube44\ud65c\uc131 \uc2dc\uac04 \uc81c\ud55c"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc120\ud0dd \ud328\ub110, \ud45c\uc2dc:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\uc544\uc774\ucf58"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "\ud14d\uc2a4\ud2b8"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\uc544\uc774\ucf58 \ubc0f \ud14d\uc2a4\ud2b8(\uae30\ubcf8\uac12)"}, {"MAX_ROWS_PER_SCREEN", "\ud654\uba74\ub2f9 \ucd5c\ub300 \ud589 \uc218:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "\ubc94\uc704: [10..100](\ube44-\ubcf4\uace0 \uad00\ub828 \ud398\uc774\uc9c0\uac00 \ub9e4\uaca8\uc9c4 \ud654\uba74\uc5d0\ub9cc \uc801\uc6a9 \uac00\ub2a5)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "\ud654\uba74\ub2f9 \ucd5c\ub300 \ud589 \uc218 \uac12\uc774 \uc720\ud6a8\ud55c \ubc94\uc704\ub97c \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. 10 - 100 \uc0ac\uc774\uc758 \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "\ud654\uba74\ub2f9 \ucd5c\ub300 \ud589 \uc218 \uac12\uc774 \uc22b\uc790\uac00 \uc544\ub2d9\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "\uc790\ub3d9 \uc800\uc7a5 \ub300\uc2dc\ubcf4\ub4dc \uc124\uc815:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1: \uc790\ub3d9 \uc800\uc7a5\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc74c \ub610\ub294 \ubc94\uc704: [1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "\uc790\ub3d9 \uc800\uc7a5 \ub300\uc2dc\ubcf4\ub4dc \uc124\uc815\uc740 -1 \ub610\ub294 [1..60] \ubc94\uc704\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"CHANGEPASSWORD_OLD", "\ud604\uc7ac \uc554\ud638"}, {"CHANGEPASSWORD_NEW", "\uc0c8 \uc554\ud638"}, {"CHANGEPASSWORD_CONFIRM", "\uc0c8 \uc554\ud638 \ud655\uc778"}, {"CHANGEPASSWORD_USER", "\uc0ac\uc6a9\uc790"}, {"CUSTLOGSETTINGS_NOTE1", "\ucc38\uace0: \uc138\ubbf8\ucf5c\ub860(\";\")\uc73c\ub85c \uad6c\ubd84\ub41c \uc5ec\ub7ec \uc804\uc790 \uba54\uc77c \uc8fc\uc18c\ub97c \uc785\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"CUSTLOGSETTINGS_SECTITLE1", "\uc804\uc790 \uba54\uc77c \uacbd\uace0 \ubc1b\ub294 \uc0ac\ub78c \uc77c\uc815"}, {"CUSTLOGSETTINGS_WEEKDAY", "\ud3c9\uc77c:"}, {"CUSTLOGSETTINGS_SCHED1", "\uc77c\uc815 1:"}, {"CUSTLOGSETTINGS_SCHED2", "\uc77c\uc815 2:"}, {"CUSTLOGSETTINGS_SCHED3", "\uc77c\uc815 3:"}, {"CUSTLOGSETTINGS_SAT", "\ud1a0\uc694\uc77c"}, {"CUSTLOGSETTINGS_SUN", "\uc77c\uc694\uc77c"}, {"CUSTLOGSETTINGS_WEEKEND", "\uc8fc\ub9d0:"}, {"CUSTLOGSETTINGS_HRS", "\uc2dc"}, {"CUSTLOGSETTINGS_TO", "\uc885\ub8cc"}, {"CUSTLOGSETTINGS_ALERTFMT", "\uc804\uc790 \uba54\uc77c \uacbd\uace0 \ud615\uc2dd \uae30\ubcf8 \uc124\uc815"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "\ud14d\uc2a4\ud2b8, \uc0c9\uc0c1, \uc774\ubbf8\uc9c0 \ubc0f \ub9c1\ud06c\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. HTML \uc9c0\uc6d0 \uc804\uc790 \uba54\uc77c \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc640\ub9cc \ud638\ud658\ub429\ub2c8\ub2e4."}, {"CUSTLOGSETTINGS_TEXT", "\uc77c\ubc18 \ud14d\uc2a4\ud2b8"}, {"CUSTLOGSETTINGS_TEXT_DESC", "\uc77c\ubc18 \ud14d\uc2a4\ud2b8\ub85c \ub41c \ubaa8\ub4e0 \uc138\ubd80 \uc815\ubcf4\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc804\uc790 \uba54\uc77c \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc640 \ud638\ud658\ub429\ub2c8\ub2e4."}, {"CUSTLOGSETTINGS_PAGER", "\uc77c\ubc18 \ud14d\uc2a4\ud2b8(\ub2e8\uc21c)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "\uc77c\ubc18 \ud14d\uc2a4\ud2b8\ub85c \ub41c \uc9e7\uc740 \uba54\uc2dc\uc9c0\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \ud638\ucd9c\uae30, SMS(Short Message Service) \ubc0f \uc774\uc640 \uc720\uc0ac\ud55c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4."}, {"LOGCONFIG_SECTITLE_1", "\uc0ad\uc81c"}, {"LOGCONFIG_SECTITLE_2", "\ub85c\uadf8 \uba54\uc2dc\uc9c0"}, {"LOGCONFIG_DELLABEL", "\ub2e4\uc74c\ubcf4\ub2e4 \uc624\ub798\ub41c \ub85c\uadf8 \uba54\uc2dc\uc9c0 \uc0ad\uc81c:"}, {"LOGCONFIG_MONTH", "\uc6d4"}, {"LOGCONFIG_DAY", "\uc77c"}, {"LOGCONFIG_YEAR", "\ub144"}, {"LOGCONFIG_FORLABEL", "\ub300\uc0c1"}, {"LOGCONFIG_DOMAIN", "\ub3c4\uba54\uc778"}, {"SESSIONS_NOSESSALERT", "\uc885\ub8cc\ud560 \uc138\uc158\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SESSIONS_NOSESSSELALERT", "\uc885\ub8cc\ud560 \uc138\uc158\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"SESSIONS_RUSUREALERT", "\uc120\ud0dd\ud55c \uc138\uc158\uc744 \uc885\ub8cc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"SESSIONS_TITLE", "\ud604\uc7ac \uc138\uc158"}, {"SESSIONS_COL1", "\uc0ac\uc6a9\uc790 \uc774\ub984"}, {"SESSIONS_COL2", "IP \uc8fc\uc18c"}, {"SESSIONS_COL3", "\ub85c\uadf8\uc778 \uc2dc\uac04"}, {"SESSIONS_COL4", "\ub9c8\uc9c0\ub9c9 \uc561\uc138\uc2a4 \uc2dc\uac04"}, {"SESSIONS_COL5", "\ub3c4\uba54\uc778 \uc774\ub984"}, {"SESSIONS_END", "\uc120\ud0dd\ud55c \uc138\uc158 \uc885\ub8cc"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP \uc11c\ubc84 \uc8fc\uc18c"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP \ud3ec\ud2b8"}, {"LOGINVPSSETTINGS_LABEL2", "\ubcf4\ub0b8 \uc0ac\ub78c \uc804\uc790 \uba54\uc77c \uc8fc\uc18c"}, {"LOGINVPSSETTINGS_LABEL3", "\uad00\ub9ac\uc790 \uc804\uc790 \uba54\uc77c \uc8fc\uc18c"}, {"LOGINVPSSETTINGS_LABEL3_5", "\uc0ac\uc6a9 TLS"}, {"LOGINVPSSETTINGS_LABEL4", "\uc778\uc99d \uc0ac\uc6a9"}, {"LOGINVPSSETTINGS_LABEL5", "\uc0ac\uc6a9\uc790"}, {"LOGINVPSSETTINGS_LABEL6", "\uc554\ud638"}, {"LOGINVPSSETTINGS_NOTE", "\ucc38\uace0: \uc774\uba54\uc77c \uc8fc\uc18c \uc218\uc2e0\uc790\ub97c \ubcc0\uacbd\ud558\ub824\uba74 \ucf58\uc194 > \uacbd\uace0 > \uae30\ubcf8 \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624."}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "\uc2dc\uc2a4\ud15c \ub514\ubc84\uadf8 \uc218\uc900:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "\ub514\ubc84\uadf8 \uc218\uc900\uc744 \uc124\uc815\ud558\uba74 \uc7a0\uc7ac\uc801\uc778 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ubb38\uc81c\ub97c \ubcf4\ub2e4 \ube60\ub974\uac8c \ud574\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uba74 \uc774 \ubc30\ud3ec\uc758 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ub514\ubc84\uadf8 \ub85c\uadf8 \ud30c\uc77c\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\uba70, \uc774\ub85c \uc778\ud574 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc131\ub2a5\uc774 \uc800\ud558\ub418\uace0 \ub514\uc2a4\ud06c \uacf5\uac04\uc774 \uac00\ub4dd \ucc30 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\uc0c1\uc801\uc778 \uc791\ub3d9\uc744 \uc704\ud574 \uc7a0\uc7ac\uc801\uc778 \ubb38\uc81c\uac00 \ud574\uacb0\ub418\uba74 \ubc14\ub85c <i>No Debug(\ub514\ubc84\uadf8 \uc5c6\uc74c)</i>\ub85c \ub2e4\uc2dc \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "\ucc38\uace0: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "\u00a0\u00a0\u00a0\u00a0-\u00a0\ub514\ubc84\uadf8 \uc218\uc900\uc740 \ubc18\ub4dc\uc2dc SonicWall \uae30\uc220 \uc9c0\uc6d0\ubd80\uc758 \uc9c0\uce68\uc5d0 \ub530\ub77c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "\u00a0\u00a0\u00a0\u00a0-\u00a0\ub514\ubc84\uadf8 \uc218\uc900\uc774 \ub192\uc744\uc218\ub85d \ub514\ubc84\uadf8 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4\uac00 \ub9ce\uc544\uc9c0\uba70 \uc774\uc5d0 \ub530\ub77c \uc804\uccb4 \uc2dc\uc2a4\ud15c \uc131\ub2a5\uc774 \uc800\ud558\ub429\ub2c8\ub2e4."}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "\uc9c0\uae08 \ubaa8\ub378 \ucf54\ub4dc \uc815\ubcf4 \ub3d9\uae30\ud654"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\uae30\uc874\uc758 \uc608\uc57d\ub41c \ubaa8\ub4e0 \ubcf4\uace0\uc11c\uc5d0 \ub300\ud55c SMTP \uc11c\ubc84 \uc8fc\uc18c\ub97c \uc0c8 SMTP \uc11c\ubc84 \uc8fc\uc18c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "\ubaa8\ub378 \ucf54\ub4dc \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "\ub808\uac70\uc2dc(Analyzer 7.0 \uc774\uc804) \ubcf4\uace0\uc11c \ud45c\uc2dc "}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "\uc554\ud638 \ubcf4\uc548 \uac15\uc81c \uc801\uc6a9"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "\uc554\ud638 \ubcc0\uacbd \uac15\uc81c \uc801\uc6a9 \uc77c\uc218"}, {"GENVPSSTATUS_INVALIDIP", "\ud604\uc7ac \ub85c\uadf8\uc778\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc790\uaca9 \uc815\ubcf4\uac00 \ubd88\uc644\uc804\ud568"}, {"GENVPSSTATUS_NODE", " \ub178\ub4dc: "}, {"GENVPSSTATUS_INFO", "\uc815\ubcf4"}, {"GENVPSSTATUS_SYSLOG", "Syslog \uc11c\ubc84"}, {"GENVPSSTATUS_IPINFO", "IP \uc8fc\uc18c"}, {"GENVPSSTATUS_PORT", "\ud3ec\ud2b8"}, {"GENVPSSTATUS_SYNCNOW", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc640 \uc124\uc815 \ub3d9\uae30\ud654, MySonicWall.com\uacfc \ub77c\uc774\uc120\uc2a4 \uc815\ubcf4 \ub3d9\uae30\ud654"}, {"GENVPSSTATUS_GETSTARTED", "\ubd84\uc11d\uae30 \uc2dc\uc791\ud558\uae30"}, {"GENVPSSTATUS_GETSTARTOPEN", "\uc0c8 \ucc3d\uc5d0\uc11c \uc2dc\uc791\ud558\uae30 \uad00\ub828 \uc9c0\uce68 \uc5f4\uae30"}, {"GENVPSSTATUS_LOGINTITLE", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub85c\uadf8\uc778"}, {"GENVPSSTATUS_LOGINHTTP", "\ube44\ubcf4\uc548 \ub85c\uadf8\uc778 \uc0ac\uc6a9(HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "\ubcf4\uc548 \ub85c\uadf8\uc778 \uc0ac\uc6a9(HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "\ub85c\uadf8\uc778"}, {"GENVPSSTATUS_CATEGORIES", "Syslog \ubc94\uc8fc"}, {"GENVPSSTATUS_REFRESH_MSG", "\ucc38\uace0: \uc0c1\ud0dc \uc815\ubcf4\ub294 24\uc2dc\uac04\ub9c8\ub2e4 \uc5c5\ub370\uc774\ud2b8\ub429\ub2c8\ub2e4. \uc815\ubcf4\ub97c \uc0c8\ub85c \uace0\uce58\ub824\uba74 \uc704\uc758 \ub9c1\ud06c\ub97c \ud074\ub9ad\ud558\uc2ed\uc2dc\uc624. \uc774 \uc124\uc815\uc744 \ubcc0\uacbd\ud558\ub824\uba74 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub85c\uadf8\uc778\ud55c \ud6c4 \uc124\uc815\uc744 \uc218\ub3d9\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"GENVPSSTATUS_LOG_TYPE", "\ub85c\uadf8 \uc720\ud615"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "\uc2dc\uc2a4\ud15c \uc720\uc9c0 \uad00\ub9ac"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "\uc2dc\uc2a4\ud15c \uc624\ub958"}, {"GENVPSSTATUS_BLOCKED_WEB", "\ucc28\ub2e8\ub41c \uc6f9 \uc0ac\uc774\ud2b8"}, {"GENVPSSTATUS_BLOCKED_JAVA", "\ucc28\ub2e8\ub41c Java \ub4f1"}, {"GENVPSSTATUS_USER_ACTIVITY", "\uc0ac\uc6a9\uc790 \ud65c\ub3d9"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP \ud1b5\uacc4"}, {"GENVPSSTATUS_ATTACKS", "\uacf5\uaca9"}, {"GENVPSSTATUS_DROPPED_TCP", "\uc0ad\uc81c\ub41c TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "\uc0ad\uc81c\ub41c UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "\uc0ad\uc81c\ub41c ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "\ub124\ud2b8\uc6cc\ud06c \ub514\ubc84\uadf8"}, {"GENVPSSTATUS_DENIED_LAN_IP", "\uac70\ubd80\ub41c LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "\ubd84\uc11d\uae30 \ub77c\uc774\uc120\uc2a4 \uc0c1\ud0dc"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>\u00a0\u00a0\\\"\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c\\\" \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub824\uba74 \ub2e4\uc74c \ub2e8\uacc4\ub97c \uc218\ud589\ud558\uc2ed\uc2dc\uc624.<br/>\u00a0\u00a01\ub2e8\uacc4 - <a href=\"http://www.MySonicWall.com\" target=new>\uc5ec\uae30\ub97c \ud074\ub9ad\ud558\uc5ec MySonicWall.com\uc5d0\uc11c \ub77c\uc774\uc120\uc2a4\ub97c \ud655\uc778\ud558\uac70\ub098 \ud65c\uc131\ud654\ud558\uc2ed\uc2dc\uc624.</a><br/>\u00a0\u00a02\ub2e8\uacc4 - \ub77c\uc774\uc120\uc2a4\uac00 \ud65c\uc131 \uc0c1\ud0dc\uc778 \uacbd\uc6b0 <a href=\"javascript:synchronizeInfo();\">\uc5ec\uae30\ub97c \ud074\ub9ad\ud558\uc5ec \ub77c\uc774\uc120\uc2a4 \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud558\uc2ed\uc2dc\uc624.</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(MySonicWall.com\uc5d0 \uc5f0\uacb0\ud560 \ub54c \ud1b5\uc2e0 \uc624\ub958 \ubc1c\uc0dd)<br/>\u00a0\u00a0GMSVP \uc6f9 \uc11c\ubc84\uc5d0\uc11c www.MySonicWall.com\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"COMPONENT", "\uc124\uba85"}, {"COMPONENT_LC", "\uad6c\uc131 \uc694\uc18c"}, {"FILE_SIZE", "\ud30c\uc77c \ud06c\uae30(KB)"}, {"IP_ADDRESS", "IP \uc8fc\uc18c"}, {"CURRENT_VERSION", "\ud604\uc7ac \ubc84\uc804"}, {"LATEST_VERSION", "\ucd5c\uc2e0 \ubc84\uc804"}, {"RELEASE_NOTES", "\ub9b4\ub9ac\uc2a4 \uc815\ubcf4"}, {"LAST_DOWNLOADED", "\ub9c8\uc9c0\ub9c9 \ub2e4\uc6b4\ub85c\ub4dc"}, {"RELEASE_DATE", "\ub9b4\ub9ac\uc2a4 \ub0a0\uc9dc"}, {"DOWNLD_NEW", "\uc0c8\ub85c \ub2e4\uc6b4\ub85c\ub4dc "}, {"SOFTWARE_UPDATES", "\uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5c5\ub370\uc774\ud2b8"}, {"DEL_SEL_COMPS_FROM_LIST", "\ubaa9\ub85d\uc5d0\uc11c \uc120\ud0dd\ud55c \uad6c\uc131 \uc694\uc18c \uc0ad\uc81c"}, {"LIC_DELETE_MSG", "\ub2e4\uc74c\uc744 \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LIC_PATCH_MSG", "\ud328\uce58\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc73c\uba70 \ub2e4\uc74c \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud574 \ub2e4\uc6b4\ub85c\ub4dc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"LIC_NEW_GMS_SW", "\uc0c8 GMS \uc18c\ud504\ud2b8\uc6e8\uc5b4"}, {"LIC_CONSOLE", "\ucf58\uc194"}, {"LIC_SELECT_COMPONENT", "\uad6c\uc131 \uc694\uc18c\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CHAP_TESTING", "CHAP \ud14c\uc2a4\ud2b8"}, {"CHAP_RADIUS_TESTING_MSG", "CHAP \uc778\uc99d\uc740 \uc774 \uc778\uc99d\uc744 \uc9c0\uc6d0\ud558\ub294 RADIUS \uc11c\ubc84\uc5d0\uc11c\ub9cc \uc791\ub3d9\ud558\uba70, \uc77c\ubd80 \uacbd\uc6b0 \uc554\ud638\ub97c \uc5ed\uc73c\ub85c \uc800\uc7a5\ud558\ub3c4\ub85d \uc11c\ubc84\ub97c \uad6c\uc131\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"CHAP_LDAP_TESTING_MSG", "CHAP \uc778\uc99d\uc740 LDAP\ub97c \ud1b5\ud55c \uc0ac\uc6a9\uc790 \uc554\ud638 \uac80\uc0c9\uc744 \uc9c0\uc6d0\ud558\ub294 \uc11c\ubc84\uc5d0\uc11c\ub9cc \uc791\ub3d9\ud558\uba70,\uc77c\ubd80 \uacbd\uc6b0 \uc554\ud638\ub97c \uc5ed\uc73c\ub85c \uc800\uc7a5\ud558\ub3c4\ub85d LDAP \uc11c\ubc84\ub97c \uad6c\uc131\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "Microsoft Active Directory \ub610\ub294 Novell eDirectory\uc5d0\uc11c\ub294 CHAP\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4\ub294 \uc810\ub3c4 \uc720\uc758\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"PERF_NO_SUMMARIZER", "\ud604\uc7ac \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc694\uc57d \uc791\uc131\uae30 \uc131\ub2a5 \uba54\ud2b8\ub9ad\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PERF_SUMMARIZER_INFO", "\uc694\uc57d \uc791\uc131\uae30 \uc815\ubcf4"}, {"PERF_SUMMARIZER", "\uc694\uc57d \uc791\uc131\uae30"}, {"PERF_SYSLOG_INFO", "\ub370\uc774\ud130 \ud30c\uc77c \uc815\ubcf4"}, {"PERF_SYSLOG_FILE_TYPE", "\ub370\uc774\ud130 \ud30c\uc77c \ud615\uc2dd"}, {"PERF_FILE_STATS", "\ud30c\uc77c \ud1b5\uacc4"}, {"PERF_OLDEST", "\uc624\ub798\ub41c \ud56d\ubaa9"}, {"PERF_PRD_LABEL", "\ucc98\ub9ac\ub41c \ud30c\uc77c"}, {"PERF_SRC_LABEL", "\uadf8\ub8f9\ud654\ub41c \ud30c\uc77c"}, {"PERF_UNP_LABEL", "\ucc98\ub9ac\ub418\uc9c0 \uc54a\uc740 \ud30c\uc77c"}, {"PERF_NMM_LABEL", "\ub0b4 \uc18c\uc720\uac00 \uc544\ub2cc \ud30c\uc77c"}, {"PERF_IMF_LABEL", "\uac10\uc5fc\ub41c \ud30c\uc77c"}, {"PERF_ZIP_LABEL", "\ubcf4\uad00\ub41c \ud30c\uc77c"}, {"PERF_PRE_LABEL", "\uc798\ubabb\ub41c \ub85c\uadf8 \ud30c\uc77c"}, {"PERF_UPE_LABEL", "\uc798\ubabb\ub41c \uc5c5\ub85c\ub4dc \ud30c\uc77c"}, {"PERF_UPD_LABEL", "\uc5c5\ub85c\ub4dc\ub41c \ud30c\uc77c"}, {"PERF_UPL_LABEL", "\uc5c5\ub85c\ub4dc \ubcf4\ub958 \uc911\uc778 \ud30c\uc77c"}, {"PERF_RDB_LABEL", "\ubcf4\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4"}, {"PERF_OPT_STATE_LABEL", "\ucd5c\uc801\ud654 \uc0c1\ud0dc"}, {"PERF_OPT_PENDING_LABEL", "\ucd5c\uc801\ud654 \ubcf4\ub958 \uc911"}, {"PERF_OPT_TOTAL_LABEL", "\ucd5c\uc801\ud654\ub418\uc9c0 \uc54a\uc740 \ucd1d \uc77c\uc218"}, {"PERF_BKP_LABEL", "\ubc31\uc5c5 \ud30c\uc77c"}, {"PERF_FILE_ELEMENT", " \ud30c\uc77c - "}, {"PERF_THREAD_INFO", "\uc694\uc57d \uc791\uc131\uae30 \ud504\ub85c\uc138\uc2a4 \uc138\ubd80 \uc815\ubcf4"}, {"PERF_NUM_THREADS", "\ud604\uc7ac \uc2e4\ud589 \uc911\uc778 \uc2a4\ub808\ub4dc \uc218"}, {"PERF_SUMMARIZER_IDLE", "\uc694\uc57d \uc791\uc131\uae30\uac00 \uc720\ud734 \uc0c1\ud0dc\uc785\ub2c8\ub2e4."}, {"PERF_THREAD", "\uc2a4\ub808\ub4dc"}, {"PERF_FIREWALL", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"PERF_FILE", "\ud30c\uc77c"}, {"PERF_STATE", "\uc2dc/\ub3c4"}, {"PERF_START_TIME", "\uc2dc\uc791 \uc2dc\uac04"}, {"PERF_SUMMARIZER_STATS", "\uc694\uc57d \uc791\uc131\uae30 \ud1b5\uacc4"}, {"PERF_PAST_24", "\uc9c0\ub09c 24\uc2dc\uac04 \ub3d9\uc548(\ub2e4\uc74c \uc774\ud6c4: "}, {"PERF_PAST_7_DAYS", "\uc9c0\ub09c 7\uc77c \ub3d9\uc548(\ub2e4\uc74c \uc774\ud6c4: "}, {"PERF_PAST_30_DAYS", "\uc9c0\ub09c 30\uc77c \ub3d9\uc548(\ub2e4\uc74c \uc774\ud6c4: "}, {"PERF_NUM_SYSLOGS", "\uc694\uc57d\ub41c Syslog \uc218 "}, {"PERF_AVERAGE_PER_MINUTE", "\ubd84\ub2f9 \uc694\uc57d\ub41c \ud3c9\uade0 Syslog \uc218"}, {"PERF_NOT_ACTIVE", "\uc9c0\ub09c 7\uc77c \ub3d9\uc548 \uc694\uc57d\ub41c \ub370\uc774\ud130\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PERF_NO_GEN2", "\ubd84\uc0b0 \uc694\uc57d \uc791\uc131\uae30 \uad6c\uc131\uc5d0 \ub300\ud574\uc11c\ub9cc \uc694\uc57d \uc791\uc131\uae30 \uc131\ub2a5 \uba54\ud2b8\ub9ad\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PERF_MEM_USAGE", "\uc694\uc57d \uc791\uc131\uae30 \uba54\ubaa8\ub9ac \uc18c\ubaa8"}, {"PERF_LAST_RUN", "\ub9c8\uc9c0\ub9c9 \uc2e4\ud589 \uc2dc\uac04"}, {"PERF_NEXT_RUN", "\ub2e4\uc74c \uc2e4\ud589 \uc2dc\uac04"}, {"PERF_SUMMARIZER_STATISTICS", "7\uc77c \ub3d9\uc548 \uc694\uc57d \uc791\uc131\uae30 \uc0c1\ud0dc"}, {"PERF_SUMMARIZER_UTILIZATION", "\uc694\uc57d \uc791\uc131\uae30 \uc0ac\uc6a9\ub960"}, {"PERF_TOTAL_RUN_TIME", "\uc77c\ubcc4 \ud3c9\uade0 \uc2e4\ud589 \uc2dc\uac04"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "\uc608\uc0c1 \uc6a9\ub7c9"}, {"PERF_METRIC_SYSLOG", "(100\ub9cc \uac1c\uc758 syslog/\uc77c)"}, {"PERF_METRIC_XML", "(XML \ud30c\uc77c/\uc77c)"}, {"PERF_TOTAL_LOAD", "\ud3c9\uade0 \ubd80\ud558"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "\uc694\uc57d\ub41c \ud3c9\uade0 Syslog(100\ub9cc \uac1c/\uc77c)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "\uc77c\ubcc4 \uc694\uc57d\ub41c \ud3c9\uade0 XML \ud30c\uc77c"}, {"PERF_NO_DATA_SUMMARIZED", "\ub9c8\uc9c0\ub9c9 7\uc77c \ub3d9\uc548 \uc694\uc57d\ub41c \ub370\uc774\ud130\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"PERF_REPORTING_INFO", "\ubcf4\uace0 \uc138\ubd80 \uc815\ubcf4"}, {"PERF_TOP_UNITS", "\uc694\uc57d \uc791\uc131\uae30 \uc0ac\uc6a9 \ucd5c\uc0c1\uc704 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"PERF_UNIT_NAME", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4"}, {"PERF_REPORTING_DB_SIZE", "\ubcf4\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30"}, {"PERF_BACKUPS_DIR_SIZE", "\ubc31\uc5c5 \ub514\ub809\ud130\ub9ac \ud06c\uae30"}, {"PERF_SYSLOG_DIR_SIZE", "\uc6d0\uc2dc \ub370\uc774\ud130 \ub514\ub809\ud130\ub9ac \ud06c\uae30"}, {"PERF_CACHE_SIZE", "\uc608\uc0c1 \uce90\uc2dc \ud06c\uae30"}, {"PERF_BAD_DIR_SIZE", "\uc798\ubabb\ub41c \ub370\uc774\ud130 \ub514\ub809\ud130\ub9ac \ud06c\uae30"}, {"PERF_PER_SUMMARIZER_INFO", "\uc694\uc57d \uc791\uc131\uae30 \uc138\ubd80 \uc815\ubcf4 "}, {"PERF_AVG_UTILIZATION", "\ud3c9\uade0 \uc694\uc57d \uc791\uc131\uae30 \uc0ac\uc6a9\ub960"}, {"PERF_PEAK_UTILIZATION", "\ucd5c\ub300 \uc694\uc57d \uc791\uc131\uae30 \uc0ac\uc6a9\ub960"}, {"NMM_DETAILS", "\ubcf4\uace0 \ubc0f \uad00\ub9ac \uc911\uc774\uc9c0 \uc54a\uc740 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \uc804\uc1a1\ub41c Syslog"}, {"NMM_SERIALS", "\uc9c1\ub82c # of appliances for Summarizer "}, {"NO_NMM_SERIAL", "\ubcf4\uace0 \ubc0f \uad00\ub9ac \uc911\uc774\uc9c0 \uc54a\uc740 \uc5b4\ub5a4 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub3c4 syslog\ub97c \ubcf4\ub0b4\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. "}, {"MISCONFIGURED_SERIALS", "\uc9c1\ub82c # of appliances that are misconfigured "}, {"NO_MISCONFIGURED_SERIALS", "\uc5b4\ub5a4 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub3c4 \uc798\ubabb \uad6c\uc131\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. "}, {"NMM_MSG_NOTE", "\ucc38\uace0: "}, {"NMM_MSG1", "* \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub85c\uadf8\uc778\ud55c \ud6c4 syslog\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud569\ub2c8\ub2e4."}, {"NMM_MSG2", "* \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \uc5c6\ub294 \uacbd\uc6b0 \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0 \ub300\ud55c \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc9c1\ub82c \uc7a5\uce58\ub97c \ucc28\ub2e8\ud558\uc2ed\uc2dc\uc624."}, {"NMM_MSG3", "* \uc798\ubabb \uad6c\uc131\ub41c \uc9c1\ub82c \uc7a5\uce58\ub97c \uc218\uc815\ud558\ub824\uba74 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub85c\uadf8\uc778\ud55c \ud6c4 GMS \uc124\uc815\uc744 \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624."}, {"NMM_MSG4", "* \uc5ec\uae30\uc5d0 \ub098\uc5f4\ub41c \uc9c1\ub82c \uc7a5\uce58\ub294 12\uc2dc\uac04\ub9c8\ub2e4 \uc0c8\ub85c \uace0\uccd0\uc9d1\ub2c8\ub2e4."}, {"PERF_SUMMARIZER_STATUS", "\uc0c1\ud0dc"}, {"PERF_DEPLOYMENT_STATUS", "\ubc30\ud3ec \uc0c1\ud0dc"}, {"PERF_MSG_HIGH_CAPACITY", "\uc694\uc57d \uc791\uc131\uae30\uac00 \ub9e4\uc6b0 \ub192\uc740 \uc6a9\ub7c9\uc73c\ub85c \uc791\ub3d9\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud558\uc2ed\uc2dc\uc624."}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "\uc9c0\ub09c 7\uc77c \ub3d9\uc548 \ubc30\ud3ec\uc758 \uc694\uc57d \uc791\uc131\uae30 \uc911 \ud558\ub098 \uc774\uc0c1\uc774 \ud574\ub2f9 \uc791\ub3d9 \uc6a9\ub7c9\uc744 \ucd08\uacfc\ud588\uc2b5\ub2c8\ub2e4. [Summarizer Utilization(\uc694\uc57d \uc791\uc131\uae30 \ud65c\uc6a9\ub960)] \uc139\uc158\uc5d0\uc11c \uc0c1\ud0dc \uc5f4\uc744 \ud655\uc778\ud55c \ud6c4 GMS \uc0ac\uc774\ud2b8\ub97c \ubc29\ubb38\ud558\uc5ec \ubc30\ud3ec\ub97c \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624."}, {"PERF_MSG_REASSIGN_UNITS", "\uc5d0\uc774\uc804\ud2b8 \uac04 \uc7a5\uce58\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud558\uc2ed\uc2dc\uc624."}, {"PERF_MSG_DISK_LOW", "\ub514\uc2a4\ud06c \uacf5\uac04\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4. \ub514\uc2a4\ud06c\ub97c \ucd94\uac00\ud558\uac70\ub098 \ub514\uc2a4\ud06c \ud560\ub2f9\uc744 \ub298\ub9ac\uc2ed\uc2dc\uc624."}, {"PERF_MSG_DISK_LOW_RDB", "\ubcf4\uace0 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub300\ud574 \ub514\uc2a4\ud06c \uacf5\uac04\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4. \ub514\uc2a4\ud06c\ub97c \ucd94\uac00\ud558\uac70\ub098 \ub514\uc2a4\ud06c \ud560\ub2f9\uc744 \ub298\ub9ac\uc2ed\uc2dc\uc624."}, {"PERF_MSG_CAPACITY_PLANNING", "\ubc30\ud3ec\ub97c \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ubcf4\ub824\uba74 <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS \uc6f9 \uc0ac\uc774\ud2b8</a>\ub97c \ubc29\ubb38\ud558\uc2ed\uc2dc\uc624."}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "\ucc38\uace0: \ud3c9\uade0 \ubd80\ud558 \ubc0f \uc608\uc0c1 \uc6a9\ub7c9\uc740 \ubc30\ud3ec\uc640 \uad00\ub828\ub418\uba70, \uc2dc\uc2a4\ud15c\ub9c8\ub2e4 \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PERF_OF", "/"}, {"PERF_ON_DISK", "\ub514\uc2a4\ud06c"}, {"PERF_OPT_EXPORT_PROGRESS", "\ub0b4\ubcf4\ub0b4\uae30 \uc9c4\ud589 \uc911"}, {"PERF_OPT_EXPORT_DONE", "\ub0b4\ubcf4\ub0b4\uae30 \uc644\ub8cc"}, {"PERF_OPT_DELETE_PROGRESS", "\uc0ad\uc81c \uc9c4\ud589 \uc911"}, {"PERF_OPT_DELETE_DONE", "\uc0ad\uc81c \uc644\ub8cc"}, {"PERF_OPT_IMPORT_PROGRESS", "\uac00\uc838\uc624\uae30 \uc9c4\ud589 \uc911"}, {"PERF_OPT_QUEUED_UP", "\ud050\uc5d0 \uc788\uc74c"}, {"PERF_OPT_IDLE", "\uc720\ud734"}, {"PERF_OPT_CURRENT", "\ud604\uc7ac"}, {"PERF_OPT_INFO", "\ucd5c\uc801\ud654 \uc815\ubcf4"}, {"PERF_XML_FILE_INFO", "XML \ud30c\uc77c \uc815\ubcf4"}, {"PERF_XML_LABEL", "\ucc98\ub9ac\ub418\uc9c0 \uc54a\uc740 XML \ud30c\uc77c"}, {"PERF_XPG_LABEL", "\ud504\ub85c\uc138\uc2a4\uc758 \ud30c\uc77c"}, {"PERF_XPD_LABEL", "\ubcf4\uad00\ub41c \ud30c\uc77c"}, {"PERF_XPE_LABEL", "\uc798\ubabb\ub41c \ud30c\uc77c"}, {"ALERT_NO_ALERTS", "\ud604\uc7ac \uc774 \uc139\uc158\uc5d0 \ub300\ud55c \ud65c\uc131 \uacbd\uace0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ALERT_DESCRIPTION", "\uc124\uba85"}, {"ALERT_NODE_NAME", "\uc7a5\uce58 \uc774\ub984"}, {"ALERT_SEVERITY", "\uc2ec\uac01\ub3c4"}, {"ALERT_LISTING", "\uacbd\uace0 \ubaa9\ub85d"}, {"CAL_SUN", "\uc77c\uc694\uc77c"}, {"CAL_MON", "\uc6d4\uc694\uc77c"}, {"CAL_TUE", "\ud654\uc694\uc77c"}, {"CAL_WED", "\uc218\uc694\uc77c"}, {"CAL_THU", "\ubaa9\uc694\uc77c"}, {"CAL_FRI", "\uae08\uc694\uc77c"}, {"CAL_SAT", "\ud1a0\uc694\uc77c"}, {"CAL_JAN", "1\uc6d4"}, {"CAL_FEB", "2\uc6d4"}, {"CAL_MAR", "3\uc6d4"}, {"CAL_APR", "4\uc6d4"}, {"CAL_MAY", "5\uc6d4"}, {"CAL_JUN", "6\uc6d4"}, {"CAL_JUL", "7\uc6d4"}, {"CAL_AUG", "8\uc6d4"}, {"CAL_SEP", "9\uc6d4"}, {"CAL_OCT", "10\uc6d4"}, {"CAL_NOV", "11\uc6d4"}, {"CAL_DEC", "12\uc6d4"}, {Integer.toString(1), "\uc791\uc5c5\uc774 \uc2e4\ud589\ub428: "}, {Integer.toString(0), "\uc791\uc5c5\uc744 \uc2e4\ud589\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(42), "\uc791\uc5c5\uc774 \uc2e4\ud589\ub418\uc5c8\uc9c0\ub9cc \uacbd\uace0\uac00 \ubc18\ud658\ub428: "}, {Integer.toString(10), "\uba85\ub839\uc774 \uc2e4\ud589\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-12), "\uba85\ub839\uc774 \ubd80\ubd84\uc801\uc73c\ub85c \ub610\ub294 \uc644\uc804\ud788 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-57), "\uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc0ac\uc6a9\uc790 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-58), "\uba85\ub839\uc744 \ucc98\ub9ac\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-59), "\uc774 \uc791\uc5c5\uc740 \uc544\ubb34 \ub54c\ub098 \uc218\ud589\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-56), "LocalDomain\uc758 \uad00\ub9ac\uc790 \uadf8\ub8f9\uc5d0 \uc18d\ud55c \uc0ac\uc6a9\uc790\ub9cc \uc774 \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uad8c\ud55c\uc744 \uac00\uc9d1\ub2c8\ub2e4."}, {Integer.toString(2), "\uc0c8 \ud38c\uc6e8\uc5b4\uac00 \ud655\uc778\ub418\uc5c8\uc9c0\ub9cc \uc0c8 \ud38c\uc6e8\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. "}, {Integer.toString(3), "\uc791\uc5c5\uc5d0 \ub300\ud574 \uc774\uc804\uc5d0 \ubc31\uc5d4\ub4dc \uc791\uc5c5\uc774 \uc218\ud589\ub428: "}, {Integer.toString(4), "\uc791\uc5c5\uc5d0 \ub300\ud574 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc774 \uc218\ud589\ub428: "}, {Integer.toString(5), "\uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \uc7a5\uce58"}, {Integer.toString(6), "\ubb34\ub8cc \ud3c9\uac00\ud310\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc74c"}, {Integer.toString(7), "\uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\uc9c0\ub9cc \ub4f1\ub85d\ud560 \uc218 \uc5c6\ub294 \uc7a5\uce58"}, {Integer.toString(8), "\ub4f1\ub85d\ud560 \uc218 \uc788\uc9c0\ub9cc \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc5c6\ub294 \uc7a5\uce58"}, {Integer.toString(-1), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc77c\ubd80 \ub9e4\uac1c \ubcc0\uc218\uac00 \uc81c\ub300\ub85c \uad6c\uc131\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-53), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \ub3d9\uc2dc \uad00\ub9ac\uc790 \ub85c\uadf8\uc778\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-63), "\ub85c\uadf8\uc778\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc790\uaca9 \uc99d\uba85\uc774 \ub204\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-69), "\ud604\uc7ac \ub85c\uadf8\uc778 IP \uc8fc\uc18c\ub97c \uac00\uc838\uc624\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-70), "JVM OOM: \uacc4\uc18d\ud560 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc2e4\ud589 \uc2dc \uc791\uc5c5\uc774 \ub2e4\uc2dc \uc2dc\ub3c4\ub429\ub2c8\ub2e4."}, {Integer.toString(-64), "\ub85c\uadf8\uc778\ud560 \uad00\ub9ac\ub418\ub294 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc778\uc99d \ud398\uc774\uc9c0\ub97c \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-64) + "_TT", "- \uad00\ub9ac\ub418\ub294 \uc8fc\uc18c\uc5d0\uc11c \uc7a5\uce58\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n- \uc7a5\uce58\uc5d0\uc11c \ub3d9\uc2dc \ub85c\uadf8\uc778\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c \uc7a5\uce58\uc5d0 \uc9c1\uc811 \ub85c\uadf8\uc778\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-65), "\ub85c\uadf8\uc778 \uac8c\uc2dc\ubb3c\uc5d0 \ub300\ud55c \uc751\ub2f5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-83), "\uc77c\ub828 \ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-83) + "_TT", "- GMS\uc5d0 \uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc9c0\uc815\ub41c \uc77c\ub828 \ubc88\ud638\uac00\n \uc7a5\uce58\uc758 \uc77c\ub828 \ubc88\ud638\uc640 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-84), "\uc9c0\uc815\ub41c \ub85c\uadf8\uc778 \ubaa8\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc73c\ubbc0\ub85c \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-84) + "_TT", "- \uc9c0\uc815\ub41c \ub85c\uadf8\uc778 \ubaa8\ub4dc\uac00 \ud5c8\uc6a9\ub41c \ubaa8\ub4dc\uc758 \ubaa9\ub85d\uc5d0\n \uc18d\ud574 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-2), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc0ac\uc6a9\uc790 \uc774\ub984\uc774\ub098 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-918), "[KR]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "\uc7a5\uce58\uc5d0\uc11c \ubcf4\uc548\uc0c1\uc758 \uc774\uc720\ub85c \ub354 \uc774\uc0c1 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294 MD5 \uc11c\uba85\uc774 \uc788\ub294 SSL \uc778\uc99d\uc11c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uc7a5\uce58\ub97c \uad00\ub9ac\ud558\ub824\uba74 \uc778\uc99d\uc11c\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-917), "\uc7a5\uce58\uc5d0 \uc774 \uc791\uc5c5\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-71), "\uc7a5\uce58\uc5d0 \ub300\ud55c \uc798\ubabb\ub41c \uc561\uc138\uc2a4 URL\uc785\ub2c8\ub2e4."}, {Integer.toString(-71) + "_TT", "- \uc7a5\uce58\uc5d0\uc11c IP \uc8fc\uc18c\ub97c \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-72), "\uc0c1\ud0dc xml\uc5d0 \ub300\ud55c \uc694\uccad\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "\uc0c1\ud0dc xml\uc5d0 \ub300\ud55c \uc694\uccad\uc774 \uc2e4\ud328\ud588\uc73c\uba70, \uc751\ub2f5\uc774 \uc218\uc2e0\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "\uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc5d0 \ub300\ud55c \uc694\uccad\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-950), "[KR]Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "\uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc5d0 \ub300\ud55c \uc694\uccad\uc774 \uc2e4\ud328\ud588\uc73c\uba70, \uc751\ub2f5\uc774 \uc218\uc2e0\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "\uc798\ubabb\ub41c \uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc785\ub2c8\ub2e4."}, {Integer.toString(-76) + "_TT", "- \uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc774 \uc218\uc2e0\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- \uac00\uc838\uc628 \uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc774 \uc190\uc0c1\ub418\uc5c8\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n- \uae30\ubcf8 \uc124\uc815 \ud30c\uc77c\uc774 \uc644\uc804\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-77), "\uc7a5\uce58\ub97c \ud68d\ub4dd\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "\ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\uac00 \uc218\uc2e0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "\uc218\uc2e0\ub41c \ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-78) + "_TT", "- \uc7a5\uce58\uc5d0\uc11c \ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\uac00 \uc804\uc1a1\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- \uc7a5\uce58\uc5d0\uc11c \uc804\uc1a1\ub41c \ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\ub97c GMS\uc5d0 \uc804\ub2ec\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n- GMS \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0\uc11c SA(\ud130\ub110)\uac00 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- GMS \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0\uc11c Syslog\ub97c \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- \uc778\uc2a4\ud134\uc2a4 \uc7a5\uce58\uc758 \uacbd\uc6b0 \ucf58\uc194-\uc6f9 \uc11c\ube44\uc2a4 \ubd84\uc0b0 \ubc30\ud3ec\uc758 \ucc38\uace0: \uc139\uc158\uc5d0 \uc124\uba85\ub41c \uc9c0\uce68\uc744 \ub530\ub974\uc2ed\uc2dc\uc624."}, {Integer.toString(-79), "\uc218\uc2e0\ub41c \ud558\ud2b8\ube44\ud2b8 \uba54\uc2dc\uc9c0\ub97c \ud574\ub3c5\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-79) + "_TT", "- GMS\uc5d0 \uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc9c0\uc815\ub41c \uc554\ud638\uac00\n \uc7a5\uce58\uc758 \uc554\ud638\uc640 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(13), "syslog \uba54\uc2dc\uc9c0\uac00 \uc218\uc2e0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "\uc218\uc2e0\ub41c syslog \uba54\uc2dc\uc9c0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-81) + "_TT", "- \uc7a5\uce58\uc5d0\uc11c syslog \uba54\uc2dc\uc9c0\uac00 \uc804\uc1a1\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- \uc7a5\uce58\uc5d0\uc11c \uc804\uc1a1\ub41c syslog \uba54\uc2dc\uc9c0\ub97c GMS\uc5d0 \uc804\ub2ec\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n- GMS \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0\uc11c SA(\ud130\ub110)\uac00 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\n- GMS \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0\uc11c syslog\ub97c \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-82), "\uc218\uc2e0\ub41c syslog \uba54\uc2dc\uc9c0\ub97c \ud574\ub3c5\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-82) + "_TT", "- GMS\uc5d0 \uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc9c0\uc815\ub41c \uc554\ud638\uac00\n \uc7a5\uce58\uc758 \uc554\ud638\uc640 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(12), "\uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ud68d\ub4dd\ub418\ub3c4\ub85d \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "\uc7a5\uce58\uac00 \uc218\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ud68d\ub4dd\ub418\ub3c4\ub85d \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "\uc7a5\uce58\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\ub098 \ub124\ud2b8\uc6cc\ud06c\uac00 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-4), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uad6c\uc131\uc758 \ud558\ub098 \uc774\uc0c1\uc758 \ub9e4\uac1c \ubcc0\uc218\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-5), "SonicWall \ub4f1\ub85d \uc6f9 \uc0ac\uc774\ud2b8\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-6), "\uc5c5\uadf8\ub808\uc774\ub4dc/\uad6c\ub3c5\uc744 \uc704\ud55c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-7), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4"}, {Integer.toString(-8), "SonicWall GMS \ub4f1\ub85d \uc0ac\uc774\ud2b8\uac00 \uc791\ub3d9\ud558\uc9c0 \uc54a\uac70\ub098 \uc774 \uc0ac\uc774\ud2b8\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. SonicWall GMS \uc11c\ubc84\uc5d0\uc11c \uc778\ud130\ub137 \uc561\uc138\uc2a4\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-9), "\uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10), "SonicWall GMS\uc5d0\uc11c \uc774\ubbf8 \uad00\ub9ac \uc911\uc778 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ucd94\uac00\ud558\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-11), "\uc798\ubabb\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad6c\uc131\ud558\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-15), "\uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uaddc\uce59\uc744 \ub9cc\ub4e4\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-16), "SonicWall \ub77c\uc774\uc120\uc2a4 \uc704\ubc18\uc785\ub2c8\ub2e4."}, {Integer.toString(-17), "SonicWall GMS \ub0b4\ubd80 \uc624\ub958\uc785\ub2c8\ub2e4."}, {Integer.toString(-18), "\ucf58\ud150\uce20 \ud544\ud130 \ubaa9\ub85d\uc744 \ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-19), "\uaddc\uce59\uc774 \uc788\ub294 \uc11c\ube44\uc2a4\ub97c \uc0ad\uc81c\ud558\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-47), "AV \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20), "\ub0b4\ubd80 AV \uc624\ub958"}, {Integer.toString(-21), "AV \uc791\uc5c5 \ubcf4\ub958 \uc911"}, {Integer.toString(-22), "AV \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-23), "AV \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc774\ubbf8 \uc0ac\uc6a9 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-24), "AV \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-25), "AV \uac31\uc2e0 \ud69f\uc218 \uc624\ub958\uc785\ub2c8\ub2e4."}, {Integer.toString(-26), "AV \uac31\uc2e0\uc774 \ub108\ubb34 \uc774\ub985\ub2c8\ub2e4."}, {Integer.toString(-27), "\uad8c\uc7a5\ub418\ub294 \uae30\uac04\ubcf4\ub2e4 \ub354 \uc624\ub798\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad00\ub9ac\ud558\ub824\uace0 \uc2dc\ub3c4 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-28), "\uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 \uc11c\ubc84\uac00 \ud604\uc7ac \uc791\ub3d9\ud558\uc9c0 \uc54a\uac70\ub098 \uc774 \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-85), "\uc2dc\uc2a4\ud15c \ubc31\uc5c5 \uad00\ub9ac \uc791\uc5c5\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-29), "\ud38c\uc6e8\uc5b4\ub97c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5c5\ub85c\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-62), "\uc798\ubabb\ub41c \ud38c\uc6e8\uc5b4\ub97c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5c5\ub85c\ub4dc\ud558\ub824\uace0 \ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-60), "\ud38c\uc6e8\uc5b4 \uc5c5\uadf8\ub808\uc774\ub4dc\uc758 \ucd5c\ub300 \ud30c\uc77c \ud06c\uae30\ub294 4MB\uc785\ub2c8\ub2e4."}, {Integer.toString(-31), "\ud38c\uc6e8\uc5b4\ub97c \ub85c\uceec \ub514\uc2a4\ud06c\uc5d0 \uc4f0\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-30), "\ud38c\uc6e8\uc5b4\ub97c \ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 \uc11c\ubc84\ub97c \ud604\uc7ac \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac70\ub098 \uc774 \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-32), "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc561\uc138\uc2a4 \uc624\ub958\uc785\ub2c8\ub2e4."}, {Integer.toString(-33), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad6c\uc131\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-34), "\uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-68), "\ub3c4\uba54\uc778\uc744 \ucc3e\uc744 \uc218 \uc5c6\uac70\ub098 \uc798\ubabb\ub41c \ub3c4\uba54\uc778 \uc774\ub984\uc785\ub2c8\ub2e4."}, {Integer.toString(-35), "CMP \uc554\ud638\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-36), "\ub4f1\ub85d\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-37), "\ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uac70\ub098 \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uc11c\ubc84\uc5d0\uc11c \uc54c \uc218 \uc5c6\ub294 \uc624\ub958\uac00 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-38), "\ub4f1\ub85d \ub610\ub294 \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \uc7a5\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-39), "\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \ucd94\uac00\ud558\ub294 \uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-40), "\ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \uc0ad\uc81c\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ud574\ub2f9 \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-41), "\ud65c\uc131\ud654 \ucf54\ub4dc\ub97c \uc0ad\uc81c\ud558\ub294 \uc911 \uc54c \uc218 \uc5c6\ub294 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-48), "\uc5c5\uadf8\ub808\uc774\ub4dc \uc2e4\ud328"}, {Integer.toString(-49), "CLI \uba85\ub839\uc744 \uc2e4\ud589\ud558\ub824\ub294 \uc561\uc138\uc2a4\uac00 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-42), "\ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-43), "\uc804\uc790 \uba54\uc77c\uc744 \ud558\ub098 \uc774\uc0c1\uc758 \uc8fc\uc18c\uc5d0 \uc804\uc1a1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-44), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c TechSupport \ubcf4\uace0\uc11c\ub97c \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-45), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c SPD \ud30c\uc77c\uc744 \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-46), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \uc778\uc99d\uc11c \ud30c\uc77c\uc744 \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-50), "\ud130\ub110 \uc0c1\ud0dc \ubaa8\ub2c8\ud130\ub9c1 \uc815\ubcf4\ub97c \ub3d9\uae30\ud654\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-51), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c RCF \ud30c\uc77c\uc744 \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-52), "\uc0ac\uc6a9\uc790 \uacc4\uc815\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub85c\uadf8\uc778\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-61), "\uc774\uc804\uc5d0 \uc2e4\ud589\ub41c \uc791\uc5c5\uc744 \ub2e4\uc2dc \uc2dc\uc791\ud574\uc57c \ud558\uba70, \ub2e4\uc74c \uac04\uaca9\uc5d0 \uc791\uc5c5\uc774 \ub2e4\uc2dc \uc2dc\ub3c4\ub429\ub2c8\ub2e4."}, {Integer.toString(-229), "\uc774 \uc11c\ube44\uc2a4\ub97c \ud65c\uc131\ud654\ud558\ub824\uba74 Email Protection\uc5d0 \ub300\ud55c \uc720\ud6a8\ud55c \uad6c\ub3c5\uc774 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-230), "Sonic OS \ubc84\uc804\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub9c1(\ub2e4\uc911 \ub178\ub4dc \uad6c\ub3c5)\uc774 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uac70\ub098 \ub2e8\uc77c \ub178\ub4dc \ud0a4\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-231), "\uc5ec\ub7ec WANOPT \ubaa8\ub378\uc758 \ud65c\uc131\ud654 \ud0a4\ub97c \ud63c\ud569\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-232), "WANOPT \ubaa8\ub378\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub9c1(\ub2e4\uc911 \ub178\ub4dc \uad6c\ub3c5)\uc774 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-201), "API \ub9e4\uac1c \ubcc0\uc218\uc5d0 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-202), "\uc0ac\uc6a9\uc790\uac00 \uc774\ubbf8 \ub85c\uadf8\uc778\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-203), "\uc774 \ub9b4\ub9ac\uc2a4\uc5d0\uc11c SonicWall GMS API\uac00 \uad6c\ud604\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-204), "\uc138\uc158\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-205), "SonicWall GMS \uc178\uc744 \ub05d\ub0b4\ub294 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-206), "API \ub9e4\uac1c \ubcc0\uc218\uac00 \ub204\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-207), "\uc774 \ubc94\uc8fc\uc5d0 \ub300\ud55c \ud589\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-208), "\uc81c\uacf5\ub41c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-209), "\ud65c\uc131\ud654 \uc720\ud615\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-210), "IP \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-211), "\uc9c0\uc815\ub41c \uae38\uc774\uac00 \ud544\uc694\ud55c \uae38\uc774\ubcf4\ub2e4 \uc9e7\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-212), "\ubb38\uc790\uc5f4\uc5d0\ub294 16\uc9c4\uc218\ub9cc \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-213), "\ub300\uae30 \uc2a4\ucf00\uc904\ub7ec\uc758 IP \uc8fc\uc18c\uac00 \uae30\ubcf8 \uc2a4\ucf00\uc904\ub7ec\uc758 IP \uc8fc\uc18c\uc640 \uac19\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-214), "\uc9c0\uc815\ub41c IP \uc8fc\uc18c\uc5d0\uc11c \uc2a4\ucf00\uc904\ub7ec\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc7a5\uce58\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-215), "\uc7a5\uce58\ub97c \ucd94\uac00\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-226), "\uc720\ud6a8\ud55c \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-225), "\uc785\ub825 XML\uc758 \uad6c\ubb38\uc744 \ubd84\uc11d\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-228), "\uc785\ub825 XML\uc5d0 \uc798\ubabb\ub41c \ub0b4\uc6a9\uc774 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-216), "\uc798\ubabb\ub418\uc5c8\uac70\ub098 \uc54c \uc218 \uc5c6\ub294 \ubcf4\uace0\uc11c \uc720\ud615\uc785\ub2c8\ub2e4. \ub9e4\uc77c \ubcf4\uace0\uc11c\uc778\uc9c0, \ub9e4\uc8fc \ubcf4\uace0\uc11c\uc778\uc9c0 \ub9e4\uc6d4 \ubcf4\uace0\uc11c\uc778\uc9c0 \uc54c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-217), "\uc798\ubabb\ub41c \ub300\uc0c1 \uc804\uc790 \uba54\uc77c \uc8fc\uc18c\uc785\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 \uc720\ud6a8\ud55c \ub300\uc0c1 \uc8fc\uc18c\ub97c \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-218), "\uc798\ubabb\ub41c \uc6d0\ubcf8 \uc804\uc790 \uba54\uc77c \uc8fc\uc18c"}, {Integer.toString(-219), "\uc798\ubabb\ub41c SMTP \uc11c\ubc84 \uc8fc\uc18c"}, {Integer.toString(-220), "\uc798\ubabb\ub41c \ubcf4\uace0\uc11c \ubaa9\ub85d\uc785\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 \uc720\ud6a8\ud55c \ubcf4\uace0\uc11c ID\ub97c \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-221), "\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub4f1\ub85d\ub41c \ubd84\uc11d\uae30 \uc2a4\ucf00\uc904\ub7ec IP \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-222), "\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub4f1\ub85d\ub41c \ubd84\uc11d\uae30 \uc2a4\ucf00\uc904\ub7ec \ud3ec\ud2b8 \ubc88\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-223), "\uc798\ubabb\ub418\uc5c8\uac70\ub098 \uc54c \uc218 \uc5c6\ub294 \ubcf4\uace0\uc11c \ub0a0\uc9dc\uc785\ub2c8\ub2e4. \uc81c\uacf5\ub41c \ubcf4\uace0\uc11c \ub0a0\uc9dc\ub294 mm/dd/yyyy \ud615\uc2dd\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-224), "\uc81c\uacf5\ub41c \uc77c\uc815 ID\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-502), "zip \ud30c\uc77c \uc554\ud638 \ubcf4\ud638\ub97c \uc704\ud55c \uc554\ud638\uac00 \ub204\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-503), "\uc81c\uacf5\ub41c \ub178\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. unitNode\uc5d0 \ub300\ud55c \uc77c\ub828 \ubc88\ud638\ub098 groupNode\uc5d0 \ub300\ud55c \ud45c\uc2dc \uc774\ub984\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-10001), "\ud1b5\uc2e0 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10002), "\uc785\ub825 XML\uc758 \uad6c\ubb38\uc744 \ubd84\uc11d\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10005), "\uc54c \uc218 \uc5c6\ub294 \uad6c\uc131 \uc694\uc18c\uac00 \ud638\ucd9c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10006), "\uc54c \uc218 \uc5c6\ub294 AV \uba54\uc11c\ub4dc\uac00 \ud638\ucd9c\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10011), "\ub9cc\ub8cc \ud6c4 AV\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10012), "\ub4f1\ub85d\ub418\uc9c0 \uc54a\uc740 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 AV\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10013), "\ud604\uc7ac \uc9c0\uc6d0\ub418\ub294 \uac83\ubcf4\ub2e4 \ub354 \uc801\uc740 \ub178\ub4dc\uc5d0 \ub300\ud574 AV\ub97c \uac31\uc2e0\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10014), "AV\ub97c \ub108\ubb34 \uc774\ub974\uac8c \uac31\uc2e0\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10020), "AV \uc554\ud638\ub97c \ubcc0\uacbd\ud558\uae30 \uc704\ud55c \uc774\uc804 \uc791\uc5c5\uc774 \ubcf4\ub958 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-10100), "McAfee \ubc31\uc5d4\ub4dc\uc640 \ud1b5\uc2e0\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10101), "\uc774 \uc0ac\uc774\ud2b8\uc5d0 \ub300\ud574 McAfee\uc5d0\uc11c \uc544\ubb34 \ub808\ucf54\ub4dc\ub3c4 \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10102), "\uc774 \uc0ac\uc774\ud2b8\uc5d0 \ub300\ud574 McAfee\uc5d0\uc11c \uc774\uc804 \uc554\ud638\uc640 \uc77c\uce58\uc2dc\ud0ac \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10103), "AV \uc0ac\uc774\ud2b8\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10200), "AV \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10201), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc77c\ub828 \ubc88\ud638\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10202), "\uc81c\uacf5\ub41c \ub77c\uc774\uc120\uc2a4 \ud0a4\uac00 \uc774\ubbf8 \uc0ac\uc6a9 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-10203), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0\uc774 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10204), "\uc81c\uacf5\ub41c \uc5ec\ub7ec \ud0a4\uc758 \uae30\uac04\uc774 \ub3d9\uc77c\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-10205), "\uc5c5\uadf8\ub808\uc774\ub4dc \uc2dc \ubb34\ub8cc \ud3c9\uac00\ud310 \ud0a4\ub294 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10206), "\ud558\ub098 \uc774\uc0c1\uc758 \ub9e4\uac1c \ubcc0\uc218\uc5d0 \ub300\ud574 \uc81c\uacf5\ub41c \uac12\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10210), "\uc81c\uacf5\ub41c \uc77c\ub828 \ubc88\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10211), "\uc81c\uacf5\ub41c \ub77c\uc774\uc120\uc2a4 \ud0a4\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10212), "\uc81c\uacf5\ub41c \uc0c8 \uc554\ud638\uc5d0 \uc798\ubabb\ub41c \ubb38\uc790\uac00 \uc788\uac70\ub098 \uc554\ud638 \uae38\uc774\uac00 6 - 12\uc790\uac00 \uc544\ub2d9\ub2c8\ub2e4."}, {Integer.toString(-10213), "\uc81c\uacf5\ub41c \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10214), "\uc81c\uacf5\ub41c OEM \ucf54\ub4dc\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10215), "\uc81c\uacf5\ub41c WAN IP \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10220), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uc774\uc804 \uc694\uccad\uc774 \uc5ec\uc804\ud788 \ubcf4\ub958 \uc911\uc785\ub2c8\ub2e4."}, {Integer.toString(-10250), "AV\uc5d0 \ub300\ud574 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc73c\uba70 \ub2e4\uc2dc \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4."}, {Integer.toString(-10251), "\uc798\ubabb\ub41c \uc554\ud638\ub85c \uc778\ud574 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub2e4\uc2dc \ud65c\uc131\ud654\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10260), "\uc81c\uacf5\ub41c \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9 \uc77c\ub828 \ubc88\ud638\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10261), "\uc81c\uacf5\ub41c \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9 \uc77c\ub828 \ubc88\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10262), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc544\ubb34 \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\ub3c4 \uc544\ub2d9\ub2c8\ub2e4."}, {Integer.toString(-10263), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc774\ubbf8 \ud65c\uc131 \uc0c1\ud0dc\uc758 \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uad6c\ub3c5\uc774 \uc788\uc73c\ubbc0\ub85c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc5d0 \ucd94\uac00\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10264), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc774 \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc774 \uc544\ub2d9\ub2c8\ub2e4."}, {Integer.toString(-10265), "\ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc758 \uc18c\uc720\uc790\ub294 \uc81c\uac70\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10266), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc774\ubbf8 \ub2e4\ub978 \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc785\ub2c8\ub2e4."}, {Integer.toString(-10267), "\uc81c\uacf5\ub41c \uc0c8 \ub77c\uc774\uc120\uc2a4 \uc218\uac00 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub77c\uc774\uc120\uc2a4 \uacf5\uc720 \uadf8\ub8f9 \ub77c\uc774\uc120\uc2a4\uc758 \uc218\ub97c \ucd08\uacfc\ud569\ub2c8\ub2e4."}, {Integer.toString(-10004), "\ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \uc791\uc5c5\uc5d0 \ub300\ud574 \ud558\ub098 \uc774\uc0c1\uc758 \ub9e4\uac1c \ubcc0\uc218\uac00 \ub204\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10300), "Total Secure \ud30c\ud2b8\ub108\uc5d0 \ub300\ud574 \uc81c\uacf5\ub41c \uc815\ubcf4\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10301), "\uc81c\uacf5\ub41c Total Secure \ud30c\ud2b8\ub108 \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10303), "\uc81c\uacf5\ub41c \ubc14\uc774\ub7ec\uc2a4 \ubc31\uc2e0 \ub77c\uc774\uc120\uc2a4 \uc218\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-10304), "Total Secure \ud30c\ud2b8\ub108\uc5d0\uac8c \ud560\ub2f9\ub418\uc9c0 \uc54a\uc740 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad00\ub9ac\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20000), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud558\ub294 \uc911 \uc54c \uc218 \uc5c6\ub294 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20101), "\uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \uc694\uccad\ub41c \uc5f0\ub77d\ucc98\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20102), "\uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \uc694\uccad\ub41c \uc5f0\ub77d\ucc98\ub97c \ucd94\uac00\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20106), "\uc0ac\uc6a9\uc790 \uc815\ubcf4\uac00 \uc5c6\uc73c\ubbc0\ub85c \uc218\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20111), "\uc5f0\ub77d\ucc98 \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20112), "\uc5f0\ub77d\ucc98 \uc815\ubcf4\ub97c \uc218\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20113), "\uc5f0\ub77d\ucc98 \uc815\ubcf4\ub97c \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20116), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc774\ubbf8 \ub2e4\ub978 MySonicWall.com \uacc4\uc815\uc5d0 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20117), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20118), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \ub4f1\ub85d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20119), "\uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uc0c1\ud0dc\ub97c \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20121), "\uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20122), "\uc9c0\uc815\ub41c \ud65c\uc131\ud654 \ud0a4\uac00 \uc774\ubbf8 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20123), "\uc798\ubabb\ub41c \ud65c\uc131\ud654 \ucf54\ub4dc\uac00 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20124), "\uc798\ubabb\ub41c \ud65c\uc131\ud654 \ucf54\ub4dc/\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \uc870\ud569\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20125), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \uc644\ub8cc\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20126), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ud65c\uc131\ud654\uac00 \uc644\ub8cc\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20131), "SonicWall GMS \uc2dc\uc2a4\ud15c\uc758 \uc798\ubabb\ub41c MAC \uc8fc\uc18c\ub97c \ub4f1\ub85d\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20132), "SonicWall GMS \uc2dc\uc2a4\ud15c\uc774 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20133), "\uc9c0\uc815\ub41c SonicWall GMS \uc77c\ub828 \ubc88\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20134), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c SonicWall GMS \uc0c1\ud0dc\ub97c \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20135), "SonicWall GMS\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20136), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc0ac\uc6a9\uc790\uc758 SonicWall GMS \uc2dc\uc2a4\ud15c\uc744 \ub4f1\ub85d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20142), "\uc798\ubabb\ub41c MAC \uc8fc\uc18c\uac00 \uc774\ubbf8 \ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20143), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c SonicWall GMS\uc5d0 \ub300\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uac80\uc0c9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20144), "\uae30\ubcf8 \ud328\ud0a4\uc9c0 \uae30\uac04\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20145), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uae30\ubcf8 \ud328\ud0a4\uc9c0 \uc2dc\uc2a4\ud15c \uc815\ubcf4\ub97c \uc77d\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20146), "\uc774 \uc81c\ud488\uc5d0 \ub300\ud574 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20147), "\uc0ac\uc6a9\uc790\uc758 SonicWall GMS \uc124\uce58\uac00 \uc774\ubbf8 \uc815\uc2dd \ubc84\uc804\uc785\ub2c8\ub2e4."}, {Integer.toString(-20148), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4"}, {Integer.toString(-20149), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc11c\ubc84\uc5d0\uc11c SonicWall GMS \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uac80\uc0c9\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20150), "\uc9c0\uc815\ub41c SonicWall GMS \uc77c\ub828 \ubc88\ud638\uac00 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20151), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ubcf4\uace0 \uc815\ubcf4\ub97c \uc0bd\uc785\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20152), "\uc798\ubabb\ub41c SonicWall GMS \uc77c\ub828 \ubc88\ud638 \ubc0f \uc0ac\uc6a9\uc790 \uc774\ub984 \uc870\ud569\uc785\ub2c8\ub2e4."}, {Integer.toString(-20153), "\ubdf0\ud3ec\uc778\ud2b8 \ud1b5\ud569\uc744 \uc704\ud574 SonicWall GMS\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ub54c \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20154), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uac00 \ub4f1\ub85d\ub418\uc9c0 \uc54a\uc558\uac70\ub098 \uc798\ubabb\ub41c \uc0ac\uc6a9\uc790 \uc774\ub984\uc774 \uc9c0\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20155), "\uc774 \uc11c\ube44\uc2a4\uc758 \uae30\ubcf8 \uacc4\uc57d\uc774 \ud65c\uc131\ud654\ub418\uc9c0 \uc54a\uc558\uac70\ub098 \uc774 \uacc4\uc57d\uc774 \ub9cc\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20201), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c XML \uc785\ub825\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20202), "\ub0b4\ubd80 \uc624\ub958: \uc785\ub825\uc5d0 \uc0ac\uc6a9\uc790 \uc774\ub984\uc774 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20203), "SonicWall GMS \ub4f1\ub85d \uc2dc\uc2a4\ud15c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \uc9c0\uc815\ub41c \uc554\ud638\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20204), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud574 \uc798\ubabb\ub41c \uba54\uc11c\ub4dc\uac00 \uc694\uccad\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20205), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud574 \uc798\ubabb\ub41c XML \ubc84\uc804\uc774 \uc694\uccad\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20401), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20402), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20403), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \uad6c\uc131 \uc694\uc18c \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20404), "\ub0b4\ubd80 \uc624\ub958: \ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \ud504\ub85c\uc2dc\uc800 \uc624\ub958\uac00 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20140), "\ubc31\uc5d4\ub4dc \ub4f1\ub85d \uc2dc\uc2a4\ud15c\uc5d0 \uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c PKI \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-20141), "\uc9c0\uc815\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 PKI \uc11c\ube44\uc2a4\uac00 \ud65c\uc131\ud654\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-227), "\ud30c\uc77c\uc744 \uc5c5\ub85c\ub4dc\ud558\uae30\uc5d0 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud569\ub2c8\ub2e4. \uc880 \ub354 \uc791\uc740 \ud06c\uae30\uc758 \ud30c\uc77c\uc744 \uc5c5\ub85c\ub4dc\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-66), "\uc798\ubabb\ub41c \uc11c\uba85 \ud30c\uc77c\uc744 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5c5\ub85c\ub4dc\ud558\ub824\uace0 \ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-67), "\uc11c\uba85 \ud30c\uc77c\uc744 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \uc5c5\ub85c\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \ubaa8\ub378/\ubc84\uc804\uc5d0 \uc774 \uc791\uc5c5\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {Integer.toString(-500), "lm2.sonicwall.com\uc5d0\uc11c \uc218\uc2e0\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-501), "lm2.sonicwall.com \uc6f9 \uc0ac\uc774\ud2b8\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-907), "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \ud38c\uc6e8\uc5b4 \ubc84\uc804\uc774 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-901), "\uae30\ub85d ID\uac00 \uc798\ubabb\ub418\uc5c8\uac70\ub098 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-902), "\uc5d4\ud130\ud2f0 \ubc14\uae65\ucabd \ub808\ucf54\ub4dc\ub97c \uc801\uc6a9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-903), "\ub808\ucf54\ub4dc\ub97c \uc801\uc6a9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-904), "\ud15c\ud50c\ub9bf ID\uac00 \uc798\ubabb\ub418\uc5c8\uac70\ub098 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-905), "\uae30\ub85d\uc744 \uc801\uc6a9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-906), "\ud15c\ud50c\ub9bf\uc744 \uc801\uc6a9\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-908), "\ud480\uc5d0\uc11c \uc5f0\uacb0\uc744 \ub300\uae30\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-909), "\uc6d0\uaca9 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc5f0\uacb0\uc744 \ub300\uae30\ud558\ub294 \ub3d9\uc548 \uc2dc\uac04\uc774 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-910), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uad6c\uc131 \uc124\uc815\uc774 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-911), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud574 \uc801\uc6a9 \uac00\ub2a5\ud55c \uad6c\uc131 \uc124\uc815\uc744 \uacb0\uc815\ud558\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-912), "\uc6f9 \uc11c\ube44\uc2a4 \ud638\uc2a4\ud2b8\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-913), "\uc6f9 \uc11c\ube44\uc2a4 \uc5f0\uacb0\uc744 \ub9cc\ub4e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-914), "\uc6f9 \uc11c\ube44\uc2a4\ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub098 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uc911 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-915), "\uc6f9 \uc11c\ube44\uc2a4\ub97c \uc778\uc99d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-800), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub294 GMS\uc5d0 \ub300\ud55c \uc678\ubd80 \ud750\ub984 \ubcf4\uace0\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-801), "\ud750\ub984 \uc804\ub2ec\uc790 \uac8c\uc774\ud2b8\uc6e8\uc774 \uad6c\uc131\uc774 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-802), "\uc774 \ubaa8\ub378\uc740 GMS\uc5d0 \ub300\ud55c \uc678\ubd80 \ud750\ub984 \ubcf4\uace0\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-803), "\uc774 \ud38c\uc6e8\uc5b4 \ubc84\uc804\uc740 GMS\uc5d0 \ub300\ud55c \uc678\ubd80 \ud750\ub984 \ubcf4\uace0\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-804), "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 \uc571 \uc2dc\uac01\ud654 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-805), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc800\uc7a5 \uacf5\uac04\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4."}, {Integer.toString(-806), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub7f0\ud0c0\uc784 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud569\ub2c8\ub2e4."}, {Integer.toString(-807), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-808), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-809), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1\uacfc 2\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-810), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1\uacfc \ud750\ub984 \uc804\ub2ec\uc790\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-811), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1\uacfc 2, \ud750\ub984 \uc804\ub2ec\uc790\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-812), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2\uc640 \ud750\ub984 \uc804\ub2ec\uc790\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-813), "\ud750\ub984 \uc804\ub2ec\uc790\uc5d0 \ub4f1\ub85d\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-814), "GMS\uc5d0\uc11c \uac8c\uc774\ud2b8\uc6e8\uc774 \ubc29\ud654\ubcbd\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-815), "\uac8c\uc774\ud2b8\uc6e8\uc774 \ubc29\ud654\ubcbd \ub05d\uc5d0\uc11c \ud130\ub110\uc744 \uc0dd\uc131\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-816), "\uad00\ub9ac\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub05d\uc5d0\uc11c \ud130\ub110\uc744 \uc0dd\uc131\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-817), "\ud074\ub77c\uc6b0\ub4dc GMS \uad00\ub9ac \ubc0f \ubcf4\uace0\uc5d0 \ub300\ud55c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ub77c\uc774\uc120\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {Integer.toString(-818), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucc98\ub9ac \ub2a5\ub825\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4."}, {Integer.toString(-819), "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub300\uc5ed\ud3ed\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4."}, {"EDIT_DOMAIN", "\ub3c4\uba54\uc778 \ud3b8\uc9d1"}, {"VIEW_DOMAIN", "\ub3c4\uba54\uc778 \uc138\ubd80 \uc815\ubcf4 \ubcf4\uae30"}, {"ADD_DOMAIN", "\ub3c4\uba54\uc778 \ucd94\uac00"}, {"SELECT_TO_DELETE", "\uc0ad\uc81c\ud560 \ub3c4\uba54\uc778/\uc778\uc99d \uc11c\ubc84\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"SELECT_AS_TO_DEL", "\uc0ad\uc81c\ud560 \uc778\uc99d \uc11c\ubc84\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"DELETE_CONFIRMATION", "\ub2e4\uc74c \ub3c4\uba54\uc778\uc744 \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4. '"}, {"USER_DELETE_CONFIRMATION", "\uc778\uc99d \uc11c\ubc84, \uc0ac\uc6a9\uc790, \uc0ac\uc6a9\uc790 \uc720\ud615 \ubc0f \ud574\ub2f9 \uc124\uc815\ub3c4 \ubaa8\ub450 \uc0ad\uc81c\ub429\ub2c8\ub2e4."}, {"USER_AS_DELETE_CONFIRMATION", "\uc0ac\uc6a9\uc790, \uc0ac\uc6a9\uc790 \uc720\ud615 \ubc0f \ud574\ub2f9 \uc124\uc815\ub3c4 \ubaa8\ub450 \uc0ad\uc81c\ub429\ub2c8\ub2e4."}, {"SURE_WANT_TO_CONTINUE", "\uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"MULTIPLE_DELETE_CONFIRMATION", "\ub2e4\uc74c \ub3c4\uba54\uc778\uc744 \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "\ub2e4\uc74c \uc778\uc99d \uc11c\ubc84\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"AND_AS_DELETE_CONFIRMATION", "\ub2e4\uc74c \uc778\uc99d \uc11c\ubc84\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"WANT_TO_CONTINUE", "\uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DOMAIN", "\ub3c4\uba54\uc778"}, {"DOMAINS", "\ub3c4\uba54\uc778"}, {"SEARCH", "\uac80\uc0c9"}, {"NAME", "\uc774\ub984"}, {"DOMAIN_TYPE", "\ub3c4\uba54\uc778 \uc720\ud615"}, {"DOMAIN_SETTINGS", "\ub3c4\uba54\uc778 \uc124\uc815"}, {"ALIAS", "\ubcc4\uce6d"}, {"DISPLAY_DOMAIN", "\ub85c\uadf8\uc778 \ud654\uba74\uc5d0 \ub3c4\uba54\uc778 \ud45c\uc2dc"}, {"SET_AS_DEFAULT", "\uae30\ubcf8 \ub3c4\uba54\uc778\uc73c\ub85c \uc124\uc815"}, {"HOST_NAME", "\ud638\uc2a4\ud2b8 \uc774\ub984"}, {"HOST_TYPE", "\ud638\uc2a4\ud2b8 \uc720\ud615"}, {"EQUALS", "\uac19\uc74c"}, {"STARTS_WITH", "\uc2dc\uc791 \ubb38\uc790"}, {"ENDS_WITH", "\uc885\ub8cc \ubb38\uc790"}, {"CONTAINS", "\ud3ec\ud568"}, {"LOCAL", "\ub85c\uceec"}, {"REMOTE", "\uc6d0\uaca9"}, {"DOMAINS", "\ub3c4\uba54\uc778"}, {"SSL_USED", "SSL \uc0ac\uc6a9\ub428"}, {"CONFIGURE", "\uad6c\uc131"}, {"NO_DOMAIN_FOUND", "\ub3c4\uba54\uc778 \uc5c6\uc74c"}, {"NO_AS_FOUND", "\uc778\uc99d \uc11c\ubc84 \uc5c6\uc74c"}, {"ADD_DOMAIN", "\ub3c4\uba54\uc778 \ucd94\uac00"}, {"DELETE_DOMAINS", "\ub3c4\uba54\uc778/\uc778\uc99d \uc11c\ubc84 \uc0ad\uc81c"}, {"DELETE_ASS", "\uc778\uc99d \uc11c\ubc84 \uc0ad\uc81c"}, {"EQUALS", "\uac19\uc74c"}, {"STARTS_WITH", "\uc2dc\uc791 \ubb38\uc790"}, {"ENDS_WITH", "\uc885\ub8cc \ubb38\uc790"}, {"CONTAINS", "\ud3ec\ud568"}, {"LOCAL", "\ub85c\uceec"}, {"REMOTE", "\uc6d0\uaca9"}, {"REMOTE_DOMAIN", "\uc6d0\uaca9 \ub3c4\uba54\uc778"}, {"ADMIN_PASSWORD", "\uad00\ub9ac\uc790 \uc554\ud638"}, {"DEFAULT_ADMIN_USER", "\uae30\ubcf8 \uad00\ub9ac \uc0ac\uc6a9\uc790"}, {"AUTH_PORT", "\uc778\uc99d \ud3ec\ud2b8"}, {"ACCT_PORT", "\uacc4\uc815 \ud3ec\ud2b8"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "\uae30\ubcf8 \uace0\uc720 \uc774\ub984"}, {"SEARCH_FILTER", "\uac80\uc0c9 \ud544\ud130"}, {"SHARED_SECRET", "\uacf5\uc720 \ube44\ubc00"}, {"USE_SSL", "SSL \uc0ac\uc6a9"}, {"SSL_PORT", "SSL \ud3ec\ud2b8"}, {"ANONYMOUS_LOGIN", "\uc775\uba85 \ub85c\uadf8\uc778"}, {"LOGIN_USER_NAME", "\ub85c\uadf8\uc778 \uc0ac\uc6a9\uc790 \uace0\uc720 \uc774\ub984"}, {"DNAME_MSG", "\ubc14\uc778\ub529 \uc218\ud589 \uc2dc \ub514\ub809\ud130\ub9ac \uc11c\ubc84\ub97c \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uace0\uc720 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc758 \uac12\uc740 DN(\uace0\uc720 \uc774\ub984)\uc73c\ub85c \uc9c0\uc815\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uc608: [uid=xyz,ou=People,dc=example,dc=com] , [cn=jdoe,cn=users,dc=sv,dc=company,dc=com])."}, {"LOGIN_PWD", "\ub85c\uadf8\uc778 \uc554\ud638"}, {"PROTOCOL_VERSION", "\ud504\ub85c\ud1a0\ucf5c \ubc84\uc804"}, {"LDAPV2", "LDAP \ubc84\uc804 2"}, {"LDAPV3", "LDAP \ubc84\uc804 3"}, {"SETTINGS", "\uc124\uc815"}, {"USER_DIRECTORY_LDAP", "\uc0ac\uc6a9\uc790 \ub514\ub809\ud130\ub9ac LDAP \uc2a4\ud0a4\ub9c8"}, {"LDAP_SCHEMA", "LDAP \uc2a4\ud0a4\ub9c8"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "\uc0ac\uc6a9\uc790 \uc815\uc758"}, {"USER_OBJECTS", "\uc0ac\uc6a9\uc790 \uac1c\uccb4"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "\ub85c\uadf8\uc778 \uc774\ub984 \ud2b9\uc131"}, {"FIRST_NAME", "\uc774\ub984 \ud2b9\uc131"}, {"LAST_NAME", "\uc131 \ud2b9\uc131"}, {"EMAIL", "\uc804\uc790 \uba54\uc77c \ud2b9\uc131"}, {"TELEPHONE", "\uc804\ud654 \ubc88\ud638 \ud2b9\uc131"}, {"CON_TIMEOUT", "\uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c"}, {"SCHEMA", "\uc2a4\ud0a4\ub9c8"}, {"TEST_SETTINGS", "\uc124\uc815 \ud14c\uc2a4\ud2b8"}, {"TEST_RADIUS_SETTINGS", "RADIUS \uc124\uc815 \ud14c\uc2a4\ud2b8"}, {"TEST_LDAP_MSG", "LDAP \uc124\uc815\uc744 \ud14c\uc2a4\ud2b8\ud558\ub824\uba74 \uc62c\ubc14\ub978 LDAP,"}, {"TEST_RADIUS_MSG", "RADIUS \uc124\uc815\uc744 \ud14c\uc2a4\ud2b8\ud558\ub824\uba74 \uc62c\ubc14\ub978 RADIUS,"}, {"TEST_MSG", "\ub85c\uadf8\uc778 \uc774\ub984 \ubc0f \uc554\ud638\ub97c \uc785\ub825\ud558\uace0 [\ud14c\uc2a4\ud2b8] \ub2e8\ucd94\ub97c \ud074\ub9ad\ud558\uc2ed\uc2dc\uc624. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uba74 \ubcc0\uacbd\ub41c \ub0b4\uc6a9\uc774 \ubaa8\ub450 \uc801\uc6a9\ub429\ub2c8\ub2e4."}, {"USER", "\uc0ac\uc6a9\uc790"}, {"PWD", "\uc554\ud638"}, {"RUN_CLIENT_TEST", "\ud074\ub77c\uc774\uc5b8\ud2b8 \ud14c\uc2a4\ud2b8 \uc2e4\ud589"}, {"TEST_STATUS", "\ud14c\uc2a4\ud2b8 \uc0c1\ud0dc"}, {"RETURNED_USER_ATTRIBUTES", "\ubc18\ud658\ub41c \ud14c\uc2a4\ud2b8 \uacb0\uacfc"}, {"TEST", "\ud14c\uc2a4\ud2b8"}, {"OK", "\ud655\uc778"}, {"CANCEL", "\ucde8\uc18c"}, {"CLOSE", "\ub2eb\uae30"}, {"CANT_DELETE_LOCALDOMAIN", "LocalDomain\uc744 \ud3b8\uc9d1/\uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CANT_EDIT", "\ub3c4\uba54\uc778\uc774 \ud558\ub098\ub9cc \uc788\ub294 \uacbd\uc6b0 \ud3b8\uc9d1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_NAME", "\uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_ADMIN_PWD", "\uad00\ub9ac\uc790 \uc554\ud638\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_ADMIN_USER", "\uae30\ubcf8 \uad00\ub9ac \uc0ac\uc6a9\uc790\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_AUTH_PORT", "\uc778\uc99d \ud3ec\ud2b8\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_AUTH_PORT", "\uc778\uc99d \ud3ec\ud2b8\ub294 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"AUTH_PORT_RANGE", "\uc778\uc99d \ud3ec\ud2b8 \ubc94\uc704\ub294 0 - 65535 \uc0ac\uc774\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"EMPTY_ACCT_PORT", "\uacc4\uc815 \ud3ec\ud2b8\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_ACCT_PORT", "\uacc4\uc815 \ud3ec\ud2b8\ub294 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"EMPTY_BD_NAME", "\uae30\ubcf8 \uace0\uc720 \uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_SEARCH_FILTER", "\uac80\uc0c9 \ud544\ud130\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_SHRED_SECRET", "\uacf5\uc720 \ube44\ubc00\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_SSL_PORT", "SSL \ud3ec\ud2b8\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_SSL_PORT", "SSL \ud3ec\ud2b8\ub294 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"SSL_PORT_RANGE", "SSL \ud3ec\ud2b8 \ubc94\uc704\ub294 0 - 65535 \uc0ac\uc774\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"EMPTY_LOGIN", "\ub85c\uadf8\uc778 \uc0ac\uc6a9\uc790 \uace0\uc720 \uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_LOGIN_PWD", "\ub85c\uadf8\uc778 \uc554\ud638\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"EMPTY_CON_TIMEOUT", "\uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_CON_TIMEOUT", "\uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c\uc740 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"RECOMMEND_SSL", "\uc6d0\uaca9 \uc11c\ubc84\uc640\uc758 \uc548\uc804\ud55c \ud1b5\uc2e0\uc744 \uc704\ud574 SSL\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}, {"CON_NOT_SECURE", "SSL\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \uc5f0\uacb0\uc5d0 \ub300\ud574 \ubcf4\uc548\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."}, {"DOMAIN_EXISTS", "\uc774 \uc774\ub984\uc744 \uac00\uc9c4 \ub3c4\uba54\uc778\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4."}, {"ALIAS_EXISTS", "\uc774 \uc774\ub984\uc744 \uac00\uc9c4 \ubcc4\uce6d\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4."}, {"DOMAIN_INVALID", "\uc9c0\uc815\ub41c \ub3c4\uba54\uc778 \uc774\ub984\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DOMAIN_VALID_CHARS", "\uc774\ub984\uc5d0\ub294"}, {"DOMAIN_VALID_CHARS_LIST", "\uc601\uc22b\uc790, \ub9c8\uce68\ud45c(.), \ud558\uc774\ud508(-), \ubc11\uc904(_) \ubc0f \uacf5\ubc31\ub9cc \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"SPECIFY_VALID_NAME", "\ud5c8\uc6a9\ub418\ub294 \ubb38\uc790\uac00 \ud3ec\ud568\ub41c \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"DIR_GRP_SETTINGS", "Active Directory \uadf8\ub8f9 \uc124\uc815"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "AD \uadf8\ub8f9 \uad6c\uc131\uc6d0\ub9cc \ud5c8\uc6a9"}, {"DIR_GROUPS", "Active Directory \uadf8\ub8f9"}, {"GRP_NAME_INVALID", "\uc9c0\uc815\ub41c \uadf8\ub8f9 \uc774\ub984\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"GRP_NAME_INVALID_LENGTH", "\uadf8\ub8f9 \uc774\ub984\uc740 200\uc790\ub97c \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"AUTH_SERVER_NAME", "\uc778\uc99d \uc11c\ubc84 \uc774\ub984"}, {"ADD_AUTH_SERVER", "\uc778\uc99d \uc11c\ubc84 \ucd94\uac00"}, {"ADD_AUTHSERVER", "\uc778\uc99d \uc11c\ubc84 \ucd94\uac00"}, {"EDIT_AUTHSERVER", "\uc778\uc99d \uc11c\ubc84 \ud3b8\uc9d1"}, {"DELETE_DOMAIN", "\uc774 \ub3c4\uba54\uc778 \uc0ad\uc81c"}, {"CANT_DELETE_LOCAL_AS", "\ub85c\uceec \uc778\uc99d \uc11c\ubc84\ub97c \ud3b8\uc9d1/\uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CANT_DELETE_ADMIN_AS", "\uc774 \ub3c4\uba54\uc778\uc758 \uae30\ubcf8 \uad00\ub9ac\uc790\uac00 \uc774 \uc11c\ubc84\uc5d0 \ub300\ud574 \uc778\uc99d\ub418\uc5c8\uc73c\ubbc0\ub85c \uc774 \uc778\uc99d \uc11c\ubc84\ub97c \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\n\uae30\ubcf8 \uad00\ub9ac\uc790\ub97c \ub2e4\ub978 \uc778\uc99d \uc11c\ubc84\ub85c \uc774\ub3d9\ud55c \ud6c4 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc2ed\uc2dc\uc624."}, {"EDIT_AUTH_SERVER", "\uc774 \uc778\uc99d \uc11c\ubc84 \ud3b8\uc9d1"}, {"VIEW_AUTH_SERVER", "\uc778\uc99d \uc11c\ubc84 \uc138\ubd80 \uc815\ubcf4 \ubcf4\uae30"}, {"DELETE_AUTH_SERVER", "\uc774 \uc778\uc99d \uc11c\ubc84 \uc0ad\uc81c"}, {"AS_INVALID", "\uc9c0\uc815\ub41c \uc778\uc99d \uc11c\ubc84\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"AS_EXISTS", "\uc774 \uc774\ub984\uc744 \uac00\uc9c4 \uc778\uc99d \uc11c\ubc84\uac00 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4."}, {"EMPTY_AS_NAME", "\uc778\uc99d \uc11c\ubc84 \uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"AS_NAME_MSG", "\ub9cc\ub4e4\uc5b4\uc9c4 \uc778\uc99d \uc11c\ubc84\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc774\ub984\uc740 \ub3c4\uba54\uc778\uc758 \ub2e4\ub978 \uc778\uc99d \uc11c\ubc84\ub97c \uad00\ub9ac\ud558\ub294 \ub370 \uc720\uc6a9\ud569\ub2c8\ub2e4."}, {"AS_DELETE_CONFIRMATION", "\ub2e4\uc74c \uc778\uc99d \uc11c\ubc84\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4. '"}, {"PRI_RADIUS", "\uae30\ubcf8 RADIUS \uc11c\ubc84"}, {"AUTH_PROTOCOL", "\uc778\uc99d \ud504\ub85c\ud1a0\ucf5c"}, {"RADIUS_TIMEOUT", "RADIUS \uc2dc\uac04 \uc81c\ud55c(\ucd08)"}, {"MAX_RETRIES", "\ucd5c\ub300 \ub2e4\uc2dc \uc2dc\ub3c4 \ud69f\uc218"}, {"BACK_RADIUS", "\ubc31\uc5c5 RADIUS \uc11c\ubc84"}, {"RADIUS_USER_GROUP", "RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9 \uc124\uc815"}, {"ALLOW_GROUP_MEMBERS", "RADIUS \uadf8\ub8f9 \uad6c\uc131\uc6d0\ub9cc \ud5c8\uc6a9"}, {"USE_SW_VSA", "RADIUS \uc11c\ubc84\uc5d0\uc11c SonicWall \uacf5\uae09\uc5c5\uccb4\ubcc4 \ud2b9\uc131 \uc0ac\uc6a9"}, {"USE_FILTER_ID", "RADIUS \uc11c\ubc84\uc5d0\uc11c Filter-ID \ud2b9\uc131 \uc0ac\uc6a9"}, {"ALLOW_GROUPS", "\ud5c8\uc6a9\ub418\ub294 RADIUS \uadf8\ub8f9"}, {"USER_GROUP", "\uc0ac\uc6a9\uc790 \uadf8\ub8f9"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS \uc2dc\uac04 \uc81c\ud55c\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS \uc2dc\uac04 \uc81c\ud55c\uc740 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"EMPTY_MAX_RETRIES", "\ucd5c\ub300 \ub2e4\uc2dc \uc2dc\ub3c4 \ud69f\uc218\ub294 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"POSITIVE_MAX_RETRIES", "\ucd5c\ub300 \ub2e4\uc2dc \uc2dc\ub3c4 \ud69f\uc218\ub294 \uc591\uc218\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"TEST_USER_NAME", "\ud14c\uc2a4\ud2b8 \uc0ac\uc6a9\uc790 \uc774\ub984\uc740 \ube44\uc6cc \ub458 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TEST_USER_PWD", "\ud14c\uc2a4\ud2b8 \uc0ac\uc6a9\uc790 \uc554\ud638\ub294 \ube44\uc6cc \ub458 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DOMAIN_NAME_MSG", "\ub9cc\ub4e4\uc5b4\uc9c4 \ub3c4\uba54\uc778\uc758 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \uc774\ub984\uc740 \ub85c\uadf8\uc778 \ud398\uc774\uc9c0\uc758 [\ub3c4\uba54\uc778] \ub4dc\ub86d\ub2e4\uc6b4\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4."}, {"DOMAIN_TYPE_MSG", "\ub3c4\uba54\uc778 \uc720\ud615\uc73c\ub85c\ub294 [\ub85c\uceec] \ub610\ub294 [\uc6d0\uaca9]\uc774 \uc788\uc2b5\ub2c8\ub2e4. LDAP\ub098 AD \uc11c\ubc84\uc640 \uac19\uc774 \uc678\ubd80 \ud50c\ub7ab\ud3fc\uc758 \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud574\uc57c \ud558\ub294 \ub3c4\uba54\uc778\uc740 [\uc6d0\uaca9] \uc720\ud615\uc758 \ub3c4\uba54\uc778\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. [\ub85c\uceec] \uc720\ud615\uc758 \ub3c4\uba54\uc778\uc5d0\ub294 SGMS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ud45c\uc2dc\ub418\ub294 \uc0ac\uc6a9\uc790 \uacc4\uc815 \ubc0f \uc778\uc99d \uc138\ubd80 \uc815\ubcf4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. [\ub85c\uceec] \uc720\ud615\uc758 \ub3c4\uba54\uc778\uc744 \ub9cc\ub4e4\uba74 \uc678\ubd80 \uc778\uc99d \uc778\ud130\ud398\uc774\uc2a4 \uc5c6\uc774 SGMS \ub0b4\uc5d0\uc11c \uc5ec\ub7ec \ub3c4\uba54\uc778\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"ADMIN_PASSWORD_MSG", "\uc0c8\ub85c\uc6b4 [\ub85c\uceec] \uc720\ud615\uc758 \ub3c4\uba54\uc778\uc744 \ub9cc\ub4e4\uba74 \ub3c4\uba54\uc778\uc5d0 \ub300\ud574 [admin] \uc0ac\uc6a9\uc790\uac00 \uae30\ubcf8\uc801\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9d1\ub2c8\ub2e4. \uad00\ub9ac \uc0ac\uc6a9\uc790\uc758 \uc554\ud638\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"ADMIN_USERID_MSG", "\ub3c4\uba54\uc778\uc5d0 \ub300\ud574 \uad00\ub9ac\uc790\ub85c \uc9c0\uc815\ud574\uc57c \ud558\ub294 \uc0ac\uc6a9\uc790 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624. \uc774 \uc0ac\uc6a9\uc790 \uc774\ub984\uc740 \uc774 \ub3c4\uba54\uc778\uc5d0 \uc5f0\uacb0\ub41c \ub514\ub809\ud130\ub9ac \uc11c\ubc84\uc5d0\uc11c \uc720\ud6a8\ud55c \uc0ac\uc6a9\uc790 \uc774\ub984\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc5d0 \ub300\ud574 \uc774\ub984 [admin]\uc774 \uc9c0\uc815\ub41c \uacbd\uc6b0 \uc0ac\uc6a9\uc790 ID [admin]\uc744 \ud3ec\ud568\ud55c \uc0ac\uc6a9\uc790\uac00 \uc5f0\uad00\ub41c \ub514\ub809\ud130\ub9ac\uc5d0 \uc788\uc5b4\uc57c \ud558\uba70 \uc774 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uad00\ub9ac \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uc608: jdoe)."}, {"HOST_NAME_MSG", "\uc6d0\uaca9 \uc778\uc99d \uc11c\ubc84\uc758 IP \uc8fc\uc18c \ub610\ub294 \ud638\uc2a4\ud2b8 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: [mydc.example.com], [X.X.X.X](ip \uc8fc\uc18c), [company.com]). \uc6d0\uaca9 \uc11c\ubc84\uac00 Windows AD(Active Directory) \uc11c\ubc84\uc774\uace0 AD \ud3ec\ub9ac\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud574\uc57c \ud558\ub294 \uc5ec\ub7ec \ub3c4\uba54\uc778\uc774 \uc788\ub294 \uacbd\uc6b0 AD \ud3ec\ub9ac\uc2a4\ud2b8\uc758 IP \uc8fc\uc18c\ub098 \uc804\uc5ed \uce74\ud0c8\ub85c\uadf8 \uc774\ub984\uc744 \ud638\uc2a4\ud2b8 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"AUTHENTICATION_PORT_MSG", "\uc778\uc99d \uc694\uccad\uc5d0 \ub300\ud574 \uc218\uc2e0 \ub300\uae30\ud558\ub294 LDAP \ub610\ub294 AD \uc11c\ubc84\uc758 \ud3ec\ud2b8 \ubc88\ud638\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 389\uc785\ub2c8\ub2e4(LDAP/AD \uc11c\ubc84\uc758 \uacbd\uc6b0). AD \ud3ec\ub9ac\uc2a4\ud2b8\uc758 IP \uc8fc\uc18c\ub098 \uc804\uc5ed \uce74\ud0c8\ub85c\uadf8 \uc774\ub984\uc744 \ud638\uc2a4\ud2b8 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ud55c \uacbd\uc6b0 \ud574\ub2f9 \ud3ec\ud2b8 \ubc88\ud638\ub3c4 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 3268\uc785\ub2c8\ub2e4"}, {"HOST_TYPE_MSG", "LDAP \uc11c\ubc84, Windows Active Directory \ub610\ub294 RADIUS \uc11c\ubc84\uc77c \uacbd\uc6b0 \uc774 \uac12\uc740 \uc6d0\uaca9 \uc778\uc99d \uc11c\ubc84\uc758 \uc720\ud615\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4."}, {"ALIAS_MSG", "\ub3c4\uba54\uc778\uc774 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uc744 \ub54c \ub85c\uadf8\uc778\ud558\uae30 \uc704\ud574 GMS \ub85c\uadf8\uc778 \ud654\uba74\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub3c4\uba54\uc778 \uc774\ub984\uc758 \uc57d\uc2dd \ud45c\ud604\uc785\ub2c8\ub2e4 (\uc608: alias\\\\username). \ub3c4\uba54\uc778 \uc774\ub984 \uae38\uc774\uac00 16\uc790 \uc774\ud558\uc778 \uacbd\uc6b0 \ubcc4\uce6d\uc740 \ub3c4\uba54\uc778 \uc774\ub984\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \ucc44\uc6cc\uc9d1\ub2c8\ub2e4."}, {"PROTOCOL_VERSION_MSG", "\uc6d0\uaca9 LDAP/AD \uc11c\ubc84\uac00 \uc2e4\ud589 \uc911\uc778 LDAP \ud504\ub85c\ud1a0\ucf5c \ubc84\uc804\uc785\ub2c8\ub2e4."}, {"BASE_DN_MSG", "\uae30\ubcf8 \uace0\uc720 \uc774\ub984\uc740 SGMS\uc5d0\uc11c \uc2dc\uc791\ub41c \uac80\uc0c9\uc774 \uc218\ud589\ub418\ub294 \ub514\ub809\ud130\ub9ac\uc5d0\uc11c \ub8e8\ud2b8 \ud56d\ubaa9\uc744 \uc2dd\ubcc4\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub514\ub809\ud130\ub9ac\uc758 \uae30\ubcf8 DN(example.com\ub77c\uace0 \ud568)\uc740 [dc=example,dc=com] \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. SGMS\uc5d0 \ub85c\uadf8\uc778\ud560 \uc218 \uc788\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\uac00 \ud45c\uc2dc\ub418\ub3c4\ub85d, \ud56d\uc0c1 \ucd5c\uc0c1\uc704 \uc218\uc900 \ub178\ub4dc\ub97c \ub514\ub809\ud130\ub9ac \ud2b8\ub9ac\uc758 \uae30\ubcf8 DN\uc73c\ub85c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"USE_SSL_MSG", "\uc6d0\uaca9 \uc11c\ubc84\uc5d0 \ubc14\uc778\ub529 \uc2dc SSL\uc744 \uc0ac\uc6a9\ud560\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. SSL\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 \uc6d0\uaca9 \uc11c\ubc84\uc758 CA \uc778\uc99d\uc11c\ub098 \uc11c\ubc84 \uc778\uc99d\uc11c\uc5d0 \uc11c\uba85\ud55c CA\uc758 \ub8e8\ud2b8 \uc778\uc99d\uc11c\uac00 SGMS\uc758 \ud0a4 \uc800\uc7a5\uc18c\uc5d0 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 CA\ub85c \ud45c\uc2dc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"SSL_PORT_MSG", "SSL \ubc14\uc778\ub529 \uc694\uccad\uc5d0 \ub300\ud574 \uc6d0\uaca9 \uc11c\ubc84\uac00 \uc218\uc2e0 \ub300\uae30\ud558\uace0 \uc788\ub294 \ud3ec\ud2b8 \ubc88\ud638\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 636\uc785\ub2c8\ub2e4(LDAP/AD \uc11c\ubc84\uc758 \uacbd\uc6b0). AD \ud3ec\ub9ac\uc2a4\ud2b8\uc758 IP \uc8fc\uc18c\ub098 \uc804\uc5ed \uce74\ud0c8\ub85c\uadf8 \uc774\ub984\uc744 \ud638\uc2a4\ud2b8 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ud55c \uacbd\uc6b0 \ud574\ub2f9 SSL \ud3ec\ud2b8 \ubc88\ud638\ub3c4 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 3269\uc785\ub2c8\ub2e4"}, {"ANONYMOUS_LOGIN_MSG", "(\uad8c\uc7a5\ub418\uc9c0 \uc54a\uc74c). SGMS\ub97c \uc6d0\uaca9 \uc11c\ubc84\uc5d0 \uc775\uba85\uc73c\ub85c \ubc14\uc778\ub529\ud560\uc9c0 \uc5ec\ubd80\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 \uc6d0\uaca9 LDAP/AD \uc11c\ubc84\uc5d0\uc11c \uc775\uba85 \ubc14\uc778\ub529\uc744 \ud5c8\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc775\uba85 \ubc14\uc778\ub529\uc740 \uc11c\ube44\uc2a4 \uacc4\uc815(\ub514\ub809\ud130\ub9ac\uc758 \ud558\ub098 \uc774\uc0c1\uc758 \uc720\ud6a8\ud55c \uc0ac\uc6a9\uc790 \uacc4\uc815)\uc774 \uc774\uc804\uc5d0 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub9cc \uc2dc\ub3c4\ub418\uc5b4\uc57c \ud558\uba70, \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}, {"LOGIN_USER_DN_MSG", "\ubc14\uc778\ub529 \uc218\ud589 \uc2dc \ub514\ub809\ud130\ub9ac \uc11c\ubc84\ub97c \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uace0\uc720 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \ud544\ub4dc\uc758 \uac12\uc740 DN(\uace0\uc720 \uc774\ub984)\uc73c\ub85c \uc9c0\uc815\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4 (\uc608: [uid=xyz, ou=People, dc=example, dc=com] , [cn=jdoe, cn=users, dc=sv, dc=company, dc=com])."}, {"LOGIN_USER_PASSWORD_MSG", "\ub85c\uadf8\uc778 \uc0ac\uc6a9\uc790 DN\uc758 \uc554\ud638\uc785\ub2c8\ub2e4."}, {"CONN_TIMEOUT_MSG", "\uc774 \uac12(\ubc00\ub9ac\ucd08)\uc740 \uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c \uae30\uac04\uc785\ub2c8\ub2e4. \uc5f0\uacb0 \uc2e4\ud328 \uc2dc \uc774 \uae30\uac04\uc774 \uc9c0\ub098\uba74 \uc6d0\uaca9 \uc11c\ubc84\uc640\uc758 \uc5f0\uacb0 \uc2dc\ub3c4\uac00 \ud3ec\uae30\ub429\ub2c8\ub2e4."}, {"LDAP_SCHEMA_MSG", "\uc5f0\uacb0\ub41c LDAP/AD \uc11c\ubc84\uc758 LDAP \uc2a4\ud0a4\ub9c8\uc785\ub2c8\ub2e4."}, {"OBJ_CLASS_MSG", "\uc0ac\uc6a9\uc790\uac00 \uc18d\ud55c \ud45c\uc900 \uac1c\uccb4 \ud074\ub798\uc2a4 \uc911 \ud558\ub098\uc758 \uc774\ub984\uc785\ub2c8\ub2e4."}, {"LOGIN_NAME_ATTRIBUTE_MSG", "\uc0ac\uc6a9\uc790 ID\ub97c \ub098\ud0c0\ub0b4\ub294 LDAP/AD \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4. \uc774 \ud2b9\uc131\uc740 \uac12\uc774 SGMS \ub85c\uadf8\uc778 \ud398\uc774\uc9c0\uc5d0\uc11c \uc0ac\uc6a9\uc790 ID\ub85c \uc0ac\uc6a9\ub418\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131\uc785\ub2c8\ub2e4 (\uc608: uid, sAMAccountName etc)."}, {"FIRST_NAME_ATTRIBUTE_MSG", "\uc774\ub984\uc744 \ub098\ud0c0\ub0b4\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: givenName)."}, {"LAST_NAME_ATTRIBUTE_MSG", "\uc131\uc744 \ub098\ud0c0\ub0b4\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: sn)."}, {"EMAIL_ATTRIBUTE_MSG", "\uc804\uc790 \uba54\uc77c ID\ub97c \ub098\ud0c0\ub0b4\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: mail)."}, {"TELEPHONE_ATTRIBUTE_MSG", "\uc804\ud654 \ubc88\ud638\ub97c \ub098\ud0c0\ub0b4\ub294, LDAP \uc11c\ubc84\uc758 \ud2b9\uc131 \uc774\ub984\uc785\ub2c8\ub2e4 (\uc608: telephoneNumber)."}, {"TEST_PANE_MSG", "\uc5ec\uae30\uc5d0\uc11c \uc124\uc815 \ud328\ub110\uc5d0 \uc785\ub825\ud55c \uc778\uc99d \uc11c\ubc84(LDAP/AD/RADIUS) \uad6c\uc131\uc744 \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"TEST_PANE_USER_MSG", "GMS\uc5d0 \ub85c\uadf8\uc778\ud558\uae30 \uc704\ud574 SGMS \ub85c\uadf8\uc778 \ud398\uc774\uc9c0\uc5d0 \uc785\ub825\ud558\ub294 \uc62c\ubc14\ub978 \uc0ac\uc6a9\uc790 \uc774\ub984\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624. \uc774 \uc0ac\uc6a9\uc790 \uc774\ub984\uc740 \uc720\ud6a8\ud574\uc57c \ud558\uba70 \uc774 \ub3c4\uba54\uc778\uc758 \uc5f0\uad00\ub41c \ub514\ub809\ud130\ub9ac\uc5d0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub514\ub809\ud130\ub9ac\uc758 \uc774 \uc0ac\uc6a9\uc790 \uc774\ub984\uc5d0 \ub300\ud55c \uc554\ud638\ub3c4 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"EMPTY_DIR_GROUP", "\ub514\ub809\ud130\ub9ac \uadf8\ub8f9 \uc774\ub984\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "\uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud558\uba74 \uc9c0\uc815\ub41c Active Directory \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc778 \uc0ac\uc6a9\uc790\ub9cc GMS\uc5d0 \ub85c\uadf8\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud560 \uacbd\uc6b0 \uc124\uc815 \ud328\ub110\uc5d0\uc11c \ud638\uc2a4\ud2b8 \uc720\ud615\uc744 [Active Directory]\ub85c \uc120\ud0dd\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"DIR_GROUPS_MSG", "GMS\uc5d0 \ub85c\uadf8\uc778\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud560 \uad6c\uc131\uc6d0\uc778 AD \uadf8\ub8f9 \uc774\ub984\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624. \uc138\ubbf8\ucf5c\ub860\uc73c\ub85c \uad6c\ubd84\ub41c \uc5ec\ub7ec AD \uadf8\ub8f9\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (\uc608: [GMSUsers], [ADGroup1;AD group2;GMS Users;Group4])."}, {"RADIUS_HOST_NAME_MSG", "RADIUS \uc778\uc99d \uc11c\ubc84\uc758 \ud638\uc2a4\ud2b8 \uc774\ub984\uc774\ub098 IP \uc8fc\uc18c\uc785\ub2c8\ub2e4 (\uc608: [myradius.example.com], [X.X.X.X](ip \uc8fc\uc18c), [company.com])."}, {"RADIUS_AUTH_PORT_MSG", "\uc778\uc99d \uc694\uccad\uc5d0 \ub300\ud574 \uc218\uc2e0 \ub300\uae30\ud558\ub294 RADIUS \uc11c\ubc84\uc758 \ud3ec\ud2b8 \ubc88\ud638\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 1812\uc785\ub2c8\ub2e4."}, {"RADIUS_SHARED_SECRET_MSG", "GMS\uc640 RADIUS \uc11c\ubc84 \uac04 \uacf5\uc720\ub418\ub294 \ube44\ubc00\uc785\ub2c8\ub2e4. \uc774 \ube44\ubc00\uc740 RADIUS \uc11c\ubc84\uc640 RADIUS \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\ub9cc \uc54c\ub824\uc9c4 \ubb38\uc790\uc5f4 \uac12\uc785\ub2c8\ub2e4."}, {"RADIUS_AUTH_PROTOCOL_MSG", "\uc778\uc99d \uc2dc \uc0ac\uc6a9\ud560 RADIUS \uc778\uc99d \ud504\ub85c\ud1a0\ucf5c\uc785\ub2c8\ub2e4."}, {"RADIUS_TIMEOUT_MSG", "\uc774 \uac12(\ucd08)\uc740 \uc5f0\uacb0 \uc2dc\uac04 \uc81c\ud55c \uae30\uac04\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc5f0\uacb0 \uc2e4\ud328 \uc2dc \uc774 \uae30\uac04\uc774 \uc9c0\ub098\uba74 RADIUS \uc11c\ubc84\uc640\uc758 \uc5f0\uacb0 \uc2dc\ub3c4\uac00 \ud3ec\uae30\ub429\ub2c8\ub2e4."}, {"RADIUS_MAX_RETRIES_MSG", "\uc774 \uac12\uc740 RADIUS \uc11c\ubc84\uc5d0 \ub300\ud574 \uc778\uc99d\uc774 \uc2dc\ub3c4\ub418\ub294 \ud69f\uc218\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc778\uc99d \uc2e4\ud328 \uc2dc \uc9c0\uc815\ub41c \uc2dc\ub3c4 \ud69f\uc218\ub97c \ucd08\uacfc\ud558\uba74 \uc6d0\uaca9 \uc11c\ubc84\uc640\uc758 \uc778\uc99d \uc2dc\ub3c4\uac00 \ud3ec\uae30\ub429\ub2c8\ub2e4."}, {"RADIUS_ONLY_GROUP_MSG", "\uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud558\uba74 \uc9c0\uc815\ub41c RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc778 \uc0ac\uc6a9\uc790\ub9cc GMS\uc5d0 \ub85c\uadf8\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"RADIUS_USE_FILTER_MSG", "\uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud558\uba74 RADIUS \ud2b9\uc131 \\'Filter-ID\\'\uc758 \uac12\uc744 RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9 \uc2dd\ubcc4\uc790\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 GMS\uc5d0 \ub85c\uadf8\uc778\ud558\uae30 \uc704\ud574 RADIUS \uc11c\ubc84\uc5d0\uc11c \uc778\uc99d\ub418\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790-ID\uc640 \ud568\uaed8 \ud2b9\uc131-\uac12 \uc30d\uc744 \ubc18\ud658\ud558\ub3c4\ub85d RADIUS \uc11c\ubc84\ub97c \uc81c\ub300\ub85c \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"RADIUS_USE_SW_MSG", "\uc774 \uc635\uc158\uc744 \uc120\ud0dd\ud55c \uacbd\uc6b0 SonicWall \uacf5\uae09\uc5c5\uccb4\ubcc4 \ud2b9\uc131 [SonicWall-User-Group \ubc0f SonicWall-User-Groups]\uc758 \uac12\uc774 RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9 \uc2dd\ubcc4\uc790\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 GMS\uc5d0 \ub85c\uadf8\uc778\ud558\uae30 \uc704\ud574 RADIUS \uc11c\ubc84\uc5d0\uc11c \uc778\uc99d\ub418\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790-ID\uc640 \ud568\uaed8 SonicWall \uacf5\uae09\uc5c5\uccb4\ubcc4 \ud2b9\uc131-\uac12 \uc30d\uc744 \ubc18\ud658\ud558\ub3c4\ub85d RADIUS \uc11c\ubc84\ub97c \uc81c\ub300\ub85c \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"RADIUS_ALLOW_GROUPS_MSG", "GMS\uc5d0 \ub85c\uadf8\uc778\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud560 \uad6c\uc131\uc6d0\uc778 RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9 \uc774\ub984\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4 (\uc608: [GMSUsers]). \uc5ec\ub7ec RADIUS \uc0ac\uc6a9\uc790 \uadf8\ub8f9\uc744 \uc138\ubbf8\ucf5c\ub860\uc73c\ub85c \uad6c\ubd84\ub41c \ubb38\uc790\uc5f4 \ud615\uc2dd\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (\uc608: [RadGroup1;Rad group2;GMS Users;Group4])."}, {"ADD_AUTH_SERVER_MSG", "\uc774 \uc635\uc158\uc774 \uc120\ud0dd\ub41c \uacbd\uc6b0 \ub3c4\uba54\uc778\uc744 \ucd94\uac00\ud558\ub294 \ub3d9\uc548 \uc0c8 \uc778\uc99d \uc11c\ubc84 \uad6c\uc131\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"PAGE_LABEL", "\ud398\uc774\uc9c0"}, {"MANAGE_PAGE", "\ud398\uc774\uc9c0 \uad00\ub9ac"}, {"ADD_COMPONENT", "\uad6c\uc131 \uc694\uc18c \ucd94\uac00"}, {"PAGE_MANAGER", "\ud398\uc774\uc9c0 \uad00\ub9ac\uc790"}, {"ADD_NEW_PAGE", "\uc0c8 \ud398\uc774\uc9c0 \ucd94\uac00"}, {"DEFAULT_PAGE", "\uae30\ubcf8 \ud398\uc774\uc9c0"}, {"PAGE_DETAILS", "\ud398\uc774\uc9c0 \uc138\ubd80 \uc815\ubcf4"}, {"PAGE_TITLE", "\ud398\uc774\uc9c0 \uc81c\ubaa9"}, {"COMPONENT_TITLE", "\uad6c\uc131 \uc694\uc18c \uc81c\ubaa9"}, {"PAGE_LAYOUT", "\ud398\uc774\uc9c0 \ub808\uc774\uc544\uc6c3"}, {"ONE_COLUMN_LAYOUT", "1\uac1c \uc5f4(100)"}, {"TWO_COLUMN_LAYOUT", "2\uac1c \uc5f4(50:50)"}, {"THREE_COLUMN_LAYOUT", "3\uac1c \uc5f4(30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4\uac1c \uc5f4(25:25:25:25)"}, {"ADD", "\ucd94\uac00"}, {"EDIT", "\ud3b8\uc9d1"}, {"DELETE", "\uc0ad\uc81c"}, {"ADD_COMPONENT_MANAGER", "\uad6c\uc131 \uc694\uc18c \uad00\ub9ac\uc790 \ucd94\uac00"}, {"TYPE", "\uc720\ud615"}, {"RSS_FEED_DETAILS", "RSS \ud53c\ub4dc \uc138\ubd80 \uc815\ubcf4"}, {"RSS_FEEDS", "RSS \ud53c\ub4dc"}, {"TITLE", "\uc81c\ubaa9"}, {"ITEMS", "\ud45c\uc2dc\ud560 \ud56d\ubaa9 \uc218(\ucd5c\ub300)"}, {"REFRESH_INTERVAL", "\uc0c8\ub85c \uace0\uce68 \uac04\uaca9"}, {"REFRESH_INTERVAL_MINUTE", "(\ubd84)"}, {"EVENT_ALERT_DETAILS", "\uc774\ubca4\ud2b8 \uacbd\uace0 \uc138\ubd80 \uc815\ubcf4"}, {"ALERT_TYPES", "\uacbd\uace0 \uc720\ud615"}, {"REFRESH_INTERVAL_HOUR", "(\uc2dc\uac04)"}, {"ALERT_SHOW_TIME_HOURS", "\uc9c0\ub09c \ub2e4\uc74c \uae30\uac04 \ub0b4 \ud2b8\ub9ac\uac70\ub41c \uacbd\uace0 \ud45c\uc2dc"}, {"APPLICATION_WIDGET_DETAILS", "\uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc704\uc82f \uc138\ubd80 \uc815\ubcf4"}, {"WIDGETS", "\uc704\uc82f"}, {"RSS_FEED_TYPE", "RSS \ud53c\ub4dc"}, {"EVENT_ALERT_TYPE", "\uc774\ubca4\ud2b8 \uacbd\uace0"}, {"APPLICATION_WIDGET_TYPE", "\uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc704\uc82f"}, {"CUSTOM_RSS_FEED", "\uc0ac\uc6a9\uc790 \uc9c0\uc815 RSS \ud53c\ub4dc"}, {"CUSTOM_RSS_URL", "\uc0ac\uc6a9\uc790 \uc9c0\uc815 RSS URL"}, {"END_EDIT", "\ud3b8\uc9d1 \uc885\ub8cc"}, {"RSS_URL", "RSS URL"}, {"SAVE", "\uc800\uc7a5"}, {"DEFAULT_PAGE", "\uae30\ubcf8 \ud398\uc774\uc9c0"}, {"SAVE_LAYOUT_FAIL_MSG", "\ub808\uc774\uc544\uc6c3\uc744 \uc800\uc7a5\ud558\uc9c0 \ubabb\ud568"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "\ucee8\ud2b8\ub864 \ub9c9\ub300 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\uc9c0 \ubabb\ud568"}, {"ADD_COMPONENT_FAIL_MSG", "\uad6c\uc131 \uc694\uc18c\ub97c \ucd94\uac00\ud558\uc9c0 \ubabb\ud568"}, {"DELETE_COMPONENT_FAIL_MSG", "\uad6c\uc131 \uc694\uc18c\ub97c \uc0ad\uc81c\ud558\uc9c0 \ubabb\ud568"}, {"PAGE_ACTION_FAIL_MSG", "\ud398\uc774\uc9c0 \uc791\uc5c5\uc774 \uc2e4\ud328\ud568"}, {"RSS_FEED_FAIL_MSG", "RSS \ud53c\ub4dc\ub97c \uac00\uc838\uc624\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"EVENT_ALERT_FAIL_MSG", "GEM \uacbd\uace0\ub97c \uac00\uc838\uc624\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"APPLICATION_WIDGET_FAIL_MSG", "\uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc704\uc82f\uc744 \uac00\uc838\uc624\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "\ub300\uc0c1: \ub300\uc2dc\ubcf4\ub4dc\uc5d0 \ub300\ud574 \uad6c\uc131\ub41c \uacbd\uace0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NO_ALERT_FOUND_MSG", "\ud45c\uc2dc\ud560 \uacbd\uace0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CHANGE_DEFAULT_PAGE_MSG", "\uc774 \ud398\uc774\uc9c0\ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc124\uc815\ud558\uba74 \uc774\uc804 \uae30\ubcf8 \ud398\uc774\uc9c0 \uc124\uc815\uc774 \ubaa8\ub450 \ubcc0\uacbd\ub429\ub2c8\ub2e4. \uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DELETE_DEFAULT_PAGE_MSG", "\uae30\ubcf8 \ud398\uc774\uc9c0\ub294 \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ud398\uc774\uc9c0\ub85c \uc124\uc815\ud560 \ub2e4\ub978 \ud398\uc774\uc9c0\ub97c \uc120\ud0dd\ud55c \ud6c4 \uc774 \ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2ed\uc2dc\uc624."}, {"DELETE_PAGE_AND_COMPONENT_MSG", "\ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uba74 \ud574\ub2f9 \ud398\uc774\uc9c0\uc758 \ubaa8\ub4e0 \uad6c\uc131 \uc694\uc18c\ub3c4 \uc0ad\uc81c\ub429\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"VALID_URL_MSG", "URL\uc744 http://www.yourdomain.com \ud615\uc2dd\uc73c\ub85c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"CONFIRM_DELETE_COMPONENT_MSG", "\uc774 \uad6c\uc131 \uc694\uc18c\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"NO_COMPONENT_MSG", "\ud604\uc7ac \ud398\uc774\uc9c0\uc5d0 \ucd94\uac00\ub41c \uad6c\uc131 \uc694\uc18c\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LOAD_DATA_MSG", "\ub370\uc774\ud130 \ub85c\ub4dc \uc911..."}, {"COMPONENT_EXISTS_MSG", "\uad6c\uc131 \uc694\uc18c\uac00 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4. \uae30\uc874 \uad6c\uc131 \uc694\uc18c \uc138\ubd80 \uc815\ubcf4: "}, {"REFRESH_INTERVAL_RANGE", "\uc0c8\ub85c \uace0\uce68 \uac04\uaca9\uc774 \ubc94\uc704\ub97c \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uac12\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"ITEMS_RANGE", "\ud56d\ubaa9 \uc218\uac00 \ubc94\uc704\ub97c \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uc22b\uc790\ub97c \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"ALERT_SHOWTIME_RANGE", "\uacbd\uace0\uc5d0 \ub300\ud55c \ud45c\uc2dc \uc2dc\uac04\uc774 \ubc94\uc704\ub97c \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. \uc720\ud6a8\ud55c \uac12\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"NO_COMPONENT_SELECTED_ERR", ":\ud398\uc774\uc9c0\uc5d0 \uad6c\uc131 \uc694\uc18c\ub97c \ucd94\uac00\ud558\uae30 \uc804\uc5d0 \uad6c\uc131 \uc694\uc18c\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"ADDCOMPONENT_ERR_QUOTES", "\uad6c\uc131 \uc694\uc18c \uc81c\ubaa9\uc5d0\ub294 \uc791\uc740\ub530\uc634\ud45c('), \ud070\ub530\uc634\ud45c(\"), \ucf5c\ub860(:), \ubc31\ubd84\uc728 \uae30\ud638(%), \ud574\uc2dc(#), \ubb3c\uc74c\ud45c(?) \ubc0f \ud30c\uc774\ud504 \uae30\ud638(l)\uac00 \ud3ec\ud568\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ADDPAGE_ERR_QUOTES", "\ud398\uc774\uc9c0 \uc81c\ubaa9\uc5d0\ub294 \uc791\uc740\ub530\uc634\ud45c('), \ud070\ub530\uc634\ud45c(\"), \ucf5c\ub860(:), \ubc31\ubd84\uc728 \uae30\ud638(%), \ud574\uc2dc(#), \ubb3c\uc74c\ud45c(?) \ubc0f \ud30c\uc774\ud504 \uae30\ud638(l)\uac00 \ud3ec\ud568\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TIME_PERIOD", "\uae30\uac04"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "\ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uba74 \ud574\ub2f9 \ud398\uc774\uc9c0\uc758 \ubaa8\ub4e0 \uc704\uc82f\ub3c4 \uc0ad\uc81c\ub429\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"ADDWIDGET_ERR_QUOTES", "\uc704\uc82f \uc81c\ubaa9\uc5d0\ub294 \uc791\uc740\ub530\uc634\ud45c('), \ud070\ub530\uc634\ud45c(\"), \ucf5c\ub860(:), \ubc31\ubd84\uc728 \uae30\ud638(%), \ud574\uc2dc(#), \ubb3c\uc74c\ud45c(?) \ubc0f \ud30c\uc774\ud504 \uae30\ud638(l)\uac00 \ud3ec\ud568\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"TIME_PERIOD", "\uae30\uac04"}, {"COPY_WIDGET_VALIDATION_MSG", "\ubcf5\uc0ac\ud560 \ud398\uc774\uc9c0\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"COPY_WIDGET_HEADER", "\uc704\uc82f \ubcf5\uc0ac"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "\uac80\uc0c9 \ubb38\uc790\uc5f4\uc758 \ud0a4\uc6cc\ub4dc\uac00 \uc774 \uc704\uc82f\uc5d0 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc74c"}, {"IGNORED_INVALID_SEARCH_FILTER", "\uc798\ubabb\ub41c \uac80\uc0c9 \ud544\ud130\uac00 \ubb34\uc2dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "\ud558\ub098 \uc774\uc0c1\uc758 GMSVP \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc9c0\ub9ac\uc801 \uc704\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"NDA_NG_REPORTING_WIDGET_MSG", "\uc77c\uce58\ub418\ub294 \ub808\ucf54\ub4dc\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "\uacbd\uace0 \uba54\uc2dc\uc9c0"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\ub9c8\uc9c0\ub9c9\uc73c\ub85c \ubcf4\uace0\ub41c \uc2dc\uac04"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "\uacbd\uace0 \uc720\ud615"}, {"LOGS_WIDGET_COL_MESSAGE", "\uba54\uc2dc\uc9c0"}, {"LOGS_WIDGET_COL_DATE", "\ub0a0\uc9dc"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "\uc0ac\uc6a9\uc790 \uc138\ubd80 \uc815\ubcf4"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "\ub9c8\uc9c0\ub9c9 \uc561\uc138\uc2a4 \uc2dc\uac04"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "\uc124\uba85"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "\uc608\uc57d\ub41c \uc2dc\uac04(\ud604\uc9c0)"}, {"DSB_CONFIRM_DELETE_WIDGET", "\uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uba74 \uc704\uc82f\uc774 \uc0ad\uc81c\ub429\ub2c8\ub2e4. \uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DSB_SEARCH_DIALOG_MESG", "\uc774 \uc704\uc82f\uc740 \ub2e4\uc74c\uc5d0 \ub300\ud55c \uacb0\uacfc\uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. "}, {"DSB_SEARCH_DIALOG_HEADER", "\ucd94\uac00 \uac80\uc0c9 \uacb0\uacfc"}, {"DSB_CLEARHISTORY_MESG", "\ubaa8\ub4e0 \uac80\uc0c9 \uae30\ub85d\uc744 \uc9c0\uc6b0\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DSB_CLEARHISTORY_HDR", "\uac80\uc0c9 \uae30\ub85d"}, {"DSB_ADDNEW_WIDGET_LBL", "\uc0c8 \uc704\uc82f \ucd94\uac00: "}, {"DSB_GENSTTINGS_HDR", "\uc77c\ubc18 \uc124\uc815 "}, {"DSB_ASSOCPROD_HDR", "\uc5f0\uacb0\ub41c \uc81c\ud488 "}, {"DSB_SUBALERTS_HDR", "\ud3ec\ud568\ub41c\ud558\uc704 \uacbd\uace0 "}, {"DSB_WIDGETTITLE_LBL", "\uc81c\ubaa9: "}, {"DSB_NOFITEMS_LBL", "\ud56d\ubaa9 \uc218: "}, {"DSB_REFINT_LBL", "\uc0c8\ub85c \uace0\uce68 \uac04\uaca9: "}, {"DSB_ALERTSTRIGGERED_LBL", "\ub2e4\uc74c \ucd5c\uadfc \uae30\uac04 \ub0b4\uc5d0 \ud2b8\ub9ac\uac70\ub41c \uacbd\uace0 \ud45c\uc2dc: "}, {"DSB_NEWSUBALERTS_LBL", "\uc0c8 \ud558\uc704 \uacbd\uace0: "}, {"DSB_CUSTRSSURL_LBL", "\uc0ac\uc6a9\uc790 \uc9c0\uc815 RSS URL: "}, {"DSB_WRAPTEXT_LBL", "\ud14d\uc2a4\ud2b8 \uc904 \ubc14\uafc8: "}, {"DSB_ADDPAGE_HDR", "\uc0c8 \ud398\uc774\uc9c0 \ucd94\uac00 "}, {"DSB_ADDPAGE_LBL", "\ud398\uc774\uc9c0 \uc81c\ubaa9: "}, {"DSB_MAPLOCATIONDLG_HDR", "\uc704\uce58 \ucd94\uac00/\ud3b8\uc9d1"}, {"DSB_ADDRESS_LBL", "\uc8fc\uc18c: "}, {"DSB_GEOLOCATION_LBL", "\uc9c0\ub9ac \uc704\uce58: "}, {"DSB_DELPAGE_LBL", "\uc2dc\uc2a4\ud15c \uc0dd\uc131 \ud398\uc774\uc9c0\ub85c, \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DSB_DELPAGE_HDR", "\ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"DSB_DELPAGECONFIRM_MSG", "\ud398\uc774\uc9c0\ub97c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"CZ_YES", "\uc608"}, {"CZ_CERT_ISSUER", "\uc778\uc99d\uc11c \ubc1c\uae09\uc790"}, {"CZ_SUB_DN", "\uc8fc\uccb4 \uace0\uc720 \uc774\ub984"}, {"CZ_CERT_SN", "\uc778\uc99d\uc11c \uc77c\ub828 \ubc88\ud638"}, {"CZ_VALID_FROM", "\uc720\ud6a8 \uc2dc\uc791 \uc2dc\uc810"}, {"CZ_EXPIRES_ON", "\ub9cc\ub8cc \uc2dc\uc810"}, {"CZ_STATUS", "\uc0c1\ud0dc"}, {"CZ_REQ_GEN", "\uc694\uccad \uc0dd\uc131\ub428"}, {"CZ_SUB_KEY_ID", "\uc8fc\uccb4 \ud0a4 \uc2dd\ubcc4\uc790"}, {"CZ_CRL_STATUS", "CRL \uc0c1\ud0dc"}, {"CZ_CRL_EXPIRES_ON", "CRL \ub9cc\ub8cc \uc2dc\uc810"}, {"CZ_CRL_REQUIRED", "CRL \ud544\uc218 \uc5ec\ubd80"}, {"CZ_CRL_AUTO_URL", "CRL \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 URL"}, {"CZ_HEADER", "\uc778\uc99d\uc11c \ubc0f \uc778\uc99d\uc11c \uc694\uccad"}, {"CZ_NAME", "\uc774\ub984"}, {"CZ_TYPE", "\uc720\ud615"}, {"CZ_VALIDATED", "\uc720\ud6a8\uc131 \uac80\uc0ac\ub428"}, {"CZ_EXPIRES", "\ub9cc\ub8cc"}, {"CZ_DETAILS", "\uc138\ubd80 \uc815\ubcf4"}, {"CZ_CONFIGURE", "\uad6c\uc131"}, {"CZ_DELETE_CERT", "\uc774 \uc778\uc99d\uc11c \uc0ad\uc81c"}, {"CZ_CANT_DELETE_CERT", "\uc774 \uc778\uc99d\uc11c\ub294 \uc0ad\uc81c\uac00 \ubd88\uac00\ub2a5\ud55c \uae30\ubcf8 \uc81c\uacf5 \uc778\uc99d\uc11c\uc785\ub2c8\ub2e4."}, {"CZ_EMAIL_CERT", "\uc774 \uc778\uc99d\uc11c\ub97c \uc804\uc790 \uba54\uc77c\ub85c \ubcf4\ub0b4\uae30"}, {"CZ_CANT_EMAIL_CERT", "\uac00\uc838\uc628 \ub85c\uceec \uc778\uc99d\uc11c\uc640 \uc11c\uba85 \uc694\uccad\ub9cc \uc804\uc790 \uba54\uc77c\ub85c \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"CZ_IMPORT_CERT_CRL", "\uc778\uc99d\uc11c \ud574\uc9c0 \ubaa9\ub85d \uac00\uc838\uc624\uae30"}, {"CZ_UPLOAD_SIGNED_CERT", "\uc11c\uba85\ud55c \uc778\uc99d\uc11c \uc5c5\ub85c\ub4dc"}, {"CZ_CERT_SEARCH", "\uc778\uc99d\uc11c \uac80\uc0c9"}, {"CZ_CERT_SELECTED", "\uc778\uc99d\uc11c\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"CZ_SURE", "\uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"CZ_CERTS_SELECTED", "\ub2e4\uc74c \uc778\uc99d\uc11c\ub97c \uc0ad\uc81c\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"CZ_PLZ_SELECT", "\uc0ad\uc81c\ud560 \uc778\uc99d\uc11c\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CZ_VIEW_STYLE", "\uc778\uc99d\uc11c \ubcf4\uae30 \uc2a4\ud0c0\uc77c"}, {"CZ_ALL_CERTS", "\ubaa8\ub4e0 \uc778\uc99d\uc11c"}, {"CZ_IMPORT_CERTS", "\uac00\uc838\uc628 \uc778\uc99d\uc11c \ubc0f \uc694\uccad"}, {"CZ_BUILTIN_CERTS", "\uae30\ubcf8 \uc81c\uacf5 \uc778\uc99d\uc11c"}, {"CZ_INCLUDE_EXPIRED_CERTS", "\ub9cc\ub8cc\ub41c, \uae30\ubcf8 \uc81c\uacf5 \uc778\uc99d\uc11c \ud3ec\ud568"}, {"CZ_IMPORT", "\uac00\uc838\uc624\uae30..."}, {"CZ_NEW_REQ", "\uc0c8 \uc11c\uba85 \uc694\uccad..."}, {"CZ_DEL_CERTS", "\uc778\uc99d\uc11c \uc0ad\uc81c"}, {"CZ_REQUIRE_CERT", "\uac00\uc838\uc624\uae30\ub97c \uc2e4\ud589\ud558\ub824\uba74 \uc778\uc99d\uc11c \uc774\ub984\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_IMPORT_REQUIRE_FILE", "\uac00\uc838\uc624\uae30\ub97c \uc2e4\ud589\ud558\ub824\uba74 \uc778\uc99d\uc11c \ud30c\uc77c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_NO_DOT", "\uc778\uc99d\uc11c \uc774\ub984\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub984\uc5d0\ub294 '.'\uac00 \ud3ec\ud568\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CZ_IMPORT_REQUIRE_CMP", "\uac00\uc838\uc624\uae30\ub97c \uc2e4\ud589\ud558\ub824\uba74 \uc778\uc99d\uc11c \uad00\ub9ac \uc554\ud638\uac00 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_IMPORT_CERT", "\uc778\uc99d\uc11c \uac00\uc838\uc624\uae30"}, {"CZ_IMPORT_LOCAL", "PKCS\uc5d0\uc11c \uac1c\uc778 \ud0a4\ub85c \ub85c\uceec \ucd5c\uc885 \uc0ac\uc6a9\uc790 \uc778\uc99d\uc11c \uac00\uc838\uc624\uae30#12 (.p12 or .pfx) encoded file"}, {"CZ_IMPORT_CA", "PKCS\uc5d0\uc11c CA \uc778\uc99d\uc11c \uac00\uc838\uc624\uae30#7 (.p7b), PEM (.pem) or DER (.der or .cer) encoded file"}, {"CZ_CERT_NAME", "\uc778\uc99d\uc11c \uc774\ub984"}, {"CZ_CMP", "\uc778\uc99d\uc11c \uad00\ub9ac \uc554\ud638"}, {"CZ_SEL_FILE", "\uac00\uc838\uc62c \ud30c\uc77c\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_FILE", "\uac00\uc838\uc62c \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_UPLOAD_CERT", "\uc778\uc99d\uc11c \uc5c5\ub85c\ub4dc"}, {"CZ_UPLOAD_SIGN_CERT", "\uc11c\uba85 \uc694\uccad\uc744 \uc704\ud574 \uc11c\uba85\ud55c \uc778\uc99d\uc11c \uc5c5\ub85c\ub4dc"}, {"CZ_SEL_UPLOAD_FILE", "\uc5c5\ub85c\ub4dc\ud560 \ud30c\uc77c\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CZ_FILE_FORMAT", "\ud30c\uc77c\uc774 PEM(.pem) \ub610\ub294 DER(.der \ub610\ub294 .cer) \uc778\ucf54\ub529 \ud30c\uc77c\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"CZ_EXPORT_CERT", "\uc778\uc99d\uc11c \ub0b4\ubcf4\ub0b4\uae30"}, {"CZ_EXPORT_CERT_REQ", "\uc778\uc99d\uc11c \ub0b4\ubcf4\ub0b4\uae30 \uc694\uccad"}, {"CZ_CERT_EMAIL_CONTENT", "PKCS#10 Certification Request has been generated and is available for email. Save this file on your local disk for submission to a Registration or Certificate Authority. The file will be saved in PEM Certificate Request format, by default as"}, {"CZ_CHANGE_FILE_NAME", "(\ud544\uc694\ud55c \uacbd\uc6b0 \ub2e4\uc6b4\ub85c\ub4dc \uc2dc \ud30c\uc77c \uc774\ub984\uc774 \ubcc0\uacbd\ub420 \uc218 \uc788\uc74c)"}, {"CZ_SPECIFY_URL", "CRL URL\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_CRL_FILE", "\uac00\uc838\uc62c CRL \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_INVALID_FILE", "\uc120\ud0dd\ud55c \ud30c\uc77c \ud615\uc2dd\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CZ_SPECIFY_VALID_LC", "\uc720\ud6a8\ud55c \ub85c\uceec \uc778\uc99d\uc11c \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_VALID_CA", "\uc720\ud6a8\ud55c CA \uc778\uc99d\uc11c \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_VALID_CRL", "\uc720\ud6a8\ud55c CRL \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SPECIFY_VALID_SIGNED", "\uc720\ud6a8\ud55c \uc11c\uba85\ub41c \uc778\uc99d\uc11c \ud30c\uc77c\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"CZ_IMPORT_CRL", "CRL \uac00\uc838\uc624\uae30"}, {"CZ_IMPORT_CRL_FULL", "\uc778\uc99d\uc11c \ud574\uc9c0 \ubaa9\ub85d \uac00\uc838\uc624\uae30"}, {"CZ_IMPORT_CRL_FILE", "PEM(.pem)\uc774\ub098 DER(.der \ub610\ub294 .crl) \uc778\ucf54\ub529 \ud30c\uc77c\uc5d0\uc11c CRL \uc9c1\uc811 \uac00\uc838\uc624\uae30"}, {"CZ_SEL_CRL_FILE", "\uac00\uc838\uc62c CRL \ud30c\uc77c \uc120\ud0dd"}, {"CZ_AUTO_IMPORT_CRL", "\uc815\uae30\uc801\uc73c\ub85c HTTP\ub97c \ud1b5\ud55c CRL \uc790\ub3d9 \uac00\uc838\uc624\uae30"}, {"CZ_CRL_LOC", "CRL \uc704\uce58 \uc785\ub825(URL)"}, {"CZ_INVALIDATE_CERTS", "CRL \uac00\uc838\uc624\uae30 \ub610\ub294 \ucc98\ub9ac \uc2e4\ud328 \uc2dc\uc5d0 \uc778\uc99d\uc11c \ubc0f \ubcf4\uc548 \uc5f0\uacb0 \ubb34\ud6a8\ud654"}, {"CZ_CMP_REQUIRE", "\uc778\uc99d\uc11c\ub97c \ub0b4\ubcf4\ub0b4\ub824\uba74 \uc778\uc99d\uc11c \uad00\ub9ac \uc554\ud638\uac00 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_CERT_NAME_REQUIRE", "PKCS10\uc744 \uc0dd\uc131\ud558\ub824\uba74 \uc778\uc99d\uc11c \uc774\ub984\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_CERT_NAME_IN_USE", "\uc778\uc99d\uc11c \uc774\ub984\uc774 \uc774\ubbf8 \uc0ac\uc6a9 \uc911\uc785\ub2c8\ub2e4. \ub2e4\ub978 \uc774\ub984\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"CZ_SUB_DN_REQUIRE", "PKCS10\uc744 \uc0dd\uc131\ud558\ub824\uba74 \ud558\ub098 \uc774\uc0c1\uc758 \uc8fc\uccb4 \uc774\ub984 \ud2b9\uc131\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."}, {"CZ_CN_TWO_CHARS", "\uad6d\uac00 \uc774\ub984\uc740 2\uc790\uc5ec\uc57c \ud569\ub2c8\ub2e4."}, {"CZ_DOMAIN_INVALID", "\uc8fc\uccb4 \ub300\uccb4 \uc774\ub984\uc5d0\uc11c \ub3c4\uba54\uc778 \uc774\ub984\uc774 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CZ_IP_INVALID", "\uc8fc\uccb4 \ub300\uccb4 \uc774\ub984\uc5d0\uc11c IP \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CZ_EMAIL_INVALID", "\uc8fc\uccb4 \ub300\uccb4 \uc774\ub984\uc5d0\uc11c \uc804\uc790 \uba54\uc77c \uc8fc\uc18c\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"CZ_CERT_REQ", "\uc778\uc99d\uc11c \uc11c\uba85 \uc694\uccad"}, {"CZ_GEN_CERT_REQ", "\uc778\uc99d\uc11c \uc11c\uba85 \uc694\uccad \uc0dd\uc131"}, {"CZ_CERT_ALIAS", "\uc778\uc99d\uc11c \ubcc4\uce6d"}, {"CZ_COUNTRY", "\uad6d\uac00"}, {"CZ_STATE", "\uc2dc/\ub3c4"}, {"CZ_LOC", "\uad6c \ub610\ub294 \uc2dc"}, {"CZ_COMPANY", "\ud68c\uc0ac \ub610\ub294 \uc870\uc9c1"}, {"CZ_LOC_CITY", "\uad6c/\uad70/\uc2dc"}, {"CZ_DEPT", "\ubd80\uc11c"}, {"CZ_GROUP", "\uadf8\ub8f9"}, {"CZ_TEAM", "\ud300"}, {"CZ_CNAME", "\uc77c\ubc18 \uc774\ub984"}, {"CZ_SN", "\uc77c\ub828 \ubc88\ud638"}, {"CZ_EMAIL", "\uc804\uc790 \uba54\uc77c \uc8fc\uc18c"}, {"CZ_SUB_ALT_NAME", "\uc8fc\uccb4 \ub300\uccb4 \uc774\ub984(\uc635\uc158)"}, {"CZ_DOMAIN_NAME", "\ub3c4\uba54\uc778 \uc774\ub984"}, {"CZ_IPV4", "IPv4 \uc8fc\uc18c"}, {"CZ_SUB_KEY_TYPE", "\uc8fc\uccb4 \ud0a4 \uc720\ud615"}, {"CZ_SIG_ALGORITHM", "\uc11c\uba85 \uc54c\uace0\ub9ac\uc998"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "\uc8fc\uccb4 \ud0a4 \ud06c\uae30"}, {"CZ_NO_CERTS", "\uc778\uc99d\uc11c \uc5c6\uc74c"}, {"IMPORT", "\uac00\uc838\uc624\uae30"}, {"CZ_SCEP_CONFIG", "SCEP \uad6c\uc131"}, {"CZ_CSR_LIST", "CSR \ubaa9\ub85d"}, {"CZ_NO_CSR", "CSR \uc5c6\uc74c"}, {"CZ_CHALLENGE_PWD", "\ucc4c\ub9b0\uc9c0 \uc554\ud638(\uc635\uc158)"}, {"CZ_CA_URL", "CA URL"}, {"CZ_REQ_COUNT", "\uc694\uccad \uc218"}, {"CZ_POLL_INTERVAL", "\ud3f4\ub9c1 \uac04\uaca9(\ucd08)"}, {"CZ_POLL_TIME", "\ucd5c\ub300 \ud3f4\ub9c1 \uc2dc\uac04(\ucd08)"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA URL\uc740 \ube44\uc5b4 \uc788\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"CZ_GEN_CSR", "\uc0ac\uc6a9 \uac00\ub2a5\ud55c CSR\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ud558\ub098 \uc774\uc0c1\uc758 CSR\uc744 \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624."}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "\uc120\ud0dd\ud55c \ud544\ud130\uc758 \ubaa8\ub4e0 \uc124\uc815\uc774 \uc120\ud0dd\ud55c \uadf8\ub8f9 \ub178\ub4dc \uc544\ub798\uc758 \ubaa8\ub4e0 \uc7a5\uce58\uc5d0 \ud478\uc2dc\ub429\ub2c8\ub2e4."}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "\uc120\ud0dd\ud55c \ud544\ud130\uc758 \ubaa8\ub4e0 \uc124\uc815\uc740 \uc120\ud0dd\ud55c \uc7a5\uce58\uc758 \uc0c1\uc704 \ub178\ub4dc\uc5d0\uc11c \uc0c1\uc18d\ub429\ub2c8\ub2e4."}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "\uc120\ud0dd\ud55c \ud544\ud130\uc758 \ubaa8\ub4e0 \uc124\uc815\uc774 \uc120\ud0dd\ud55c \uadf8\ub8f9 \ub178\ub4dc\uc5d0\uc11c \uc0c1\uc704 \ub178\ub4dc\ub85c \ud478\uc2dc\ub429\ub2c8\ub2e4.<br>\uc0c1\uc704 \ub178\ub4dc\uc758 \ubaa8\ub4e0 \uc7a5\uce58\uc5d0 \uc124\uc815\uc744 \uc801\uc6a9\ud558\ub824\uba74(\uc120\ud0dd\ud55c \ub178\ub4dc \ubc0f \ud574\ub2f9 \ud558\uc704 \ud56d\ubaa9 \uc81c\uc678) [\ubbf8\ub9ac \ubcf4\uae30] \ud654\uba74\uc5d0\uc11c \uc801\uc808\ud55c \ud56d\ubaa9\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "\uc120\ud0dd\ud55c \ud544\ud130\uc758 \ubaa8\ub4e0 \uc124\uc815\uc774 \uc120\ud0dd\ud55c \uc7a5\uce58\uc5d0\uc11c \uc0c1\uc704 \ub178\ub4dc\ub85c \ud478\uc2dc\ub429\ub2c8\ub2e4.<br>\uc0c1\uc704 \ub178\ub4dc\uc758 \ubaa8\ub4e0 \uc7a5\uce58\uc5d0 \uc124\uc815\uc744 \uc801\uc6a9\ud558\ub824\uba74(\uc120\ud0dd\ud55c \uc7a5\uce58 \uc81c\uc678) [\ubbf8\ub9ac \ubcf4\uae30] \ud654\uba74\uc5d0\uc11c \uc801\uc808\ud55c \ud56d\ubaa9\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"WS_URI_HEADER", "\uacf5\uc6a9 URI"}, {"WS_URI_INSTRUCTIONS", "\uc774 \ubc30\ud3ec\uc758 \uacf5\uc6a9 \uc11c\ubc84 \uc774\ub984\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624.  \uc774 \uc774\ub984\uc740 \uc774 \uc11c\ubc84\uc758 \uc6f9 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\uba70 \ud3ec\ud568\ub41c \uad50\ucc28 \ub9c1\ud06c\uc5d0 \ud3ec\ud568\ub429\ub2c8\ub2e4."}, {"WS_URI_NOTE", "\ucc38\uace0: \uacf5\uc6a9 \uc11c\ubc84 \ud3ec\ud2b8\ub294 \uacf5\uc6a9 \ub3c4\uba54\uc778\uc5d0\uc11c GMS \uc6f9 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. GMS\uac00 \uc6f9 \uc11c\ube44\uc2a4\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ud558\ub294 \ud3ec\ud2b8\ub97c \uc218\uc815\ud558\ub824\uba74 [System Interface(\uc2dc\uc2a4\ud15c \uc778\ud130\ud398\uc774\uc2a4)]/[Deployment(\ubc30\ud3ec)]/[\uc124\uc815]\uc73c\ub85c \uc774\ub3d9\ud558\uc2ed\uc2dc\uc624."}, {"WS_DEPLOYMENT_HEADER", "GMS \ubc30\ud3ec"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "\uc6f9 \uc11c\ube44\uc2a4\ub97c \uad6c\uc131\ud560 \ubc30\ud3ec\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"WS_DEPLOYMENT_ERROR", "\ud604\uc7ac \ub77c\uc774\uc120\uc2a4\uac00 \uc788\ub294 \ubc30\ud3ec \uc911 \ud65c\uc131 \uc0c1\ud0dc\uc778 \ubc30\ud3ec\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"WS_STATUS_HEADER", "\uc6f9 \uc11c\ube44\uc2a4"}, {"WS_SERVICES_ERROR", "\uc774 \ubc30\ud3ec\uc5d0 \ub300\ud574 \uc6f9 \uc11c\ube44\uc2a4\uac00 \uc5c6\uc74c"}, {"WS_DEPLOYMENTS_EMPTY", "\ubc30\ud3ec \ubaa9\ub85d\uc744 \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.  GMSVP\uc758 \uc774 \uc778\uc2a4\ud134\uc2a4\ub97c \ub4f1\ub85d\ud558\uc2ed\uc2dc\uc624."}, {"WS_DISTRIBUTED_HEADER", "\ubd84\uc0b0 \uc778\uc2a4\ud134\uc2a4"}, {"WS_DISTRIBUTED_EMPTY", "\uc774 \uc11c\ubc84\uc5d0 \ub300\ud574 \uad6c\uc131\ub41c \ubd84\uc0b0 \uc778\uc2a4\ud134\uc2a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"HM_APPLY_TEMPLATE_TASK_DESC", "\ud15c\ud50c\ub9bf \uc801\uc6a9: "}, {"HM_APPLY_RECORDING_TASK_DESC", "\uae30\ub85d \uc801\uc6a9: "}, {"LM_CONFIRM_DELETE_RULE", "\uc120\ud0dd\ud55c \uaddc\uce59\uc744 \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LM_SUCCESS_DELETE_RULE", "\uaddc\uce59 \uc0ad\uc81c \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_FAILURE_DELETE_RULE", "\uc120\ud0dd\ud55c \uaddc\uce59\uc744 \uc0ad\uc81c\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_SUCCESS_UPDATE_RULE", "\uaddc\uce59 \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_FAILURE_UPDATE_RULE", "\uaddc\uce59 \uc5c5\ub370\uc774\ud2b8\ub97c \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_DUPLICATE_STMT_NAME", "\uc774\ub984\uc774 \uac19\uc740 \uaddc\uce59\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4.\\n\uaddc\uce59\uc5d0 \ub300\ud574 \uace0\uc720\ud55c \uc774\ub984\uc744 \uc785\ub825\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_DESTINATION_EMPTY", "\ub300\uc0c1\uc774 \ube44\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\\n\uc720\ud6a8\ud55c \ud56d\ubaa9\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "\ub300\uc0c1\uc740 256\uc790\ub97c \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\\n\uc720\ud6a8\ud55c \ud56d\ubaa9\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "\ub300\uc0c1 \uac12\uc740 \uc120\ud0dd\ub41c \uc720\ud615\uc5d0 \ub300\ud574 \uc9c0\uc815\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\uc720\ud6a8\ud55c \ud56d\ubaa9\uc744 \uc9c0\uc815\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "\uc77c\uc815\uc740 \ubaa8\ub4e0 \ub300\uc0c1\uc5d0 \ud560\ub2f9\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\uc720\ud6a8\ud55c \uc77c\uc815 \ub610\ub294 \uc77c\uc815 \uadf8\ub8f9\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "\uc774 \ud398\uc774\uc9c0\uc5d0\uc11c \uc120\ud0dd\ud55c \ub300\uc0c1\uc758 \ub3c4\uba54\uc778\uc774\\n\uc774\uc804 \ud398\uc774\uc9c0\uc5d0\uc11c \uc120\ud0dd\ud55c \uc2ec\uac01\ub3c4\uc758 \ub3c4\uba54\uc778\uacfc \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\\n\\n\uac1c\uccb4\ub294 \uac19\uc740 \ub3c4\uba54\uc778\uc5d0\uc11c \uc120\ud0dd\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\uc120\ud0dd\ud55c \uc2ec\uac01\ub3c4\uac00 \uc798\ubabb\ub41c \uacbd\uc6b0 \ub4a4\ub85c \uc774\ub3d9\ud55c \ud6c4 \ud574\ub2f9 \ub3c4\uba54\uc778\uc5d0\uc11c \uc2ec\uac01\ub3c4\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624.\\n\uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc2ec\uac01\ub3c4\uc640 \uc77c\uce58\ud558\ub294 \ub3c4\uba54\uc778\uc5d0\uc11c \ub300\uc0c1\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "\uc774 \ud398\uc774\uc9c0\uc5d0\uc11c \uc120\ud0dd\ud55c \uc77c\uc815\uc758 \ub3c4\uba54\uc778\uc774\\n\uc774\uc804 \ud398\uc774\uc9c0\uc5d0\uc11c \uc120\ud0dd\ud55c \uc2ec\uac01\ub3c4\uc758 \ub3c4\uba54\uc778\uacfc \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\\n\\n\uac1c\uccb4\ub294 \uac19\uc740 \ub3c4\uba54\uc778\uc5d0\uc11c \uc120\ud0dd\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n\uc120\ud0dd\ud55c \uc2ec\uac01\ub3c4\uac00 \uc798\ubabb\ub41c \uacbd\uc6b0 \ub4a4\ub85c \uc774\ub3d9\ud55c \ud6c4 \ud574\ub2f9 \ub3c4\uba54\uc778\uc5d0\uc11c \uc2ec\uac01\ub3c4\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624.\\n\uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc2ec\uac01\ub3c4\uc640 \uc77c\uce58\ud558\ub294 \ub3c4\uba54\uc778\uc5d0\uc11c \uc77c\uc815\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "\ucee8\ud2b8\ub864 \ub9c9\ub300 \uc0c1\ud0dc \uc124\uc815\uc744 \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "\uc790\ub3d9 \uc2a4\ud06c\ub864 \uc0c1\ud0dc \uc124\uc815\uc744 \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_READER_START_SUCCESS", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\uac00 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_READER_START_FAILURE", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc124\uc815 \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\\n \ucc38\uace0: \uc9c0\uc815\ub41c \ud3ec\ud2b8 \ubc0f \uc804\ub2ec \uc8fc\uc18c\ub294 \ucf58\uc194/\uc6f9 \uc11c\ubc84\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"LM_READER_STOP_SUCCESS", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\uac00 \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_READER_STOP_FAILURE", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\ub97c \uc911\uc9c0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LM_EC_DISABLED", "\ud604\uc7ac Syslog \uc804\ub2ec\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.<br>\ubaa8\ub2c8\ud130\ub9c1\ud558\ub824\uba74 Syslog\ub97c \uc774\ubca4\ud2b8 \uad00\ub9ac\uc790 \uc11c\ube44\uc2a4\uc5d0 \uc804\ub2ec\ud574\uc57c \ud569\ub2c8\ub2e4.<br>\ubaa8\ub2c8\ud130\ub9c1\uc744 \uc704\ud574 Syslog \uc804\ub2ec\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \uc704\uc758 \ucee8\ud2b8\ub864 \ub9c9\ub300\uc5d0\uc11c [\uc124\uc815]\uc744 \ud074\ub9ad\ud558\uc2ed\uc2dc\uc624."}, {"LM_READER_NO_ALERT_MSG", "\ud310\ub3c5\uae30\uc5d0\uc11c \uc218\uc2e0\ub41c \uc0c8 \uacbd\uace0\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.<br>\ucc38\uace0: \ubb38\uc81c\uac00 \uacc4\uc18d\ub418\uba74 [Monitor Settings(\ubaa8\ub2c8\ud130\ub9c1 \uc124\uc815)] \ubc0f \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc758 syslog \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"LM_READER_STOPPED_MSG", "\ud310\ub3c5\uae30\uac00 \ud604\uc7ac \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4.<br>\uc704\uc758 \ucee8\ud2b8\ub864 \ub9c9\ub300\uc5d0\uc11c [\uc2dc\uc791] \ub2e8\ucd94\ub97c \ud074\ub9ad\ud558\uc5ec \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624."}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "\uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4/\uc7a5\uce58\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.<br>\uc774 \uc7a5\uce58 \uc911 \ud558\ub098\uc5d0\uc11c \uc804\ub2ec\ub41c syslog\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub824\uba74 \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2ed\uc2dc\uc624."}, {"LM_READER_ERROR_MSG", "\uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.<br>\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30 \uc218\uc9d1\uc744 \ucc98\ub9ac\ud558\ub294 \ub3d9\uc548 \uc608\uc678\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_READER_SOCKET_ERROR_MSG", "\uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.<br>\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130\ub9c1 \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud558\ub294 \ub3d9\uc548 \uc608\uc678\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.<br>\uc608\uc678 \uc138\ubd80 \uc815\ubcf4: "}, {"LM_FAILURE_UPDATE_SETTINGS", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130 \uc124\uc815 \uc5c5\ub370\uc774\ud2b8\ub97c \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_SUCCESS_UPDATE_SETTINGS", "\ub77c\uc774\ube0c \ubaa8\ub2c8\ud130 \uc124\uc815\uc744 \uc5c5\ub370\uc774\ud2b8\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_WARN_ENABLE_EC", "\uc774\ubca4\ud2b8 \uad00\ub9ac\uc790\ub294 Syslog \uc218\uc9d1\uae30\uc5d0\uc11c \uc804\ub2ec\ub41c syslog\ub97c \ubaa8\ub2c8\ud130\ub9c1\uc5d0 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 syslog\ub294 \uc815\uc758\ub41c \uaddc\uce59\uc744 \ubc14\ud0d5\uc73c\ub85c \uc774\ubca4\ud2b8\ub97c \uc2dd\ubcc4\ud558\uae30 \uc704\ud574 \uc5d4\uc9c4\uc5d0 \uc804\uc1a1\ub429\ub2c8\ub2e4.\\n\\n\ucc38\uace0: \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \ubc30\ud3ec \uc704\uce58\uc5d0 \uc788\ub294 \ubaa8\ub4e0 Syslog \uc218\uc9d1\uae30 \uc11c\ube44\uc2a4\uac00 \uc218\uc2e0\ud55c syslog\ub97c \uc911\uc559 \uc774\ubca4\ud2b8 \uad00\ub9ac\uc790 \uc11c\ube44\uc2a4\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc774\ubca4\ud2b8 \ucc98\ub9ac\ub97c \uc704\ud574 \ubaa8\ub4e0 \uba54\uc2dc\uc9c0\uac00 Syslog \uc218\uc9d1\uae30\uc5d0\uc11c \ubcf5\uc81c\ub418\ubbc0\ub85c \ub124\ud2b8\uc6cc\ud06c \uac04 syslog \ud2b8\ub798\ud53d\uc774 \uc99d\uac00\ud569\ub2c8\ub2e4."}, {"LM_STMT_CHANGED_MSG_1", "\uc120\ud0dd\ud55c \uaddc\uce59\uc744 \ubcc0\uacbd\ud588\uc2b5\ub2c8\ub2e4"}, {"LM_STMT_CHANGED_MSG_2", ".\\n\uc774\uc804 \ud654\uba74(\uaddc\uce59 \ubaa9\ub85d \ud398\uc774\uc9c0)\uc73c\ub85c \uc774\ub3d9\ud558\uba74 \ubcc0\uacbd \ub0b4\uc6a9\uc774 \uc190\uc2e4\ub429\ub2c8\ub2e4.\\n[\ud655\uc778]\uc744 \ub20c\ub7ec [\uaddc\uce59 \ubaa9\ub85d] \ud398\uc774\uc9c0\ub85c \uc774\ub3d9\ud558\uac70\ub098 [\ucde8\uc18c]\ub97c \ub20c\ub7ec \uc774 \uaddc\uce59\uc744 \uacc4\uc18d\ud574\uc11c \ud3b8\uc9d1\ud558\uc2ed\uc2dc\uc624."}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "\ub3c4\ud0b9 \uc0c1\ud0dc \uc5c5\ub370\uc774\ud2b8\ub97c \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "\uc774 \ud654\uba74\uc5d0\uc11c \uc5c5\ub370\uc774\ud2b8 \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"LM_DELETE_STMT_EMPTY", "\uc0ad\uc81c\ub97c \uc704\ud55c \ud558\ub098 \uc774\uc0c1\uc758 \uaddc\uce59\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_STMT_RULE_EMPTY", "\uaddc\uce59 \uc720\ud615\uc744 \uc120\ud0dd\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.\\n\uaddc\uce59 \uc720\ud615\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_STMT_RULE_DUPLICATE", "\ub3d9\uc77c\ud55c \uaddc\uce59 \uc720\ud615 \ubc0f \ud3b8\uc9d1\uae30 \uc18d\uc131\uc744 \uac00\uc9c4 \uaddc\uce59\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4.\\n\uc774 \uaddc\uce59\uc5d0 \ub300\ud55c \uace0\uc720\ud55c \uaddc\uce59 \uc18d\uc131\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "\ud310\ub3c5\uae30\uc5d0 \ub300\ud55c \uc804\ub2ec \ud3ec\ud2b8\uac00 \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\\n\ud310\ub3c5\uae30\ub97c \ub2e4\uc2dc \uc2dc\uc791\ud558\uae30\uae4c\uc9c0 \uba87 \ucd08 \uc815\ub3c4 \uc18c\uc694\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"LM_NO_RULE_EDITABLE", "\uc120\ud0dd\ud55c \uadf8\ub8f9 \ub0b4 \ud3b8\uc9d1 \uac00\ub2a5\ud55c \uaddc\uce59 \uc720\ud615\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.\n\ub2e4\ub978 \uadf8\ub8f9/\uaddc\uce59 \uc720\ud615\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_DISABLE_STMT_EMPTY", "\uc0ac\uc6a9/\uc0ac\uc6a9 \uc548 \ud568 \uc791\uc5c5\uc744 \uc704\ud55c \ud558\ub098 \uc774\uc0c1\uc758 \uaddc\uce59\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_SUCCESS_DISABLE_RULE", "\uaddc\uce59 \uc0ac\uc6a9/\uc0ac\uc6a9 \uc548 \ud568 \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"LM_FAILURE_DISABLE_RULE", "\uc120\ud0dd\ud55c \uaddc\uce59\uc744 \uc0ac\uc6a9/\uc0ac\uc6a9 \uc548 \ud568 \uc124\uc815\uc744 \ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"LM_EDIT_RULE_MSG_1", "\ub2e4\uc74c \uaddc\uce59\uc744 \ud3b8\uc9d1\ud558\ub3c4\ub85d \uc120\ud0dd\ud588\uc2b5\ub2c8\ub2e4.\\n"}, {"LM_EDIT_RULE_MSG_2", "\\n\uc120\ud0dd\ud55c \ubaa9\ub85d\uc5d0 \ud3b8\uc9d1\ud560 \uc218 \uc5c6\ub294 \uc77c\ubd80 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\uacc4\uc18d\ud558\ub824\uba74 \ub2e4\ub978 \uaddc\uce59\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_EDIT_RULE_MSG_3", "\\n\uc120\ud0dd\ud55c \ubaa9\ub85d\uc5d0 *\uac00 \ud45c\uc2dc\ub41c, \ud3b8\uc9d1\ud560 \uc218 \uc5c6\ub294 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\ub098\uba38\uc9c0 \uaddc\uce59\uc744 \uacc4\uc18d\ud574\uc11c \ud3b8\uc9d1\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LM_DELETE_RULE_MSG_1", "\ub2e4\uc74c \uaddc\uce59\uc744 \uc0ad\uc81c\ud558\uae30 \uc704\ud574 \uc120\ud0dd\ud568:\\n"}, {"LM_DELETE_RULE_MSG_2", "\\n\uc120\ud0dd\ud55c \ubaa9\ub85d\uc5d0 \uc0ad\uc81c\ud560 \uc218 \uc5c6\ub294 \uc77c\ubd80 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\uacc4\uc18d\ud558\ub824\uba74 \ub2e4\ub978 \uaddc\uce59\uc744 \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"LM_DELETE_RULE_MSG_3", "\\n\uc120\ud0dd\ud55c \ubaa9\ub85d\uc5d0 *\uac00 \ud45c\uc2dc\ub41c, \uc0ad\uc81c\ud560 \uc218 \uc5c6\ub294 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\ub098\uba38\uc9c0 \uaddc\uce59\uc744 \uacc4\uc18d\ud574\uc11c \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LM_DELETE_RULE_MSG_4", "\\n\uacc4\uc18d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"MASKED_LIVEMONITOR_MESSAGE", "\uacbd\uace0 \uba54\uc2dc\uc9c0\uac00 \uac15\uc81c \uc801\uc6a9\ub41c \uac1c\uc778 \uc815\ubcf4 \ucde8\uae09 \ubc29\uce68\uc744 \ubc14\ud0d5\uc73c\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c8\uc2a4\ud0b9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"MASKED_ADDITIONAL_INFORMATION", "\ucd94\uac00 \uc815\ubcf4\uac00 \uac15\uc81c \uc801\uc6a9\ub41c \uac1c\uc778 \uc815\ubcf4 \ucde8\uae09 \ubc29\uce68\uc744 \ubc14\ud0d5\uc73c\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c8\uc2a4\ud0b9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DSB_NONENGFW_ALERT_TITLE", "\ud38c\uc6e8\uc5b4 \ubc84\uc804 \uacbd\uace0!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "\uc774 GMS\uc5d0\uc11c \uc601\uc5b4 \uc774\uc678\uc758 \ud38c\uc6e8\uc5b4\ub97c \uc2e4\ud589\ud558\ub294 SonicOS \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub97c \uad00\ub9ac\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4."}, {"DSB_NONENGFW_ALERT_MSGPART2", "\uc774 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\uc11c \uc601\uc5b4 \uc774\uc678\uc758 \ubb38\uc790\ub85c \uc815\uc758\ub41c \uac1c\uccb4\uc640 \uc815\ucc45\uc774 GMS UI\uc5d0\uc11c \uc81c\ub300\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac1c\uccb4 \ubc0f \uc815\ucc45\uc744 \uc218\uc815\ud558\uace0 \uc774\ub7ec\ud55c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\ub85c \ud478\uc2dc\ud558\uba74 \uc608\uc0c1\uce58 \ubabb\ud55c \uacb0\uacfc\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_STARTED", "Syslog \ud310\ub3c5\uae30(\ub77c\uc774\ube0c Syslog \ubaa8\ub2c8\ud130\ub9c1\uc6a9)\uac00 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_START_FAILED", "Syslog \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. Syslog \uc804\ub2ec \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\u00a0\u00a0(\ucc38\uace0: \uc9c0\uc815\ub41c \ud3ec\ud2b8 \ubc0f \uc804\ub2ec \uc8fc\uc18c\ub294 \ucf58\uc194/\uc6f9 \uc11c\ubc84\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.)"}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog \ud310\ub3c5\uae30(\ub77c\uc774\ube0c Syslog \ubaa8\ub2c8\ud130\ub9c1\uc6a9)\uac00 \uc774\ubbf8 \uc2e4\ud589 \uc911\uc785\ub2c8\ub2e4. \ubcc0\uacbd \ub0b4\uc6a9\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_STOPPED", "Syslog \ud310\ub3c5\uae30(\ub77c\uc774\ube0c Syslog \ubaa8\ub2c8\ud130\ub9c1\uc6a9)\uac00 \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog \ud310\ub3c5\uae30(\ub77c\uc774\ube0c Syslog \ubaa8\ub2c8\ud130\ub9c1\uc6a9)\uac00 \uc774\ubbf8 \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ubcc0\uacbd \ub0b4\uc6a9\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "\ud310\ub3c5\uae30\uc5d0\uc11c \uc218\uc2e0\ub41c \uc0c8 syslog\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(\ud310\ub3c5\uae30\uc5d0\uc11c \uacc4\uc18d\ud574\uc11c syslog\ub97c \uc218\uc9d1\ud558\ub824\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.)"}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(\ubb38\uc81c\uac00 \uacc4\uc18d\ub418\uba74 Syslog \ud310\ub3c5\uae30 \uc124\uc815 \ubc0f \ubc29\ud654\ubcbd \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.)"}, {"SYSLOGTAIL_CONFIG_CHECK", "Syslog \ud310\ub3c5\uae30 \uc124\uc815 \ubc0f \ubc29\ud654\ubcbd \uad6c\uc131\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "syslog\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_MODIFY_FILTER", "\uacb0\uacfc\ub97c \ucd5c\uc801\ud654\ud558\ub824\uba74 \ud544\ud130 \ubb38\uc790\uc5f4\uc744 \uc218\uc815\ud574 \ubcf4\uc2ed\uc2dc\uc624."}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(\ucc38\uace0: \uacb0\uacfc\ub97c \ucd5c\uc801\ud654\ud558\ub824\uba74 \uc5ec\ub7ec \ubb38\uc790\uc5f4 \uac04 <b>AND</b> \ub610\ub294 <b>OR</b>\uc744 \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624.)"}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Syslog \ud310\ub3c5\uae30\uac00 \ud604\uc7ac \uc911\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_START", "Syslog \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624."}, {"SYSLOGTAIL_ERROR", "\uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"SYSLOGTAIL_ERROR_MESSAGE", "syslog \uc218\uc9d1\uc744 \ucc98\ub9ac\ud558\ub294 \ub3d9\uc548 \uc608\uc678\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Syslog \uc804\ub2ec\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Syslog \uc804\ub2ec \uc8fc\uc18c \ubc0f \ud3ec\ud2b8\ub97c \uad6c\uc131\ud55c \ud6c4 Syslog \ud310\ub3c5\uae30\ub97c \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624."}, {"MASKED_SYSLOG_MESSAGE", "\ub098\uba38\uc9c0 syslog \uba54\uc2dc\uc9c0\uac00 \uac15\uc81c \uc801\uc6a9\ub41c \uac1c\uc778 \uc815\ubcf4 \ucde8\uae09 \ubc29\uce68\uc744 \ubc14\ud0d5\uc73c\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub9c8\uc2a4\ud0b9\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"EVENT_ALERTS_SEARCH", "\uacbd\uace0 \uac80\uc0c9"}, {"EVENT_ALERTS_DELETE", "\uacbd\uace0 \uc0ad\uc81c"}, {"EVENT_ALERTS_ENABLE_DISABLE", "\uacbd\uace0 \uc0ac\uc6a9/\uc0ac\uc6a9 \uc548 \ud568"}, {"EVENT_ALERTS_ADD", "\uacbd\uace0 \ucd94\uac00"}, {"EVENT_ALERTS_HEADER", "\uacbd\uace0"}, {"EVENT_ALERTS_ALERT_NAME", "\uc774\ub984"}, {"EVENT_ALERTS_ALERT_TYPE", "\uacbd\uace0 \uc720\ud615"}, {"EVENT_ALERTS_INTERVAL", "\uac04\uaca9"}, {"EVENT_ALERTS_DEST_SCHED", "\ub300\uc0c1/\uc77c\uc815"}, {"EVENT_ALERTS_ENABLED", "\uc0ac\uc6a9"}, {"EVENT_ALERTS_DOMAIN", "\ub3c4\uba54\uc778"}, {"EVENT_ALERTS_CONFIGURE", "\uad6c\uc131"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "\uacbd\uace0 \uc5c6\uc74c"}, {"DTF_ANY", "\ud56d\uc0c1"}, {"DTF_ADD", "\uc7a5\uce58 \ucd94\uac00"}, {"DTF_EXECUTE", "\uc2e4\ud589"}, {"DTF_ENABLED", "\uc0ac\uc6a9"}, {"DTF_SEARCH", "\uae30\ubcf8 \uc791\uc5c5 \uac80\uc0c9"}, {"DTF_NOT_FOUND", "\uae30\ubcf8 \uc791\uc5c5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DTF_DT", "\uae30\ubcf8 \uc791\uc5c5"}, {"DTF_DESC", "\uc124\uba85"}, {"DTF_TOU", "\uc7a5\uce58 \uc720\ud615"}, {"DTF_DURING", "\ub2e4\uc74c \ub3d9\uc548 \ub9cc\ub4e4\uc5b4\uc9c4 \uc791\uc5c5"}, {"DTF_NO_DTS", "\uc2e4\ud589\ud558\ub3c4\ub85d \uc120\ud0dd\ub41c \uae30\ubcf8 \uc791\uc5c5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DTF_EXEC", "\uc774 \uae30\ubcf8 \uc791\uc5c5\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4."}, {"DTF_NO_DISABLE", "\uc774 \uae30\ubcf8 \uc791\uc5c5\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DTF_NO_EXEC", "\uc774 \uae30\ubcf8 \uc791\uc5c5\uc744 \uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"DTF_SEL_UNITS", "\uc7a5\uce58 \uc120\ud0dd"}, {"DTF_EXEC_METHOD", "\uc2e4\ud589 \ubc29\ubc95"}, {"DTF_ATLEAST_ONE", "\uc791\uc5c5\uc744 \uc2e4\ud589\ud560 \ud558\ub098 \uc774\uc0c1\uc758 \uc7a5\uce58\ub97c \uc120\ud0dd\ud558\uc2ed\uc2dc\uc624."}, {"DTF_EXEC_ALL", "\uc2dc\uc2a4\ud15c\uc758 \ubaa8\ub4e0 \uc7a5\uce58\uc5d0\uc11c \uae30\ubcf8 \uc791\uc5c5 \uc2e4\ud589"}, {"DTF_EXEC_FOLL", "\uc120\ud0dd\ud55c \ub2e4\uc74c \uc7a5\uce58\uc5d0\uc11c \uae30\ubcf8 \uc791\uc5c5 \uc2e4\ud589"}, {"DTF_REAPPLY_1", "\uc774\uc804\uc5d0 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub9cc \uc2e4\ud589"}, {"DTF_REAPPLY_2", "\uc120\ud0dd\ud55c \uc7a5\uce58\uc5d0 \uc774\uc804\uc5d0 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc740 \uc791\uc5c5\ub9cc \uc2e4\ud589\ub429\ub2c8\ub2e4."}, {"DTF_REAPPLY_3", "\ud574\ub2f9 \uc7a5\uce58\uc5d0 \ub300\ud574 \uc774\ubbf8 \uc2e4\ud589\ub41c \uae30\ubcf8 \uc791\uc5c5\uc740 \ubb34\uc2dc\ub429\ub2c8\ub2e4."}, {"DTF_EXEC_1", "\uc774\uc804\uc5d0 \uc801\uc6a9\ub41c \uacbd\uc6b0\uc5d0\ub3c4 \uc2e4\ud589"}, {"DTF_EXEC_2", "\uc774\uc804\uc5d0 \uc801\uc6a9\ub41c \uc791\uc5c5\uc774\ub354\ub77c\ub3c4 \uc120\ud0dd\ud55c \ubaa8\ub4e0 \uc791\uc5c5\uc774 \uc120\ud0dd\ud55c \uc7a5\uce58\uc5d0\uc11c \ub2e4\uc2dc \uc2e4\ud589\ub429\ub2c8\ub2e4."}, {"DTF_ENABLE_SUCCESS", "\uae30\ubcf8 \uc791\uc5c5 \uc120\ud0dd\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DTF_ENABLE_FAIL", "\uae30\ubcf8 \uc791\uc5c5 \uc120\ud0dd\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4."}, {"DTF_SCHEDULE_SUCCESS", "\uae30\ubcf8 \uc791\uc5c5\uc774 \uc2e4\ud589\ud558\ub3c4\ub85d \uc608\uc57d\ub418\uc5c8\uc2b5\ub2c8\ub2e4."}, {"DTF_SCHEDULE_FAIL", "\uc120\ud0dd\ud55c \uc791\uc5c5\uc744 \uc801\uc6a9\ud560 \uc218 \uc5c6\uac70\ub098 \uc774 \uc791\uc5c5\uc774 \uc774\ubbf8 \uc2e4\ud589\ub418\uc5c8\uc73c\ubbc0\ub85c \uae30\ubcf8 \uc791\uc5c5\uc774 \uc608\uc57d\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_HEADER", "\uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9 \uc124\uc815"}, {"AUTOASSIGN_AGENT_MSG_1", " \uc5d0\uc11c \uad00\ub9ac, \ubcf4\uace0 \ubc0f \ubaa8\ub2c8\ud130\ub9c1\uc6a9 \uc7a5\uce58\ub97c \uc18c\uc720\ud55c \uc5d0\uc774\uc804\ud2b8\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc5d0\uc774\uc804\ud2b8 \uc790\ub3d9 \ud560\ub2f9\uc740 \ub9ac\uc18c\uc2a4 \ud560\ub2f9, \ucd5c\uc801\ud654\ub41c \uc131\ub2a5, \uc801\uc808\ud55c \uc800\uc7a5\uc18c \ubc0f \uace0 \uac00\uc6a9\uc131\uc744 \uc704\ud574 \uade0\ud615\uc744 \uade0\ub4f1\ud558\uac8c \uc720\uc9c0\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 \uc7a5\uce58 \ucd94\uac00 \uc791\uc5c5 \ub3c4\uc911 \uc120\ud0dd\ub41c \uad00\ub9ac \ubaa8\ub378\uc744 \ud1a0\ub300\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "\uc0ac\uc6a9\uc790\ub294 <i>\uc7a5\uce58 \uc218\uc815</i> \ub300\ud654 \uc0c1\uc790\uc5d0\uc11c \uc5d0\uc774\uc804\ud2b8\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_MSG_2", "\uc0ac\uc6a9\uc790\ub294 <i>\uc7a5\uce58 \uc218\uc815</i> \ub300\ud654 \uc0c1\uc790\ub098 <i>\uc5d0\uc774\uc804\ud2b8 \ub2e4\uc2dc \ud560\ub2f9</i> \uc791\uc5c5\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5d0\uc774\uc804\ud2b8\ub97c \ub2e4\uc2dc \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\uae30\uc874 \ud130\ub110 \ub610\ub294 LAN, SSL \uad00\ub9ac \ubaa8\ub4dc\ub9cc: \uc790\ub3d9 \ud560\ub2f9\uc740 <i>\uae30\uc874 \ud130\ub110</i> \ubc0f <i>SSL</i> \ubaa8\ub4dc\uc5d0\ub9cc \uc801\uc6a9\ub418\uba70 <i>\uad00\ub9ac \ud130\ub110</i>\uc5d0\ub294 \uc218\ub3d9\uc73c\ub85c \ud560\ub2f9\ud574\uc57c \ud569\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_MSG_ALL", "\ubaa8\ub4e0 \uad00\ub9ac \ubaa8\ub4dc: \uc790\ub3d9 \ud560\ub2f9\uc740 \ubaa8\ub4e0 \ubaa8\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. <i>\uad00\ub9ac \ud130\ub110</i> \ubaa8\ub4dc\uc758 \uacbd\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc124\uc815\uc774 \uad00\ub9ac\ub41c \uc7a5\uce58\uc5d0\uc11c \uad6c\uc131\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4."}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \uc790\ub3d9 \ud560\ub2f9\uc774 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5c8\uc74c"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "\uc5d0\uc774\uc804\ud2b8 \uc790\ub3d9 \ud560\ub2f9\uc774 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ub418\uc5c8\uc74c"}, {"AUTOASSIGN_AGENT_ENABLE", "\uc790\ub3d9\uc73c\ub85c \uc5d0\uc774\uc804\ud2b8 \ud560\ub2f9 \uc0ac\uc6a9"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL \ubc0f \uae30\uc874 \ud130\ub110 \ub610\ub294 LAN \uc0ac\uc6a9"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "\ubaa8\ub450"}, {"TEMPLATE_SETTINGS_TITLE", "[KR]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[KR]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[KR]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[KR]Apply Default Configuration"}, {"CUI_NO_FS", "Flow \uc11c\ubc84\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "KR The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "KR The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\uad6c\uc131\uc744 \ubcc0\uacbd\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"LOGCONFIG_SECTITLE_2", "\ub85c\uadf8 \uba54\uc2dc\uc9c0"}, {"LOGCONFIG_DELLABEL", "\ub2e4\uc74c\ubcf4\ub2e4 \uc624\ub798\ub41c \ub85c\uadf8 \uc0ad\uc81c:"}, {"LOGCONFIG_MONTH", "\uc6d4"}, {"LOGCONFIG_DAY", "\uc77c"}, {"LOGCONFIG_YEAR", "\ub144"}, {"LOGCONFIG_FORLABEL", "\ub300\uc0c1"}, {"LOGCONFIG_DOMAIN", "\ub3c4\uba54\uc778"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "\uc624\ub958: \uad6c\uc131\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\uc77c\uc815\uc744 \ubcc0\uacbd\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\ucd5c\ub300 \ub85c\uadf8 \ud30c\uc77c \uc218\ub97c \ubcc0\uacbd\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "\ubcf4\uad00 "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " \ub85c\uadf8 \uba54\uc2dc\uc9c0"}, {"APPLOG_CONFIG_DELETE_MSG_1", "\ub85c\uadf8\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc218\ud589\ub41c \ud65c\ub3d9\uc744 \uc27d\uac8c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud65c\ub3d9\uc740 \uc0ac\uc6a9\uc790 \uc2dc\uc791 \uc791\uc5c5\uc5d0 \uc9c1\uc811 \ub610\ub294 \uac04\uc811\uc801\uc73c\ub85c \uc5f0\uad00\ub418\uac70\ub098 \uc2dc\uc2a4\ud15c \uc2dc\uc791 \uc791\uc5c5\uc5d0 \ub530\ub77c \uc218\ud589\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub85c\uadf8\ub294 \uac10\uc0ac \ucd94\uc801 \ubc0f \uc900\uc218\ub97c \uc704\ud574 \uc911\uc694\ud560 \ubfd0 \uc544\ub2c8\ub77c \ubb38\uc81c \ud574\uacb0 \uc2dc\uc2a4\ud15c \uc791\uc5c5\uc5d0\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4."}, {"APPLOG_CONFIG_DELETE_MSG_2", "\uc2dc\uc2a4\ud15c\uc5d0 \ub354 \uc774\uc0c1 \uc800\uc7a5\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub294 \ub85c\uadf8\ub294 \uc218\ub3d9\uc73c\ub85c \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc0ad\uc81c \uc791\uc5c5\uc740 \uc77c\ud68c\uc6a9 \uc791\uc5c5\uc73c\ub85c, \uc120\ud0dd\ub41c \uc0ad\uc81c \ub0a0\uc9dc\uc5d0 \ub530\ub77c \uc2e4\ud589\ub429\ub2c8\ub2e4. "}, {"APPLOG_CONFIG_DELETE_MSG_21", "\uc774 \ud654\uba74\uc758 \uc0ad\uc81c \uc791\uc5c5\uc740 \uc21c\uc11c \ubcc0\uacbd\uacfc \uad00\ub828 \uc5c6\ub294 \ub85c\uadf8\ub9cc \uc81c\uac70\ud569\ub2c8\ub2e4."}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "\uc2dc\uc2a4\ud15c\uc5d0 \ub354 \uc774\uc0c1 \uc800\uc7a5\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub294 \ub85c\uadf8\ub294 CSV/HTML \ud615\uc2dd\uc73c\ub85c \ub0b4\ubcf4\ub0b4 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc624\ud504\ub85c\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcf4\uad00 \ud504\ub85c\uc138\uc2a4\ub294 \"\ub85c\uadf8 \ubcf4\uad00 \uc77c\uc815\"\uc5d0 \ub530\ub77c \ub370\uc774\ud130\ub97c \uba3c\uc800 <i>archivedLogs</i> \ub514\ub809\ud130\ub9ac\uc5d0 \ubcf4\uad00\ud55c \ub2e4\uc74c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ad\uc81c\ud569\ub2c8\ub2e4. "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "\ubcf4\uad00 \uc791\uc5c5\uc740 \uc21c\uc11c \ubcc0\uacbd\uacfc \uad00\ub828\ub41c \ub85c\uadf8\ub97c \ud3ec\ud568\ud55c \ubaa8\ub4e0 \ub85c\uadf8\ub97c \ub0b4\ubcf4\ub0b4\uc9c0\ub9cc \uc0ad\uc81c \uc791\uc5c5\uc740 \uc21c\uc11c \ubcc0\uacbd \uad00\ub828 \ud56d\ubaa9\uc5d0 \ub300\ud55c \uc81c\uac70\ub97c \uac74\ub108\ub701\ub2c8\ub2e4."}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "\ucc38\uace0: Windows \uc774\uc678 \ubc30\ud3ec\uc758 \uacbd\uc6b0: \ubcf4\uad00\ub41c \ub85c\uadf8 \ud30c\uc77c\uc744 \ub85c\uceec \ub4dc\ub77c\uc774\ube0c\uc5d0 \uc624\ud504\ub85c\ub4dc\ud558\ub824\uba74 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 > \uc2dc\uc2a4\ud15c > \ud30c\uc77c \uad00\ub9ac\uc790 \ud654\uba74\uc73c\ub85c \uc774\ub3d9\ud569\ub2c8\ub2e4."}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "\ubcf4\uad00 \uc0ac\uc6a9"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "\uc720\uc9c0 "}, {"APPLOG_CONFIG_ARCHIVE_For", " \ub300\uc0c1:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "\ucd5c\ub300 \ub85c\uadf8 \uba54\uc2dc\uc9c0 \ud30c\uc77c \uc218:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "\ubcf4\uad00 \ud615\uc2dd:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "\ubcf4\uad00\uc5d0 \ub300\ud55c \uc124\uc815"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "\ub85c\uadf8 \uba54\uc2dc\uc9c0\uac00 \uc5c5\ub370\uc774\ud2b8\ub428"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "\ub2e4\uc74c\uc758 GMS \ub85c\uadf8 \uba54\uc2dc\uc9c0 \ubcf4\uad00"}, {"WF_SETTINGS_TITLE", "\uc124\uc815"}, {"WF_SETTINGS_MSG_1", "\uc6cc\ud06c\ud50c\ub85c\uc6b0\ub294 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ud558\ub098 \uc774\uc0c1\uc758 \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \uad6c\uc131 \ubcc0\uacbd\uc744 \uac10\ub3c5\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc81c\uc548\ub41c \ubcc0\uacbd \ub0b4\uc6a9\uc744 \uac80\ud1a0\ud558\uc5ec \ud53c\ub4dc\ubc31\uc744 \uc81c\uacf5\ud558\uace0, \ubaa8\ub4e0 \uc791\uc5c5\uc5d0 \ub300\ud574 \uc18c\uc720\uad8c\uc744 \ud560\ub2f9\ud558\uace0, \ucc45\uc784\uc744 \ubd80\uc5ec\ud560 \uc218 \uc788\uc73c\uba70 \uc774\ub7ec\ud55c \ubaa8\ub4e0 \uc218\ud589 \uc791\uc5c5\uc5d0\ub294 \uac10\uc0ac\ub97c \uc704\ud55c \uc644\ubcbd\ud55c \ub85c\uae45\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.  \uc21c\uc11c \ubcc0\uacbd \uad00\ub9ac\ub294 \uc6cc\ud06c\ud50c\ub85c\uc6b0\uc758 \ud55c \uad6c\uc131 \uc694\uc18c\ub85c\uc11c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0 \ub300\ud55c \ubcc0\uacbd \ub0b4\uc6a9\uc744 \ubcf4\uace0, \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \ud654\uba74\uc758 \ubcc0\uacbd \ub0b4\uc6a9 \uc778\ub77c\uc778\uc744 \ubbf8\ub9ac \ubcf4\uace0, \uc5ec\ub7ec \uc21c\uc11c \ubcc0\uacbd\uc744 \ube44\uad50\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. "}, {"WF_SETTINGS_MSG_2", "\ucc38\uace0: \uc21c\uc11c \ubcc0\uacbd \ubc0f \uc2b9\uc778 \uad00\ub9ac\ub294 \ub3c4\uba54\uc778 \uc218\uc900\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ud558\uac70\ub098 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2b9\uc778 \uad00\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uac83\uc740 \uc21c\uc11c \ubcc0\uacbd \uad00\ub9ac\uc640 \ub3c5\ub9bd\uc801\uc774\uc9c0\ub9cc \uc21c\uc11c \ubcc0\uacbd \uad00\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud558\uba74 \uc2b9\uc778 \uad00\ub9ac\ub3c4 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ub429\ub2c8\ub2e4. "}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "\ud65c\uc131\ud654\ub418\ub354\ub77c\ub3c4 \uc6cc\ud06c\ud50c\ub85c\ub294 \ub2e4\uc74c \uc11c\ube44\uc2a4\uc5d0 \uc801\uadf9\uc801\uc73c\ub85c \ub77c\uc774\uc120\uc2a4\uac00 \ubd80\uc5ec\ub41c \uc5b4\ud50c\ub77c\uc774\uc5b8\uc2a4\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. "}, {"WF_SETTINGS_ENABLE_COM", "\uc21c\uc11c \ubcc0\uacbd \uad00\ub9ac \uc0ac\uc6a9"}, {"WF_SETTINGS_ENABLE_WF", "\uc2b9\uc778 \uad00\ub9ac \uc0ac\uc6a9"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "\uc21c\uc11c \ubcc0\uacbd \uae30\ubcf8 \uc77c\uc815 \uc124\uc815"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "\uc21c\uc11c \ubcc0\uacbd\uc740 \ub2e4\uc74c \uc124\uc815\uc5d0 \ub530\ub77c \uc81c\ucd9c \uc2dc\uc5d0 \uc2e4\ud589\ub418\ub3c4\ub85d \uc608\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc744 \uc9c0\uc815\ud558\uba74 \uc0c8 \uc21c\uc11c \ubcc0\uacbd\uc774 \ub9cc\ub4e4\uc5b4\uc9c8 \ub54c \uc120\ud0dd\ub41c \uc124\uc815\uc774 \uc790\ub3d9\uc73c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4."}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "\uc608\uc57d: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "\uc218\ub3d9\uc73c\ub85c \uc2e4\ud589"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "\uc2b9\uc778 \uc989\uc2dc \uc2e4\ud589"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "\uc2e4\ud589 \uc2dc\uac04:"}, {"WF_CONFIG_DELETE_MSG_1", "\ub85c\uadf8\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc218\ud589\ub41c \ud65c\ub3d9\uc744 \uc27d\uac8c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud65c\ub3d9\uc740 \uc0ac\uc6a9\uc790 \uc2dc\uc791 \uc791\uc5c5\uc5d0 \uc9c1\uc811 \ub610\ub294 \uac04\uc811\uc801\uc73c\ub85c \uc5f0\uad00\ub418\uac70\ub098 \uc2dc\uc2a4\ud15c \uc2dc\uc791 \uc791\uc5c5\uc5d0 \ub530\ub77c \uc218\ud589\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub85c\uadf8\ub294 \uac10\uc0ac \ucd94\uc801 \ubc0f \uc900\uc218\ub97c \uc704\ud574 \uc911\uc694\ud560 \ubfd0 \uc544\ub2c8\ub77c \ubb38\uc81c \ud574\uacb0 \uc2dc\uc2a4\ud15c \uc791\uc5c5\uc5d0\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4."}, {"WF_CONFIG_DELETE_MSG_2", "\uc2dc\uc2a4\ud15c\uc5d0 \ub354 \uc774\uc0c1 \uc800\uc7a5\ud574\uc57c \ud560 \ud544\uc694\uac00 \uc5c6\ub294, \uc77c\ubc18\uc801\uc73c\ub85c "}, {"WF_CONFIG_DELETE_MSG_3", " \uc77c\uc774 \uc9c0\ub09c \uc21c\uc11c \ubcc0\uacbd\uc740 \uc218\ub3d9\uc73c\ub85c \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc0ad\uc81c \uc791\uc5c5\uc740 \uc77c\ud68c\uc6a9 \uc791\uc5c5\uc73c\ub85c, \uc120\ud0dd\ub41c \uc0ad\uc81c \ub0a0\uc9dc\uc5d0 \ub530\ub77c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774 \ud654\uba74\uc758 \uc0ad\uc81c \uc791\uc5c5\uc740 \uc21c\uc11c \ubcc0\uacbd\uacfc \uad00\ub828\ub41c \ub370\uc774\ud130, \uc791\uc5c5 \ubc0f \ub85c\uadf8\ub9cc \uc81c\uac70\ud569\ub2c8\ub2e4."}, {"APPLOG_CONFIG_DEL_DATA", "\ub2e4\uc74c \ub0a0\uc9dc\uc5d0 \ub370\uc774\ud130 \uc0ad\uc81c:"}, {"FA_UNIT_STATUS_HEADER", "\uc7a5\uce58 \uc138\ubd80 \uc815\ubcf4"}, {"FA_UNIT_STATUS_SERIAL", "\uc77c\ub828 \ubc88\ud638"}, {"FA_UNIT_STATUS_NODE_NAME", "\uc7a5\uce58 \uc774\ub984"}, {"FA_UNIT_STATUS_MODEL", "\ubaa8\ub378"}, {"FA_UNIT_STATUS_FIRMWARE", "\ud38c\uc6e8\uc5b4 \ubc84\uc804"}, {"FA_UNIT_STATUS_IP", "\uad00\ub9ac\ub41c IP"}, {"FA_UNIT_STATUS_LICENSE", "\uc571 \uc2dc\uac01\ud654"}, {"FA_GROUP_STATUS_HEADER1", "\ud38c\uc6e8\uc5b4 \uc138\ubd80 \uc815\ubcf4"}, {"FA_GROUP_STATUS_HEADER2", "\ud750\ub984 \ubcf4\uace0 \ub77c\uc774\uc120\uc2a4 \uc0c1\ud0dc"}, {"FA_GROUP_STATUS_NO_DATA", "\ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c"}, {"FA_LICENSE_NOT_AVAILABLE", "\ub77c\uc774\uc120\uc2a4 \uc5c6\uc74c"}, {"FA_LICENSE_AVAILABLE", "\ub77c\uc774\uc120\uc2a4 \uc788\uc74c"}, {"FA_LICENSE_FREE_TRAIL", "\ubb34\ub8cc \uccb4\ud5d8"}, {"FA_LICENSE_EXPIRED", "\ub9cc\ub8cc\ub428"}, {"FA_GROUP_FIREWALL_COUNT", "\uc2dc\uc2a4\ud15c\uc758 \ubc29\ud654\ubcbd"}, {"FA_FLOW_IP1", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1"}, {"FA_FLOW_IP2", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2"}, {"FA_FLOW_AGENT_STATUS", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc0c1\ud0dc"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "\ubc29\ud654\ubcbd \uc124\uc815"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN \ud130\ub110"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "\uc6d0\uaca9 IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "\ub370\uc774\ud130 \ubcf4\uc874(\uc77c)"}, {"FA_FLOW_FORWARDER_IP", "\ud750\ub984 \uc804\ub2ec\uc790"}, {"FA_FLOWS_COLLECTED", "\ud750\ub984 \uc218\uc9d1\ub428"}, {"FA_DISK_ALLOCATED", "\ub514\uc2a4\ud06c \ud560\ub2f9\ub428"}, {"FA_DISK_USED", "\ub514\uc2a4\ud06c \uc0ac\uc6a9\ub428"}, {"FA_FLOW_STATUS", "\uc0c1\ud0dc"}, {"FA_NO_AGENT", "Flow \uc5d0\uc774\uc804\ud2b8\uac00 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4"}, {"FA_MODELSUPPORT", "\ud750\ub984 \ubcf4\uace0\uac00 \uc774 \ubaa8\ub378\uc5d0 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4."}, {"FA_FIRMWARESUPPORT", "\ud750\ub984 \ubcf4\uace0\ub294 \uc774 \ubc84\uc804\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"FA_LICENSESUPPORT", "\uc571 \uc2dc\uac01\ud654 \ub77c\uc774\uc120\uc2a4 \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."}, {"FA_HEADING", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8"}, {"FA_FLOW_AGENT", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8"}, {"FA_FLOW_HEAD_IP1", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1"}, {"FA_FLOW_HEAD_IP2", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2"}, {"FA_FLOW_HEAD_HDD", "\ud558\ub4dc \ub514\uc2a4\ud06c(%)"}, {"FA_FLOW_HEAD_RAM", "RAM(%)"}, {"FA_FLOW_HEAD_CPU", "CPU(%)"}, {"FA_FLOW_HEAD_BW", "\ub300\uc5ed\ud3ed(%)"}, {"FA_FLOW_FORWARDER_HEAD", "\ud750\ub984 \uc804\ub2ec\uc790"}, {"FA_FLOW_PAIR", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc30d"}, {"FA_FLOW_HEAD_DISKSIZE", "\ub514\uc2a4\ud06c \ud06c\uae30"}, {"FA_FLOW_HEAD_GATEWAY", "\uac8c\uc774\ud2b8\uc6e8\uc774 \ubc29\ud654\ubcbd"}, {"FA_FLOW_HEAD_TUNNELS", "\ud130\ub110"}, {"FA_FLOW_HEAD_TENANTS", "\ud14c\ub10c\ud2b8"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "\uc774\ub984"}, {"GF_GATEWAY", "\uac8c\uc774\ud2b8\uc6e8\uc774"}, {"GF_LAST_UPDATED", "\ub9c8\uc9c0\ub9c9 \uc5c5\ub370\uc774\ud2b8"}, {"GF_DEST_ADDRESS_RANGE", "\ub300\uc0c1 \uc8fc\uc18c \ubc94\uc704"}, {"GF_LOCAL_ADDRESS_RANGE", "\ub85c\uceec \uc8fc\uc18c \ubc94\uc704"}, {"FA_STATUS", "\uc0c1\ud0dc"}, {"CLOUDSETTINGS_SECTITLE_1", "\uc0c8 \ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc30d \ucd94\uac00"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "\uba54\ubaa8\ub9ac(GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "\ud50c\ub85c\uc6b0 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc800\uc7a5\uc18c(GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "\ud074\ub77c\uc6b0\ub4dc Syslog \uc11c\ubc84 \uc124\uc815"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Syslog \uc11c\ubc84\uc5d0 Syslog \ubcf4\uace0 \uc0ac\uc6a9:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Syslog \uc11c\ubc84\uc758 IP \uc8fc\uc18c:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog \uc11c\ubc84 \ud3ec\ud2b8:"}, {"CLOUDSETTINGS_SECTITLE_3", "\ud074\ub77c\uc6b0\ub4dc \ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8 \uc124\uc815"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "\ud50c\ub85c\uc6b0 \uc5d0\uc774\uc804\ud2b8\ub2f9 \ubc29\ud654\ubcbd \uc218:"}, {"CLOUDSETTINGS_SECTITLE_5", "[KR]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[KR]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "SonicPoint \uc815\ubcf4"}, {"SP_MANAGEDBY", "\ub2e4\uc74c\uc5d0\uc11c \uad00\ub9ac:"}, {"SP_IPADDR", "IP \uc8fc\uc18c"}, {"SP_SUBNET", "\uc11c\ube0c\ub137 \ub9c8\uc2a4\ud06c"}, {"SP_IFACE", "\uc778\ud130\ud398\uc774\uc2a4"}, {"SP_ZONE", "\uc601\uc5ed"}, {"SP_MODEL", "\ubaa8\ub378"}, {"SP_ENABLED", "\uc0ac\uc6a9"}, {"SP_DISABLED", "\uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c"}, {"SP_STATUS", "\uc0c1\ud0dc"}, {"SP_MACADDR", "MAC \uc8fc\uc18c"}, {"PM_CONNECTWISE_STATUS", "[KR]Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[KR]Not Available"}, {"TICKET_INFORMATION", "[KR]Connectwise Ticket"}, {"TICKET_DETAILS", "[KR]Details"}, {"CONNECTWISE_NOTE", "[KR]GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}, {Integer.toString(-919), "[KR]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[KR]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[KR]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[KR]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[KR]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[KR]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[KR]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[KR]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[KR]Successfully authenticated with the unit."}, {Integer.toString(-928), "[KR]Authentication with the unit failed."}, {Integer.toString(-929), "[KR]The unit is registered with the backend."}, {Integer.toString(-930), "[KR]The unit is not registered with the backend."}, {Integer.toString(-931), "[KR]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[KR]Heart beats for the unit have been started."}, {Integer.toString(-933), "[KR]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[KR]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[KR]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[KR]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[KR]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[KR]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[KR]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[KR]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[KR]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[KR]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[KR]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[KR]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[KR]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[KR]ZeroTouch feature was disabled for the firewall."}};
 
     @Override
     public Object[][] getContents() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_pt_BR.java decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_pt_BR.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_pt_BR.java	2023-09-08 15:13:13.332776203 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_pt_BR.java	2023-09-08 15:14:40.296125514 -0700
@@ -7,7 +7,7 @@
 
 public class sgmsResources_pt_BR
 extends ListResourceBundle {
-    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "Dispositivo (Singular)"}, {"APPLIANCE_NAME_PLURAL", "Dispositivos (Plural)"}, {"APPLIANCE_DESC", "Descri\u00c3\u00a7\u00c3\u00a3o para o dispositivo"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewalls"}, {"SONICWALL_DESC", "Dispositivos de firewall"}, {"SSLVPN_NAME", "SRA"}, {"SSLVPN_NAME_PLURAL", "SRAs"}, {"SSLVPN_DESC", "Dispositivos SRA"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDPs"}, {"CDP_DESC", "Dispositivos CDP"}, {"ESV_NAME", "Aventail SSL-VPN"}, {"ESV_NAME_PLURAL", "Aventail SSL-VPNs"}, {"ESV_DESC", "Dispositivos Aventail SSL-VPN"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ESs"}, {"ESA_DESC", "Dispositivos de seguran\u00c3\u00a7a de e-mail"}, {"OTHERS_NAME", "OUTRO"}, {"OTHERS_NAME_PLURAL", "OUTROS"}, {"OTHERS_DESC", "Outros dispositivos"}, {"MINUTE", "Minutos"}, {"TEST_STRING", "Isto \u00c3\u00a9 uma cadeia de caracteres de teste \u00e2\u20ac\u201c remover antes da entrega"}, {"PROGRESS_ACTION_TIMED", "Esta a\u00c3\u00a7\u00c3\u00a3o poder\u00c3\u00a1 levar algum tempo a completar"}, {"PROGRESS_PLEASE_WAIT", "Aguarde..."}, {"LOADING_PLEASE_WAIT", "Carregando, por favor, aguarde..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "Voc\u00c3\u00aa n\u00c3\u00a3o possui Privil\u00c3\u00a9gios de atualiza\u00c3\u00a7\u00c3\u00a3o nesta Tela."}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "Voc\u00c3\u00aa n\u00c3\u00a3o tem permiss\u00c3\u00b5es para ver quaisquer telas, efetue logout e entre em contato com o seu Administrador."}, {"UPDATE", "Atualizar"}, {"RESET", "Redefinir"}, {"NO_PANEL_PERMISSIONS", "[BR]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "C\u00c3\u00b3digos de modelos sincronizados com \u00c3\u00aaxito"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "Falha ao sincronizar c\u00c3\u00b3digos de modelos"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "A coloca\u00c3\u00a7\u00c3\u00a3o de tarefas em spool foi iniciada com \u00c3\u00aaxito."}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "Falha \u00e2\u20ac\u201c Nenhuma unidade dispon\u00c3\u00advel para aplicar a atualiza\u00c3\u00a7\u00c3\u00a3o."}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "O seguinte C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o foi adicionado com \u00c3\u00aaxito - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "Os c\u00c3\u00b3digos de ativa\u00c3\u00a7\u00c3\u00a3o foram adicionados com \u00c3\u00aaxito."}, {"ERROR_ADD_ACTIVATION_CODE", "Erro ao adicionar c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o: o seguinte C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o j\u00c3\u00a1 existe - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "O seguinte C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o foi exclu\u00c3\u00addo com \u00c3\u00aaxito - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "O(s) c\u00c3\u00b3digo(s) de ativa\u00c3\u00a7\u00c3\u00a3o foi(foram) exclu\u00c3\u00addo(s) com \u00c3\u00aaxito."}, {"ERROR_DELETE_ACTIVATION_CODE", "Excluir erro de ativa\u00c3\u00a7\u00c3\u00a3o de c\u00c3\u00b3digo: o seguinte c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o existe - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "Excluir erro de ativa\u00c3\u00a7\u00c3\u00a3o de c\u00c3\u00b3digo: n\u00c3\u00a3o foi poss\u00c3\u00advel excluir o(s) seguinte(s) c\u00c3\u00b3digo(s) de ativa\u00c3\u00a7\u00c3\u00a3o - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "O seguinte c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o foi adicionado ao banco de dados do SonicWall GMS: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "o seguinte c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o foi removido do pool de c\u00c3\u00b3digos dispon\u00c3\u00adveis: "}, {"UPDATE_DB_MESSAGE", "a altera\u00c3\u00a7\u00c3\u00a3o foi atualizada com \u00c3\u00aaxito no banco de dados do SonicWall GMS."}, {"FAILURE_UPDATE_DB_MESSAGE", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o: n\u00c3\u00a3o foi poss\u00c3\u00advel atualizar a altera\u00c3\u00a7\u00c3\u00a3o no banco de dados do SonicWall GMS com \u00c3\u00aaxito."}, {"NO_UNITS_FOR_REGISTRATION", "Sem unidades a registrar"}, {"FREE_TRAIL_NOT_APPLIED", "Todas as unidades est\u00c3\u00a3o por registrar ou j\u00c3\u00a1 t\u00c3\u00aam uma assinatura"}, {"AV_FAILURE_MESSAGE", "N\u00c3\u00a3o est\u00c3\u00a3o dispon\u00c3\u00adveis unidades para Atualizar nem para Registrar"}, {"AV_SUCCESS_MESSAGE", "Tarefa(s) iniciada(s) com \u00c3\u00aaxito para atualizar assim como para registrar"}, {"AV_SUCCESS_UPGRADE", "Tarefa(s) iniciada(s) com \u00c3\u00aaxito para Atualizar"}, {"AV_NO_SUCCESS_REG", "Sem unidades dispon\u00c3\u00adveis para Registrar"}, {"AV_SUCCESS_REG", "A tarefa foi iniciada com \u00c3\u00aaxito para o Registro"}, {"AV_NO_SUCCESS_UPGRADE", "Sem unidades dispon\u00c3\u00adveis para Atualizar"}, {"TASK_SUCCESS_MESSAGE", "A tarefa foi iniciada com \u00c3\u00aaxito"}, {"TASK_CMP_ERROR", "A senha de CMP s\u00c3\u00b3 pode ser alterada em n\u00c3\u00advel da unidade"}, {"TASK_ERROR_MESSAGE", "As tarefas n\u00c3\u00a3o s\u00c3\u00a3o iniciadas com \u00c3\u00aaxito"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "N\u00c3\u00a3o existem unidades dispon\u00c3\u00adveis para a opera\u00c3\u00a7\u00c3\u00a3o de Compartilhamento de licen\u00c3\u00a7as."}, {"SGMS_EMAIL_BOTTOM_MSG1", "Desenvolvido por "}, {"SGMS_EMAIL_BOTTOM_MSG2", " Vers\u00c3\u00a3o "}, {"SGMS_EMAIL_BOTTOM_MSG3", " S\u00c3\u00a9rie: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " Servidor: "}, {"FIRMWARE_DOWNLOADED", "Foi baixada uma nova c\u00c3\u00b3pia de firmware."}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " ir\u00c3\u00a1 expirar muito em breve para os seguintes dispositivos.\nContate a sec\u00c3\u00a7\u00c3\u00a3o de vendas da SonicWall para adquirir c\u00c3\u00b3digos de ativa\u00c3\u00a7\u00c3\u00a3o para a renova\u00c3\u00a7\u00c3\u00a3o destas assinaturas."}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "Informa\u00c3\u00a7\u00c3\u00b5es sobre a expira\u00c3\u00a7\u00c3\u00a3o da assinatura."}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "N\u00c3\u00a3o foram encontradas nenhumas expira\u00c3\u00a7\u00c3\u00b5es."}, {"VERSION_MESSAGE", "Vers\u00c3\u00a3o # do SonicWall GMS: "}, {"NUM_NODES_MESSAGE", "N\u00c3\u00bamero de n\u00c3\u00b3s que podem ser gerenciados por este SonicWall GMS: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "Descri\u00c3\u00a7\u00c3\u00a3o do produto GMS: "}, {"DATABASE_TYPE_MESSAGE", "Tipo de banco de dados: "}, {"MODEL_TYPES_MESSAGE", "N\u00c3\u00bamero de n\u00c3\u00b3s e nome do modelo: "}, {"NUM_AGENTS_MESSAGE", "N\u00c3\u00bamero de agentes no sistema: "}, {"AGENT_IP_MESSAGE", "Endere\u00c3\u00a7o IP dos agentes: "}, {"UNKNOWN_MESSAGE", "Desconhecido"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "BANCO DE DADOS desconhecido"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "Caracteres inv\u00c3\u00a1lidos [<,\\,:] no nome da unidade."}, {"PM_NAME_KEYWORD", " \u00c3\u00a9 uma palavra-chave e n\u00c3\u00a3o pode ser usada como nome de uma unidade. Use outro nome"}, {"PM_NAME_EXISTS_A", "Uma unidade com o nome '"}, {"PM_NAME_EXISTS_B", "' j\u00c3\u00a1 existe "}, {"PM_UNKNOWN", "Desconhecido"}, {"PM_UNKNOWN_UNREGISTERED", "Desconhecido/N\u00c3\u00a3o registrado"}, {"PM_UNREGISTERED", "N\u00c3\u00a3o registrado"}, {"PM_YES", "Sim"}, {"PM_NO", "N\u00c3\u00a3o"}, {"PM_ENABLED", "Habilitado"}, {"PM_DISABLED", "Desabilitado"}, {"PM_NOTAVAILABLE", "N\u00c3\u00a3o dispon\u00c3\u00advel"}, {"PM_UNLIMITED", "Ilimitado"}, {"PM_CURRENT", "Atual"}, {"PM_DEFAULT", "Padr\u00c3\u00a3o"}, {"PM_EXPIRED", "Expirado"}, {"PM_UP", "Ativo"}, {"PM_DOWN", "Inativo"}, {"PM_NOT_ACQUIRED", "N\u00c3\u00a3o adquirido"}, {"PM_SINCE", " desde "}, {"PM_NONE", "Nenhum"}, {"PM_N_A", "N/A"}, {"PM_NO_LICENSE", "Sem licen\u00c3\u00a7a"}, {"PM_MODEL", "Modelo"}, {"PM_SERIAL_NUM", "N\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"PM_DOMAIN", "Dom\u00c3\u00adnio"}, {"PM_NUM_LAN_IPS", "N\u00c3\u00bamero de IPs LAN permitidos"}, {"PM_HA", "Alta disponibilidade"}, {"PM_DMZ_PORT", "Porta DMZ"}, {"PM_NUM_WORKPORTS", "N\u00c3\u00bamero de IPs WorkPort permitidos"}, {"PM_HOMEPORT", "HomePort"}, {"PM_WLAN_PORT", "Porta WLAN"}, {"PM_OPT_PORT", "Porta OPT"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "Atualiza\u00c3\u00a7\u00c3\u00a3o de VPN"}, {"PM_VPN_CLIENTS", "Clientes VPN globais"}, {"PM_IPS", "Servi\u00c3\u00a7o de preven\u00c3\u00a7\u00c3\u00a3o contra intrus\u00c3\u00b5es"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "Antiv\u00c3\u00adrus do gateway"}, {"PM_FIRMWARE_VERSION", "Vers\u00c3\u00a3o do firmware"}, {"PM_REGISTRATION_CODE", "C\u00c3\u00b3digo de registro"}, {"PM_CFS_SUB", "Servi\u00c3\u00a7o/Lista de filtro de conte\u00c3\u00bado"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "Antiv\u00c3\u00adrus"}, {"PM_WARRANTY", "Garantia alargada"}, {"PM_SW_STATUS", "Estado"}, {"PM_SW_MANAGEDINSTANCE", "Gerenciado por inst\u00c3\u00a2ncia"}, {"PM_TASKS_PENDING", "Tarefas pendentes"}, {"PM_LAST_LOG", "Entrada do \u00c3\u00baltimo log"}, {"PM_SAS_CONFIG_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es sobre a configura\u00c3\u00a7\u00c3\u00a3o SA"}, {"PM_SAS_DEFINED", "SAs definidos"}, {"PM_SAS_ENABLED", "SAs habilitados"}, {"PM_SAS_AVAILABLE", "SAs dispon\u00c3\u00adveis"}, {"PM_SAS_REMAINING", "SAs restantes"}, {"PM_SAS_INTERCONNECTED", "SAs interconectados"}, {"PM_AGENT_ASSIGNED", "Agente atribu\u00c3\u00addo"}, {"PM_PRIMARY_AGENT", "Agente principal"}, {"PM_STANDBY_AGENT", "Agente em espera"}, {"PM_TUNNEL_MGMT", "Modo de gerenciamento"}, {"PM_FW_ADDED_TO_GMS", "Unidade adicionada ao SonicWall GMS a"}, {"PM_FW_UP_SINCE", "Unidade ativa desde"}, {"PM_FW_DOWN_SINCE", "Unidade inativa desde"}, {"PM_SW_IP", "IP do SonicWall"}, {"PM_TIME_ZONE", "Fuso hor\u00c3\u00a1rio"}, {"PM_SW_IN_SYSTEM", "no Sistema"}, {"PM_SW_IN_DMZ", "no DMZ"}, {"PM_SW_IN_GROUP", "no Grupo"}, {"PM_SW_UNREGISTERED", "que N\u00c3\u00a3o est\u00c3\u00a3o registrados"}, {"PM_SW_VPN_UPGRADE", "com a atualiza\u00c3\u00a7\u00c3\u00a3o de VPN"}, {"PM_SW_VPN_CLIENT", "com a atualiza\u00c3\u00a7\u00c3\u00a3o do cliente VPN global"}, {"PM_SW_MSSP", "que suportam MSSP"}, {"PM_CFL_SUBSCRIPTION", "Servi\u00c3\u00a7o/Lista de filtro de conte\u00c3\u00bado"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "Antiv\u00c3\u00adrus"}, {"PM_HGMS_SUBSCRIPTION", "Servi\u00c3\u00a7os em nuvem"}, {"PM_SUPPORT_SUBSCRIPTION", "Suporte"}, {"PM_EXTENDED_WARRANTY", "Garantia alargada"}, {"PM_UNITS_DOWN", "SonicWalls inativos"}, {"PM_PENDING_TASKS", "SonicWalls com Tarefas pendentes"}, {"PM_MANAGED_WITH_TUNNEL", "SonicWalls gerenciados usando o T\u00c3\u00banel de gerenciamento"}, {"PM_TASK_SPOOLED", "A tarefa foi colocada em spool para alterar o Nome do host."}, {"PM_RAVLIN_MODEL", "Modelo Ravlin"}, {"PM_LAN_MAC_SERIAL", "MAC/N\u00c3\u00bamero de s\u00c3\u00a9rie de LAN"}, {"PM_WAN_MAC", "MAC de WAN"}, {"PM_FIRMWARE_VERSION", "Vers\u00c3\u00a3o do firmware"}, {"PM_HW_VERSION", "Vers\u00c3\u00a3o de hardware"}, {"PM_ROM_VERSION", "Vers\u00c3\u00a3o ROM"}, {"PM_SECURITY_ID", "ID de seguran\u00c3\u00a7a"}, {"PM_RAVLIN_STATUS", "Estado do Ravlin"}, {"PM_TASKS_PENDING", "Tarefas pendentes"}, {"PM_AGENT_ASSIGNED", "Agente atribu\u00c3\u00addo"}, {"PM_RAVLINS_IN_NODE", "Ravlins no n\u00c3\u00b3"}, {"PM_RAVLINS_DOWN", "Ravlins inativos"}, {"PM_RAVLINS_PENDING_TASKS", "Ravlins com tarefas pendentes"}, {"PM_FIX_UNIT_ERROR", "Ocorreu um erro ao corrigir a unidade "}, {"PM_MOD_UNIT_EXISTS", "A unidade modificada j\u00c3\u00a1 existe com o n\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "A unidade modificada com o nome"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "j\u00c3\u00a1 existe "}, {"PM_ADD_ERR_PRIVILEGES", "ERRO: voc\u00c3\u00aa n\u00c3\u00a3o possui privil\u00c3\u00a9gios suficientes para adicionar a unidade."}, {"PM_UNIT_EXISTS", "A unidade j\u00c3\u00a1 existe com o n\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"PM_UNIT_NAME_EXISTS_A", "Unidade com o nome"}, {"PM_UNIT_NAME_EXISTS_B", "j\u00c3\u00a1 existe no dom\u00c3\u00adnio "}, {"PM_ADD_UNIT_ERR", "Erro ao adicionar a unidade ao banco de dados SonicWall."}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "Insira um n\u00c3\u00bamero de s\u00c3\u00a9rie v\u00c3\u00a1lido.\nO n\u00c3\u00bamero de s\u00c3\u00a9rie deve ter "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "caracteres de comprimento."}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "O n\u00c3\u00bamero de s\u00c3\u00a9rie s\u00c3\u00b3 deve conter caracteres hexadecimais."}, {"PM_GET_PREFS_ERR", "Erro ao recuperar o arquivo de prefer\u00c3\u00aancias."}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "A unidade n\u00c3\u00a3o est\u00c3\u00a1 licenciada para servi\u00c3\u00a7os em nuvem.\nLicencie um dos seguintes servi\u00c3\u00a7os em MySonicWall.com antes de adicionar a unidade a "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " n\u00c3\u00a3o consegue obter informa\u00c3\u00a7\u00c3\u00b5es de licenciamento para esta unidade.\nTente novamente mais tarde."}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " n\u00c3\u00a3o consegue comunicar com MySonicWall.com para verificar as licen\u00c3\u00a7as para esta unidade.\nTente novamente mais tarde."}, {"PM_LICENSED", "Licenciado"}, {"PM_NOT_LICENSED", "N\u00c3\u00a3o licenciado"}, {"PM_IS_MSSP", "Unidade MSSP"}, {"PM_SYSLOG_FORMAT", "Formato syslog"}, {"PM_STATUS_MSG_ONLY", "Apenas mensagens de estado"}, {"PM_SYSLOG_IN_UTC", "Logs no UTC"}, {"PM_VIEWPOINT_MODE", "Modo Analyzer habilitado"}, {"PM_NAME_RESOLUTION", "Modo de resolu\u00c3\u00a7\u00c3\u00a3o de nome"}, {"PM_ACCESS_MODE", "Modo de acesso"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS e depois NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"PM_CONNECTWISE_STATUS", "[BR] Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[BR] Not Available"}, {"VM_PATCH_DETECTED_MSG1", " detectou disponibilidade para novas atualiza\u00c3\u00a7\u00c3\u00b5es de software"}, {"VM_PATCH_DETECTED_MSG2", "Erro ao enviar e-mail ao Administrador com informa\u00c3\u00a7\u00c3\u00b5es sobre as novas atualiza\u00c3\u00a7\u00c3\u00b5es de software. O SMTP ou o e-mail do Administrador n\u00c3\u00a3o est\u00c3\u00a1 configurado."}, {"VM_PATCH_DETECTED_MSG3", " Atualiza\u00c3\u00a7\u00c3\u00b5es de software dispon\u00c3\u00adveis\n\n"}, {"VM_NEW", "Novo "}, {"VM_PATCH_DETECTED_MSG4", "Para notas de vers\u00c3\u00a3o e informa\u00c3\u00a7\u00c3\u00b5es sobre o download, efetue o login em sua conta<a href=https://www.mysonicwall.com>MySonicWall.com</a> "}, {"VM_SCREEN", " Tela."}, {"VM_PATCH_DETECTED_MSG5", " Verifica\u00c3\u00a7\u00c3\u00a3o da atualiza\u00c3\u00a7\u00c3\u00a3o de corre\u00c3\u00a7\u00c3\u00a3o de componentes efetuada com \u00c3\u00aaxito. Foram encontradas novas atualiza\u00c3\u00a7\u00c3\u00b5es de componentes. E-mail enviado para o administrador"}, {"VM_PATCH_DETECTED_MSG6", "Falha ao baixar a atualiza\u00c3\u00a7\u00c3\u00a3o da corre\u00c3\u00a7\u00c3\u00a3o "}, {"VM_FOR", " para "}, {"VM_ON", " a "}, {"VM_PATCH_DETECTED_MSG7", " download do componente de corre\u00c3\u00a7\u00c3\u00a3o anulado. arquivo de corre\u00c3\u00a7\u00c3\u00a3o j\u00c3\u00a1 existe: "}, {"VM_PATCH_DETECTED_MSG8", " download do componente de corre\u00c3\u00a7\u00c3\u00a3o efetuado com \u00c3\u00aaxito: "}, {"VM_PATCH_DETECTED_MSG9", "Erro ao gravar arquivo de corre\u00c3\u00a7\u00c3\u00a3o "}, {"VM_PATCH_DETECTED_MSG10", " no disco."}, {"SDM_UPDATE_SUCCESS", "A atualiza\u00c3\u00a7\u00c3\u00a3o foi um \u00c3\u00aaxito."}, {"SDM_UPDATE_FAILURE", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o."}, {"SDM_UPDATE_SPECIAL_FAILURE", "Falha ao criar tarefas para excluir SA(s)."}, {"SDM_UPDATE_INVALID", "A solicita\u00c3\u00a7\u00c3\u00a3o de atualiza\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lida."}, {"SDM_SCREEN_ID_INVALID", "O ID da tela \u00c3\u00a9 inv\u00c3\u00a1lido"}, {"SDM_READY", "Pronto"}, {"SDM_CGI_ERROR", "Erro ao obter CGI_NAME para "}, {"SDM_DEFAULT_ERROR", "Erro ao obter DEFAULT_VALUE para "}, {"SDM_INVALID_TARGET", "Erro: o grupo de origem ou de destino \u00c3\u00a9 inv\u00c3\u00a1lido."}, {"SDM_METADATA_ERROR", "Erro ao obter metadados para "}, {"SDM_DB_ERROR", "Erro ao acessar o banco de dados do SonicWall GMS."}, {"SDM_NOVPN_ERROR", "O VPN n\u00c3\u00a3o est\u00c3\u00a1 habilitado nesta unidade. Erro ao criar VPN para a unidade "}, {"SDM_NO_TARGET_VPN_ERROR", "O VPN n\u00c3\u00a3o est\u00c3\u00a1 habilitado no destino. Erro ao criar VPN para a unidade "}, {"SDM_NOSAS_ERROR", "Nenhuns SAs restantes dispon\u00c3\u00adveis nesta unidade. Erro ao criar VPN para a unidade "}, {"SDM_NO_TARGET_SAS_ERROR", "N\u00c3\u00a3o existem SAs restantes dispon\u00c3\u00adveis no destino. Erro ao criar VPN para a unidade "}, {"SDM_NO_UNITS_ERROR", "N\u00c3\u00a3o foram criadas tarefas."}, {"SDM_NO_3RDPARTYCERTS_ERROR", "N\u00c3\u00a3o foi encontrada nenhuma combina\u00c3\u00a7\u00c3\u00a3o v\u00c3\u00a1lida de Certificado CA/Local de terceiros. Ignorando SA de VPN \u00c3\u00a0 unidade "}, {"SDM_DHCP_ERROR", "O endere\u00c3\u00a7amento din\u00c3\u00a2mico est\u00c3\u00a1 habilitado tanto na unidade de origem como na de destino, portanto, o SA n\u00c3\u00a3o pode ser criado. Ignorando cria\u00c3\u00a7\u00c3\u00a3o de SA de VPN. "}, {"SDM_NOAES_ERROR", "O AES n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel nesta unidade. Erro ao criar VPN para a unidade "}, {"SDM_NO_TARGET_AES_ERROR", "O AES n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel no destino. Erro ao criar VPN para a unidade "}, {"SDM_DELETE_SUCCESS", "A exclus\u00c3\u00a3o foi um \u00c3\u00aaxito "}, {"SDM_DELETE_FAILURE", "Falha na exclus\u00c3\u00a3o "}, {"SDM_AGENTNAME_INVALID", "Caractere inv\u00c3\u00a1lido [<,\\,:,',@,#,*,$] no nome do Agente."}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "Falha na cria\u00c3\u00a7\u00c3\u00a3o de tarefas para SAs de VPNS com maior interconectividade"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o de grupo para "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "SAs de VPN com interconectividade aprimorada"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "SAs de VPN com interconectividade padr\u00c3\u00a3o"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "SAs de VPN sem interconectividade aprimorada"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "SAs de VPN sem interconectividade padr\u00c3\u00a3o"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "Ignorando a cria\u00c3\u00a7\u00c3\u00a3o de SA para esta unidade porque a vers\u00c3\u00a3o do firmware nesta unidade n\u00c3\u00a3o suporta o tipo de interface de T\u00c3\u00banel"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "Tarefa programada a executar a"}, {"PASSWORD_CHANGED", "A senha do SonicWall GMS foi alterada com \u00c3\u00aaxito."}, {"PASSWORD_NOT_CHANGED_A", "Foi especificada a senha antiga incorreta.<BR>"}, {"PASSWORD_NOT_CHANGED_B", " Senha inalterada."}, {"PASSWORD_NOT_CHANGED", "Foi especificada a senha antiga incorreta. Senha inalterada."}, {"LOGS_PASSWD_CHANGED", "A senha de login do usu\u00c3\u00a1rio foi alterada com \u00c3\u00aaxito "}, {"LOGS_PASSWD_NOT_CHANGED", "N\u00c3\u00a3o foi poss\u00c3\u00advel autenticar o usu\u00c3\u00a1rio para alterar a senha de login "}, {"LOGS_ADDED_NEW_USER", "Foi adicionado um novo usu\u00c3\u00a1rio ao banco de dados do SonicWall GMS: "}, {"LOGS_ADDED_NEW_USER_TYPE", "Foi adicionado um novo tipo de usu\u00c3\u00a1rio ao banco de dados do SonicWall GMS: "}, {"LOGS_DELETED_USER", "O usu\u00c3\u00a1rio e as informa\u00c3\u00a7\u00c3\u00b5es correspondentes foram exclu\u00c3\u00addos do banco de dados do SonicWall GMS: "}, {"LOGS_DELETED_GROUP", "O seguinte grupo personalizado e todas as visualiza\u00c3\u00a7\u00c3\u00b5es usando este grupo personalizado foram eliminados do banco de dados do SonicWall GMS: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "Valor do atributo personalizado ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") deve conter somente caracteres alfanum\u00c3\u00a9ricos"}, {"LOGS_ADD_CUSTOM_GROUP", "O seguinte Nome de grupo personalizado/Valor padr\u00c3\u00a3o foi adicionado ao sistema: "}, {"LOGS_MOD_CUSTOM_GROUP", "O seguinte Nome de grupo personalizado/Valor padr\u00c3\u00a3o foi modificado: "}, {"LOGS_DEL_CUSTOM_GROUP", "O seguinte Grupo personalizado foi exclu\u00c3\u00addo do sistema: "}, {"READY", "Pronto"}, {"NAV_OF", " de "}, {"NAV_PREVIOUS", "Anterior"}, {"NAV_NEXT", "Pr\u00c3\u00b3ximo"}, {"NAV_DISPLAYING", "Exibindo"}, {"NAV_FIREWALLS", "Firewall(s)"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "Voc\u00c3\u00aa n\u00c3\u00a3o possui Privil\u00c3\u00a9gios de atualiza\u00c3\u00a7\u00c3\u00a3o nesta Tela."}, {"ACT_WRONG_FILE_FORMAT", "Erro: Formato de arquivo errado, n\u00c3\u00a3o foi poss\u00c3\u00advel adicionar os c\u00c3\u00b3digos."}, {"AUTH_INVALID_PARAMS", "Par\u00c3\u00a2metros inv\u00c3\u00a1lidos, tente novamente"}, {"AUTH_AUTHENTICATE", "Autenticar"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "o n\u00c3\u00bamero aleat\u00c3\u00b3rio de login atingiu o tempo limite"}, {"AUTH_LOGIN_TIMEOUT", "A p\u00c3\u00a1gina de login atingiu o tempo limite, tente novamente"}, {"AUTH_LOGIN_FAILURE", "Falha no login, tente novamente"}, {"AUTH_LOGIN_FAILURE_LOG", "Falha no login"}, {"NO_DOMAIN_SPECIFIED", "N\u00c3\u00a3o foi especificado um nome de dom\u00c3\u00adnio para o login"}, {"SPECIFY_DOMAIN", "Especifique um nome de dom\u00c3\u00adnio para o login"}, {"INVALID_IP", "[BR]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "Dom\u00c3\u00adnio inv\u00c3\u00a1lido. Especifique um Nome de dom\u00c3\u00adnio v\u00c3\u00a1lido"}, {"INVALID_ALIAS_MSG", "Alias inv\u00c3\u00a1lido. Especifique um Alias v\u00c3\u00a1lido"}, {"REMOTE_SUCCESSFUL_LOGIN", "Login no sistema pelo usu\u00c3\u00a1rio efetuado com \u00c3\u00aaxito: "}, {"REMOTE_FAILED_LOGIN", "Falha na Autentica\u00c3\u00a7\u00c3\u00a3o remota para o usu\u00c3\u00a1rio: "}, {"XML_REMOTE_FAILED_LOGIN", "Falha na Autentica\u00c3\u00a7\u00c3\u00a3o remota baseada em XML para o usu\u00c3\u00a1rio: "}, {"NEW_USER_ADDED", "Novo usu\u00c3\u00a1rio adicionado: "}, {"TO_USER_TYPE", "tipo de usu\u00c3\u00a1rio: "}, {"CLICK_TO_TRY_AGAIN", "Clique aqui para tentar novamente"}, {"USER_LOCKED_OUT", "O usu\u00c3\u00a1rio foi bloqueado, contatar o administrador para obter detalhes"}, {"USER_DISABLED", "A conta do usu\u00c3\u00a1rio est\u00c3\u00a1 desabilitada, contatar o administrador para obter detalhes"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o remota. Contate o seu Administrador do GMS."}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o remota. Contate o seu Administrador do GMS ou tente novamente."}, {"LDAP_AUTH_FAILED", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o remota"}, {"LDAP_USER_NOT_FOUND", "O usu\u00c3\u00a1rio n\u00c3\u00a3o foi encontrado ou n\u00c3\u00a3o existe no diret\u00c3\u00b3rio"}, {"LDAP_INVALID_CREDENTIALS", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o remota: credenciais inv\u00c3\u00a1lidas"}, {"LDAP_COMMUNICATION_ERROR", "N\u00c3\u00a3o foi poss\u00c3\u00advel comunicar com o diret\u00c3\u00b3rio ou com o servi\u00c3\u00a7o de nomenclatura"}, {"LDAP_ANONYMOUS_BIND_SET", "AnonymousBind est\u00c3\u00a1 definido como sendo permitido no dom\u00c3\u00adnio "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "Verifique se o servidor remoto permite Liga\u00c3\u00a7\u00c3\u00b5es an\u00c3\u00b4nimas."}, {"LDAP_INVALID_GROUPS_SPECIFIED", "Grupos de diret\u00c3\u00b3rios inv\u00c3\u00a1lidos especificados. Contate o seu Administrador do GMS."}, {"LDAP_INVALID_GROUP_MEMBER", "O usu\u00c3\u00a1rio n\u00c3\u00a3o \u00c3\u00a9 um membro do(s) Grupo(s) de diret\u00c3\u00b3rio(s) permitido(s)."}, {"RADIUS_UNKNOWN_HOST", "Host do servidor RADIUS desconhecido."}, {"RADIUS_CONNECTION_TIMEOUT", "A conex\u00c3\u00a3o com o servidor remoto RADIUS expirou"}, {"RADIUS_FAILED_LOGIN", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o. Credenciais inv\u00c3\u00a1lidas."}, {"RADIUS_EXCEPTION", "Ocorreu uma exce\u00c3\u00a7\u00c3\u00a3o RADIUS."}, {"RADIUS_INVALID_GROUP_MEMBER", "O usu\u00c3\u00a1rio n\u00c3\u00a3o \u00c3\u00a9 um membro do(s) grupo(s) de RADIUS permitido(s)."}, {"PWD_CHANGE_SCREEN", "Alterar senha."}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "Alterar senha j\u00c3\u00a1 que o comprimento n\u00c3\u00a3o est\u00c3\u00a1 dentro do intervalo permitido: 7\u00e2\u20ac\u201c15 caracteres."}, {"PWD_VALIDATION_FAILURE", "Alterar senha j\u00c3\u00a1 que o comprimento n\u00c3\u00a3o pode exceder os 15 caracteres."}, {"PWD_EXPIRATION", "A senha deve ser alterada a cada {0} dias"}, {"PWD_CHANGE_NEXT_LOGIN", "Altera\u00c3\u00a7\u00c3\u00a3o da senha for\u00c3\u00a7ada pelo administrador."}, {"PASSWORD_EXISTS", "[BR]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[BR]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[BR]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "N\u00c3\u00a3o foi poss\u00c3\u00advel ler o arquivo da licen\u00c3\u00a7a"}, {"CUI_UPGRADE_SUCCESS", "Atualiza\u00c3\u00a7\u00c3\u00a3o efetuada com \u00c3\u00aaxito"}, {"CUI_UPGRADE_FAIL", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o: "}, {"CUI_SYNCH_SUCCESS", "Sincroniza\u00c3\u00a7\u00c3\u00a3o efetuada com \u00c3\u00aaxito"}, {"CUI_SYNCH_FAIL", "Falha na sincroniza\u00c3\u00a7\u00c3\u00a3o: "}, {"CUI_PRORATE_SUCCESS", "Solicita\u00c3\u00a7\u00c3\u00a3o de ProRate efetuada com \u00c3\u00aaxito"}, {"CUI_PRORATE_FAIL", "Falha na solicita\u00c3\u00a7\u00c3\u00a3o de ProRate: "}, {"CUI_CHANGE_PW_SUCCESS", "\u00c3\u0160xito.  Senha aceite por MySonicWall.com."}, {"CUI_CHANGE_PW_FAIL", "Falha.  A senha n\u00c3\u00a3o foi aceite por MySonicWall.com: "}, {"CUI_EMAIL_SUCCESS", "O formul\u00c3\u00a1rio TechSupport foi enviado para o centro de suporte do SonicWall GMS."}, {"CUI_EMAIL_FAIL", "Ocorreu um problema ao enviar o relat\u00c3\u00b3rio TechSupport ao centro de suporte do SonicWall GMS.<br>Tente novamente mais tarde."}, {"CUI_SESSION_TERMINATED", " a sess\u00c3\u00a3o foi terminada com \u00c3\u00aaxito."}, {"CUI_SESSIONS_TERMINATED", " as sess\u00c3\u00b5es foram terminadas com \u00c3\u00aaxito."}, {"CUI_NO_AGENTS", "N\u00c3\u00a3o foram encontrados Agentes."}, {"CUI_FILTER_ADDED", "Filtro adicionado com \u00c3\u00aaxito "}, {"DIAG_DIAG_REQUEST_A", "A solicita\u00c3\u00a7\u00c3\u00a3o de diagn\u00c3\u00b3stico feita em "}, {"DIAG_DIAG_REQUEST_B", " foi enviada."}, {"DIAG_DELETE_SUCCESS", "Exclus\u00c3\u00a3o(\u00c3\u00b5es) efetuada(s) com \u00c3\u00aaxito."}, {"DIAG_EMAIL_SUCCESS", "E-mail(s) enviado(s) com \u00c3\u00aaxito."}, {"DIAG_UNIT_UNKNOWN", "'O nome da unidade n\u00c3\u00a3o \u00c3\u00a9 conhecido '"}, {"DIAG_UNIT", "'Unidade "}, {"VPN_DUPLICATE_UFI", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o. O identificador de firewall exclusivo n\u00c3\u00a3o \u00c3\u00a9 exclusivo no SonicWall GMS."}, {"NO_LOGS_MESSAGE", "N\u00c3\u00a3o foram encontrados logs."}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "N\u00c3\u00a3o foram encontrados logs para os crit\u00c3\u00a9rios de pesquisa fornecidos."}, {"LOG_START_SEARCH", "Iniciar nova pesquisa"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "A sua consulta para os relat\u00c3\u00b3rios {0,n\u00c3\u00bamero,inteiro} \u00c3\u00a9 muito grande. Limite os seus crit\u00c3\u00a9rios de pesquisa."}, {"SQL_EXCEPTION_ERROR_MESSAGE", "Ocorreu um erro na conex\u00c3\u00a3o do banco de dados. Certifique-se de que o banco de dados est\u00c3\u00a1 dispon\u00c3\u00advel e/ou limite seus crit\u00c3\u00a9rios de pesquisa."}, {"UNKNOWN_EXCEPTION_MESSAGE", "Ocorreu um erro ao executar a sua pesquisa. Certifique-se de que o banco de dados est\u00c3\u00a1 dispon\u00c3\u00advel e/ou limite seus crit\u00c3\u00a9rios de pesquisa."}, {"LOG_NEXT", "Pr\u00c3\u00b3ximo"}, {"LOG_PREVIOUS", "Anterior"}, {"LOG_UPDATE_SUCCESS", "A atualiza\u00c3\u00a7\u00c3\u00a3o foi um \u00c3\u00aaxito"}, {"LOG_OF", " de "}, {"LOG_OF", " de "}, {"PREFS_SYNCHRONIZE_STARTED", "A sincroniza\u00c3\u00a7\u00c3\u00a3o de informa\u00c3\u00a7\u00c3\u00b5es com o dispositivo foi iniciada com \u00c3\u00aaxito."}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "Falha na sincroniza\u00c3\u00a7\u00c3\u00a3o de informa\u00c3\u00a7\u00c3\u00b5es do dispositivo, n\u00c3\u00a3o foi poss\u00c3\u00advel efetuar login no dispositivo."}, {"MON_NO_PRIVILEGES", "Voc\u00c3\u00aa n\u00c3\u00a3o possui privil\u00c3\u00a9gios suficientes para esta tela"}, {"MON_SYNC_TASK_CREATED", "Tarefa de sincroniza\u00c3\u00a7\u00c3\u00a3o criada com \u00c3\u00aaxito"}, {"MON_SYNC_TASK_FAIL", "Falha na cria\u00c3\u00a7\u00c3\u00a3o da tarefa de sincroniza\u00c3\u00a7\u00c3\u00a3o"}, {"MON_RENEGOTIATE_TASK_CREATED", "Tarefa(s) de renegocia\u00c3\u00a7\u00c3\u00a3o criada(s) com \u00c3\u00aaxito"}, {"MON_RENEGOTIATE_FAILED", "Falha na cria\u00c3\u00a7\u00c3\u00a3o da tarefa de renegocia\u00c3\u00a7\u00c3\u00a3o"}, {"MON_NO_SELECTED", "N\u00c3\u00a3o foram selecionados t\u00c3\u00baneis para Renegociar"}, {"MON_REFRESH_CREATED", "Tarefa(s) de atualiza\u00c3\u00a7\u00c3\u00a3o de estat\u00c3\u00adsticas criada(s) com \u00c3\u00aaxito"}, {"MON_REFRESH_FAIL", "Falha na cria\u00c3\u00a7\u00c3\u00a3o de tarefa de atualiza\u00c3\u00a7\u00c3\u00a3o para estat\u00c3\u00adsticas de t\u00c3\u00banel"}, {"MON_NO_SELECTED_REFRESH", "N\u00c3\u00a3o foram selecionados t\u00c3\u00baneis para atualizar Estat\u00c3\u00adsticas"}, {"MON_UPDATE_SUCCESS", "A atualiza\u00c3\u00a7\u00c3\u00a3o foi um \u00c3\u00aaxito"}, {"MON_UPDATE_FAIL", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o"}, {"MON_NO_MONITORING", "Os t\u00c3\u00baneis n\u00c3\u00a3o podem ser monitorados."}, {"MON_NAME", "Nome"}, {"MON_GATEWAY", "Gateway"}, {"MON_LAST_UPDATED", "\u00c3\u0161ltima atualiza\u00c3\u00a7\u00c3\u00a3o"}, {"MON_DEST_ADDR_RANGE", "Intervalo de endere\u00c3\u00a7os de destino"}, {"MON_LOCAL_ADDR_RANGE", "Intervalo de endere\u00c3\u00a7os locais"}, {"MON_NO_TUNNELS_FOUND", "N\u00c3\u00a3o foram encontrados t\u00c3\u00baneis."}, {"MON_TITLE", "Estat\u00c3\u00adsticas de t\u00c3\u00banel de VPN"}, {"MON_DESCRIPTION", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"MON_VALUE", "Valor"}, {"MON_CREATE_TIME", "Hora de cria\u00c3\u00a7\u00c3\u00a3o"}, {"MON_VALID_UNTIL", "T\u00c3\u00banel v\u00c3\u00a1lido at\u00c3\u00a9"}, {"MON_PACKETS_IN", "Pacotes de entrada"}, {"MON_PACKETS_OUT", "Pacotes de sa\u00c3\u00adda"}, {"MON_BYTES_IN", "Bytes de entrada"}, {"MON_BYTES_OUT", "Bytes de sa\u00c3\u00adda"}, {"MON_FRAGMENTS_IN", "Pacotes de entrada fragmentados"}, {"MON_FRAGMENTS_OUT", "Pacotes de sa\u00c3\u00adda fragmentados"}, {"MON_TUNNEL_ACTIVE", "O t\u00c3\u00banel est\u00c3\u00a1 ativo"}, {"REG_NO_PERMISSION", "N\u00c3\u00a3o possui Privil\u00c3\u00a9gios de atualiza\u00c3\u00a7\u00c3\u00a3o nesta Tela"}, {"REG_ERROR_RETRIEVING_COUNT", "Erro ao recuperar a contagem de dispositivos registrados/n\u00c3\u00a3o registrados"}, {"REG_CURRENT", "Atual"}, {"REG_EXPIRED", "Expirado"}, {"REG_NO_LICENSE", "Sem licen\u00c3\u00a7a"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "N\u00c3\u00a3o foi poss\u00c3\u00advel carregar a Imagem de firmware"}, {"TASKS_SUCCESSFUL_DELETION", "As tarefas foram exclu\u00c3\u00addas do banco de dados com \u00c3\u00aaxito."}, {"TASKS_ERROR_DELETION", "Erro: n\u00c3\u00a3o foi poss\u00c3\u00advel excluir as tarefas."}, {"TASKS_EXECUTION_SET", "As tarefas foram configuradas com \u00c3\u00aaxito para uma execu\u00c3\u00a7\u00c3\u00a3o imediata."}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "Tentativa n\u00c3\u00a3o autorizada para executar tarefa"}, {"TASKS_ERROR_EXECUTION", "Erro: n\u00c3\u00a3o foi poss\u00c3\u00advel programar as tarefas para a execu\u00c3\u00a7\u00c3\u00a3o."}, {"TASK_DELETED_LOG_MESSAGE", "A seguinte tarefa foi exclu\u00c3\u00adda pelo usu\u00c3\u00a1rio "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "Tentativa n\u00c3\u00a3o autorizada para excluir tarefa"}, {"NO_TASKS_MESSAGE", "N\u00c3\u00a3o foram encontradas tarefas."}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "N\u00c3\u00a3o foram encontradas tarefas para os crit\u00c3\u00a9rios de pesquisa fornecidos."}, {"TASKS_RESCHEDULED", "A(s) tarefa(s) foi(foram) reprogramada(s) com \u00c3\u00aaxito."}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "Tentativa n\u00c3\u00a3o autorizada para reprogramar tarefa"}, {"TASKS_ERROR_RESCHEDULE", "Erro: N\u00c3\u00a3o foi poss\u00c3\u00advel reprogramar a(s) tarefa(s)."}, {"IMMEDIATE_STRING", "IMEDIATO"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "Local"}, {"AGENT_STRING", "Agente"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "A seguinte tarefa foi reprogramada pelo usu\u00c3\u00a1rio "}, {"FROM_LOG_MESSAGE", " de "}, {"TO_LOG_MESSAGE", " para "}, {"IMMEDIATE_LOG_MESSAGE", "Execu\u00c3\u00a7\u00c3\u00a3o imediata"}, {"REG_PASSWORD_SUCCESS", "\u00c3\u0160xito.  Senha aceite por MySonicWall.com. Pressione atualizar para continuar."}, {"REG_PASSWORD_FAIL", "Falha.  A senha n\u00c3\u00a3o foi aceite por MySonicWall.com: "}, {"LOGIN_MESSAGE", "Efetue login"}, {"LOGIN_DEFAULT_MESSAGE", "Use o usu\u00c3\u00a1rio padr\u00c3\u00a3o: 'admin' e a senha: 'password' para fazer login"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "Use o usu\u00c3\u00a1rio padr\u00c3\u00a3o: 'admin' e a senha do dispositivo/sistema"}, {"LOGIN_DEMO_MESSAGE", "Fa\u00c3\u00a7a login usando o usu\u00c3\u00a1rio: 'demo' e a senha: 'password'"}, {"SETTINGSVPS_CHANGED", "Suas configura\u00c3\u00a7\u00c3\u00b5es do Analyzer foram atualizadas."}, {"SETTINGS_CHANGED", "Suas configura\u00c3\u00a7\u00c3\u00b5es foram atualizadas."}, {"LOGS_USER_FORCEDOUT", " for\u00c3\u00a7ou o seguinte usu\u00c3\u00a1rio a efetuar logout do sistema: "}, {"SLAVE_STATE_CHANGED_MESSAGE", "O Agente foi configurado com \u00c3\u00aaxito para alterar o seu estado."}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "Tentativa sem \u00c3\u00aaxito: n\u00c3\u00a3o foi poss\u00c3\u00advel alterar o estado do Agente."}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "Os par\u00c3\u00a2metros do agente foram atualizados com \u00c3\u00aaxito."}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "N\u00c3\u00a3o foi poss\u00c3\u00advel atualizar os par\u00c3\u00a2metros do Agente com \u00c3\u00aaxito."}, {"SCHEDULER_UP_STATE", "Ativo"}, {"SCHEDULER_DOWN_STATE", "Inativo"}, {"SCHEDULER_UNDETERMINED_STATE", "Indeterminado"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "N\u00c3\u00a3o tem permiss\u00c3\u00a3o para atualizar as propriedades do Agente."}, {"SMTPSERVER_INVALID", "Endere\u00c3\u00a7o de servidor SMTP inv\u00c3\u00a1lido."}, {"APPLIANCE_MANAGE_FAILED", "Falha ao alterar as prefer\u00c3\u00aancias de gerenciamento para dispositivos."}, {"EMPTY_SMTP_PWD", "Senha SMTP n\u00c3\u00a3o pode estar vazio"}, {"TREE_AGENT_STARTED", "O agente prim\u00c3\u00a1rio deve estar no estado iniciado para poder reatribuir agentes"}, {"TREE_STANDBY_STARTED", "Os agentes em espera devem estar no estado iniciado para poder reatribuir agentes"}, {"TREE_LICENSE_EXCEEDED", "Voc\u00c3\u00aa n\u00c3\u00a3o possui licen\u00c3\u00a7a para adicionar mais dispositivos no gerenciamento."}, {"TREE_IP_EMPTY", "O IP n\u00c3\u00a3o pode ficar em branco. Forne\u00c3\u00a7a um endere\u00c3\u00a7o IP v\u00c3\u00a1lido"}, {"TREE_AUTH_FAIL", "Falha na autentica\u00c3\u00a7\u00c3\u00a3o do dispositivo; verificar configura\u00c3\u00a7\u00c3\u00b5es."}, {"TREE_NO_RESPONSE", "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 acess\u00c3\u00advel; verificar configura\u00c3\u00a7\u00c3\u00b5es."}, {"TREE_FIREWALL_NOT_LICENSED", "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 licenciado para o Analyzer."}, {"TREE_FIREWALL_STATE_ERROR", "Falha ao recuperar informa\u00c3\u00a7\u00c3\u00b5es acerca do estado do dispositivo.\nO firmware do dispositivo poder\u00c3\u00a1 ter de ser atualizado."}, {"TREE_MODEL_FAIL", "Falha ao recuperar informa\u00c3\u00a7\u00c3\u00b5es acerca do modelo"}, {"TREE_FIRMWARE_VERSION_FAIL", "Falha ao recuperar vers\u00c3\u00a3o do firmware"}, {"TREE_UNMATCHED_SERIAL", "Os n\u00c3\u00bameros de s\u00c3\u00a9rie n\u00c3\u00a3o coincidem."}, {"TREE_TIMEZONE_FAIL", "Falha ao recuperar fuso hor\u00c3\u00a1rio"}, {"TREE_UTC_FAIL", "As mensagens de log n\u00c3\u00a3o est\u00c3\u00a3o em formato UTC. Altere o formato do carimbo de data/hora do dispositivo para UTC sen\u00c3\u00a3o os relat\u00c3\u00b3rios gerados mostrar\u00c3\u00a3o a hora errada"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "Habilite a op\u00c3\u00a7\u00c3\u00a3o 'Habilitar configura\u00c3\u00a7\u00c3\u00b5es ViewPoint' na tela Log > ViewPoint. Esta configura\u00c3\u00a7\u00c3\u00a3o alterar\u00c3\u00a1 o seguinte:\n\t1. Enviar syslog em UTC\n\t2. Filtro de redund\u00c3\u00a2ncia de eventos de syslog (segundos) para 0\n\t3. Configurar 'formato syslog' para Padr\u00c3\u00a3o"}, {"TREE_NO_SCHEDULER", "N\u00c3\u00a3o foi encontrado um programador no endere\u00c3\u00a7o IP especificado, unidade n\u00c3\u00a3o foi adicionada"}, {"TREE_GET_PREFS_ERR", "Erro ao recuperar o arquivo de prefer\u00c3\u00aancias."}, {"TREE_FIREWALL_NOT_REGISTERED", "Este dispositivo n\u00c3\u00a3o foi registrado.  Visite MySonicWall.com e registre o dispositivo antes de adicion\u00c3\u00a1-lo ao Analyzer."}, {"TREE_BACKEND_COMM_FAILURE", "O Analyzer n\u00c3\u00a3o consegue comunicar com MySonicWall.com para verificar a licen\u00c3\u00a7a.\nVerifique sua liga\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a0 rede; o servidor do Analyzer dever\u00c3\u00a1 conseguir comunicar com MySonicWall.com. "}, {"SU_DB_SIZE_EMAILBODY1", "Os tamanhos atuais do banco de dados s\u00c3\u00a3o os seguintes: \n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\nNota: o limite m\u00c3\u00a1ximo do tamanho do banco de dados \u00c3\u00a9 de 2 GB \n\n \nA seguinte altera\u00c3\u00a7\u00c3\u00a3o de configura\u00c3\u00a7\u00c3\u00a3o afetar\u00c3\u00a1 o tamanho geral da utiliza\u00c3\u00a7\u00c3\u00a3o do banco de dados:\n\tReduza o n\u00c3\u00bamero de dias na configura\u00c3\u00a7\u00c3\u00a3o \"Dias para armazenar dados n\u00c3\u00a3o processados\" na tela Painel de console -> Relat\u00c3\u00b3rios -> Configura\u00c3\u00a7\u00c3\u00b5es.\n\tReduza o n\u00c3\u00bamero de dias na configura\u00c3\u00a7\u00c3\u00a3o \"Dias para armazenar dados resumidos\" na tela Painel de console -> Relat\u00c3\u00b3rios -> Resumidor."}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\nNota: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "O limite m\u00c3\u00a1ximo do tamanho do banco de dados \u00c3\u00a9 de 2 GB\n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\nA seguinte altera\u00c3\u00a7\u00c3\u00a3o de configura\u00c3\u00a7\u00c3\u00a3o afetar\u00c3\u00a1 o tamanho geral da utiliza\u00c3\u00a7\u00c3\u00a3o do banco de dados:\n\tReduza o n\u00c3\u00bamero de dias na configura\u00c3\u00a7\u00c3\u00a3o \"Dias para armazenar dados n\u00c3\u00a3o processados\" na tela Painel de console -> Relat\u00c3\u00b3rios -> Configura\u00c3\u00a7\u00c3\u00b5es.\n\tReduza o n\u00c3\u00bamero de dias na configura\u00c3\u00a7\u00c3\u00a3o \"Dias para armazenar dados resumidos\" na tela Painel de console -> Relat\u00c3\u00b3rios -> Resumidor."}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "AVISO:\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "verifique se n\u00c3\u00a3o configurou seu banco de dados para um plano de manuten\u00c3\u00a7\u00c3\u00a3o de backup ou se um plano existente falhou ao limpar os logs.\nSe n\u00c3\u00a3o configurar o seu banco de dados para um plano de manuten\u00c3\u00a7\u00c3\u00a3o, seus logs de transa\u00c3\u00a7\u00c3\u00b5es continuar\u00c3\u00a3o a crescer e a encher o disco r\u00c3\u00adgido completamente,\no que resultar\u00c3\u00a1 no n\u00c3\u00a3o funcionamento de seu banco de dados e do sistema GMS. Em segundo lugar, em caso de falha do banco de dados, voc\u00c3\u00aa n\u00c3\u00a3o ser\u00c3\u00a1 capaz de restaurar seu \nbanco de dados para o \u00c3\u00baltimo backup conhecido."}, {"SU_DB_SIZE_EMAILSUBJECT", "Analyzer da SonicWall: verifica\u00c3\u00a7\u00c3\u00a3o de integridade do banco de dados"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "Efetue login na unidade porque a valida\u00c3\u00a7\u00c3\u00a3o da licen\u00c3\u00a7a falhou para o dispositivo com s\u00c3\u00a9rie "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", ". Certifique-se de que nenhuma das configura\u00c3\u00a7\u00c3\u00b5es necess\u00c3\u00a1rias para o login foi alterada a n\u00c3\u00advel local no dispositivo. Use Modificar unidade para que as altera\u00c3\u00a7\u00c3\u00b5es sejam refletidas no Analyzer", "Valida\u00c3\u00a7\u00c3\u00a3o da licen\u00c3\u00a7a pelo Analyzer"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "Valida\u00c3\u00a7\u00c3\u00a3o da licen\u00c3\u00a7a pelo Analyzer"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "Efetue login no seu dispositivo "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " porque ocorreu uma falha na valida\u00c3\u00a7\u00c3\u00a3o da licen\u00c3\u00a7a e esta excedeu o per\u00c3\u00adodo de cortesia. Certifique-se de que nenhuma das configura\u00c3\u00a7\u00c3\u00b5es necess\u00c3\u00a1rias para o login foi alterada a n\u00c3\u00advel local no dispositivo. Use Modificar unidade para que as altera\u00c3\u00a7\u00c3\u00b5es sejam refletidas no Analyzer"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "A licen\u00c3\u00a7a do Analyzer expirou!"}, {"SU_LIC_EXPIRED_BODY1", "Seu dispositivo "}, {"SU_LIC_EXPIRED_BODY2", " n\u00c3\u00a3o est\u00c3\u00a1 licenciado para o Analyzer. Verifique as configura\u00c3\u00a7\u00c3\u00b5es no dispositivo"}, {"SU_LIC_EXPIRED_SUBJECT", "A licen\u00c3\u00a7a do Analyzer expirou!"}, {"LOGVIEW_WRONG_START_DT", "Formato de data de in\u00c3\u00adcio errado. A data tem de estar no formato mm/dd/aaaa."}, {"LOGVIEW_WRONG_END_DT", "Formato de data de t\u00c3\u00a9rmino errado. A data tem de estar no formato mm/dd/aaaa."}, {"LOGVIEW_ENDDT_LESS_STARTDT", "Data de t\u00c3\u00a9rmino menor do que data de in\u00c3\u00adcio. Insira as datas de in\u00c3\u00adcio e de t\u00c3\u00a9rmino v\u00c3\u00a1lidas."}, {"LOGVIEW_MSGS_PERSCRN", "Mensagens por tela"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "Voc\u00c3\u00aa est\u00c3\u00a1 prestes a exportar {0,n\u00c3\u00bamero,inteiro} entradas de log. Tem certeza de que deseja fazer isto? Sen\u00c3\u00a3o, cancele este di\u00c3\u00a1logo e limite os crit\u00c3\u00a9rios de pesquisa."}, {"LOGVIEW_GOTO_MSG", "Ir para N\u00c3\u00bamero da mensagem"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "Mostrar mensagens por tela:"}, {"LOGVIEW_RANGE", "(Intervalo: 10\u00e2\u20ac\u201c100)"}, {"LOGVIEW_COL_DT", "Data"}, {"LOGVIEW_COL_MSG", "Mensagem"}, {"LOGVIEW_COL_SEV", "Gravidade"}, {"LOGVIEW_COL_USER", "Usu\u00c3\u00a1rio GMS"}, {"LOGVIEW_COL_CO", "Alterar ordem"}, {"LOGVIEW_COL_IP", "IP do usu\u00c3\u00a1rio"}, {"LOGVIEW_SEARCH_RESULTS", "Resultados de pesquisa"}, {"LOGVIEW_SEARCH_CRITERIA", "Crit\u00c3\u00a9rios de pesquisa"}, {"LOGVIEW_EXPORT_LOGS", "Exportar logs"}, {"LOGVIEW_CLEAR_LOGS", "Limpar pesquisa"}, {"LOGVIEW_SEARCH_LOGS", "Iniciar pesquisa"}, {"LOGVIEW_MATCH_CASE", "Corresponder mai\u00c3\u00basculas/min\u00c3\u00basculas"}, {"LOGVIEW_EXACT_PHRASE", "Frase exata"}, {"LOGVIEW_ANY_WORD", "Qualquer palavra"}, {"LOGVIEW_ALL_WORDS", "Todas as palavras"}, {"LOGVIEW_MSG", "A mensagem cont\u00c3\u00a9m:"}, {"LOGVIEW_CO", "Alterar ordem:"}, {"LOGVIEW_TIME", "Selecionar hora dos logs: De:"}, {"LOGVIEW_TIME_TO", "Para: "}, {"LOGVIEW_NODE_NAME", "N\u00c3\u00b3 do SonicWall:"}, {"LOGVIEW_USER", "Usu\u00c3\u00a1rio: "}, {"LOGVIEW_SEV", "Gravidade: "}, {"LOGVIEW_CALENDAR", "Calend\u00c3\u00a1rio"}, {"LOGVIEW_ALL", "Todos (Alerta, Aviso e Info)"}, {"LOGVIEW_ALERT_WARNING", "Alerta e aviso"}, {"LOGVIEW_ALERT", "Alerta"}, {"LOGVIEW_STR_FORMAT", "Formato da cadeia de caracteres de pesquisa: user@domain.<br>Apenas para usu\u00c3\u00a1rio, inserir usu\u00c3\u00a1rio.<br>Apenas para o dom\u00c3\u00adnio, inserir @dom\u00c3\u00adnio.<br><i>Nota: se o valor do usu\u00c3\u00a1rio cont\u00c3\u00a9m um @ termine a cadeia de pesquisa com um @ semelhante.</i>"}, {"HELPABOUT_VERSION", "Vers\u00c3\u00a3o:"}, {"HELPABOUT_LIC", "Licenciado a:"}, {"HELPABOUT_SN", "N\u00c3\u00bamero de s\u00c3\u00a9rie:"}, {"HELPABOUT_DBDRIVER", "Driver de banco de dados:"}, {"HELPABOUT_DBVERSION", "Vers\u00c3\u00a3o do banco de dados:"}, {"HELPABOUT_REPORT_DBVERSION", "Vers\u00c3\u00a3o do banco de dados de relat\u00c3\u00b3rios:"}, {"LOGIN_TITLE", "Login"}, {"LOGIN_ISBLANK", " est\u00c3\u00a1 em branco. Insira um valor."}, {"LOGIN_INVALIDID", "ID do usu\u00c3\u00a1rio inv\u00c3\u00a1lido especificado."}, {"LOGIN_INVALIDID2", "O ID do usu\u00c3\u00a1rio s\u00c3\u00b3 poder\u00c3\u00a1 conter os seguintes caracteres:"}, {"LOGIN_INVALIDID3", "Alfanum\u00c3\u00a9ricos, .(Pontos), -(H\u00c3\u00adfens), _(Sublinhado) e @(arroba)."}, {"LOGIN_INVALIDID4", "Especifique um ID de usu\u00c3\u00a1rio com os caracteres permitidos."}, {"LOGIN_USERNAME", "Nome de usu\u00c3\u00a1rio"}, {"LOGIN_PASSWORD", "Senha"}, {"LOGIN_LOGIN", "LOGIN"}, {"LOGIN_DOMAIN", "Dom\u00c3\u00adnio"}, {"LOGIN_SWITCH_EN_US", "Alternar para UI em ingl\u00c3\u00aas"}, {"LOGIN_SWITCH_JA_JP", "Alternar para UI em japon\u00c3\u00aas"}, {"LOGIN_SWITCH_ZH_CN", "Alternar para UI em chin\u00c3\u00aas simplificado"}, {"LOGIN_SWITCH_ZH_TW", "Alternar para UI em chin\u00c3\u00aas tradicional"}, {"LOGIN_SWITCH_KO_KR", "Alternar para UI em coreano"}, {"LOGIN_SWITCH_PT_BR", "Comutar para portugu\u00c3\u00aas do Brasil UI"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "Efetuar logout"}, {"LOGOUT_VPMSG", "Acabou de efetuar logout do sistema Analyzer do SonicWall com \u00c3\u00aaxito."}, {"LOGOUT_VPMSG1", "Para iniciar uma nova Sess\u00c3\u00a3o do Analyzer do SonicWall, recomenda-se que feche ou saia deste navegador &nbsp<br>&nbsp e que abra uma nova inst\u00c3\u00a2ncia do navegador."}, {"LOGOUT_GMSMSG", "Acabou de efetuar logout do sistema de gerenciamento da SonicWall com \u00c3\u00aaxito. "}, {"LOGOUT_GMSMSG1", "Para iniciar uma nova sess\u00c3\u00a3o no SonicWall GMS, recomenda-se que feche ou saia deste navegador &nbsp<br>&nbsp e que abra uma nova inst\u00c3\u00a2ncia do navegador."}, {"SETTINGSUSER_CHANGE", "Alterar"}, {"SETTINGSUSER_OLD", "Atual"}, {"SETTINGSUSER_PASSWORD", "Senha"}, {"SETTINGSUSER_NEW", "Novo"}, {"SETTINGSUSER_CONFIRMMSG", "Confirmar nova senha"}, {"SETTINGSUSER_FAILMSG", " As entradas 'Senha' e 'Confirmar nova senha' n\u00c3\u00a3o correspondem."}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "A senha deve ter no m\u00c3\u00adnimo 7 caracteres e consistir em letras e/ou n\u00c3\u00bameros."}, {"INVALID_PASSWORD", "Senha inv\u00c3\u00a1lida especificada."}, {"PWD_RULES", "A senha deve ser criada baseada nas seguintes regras: "}, {"VALID_PWD_RULE_FOR_PCI", "    - Um comprimento m\u00c3\u00adnimo de 7 caracteres."}, {"MAX_PWD_LEN", "    - \u00c3\u2030 permitido um comprimento m\u00c3\u00a1ximo de 15 caracteres."}, {"PWD_ALPHANUMERIC_CHARS", "    - Pode conter caracteres alfanum\u00c3\u00a9ricos."}, {"PWD_SPCIAL_CHARS", "    - Pode conter caracteres especiais."}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[BR]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[BR]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[BR]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "Especifique uma senha que atenda \u00c3\u00a0s exig\u00c3\u00aancias."}, {"SETTINGSUSER_MISCSETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es diversas"}, {"SETTINGSUSER_TIMEOUTPERIOD", "O per\u00c3\u00adodo de tempo de limite pode ser -1 ou estar dentro do intervalo [5..120]. Insira um n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"SETTINGSUSER_NEVERTIMEOUT", "nunca ultrapassa o tempo limite"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "Tempo limite de inatividade"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "Painel de sele\u00c3\u00a7\u00c3\u00a3o do dispositivo, Mostrar:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u00cdcones"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "Texto"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u00cdcones e Texto (padr\u00c3\u00a3o)"}, {"MAX_ROWS_PER_SCREEN", "N\u00c3\u00bamero m\u00c3\u00a1ximo de linhas por tela:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "Intervalo: [10..100] (Aplic\u00c3\u00a1vel apenas a telas paginadas n\u00c3\u00a3o reportadas)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "O valor do n\u00c3\u00bamero m\u00c3\u00a1ximo de linhas por tela est\u00c3\u00a1 fora do intervalo v\u00c3\u00a1lido. Insira um n\u00c3\u00bamero entre 10 e 100 inclusive."}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "O Valor do n\u00c3\u00bamero m\u00c3\u00a1ximo de linhas por tela n\u00c3\u00a3o \u00c3\u00a9 um n\u00c3\u00bamero. Insira um n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es do painel de salvamento autom\u00c3\u00a1tico:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1:Salvamento autom\u00c3\u00a1tico n\u00c3\u00a3o habilitado ou Intervalo:[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "As Configura\u00c3\u00a7\u00c3\u00b5es do painel de salvamento autom\u00c3\u00a1tico podem ser -1 ou estar dentro do intervalo [1..60]. Insira um n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"CHANGEPASSWORD_OLD", "Senha atual"}, {"CHANGEPASSWORD_NEW", "Nova senha"}, {"CHANGEPASSWORD_CONFIRM", "Confirmar nova senha"}, {"CHANGEPASSWORD_USER", "Usu\u00c3\u00a1rio"}, {"CUSTLOGSETTINGS_NOTE1", "Nota: pode inserir v\u00c3\u00a1rios endere\u00c3\u00a7os de e-mail separados por um ponto e v\u00c3\u00adrgula (\";\")"}, {"CUSTLOGSETTINGS_SECTITLE1", "Programa\u00c3\u00a7\u00c3\u00a3o do destinat\u00c3\u00a1rio do alerta de e-mail"}, {"CUSTLOGSETTINGS_WEEKDAY", "Dia da semana:"}, {"CUSTLOGSETTINGS_SCHED1", "Programa\u00c3\u00a7\u00c3\u00a3o 1:"}, {"CUSTLOGSETTINGS_SCHED2", "Programa\u00c3\u00a7\u00c3\u00a3o 2:"}, {"CUSTLOGSETTINGS_SCHED3", "Programa\u00c3\u00a7\u00c3\u00a3o 3:"}, {"CUSTLOGSETTINGS_SAT", "S\u00c3\u00a1bado"}, {"CUSTLOGSETTINGS_SUN", "Domingo"}, {"CUSTLOGSETTINGS_WEEKEND", "Fim de semana:"}, {"CUSTLOGSETTINGS_HRS", "horas"}, {"CUSTLOGSETTINGS_TO", "para"}, {"CUSTLOGSETTINGS_ALERTFMT", "Prefer\u00c3\u00aancia de formato de alerta de e-mail"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "Cont\u00c3\u00a9m texto, cores, imagens e links. Apenas compat\u00c3\u00advel com software de e-mail habilitada para HTML."}, {"CUSTLOGSETTINGS_TEXT", "Texto sem formata\u00c3\u00a7\u00c3\u00a3o"}, {"CUSTLOGSETTINGS_TEXT_DESC", "Cont\u00c3\u00a9m todos os detalhes em texto sem formata\u00c3\u00a7\u00c3\u00a3o. Compat\u00c3\u00advel com todo o software de e-mail."}, {"CUSTLOGSETTINGS_PAGER", "Texto sem formata\u00c3\u00a7\u00c3\u00a3o (Simples)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "Cont\u00c3\u00a9m uma pequena mensagem em texto sem formata\u00c3\u00a7\u00c3\u00a3o. Ideal para pagers, SMS (Short Message Service \u00e2\u20ac\u201c Servi\u00c3\u00a7o de mensagens curtas) e aplicativos semelhantes."}, {"LOGCONFIG_SECTITLE_1", "Excluir"}, {"LOGCONFIG_SECTITLE_2", "Mensagens de log"}, {"LOGCONFIG_DELLABEL", "Excluir mensagens de log mais antigas que:"}, {"LOGCONFIG_MONTH", "M\u00c3\u00aas"}, {"LOGCONFIG_DAY", "Dia"}, {"LOGCONFIG_YEAR", "Ano"}, {"LOGCONFIG_FORLABEL", "para"}, {"LOGCONFIG_DOMAIN", "Dom\u00c3\u00adnio"}, {"SESSIONS_NOSESSALERT", "N\u00c3\u00a3o existe(m) sess\u00c3\u00a3o(\u00c3\u00b5es) a terminar."}, {"SESSIONS_NOSESSSELALERT", "Selecione sess\u00c3\u00a3o(\u00c3\u00b5es) a terminar."}, {"SESSIONS_RUSUREALERT", "Tem certeza de que deseja terminar a(s) sess\u00c3\u00a3o(\u00c3\u00b5es) selecionada(s)?"}, {"SESSIONS_TITLE", "Sess\u00c3\u00b5es atuais"}, {"SESSIONS_COL1", "Nome de usu\u00c3\u00a1rio"}, {"SESSIONS_COL2", "Endere\u00c3\u00a7o IP"}, {"SESSIONS_COL3", "Hora de login"}, {"SESSIONS_COL4", "Hora do \u00c3\u00baltimo acesso"}, {"SESSIONS_COL5", "Nome do dom\u00c3\u00adnio"}, {"SESSIONS_END", "Terminar sess\u00c3\u00b5es selecionadas"}, {"LOGINVPSSETTINGS_LABEL1", "Endere\u00c3\u00a7o do servidor SMTP"}, {"LOGINVPSSETTINGS_LABEL11", "Porta SMTP"}, {"LOGINVPSSETTINGS_LABEL2", "Endere\u00c3\u00a7o de e-mail do remetente"}, {"LOGINVPSSETTINGS_LABEL3", "Endere\u00c3\u00a7o de e-mail do administrador"}, {"LOGINVPSSETTINGS_LABEL3_5", "TLS do usu\u00c3\u00a1rio"}, {"LOGINVPSSETTINGS_LABEL4", "Autentica\u00c3\u00a7\u00c3\u00a3o do usu\u00c3\u00a1rio"}, {"LOGINVPSSETTINGS_LABEL5", "Usu\u00c3\u00a1rio"}, {"LOGINVPSSETTINGS_LABEL6", "Senha"}, {"LOGINVPSSETTINGS_NOTE", "Nota: Para alterar os endere\u00c3\u00a7os de e-mail do destinat\u00c3\u00a1rio, use Console > Alertas > Configura\u00c3\u00a7\u00c3\u00b5es de base"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "N\u00c3\u00advel de depura\u00c3\u00a7\u00c3\u00a3o do sistema:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "A configura\u00c3\u00a7\u00c3\u00a3o dos n\u00c3\u00adveis de depura\u00c3\u00a7\u00c3\u00a3o permite uma r\u00c3\u00a1pida resolu\u00c3\u00a7\u00c3\u00a3o de potenciais problemas do aplicativo. Esta a\u00c3\u00a7\u00c3\u00a3o cria arquivos log de depura\u00c3\u00a7\u00c3\u00a3o em todos os sistemas nesta implanta\u00c3\u00a7\u00c3\u00a3o e pode dificultar o desempenho do aplicativo e tamb\u00c3\u00a9m preencher espa\u00c3\u00a7o em disco. Deve redefinir para<i>Sem depura\u00c3\u00a7\u00c3\u00a3o</i> para uma opera\u00c3\u00a7\u00c3\u00a3o normal logo que o potencial problema tenha sido resolvido."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "Nota: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;O n\u00c3\u00advel de depura\u00c3\u00a7\u00c3\u00a3o s\u00c3\u00b3 deve ser configurado baseado nas orienta\u00c3\u00a7\u00c3\u00b5es de suporte t\u00c3\u00a9cnico da SonicWall"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp; Quanto mais alto for o n\u00c3\u00advel de depura\u00c3\u00a7\u00c3\u00a3o, mais recursos do sistema ser\u00c3\u00a3o usados para gerar dados de depura\u00c3\u00a7\u00c3\u00a3o e por sua vez diminuir o desempenho geral do sistema."}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "Sincronizar informa\u00c3\u00a7\u00c3\u00b5es de c\u00c3\u00b3digos de modelos agora"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "Deseja atualizar os endere\u00c3\u00a7os do servidor SMTP para todos os relat\u00c3\u00b3rios programados com o novo endere\u00c3\u00a7o do servidor SMTP?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "Informa\u00c3\u00a7\u00c3\u00b5es sobre falha ao sincronizar c\u00c3\u00b3digos de modelos."}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "Exibir relat\u00c3\u00b3rios herdados (pr\u00c3\u00a9 Analyzer 7.0) "}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "Impor seguran\u00c3\u00a7a de senha"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "N\u00c3\u00bamero de dias para impor a altera\u00c3\u00a7\u00c3\u00a3o da senha"}, {"GENVPSSTATUS_INVALIDIP", "Credenciais de dispositivo incompletas dispon\u00c3\u00adveis para um login com \u00c3\u00aaxito neste momento"}, {"GENVPSSTATUS_NODE", " N\u00c3\u00b3: "}, {"GENVPSSTATUS_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es"}, {"GENVPSSTATUS_SYSLOG", "Servidores syslog"}, {"GENVPSSTATUS_IPINFO", "Endere\u00c3\u00a7o IP"}, {"GENVPSSTATUS_PORT", "Porta"}, {"GENVPSSTATUS_SYNCNOW", "Sincronizar as configura\u00c3\u00a7\u00c3\u00b5es com o dispositivo e as informa\u00c3\u00a7\u00c3\u00b5es sobre a licen\u00c3\u00a7a com With MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "No\u00c3\u00a7\u00c3\u00b5es b\u00c3\u00a1sicas sobre o Analyzer"}, {"GENVPSSTATUS_GETSTARTOPEN", "Abrir instru\u00c3\u00a7\u00c3\u00b5es iniciais em uma nova janela"}, {"GENVPSSTATUS_LOGINTITLE", "Login do dispositivo"}, {"GENVPSSTATUS_LOGINHTTP", "Usar login inseguro (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "Usar login seguro (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "Login"}, {"GENVPSSTATUS_CATEGORIES", "Categorias syslog"}, {"GENVPSSTATUS_REFRESH_MSG", "Nota: a informa\u00c3\u00a7\u00c3\u00a3o acerca do estado \u00c3\u00a9 atualizada cada 24 horas. Para atualizar a informa\u00c3\u00a7\u00c3\u00a3o, clique no link acima. Para alterar estas configura\u00c3\u00a7\u00c3\u00b5es, voc\u00c3\u00aa deve efetuar login no dispositivo e atualiz\u00c3\u00a1-las manualmente."}, {"GENVPSSTATUS_LOG_TYPE", "Tipo de log"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "Manuten\u00c3\u00a7\u00c3\u00a3o do sistema"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "Erros do sistema"}, {"GENVPSSTATUS_BLOCKED_WEB", "Sites da Web bloqueados"}, {"GENVPSSTATUS_BLOCKED_JAVA", "Java bloqueado, etc."}, {"GENVPSSTATUS_USER_ACTIVITY", "Atividade do usu\u00c3\u00a1rio"}, {"GENVPSSTATUS_VPN_TCP_STATS", "Estat\u00c3\u00adsticas TCP do VPN"}, {"GENVPSSTATUS_ATTACKS", "Ataques"}, {"GENVPSSTATUS_DROPPED_TCP", "TCP descartado"}, {"GENVPSSTATUS_DROPPED_UDP", "UDP descartado"}, {"GENVPSSTATUS_DROPPED_ICMP", "ICMP descartado"}, {"GENVPSSTATUS_NETWORK_DEBUG", "Depura\u00c3\u00a7\u00c3\u00a3o de rede"}, {"GENVPSSTATUS_DENIED_LAN_IP", "IP da LAN negado"}, {"GENVPSSTATUS_LICENSE_STATUS", "Estado da licen\u00c3\u00a7a do Analyzer"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;Execute as seguintes etapas para resolver o problema \\\"N\u00c3\u00a3o licenciado\\\":<br/>&nbsp;&nbsp;Etapa 1 - <a href=\"http://www.MySonicWall.com\" target=new>Clique aqui para verificar ou ativar a licen\u00c3\u00a7a em MySonicWall.com.</a><br/>&nbsp;&nbsp;Etapa 2 - Se a licen\u00c3\u00a7a estiver ativa, <a href=\"javascript:synchronizeInfo();\">clique aqui para sincronizar as informa\u00c3\u00a7\u00c3\u00b5es da licen\u00c3\u00a7a.</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(Existe um problema de comunica\u00c3\u00a7\u00c3\u00a3o ao tentar acessar MySonicWall.com)<br/>&nbsp;&nbsp;Certifique-se que o servidor Web GMSVP est\u00c3\u00a1 habilitado para acessar www.MySonicWall.com."}, {"COMPONENT", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"COMPONENT_LC", "componente"}, {"FILE_SIZE", "Tamanho do arquivo (KB)"}, {"IP_ADDRESS", "Endere\u00c3\u00a7o IP"}, {"CURRENT_VERSION", "Vers\u00c3\u00a3o atual"}, {"LATEST_VERSION", "Vers\u00c3\u00a3o mais recente"}, {"RELEASE_NOTES", "Notas de vers\u00c3\u00a3o"}, {"LAST_DOWNLOADED", "\u00c3\u0161ltimo baixado"}, {"RELEASE_DATE", "Data de lan\u00c3\u00a7amento"}, {"DOWNLD_NEW", "Baixar novo "}, {"SOFTWARE_UPDATES", "Atualiza\u00c3\u00a7\u00c3\u00b5es de software"}, {"DEL_SEL_COMPS_FROM_LIST", "Excluir componentes selecionados da lista"}, {"LIC_DELETE_MSG", "N\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel excluir o"}, {"LIC_PATCH_MSG", "Os patches n\u00c3\u00a3o est\u00c3\u00a3o dispon\u00c3\u00adveis e n\u00c3\u00a3o ser\u00c3\u00a3o baixados para os seguintes componentes:"}, {"LIC_NEW_GMS_SW", "Novo software GMS"}, {"LIC_CONSOLE", "Console"}, {"LIC_SELECT_COMPONENT", "Selecione um componente."}, {"CHAP_TESTING", "Teste de CHAP"}, {"CHAP_RADIUS_TESTING_MSG", "Note que a autentica\u00c3\u00a7\u00c3\u00a3o CHAP apenas funcionar\u00c3\u00a1 com um servidor RADIUS que a suporta e, em alguns casos, precisar\u00c3\u00a1 que o servidor seja configurado para armazenar senhas de modo revers\u00c3\u00advel."}, {"CHAP_LDAP_TESTING_MSG", "Note que a autentica\u00c3\u00a7\u00c3\u00a3o CHAP s\u00c3\u00b3 funcionar\u00c3\u00a1 com um servidor que suporta a recupera\u00c3\u00a7\u00c3\u00a3o de senhas de usu\u00c3\u00a1rio atrav\u00c3\u00a9s de LDAPe, em alguns casos, \u00c3\u00a9 necess\u00c3\u00a1rio configurar o servidor LDAP para armazenar as senhas de modo revers\u00c3\u00advel."}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "Note tamb\u00c3\u00a9m que o CHAP n\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel com o Microsoft Active Directory ou Novell eDirectory"}, {"PERF_NO_SUMMARIZER", "N\u00c3\u00a3o est\u00c3\u00a3o atualmente dispon\u00c3\u00adveis nenhumas m\u00c3\u00a9tricas para o desempenho do resumidor."}, {"PERF_SUMMARIZER_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es sobre o resumidor"}, {"PERF_SUMMARIZER", "Resumidor"}, {"PERF_SYSLOG_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es do arquivo de dados"}, {"PERF_SYSLOG_FILE_TYPE", "Tipo do arquivo de dados"}, {"PERF_FILE_STATS", "Estat\u00c3\u00adsticas do arquivo"}, {"PERF_OLDEST", "O mais antigo"}, {"PERF_PRD_LABEL", "Arquivos processados"}, {"PERF_SRC_LABEL", "Arquivos agrupados"}, {"PERF_UNP_LABEL", "Arquivos n\u00c3\u00a3o processados"}, {"PERF_NMM_LABEL", "Arquivos n\u00c3\u00a3o meus"}, {"PERF_IMF_LABEL", "Arquivos infetados"}, {"PERF_ZIP_LABEL", "Arquivos arquivados"}, {"PERF_PRE_LABEL", "Arquivos de log inv\u00c3\u00a1lidos"}, {"PERF_UPE_LABEL", "Arquivos mal carregados"}, {"PERF_UPD_LABEL", "Arquivos carregados"}, {"PERF_UPL_LABEL", "Fazer upload dos arquivos pendentes"}, {"PERF_RDB_LABEL", "Banco de dados de relat\u00c3\u00b3rios"}, {"PERF_OPT_STATE_LABEL", "Estado de otimiza\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_OPT_PENDING_LABEL", "Otimiza\u00c3\u00a7\u00c3\u00a3o pendente"}, {"PERF_OPT_TOTAL_LABEL", "Total de dias sem otimiza\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_BKP_LABEL", "Arquivos de backup"}, {"PERF_FILE_ELEMENT", "Arquivos - "}, {"PERF_THREAD_INFO", "Detalhes do processo do resumidor"}, {"PERF_NUM_THREADS", "N\u00c3\u00bamero de segmentos atualmente em execu\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_SUMMARIZER_IDLE", "O resumidor est\u00c3\u00a1 ocioso."}, {"PERF_THREAD", "Segmento"}, {"PERF_FIREWALL", "Dispositivo"}, {"PERF_FILE", "Arquivo"}, {"PERF_STATE", "Estado"}, {"PERF_START_TIME", "Iniciou em"}, {"PERF_SUMMARIZER_STATS", "Estat\u00c3\u00adsticas do resumidor"}, {"PERF_PAST_24", "Nas \u00c3\u00baltimas 24 horas (desde "}, {"PERF_PAST_7_DAYS", "Nos \u00c3\u00baltimos 7 dias (desde "}, {"PERF_PAST_30_DAYS", "Nos \u00c3\u00baltimos 30 dias (desde "}, {"PERF_NUM_SYSLOGS", "N\u00c3\u00bamero de syslogs resumidos em "}, {"PERF_AVERAGE_PER_MINUTE", "M\u00c3\u00a9dia de syslog resumido por minuto"}, {"PERF_NOT_ACTIVE", "N\u00c3\u00a3o foram resumidos dados nos \u00c3\u00baltimos 7 dias"}, {"PERF_NO_GEN2", "As m\u00c3\u00a9tricas para o desempenho do resumidor est\u00c3\u00a3o dispon\u00c3\u00adveis apenas para a configura\u00c3\u00a7\u00c3\u00a3o do resumidor distribu\u00c3\u00addo"}, {"PERF_MEM_USAGE", "Consumo de mem\u00c3\u00b3ria do resumidor"}, {"PERF_LAST_RUN", "Hora da \u00c3\u00baltima execu\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_NEXT_RUN", "Hora da pr\u00c3\u00b3xima execu\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_SUMMARIZER_STATISTICS", "Estado do resumidor durante 7 dias"}, {"PERF_SUMMARIZER_UTILIZATION", "Utiliza\u00c3\u00a7\u00c3\u00a3o do resumidor"}, {"PERF_TOTAL_RUN_TIME", "M\u00c3\u00a9dia do tempo de execu\u00c3\u00a7\u00c3\u00a3o por dia"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "Capacidade estimada"}, {"PERF_METRIC_SYSLOG", "(milh\u00c3\u00b5es de syslog/dia)"}, {"PERF_METRIC_XML", "(arquivos XML/dia)"}, {"PERF_TOTAL_LOAD", "M\u00c3\u00a9dia de carregamento"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "M\u00c3\u00a9dia de syslog resumido (milh\u00c3\u00b5es/dia)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "M\u00c3\u00a9dia de arquivos XML resumidos por dia"}, {"PERF_NO_DATA_SUMMARIZED", "N\u00c3\u00a3o foram resumidos dados nos \u00c3\u00baltimos 7 dias"}, {"PERF_REPORTING_INFO", "Detalhes de relat\u00c3\u00b3rio"}, {"PERF_TOP_UNITS", "Dispositivos principais de uso do resumidor"}, {"PERF_UNIT_NAME", "Dispositivo"}, {"PERF_REPORTING_DB_SIZE", "Tamanho do banco de dados de relat\u00c3\u00b3rios"}, {"PERF_BACKUPS_DIR_SIZE", "Tamanho do diret\u00c3\u00b3rio do backup"}, {"PERF_SYSLOG_DIR_SIZE", "Tamanho do diret\u00c3\u00b3rio de dados n\u00c3\u00a3o processados"}, {"PERF_CACHE_SIZE", "Tamanho do cache estimado"}, {"PERF_BAD_DIR_SIZE", "Tamanho do diret\u00c3\u00b3rio de dados inv\u00c3\u00a1lidos"}, {"PERF_PER_SUMMARIZER_INFO", "Detalhes sobre o resumidor em "}, {"PERF_AVG_UTILIZATION", "Uso m\u00c3\u00a9dio do resumidor"}, {"PERF_PEAK_UTILIZATION", "Uso m\u00c3\u00a1ximo do resumidor"}, {"NMM_DETAILS", "Syslogs enviados por dispositivos que n\u00c3\u00a3o est\u00c3\u00a3o em Relat\u00c3\u00b3rios e gerenciamento"}, {"NMM_SERIALS", "# de s\u00c3\u00a9rie de dispositivos para o resumidor em "}, {"NO_NMM_SERIAL", "Nenhum"}, {"MISCONFIGURED_SERIALS", "# de s\u00c3\u00a9rie de dispositivos que est\u00c3\u00a3o mal configurados "}, {"NO_MISCONFIGURED_SERIALS", "Nenhum "}, {"NMM_MSG_NOTE", "Nota: "}, {"NMM_MSG1", "* Efetue login no dispositivo e desabilite os syslogs"}, {"NMM_MSG2", "* Se n\u00c3\u00a3o tiver acesso ao dispositivo, use as regras para o gateway para bloquear as s\u00c3\u00a9ries"}, {"NMM_MSG3", "* Para corrigir as s\u00c3\u00a9ries mal configuradas, efetue login no dispositivo e altere as configura\u00c3\u00a7\u00c3\u00b5es GMS"}, {"NMM_MSG4", "* As s\u00c3\u00a9ries listadas aqui atualizam-se a cada 12 horas"}, {"PERF_SUMMARIZER_STATUS", "Estado"}, {"PERF_DEPLOYMENT_STATUS", "Estado da implanta\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_MSG_HIGH_CAPACITY", "O resumidor est\u00c3\u00a1 operando com uma capacidade muito alta, reatribua unidades."}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "Um dos resumidores (ou mais) na implanta\u00c3\u00a7\u00c3\u00a3o excedeu a sua capacidade de opera\u00c3\u00a7\u00c3\u00a3o nos \u00c3\u00baltimos 7 dias. Verifique a coluna de estado da sec\u00c3\u00a7\u00c3\u00a3o de utiliza\u00c3\u00a7\u00c3\u00a3o do resumidor e visite o site GMS para mais informa\u00c3\u00a7\u00c3\u00b5es sobre como gerenciar a sua implanta\u00c3\u00a7\u00c3\u00a3o."}, {"PERF_MSG_REASSIGN_UNITS", "Reatribua unidades entre os agentes."}, {"PERF_MSG_DISK_LOW", "Espa\u00c3\u00a7o de disco insuficiente, adicione discos ou aumente a aloca\u00c3\u00a7\u00c3\u00a3o do disco."}, {"PERF_MSG_DISK_LOW_RDB", "Espa\u00c3\u00a7o de disco insuficiente para o banco de dados de relat\u00c3\u00b3rios, adicione discos ou aumente a aloca\u00c3\u00a7\u00c3\u00a3o do disco."}, {"PERF_MSG_CAPACITY_PLANNING", "Visite o<a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>site do GMS</a> para mais informa\u00c3\u00a7\u00c3\u00b5es sobre como gerenciar a sua implanta\u00c3\u00a7\u00c3\u00a3o."}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "Nota: a m\u00c3\u00a9dia de carregamento e a capacidade estimada s\u00c3\u00a3o espec\u00c3\u00adficas da implanta\u00c3\u00a7\u00c3\u00a3o e poder\u00c3\u00a3o variar consoante os arquivos."}, {"PERF_OF", "de"}, {"PERF_ON_DISK", "no disco"}, {"PERF_OPT_EXPORT_PROGRESS", "Exporta\u00c3\u00a7\u00c3\u00a3o em progresso"}, {"PERF_OPT_EXPORT_DONE", "Exporta\u00c3\u00a7\u00c3\u00a3o conclu\u00c3\u00adda"}, {"PERF_OPT_DELETE_PROGRESS", "Exclus\u00c3\u00a3o em progresso"}, {"PERF_OPT_DELETE_DONE", "Exclus\u00c3\u00a3o conclu\u00c3\u00adda"}, {"PERF_OPT_IMPORT_PROGRESS", "Importa\u00c3\u00a7\u00c3\u00a3o em progresso"}, {"PERF_OPT_QUEUED_UP", "Enfileirado"}, {"PERF_OPT_IDLE", "Ocioso"}, {"PERF_OPT_CURRENT", "Atual"}, {"PERF_OPT_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es de otimiza\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_XML_FILE_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es do arquivo XML"}, {"PERF_XML_LABEL", "Arquivos XML n\u00c3\u00a3o processados"}, {"PERF_XPG_LABEL", "Arquivos em processamento"}, {"PERF_XPD_LABEL", "Arquivos armazenados"}, {"PERF_XPE_LABEL", "Arquivos inv\u00c3\u00a1lidos"}, {"ALERT_NO_ALERTS", "N\u00c3\u00a3o existem alertas ativos para esta se\u00c3\u00a7\u00c3\u00a3o neste momento."}, {"ALERT_DESCRIPTION", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"ALERT_NODE_NAME", "Nome da unidade"}, {"ALERT_SEVERITY", "Gravidade"}, {"ALERT_LISTING", "Listagem de alertas"}, {"CAL_SUN", "dom."}, {"CAL_MON", "seg."}, {"CAL_TUE", "ter."}, {"CAL_WED", "qua."}, {"CAL_THU", "qui."}, {"CAL_FRI", "sex."}, {"CAL_SAT", "s\u00c3\u00a1b."}, {"CAL_JAN", "janeiro"}, {"CAL_FEB", "fevereiro"}, {"CAL_MAR", "mar\u00c3\u00a7o"}, {"CAL_APR", "abril"}, {"CAL_MAY", "maio"}, {"CAL_JUN", "junho"}, {"CAL_JUL", "julho"}, {"CAL_AUG", "agosto"}, {"CAL_SEP", "setembro"}, {"CAL_OCT", "outubro"}, {"CAL_NOV", "novembro"}, {"CAL_DEC", "dezembro"}, {Integer.toString(1), "Tarefa executada com \u00c3\u00aaxito: "}, {Integer.toString(0), "Falha na execu\u00c3\u00a7\u00c3\u00a3o da tarefa."}, {Integer.toString(42), "Tarefa executada com \u00c3\u00aaxito retornou com AVISOS: "}, {Integer.toString(10), "Comando executado com \u00c3\u00aaxito."}, {Integer.toString(-12), "A execu\u00c3\u00a7\u00c3\u00a3o do comando falhou parcial ou completamente."}, {Integer.toString(-57), "Privil\u00c3\u00a9gios de usu\u00c3\u00a1rio insuficientes para executar esta a\u00c3\u00a7\u00c3\u00a3o."}, {Integer.toString(-58), "Sem informa\u00c3\u00a7\u00c3\u00b5es para processar o comando."}, {Integer.toString(-59), "A a\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ser executada em nenhum momento."}, {Integer.toString(-56), "Apenas os usu\u00c3\u00a1rios do grupo do Administrador do Dom\u00c3\u00adnioLocal possuem privil\u00c3\u00a9gios para executar este comando."}, {Integer.toString(2), "Foi efetuada uma verifica\u00c3\u00a7\u00c3\u00a3o de novo firmware com \u00c3\u00aaxito, mas n\u00c3\u00a3o havia nenhum firmware dispon\u00c3\u00advel "}, {Integer.toString(3), "A opera\u00c3\u00a7\u00c3\u00a3o back-end foi previamente executada com \u00c3\u00aaxito para a tarefa: "}, {Integer.toString(4), "A opera\u00c3\u00a7\u00c3\u00a3o de atualiza\u00c3\u00a7\u00c3\u00a3o de banco de dados foi efetuada com \u00c3\u00aaxito para a tarefa: "}, {Integer.toString(5), "Est\u00c3\u00a3o dispon\u00c3\u00adveis unidades para atualizar e para registrar"}, {Integer.toString(6), "A avalia\u00c3\u00a7\u00c3\u00a3o gratuita n\u00c3\u00a3o foi aplicada ao dispositivo"}, {Integer.toString(7), "Est\u00c3\u00a3o dispon\u00c3\u00adveis unidades para atualizar, mas n\u00c3\u00a3o para registrar"}, {Integer.toString(8), "Est\u00c3\u00a3o dispon\u00c3\u00adveis unidades para registrar, mas n\u00c3\u00a3o para atualizar"}, {Integer.toString(-1), "Alguns par\u00c3\u00a2metros do dispositivo n\u00c3\u00a3o foram configurados corretamente."}, {Integer.toString(-53), "O dispositivo n\u00c3\u00a3o suporta logins de administrador simult\u00c3\u00a2neos."}, {Integer.toString(-63), "Credenciais de login do dispositivo ausentes."}, {Integer.toString(-69), "\u00c3\u20ac espera de obter o endere\u00c3\u00a7o IP do login atual."}, {Integer.toString(-70), "JVM OOM: mem\u00c3\u00b3ria dispon\u00c3\u00advel insuficiente para continuar, a tarefa ser\u00c3\u00a1 repetida na pr\u00c3\u00b3xima execu\u00c3\u00a7\u00c3\u00a3o"}, {Integer.toString(-64), "N\u00c3\u00a3o foi poss\u00c3\u00advel obter a p\u00c3\u00a1gina de autentica\u00c3\u00a7\u00c3\u00a3o do dispositivo gerenciado para efetuar o login."}, {Integer.toString(-64) + "_TT", "- A unidade n\u00c3\u00a3o \u00c3\u00a9 acess\u00c3\u00advel no endere\u00c3\u00a7o gerenciado.\n- A unidade n\u00c3\u00a3o suporta o login simult\u00c3\u00a2neo,\n verifique se um navegador tem login efetuado diretamente na unidade."}, {Integer.toString(-65), "Nenhuma resposta \u00c3\u00a0 postagem de login."}, {Integer.toString(-83), "O login falhou porque os n\u00c3\u00bameros de s\u00c3\u00a9rie n\u00c3\u00a3o coincidem."}, {Integer.toString(-83) + "_TT", "- O n\u00c3\u00bamero de s\u00c3\u00a9rie especificado ao adicionar a unidade ao GMS\n n\u00c3\u00a3o corresponde com o da unidade."}, {Integer.toString(-84), "O login falhou porque o modo de login especificado \u00c3\u00a9 inv\u00c3\u00a1lido."}, {Integer.toString(-84) + "_TT", "- O modo de login especificado n\u00c3\u00a3o pertence \u00c3\u00a0 lista\n de modos permitidos."}, {Integer.toString(-2), "A senha ou o nome de usu\u00c3\u00a1rio do dispositivo estavam incorretos."}, {Integer.toString(-918), "[BR]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-918), "[BR] The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "A unidade usa um certificado SSL com uma assinatura MD5 que, por motivos de seguran\u00c3\u00a7a, j\u00c3\u00a1 n\u00c3\u00a3o \u00c3\u00a9 suportado. Gere novamente o certificado para gerenciar esta unidade."}, {Integer.toString(-917), "A unidade n\u00c3\u00a3o tem uma licen\u00c3\u00a7a para executar esta tarefa."}, {Integer.toString(-71), "Url de acesso inv\u00c3\u00a1lido \u00c3\u00a0 unidade."}, {Integer.toString(-71) + "_TT", "- Endere\u00c3\u00a7o IP pode n\u00c3\u00a3o ter sido obtido pela unidade."}, {Integer.toString(-72), "Falha na solicita\u00c3\u00a7\u00c3\u00a3o do estado de xml."}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "Falha na solicita\u00c3\u00a7\u00c3\u00a3o do estado de xml, nenhuma resposta recebida."}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "A solicita\u00c3\u00a7\u00c3\u00a3o de um arquivo de prefer\u00c3\u00aancias falhou."}, {Integer.toString(-950), "[BR]Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "A solicita\u00c3\u00a7\u00c3\u00a3o de um arquivo de prefer\u00c3\u00aancias falhou, nenhuma resposta recebida."}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "Arquivo de prefer\u00c3\u00aancias inv\u00c3\u00a1lido."}, {Integer.toString(-76) + "_TT", "- N\u00c3\u00a3o foi recebido nenhum arquivo de prefer\u00c3\u00aancias.\n- O arquivo de prefer\u00c3\u00aancias obtido pode estar corrompido.\n- O arquivo de prefer\u00c3\u00aancias pode estar incompleto."}, {Integer.toString(-77), "A aquisi\u00c3\u00a7\u00c3\u00a3o da unidade falhou."}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "Mensagem de pulsa\u00c3\u00a7\u00c3\u00a3o recebida."}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "Nenhuma mensagem de pulsa\u00c3\u00a7\u00c3\u00a3o recebida."}, {Integer.toString(-78) + "_TT", "- A mensagem de pulsa\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o foi enviada pela unidade.\n- A mensagem de pulsa\u00c3\u00a7\u00c3\u00a3o enviada pela unidade n\u00c3\u00a3o consegue chegar ao GMS.\n- O SA (t\u00c3\u00banel) n\u00c3\u00a3o \u00c3\u00a9 criado no gateway do GMS.\n- A regra que autoriza o syslog n\u00c3\u00a3o \u00c3\u00a9 criada no gateway do GMS.\n- Para unidades de inst\u00c3\u00a2ncia \u00e2\u20ac\u201c siga as instru\u00c3\u00a7\u00c3\u00b5es descritas em Nota: se\u00c3\u00a7\u00c3\u00a3o das implanta\u00c3\u00a7\u00c3\u00b5es de servi\u00c3\u00a7os distribu\u00c3\u00addos do console na Web."}, {Integer.toString(-79), "As mensagens de pulsa\u00c3\u00a7\u00c3\u00a3o recebidas n\u00c3\u00a3o podem ser descriptografadas."}, {Integer.toString(-79) + "_TT", "- A senha especificada ao adicionar a unidade ao GMS\n n\u00c3\u00a3o corresponde com a da unidade."}, {Integer.toString(13), "Mensagem syslog recebida."}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "Nenhuma mensagem syslog recebida."}, {Integer.toString(-81) + "_TT", "- A mensagem syslog n\u00c3\u00a3o foi enviada pela unidade.\n- A mensagem syslog enviada pela unidade n\u00c3\u00a3o consegue chegar ao GMS.\n- O SA (t\u00c3\u00banel) n\u00c3\u00a3o \u00c3\u00a9 criado no gateway do GMS.\n- A regra que autoriza o syslog n\u00c3\u00a3o \u00c3\u00a9 criada no gateway do GMS."}, {Integer.toString(-82), "As mensagens syslog n\u00c3\u00a3o podem ser descriptografadas."}, {Integer.toString(-82) + "_TT", "- A senha especificada ao adicionar a unidade ao GMS\n n\u00c3\u00a3o corresponde com a da unidade."}, {Integer.toString(12), "Unidade adicionada; aguardando que seja adquirida."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "Unidade modificada; aguardando que seja adquirida."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar \u00c3\u00a0 unidade. A unidade ou a rede poder\u00c3\u00a3o estar inativas."}, {Integer.toString(-4), "Pelo menos um par\u00c3\u00a2metro para a configura\u00c3\u00a7\u00c3\u00a3o do dispositivo est\u00c3\u00a1 incorreto."}, {Integer.toString(-5), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o site da Web do Registro da SonicWall."}, {Integer.toString(-6), "O c\u00c3\u00b3digo de Ativa\u00c3\u00a7\u00c3\u00a3o para a Atualiza\u00c3\u00a7\u00c3\u00a3o/Assinatura \u00c3\u00a9 inv\u00c3\u00a1lido."}, {Integer.toString(-7), "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 registrado."}, {Integer.toString(-8), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o site do Registro do SonicWall GMS ou est\u00c3\u00a1 inativo. Verifique o acesso \u00c3\u00a0 Internet a partir dos Servidores do SonicWall GMS."}, {Integer.toString(-9), "Nenhum dispositivo dispon\u00c3\u00advel para atualiza\u00c3\u00a7\u00c3\u00a3o."}, {Integer.toString(-10), "Tentativa de adicionar um dispositivo que j\u00c3\u00a1 est\u00c3\u00a1 sob o gerenciamento do SonicWall GMS."}, {Integer.toString(-11), "Tentativa de configurar um dispositivo inv\u00c3\u00a1lido."}, {Integer.toString(-15), "Tentativa de criar uma Regra para um Servi\u00c3\u00a7o n\u00c3\u00a3o existente."}, {Integer.toString(-16), "Viola\u00c3\u00a7\u00c3\u00a3o da Licen\u00c3\u00a7a da SonicWall."}, {Integer.toString(-17), "Erro interno do SonicWall GMS."}, {Integer.toString(-18), "Erro no download da Lista de filtragem de conte\u00c3\u00bado."}, {Integer.toString(-19), "Tentativa de excluir um Servi\u00c3\u00a7o para o qual existe uma Regra."}, {Integer.toString(-47), "N\u00c3\u00a3o foi poss\u00c3\u00advel contatar o servidor do AV"}, {Integer.toString(-20), "Erro interno do AV"}, {Integer.toString(-21), "Tarefa do AV pendente"}, {Integer.toString(-22), "O c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o do AV \u00c3\u00a9 inv\u00c3\u00a1lido."}, {Integer.toString(-23), "O c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o do AV j\u00c3\u00a1 est\u00c3\u00a1 em uso."}, {Integer.toString(-24), "A senha do AV est\u00c3\u00a1 incorreta."}, {Integer.toString(-25), "Erro de contagem da renova\u00c3\u00a7\u00c3\u00a3o do AV."}, {Integer.toString(-26), "Renova\u00c3\u00a7\u00c3\u00a3o do AV antes do tempo."}, {Integer.toString(-27), "Tentativa de gerenciar dispositivo mais antigo do que o recomendado."}, {Integer.toString(-28), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o Servidor de atualiza\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica ou est\u00c3\u00a1, de momento, inativo."}, {Integer.toString(-85), "A a\u00c3\u00a7\u00c3\u00a3o de gerenciamento de backups de sistema falhou."}, {Integer.toString(-29), "N\u00c3\u00a3o foi poss\u00c3\u00advel fazer o upload do firmware para o dispositivo."}, {Integer.toString(-62), "Tentativa de upload de firmware inv\u00c3\u00a1lido para o dispositivo."}, {Integer.toString(-60), "O tamanho m\u00c3\u00a1ximo de um Arquivo para atualiza\u00c3\u00a7\u00c3\u00a3o de firmware \u00c3\u00a9 de 4 MB."}, {Integer.toString(-31), "Erro na grava\u00c3\u00a7\u00c3\u00a3o de firmware no disco local."}, {Integer.toString(-30), "Erro no download do firmware. N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o Servidor de atualiza\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica ou est\u00c3\u00a1, de momento, indispon\u00c3\u00advel."}, {Integer.toString(-32), "Erro ao acessar o banco de dados."}, {Integer.toString(-33), "Erro ao configurar o dispositivo."}, {Integer.toString(-34), "Erro ao autenticar o usu\u00c3\u00a1rio."}, {Integer.toString(-68), "Dom\u00c3\u00adnio n\u00c3\u00a3o encontrado ou Nome de dom\u00c3\u00adnio inv\u00c3\u00a1lido."}, {Integer.toString(-35), "Erro ao atualizar a senha CMP."}, {Integer.toString(-36), "Sem unidades dispon\u00c3\u00adveis para registrar."}, {Integer.toString(-37), "N\u00c3\u00a3o foi poss\u00c3\u00advel contatar o Servidor do antiv\u00c3\u00adrus ou foi reportado um erro desconhecido pelo Servidor."}, {Integer.toString(-38), "Sem unidades dispon\u00c3\u00adveis para registrar ou atualizar."}, {Integer.toString(-39), "Ocorreu um problema ao adicionar um c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o ao banco de dados."}, {Integer.toString(-40), "Erro ao eliminar o c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o. N\u00c3\u00a3o existe um c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o desse tipo no banco de dados."}, {Integer.toString(-41), "Erro desconhecido ao eliminar o c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o."}, {Integer.toString(-48), "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o"}, {Integer.toString(-49), "Acesso negado \u00c3\u00a0 execu\u00c3\u00a7\u00c3\u00a3o de comandos CLI."}, {Integer.toString(-42), "N\u00c3\u00a3o foi poss\u00c3\u00advel atualizar o banco de dados com \u00c3\u00aaxito."}, {Integer.toString(-43), "N\u00c3\u00a3o foi poss\u00c3\u00advel enviar e-mail a um ou mais endere\u00c3\u00a7os."}, {Integer.toString(-44), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o TechSupport do dispositivo."}, {Integer.toString(-45), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o arquivo SPD do dispositivo."}, {Integer.toString(-46), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o Arquivo do certificado do dispositivo."}, {Integer.toString(-50), "N\u00c3\u00a3o foi poss\u00c3\u00advel sincronizar as informa\u00c3\u00a7\u00c3\u00b5es de monitoramento de estado do t\u00c3\u00banel."}, {Integer.toString(-51), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o arquivo RCF do dispositivo."}, {Integer.toString(-52), "Conta de usu\u00c3\u00a1rio desabilitada; Falha no login."}, {Integer.toString(-61), "A tarefa previamente executada necessitava reinicializa\u00c3\u00a7\u00c3\u00a3o, a tarefa ser\u00c3\u00a1 repetida no pr\u00c3\u00b3ximo intervalo."}, {Integer.toString(-229), "Para ativar este servi\u00c3\u00a7o, voc\u00c3\u00aa deve ter uma assinatura v\u00c3\u00a1lida de Prote\u00c3\u00a7\u00c3\u00a3o de e-mail."}, {Integer.toString(-230), "A sua vers\u00c3\u00a3o do Sonic OS n\u00c3\u00a3o suporta clustering (assinatura de licen\u00c3\u00a7a com v\u00c3\u00a1rios n\u00c3\u00b3s). Atualize ou use uma chave com um \u00c3\u00banico n\u00c3\u00b3."}, {Integer.toString(-231), "Voc\u00c3\u00aa n\u00c3\u00a3o pode misturar chaves de ativa\u00c3\u00a7\u00c3\u00a3o de diferentes modelos WANOPT."}, {Integer.toString(-232), "O seu modelo WANOPT n\u00c3\u00a3o suporta clustering (assinatura de licen\u00c3\u00a7a com v\u00c3\u00a1rios n\u00c3\u00b3s)."}, {Integer.toString(-201), "Erro com os par\u00c3\u00a2metros da API."}, {Integer.toString(-202), "O usu\u00c3\u00a1rio j\u00c3\u00a1 est\u00c3\u00a1 conectado."}, {Integer.toString(-203), "A API do SonicWall GMS n\u00c3\u00a3o est\u00c3\u00a1 implementada nesta vers\u00c3\u00a3o."}, {Integer.toString(-204), "A sess\u00c3\u00a3o n\u00c3\u00a3o existe."}, {Integer.toString(-205), "Sair da SonicWall GMS Shell"}, {Integer.toString(-206), "Os par\u00c3\u00a2metros da API est\u00c3\u00a3o em falta"}, {Integer.toString(-207), "Sem linhas para esta categoria"}, {Integer.toString(-208), "Nenhum c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o fornecido"}, {Integer.toString(-209), "Tipo de ativa\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o especificado"}, {Integer.toString(-210), "O endere\u00c3\u00a7o IP n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lido; a unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-211), "O comprimento indicado \u00c3\u00a9 menor do que o requerido; a unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-212), "A cadeia de caracteres s\u00c3\u00b3 pode conter caracteres hexadecimais; a Unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-213), "O endere\u00c3\u00a7o IP do Agendador em espera n\u00c3\u00a3o pode ser o mesmo que o do Agendador principal; a Unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-214), "Nenhum agendador foi encontrado no endere\u00c3\u00a7o IP especificado; a Unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-215), "Ocorreu um erro ao adicionar a unidade."}, {Integer.toString(-226), "Voc\u00c3\u00aa n\u00c3\u00a3o tem uma Licen\u00c3\u00a7a v\u00c3\u00a1lida."}, {Integer.toString(-225), "Ocorreu um erro ao analisar o XML de entrada"}, {Integer.toString(-228), "Conte\u00c3\u00bados inv\u00c3\u00a1lidos encontrados no XML de entrada"}, {Integer.toString(-216), "Tipo de relat\u00c3\u00b3rio inv\u00c3\u00a1lido ou desconhecido. D\u00c3\u00bavida quanto ao relat\u00c3\u00b3rio ser di\u00c3\u00a1rio, semanal ou mensal"}, {Integer.toString(-217), "Endere\u00c3\u00a7o de e-mail de destino inv\u00c3\u00a1lido. Pelo menos um endere\u00c3\u00a7o de destino v\u00c3\u00a1lido deve ser fornecido"}, {Integer.toString(-218), "Endere\u00c3\u00a7o de e-mail de origem inv\u00c3\u00a1lido"}, {Integer.toString(-219), "Endere\u00c3\u00a7o de servidor SMTP inv\u00c3\u00a1lido"}, {Integer.toString(-220), "Lista de relat\u00c3\u00b3rios inv\u00c3\u00a1lida. Pelo menos um ID do relat\u00c3\u00b3rio v\u00c3\u00a1lido deve ser fornecido"}, {Integer.toString(-221), "O Endere\u00c3\u00a7o IP de programa\u00c3\u00a7\u00c3\u00a3o do analisador registrado no banco de dados \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-222), "O N\u00c3\u00bamero da porta de programa\u00c3\u00a7\u00c3\u00a3o do analisador registrado no banco de dados \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-223), "Data de relat\u00c3\u00b3rio inv\u00c3\u00a1lida ou desconhecida. A data de relat\u00c3\u00b3rio fornecida tem de estar no formato mm/dd/aaaa"}, {Integer.toString(-224), "O ID de programa\u00c3\u00a7\u00c3\u00a3o fornecido n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lido"}, {Integer.toString(-502), "Senha ausente para o arquivo zip com prote\u00c3\u00a7\u00c3\u00a3o de senha"}, {Integer.toString(-503), "O n\u00c3\u00b3 fornecido \u00c3\u00a9 inv\u00c3\u00a1lido. Devem ser especificados o N\u00c3\u00bamero de s\u00c3\u00a9rie (para unitNode) ou o nome de exibi\u00c3\u00a7\u00c3\u00a3o (para groupNode)."}, {Integer.toString(-10001), "Ocorreu um erro de comunica\u00c3\u00a7\u00c3\u00a3o"}, {Integer.toString(-10002), "Ocorreu um erro ao analisar o XML de entrada"}, {Integer.toString(-10005), "Foi invocado um Componente desconhecido"}, {Integer.toString(-10006), "Foi invocado um m\u00c3\u00a9todo do AV desconhecido"}, {Integer.toString(-10011), "Houve uma tentativa de atualizar o AV ap\u00c3\u00b3s expira\u00c3\u00a7\u00c3\u00a3o."}, {Integer.toString(-10012), "Houve uma tentativa de atualizar o AV para um dispositivo n\u00c3\u00a3o registrado."}, {Integer.toString(-10013), "Houve uma tentativa de renovar o AV por menos n\u00c3\u00b3s do que este suporta atualmente."}, {Integer.toString(-10014), "Houve uma tentativa de renovar o AV antes do tempo."}, {Integer.toString(-10020), "Uma tarefa anterior para mudan\u00c3\u00a7a de senha do AV est\u00c3\u00a1 pendente."}, {Integer.toString(-10100), "Ocorreu um erro ao comunicar com o back-end do McAfee"}, {Integer.toString(-10101), "O McAfee n\u00c3\u00a3o consegue encontrar registros deste site."}, {Integer.toString(-10102), "O McAfee n\u00c3\u00a3o consegue encontrar correspond\u00c3\u00aancia com a senha antiga deste site."}, {Integer.toString(-10103), "O site do AV j\u00c3\u00a1 est\u00c3\u00a1 registrado."}, {Integer.toString(-10200), "Ocorreu um erro ao comunicar com o servidor de banco de dados do AV"}, {Integer.toString(-10201), "O n\u00c3\u00bamero de s\u00c3\u00a9rie do dispositivo j\u00c3\u00a1 est\u00c3\u00a1 registrado"}, {Integer.toString(-10202), "A chave de licen\u00c3\u00a7a fornecida j\u00c3\u00a1 est\u00c3\u00a1 em uso"}, {Integer.toString(-10203), "O antiv\u00c3\u00adrus nunca foi registrado para este dispositivo"}, {Integer.toString(-10204), "As v\u00c3\u00a1rias chaves fornecidas t\u00c3\u00aam de ter o mesmo per\u00c3\u00adodo"}, {Integer.toString(-10205), "N\u00c3\u00a3o \u00c3\u00a9 permitido usar a chave de avalia\u00c3\u00a7\u00c3\u00a3o gratuita para atualizar"}, {Integer.toString(-10206), "Valor ilegal fornecido para um ou mais par\u00c3\u00a2metros"}, {Integer.toString(-10210), "O n\u00c3\u00bamero de s\u00c3\u00a9rie fornecido n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lido"}, {Integer.toString(-10211), "A chave de licen\u00c3\u00a7a fornecida j\u00c3\u00a1 est\u00c3\u00a1 registrada"}, {Integer.toString(-10212), "A nova senha fornecida tem caracteres inv\u00c3\u00a1lidos ou n\u00c3\u00a3o tem 6 a 12 caracteres"}, {Integer.toString(-10213), "A senha do Antiv\u00c3\u00adrus fornecida \u00c3\u00a9 inv\u00c3\u00a1lida"}, {Integer.toString(-10214), "O c\u00c3\u00b3digo de OEM fornecido \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-10215), "O endere\u00c3\u00a7o IP de WAN fornecido \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-10220), "Um pedido anterior para este dispositivo ainda est\u00c3\u00a1 pendente"}, {Integer.toString(-10250), "O dispositivo j\u00c3\u00a1 est\u00c3\u00a1 registrado para o AV e precisa ser reativado."}, {Integer.toString(-10251), "O dispositivo n\u00c3\u00a3o pode ser reativado devido a senha inv\u00c3\u00a1lida"}, {Integer.toString(-10260), "N\u00c3\u00a3o foi poss\u00c3\u00advel encontrar o N\u00c3\u00bamero de s\u00c3\u00a9rie do grupo de compartilhamento de licen\u00c3\u00a7as fornecido"}, {Integer.toString(-10261), "O N\u00c3\u00bamero de s\u00c3\u00a9rie do grupo de compartilhamento de licen\u00c3\u00a7as \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-10262), "O dispositivo n\u00c3\u00a3o \u00c3\u00a9 membro de nenhum Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10263), "O dispositivo j\u00c3\u00a1 tem uma assinatura de antiv\u00c3\u00adrus ativa e n\u00c3\u00a3o pode se adicionado a um Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10264), "O dispositivo n\u00c3\u00a3o \u00c3\u00a9 membro deste Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10265), "N\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel remover o propriet\u00c3\u00a1rio do Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10266), "O dispositivo j\u00c3\u00a1 \u00c3\u00a9 membro de outro Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10267), "A nova Contagem de licen\u00c3\u00a7as fornecida excede o n\u00c3\u00bamero de licen\u00c3\u00a7as de Grupo de compartilhamento de licen\u00c3\u00a7as dispon\u00c3\u00adveis"}, {Integer.toString(-10004), "Um ou mais par\u00c3\u00a2metros para a opera\u00c3\u00a7\u00c3\u00a3o do antiv\u00c3\u00adrus est\u00c3\u00a3o em falta"}, {Integer.toString(-10300), "N\u00c3\u00a3o foi poss\u00c3\u00advel encontrar as informa\u00c3\u00a7\u00c3\u00b5es fornecidas sobre o parceiro TotalSecure"}, {Integer.toString(-10301), "Foi fornecida uma senha do parceiro TotalSecure incorreta"}, {Integer.toString(-10303), "A contagem de licen\u00c3\u00a7as do Antiv\u00c3\u00adrus fornecida \u00c3\u00a9 inv\u00c3\u00a1lida"}, {Integer.toString(-10304), "Houve uma tentativa de gerenciar um dispositivo que n\u00c3\u00a3o est\u00c3\u00a1 atribu\u00c3\u00addo ao parceiro TotalSecure"}, {Integer.toString(-20000), "Erro desconhecido ao comunicar com o servidor de registro back-end."}, {Integer.toString(-20101), "O contato solicitado j\u00c3\u00a1 foi registrado para o usu\u00c3\u00a1rio."}, {Integer.toString(-20102), "N\u00c3\u00a3o foi poss\u00c3\u00advel adicionar o contato solicitado para o usu\u00c3\u00a1rio."}, {Integer.toString(-20106), "N\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel modificar pois as informa\u00c3\u00a7\u00c3\u00b5es sobre o usu\u00c3\u00a1rio n\u00c3\u00a3o foram encontradas."}, {Integer.toString(-20111), "N\u00c3\u00a3o foram encontradas as informa\u00c3\u00a7\u00c3\u00b5es do contato."}, {Integer.toString(-20112), "N\u00c3\u00a3o foi poss\u00c3\u00advel modificar as informa\u00c3\u00a7\u00c3\u00b5es do contato."}, {Integer.toString(-20113), "N\u00c3\u00a3o foi poss\u00c3\u00advel eliminar as informa\u00c3\u00a7\u00c3\u00b5es do contato."}, {Integer.toString(-20116), "O dispositivo j\u00c3\u00a1 est\u00c3\u00a1 registrado em uma conta MySonicWall.com diferente."}, {Integer.toString(-20117), "O dispositivo especificado n\u00c3\u00a3o foi encontrado no sistema de registro do dispositivo."}, {Integer.toString(-20118), "N\u00c3\u00a3o foi poss\u00c3\u00advel registrar o dispositivo pelo sistema de registro back-end."}, {Integer.toString(-20119), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o estado para o dispositivo especificado."}, {Integer.toString(-20121), "O dispositivo especificado n\u00c3\u00a3o est\u00c3\u00a1 registrado."}, {Integer.toString(-20122), "A chave de ativa\u00c3\u00a7\u00c3\u00a3o especificada j\u00c3\u00a1 foi usada."}, {Integer.toString(-20123), "Foi usado um C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o inv\u00c3\u00a1lido."}, {Integer.toString(-20124), "Foi usado um C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o/Combina\u00c3\u00a7\u00c3\u00a3o de dispositivo inv\u00c3\u00a1lido."}, {Integer.toString(-20125), "A atualiza\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o foi conclu\u00c3\u00adda pelo sistema de registro back-end."}, {Integer.toString(-20126), "A Ativa\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o foi conclu\u00c3\u00adda pelo sistema de registro back-end."}, {Integer.toString(-20131), "Ocorreu um erro ao registrar o endere\u00c3\u00a7o MAC errado do sistema SonicWall GMS."}, {Integer.toString(-20132), "O Sistema SonicWall GMS n\u00c3\u00a3o est\u00c3\u00a1 registrado."}, {Integer.toString(-20133), "O n\u00c3\u00bamero de s\u00c3\u00a9rie do SonicWall GMS especificado \u00c3\u00a9 inv\u00c3\u00a1lido."}, {Integer.toString(-20134), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o Estado do SonicWall GMS pelo sistema de registro back-end."}, {Integer.toString(-20135), "O SonicWall GMS j\u00c3\u00a1 est\u00c3\u00a1 registrado."}, {Integer.toString(-20136), "O sistema de registro back-end n\u00c3\u00a3o conseguiu registrar o seu sistema SonicWall GMS."}, {Integer.toString(-20142), "O endere\u00c3\u00a7o MAC errado j\u00c3\u00a1 est\u00c3\u00a1 registrado."}, {Integer.toString(-20143), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar as atualiza\u00c3\u00a7\u00c3\u00b5es dispon\u00c3\u00adveis para o SonicWall GMS pelo sistema de registro back-end."}, {Integer.toString(-20144), "A dura\u00c3\u00a7\u00c3\u00a3o do pacote de base n\u00c3\u00a3o foi especificada."}, {Integer.toString(-20145), "Ocorreu um erro ao ler as informa\u00c3\u00a7\u00c3\u00b5es do sistema do pacote de base no sistema de registro back-end."}, {Integer.toString(-20146), "A atualiza\u00c3\u00a7\u00c3\u00a3o do n\u00c3\u00b3 n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel para este produto."}, {Integer.toString(-20147), "A instala\u00c3\u00a7\u00c3\u00a3o do seu SonicWall GMS j\u00c3\u00a1 \u00c3\u00a9 uma vers\u00c3\u00a3o comercial."}, {Integer.toString(-20148), "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 registrado."}, {Integer.toString(-20149), "Ocorreu um erro ao recuperar as informa\u00c3\u00a7\u00c3\u00b5es sobre o sistema SonicWall GMS no servidor de registro back-end."}, {Integer.toString(-20150), "O n\u00c3\u00bamero de s\u00c3\u00a9rie do SonicWall GMS especificado n\u00c3\u00a3o est\u00c3\u00a1 registrado para o usu\u00c3\u00a1rio."}, {Integer.toString(-20151), "Ocorreu um erro ao inserir as informa\u00c3\u00a7\u00c3\u00b5es dos relat\u00c3\u00b3rios no sistema de registro back-end."}, {Integer.toString(-20152), "N\u00c3\u00bamero de s\u00c3\u00a9rie do SonicWall GMS e combina\u00c3\u00a7\u00c3\u00a3o do nome do usu\u00c3\u00a1rio inv\u00c3\u00a1lidos."}, {Integer.toString(-20153), "Ocorreu um erro no sistema de registro back-end ao atualizar o SonicWall GMS para a integra\u00c3\u00a7\u00c3\u00a3o do ViewPoint."}, {Integer.toString(-20154), "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 registrado ou foi especificado um nome de usu\u00c3\u00a1rio inv\u00c3\u00a1lido."}, {Integer.toString(-20155), "O contrato b\u00c3\u00a1sico para este servi\u00c3\u00a7o n\u00c3\u00a3o est\u00c3\u00a1 ativado ou expirou."}, {Integer.toString(-20201), "Erro interno: a entrada XML no system back-end era inv\u00c3\u00a1lida."}, {Integer.toString(-20202), "Erro interno: nenhum nome de usu\u00c3\u00a1rio foi especificado na entrada."}, {Integer.toString(-20203), "A senha especificada para a interface do sistema de Registro do SonicWall GMS \u00c3\u00a9 inv\u00c3\u00a1lida."}, {Integer.toString(-20204), "Erro interno: foi solicitado um m\u00c3\u00a9todo inv\u00c3\u00a1lido ao sistema de registro back-end."}, {Integer.toString(-20205), "Erro interno: foi solicitada uma vers\u00c3\u00a3o de XML inv\u00c3\u00a1lida ao sistema de registro back-end."}, {Integer.toString(-20401), "Erro interno: ocorreu um erro do banco de dados no sistema de registro back-end."}, {Integer.toString(-20402), "Erro interno: ocorreu um erro de registro no sistema de registro back-end."}, {Integer.toString(-20403), "Erro interno: ocorreu um erro de componente no sistema de registro back-end."}, {Integer.toString(-20404), "Erro interno: ocorreu um erro de procedimento no sistema de registro back-end."}, {Integer.toString(-20140), "N\u00c3\u00a3o foi poss\u00c3\u00advel encontrar no sistema de registro back-end as informa\u00c3\u00a7\u00c3\u00b5es de PKI para o dispositivo especificado."}, {Integer.toString(-20141), "O servi\u00c3\u00a7o PKI n\u00c3\u00a3o foi ativado para o dispositivo especificado."}, {Integer.toString(-227), "Mem\u00c3\u00b3ria insuficiente para o upload do arquivo. Fa\u00c3\u00a7a upload de um arquivo de tamanho menor."}, {Integer.toString(-66), "Tentativa de upload de arquivo de Assinatura inv\u00c3\u00a1lida para o dispositivo."}, {Integer.toString(-67), "N\u00c3\u00a3o foi poss\u00c3\u00advel fazer o upload do arquivo de assinatura para o dispositivo. Verifique se esta a\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 aplic\u00c3\u00a1vel a este Modelo/Vers\u00c3\u00a3o."}, {Integer.toString(-500), "Erro recebido do lm2.sonicwall.com."}, {Integer.toString(-501), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o site lm2.sonicwall.com."}, {Integer.toString(-907), "N\u00c3\u00a3o existe suporte para a vers\u00c3\u00a3o do firmware do dispositivo."}, {Integer.toString(-901), "O ID de registro \u00c3\u00a9 inv\u00c3\u00a1lido ou n\u00c3\u00a3o existe."}, {Integer.toString(-902), "Falha ao aplicar o registro que inclui entidade."}, {Integer.toString(-903), "Falha ao aplicar o registro."}, {Integer.toString(-904), "O ID do modelo \u00c3\u00a9 inv\u00c3\u00a1lido ou n\u00c3\u00a3o existe."}, {Integer.toString(-905), "Falha ao aplicar o registro."}, {Integer.toString(-906), "Falha ao aplicar o modelo."}, {Integer.toString(-908), "Tempo limite atingido ao aguardar uma conex\u00c3\u00a3o do pool."}, {Integer.toString(-909), "Tempo limite atingido ao aguardar uma conex\u00c3\u00a3o com o host remoto."}, {Integer.toString(-910), "A configura\u00c3\u00a7\u00c3\u00a3o das defini\u00c3\u00a7\u00c3\u00b5es para este dispositivo n\u00c3\u00a3o s\u00c3\u00a3o apropriadas."}, {Integer.toString(-911), "Aguardando para determinar a configura\u00c3\u00a7\u00c3\u00a3o das defini\u00c3\u00a7\u00c3\u00b5es aplic\u00c3\u00a1veis a este dispositivo."}, {Integer.toString(-912), "N\u00c3\u00a3o foi poss\u00c3\u00advel encontrar o host do Servi\u00c3\u00a7o Web."}, {Integer.toString(-913), "N\u00c3\u00a3o foi poss\u00c3\u00advel criar a conex\u00c3\u00a3o do Servi\u00c3\u00a7o Web."}, {Integer.toString(-914), "Existe um problema em acessar os dados ou o recurso atrav\u00c3\u00a9s do servi\u00c3\u00a7o Web."}, {Integer.toString(-915), "Falha ao autenticar com o servi\u00c3\u00a7o Web."}, {Integer.toString(-800), "Relat\u00c3\u00b3rios de fluxo externos para GMS n\u00c3\u00a3o s\u00c3\u00a3o suportados por este dispositivo"}, {Integer.toString(-801), "As configura\u00c3\u00a7\u00c3\u00b5es do Gateway de encaminhador de fluxo n\u00c3\u00a3o est\u00c3\u00a3o corretas"}, {Integer.toString(-802), "Relat\u00c3\u00b3rios de fluxo externos para GMS n\u00c3\u00a3o s\u00c3\u00a3o suportados por este modelo"}, {Integer.toString(-803), "Relat\u00c3\u00b3rios de fluxo externos para GMS n\u00c3\u00a3o s\u00c3\u00a3o suportados por esta vers\u00c3\u00a3o de firmware"}, {Integer.toString(-804), "A Visualiza\u00c3\u00a7\u00c3\u00a3o de aplicativos n\u00c3\u00a3o est\u00c3\u00a1 licenciada neste dispositivo"}, {Integer.toString(-805), "Espa\u00c3\u00a7o de armazenamento insuficiente para atribui\u00c3\u00a7\u00c3\u00a3o de Agente de fluxo"}, {Integer.toString(-806), "Mem\u00c3\u00b3ria insuficiente de tempo de execu\u00c3\u00a7\u00c3\u00a3o para atribui\u00c3\u00a7\u00c3\u00a3o de Agente de fluxo"}, {Integer.toString(-807), "Falha de registro para o Agente de fluxo 1"}, {Integer.toString(-808), "Falha de registro para o Agente de fluxo 2"}, {Integer.toString(-809), "Falha de registro para o Agente de fluxo 1 e 2"}, {Integer.toString(-810), "Falha de registro para o Agente de fluxo 1 e Encaminhador de fluxo"}, {Integer.toString(-811), "Falha de registro para o Agente de fluxo 1, 2 e Encaminhador de fluxo"}, {Integer.toString(-812), "Falha de registro para o Agente de fluxo 2 e Encaminhador de fluxo"}, {Integer.toString(-813), "Falha de registro para o Encaminhador de fluxo"}, {Integer.toString(-814), "O Firewall de gateway n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel no GMS"}, {Integer.toString(-815), "Falha na cria\u00c3\u00a7\u00c3\u00a3o do t\u00c3\u00banel no fim do firewall de gateway"}, {Integer.toString(-816), "Falha na cria\u00c3\u00a7\u00c3\u00a3o do t\u00c3\u00banel no fim do dispositivo gerenciado"}, {Integer.toString(-817), "O aplicativo n\u00c3\u00a3o est\u00c3\u00a1 licenciado para Gerenciamento e gera\u00c3\u00a7\u00c3\u00a3o de relat\u00c3\u00b3rios GMS em nuvem"}, {Integer.toString(-818), "Pot\u00c3\u00aancia de processamento insuficiente para atribui\u00c3\u00a7\u00c3\u00a3o de Agente de fluxo"}, {Integer.toString(-819), "Largura de banda insuficiente para atribui\u00c3\u00a7\u00c3\u00a3o de Agente de fluxo"}, {"EDIT_DOMAIN", "Editar Dom\u00c3\u00adnio"}, {"VIEW_DOMAIN", "Ver os detalhes do Dom\u00c3\u00adnio"}, {"ADD_DOMAIN", "Adicionar dom\u00c3\u00adnio"}, {"SELECT_TO_DELETE", "Selecione o(s) dom\u00c3\u00adnio(s)/servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o a ser(em) exclu\u00c3\u00addo(s)."}, {"SELECT_AS_TO_DEL", "Selecione o(s) servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o a ser(em) exclu\u00c3\u00addo(s)."}, {"DELETE_CONFIRMATION", "Voc\u00c3\u00aa optou por excluir o dom\u00c3\u00adnio '"}, {"USER_DELETE_CONFIRMATION", "Todos os servidores de autentica\u00c3\u00a7\u00c3\u00a3o, usu\u00c3\u00a1rios, tipos de usu\u00c3\u00a1rios e as suas configura\u00c3\u00a7\u00c3\u00b5es tamb\u00c3\u00a9m ser\u00c3\u00a3o exclu\u00c3\u00addos."}, {"USER_AS_DELETE_CONFIRMATION", "Todos os usu\u00c3\u00a1rios, tipos de usu\u00c3\u00a1rios e as suas configura\u00c3\u00a7\u00c3\u00b5es tamb\u00c3\u00a9m ser\u00c3\u00a3o exclu\u00c3\u00addos."}, {"SURE_WANT_TO_CONTINUE", "Tem certeza de que deseja continuar?"}, {"MULTIPLE_DELETE_CONFIRMATION", "Voc\u00c3\u00aa selecionou o(s) seguinte(s) dom\u00c3\u00adnio(s) para excluir:"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "Voc\u00c3\u00aa selecionou o(s) seguinte(s) servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o para excluir:"}, {"AND_AS_DELETE_CONFIRMATION", "e excluir o(s) seguinte(s) servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o:"}, {"WANT_TO_CONTINUE", "Deseja continuar?"}, {"DOMAIN", "Dom\u00c3\u00adnio"}, {"DOMAINS", "Dom\u00c3\u00adnios"}, {"SEARCH", "Pesquisar"}, {"NAME", "Nome"}, {"DOMAIN_TYPE", "Tipo de dom\u00c3\u00adnio"}, {"DOMAIN_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es de dom\u00c3\u00adnio"}, {"ALIAS", "Alias"}, {"DISPLAY_DOMAIN", "Exibir o dom\u00c3\u00adnio na tela de Login"}, {"SET_AS_DEFAULT", "Definir como Dom\u00c3\u00adnio padr\u00c3\u00a3o"}, {"HOST_NAME", "Nome do host"}, {"HOST_TYPE", "Tipo de host"}, {"EQUALS", "\u00c3\u2030 igual a"}, {"STARTS_WITH", "Come\u00c3\u00a7a por"}, {"ENDS_WITH", "Termina com"}, {"CONTAINS", "Cont\u00c3\u00a9m"}, {"LOCAL", "Local"}, {"REMOTE", "Remoto"}, {"DOMAINS", "Dom\u00c3\u00adnios"}, {"SSL_USED", "SSL usado"}, {"CONFIGURE", "Configurar"}, {"NO_DOMAIN_FOUND", "N\u00c3\u00a3o foram encontrados dom\u00c3\u00adnios"}, {"NO_AS_FOUND", "N\u00c3\u00a3o foram encontrados servidores de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"ADD_DOMAIN", "Adicionar dom\u00c3\u00adnio"}, {"DELETE_DOMAINS", "Excluir Dom\u00c3\u00adnio(s)/Servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"DELETE_ASS", "Excluir Servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"EQUALS", "\u00c3\u2030 igual a"}, {"STARTS_WITH", "Come\u00c3\u00a7a por"}, {"ENDS_WITH", "Termina com"}, {"CONTAINS", "Cont\u00c3\u00a9m"}, {"LOCAL", "Local"}, {"REMOTE", "Remoto"}, {"REMOTE_DOMAIN", "Dom\u00c3\u00adnio remoto"}, {"ADMIN_PASSWORD", "Senha de administrador"}, {"DEFAULT_ADMIN_USER", "Usu\u00c3\u00a1rio padr\u00c3\u00a3o administrador"}, {"AUTH_PORT", "Porta de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"ACCT_PORT", "Porta de contabiliza\u00c3\u00a7\u00c3\u00a3o"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "Nome distinto da base"}, {"SEARCH_FILTER", "Filtro de pesquisa"}, {"SHARED_SECRET", "Segredo compartilhado"}, {"USE_SSL", "Usar o SSL"}, {"SSL_PORT", "Porta SSL"}, {"ANONYMOUS_LOGIN", "Login an\u00c3\u00b4nimo"}, {"LOGIN_USER_NAME", "Nome distinto de login de usu\u00c3\u00a1rio"}, {"DNAME_MSG", "Nome distinto usado para autenticar o Servidor de diret\u00c3\u00b3rio ao realizar uma liga\u00c3\u00a7\u00c3\u00a3o. O valor para este campo deve ser especificado como um DN (Nome distinto). Exemplo: [uid=xyz,ou=People,dc=example,dc=com], [cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "Senha de login"}, {"PROTOCOL_VERSION", "Vers\u00c3\u00a3o do protocolo"}, {"LDAPV2", "LDAP Vers\u00c3\u00a3o 2"}, {"LDAPV3", "LDAP Vers\u00c3\u00a3o 3"}, {"SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es"}, {"USER_DIRECTORY_LDAP", "Esquema LDAP do Diret\u00c3\u00b3rio de usu\u00c3\u00a1rios"}, {"LDAP_SCHEMA", "Esquema LDAP"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "Definido pelo usu\u00c3\u00a1rio"}, {"USER_OBJECTS", "Objetos de usu\u00c3\u00a1rio"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "Atributo de nome de login"}, {"FIRST_NAME", "Atributo de primeiro nome"}, {"LAST_NAME", "Atributo de sobrenome"}, {"EMAIL", "Atributo de e-mail"}, {"TELEPHONE", "Atributo de telefone"}, {"CON_TIMEOUT", "Tempo limite de conex\u00c3\u00a3o"}, {"SCHEMA", "Esquema"}, {"TEST_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es de teste"}, {"TEST_RADIUS_SETTINGS", "Testar configura\u00c3\u00a7\u00c3\u00b5es RADIUS"}, {"TEST_LDAP_MSG", "Para testar as configura\u00c3\u00a7\u00c3\u00b5es LDAP, insira um LDAP v\u00c3\u00a1lido"}, {"TEST_RADIUS_MSG", "Para testar as configura\u00c3\u00a7\u00c3\u00b5es RADIUS, insira um RADIUS v\u00c3\u00a1lido"}, {"TEST_MSG", "nome de login e senha e clique no bot\u00c3\u00a3o Teste. Note que esta op\u00c3\u00a7\u00c3\u00a3o aplicar\u00c3\u00a1 quaisquer altera\u00c3\u00a7\u00c3\u00b5es que tenham sido efetuadas."}, {"USER", "Usu\u00c3\u00a1rio"}, {"PWD", "Senha"}, {"RUN_CLIENT_TEST", "Executar teste de cliente"}, {"TEST_STATUS", "Estado de teste"}, {"RETURNED_USER_ATTRIBUTES", "Resultados retornados do teste"}, {"TEST", "Teste"}, {"OK", "OK"}, {"CANCEL", "Cancelar"}, {"CLOSE", "Fechar"}, {"CANT_DELETE_LOCALDOMAIN", "O LocalDomain n\u00c3\u00a3o pode ser editado/exclu\u00c3\u00addo"}, {"CANT_EDIT", "N\u00c3\u00a3o pode ser editado se houver apenas um dom\u00c3\u00adnio"}, {"EMPTY_NAME", "O Nome n\u00c3\u00a3o pode estar em branco"}, {"EMPTY_ADMIN_PWD", "A Senha de administrador n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_ADMIN_USER", "O Usu\u00c3\u00a1rio padr\u00c3\u00a3o administrador n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_AUTH_PORT", "A Porta de autentica\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_AUTH_PORT", "A Porta de autentica\u00c3\u00a7\u00c3\u00a3o deve ser um n\u00c3\u00bamero positivo"}, {"AUTH_PORT_RANGE", "A Porta de autentica\u00c3\u00a7\u00c3\u00a3o deve ter um valor entre 0 e 65535"}, {"EMPTY_ACCT_PORT", "A Porta de contabiliza\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_ACCT_PORT", "A Porta de contabiliza\u00c3\u00a7\u00c3\u00a3o deve ser um n\u00c3\u00bamero positivo"}, {"EMPTY_BD_NAME", "O Nome distinto da base n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_SEARCH_FILTER", "O Filtro de pesquisa n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_SHRED_SECRET", "O Segredo compartilhado n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_SSL_PORT", "A Porta de SSL n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_SSL_PORT", "A Porta de SSL deve ser um n\u00c3\u00bamero positivo"}, {"SSL_PORT_RANGE", "A Porta de SSL deve ter um valor entre 0 e 65535"}, {"EMPTY_LOGIN", "O Nome distinto de login de usu\u00c3\u00a1rio n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_LOGIN_PWD", "A Senha de login n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_CON_TIMEOUT", "O Tempo limite de conex\u00c3\u00a3o n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_CON_TIMEOUT", "O Tempo limite de conex\u00c3\u00a3o deve ser um n\u00c3\u00bamero positivo"}, {"RECOMMEND_SSL", "\u00c3\u2030 altamente recomendado usar SSL para comunica\u00c3\u00a7\u00c3\u00a3o segura com o servidor remoto."}, {"CON_NOT_SECURE", "A sua conex\u00c3\u00a3o n\u00c3\u00a3o estar\u00c3\u00a1 segura se n\u00c3\u00a3o usar SSL."}, {"DOMAIN_EXISTS", "J\u00c3\u00a1 existe um dom\u00c3\u00adnio com esse nome"}, {"ALIAS_EXISTS", "J\u00c3\u00a1 existe um alias com esse nome"}, {"DOMAIN_INVALID", "IFoi especificado um Nome de dom\u00c3\u00adnio inv\u00c3\u00a1lido."}, {"DOMAIN_VALID_CHARS", "O Nome pode conter apenas os seguintes caracteres:"}, {"DOMAIN_VALID_CHARS_LIST", "Alfanum\u00c3\u00a9ricos, .(Pontos), -(H\u00c3\u00adfens), _(Sublinhado) e Espa\u00c3\u00a7o."}, {"SPECIFY_VALID_NAME", "Especifique um nome com os caracteres permitidos."}, {"DIR_GRP_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es de grupo do Active Directory"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "Permitir somente membros do grupo AD"}, {"DIR_GROUPS", "Grupo(s) do Active Directory"}, {"GRP_NAME_INVALID", "Foi(ram) especificado(s) o(s) Nome(s) de grupo inv\u00c3\u00a1lido(s)."}, {"GRP_NAME_INVALID_LENGTH", "O(s) Nome(s) de grupo n\u00c3\u00a3o pode(m) conter mais de 200 caracteres."}, {"AUTH_SERVER_NAME", "Nome do servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"ADD_AUTH_SERVER", "Adicionar um servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"ADD_AUTHSERVER", "Adicionar servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"EDIT_AUTHSERVER", "Editar servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"DELETE_DOMAIN", "Excluir este Dom\u00c3\u00adnio"}, {"CANT_DELETE_LOCAL_AS", "O Servidor de autentica\u00c3\u00a7\u00c3\u00a3o local n\u00c3\u00a3o pode ser editado/exclu\u00c3\u00addo"}, {"CANT_DELETE_ADMIN_AS", "Este servidor de autentica\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ser exclu\u00c3\u00addo, uma vez que o administrador padr\u00c3\u00a3o para este dom\u00c3\u00adnio \u00c3\u00a9 autenticado contra este.\nMova o administrador padr\u00c3\u00a3o para outro servidor de autentica\u00c3\u00a7\u00c3\u00a3o e, em seguida, tente novamente."}, {"EDIT_AUTH_SERVER", "Editar este servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"VIEW_AUTH_SERVER", "Ver detalhes do servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"DELETE_AUTH_SERVER", "Excluir este servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"AS_INVALID", "Foi especificado um Servidor de autentica\u00c3\u00a7\u00c3\u00a3o inv\u00c3\u00a1lido."}, {"AS_EXISTS", "J\u00c3\u00a1 existe um Servidor de autentica\u00c3\u00a7\u00c3\u00a3o com esse nome"}, {"EMPTY_AS_NAME", "O Nome do servidor de autentica\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ficar em branco"}, {"AS_NAME_MSG", "O nome do servidor de autentica\u00c3\u00a7\u00c3\u00a3o que ser\u00c3\u00a1 criado. Este nome \u00c3\u00a9 \u00c3\u00batil para gerenciar os diferentes servidores de autentica\u00c3\u00a7\u00c3\u00a3o em um dom\u00c3\u00adnio."}, {"AS_DELETE_CONFIRMATION", "Voc\u00c3\u00aa optou por excluir o servidor de autentica\u00c3\u00a7\u00c3\u00a3o '"}, {"PRI_RADIUS", "Servidor RADIUS principal"}, {"AUTH_PROTOCOL", "Protocolo de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"RADIUS_TIMEOUT", "Tempo limite de RADIUS (segundos)"}, {"MAX_RETRIES", "M\u00c3\u00a1ximo de repeti\u00c3\u00a7\u00c3\u00b5es"}, {"BACK_RADIUS", "Backup do servidor RADIUS"}, {"RADIUS_USER_GROUP", "Configura\u00c3\u00a7\u00c3\u00b5es do Grupo de usu\u00c3\u00a1rio RADIUS"}, {"ALLOW_GROUP_MEMBERS", "Permitir somente o Grupo RADIUS\tMembros"}, {"USE_SW_VSA", "Usar atributo espec\u00c3\u00adfico do Fornecedor da SonicWall no Servidor RADIUS"}, {"USE_FILTER_ID", "Usar atributo ID de filtro no servidor RADIUS"}, {"ALLOW_GROUPS", "Grupo(s) RADIUS permitido(s)"}, {"USER_GROUP", "Grupo de usu\u00c3\u00a1rio"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "O Tempo limite de RADIUS n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_RADIUS_TIMEOUT", "O Tempo limite de RADIUS deve ser um n\u00c3\u00bamero positivo"}, {"EMPTY_MAX_RETRIES", "O M\u00c3\u00a1ximo de entradas n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_MAX_RETRIES", "O M\u00c3\u00a1ximo de entradas deve ser um n\u00c3\u00bamero positivo"}, {"TEST_USER_NAME", "O Nome do usu\u00c3\u00a1rio do teste n\u00c3\u00a3o pode ficar em branco."}, {"TEST_USER_PWD", "A Senha do usu\u00c3\u00a1rio do teste n\u00c3\u00a3o pode ficar em branco."}, {"DOMAIN_NAME_MSG", "O nome do dom\u00c3\u00adnio que ser\u00c3\u00a1 criado. Esse nome ficar\u00c3\u00a1 vis\u00c3\u00advel no menu suspenso dos Dom\u00c3\u00adnios na p\u00c3\u00a1gina de login."}, {"DOMAIN_TYPE_MSG", "O tipo do dom\u00c3\u00adnio, [Local] ou [Remoto]. Um dom\u00c3\u00adnio que necessita autenticar os usu\u00c3\u00a1rios a partir de uma plataforma externa, tal como um servidor LDAP ou AD, ter\u00c3\u00a1 de ser criado como um tipo de dom\u00c3\u00adnio [Remoto]. Um dom\u00c3\u00adnio de tipo [Local] ter\u00c3\u00a1 a conta de usu\u00c3\u00a1rio e os detalhes de autentica\u00c3\u00a7\u00c3\u00a3o presentes no banco de dados SGMS. Ao criar um dom\u00c3\u00adnio de tipo [Local], voc\u00c3\u00aa consegue dar suporte a v\u00c3\u00a1rios dom\u00c3\u00adnios dentro do SGMS sem a necessidade de interfaces de autentica\u00c3\u00a7\u00c3\u00a3o externa."}, {"ADMIN_PASSWORD_MSG", "Quando se cria um novo dom\u00c3\u00adnio de tipo [Local], \u00c3\u00a9 criado, por padr\u00c3\u00a3o, um usu\u00c3\u00a1rio [administrador] para o dom\u00c3\u00adnio. Voc\u00c3\u00aa precisa especificar a senha para o usu\u00c3\u00a1rio administrador."}, {"ADMIN_USERID_MSG", "Especifique um nome de usu\u00c3\u00a1rio que ser\u00c3\u00a1 o administrador para o dom\u00c3\u00adnio. Este nome de usu\u00c3\u00a1rio deve ser v\u00c3\u00a1lido no servidor de diret\u00c3\u00b3rio associado a este dom\u00c3\u00adnio. Se o nome [administrador] \u00c3\u00a9 especificado para este campo, ent\u00c3\u00a3o deve existir um usu\u00c3\u00a1rio com ID de usu\u00c3\u00a1rio [administrador] no diret\u00c3\u00b3rio associado e este deve ter privil\u00c3\u00a9gios administrativos. Exemplo: jdoe"}, {"HOST_NAME_MSG", "O nome do host ou endere\u00c3\u00a7o de IP do servidor de autentica\u00c3\u00a7\u00c3\u00a3o Remota. Exemplo: \t[meudc.exemplo.com], [X.X.X.X] (endere\u00c3\u00a7o IP), [empresa.com]. Se o servidor remoto for um servidor do Active Directory (AD) do Windows e voc\u00c3\u00aa tiver v\u00c3\u00a1rios dom\u00c3\u00adnios em que precisa autenticar usu\u00c3\u00a1rios da floresta AD, especifique, em seguida, o nome do Cat\u00c3\u00a1logo global ou o endere\u00c3\u00a7o IP da sua Floresta AD como o nome do host."}, {"AUTHENTICATION_PORT_MSG", "O n\u00c3\u00bamero da porta no servidor LDAP ou AD, no qual ele atende a pedidos de autentica\u00c3\u00a7\u00c3\u00a3o. O valor padr\u00c3\u00a3o \u00c3\u00a9 389, no caso de servidores LDAP/AD. Especificou-se o nome do Cat\u00c3\u00a1logo global ou o endere\u00c3\u00a7o IP da sua Floresta AD como o nome do host, ent\u00c3\u00a3o, deve tamb\u00c3\u00a9m especificar o n\u00c3\u00bamero de porta correspondente. O valor padr\u00c3\u00a3o \u00c3\u00a9 3268."}, {"HOST_TYPE_MSG", "Este valor indica o tipo do Servidor de autentica\u00c3\u00a7\u00c3\u00a3o remota se for um servidor LDAP, um Active Directory do Windows ou um servidor RADIUS."}, {"ALIAS_MSG", "Uma forma abreviada do nome de dom\u00c3\u00adnio que pode ser usada na tela de login do GMS para acesso quando os dom\u00c3\u00adnios n\u00c3\u00a3o s\u00c3\u00a3o exibidos. Exemplo: nome de usu\u00c3\u00a1rio\\\\do alias. O alias \u00c3\u00a9 preenchido automaticamente com o nome de dom\u00c3\u00adnio, se o comprimento do nome de dom\u00c3\u00adnio for inferior ou igual a 16 caracteres."}, {"PROTOCOL_VERSION_MSG", "Esta \u00c3\u00a9 a vers\u00c3\u00a3o do protocolo LDAP em que o servidor remoto LDAP/AD est\u00c3\u00a1 sendo executado."}, {"BASE_DN_MSG", "O Nome distinto da base \u00c3\u00a9 usado para identificar a entrada da raiz no diret\u00c3\u00b3rio a partir do qual ocorrer\u00c3\u00a3o as pesquisas iniciadas pelo SGMS. A base DN para um diret\u00c3\u00b3rio (por exemplo, exemplo.com) deve ser escrita segundo o formul\u00c3\u00a1rio: [dc=exemplo,dc=com]. \u00c3\u2030 sempre necess\u00c3\u00a1rio especificar o n\u00c3\u00b3 do n\u00c3\u00advel mais alto, como a base DN na \u00c3\u00a1rvore do diret\u00c3\u00b3rio a seguir, onde dever\u00c3\u00a3o estar presentes todos os usu\u00c3\u00a1rios que podem efetuar login no SGMS."}, {"USE_SSL_MSG", "Especifique se o SSL deve ser usado para efetuar liga\u00c3\u00a7\u00c3\u00a3o ao servidor remoto. Isto \u00c3\u00a9 fortemente recomend\u00c3\u00a1vel. Para isto, o certificado CA do \\servidor remoto ou o certificado da raiz do CA que assinou o certificado\\ do servidor devem estar presentes na keystore da SGMS como CAs confi\u00c3\u00a1veis."}, {"SSL_PORT_MSG", "O n\u00c3\u00bamero de porta no qual o servidor remoto est\u00c3\u00a1 escutando por solicita\u00c3\u00a7\u00c3\u00b5es de liga\u00c3\u00a7\u00c3\u00a3o SSL. O valor padr\u00c3\u00a3o \u00c3\u00a9 636, no caso de servidores LDAP/AD. Especificou-se o nome do Cat\u00c3\u00a1logo global ou o endere\u00c3\u00a7o IP da sua Forest AD (floresta) como o nome do host, de seguida deve tamb\u00c3\u00a9m especificar o n\u00c3\u00bamero de porta SSL correspondente. O valor padr\u00c3\u00a3o \u00c3\u00a9 3269."}, {"ANONYMOUS_LOGIN_MSG", "(N\u00c3\u00a3o recomendado). Especifique se o SGMS deve ser ligado ao servidor remoto de forma an\u00c3\u00b4nima. Para tal, o servidor remoto LDAP/AD deve permitir liga\u00c3\u00a7\u00c3\u00b5es an\u00c3\u00b4nimas. Apenas deve experimentar as liga\u00c3\u00a7\u00c3\u00b5es an\u00c3\u00b4nimas quando uma conta de servi\u00c3\u00a7o (pelo menos uma conta de usu\u00c3\u00a1rio v\u00c3\u00a1lida no diret\u00c3\u00b3rio) n\u00c3\u00a3o \u00c3\u00a9 conhecida antecipadamente. Isto \u00c3\u00a9 fortemente desencorajado."}, {"LOGIN_USER_DN_MSG", "Nome distinto usado para autenticar o Servidor de diret\u00c3\u00b3rio ao realizar uma liga\u00c3\u00a7\u00c3\u00a3o. O valor para este campo deve ser especificado como um DN (Nome distinto). Exemplo: [uid=xyz, ou=People, dc=example, dc=com] , [cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "Senha para o DN do login do usu\u00c3\u00a1rio."}, {"CONN_TIMEOUT_MSG", "Este valor (em milissegundos) indica a conex\u00c3\u00a3o do per\u00c3\u00adodo de tempo limite. Ap\u00c3\u00b3s este per\u00c3\u00adodo de tempo, a tentativa de conex\u00c3\u00a3o com o servidor remoto ser\u00c3\u00a1 abandonada se n\u00c3\u00a3o for realizada com \u00c3\u00aaxito."}, {"LDAP_SCHEMA_MSG", "Esquema LDAP do servidor LDAP/AD associado."}, {"OBJ_CLASS_MSG", "O nome de uma das classes de objeto padr\u00c3\u00a3o a que os usu\u00c3\u00a1rios pertencem."}, {"LOGIN_NAME_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP/AD que representa o ID do usu\u00c3\u00a1rio. Este \u00c3\u00a9 o atributo no servidor LDAP cujo valor ser\u00c3\u00a1 usado como o ID do usu\u00c3\u00a1rio na p\u00c3\u00a1gina de login SGMS. Exemplo: uid, sAMAccountName, etc."}, {"FIRST_NAME_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP que representa o Primeiro nome. Exemplo: givenName."}, {"LAST_NAME_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP que representa o \u00c3\u0161ltimo nome. Exemplo: sn."}, {"EMAIL_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP que representa o ID do e-mail. Exemplo: e-mail."}, {"TELEPHONE_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP que representa o n\u00c3\u00bamero de Telefone. Exemplo: telephoneNumber."}, {"TEST_PANE_MSG", "Aqui pode testar as configura\u00c3\u00a7\u00c3\u00b5es do Servidor de autentica\u00c3\u00a7\u00c3\u00a3o (LDAP/AD/RADIUS) inseridas no Painel configura\u00c3\u00a7\u00c3\u00b5es."}, {"TEST_PANE_USER_MSG", "Insira um nome de usu\u00c3\u00a1rio v\u00c3\u00a1lido que voc\u00c3\u00aa inseriria na p\u00c3\u00a1gina de login SGMS para efetuar login no GMS. Este nome de usu\u00c3\u00a1rio deve ser v\u00c3\u00a1lido e deve estar no Diret\u00c3\u00b3rio associado para este dom\u00c3\u00adnio. Al\u00c3\u00a9m disso, insira a senha para este nome de usu\u00c3\u00a1rio no diret\u00c3\u00b3rio."}, {"EMPTY_DIR_GROUP", "O(s) nome(s) do grupo de diret\u00c3\u00b3rio n\u00c3\u00a3o pode(m) estar vazio(s)."}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "Quando esta op\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 selecionada permite apenas aos usu\u00c3\u00a1rios membros dos Grupos do Active Directory especificados a possibilidade de efetuar login no GMS. Com esta op\u00c3\u00a7\u00c3\u00a3o, tamb\u00c3\u00a9m \u00c3\u00a9 necess\u00c3\u00a1rio selecionar o Tipo de host como [Active Directory] no Painel configura\u00c3\u00a7\u00c3\u00b5es."}, {"DIR_GROUPS_MSG", "Especifica os nomes dos Grupos AD, membros que devem ter permiss\u00c3\u00a3o para fazer login no GMS. Podem ser especificados v\u00c3\u00a1rios Grupos AD sendo delimitados por ponto e v\u00c3\u00adrgula. Exemplo: [Usu\u00c3\u00a1riosGMS], [GrupoAD1;GrupoAD2;Usu\u00c3\u00a1rios GMS;Grupo4]"}, {"RADIUS_HOST_NAME_MSG", "O nome do host ou o endere\u00c3\u00a7o IP do servidor de autentica\u00c3\u00a7\u00c3\u00a3o RADIUS. Exemplo: [meuradius.exemplo.com], [X.X.X.X] (endere\u00c3\u00a7o IP), [empresa.com]."}, {"RADIUS_AUTH_PORT_MSG", "O n\u00c3\u00bamero de porta no servidor RADIUS no qual s\u00c3\u00a3o escutadas as solicita\u00c3\u00a7\u00c3\u00b5es de autentica\u00c3\u00a7\u00c3\u00a3o. Valor padr\u00c3\u00a3o 1812."}, {"RADIUS_SHARED_SECRET_MSG", "O segredo compartilhado entre o GMS e o servidor RADIUS. ptEste \u00c3\u00a9 um valor de cadeia conhecido apenas pelo servidor RADIUS e o cliente RADIUS."}, {"RADIUS_AUTH_PROTOCOL_MSG", "O Protocolo de autentica\u00c3\u00a7\u00c3\u00a3o RADIUS para ser usado para autentica\u00c3\u00a7\u00c3\u00a3o."}, {"RADIUS_TIMEOUT_MSG", "Este valor (em segundos) indica a conex\u00c3\u00a3o do per\u00c3\u00adodo de tempo limite. Ap\u00c3\u00b3s este per\u00c3\u00adodo de tempo, a tentativa de conex\u00c3\u00a3o com o servidor RADIUS ser\u00c3\u00a1 abandonada se n\u00c3\u00a3o for realizada com \u00c3\u00aaxito."}, {"RADIUS_MAX_RETRIES_MSG", "Este valor indica o n\u00c3\u00bamero de vezes que a tentativa de autentica\u00c3\u00a7\u00c3\u00a3o deve ser feita atrav\u00c3\u00a9s do servidor RADIUS. Ap\u00c3\u00b3s o n\u00c3\u00bamero de tentativas especificado, a tentativa de conex\u00c3\u00a3o com o servidor remoto ser\u00c3\u00a1 abandonada se n\u00c3\u00a3o for realizada com \u00c3\u00aaxito."}, {"RADIUS_ONLY_GROUP_MSG", "Quando esta op\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 selecionada permite apenas aos usu\u00c3\u00a1rios membros dos grupos de usu\u00c3\u00a1rios RADIUS especificados a possibilidade de efetuar login no GMS."}, {"RADIUS_USE_FILTER_MSG", "Quando esta op\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 selecionada permite que o valor do atributo RADIUS \\'ID de filtro\\' seja usado como o identificador do grupo de usu\u00c3\u00a1rios RADIUS. Para usar esta op\u00c3\u00a7\u00c3\u00a3o, o servidor RADIUS deve estar configurado adequadamente para retornar este par de atribui\u00c3\u00a7\u00c3\u00a3o-valor com cada ID do usu\u00c3\u00a1rio que esteja autenticado no servidor RADIUS para login no GMS."}, {"RADIUS_USE_SW_MSG", "Quando esta op\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 selecionada, esta usa o valor do(s) atributo(s) especifico(s) do fornecedor da SonicWall [SonicWall-Usu\u00c3\u00a1rio-Grupo e SonicWall-Usu\u00c3\u00a1rio-Grupos] como o identificador do grupo do usu\u00c3\u00a1rio RADIUS. Para usar esta op\u00c3\u00a7\u00c3\u00a3o, o servidor RADIUS deve estar configurado adequadamente para retornar o par de atribui\u00c3\u00a7\u00c3\u00a3o-valor espec\u00c3\u00adfico do fornecedor da SonicWall com cada ID do usu\u00c3\u00a1rio que esteja autenticado no servidor RADIUS para efetuar login no GMS."}, {"RADIUS_ALLOW_GROUPS_MSG", "Especifica os nomes dos grupos dos usu\u00c3\u00a1rios RADIUS, membros que devem ter permiss\u00c3\u00a3o para fazer login no GMS. Exemplo [Usu\u00c3\u00a1riosGMS]. Podem ser especificados v\u00c3\u00a1rios grupos de usu\u00c3\u00a1rios RADIUS sob a forma de uma cadeia separada por ponto e v\u00c3\u00adrgula. Exemplo: [RadGrupo1;Rad grupo2;Usu\u00c3\u00a1rios GMS;Grupo4]."}, {"ADD_AUTH_SERVER_MSG", "Se verificado permite adicionar uma nova configura\u00c3\u00a7\u00c3\u00a3o do Servidor de autentica\u00c3\u00a7\u00c3\u00a3o durante a adi\u00c3\u00a7\u00c3\u00a3o de dom\u00c3\u00adnio."}, {"PAGE_LABEL", "P\u00c3\u00a1gina"}, {"MANAGE_PAGE", "Gerenciar p\u00c3\u00a1gina"}, {"ADD_COMPONENT", "Adicionar componente"}, {"PAGE_MANAGER", "Gerenciador de p\u00c3\u00a1gina"}, {"ADD_NEW_PAGE", "Adicionar nova p\u00c3\u00a1gina"}, {"DEFAULT_PAGE", "P\u00c3\u00a1gina padr\u00c3\u00a3o"}, {"PAGE_DETAILS", "Detalhes de p\u00c3\u00a1gina"}, {"PAGE_TITLE", "T\u00c3\u00adtulo da p\u00c3\u00a1gina"}, {"COMPONENT_TITLE", "T\u00c3\u00adtulo de componente"}, {"PAGE_LAYOUT", "Layout de p\u00c3\u00a1gina"}, {"ONE_COLUMN_LAYOUT", "1 Coluna(100)"}, {"TWO_COLUMN_LAYOUT", "2 Coluna(50:50)"}, {"THREE_COLUMN_LAYOUT", "3 Coluna(30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 Coluna(25:25:25:25)"}, {"ADD", "Adicionar"}, {"EDIT", "Editar"}, {"DELETE", "Excluir"}, {"ADD_COMPONENT_MANAGER", "Adicionar gerenciador de componente"}, {"TYPE", "Tipo"}, {"RSS_FEED_DETAILS", "Detalhes de feed de RSS"}, {"RSS_FEEDS", "Feeds RSS"}, {"TITLE", "T\u00c3\u00adtulo"}, {"ITEMS", "Itens para mostrar (m\u00c3\u00a1x.)"}, {"REFRESH_INTERVAL", "Intervalo de atualiza\u00c3\u00a7\u00c3\u00a3o"}, {"REFRESH_INTERVAL_MINUTE", "em minutos"}, {"EVENT_ALERT_DETAILS", "Detalhes do alerta de eventos"}, {"ALERT_TYPES", "Tipos de alerta"}, {"REFRESH_INTERVAL_HOUR", "em horas"}, {"ALERT_SHOW_TIME_HOURS", "Mostrar alertas acionados nos \u00c3\u00baltimos"}, {"APPLICATION_WIDGET_DETAILS", "Detalhes do aplicativo widget"}, {"WIDGETS", "Widgets"}, {"RSS_FEED_TYPE", "Feed RSS"}, {"EVENT_ALERT_TYPE", "Alerta de eventos"}, {"APPLICATION_WIDGET_TYPE", "Aplicativo widget"}, {"CUSTOM_RSS_FEED", "Feed RSS personalizado"}, {"CUSTOM_RSS_URL", "URL de RSS personalizado"}, {"END_EDIT", "Fechar edi\u00c3\u00a7\u00c3\u00a3o"}, {"RSS_URL", "URL RSS"}, {"SAVE", "Salvar"}, {"DEFAULT_PAGE", "P\u00c3\u00a1gina padr\u00c3\u00a3o"}, {"SAVE_LAYOUT_FAIL_MSG", "Falha ao salvar layout"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "Falha ao salvar estado da barra de controle"}, {"ADD_COMPONENT_FAIL_MSG", "Falha ao adicionar componente"}, {"DELETE_COMPONENT_FAIL_MSG", "Falha ao excluir componente"}, {"PAGE_ACTION_FAIL_MSG", "Falha na a\u00c3\u00a7\u00c3\u00a3o de p\u00c3\u00a1gina"}, {"RSS_FEED_FAIL_MSG", "Falha ao obter feed RSS."}, {"EVENT_ALERT_FAIL_MSG", "Falha ao obter alerta GEM."}, {"APPLICATION_WIDGET_FAIL_MSG", "Falha ao obter Widget do aplicativo."}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "Sem alertas configurados para o destino: painel."}, {"NO_ALERT_FOUND_MSG", "Sem alertas para exibir."}, {"CHANGE_DEFAULT_PAGE_MSG", "Ao selecionar esta p\u00c3\u00a1gina como padr\u00c3\u00a3o alterar\u00c3\u00a1 quaisquer configura\u00c3\u00a7\u00c3\u00b5es de p\u00c3\u00a1gina padr\u00c3\u00a3o definidas anteriormente. Tem certeza de que deseja continuar?"}, {"DELETE_DEFAULT_PAGE_MSG", "N\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel excluir a p\u00c3\u00a1gina padr\u00c3\u00a3o. Selecione qualquer outra p\u00c3\u00a1gina para ser a p\u00c3\u00a1gina padr\u00c3\u00a3o e, de seguida, exclua esta p\u00c3\u00a1gina."}, {"DELETE_PAGE_AND_COMPONENT_MSG", "Excluir uma p\u00c3\u00a1gina, exclui, por sua vez, todos os componentes em essa p\u00c3\u00a1gina. Tem certeza de que deseja excluir esta p\u00c3\u00a1gina?"}, {"VALID_URL_MSG", "Insira um URL no formato: http://www.seudominio.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "Tem certeza de que deseja excluir este componente?"}, {"NO_COMPONENT_MSG", "N\u00c3\u00a3o h\u00c3\u00a1 componentes adicionados atualmente na p\u00c3\u00a1gina."}, {"LOAD_DATA_MSG", "Carregando dados..."}, {"COMPONENT_EXISTS_MSG", "O componente j\u00c3\u00a1 existe. Detalhes dos componentes existentes: "}, {"REFRESH_INTERVAL_RANGE", "Intervalo de atualiza\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 fora do intervalo. Insira um valor v\u00c3\u00a1lido."}, {"ITEMS_RANGE", "O n\u00c3\u00bamero de itens est\u00c3\u00a1 fora de alcance. Insira um n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"ALERT_SHOWTIME_RANGE", "Mostrar hora para Alertas est\u00c3\u00a1 fora do alcance. Insira um valor v\u00c3\u00a1lido."}, {"NO_COMPONENT_SELECTED_ERR", ":Selecione um antes de adicionar o componente \u00c3\u00a0 p\u00c3\u00a1gina."}, {"ADDCOMPONENT_ERR_QUOTES", "O T\u00c3\u00adtulo do componente n\u00c3\u00a3o pode conter os seguintes caracteres: aspas simples, aspas duplas, dois-pontos, porcentagem, cerquilha, ponto de interroga\u00c3\u00a7\u00c3\u00a3o e barras verticais."}, {"ADDPAGE_ERR_QUOTES", "O T\u00c3\u00adtulo da p\u00c3\u00a1gina n\u00c3\u00a3o pode conter os seguintes caracteres: aspas simples, aspas duplas, dois-pontos, porcentagem, cerquilha, ponto de interroga\u00c3\u00a7\u00c3\u00a3o e barras verticais."}, {"TIME_PERIOD", "Per\u00c3\u00adodo de tempo"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "Excluir uma p\u00c3\u00a1gina, exclui, por sua vez, todos os widgets em essa p\u00c3\u00a1gina. Tem certeza de que deseja excluir esta p\u00c3\u00a1gina?"}, {"ADDWIDGET_ERR_QUOTES", "O T\u00c3\u00adtulo do widget n\u00c3\u00a3o pode conter os seguintes caracteres: aspas simples, aspas duplas, dois-pontos, porcentagem, cerquilha, ponto de interroga\u00c3\u00a7\u00c3\u00a3o e barras verticais."}, {"TIME_PERIOD", "Per\u00c3\u00adodo de tempo"}, {"COPY_WIDGET_VALIDATION_MSG", "Selecione uma p\u00c3\u00a1gina a ser copiada..."}, {"COPY_WIDGET_HEADER", "Copiar o widget"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "Nenhuma palavra-chave na cadeia de caracteres de pesquisa \u00c3\u00a9 aplic\u00c3\u00a1vel a este widget"}, {"IGNORED_INVALID_SEARCH_FILTER", "Filtro de pesquisa inv\u00c3\u00a1lido ignorado."}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "Uma ou mais inst\u00c3\u00a2ncias GMSVP n\u00c3\u00a3o tem Localiza\u00c3\u00a7\u00c3\u00a3o geogr\u00c3\u00a1fica."}, {"NDA_NG_REPORTING_WIDGET_MSG", "Nenhum registro correspondente foi encontrado."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "Mensagem de alerta"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u00c3\u0161ltima hora reportada"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "Tipo de alerta"}, {"LOGS_WIDGET_COL_MESSAGE", "Mensagem"}, {"LOGS_WIDGET_COL_DATE", "Data"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "Detalhes do usu\u00c3\u00a1rio"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "Hora do \u00c3\u00baltimo acesso"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "Hor\u00c3\u00a1rio programado (Local)"}, {"DSB_CONFIRM_DELETE_WIDGET", "Esta opera\u00c3\u00a7\u00c3\u00a3o excluir\u00c3\u00a1 o widget, continuar?"}, {"DSB_SEARCH_DIALOG_MESG", "Os widgets correspondem ao resultado para "}, {"DSB_SEARCH_DIALOG_HEADER", "Resultados de pesquisa adicionais"}, {"DSB_CLEARHISTORY_MESG", "Limpar hist\u00c3\u00b3rico de pesquisa?"}, {"DSB_CLEARHISTORY_HDR", "hist\u00c3\u00b3rico de pesquisa"}, {"DSB_ADDNEW_WIDGET_LBL", "Adicionar novo widget: "}, {"DSB_GENSTTINGS_HDR", "Configura\u00c3\u00a7\u00c3\u00b5es gerais "}, {"DSB_ASSOCPROD_HDR", "Produtos associados "}, {"DSB_SUBALERTS_HDR", "Subalertas inclu\u00c3\u00addos "}, {"DSB_WIDGETTITLE_LBL", "T\u00c3\u00adtulo: "}, {"DSB_NOFITEMS_LBL", "N\u00c3\u00bamero de itens: "}, {"DSB_REFINT_LBL", "Intervalo de atualiza\u00c3\u00a7\u00c3\u00a3o: "}, {"DSB_ALERTSTRIGGERED_LBL", "Mostrar alertas acionados nos \u00c3\u00baltimos: "}, {"DSB_NEWSUBALERTS_LBL", "Subalertas novos: "}, {"DSB_CUSTRSSURL_LBL", "URL de RSS personalizado: "}, {"DSB_WRAPTEXT_LBL", "Quebrar texto: "}, {"DSB_ADDPAGE_HDR", "Adicionar nova p\u00c3\u00a1gina "}, {"DSB_ADDPAGE_LBL", "T\u00c3\u00adtulo da p\u00c3\u00a1gina: "}, {"DSB_MAPLOCATIONDLG_HDR", "Adicionar/Editar localiza\u00c3\u00a7\u00c3\u00a3o"}, {"DSB_ADDRESS_LBL", "Endere\u00c3\u00a7o: "}, {"DSB_GEOLOCATION_LBL", "Localiza\u00c3\u00a7\u00c3\u00a3o geogr\u00c3\u00a1fica: "}, {"DSB_DELPAGE_LBL", "P\u00c3\u00a1gina gerada pelo sistema, n\u00c3\u00a3o pode ser exclu\u00c3\u00adda."}, {"DSB_DELPAGE_HDR", "Excluir p\u00c3\u00a1gina?"}, {"DSB_DELPAGECONFIRM_MSG", "Deseja excluir a p\u00c3\u00a1gina?"}, {"CZ_YES", "Sim"}, {"CZ_CERT_ISSUER", "Emissor de certificado"}, {"CZ_SUB_DN", "Nome distinto do assunto"}, {"CZ_CERT_SN", "N\u00c3\u00bamero de s\u00c3\u00a9rie do certificado"}, {"CZ_VALID_FROM", "V\u00c3\u00a1lido de"}, {"CZ_EXPIRES_ON", "Expira em"}, {"CZ_STATUS", "Estado"}, {"CZ_REQ_GEN", "Solicita\u00c3\u00a7\u00c3\u00a3o gerada"}, {"CZ_SUB_KEY_ID", "Identificador de chave de assunto"}, {"CZ_CRL_STATUS", "Estado da CRL"}, {"CZ_CRL_EXPIRES_ON", "CRL expira em"}, {"CZ_CRL_REQUIRED", "CRL obrigat\u00c3\u00b3ria"}, {"CZ_CRL_AUTO_URL", "URL de atualiza\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica da CRL"}, {"CZ_HEADER", "Certificados e Solicita\u00c3\u00a7\u00c3\u00b5es de certificados"}, {"CZ_NAME", "Nome"}, {"CZ_TYPE", "Tipo"}, {"CZ_VALIDATED", "Validado"}, {"CZ_EXPIRES", "Expira"}, {"CZ_DETAILS", "Detalhes"}, {"CZ_CONFIGURE", "Configurar"}, {"CZ_DELETE_CERT", "Excluir este certificado"}, {"CZ_CANT_DELETE_CERT", "Este \u00c3\u00a9 um certificado interno e n\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel exclu\u00c3\u00ad-lo"}, {"CZ_EMAIL_CERT", "Enviar este certificado por e-mail"}, {"CZ_CANT_EMAIL_CERT", "Somente certificados locais importados e solicita\u00c3\u00a7\u00c3\u00b5es de assinatura podem ser enviados por e-mail"}, {"CZ_IMPORT_CERT_CRL", "Importar lista de revoga\u00c3\u00a7\u00c3\u00a3o de certificados"}, {"CZ_UPLOAD_SIGNED_CERT", "Upload de certificado assinado"}, {"CZ_CERT_SEARCH", "Pesquisa de certificados"}, {"CZ_CERT_SELECTED", "Voc\u00c3\u00aa optou por excluir o certificado"}, {"CZ_SURE", "Tem certeza de que deseja continuar"}, {"CZ_CERTS_SELECTED", "Selecionou o(s) seguinte(s) certificado(s) para excluir."}, {"CZ_PLZ_SELECT", "Selecione certificado(s) a ser(em) exclu\u00c3\u00addo(s)."}, {"CZ_VIEW_STYLE", "Estilo de visualiza\u00c3\u00a7\u00c3\u00a3o de certificados"}, {"CZ_ALL_CERTS", "Todos os certificados"}, {"CZ_IMPORT_CERTS", "Solicita\u00c3\u00a7\u00c3\u00b5es e certificados importados"}, {"CZ_BUILTIN_CERTS", "Certificados integrados"}, {"CZ_INCLUDE_EXPIRED_CERTS", "Incluir certificados integrados expirados"}, {"CZ_IMPORT", "Importar..."}, {"CZ_NEW_REQ", "Nova solicita\u00c3\u00a7\u00c3\u00a3o de assinatura..."}, {"CZ_DEL_CERTS", "Excluir certificado(s)"}, {"CZ_REQUIRE_CERT", "A importa\u00c3\u00a7\u00c3\u00a3o requer um Nome de certificado."}, {"CZ_IMPORT_REQUIRE_FILE", "A importa\u00c3\u00a7\u00c3\u00a3o requer um Arquivo de certificado."}, {"CZ_NO_DOT", "Nome do certificado inv\u00c3\u00a1lido. N\u00c3\u00a3o \u00c3\u00a9 permitido ter um '.'."}, {"CZ_IMPORT_REQUIRE_CMP", "A importa\u00c3\u00a7\u00c3\u00a3o requer uma Senha de gerenciamento de certificado."}, {"CZ_IMPORT_CERT", "Importar certificado"}, {"CZ_IMPORT_LOCAL", "Importe um certificado de usu\u00c3\u00a1rio final local com chave privada de um arquivo codificado PKCS n\u00c2\u00ba 12 (.p12 ou .pfx)"}, {"CZ_IMPORT_CA", "Importar um certificado de CA de um arquivo codificado PKCS n\u00c2\u00ba 7 (.p7b), PEM (.pem) ou DER (.der ou .cer)"}, {"CZ_CERT_NAME", "Nome do certificado"}, {"CZ_CMP", "Senha de gerenciamento de certificado"}, {"CZ_SEL_FILE", "Selecione um arquivo a ser importado"}, {"CZ_SPECIFY_FILE", "Especifique um arquivo a ser importado"}, {"CZ_UPLOAD_CERT", "Upload de certificado"}, {"CZ_UPLOAD_SIGN_CERT", "Upload de certificado assinado para solicita\u00c3\u00a7\u00c3\u00a3o de assinatura"}, {"CZ_SEL_UPLOAD_FILE", "Selecione um arquivo para fazer upload"}, {"CZ_FILE_FORMAT", "O arquivo deve ser codificado por PEM (.pem) ou DER (.der ou .cer)"}, {"CZ_EXPORT_CERT", "Exportar certificado"}, {"CZ_EXPORT_CERT_REQ", "Exportar solicita\u00c3\u00a7\u00c3\u00a3o de certificado"}, {"CZ_CERT_EMAIL_CONTENT", " Uma solicita\u00c3\u00a7\u00c3\u00a3o de certificado PKCS n\u00c2\u00ba 10 foi gerada e est\u00c3\u00a1 dispon\u00c3\u00advel para ser enviada por e-mail. Salve este arquivo no disco local para envio a uma autoridade de registro ou certifica\u00c3\u00a7\u00c3\u00a3o. O arquivo ser\u00c3\u00a1 salvo no formato de solicita\u00c3\u00a7\u00c3\u00a3o de certificado PEM, por padr\u00c3\u00a3o, como"}, {"CZ_CHANGE_FILE_NAME", "(o nome do arquivo pode ser alterado no download conforme necess\u00c3\u00a1rio)."}, {"CZ_SPECIFY_URL", "Especifique um URL da CRL."}, {"CZ_SPECIFY_CRL_FILE", "Especifique um arquivo CRL a ser importado"}, {"CZ_INVALID_FILE", "O formato do arquivo selecionado n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_LC", "Especifique um arquivo de certificado local v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_CA", "Especifique um arquivo de certificado CA v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_CRL", "Especifique um arquivo CRL v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_SIGNED", "Especifique um arquivo de certificado com assinatura v\u00c3\u00a1lida."}, {"CZ_IMPORT_CRL", "Importar CRL"}, {"CZ_IMPORT_CRL_FULL", "Importar lista de revoga\u00c3\u00a7\u00c3\u00a3o de certificados"}, {"CZ_IMPORT_CRL_FILE", "Importar CRL diretamente de um arquivo codificado PEM (.pem) ou DER (.der ou .crl)"}, {"CZ_SEL_CRL_FILE", "Selecione um arquivo CRL a ser importado"}, {"CZ_AUTO_IMPORT_CRL", "Importar CRL automaticamente e periodicamente via HTTP"}, {"CZ_CRL_LOC", "Inserir local da CRL (URL)"}, {"CZ_INVALIDATE_CERTS", "Invalidar certificados e associa\u00c3\u00a7\u00c3\u00b5es de seguran\u00c3\u00a7a se houver falha na importa\u00c3\u00a7\u00c3\u00a3o ou no processamento da CRL"}, {"CZ_CMP_REQUIRE", "A senha de gerenciamento de certificado \u00c3\u00a9 necess\u00c3\u00a1ria para exportar um certificado"}, {"CZ_CERT_NAME_REQUIRE", "A gera\u00c3\u00a7\u00c3\u00a3o de PKCS10 requer um nome de certificado."}, {"CZ_CERT_NAME_IN_USE", "Nome de certificado j\u00c3\u00a1 em uso. Selecione outro."}, {"CZ_SUB_DN_REQUIRE", "A gera\u00c3\u00a7\u00c3\u00a3o PKCS10 requer pelo menos um atributo nome do assunto."}, {"CZ_CN_TWO_CHARS", "Nome do pa\u00c3\u00ads deve ter dois caracteres"}, {"CZ_DOMAIN_INVALID", "Nome de dom\u00c3\u00adnio inv\u00c3\u00a1lido em nome alternativo do assunto."}, {"CZ_IP_INVALID", "Endere\u00c3\u00a7o IP inv\u00c3\u00a1lido em nome alternativo do assunto."}, {"CZ_EMAIL_INVALID", "Endere\u00c3\u00a7o de e-mail inv\u00c3\u00a1lido em nome alternativo do assunto."}, {"CZ_CERT_REQ", "Solicita\u00c3\u00a7\u00c3\u00a3o de assinatura de certificado"}, {"CZ_GEN_CERT_REQ", "Gerar solicita\u00c3\u00a7\u00c3\u00a3o de assinatura de certificado"}, {"CZ_CERT_ALIAS", "Alias de certificado"}, {"CZ_COUNTRY", "Pa\u00c3\u00ads"}, {"CZ_STATE", "Estado"}, {"CZ_LOC", "Distrito ou munic\u00c3\u00adpio"}, {"CZ_COMPANY", "Empresa ou organiza\u00c3\u00a7\u00c3\u00a3o"}, {"CZ_LOC_CITY", "Distrito, cidade ou munic\u00c3\u00adpio"}, {"CZ_DEPT", "Departamento"}, {"CZ_GROUP", "Grupo"}, {"CZ_TEAM", "Equipe"}, {"CZ_CNAME", "Nome comum"}, {"CZ_SN", "N\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"CZ_EMAIL", "Endere\u00c3\u00a7o de e-mail"}, {"CZ_SUB_ALT_NAME", "Nome alternativo do assunto (opcional)"}, {"CZ_DOMAIN_NAME", "Nome do dom\u00c3\u00adnio"}, {"CZ_IPV4", "Endere\u00c3\u00a7o IPv4"}, {"CZ_SUB_KEY_TYPE", "Tipo de chave do assunto"}, {"CZ_SIG_ALGORITHM", "Algoritmo de assinatura"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "Tamanho da chave do assunto"}, {"CZ_NO_CERTS", "N\u00c3\u00a3o foram encontrados certificados"}, {"IMPORT", "Importar"}, {"CZ_SCEP_CONFIG", "Configura\u00c3\u00a7\u00c3\u00a3o SCEP"}, {"CZ_CSR_LIST", "Lista CSR"}, {"CZ_NO_CSR", "Sem CSR"}, {"CZ_CHALLENGE_PWD", "Senha de desafio (opcional)"}, {"CZ_CA_URL", "O URL de CA"}, {"CZ_REQ_COUNT", "Contagem de solicita\u00c3\u00a7\u00c3\u00b5es"}, {"CZ_POLL_INTERVAL", "Intervalo(s) de pesquisa"}, {"CZ_POLL_TIME", "Tempo(s) de pesquisa m\u00c3\u00a1ximo(s)"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "O URL de CA n\u00c3\u00a3o pode ficar vazio"}, {"CZ_GEN_CSR", "N\u00c3\u00a3o existe nenhum CSR dispon\u00c3\u00advel, gere pelo menos um"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "Todas as configura\u00c3\u00a7\u00c3\u00b5es do filtro selecionado ser\u00c3\u00a3o enviadas para todas as unidades no n\u00c3\u00b3 do grupo selecionado."}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "Todas as configura\u00c3\u00a7\u00c3\u00b5es do filtro selecionado ser\u00c3\u00a3o herdadas do n\u00c3\u00b3 principal da \\unidade selecionada."}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "Todas as configura\u00c3\u00a7\u00c3\u00b5es do filtro selecionado ser\u00c3\u00a3o enviadas do n\u00c3\u00b3 do grupo selecionado para o n\u00c3\u00b3 principal.<br>Para aplicar as configura\u00c3\u00a7\u00c3\u00b5es selecionadas para todas as unidades no n\u00c3\u00b3 principal (excluindo o n\u00c3\u00b3 selecionado e os seus filhos) realize a sele\u00c3\u00a7\u00c3\u00a3o adequada na tela de Visualiza\u00c3\u00a7\u00c3\u00a3o."}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "Todas as configura\u00c3\u00a7\u00c3\u00b5es do filtro selecionado ser\u00c3\u00a3o enviadas da unidade selecionada para o n\u00c3\u00b3 principal.<br>Para aplicar as configura\u00c3\u00a7\u00c3\u00b5es selecionadas para todas as unidades no n\u00c3\u00b3 principal (excluindo a unidade selecionada) realize a sele\u00c3\u00a7\u00c3\u00a3o adequada na tela de Visualiza\u00c3\u00a7\u00c3\u00a3o."}, {"WS_URI_HEADER", "URI p\u00c3\u00bablico"}, {"WS_URI_INSTRUCTIONS", "Insira o nome do servidor p\u00c3\u00bablico para esta implanta\u00c3\u00a7\u00c3\u00a3o.  Este nome ser\u00c3\u00a1 usado para acessar Servi\u00c3\u00a7os da Web neste servidor e ser\u00c3\u00a1 inclu\u00c3\u00addo em v\u00c3\u00adnculos cruzados incorporados."}, {"WS_URI_NOTE", "Nota: a porta do servidor p\u00c3\u00bablico \u00c3\u00a9 usada para acessar Servi\u00c3\u00a7os GMS da Web do dom\u00c3\u00adnio p\u00c3\u00bablico. Para modificar a porta na qual a GMS executa Servi\u00c3\u00a7os Web, navegue at\u00c3\u00a9 Interface do sistema/Implanta\u00c3\u00a7\u00c3\u00a3o/Configura\u00c3\u00a7\u00c3\u00b5es"}, {"WS_DEPLOYMENT_HEADER", "implanta\u00c3\u00a7\u00c3\u00a3o GMS"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "Selecione a implanta\u00c3\u00a7\u00c3\u00a3o para configurar servi\u00c3\u00a7os Web para."}, {"WS_DEPLOYMENT_ERROR", "N\u00c3\u00a3o existem implanta\u00c3\u00a7\u00c3\u00b5es licenciadas da SonicWall atualmente ativas"}, {"WS_STATUS_HEADER", "Servi\u00c3\u00a7os da Web"}, {"WS_SERVICES_ERROR", "N\u00c3\u00a3o foram encontrados servi\u00c3\u00a7os da Web para esta implanta\u00c3\u00a7\u00c3\u00a3o"}, {"WS_DEPLOYMENTS_EMPTY", "N\u00c3\u00a3o foi poss\u00c3\u00advel obter a lista de implanta\u00c3\u00a7\u00c3\u00b5es.  ptRegistre esta inst\u00c3\u00a2ncia de GMSVP."}, {"WS_DISTRIBUTED_HEADER", "Inst\u00c3\u00a2ncias distribu\u00c3\u00addas"}, {"WS_DISTRIBUTED_EMPTY", "N\u00c3\u00a3o existem inst\u00c3\u00a2ncias distribu\u00c3\u00addas configuradas para este servidor"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "Aplicar modelo: "}, {"HM_APPLY_RECORDING_TASK_DESC", "Aplicar registro: "}, {"LM_CONFIRM_DELETE_RULE", "Tem certeza de que deseja excluir a(s) regra(s) selecionada(s)?"}, {"LM_SUCCESS_DELETE_RULE", "A\u00c3\u00a7\u00c3\u00a3o Excluir regra efetuada com \u00c3\u00aaxito."}, {"LM_FAILURE_DELETE_RULE", "Falha ao excluir a(s) regra(s) selecionada(s) com \u00c3\u00aaxito."}, {"LM_SUCCESS_UPDATE_RULE", "A\u00c3\u00a7\u00c3\u00a3o Atualizar regra efetuada com \u00c3\u00aaxito."}, {"LM_FAILURE_UPDATE_RULE", "Falha ao atualizar a regra com \u00c3\u00aaxito."}, {"LM_DUPLICATE_STMT_NAME", "J\u00c3\u00a1 existe uma Regra com o nome especificado.\\nEspecifique um nome exclusivo para a regra"}, {"LM_RULE_DESTINATION_EMPTY", "O Destino est\u00c3\u00a1 em branco.\\nEspecifique uma entrada v\u00c3\u00a1lida."}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "O Destino n\u00c3\u00a3o pode exceder os 256 caracteres.\\nEspecifique uma entrada v\u00c3\u00a1lida."}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "O valor do destino deve ser especificado para o tipo selecionado.\\nEspecifique uma entrada v\u00c3\u00a1lida."}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "Deve ser atribu\u00c3\u00adda uma programa\u00c3\u00a7\u00c3\u00a3o a cada destino.\\nSelecione uma programa\u00c3\u00a7\u00c3\u00a3o ou um grupo de programa\u00c3\u00a7\u00c3\u00b5es v\u00c3\u00a1lidas."}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "O dom\u00c3\u00adnio do Destino selecionado nesta p\u00c3\u00a1gina n\u00c3\u00a3o corresponde \\nao da Gravidade selecionado na p\u00c3\u00a1gina anterior.\\n\\n\u00c3\u2030 importante que os objetos sejam selecionados a partir do mesmo dom\u00c3\u00adnio.\\nSe a gravidade selecionada estiver incorreta, volte atr\u00c3\u00a1s e escolha a gravidade do dom\u00c3\u00adnio original.\\nCaso contr\u00c3\u00a1rio, selecione um Destino do dom\u00c3\u00adnio que corresponda \u00c3\u00a0 Gravidade."}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "O dom\u00c3\u00adnio da Programa\u00c3\u00a7\u00c3\u00a3o selecionado nesta p\u00c3\u00a1gina n\u00c3\u00a3o corresponde \\nao da Gravidade selecionado na p\u00c3\u00a1gina anterior.\\n\\n\u00c3\u2030 importante que os objetos sejam selecionados a partir do mesmo dom\u00c3\u00adnio.\\nSe a gravidade selecionada estiver incorreta, volte atr\u00c3\u00a1s e escolha a gravidade do dom\u00c3\u00adnio original.\\nCaso contr\u00c3\u00a1rio, selecione uma Programa\u00c3\u00a7\u00c3\u00a3o do dom\u00c3\u00adnio que corresponda \u00c3\u00a0 Gravidade."}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "Falha ao configurar o estado da barra de controle."}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "Falha ao configurar o estado da rolagem autom\u00c3\u00a1tica."}, {"LM_READER_START_SUCCESS", "O leitor do monitor din\u00c3\u00a2mico foi iniciado."}, {"LM_READER_START_FAILURE", "N\u00c3\u00a3o foi poss\u00c3\u00advel iniciar o Leitor do monitor din\u00c3\u00a2mico. Verifique a Configura\u00c3\u00a7\u00c3\u00a3o das defini\u00c3\u00a7\u00c3\u00b5es da rede.\\n (Nota: o endere\u00c3\u00a7o e a porta de encaminhamento especificados devem estar acess\u00c3\u00advel a partir do Console/servidor Web)."}, {"LM_READER_STOP_SUCCESS", "O leitor do monitor din\u00c3\u00a2mico foi parado."}, {"LM_READER_STOP_FAILURE", "N\u00c3\u00a3o foi poss\u00c3\u00advel parar o Leitor do monitor din\u00c3\u00a2mico."}, {"LM_EC_DISABLED", "O encaminhamento do syslog est\u00c3\u00a1 atualmente desabilitado.<br>Os syslogs deve ser encaminhados para o servi\u00c3\u00a7o de Gerenciador de eventos para monitoramento.<br>Para habilitar o encaminhamento de syslogs para monitoramento, clique em Configura\u00c3\u00a7\u00c3\u00b5es na barra de controle acima."}, {"LM_READER_NO_ALERT_MSG", "N\u00c3\u00a3o foram recebidos novos alertas pelo Leitor.<br>Nota: se o problema persistir, verifique as Configura\u00c3\u00a7\u00c3\u00b5es do monitor e as configura\u00c3\u00a7\u00c3\u00b5es syslog do dispositivo."}, {"LM_READER_STOPPED_MSG", "O Leitor est\u00c3\u00a1 atualmente parado.<br>Inicie-o clicando no bot\u00c3\u00a3o Iniciar na barra de controle acima."}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "N\u00c3\u00a3o tem acesso \u00c3\u00a0(s) unidade(s)/dispositivo(s).<br>Se quiser monitorar os syslogs encaminhados por qualquer uma das unidades, contate seu administrador."}, {"LM_READER_ERROR_MSG", "Erro encontrado.<br>Ocorreu uma exce\u00c3\u00a7\u00c3\u00a3o durante o processamento da coleta do leitor do monitor din\u00c3\u00a2mico."}, {"LM_READER_SOCKET_ERROR_MSG", "Erro encontrado.<br>Ocorreu uma exce\u00c3\u00a7\u00c3\u00a3o ao iniciar o leitor do monitor din\u00c3\u00a2mico.<br>Detalhes da exce\u00c3\u00a7\u00c3\u00a3o: "}, {"LM_FAILURE_UPDATE_SETTINGS", "Falha ao atualizar as configura\u00c3\u00a7\u00c3\u00b5es do monitor din\u00c3\u00a2mico."}, {"LM_SUCCESS_UPDATE_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es do monitor din\u00c3\u00a2mico atualizadas com \u00c3\u00aaxito."}, {"LM_WARN_ENABLE_EC", "O Gerenciador de eventos usa syslogs encaminhados pelo Coletor de syslogs para monitoramento. Os syslogs s\u00c3\u00a3o enviados para o Mecanismo para identificar eventos com base em regras definidas.\\n\\nNota: ao habilitar esta op\u00c3\u00a7\u00c3\u00a3o, encaminhar\u00c3\u00a1 syslogs recebidos por todos os servi\u00c3\u00a7os do Coletor de syslogs em uma implanta\u00c3\u00a7\u00c3\u00a3o para um servi\u00c3\u00a7o de Gerenciador central de eventos. Isto aumentar\u00c3\u00a1 o tr\u00c3\u00a1fego de syslogs na rede, uma vez que cada mensagem \u00c3\u00a9 clonada pelo Coletor de syslogs para manipula\u00c3\u00a7\u00c3\u00a3o de eventos."}, {"LM_STMT_CHANGED_MSG_1", "Efetuou altera\u00c3\u00a7\u00c3\u00b5es \u00c3\u00a0 Regra selecionada"}, {"LM_STMT_CHANGED_MSG_2", ".\\nVoltar \u00c3\u00a0 tela anterior (p\u00c3\u00a1gina Listagem das regras) significa que voc\u00c3\u00aa perder\u00c3\u00a1 as altera\u00c3\u00a7\u00c3\u00b5es.\\nPressione OK para ir para a p\u00c3\u00a1gina da Lista das regras ou Cancelar para continuar a editar a regra."}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "Falha ao atualizar o estado do encaixe."}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "Voc\u00c3\u00aa n\u00c3\u00a3o possui Privil\u00c3\u00a9gios de atualiza\u00c3\u00a7\u00c3\u00a3o nesta Tela."}, {"LM_DELETE_STMT_EMPTY", "Selecione pelo menos uma regra para excluir."}, {"LM_STMT_RULE_EMPTY", "N\u00c3\u00a3o foi selecionada qualquer tipo de regra.\\nSelecione um tipo de regra."}, {"LM_STMT_RULE_DUPLICATE", "J\u00c3\u00a1 existe uma regra com as mesmas propriedades de Tipo de regra e Editor.\\nSelecione propriedades de regra exclusiva para esta regra."}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "As configura\u00c3\u00a7\u00c3\u00b5es do monitor din\u00c3\u00a2mico foram alteradas para o Leitor\\nPode demorar alguns segundos a reiniciar o Leitor com \u00c3\u00aaxito."}, {"LM_NO_RULE_EDITABLE", "N\u00c3\u00a3o existem tipos de regras edit\u00c3\u00a1veis no grupo selecionado.\nSelecione outro tipo de Regra/grupo."}, {"LM_DISABLE_STMT_EMPTY", "Selecione pelo menos uma regra para a a\u00c3\u00a7\u00c3\u00a3o habilitar/desabilitar."}, {"LM_SUCCESS_DISABLE_RULE", "A\u00c3\u00a7\u00c3\u00a3o Habilitar/Desabilitar regra efetuada com \u00c3\u00aaxito."}, {"LM_FAILURE_DISABLE_RULE", "Falha ao habilitar/desabilitar a(s) regra(s) selecionada(s) com \u00c3\u00aaxito."}, {"LM_EDIT_RULE_MSG_1", "Selecionou a(s) seguinte(s) regra(s) para editar:\\n"}, {"LM_EDIT_RULE_MSG_2", "\\nA lista selecionada cont\u00c3\u00a9m toda(s) a(s) regra(s) que n\u00c3\u00a3o pode(m) ser editada(s).\\n\\nSelecione outra regra para continuar."}, {"LM_EDIT_RULE_MSG_3", "\\nA lista selecionada cont\u00c3\u00a9m uma(v\u00c3\u00a1rias) regra(s) marcada(s) por * que n\u00c3\u00a3o pode(m) ser editada(s).\\n\\nDeseja continuar excluindo as restantes regras?"}, {"LM_DELETE_RULE_MSG_1", "Selecionou a(s) seguinte(s) regra(s) para excluir:\\n"}, {"LM_DELETE_RULE_MSG_2", "\\nA lista selecionada cont\u00c3\u00a9m toda(s) a(s) regra(s) que n\u00c3\u00a3o pode(m) ser exclu\u00c3\u00adda(s).\\n\\nSelecione outra regra para continuar."}, {"LM_DELETE_RULE_MSG_3", "\\nA lista selecionada cont\u00c3\u00a9m uma(v\u00c3\u00a1rias) regra(s) marcada(s) por * que n\u00c3\u00a3o pode(m) ser exclu\u00c3\u00adda(s).\\n\\nDeseja continuar excluindo as restantes regras?"}, {"LM_DELETE_RULE_MSG_4", "\\nDeseja continuar?"}, {"MASKED_LIVEMONITOR_MESSAGE", "A mensagem de alerta foi mascarada da exibi\u00c3\u00a7\u00c3\u00a3o com base em pol\u00c3\u00adticas privadas impostas"}, {"MASKED_ADDITIONAL_INFORMATION", "As informa\u00c3\u00a7\u00c3\u00b5es adicionais foram mascaradas da exibi\u00c3\u00a7\u00c3\u00a3o com base nas pol\u00c3\u00adticas privadas"}, {"DSB_NONENGFW_ALERT_TITLE", "Alerta da vers\u00c3\u00a3o do firmware!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "Este GMS est\u00c3\u00a1 a gerenciar dispositivos SonicOS que est\u00c3\u00a3o a executar os firmwares n\u00c3\u00a3o ingleses."}, {"DSB_NONENGFW_ALERT_MSGPART2", "Observe que objetos e pol\u00c3\u00adticas definidos em caracteres n\u00c3\u00a3o ingleses em estes dispositivos podem n\u00c3\u00a3o ser exibidos corretamente na interface do GMS do usu\u00c3\u00a1rio. Modificar e enviar tais objetos e pol\u00c3\u00adticas a tais dispositivos pode n\u00c3\u00a3o ter os resultados esperados."}, {"SYSLOGTAIL_STARTED", "O Leitor de syslog (Monitoramento do syslog em tempo real) foi iniciado."}, {"SYSLOGTAIL_START_FAILED", "N\u00c3\u00a3o foi poss\u00c3\u00advel iniciar o Leitor de syslog. Verifique a configura\u00c3\u00a7\u00c3\u00a3o de encaminhamento do syslog&nbsp;&nbsp;(Nota: o endere\u00c3\u00a7o e a porta de encaminhamento especificados devem estar acess\u00c3\u00advel a partir do Console/servidor Web)."}, {"SYSLOGTAIL_ALREADY_RUNNING", "O Leitor de syslog (Monitoramento do syslog em tempo real) j\u00c3\u00a1 est\u00c3\u00a1 a ser executado; n\u00c3\u00a3o foram realizadas altera\u00c3\u00a7\u00c3\u00b5es"}, {"SYSLOGTAIL_STOPPED", "O Leitor de syslog (Monitoramento do syslog em tempo real) foi parado."}, {"SYSLOGTAIL_ALREADY_STOPPED", "O Leitor de syslog (Monitoramento do syslog em tempo real) j\u00c3\u00a1 est\u00c3\u00a1 parado; n\u00c3\u00a3o foram realizadas altera\u00c3\u00a7\u00c3\u00b5es"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "N\u00c3\u00a3o foram recebidos novos syslogs pelo Leitor."}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(O leitor pode ainda estar a tentar coletar os syslogs)."}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(Se o problema persistir, verifique as Configura\u00c3\u00a7\u00c3\u00b5es do leitor de syslog e as do firewall."}, {"SYSLOGTAIL_CONFIG_CHECK", "Verifique as Configura\u00c3\u00a7\u00c3\u00b5es do leitor de syslog e as do firewall."}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "N\u00c3\u00a3o foram encontrados syslogs."}, {"SYSLOGTAIL_MODIFY_FILTER", "Tente modificar a cadeia de caracteres de filtro para obter melhores resultados."}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(Nota: use <b>E</b> ou <b>OU</b> entre v\u00c3\u00a1rias cadeias para obter melhores resultados)."}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "O Leitor de syslog est\u00c3\u00a1 atualmente parado"}, {"SYSLOGTAIL_START", "Inicie o Leitor de syslog."}, {"SYSLOGTAIL_ERROR", "Erro encontrado."}, {"SYSLOGTAIL_ERROR_MESSAGE", "Ocorreu uma exce\u00c3\u00a7\u00c3\u00a3o durante o processamento da coleta de syslog."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Encaminhamento do syslog desabilitado."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Configure o endere\u00c3\u00a7o e a porta de Encaminhamento do syslog e inicie o Leitor de syslog."}, {"MASKED_SYSLOG_MESSAGE", "A mensagem de syslog restante foi mascarada da exibi\u00c3\u00a7\u00c3\u00a3o com base em pol\u00c3\u00adticas privadas impostas"}, {"EVENT_ALERTS_SEARCH", "Alertas de pesquisa"}, {"EVENT_ALERTS_DELETE", "Excluir alerta(s)"}, {"EVENT_ALERTS_ENABLE_DISABLE", "Habilitar/Desabilitar alerta(s)"}, {"EVENT_ALERTS_ADD", "Adicionar alerta"}, {"EVENT_ALERTS_HEADER", "Alertas"}, {"EVENT_ALERTS_ALERT_NAME", "Nome"}, {"EVENT_ALERTS_ALERT_TYPE", "Tipo de alerta"}, {"EVENT_ALERTS_INTERVAL", "Intervalo"}, {"EVENT_ALERTS_DEST_SCHED", "Destino/Programa\u00c3\u00a7\u00c3\u00a3o"}, {"EVENT_ALERTS_ENABLED", "Habilitado"}, {"EVENT_ALERTS_DOMAIN", "Dom\u00c3\u00adnio"}, {"EVENT_ALERTS_CONFIGURE", "Configurar"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "N\u00c3\u00a3o foi encontrado qualquer alerta"}, {"DTF_ANY", "Qualquer momento"}, {"DTF_ADD", "Adicionar unidade"}, {"DTF_EXECUTE", "Executar"}, {"DTF_ENABLED", "Habilitado"}, {"DTF_SEARCH", "Pesquisa de Tarefas padr\u00c3\u00a3o"}, {"DTF_NOT_FOUND", "N\u00c3\u00a3o foram encontradas Tarefas padr\u00c3\u00a3o."}, {"DTF_DT", "Tarefas padr\u00c3\u00a3o"}, {"DTF_DESC", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"DTF_TOU", "Tipos de unidades"}, {"DTF_DURING", "Tarefa criada durante"}, {"DTF_NO_DTS", "N\u00c3\u00a3o foram selecionadas tarefas padr\u00c3\u00a3o para execu\u00c3\u00a7\u00c3\u00a3o."}, {"DTF_EXEC", "Executar esta tarefa padr\u00c3\u00a3o."}, {"DTF_NO_DISABLE", "Esta tarefa padr\u00c3\u00a3o n\u00c3\u00a3o pode ser desabilitada."}, {"DTF_NO_EXEC", "Esta tarefa padr\u00c3\u00a3o n\u00c3\u00a3o pode ser executada."}, {"DTF_SEL_UNITS", "Selecionar unidades"}, {"DTF_EXEC_METHOD", "M\u00c3\u00a9todo de execu\u00c3\u00a7\u00c3\u00a3o"}, {"DTF_ATLEAST_ONE", "Selecione pelo menos uma unidade para executar a tarefa."}, {"DTF_EXEC_ALL", "Execute as tarefas padr\u00c3\u00a3o em todas as unidades no sistema"}, {"DTF_EXEC_FOLL", "Execute as tarefas padr\u00c3\u00a3o nas seguintes unidades selecionadas"}, {"DTF_REAPPLY_1", "Executar apenas se n\u00c3\u00a3o tiver sido aplicado previamente"}, {"DTF_REAPPLY_2", "Somente as tarefas que n\u00c3\u00a3o foram aplicadas previamente \u00c3\u00a0(s) unidade(s) selecionada(s) ser\u00c3\u00a3o executadas."}, {"DTF_REAPPLY_3", "As tarefas padr\u00c3\u00a3o que j\u00c3\u00a1 foram executadas ser\u00c3\u00a3o ignoradas para essa unidade."}, {"DTF_EXEC_1", "Executar mesmo que tenha sido aplicado previamente"}, {"DTF_EXEC_2", "Todas as tarefas selecionadas ter\u00c3\u00a3o de ser executadas novamente na(s) unidade(s) selecionada(s) mesmo que tenham sido aplicadas previamente."}, {"DTF_ENABLE_SUCCESS", "Atualizou a sele\u00c3\u00a7\u00c3\u00a3o de Tarefas padr\u00c3\u00a3o com \u00c3\u00aaxito."}, {"DTF_ENABLE_FAIL", "Falha ao atualizar a sele\u00c3\u00a7\u00c3\u00a3o de Tarefas padr\u00c3\u00a3o com \u00c3\u00aaxito."}, {"DTF_SCHEDULE_SUCCESS", "Programou com \u00c3\u00aaxito as Tarefas padr\u00c3\u00a3o para execu\u00c3\u00a7\u00c3\u00a3o."}, {"DTF_SCHEDULE_FAIL", "N\u00c3\u00a3o existem Tarefas padr\u00c3\u00a3o programadas uma vez que as tarefas selecionadas n\u00c3\u00a3o s\u00c3\u00a3o aplic\u00c3\u00a1veis ou j\u00c3\u00a1 foram executadas."}, {"AUTOASSIGN_AGENT_HEADER", "Configura\u00c3\u00a7\u00c3\u00b5es de atribui\u00c3\u00a7\u00c3\u00a3o de agentes"}, {"AUTOASSIGN_AGENT_MSG_1", " requer que os agentes sejam propriet\u00c3\u00a1rios de unidades para gerenciamento, gera\u00c3\u00a7\u00c3\u00a3o de relat\u00c3\u00b3rios e monitoramento. A atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica de agentes garante que as unidades est\u00c3\u00a3o uniformemente balanceadas para melhor aloca\u00c3\u00a7\u00c3\u00a3o de recursos, desempenho otimizado, armazenamento adequado e alta disponibilidade. Este recurso pode ser habilitado com base nos modos gerenciados selecionados durante a opera\u00c3\u00a7\u00c3\u00a3o Adicionar unidade. "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "O usu\u00c3\u00a1rio pode reatribuir agentes na caixa de di\u00c3\u00a1logo <i>Modificar unidade</i>."}, {"AUTOASSIGN_AGENT_MSG_2", "O usu\u00c3\u00a1rio pode reatribuir agentes na caixa de di\u00c3\u00a1logo <i>Modificar unidade</i> ou usando a opera\u00c3\u00a7\u00c3\u00a3o <i>Reatribuir agentes</i>."}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "Somente para os modos de gerenciamento SSL, LAN ou T\u00c3\u00banel existente: A atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica se aplica somente aos modos <i>T\u00c3\u00banel existente</i> e <i>SSL</i>, sendo necess\u00c3\u00a1ria a atribui\u00c3\u00a7\u00c3\u00a3o manual para <i>T\u00c3\u00banel de gerenciamento</i>."}, {"AUTOASSIGN_AGENT_MSG_ALL", "Todos os modos de gerenciamento: A atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica se aplica a todos os modos. Para o modo <i>T\u00c3\u00banel de gerenciamento</i>, as configura\u00c3\u00a7\u00c3\u00b5es de agente precisam ser configuradas na unidade gerenciada."}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "A Atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica de agentes foi habilitada"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "A Atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica de agentes foi desabilitada"}, {"AUTOASSIGN_AGENT_ENABLE", "Habilitar atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica de agentes"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL e Usando um t\u00c3\u00banel existente ou LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "Tudo"}, {"TEMPLATE_SETTINGS_TITLE", "[BR]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[BR]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[BR]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[BR]Apply Default Configuration"}, {"CUI_NO_FS", "N\u00c3\u00a3o foi encontrado um servidor de fluxo."}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "BR The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "BR The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "Tem certeza que deseja alterar a configura\u00c3\u00a7\u00c3\u00a3o"}, {"LOGCONFIG_SECTITLE_2", "Mensagens de log"}, {"LOGCONFIG_DELLABEL", "Excluir logs anteriores a:"}, {"LOGCONFIG_MONTH", "M\u00c3\u00aas"}, {"LOGCONFIG_DAY", "Dia"}, {"LOGCONFIG_YEAR", "Ano"}, {"LOGCONFIG_FORLABEL", "para"}, {"LOGCONFIG_DOMAIN", "Dom\u00c3\u00adnio"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "Erro: n\u00c3\u00a3o foi poss\u00c3\u00advel atualizar a configura\u00c3\u00a7\u00c3\u00a3o"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "Tem certeza de que deseja alterar a programa\u00c3\u00a7\u00c3\u00a3o?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "Tem certeza de que deseja alterar o n\u00c3\u00bamero m\u00c3\u00a1ximo da contagem de arquivos de log?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "Arquivo "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " Mensagens de log"}, {"APPLOG_CONFIG_DELETE_MSG_1", "Logs ajudam a rastrear as atividades nesse sistema. Essas atividades est\u00c3\u00a3o associadas diretamente ou indiretamente a a\u00c3\u00a7\u00c3\u00b5es iniciadas pelo usu\u00c3\u00a1rio ou com base em a\u00c3\u00a7\u00c3\u00b5es iniciadas pelo sistema. Esses logs s\u00c3\u00a3o importantes para fins de trilha de auditoria e conformidade, bem como para solu\u00c3\u00a7\u00c3\u00a3o de problemas de opera\u00c3\u00a7\u00c3\u00a3o do sistema."}, {"APPLOG_CONFIG_DELETE_MSG_2", "Logs, que n\u00c3\u00a3o precisam ser armazenados no sistema, podem ser exclu\u00c3\u00addos manualmente. Esta \u00c3\u00a9 uma a\u00c3\u00a7\u00c3\u00a3o de uma vez e ser\u00c3\u00a1 executada com base na data selecionada para exclus\u00c3\u00a3o. "}, {"APPLOG_CONFIG_DELETE_MSG_21", "A a\u00c3\u00a7\u00c3\u00a3o de exclus\u00c3\u00a3o nesta tela somente eliminar\u00c3\u00a1 os logs que n\u00c3\u00a3o s\u00c3\u00a3o relacionadas \u00c3\u00a0s ordens de altera\u00c3\u00a7\u00c3\u00a3o."}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "Logs que n\u00c3\u00a3o precisam ser armazenados no sistema podem ser exportados no formato CSV/HTML e ser descarregados do banco de dados. O processo de arquivamento arquivar\u00c3\u00a1 primeiro os dados para o diret\u00c3\u00b3rio <i>archivedLogs</i> de acordo com o \"Cronograma de log de arquivamento\" e os dados ser\u00c3\u00a3o exclu\u00c3\u00addos do banco de dados. "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "A a\u00c3\u00a7\u00c3\u00a3o de arquivamento exportar\u00c3\u00a1 todos os logs, incluindo aqueles relacionados \u00c3\u00a0 altera\u00c3\u00a7\u00c3\u00a3o de ordens, mas a exclus\u00c3\u00a3o ignorar\u00c3\u00a1 a elimina\u00c3\u00a7\u00c3\u00a3o de entradas relacionadas \u00c3\u00a0 altera\u00c3\u00a7\u00c3\u00a3o de ordem."}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "Nota: Para implanta\u00c3\u00a7\u00c3\u00b5es sem janelas: Para descarregar os arquivos log arquivados para o disco local, navegue at\u00c3\u00a9 Dispositivo > Sistemas > Tela Gerenciador de Arquivos."}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "Habilitar arquivo"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "Manter "}, {"APPLOG_CONFIG_ARCHIVE_For", " para:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "Arquivos m\u00c3\u00a1ximos de mensagem de log:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "Formato do arquivo:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "Configura\u00c3\u00a7\u00c3\u00b5es do arquivo"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "Mensagens de log atualizadas com \u00c3\u00aaxito"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "Arquivar mensagens GMS de log para"}, {"WF_SETTINGS_TITLE", "Configura\u00c3\u00a7\u00c3\u00b5es"}, {"WF_SETTINGS_MSG_1", "O Workflow \u00c3\u00a9 um sistema para supervisionar as altera\u00c3\u00a7\u00c3\u00b5es de configura\u00c3\u00a7\u00c3\u00a3o realizadas em um ou mais dispositivos. Ele permite realizar an\u00c3\u00a1lise e fornecer coment\u00c3\u00a1rios sobre as altera\u00c3\u00a7\u00c3\u00b5es propostas, atribuir propriedade e fornecer responsabilidade por todas as a\u00c3\u00a7\u00c3\u00b5es e todas com logs para auditoria. Gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem \u00c3\u00a9 um componente do Workflow que permite ver altera\u00c3\u00a7\u00c3\u00b5es realizadas em dispositivos, visualizar as altera\u00c3\u00a7\u00c3\u00b5es em linha na tela no contexto do dispositivo e tamb\u00c3\u00a9m comparar v\u00c3\u00a1rias altera\u00c3\u00a7\u00c3\u00b5es de ordem. "}, {"WF_SETTINGS_MSG_2", "Nota: Gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem e aprova\u00c3\u00a7\u00c3\u00a3o pode ser habilitado/desabilitado a um n\u00c3\u00advel de dom\u00c3\u00adnio. Desabilitar o Gerenciamento de aprova\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 independente do Gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem, mas desabilitar o Gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem tamb\u00c3\u00a9m desabilita o Gerenciamento de aprova\u00c3\u00a7\u00c3\u00a3o."}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "Mesmo quando habilitado, o Fluxo de trabalho ser\u00c3\u00a1 aplicado somente aos dispositivos que est\u00c3\u00a3o licenciados ativamente para os seguintes servi\u00c3\u00a7os: "}, {"WF_SETTINGS_ENABLE_COM", "Habilitar gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem"}, {"WF_SETTINGS_ENABLE_WF", "Habilitar gerenciamento de aprova\u00c3\u00a7\u00c3\u00a3o"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "Configura\u00c3\u00a7\u00c3\u00b5es de cronograma padr\u00c3\u00a3o de altera\u00c3\u00a7\u00c3\u00a3o de ordem"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "Altera\u00c3\u00a7\u00c3\u00a3o de ordem pode ser programado para ser executado ap\u00c3\u00b3s o envio com base nas configura\u00c3\u00a7\u00c3\u00b5es a seguir. Especificar um padr\u00c3\u00a3o usar\u00c3\u00a1 automaticamente a configura\u00c3\u00a7\u00c3\u00a3o selecionada quando uma nova Altera\u00c3\u00a7\u00c3\u00a3o de ordem \u00c3\u00a9 criada."}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "Programa\u00c3\u00a7\u00c3\u00a3o: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "Executar manualmente"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "Imediato na Aprova\u00c3\u00a7\u00c3\u00a3o"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "Em"}, {"WF_CONFIG_DELETE_MSG_1", "Logs ajudam a rastrear as atividades nesse sistema. Essas atividades est\u00c3\u00a3o associadas diretamente ou indiretamente a a\u00c3\u00a7\u00c3\u00b5es iniciadas pelo usu\u00c3\u00a1rio ou com base em a\u00c3\u00a7\u00c3\u00b5es iniciadas pelo sistema. Esses logs s\u00c3\u00a3o importantes para fins de trilha de auditoria e conformidade, bem como para solu\u00c3\u00a7\u00c3\u00a3o de problemas de opera\u00c3\u00a7\u00c3\u00a3o do sistema."}, {"WF_CONFIG_DELETE_MSG_2", "As altera\u00c3\u00a7\u00c3\u00b5es de ordem, geralmente com mais de "}, {"WF_CONFIG_DELETE_MSG_3", " que n\u00c3\u00a3o precisam ser armazenadas no sistema podem ser exclu\u00c3\u00addas manualmente. Esta \u00c3\u00a9 uma a\u00c3\u00a7\u00c3\u00a3o de uma vez e ser\u00c3\u00a1 executada com base na data selecionada para exclus\u00c3\u00a3o. A a\u00c3\u00a7\u00c3\u00a3o de exclus\u00c3\u00a3o nesta tela somente eliminar\u00c3\u00a1 dados, tarefas e logs relacionados \u00c3\u00a0s altera\u00c3\u00a7\u00c3\u00b5es de ordem."}, {"APPLOG_CONFIG_DEL_DATA", "Excluir dados a cada"}, {"FA_UNIT_STATUS_HEADER", "Detalhes da unidade"}, {"FA_UNIT_STATUS_SERIAL", "N\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"FA_UNIT_STATUS_NODE_NAME", "Nome da unidade"}, {"FA_UNIT_STATUS_MODEL", "Modelo"}, {"FA_UNIT_STATUS_FIRMWARE", "Vers\u00c3\u00a3o do firmware"}, {"FA_UNIT_STATUS_IP", "IP gerenciado"}, {"FA_UNIT_STATUS_LICENSE", "Visualiza\u00c3\u00a7\u00c3\u00a3o de aplicativos"}, {"FA_GROUP_STATUS_HEADER1", "Detalhes do firmware"}, {"FA_GROUP_STATUS_HEADER2", "Status da licen\u00c3\u00a7a de relat\u00c3\u00b3rios de fluxo"}, {"FA_GROUP_STATUS_NO_DATA", "Nenhum dado dispon\u00c3\u00advel"}, {"FA_LICENSE_NOT_AVAILABLE", "N\u00c3\u00a3o licenciado"}, {"FA_LICENSE_AVAILABLE", "Licenciado"}, {"FA_LICENSE_FREE_TRAIL", "Avalia\u00c3\u00a7\u00c3\u00a3o gratuita"}, {"FA_LICENSE_EXPIRED", "Expirado"}, {"FA_GROUP_FIREWALL_COUNT", "Firewalls no sistema"}, {"FA_FLOW_IP1", "Agente de fluxo 1"}, {"FA_FLOW_IP2", "Agente de fluxo 2"}, {"FA_FLOW_AGENT_STATUS", "Status do Agente de fluxo"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "Configura\u00c3\u00a7\u00c3\u00b5es de firewall"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "T\u00c3\u00banel VPN"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "IP remoto"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "Reten\u00c3\u00a7\u00c3\u00a3o de dados (dias)"}, {"FA_FLOW_FORWARDER_IP", "Encaminhador de fluxo"}, {"FA_FLOWS_COLLECTED", "Fluxos coletados"}, {"FA_DISK_ALLOCATED", "Disco alocado"}, {"FA_DISK_USED", "Disco usado"}, {"FA_FLOW_STATUS", "Status"}, {"FA_NO_AGENT", "Nenhum Agente de fluxo atribu\u00c3\u00addo"}, {"FA_MODELSUPPORT", "A op\u00c3\u00a7\u00c3\u00a3o Relat\u00c3\u00b3rios de fluxo n\u00c3\u00a3o est\u00c3\u00a1 habilitada para este modelo"}, {"FA_FIRMWARESUPPORT", "A op\u00c3\u00a7\u00c3\u00a3o Relat\u00c3\u00b3rios de fluxo n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel para esta vers\u00c3\u00a3o"}, {"FA_LICENSESUPPORT", "N\u00c3\u00a3o est\u00c3\u00a3o dispon\u00c3\u00adveis informa\u00c3\u00a7\u00c3\u00b5es relativas \u00c3\u00a0 licen\u00c3\u00a7a Visualiza\u00c3\u00a7\u00c3\u00a3o de aplicativos"}, {"FA_HEADING", "Agentes de fluxo"}, {"FA_FLOW_AGENT", "Agente de fluxo"}, {"FA_FLOW_HEAD_IP1", "Agente de fluxo 1"}, {"FA_FLOW_HEAD_IP2", "Agente de fluxo 2"}, {"FA_FLOW_HEAD_HDD", "Disco r\u00c3\u00adgido (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "Largura de banda (%)"}, {"FA_FLOW_FORWARDER_HEAD", "Encaminhador de fluxo"}, {"FA_FLOW_PAIR", "Par de Agentes de fluxo"}, {"FA_FLOW_HEAD_DISKSIZE", "Tamanho do disco"}, {"FA_FLOW_HEAD_GATEWAY", "Firewall de gateway"}, {"FA_FLOW_HEAD_TUNNELS", "T\u00c3\u00baneis"}, {"FA_FLOW_HEAD_TENANTS", "Locat\u00c3\u00a1rios"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "Nome"}, {"GF_GATEWAY", "Gateway"}, {"GF_LAST_UPDATED", "\u00c3\u0161ltima atualiza\u00c3\u00a7\u00c3\u00a3o"}, {"GF_DEST_ADDRESS_RANGE", "Intervalo de endere\u00c3\u00a7os de destino"}, {"GF_LOCAL_ADDRESS_RANGE", "Intervalo de endere\u00c3\u00a7os locais"}, {"FA_STATUS", "Status"}, {"CLOUDSETTINGS_SECTITLE_1", "Adicionar novo par de Agentes de fluxo"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "Agente de fluxo 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "Agente de fluxo 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "Mem\u00c3\u00b3ria (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "Armazenamento do banco de dados de fluxo (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "Configura\u00c3\u00a7\u00c3\u00b5es do servidor syslog em nuvem"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Habilitar a gera\u00c3\u00a7\u00c3\u00a3o de relat\u00c3\u00b3rios syslog para o servidor syslog:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Endere\u00c3\u00a7o IP do servidor syslog:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Porta do servidor syslog:"}, {"CLOUDSETTINGS_SECTITLE_3", "Configura\u00c3\u00a7\u00c3\u00b5es do Agente de fluxo em nuvem"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "N\u00c3\u00bamero de firewalls por Agente de fluxo:"}, {"CLOUDSETTINGS_SECTITLE_5", "[BR]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[BR]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es do SonicPoint"}, {"SP_MANAGEDBY", "Gerenciado por"}, {"SP_IPADDR", "Endere\u00c3\u00a7o IP"}, {"SP_SUBNET", "M\u00c3\u00a1scara de sub-rede"}, {"SP_IFACE", "Interface"}, {"SP_ZONE", "Zona"}, {"SP_MODEL", "Modelo"}, {"SP_ENABLED", "Habilitado"}, {"SP_DISABLED", "Desabilitado"}, {"SP_STATUS", "Estado"}, {"SP_MACADDR", "Endere\u00c3\u00a7o MAC"}, {Integer.toString(-919), "[BR]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[BR]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[BR]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[BR]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[BR]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[BR]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[BR]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[BR]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[BR]Successfully authenticated with the unit."}, {Integer.toString(-928), "[BR]Authentication with the unit failed."}, {Integer.toString(-929), "[BR]The unit is registered with the backend."}, {Integer.toString(-930), "[BR]The unit is not registered with the backend."}, {Integer.toString(-931), "[BR]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[BR]Heart beats for the unit have been started."}, {Integer.toString(-933), "[BR]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[BR]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[BR]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[BR]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[BR]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[BR]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[BR]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[BR]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[BR]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[BR]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[BR]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[BR]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[BR]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[BR]ZeroTouch feature was disabled for the firewall."}, {"TICKET_INFORMATION", "[BR] Connectwise Ticket"}, {"TICKET_DETAILS", "[BR] Details"}, {"CONNECTWISE_NOTE", "[BR] GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}};
+    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "Dispositivo (Singular)"}, {"APPLIANCE_NAME_PLURAL", "Dispositivos (Plural)"}, {"APPLIANCE_DESC", "Descri\u00c3\u00a7\u00c3\u00a3o para o dispositivo"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewalls"}, {"SONICWALL_DESC", "Dispositivos de firewall"}, {"SSLVPN_NAME", "SRA"}, {"SSLVPN_NAME_PLURAL", "SRAs"}, {"SSLVPN_DESC", "Dispositivos SRA"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDPs"}, {"CDP_DESC", "Dispositivos CDP"}, {"ESV_NAME", "Aventail SSL-VPN"}, {"ESV_NAME_PLURAL", "Aventail SSL-VPNs"}, {"ESV_DESC", "Dispositivos Aventail SSL-VPN"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ESs"}, {"ESA_DESC", "Dispositivos de seguran\u00c3\u00a7a de e-mail"}, {"OTHERS_NAME", "OUTRO"}, {"OTHERS_NAME_PLURAL", "OUTROS"}, {"OTHERS_DESC", "Outros dispositivos"}, {"MINUTE", "Minutos"}, {"TEST_STRING", "Isto \u00c3\u00a9 uma cadeia de caracteres de teste \u00e2\u20ac\u201c remover antes da entrega"}, {"PROGRESS_ACTION_TIMED", "Esta a\u00c3\u00a7\u00c3\u00a3o poder\u00c3\u00a1 levar algum tempo a completar"}, {"PROGRESS_PLEASE_WAIT", "Aguarde..."}, {"LOADING_PLEASE_WAIT", "Carregando, por favor, aguarde..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "Voc\u00c3\u00aa n\u00c3\u00a3o possui Privil\u00c3\u00a9gios de atualiza\u00c3\u00a7\u00c3\u00a3o nesta Tela."}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "Voc\u00c3\u00aa n\u00c3\u00a3o tem permiss\u00c3\u00b5es para ver quaisquer telas, efetue logout e entre em contato com o seu Administrador."}, {"UPDATE", "Atualizar"}, {"RESET", "Redefinir"}, {"NO_PANEL_PERMISSIONS", "[BR]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "C\u00c3\u00b3digos de modelos sincronizados com \u00c3\u00aaxito"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "Falha ao sincronizar c\u00c3\u00b3digos de modelos"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "A coloca\u00c3\u00a7\u00c3\u00a3o de tarefas em spool foi iniciada com \u00c3\u00aaxito."}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "Falha \u00e2\u20ac\u201c Nenhuma unidade dispon\u00c3\u00advel para aplicar a atualiza\u00c3\u00a7\u00c3\u00a3o."}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "O seguinte C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o foi adicionado com \u00c3\u00aaxito - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "Os c\u00c3\u00b3digos de ativa\u00c3\u00a7\u00c3\u00a3o foram adicionados com \u00c3\u00aaxito."}, {"ERROR_ADD_ACTIVATION_CODE", "Erro ao adicionar c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o: o seguinte C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o j\u00c3\u00a1 existe - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "O seguinte C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o foi exclu\u00c3\u00addo com \u00c3\u00aaxito - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "O(s) c\u00c3\u00b3digo(s) de ativa\u00c3\u00a7\u00c3\u00a3o foi(foram) exclu\u00c3\u00addo(s) com \u00c3\u00aaxito."}, {"ERROR_DELETE_ACTIVATION_CODE", "Excluir erro de ativa\u00c3\u00a7\u00c3\u00a3o de c\u00c3\u00b3digo: o seguinte c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o existe - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "Excluir erro de ativa\u00c3\u00a7\u00c3\u00a3o de c\u00c3\u00b3digo: n\u00c3\u00a3o foi poss\u00c3\u00advel excluir o(s) seguinte(s) c\u00c3\u00b3digo(s) de ativa\u00c3\u00a7\u00c3\u00a3o - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "O seguinte c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o foi adicionado ao banco de dados do SonicWall GMS: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "o seguinte c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o foi removido do pool de c\u00c3\u00b3digos dispon\u00c3\u00adveis: "}, {"UPDATE_DB_MESSAGE", "a altera\u00c3\u00a7\u00c3\u00a3o foi atualizada com \u00c3\u00aaxito no banco de dados do SonicWall GMS."}, {"FAILURE_UPDATE_DB_MESSAGE", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o: n\u00c3\u00a3o foi poss\u00c3\u00advel atualizar a altera\u00c3\u00a7\u00c3\u00a3o no banco de dados do SonicWall GMS com \u00c3\u00aaxito."}, {"NO_UNITS_FOR_REGISTRATION", "Sem unidades a registrar"}, {"FREE_TRAIL_NOT_APPLIED", "Todas as unidades est\u00c3\u00a3o por registrar ou j\u00c3\u00a1 t\u00c3\u00aam uma assinatura"}, {"AV_FAILURE_MESSAGE", "N\u00c3\u00a3o est\u00c3\u00a3o dispon\u00c3\u00adveis unidades para Atualizar nem para Registrar"}, {"AV_SUCCESS_MESSAGE", "Tarefa(s) iniciada(s) com \u00c3\u00aaxito para atualizar assim como para registrar"}, {"AV_SUCCESS_UPGRADE", "Tarefa(s) iniciada(s) com \u00c3\u00aaxito para Atualizar"}, {"AV_NO_SUCCESS_REG", "Sem unidades dispon\u00c3\u00adveis para Registrar"}, {"AV_SUCCESS_REG", "A tarefa foi iniciada com \u00c3\u00aaxito para o Registro"}, {"AV_NO_SUCCESS_UPGRADE", "Sem unidades dispon\u00c3\u00adveis para Atualizar"}, {"TASK_SUCCESS_MESSAGE", "A tarefa foi iniciada com \u00c3\u00aaxito"}, {"TASK_CMP_ERROR", "A senha de CMP s\u00c3\u00b3 pode ser alterada em n\u00c3\u00advel da unidade"}, {"TASK_ERROR_MESSAGE", "As tarefas n\u00c3\u00a3o s\u00c3\u00a3o iniciadas com \u00c3\u00aaxito"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "N\u00c3\u00a3o existem unidades dispon\u00c3\u00adveis para a opera\u00c3\u00a7\u00c3\u00a3o de Compartilhamento de licen\u00c3\u00a7as."}, {"SGMS_EMAIL_BOTTOM_MSG1", "Desenvolvido por "}, {"SGMS_EMAIL_BOTTOM_MSG2", " Vers\u00c3\u00a3o "}, {"SGMS_EMAIL_BOTTOM_MSG3", " S\u00c3\u00a9rie: "}, {"SGMS_EMAIL_BOTTOM_MSG4", " Servidor: "}, {"FIRMWARE_DOWNLOADED", "Foi baixada uma nova c\u00c3\u00b3pia de firmware."}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", " ir\u00c3\u00a1 expirar muito em breve para os seguintes dispositivos.\nContate a sec\u00c3\u00a7\u00c3\u00a3o de vendas da SonicWall para adquirir c\u00c3\u00b3digos de ativa\u00c3\u00a7\u00c3\u00a3o para a renova\u00c3\u00a7\u00c3\u00a3o destas assinaturas."}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "Informa\u00c3\u00a7\u00c3\u00b5es sobre a expira\u00c3\u00a7\u00c3\u00a3o da assinatura."}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "N\u00c3\u00a3o foram encontradas nenhumas expira\u00c3\u00a7\u00c3\u00b5es."}, {"VERSION_MESSAGE", "Vers\u00c3\u00a3o # do SonicWall GMS: "}, {"NUM_NODES_MESSAGE", "N\u00c3\u00bamero de n\u00c3\u00b3s que podem ser gerenciados por este SonicWall GMS: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "Descri\u00c3\u00a7\u00c3\u00a3o do produto GMS: "}, {"DATABASE_TYPE_MESSAGE", "Tipo de banco de dados: "}, {"MODEL_TYPES_MESSAGE", "N\u00c3\u00bamero de n\u00c3\u00b3s e nome do modelo: "}, {"NUM_AGENTS_MESSAGE", "N\u00c3\u00bamero de agentes no sistema: "}, {"AGENT_IP_MESSAGE", "Endere\u00c3\u00a7o IP dos agentes: "}, {"UNKNOWN_MESSAGE", "Desconhecido"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "BANCO DE DADOS desconhecido"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "Caracteres inv\u00c3\u00a1lidos [<,\\,:] no nome da unidade."}, {"PM_NAME_KEYWORD", " \u00c3\u00a9 uma palavra-chave e n\u00c3\u00a3o pode ser usada como nome de uma unidade. Use outro nome"}, {"PM_NAME_EXISTS_A", "Uma unidade com o nome '"}, {"PM_NAME_EXISTS_B", "' j\u00c3\u00a1 existe "}, {"PM_UNKNOWN", "Desconhecido"}, {"PM_UNKNOWN_UNREGISTERED", "Desconhecido/N\u00c3\u00a3o registrado"}, {"PM_UNREGISTERED", "N\u00c3\u00a3o registrado"}, {"PM_YES", "Sim"}, {"PM_NO", "N\u00c3\u00a3o"}, {"PM_ENABLED", "Habilitado"}, {"PM_DISABLED", "Desabilitado"}, {"PM_NOTAVAILABLE", "N\u00c3\u00a3o dispon\u00c3\u00advel"}, {"PM_UNLIMITED", "Ilimitado"}, {"PM_CURRENT", "Atual"}, {"PM_DEFAULT", "Padr\u00c3\u00a3o"}, {"PM_EXPIRED", "Expirado"}, {"PM_UP", "Ativo"}, {"PM_DOWN", "Inativo"}, {"PM_NOT_ACQUIRED", "N\u00c3\u00a3o adquirido"}, {"PM_SINCE", " desde "}, {"PM_NONE", "Nenhum"}, {"PM_N_A", "N/A"}, {"PM_NO_LICENSE", "Sem licen\u00c3\u00a7a"}, {"PM_MODEL", "Modelo"}, {"PM_SERIAL_NUM", "N\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"PM_DOMAIN", "Dom\u00c3\u00adnio"}, {"PM_NUM_LAN_IPS", "N\u00c3\u00bamero de IPs LAN permitidos"}, {"PM_HA", "Alta disponibilidade"}, {"PM_DMZ_PORT", "Porta DMZ"}, {"PM_NUM_WORKPORTS", "N\u00c3\u00bamero de IPs WorkPort permitidos"}, {"PM_HOMEPORT", "HomePort"}, {"PM_WLAN_PORT", "Porta WLAN"}, {"PM_OPT_PORT", "Porta OPT"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "Atualiza\u00c3\u00a7\u00c3\u00a3o de VPN"}, {"PM_VPN_CLIENTS", "Clientes VPN globais"}, {"PM_IPS", "Servi\u00c3\u00a7o de preven\u00c3\u00a7\u00c3\u00a3o contra intrus\u00c3\u00b5es"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "Antiv\u00c3\u00adrus do gateway"}, {"PM_FIRMWARE_VERSION", "Vers\u00c3\u00a3o do firmware"}, {"PM_REGISTRATION_CODE", "C\u00c3\u00b3digo de registro"}, {"PM_CFS_SUB", "Servi\u00c3\u00a7o/Lista de filtro de conte\u00c3\u00bado"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "Antiv\u00c3\u00adrus"}, {"PM_WARRANTY", "Garantia alargada"}, {"PM_SW_STATUS", "Estado"}, {"PM_SW_MANAGEDINSTANCE", "Gerenciado por inst\u00c3\u00a2ncia"}, {"PM_TASKS_PENDING", "Tarefas pendentes"}, {"PM_LAST_LOG", "Entrada do \u00c3\u00baltimo log"}, {"PM_SAS_CONFIG_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es sobre a configura\u00c3\u00a7\u00c3\u00a3o SA"}, {"PM_SAS_DEFINED", "SAs definidos"}, {"PM_SAS_ENABLED", "SAs habilitados"}, {"PM_SAS_AVAILABLE", "SAs dispon\u00c3\u00adveis"}, {"PM_SAS_REMAINING", "SAs restantes"}, {"PM_SAS_INTERCONNECTED", "SAs interconectados"}, {"PM_AGENT_ASSIGNED", "Agente atribu\u00c3\u00addo"}, {"PM_PRIMARY_AGENT", "Agente principal"}, {"PM_STANDBY_AGENT", "Agente em espera"}, {"PM_TUNNEL_MGMT", "Modo de gerenciamento"}, {"PM_FW_ADDED_TO_GMS", "Unidade adicionada ao SonicWall GMS a"}, {"PM_FW_UP_SINCE", "Unidade ativa desde"}, {"PM_FW_DOWN_SINCE", "Unidade inativa desde"}, {"PM_SW_IP", "IP do SonicWall"}, {"PM_TIME_ZONE", "Fuso hor\u00c3\u00a1rio"}, {"PM_SW_IN_SYSTEM", "no Sistema"}, {"PM_SW_IN_DMZ", "no DMZ"}, {"PM_SW_IN_GROUP", "no Grupo"}, {"PM_SW_UNREGISTERED", "que N\u00c3\u00a3o est\u00c3\u00a3o registrados"}, {"PM_SW_VPN_UPGRADE", "com a atualiza\u00c3\u00a7\u00c3\u00a3o de VPN"}, {"PM_SW_VPN_CLIENT", "com a atualiza\u00c3\u00a7\u00c3\u00a3o do cliente VPN global"}, {"PM_SW_MSSP", "que suportam MSSP"}, {"PM_CFL_SUBSCRIPTION", "Servi\u00c3\u00a7o/Lista de filtro de conte\u00c3\u00bado"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "Antiv\u00c3\u00adrus"}, {"PM_HGMS_SUBSCRIPTION", "Servi\u00c3\u00a7os em nuvem"}, {"PM_SUPPORT_SUBSCRIPTION", "Suporte"}, {"PM_EXTENDED_WARRANTY", "Garantia alargada"}, {"PM_UNITS_DOWN", "SonicWalls inativos"}, {"PM_PENDING_TASKS", "SonicWalls com Tarefas pendentes"}, {"PM_MANAGED_WITH_TUNNEL", "SonicWalls gerenciados usando o T\u00c3\u00banel de gerenciamento"}, {"PM_TASK_SPOOLED", "A tarefa foi colocada em spool para alterar o Nome do host."}, {"PM_RAVLIN_MODEL", "Modelo Ravlin"}, {"PM_LAN_MAC_SERIAL", "MAC/N\u00c3\u00bamero de s\u00c3\u00a9rie de LAN"}, {"PM_WAN_MAC", "MAC de WAN"}, {"PM_FIRMWARE_VERSION", "Vers\u00c3\u00a3o do firmware"}, {"PM_HW_VERSION", "Vers\u00c3\u00a3o de hardware"}, {"PM_ROM_VERSION", "Vers\u00c3\u00a3o ROM"}, {"PM_SECURITY_ID", "ID de seguran\u00c3\u00a7a"}, {"PM_RAVLIN_STATUS", "Estado do Ravlin"}, {"PM_TASKS_PENDING", "Tarefas pendentes"}, {"PM_AGENT_ASSIGNED", "Agente atribu\u00c3\u00addo"}, {"PM_RAVLINS_IN_NODE", "Ravlins no n\u00c3\u00b3"}, {"PM_RAVLINS_DOWN", "Ravlins inativos"}, {"PM_RAVLINS_PENDING_TASKS", "Ravlins com tarefas pendentes"}, {"PM_FIX_UNIT_ERROR", "Ocorreu um erro ao corrigir a unidade "}, {"PM_MOD_UNIT_EXISTS", "A unidade modificada j\u00c3\u00a1 existe com o n\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "A unidade modificada com o nome"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "j\u00c3\u00a1 existe "}, {"PM_ADD_ERR_PRIVILEGES", "ERRO: voc\u00c3\u00aa n\u00c3\u00a3o possui privil\u00c3\u00a9gios suficientes para adicionar a unidade."}, {"PM_UNIT_EXISTS", "A unidade j\u00c3\u00a1 existe com o n\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"PM_UNIT_NAME_EXISTS_A", "Unidade com o nome"}, {"PM_UNIT_NAME_EXISTS_B", "j\u00c3\u00a1 existe no dom\u00c3\u00adnio "}, {"PM_ADD_UNIT_ERR", "Erro ao adicionar a unidade ao banco de dados SonicWall."}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "Insira um n\u00c3\u00bamero de s\u00c3\u00a9rie v\u00c3\u00a1lido.\nO n\u00c3\u00bamero de s\u00c3\u00a9rie deve ter "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "caracteres de comprimento."}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "O n\u00c3\u00bamero de s\u00c3\u00a9rie s\u00c3\u00b3 deve conter caracteres hexadecimais."}, {"PM_GET_PREFS_ERR", "Erro ao recuperar o arquivo de prefer\u00c3\u00aancias."}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "A unidade n\u00c3\u00a3o est\u00c3\u00a1 licenciada para servi\u00c3\u00a7os em nuvem.\nLicencie um dos seguintes servi\u00c3\u00a7os em MySonicWall.com antes de adicionar a unidade a "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " n\u00c3\u00a3o consegue obter informa\u00c3\u00a7\u00c3\u00b5es de licenciamento para esta unidade.\nTente novamente mais tarde."}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " n\u00c3\u00a3o consegue comunicar com MySonicWall.com para verificar as licen\u00c3\u00a7as para esta unidade.\nTente novamente mais tarde."}, {"PM_LICENSED", "Licenciado"}, {"PM_NOT_LICENSED", "N\u00c3\u00a3o licenciado"}, {"PM_IS_MSSP", "Unidade MSSP"}, {"PM_SYSLOG_FORMAT", "Formato syslog"}, {"PM_STATUS_MSG_ONLY", "Apenas mensagens de estado"}, {"PM_SYSLOG_IN_UTC", "Logs no UTC"}, {"PM_VIEWPOINT_MODE", "Modo Analyzer habilitado"}, {"PM_NAME_RESOLUTION", "Modo de resolu\u00c3\u00a7\u00c3\u00a3o de nome"}, {"PM_ACCESS_MODE", "Modo de acesso"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "DNS e depois NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"PM_CONNECTWISE_STATUS", "[BR] Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[BR] Not Available"}, {"VM_PATCH_DETECTED_MSG1", " detectou disponibilidade para novas atualiza\u00c3\u00a7\u00c3\u00b5es de software"}, {"VM_PATCH_DETECTED_MSG2", "Erro ao enviar e-mail ao Administrador com informa\u00c3\u00a7\u00c3\u00b5es sobre as novas atualiza\u00c3\u00a7\u00c3\u00b5es de software. O SMTP ou o e-mail do Administrador n\u00c3\u00a3o est\u00c3\u00a1 configurado."}, {"VM_PATCH_DETECTED_MSG3", " Atualiza\u00c3\u00a7\u00c3\u00b5es de software dispon\u00c3\u00adveis\n\n"}, {"VM_NEW", "Novo "}, {"VM_PATCH_DETECTED_MSG4", "Para notas de vers\u00c3\u00a3o e informa\u00c3\u00a7\u00c3\u00b5es sobre o download, efetue o login em sua conta<a href=https://www.mysonicwall.com>MySonicWall.com</a> "}, {"VM_SCREEN", " Tela."}, {"VM_PATCH_DETECTED_MSG5", " Verifica\u00c3\u00a7\u00c3\u00a3o da atualiza\u00c3\u00a7\u00c3\u00a3o de corre\u00c3\u00a7\u00c3\u00a3o de componentes efetuada com \u00c3\u00aaxito. Foram encontradas novas atualiza\u00c3\u00a7\u00c3\u00b5es de componentes. E-mail enviado para o administrador"}, {"VM_PATCH_DETECTED_MSG6", "Falha ao baixar a atualiza\u00c3\u00a7\u00c3\u00a3o da corre\u00c3\u00a7\u00c3\u00a3o "}, {"VM_FOR", " para "}, {"VM_ON", " a "}, {"VM_PATCH_DETECTED_MSG7", " download do componente de corre\u00c3\u00a7\u00c3\u00a3o anulado. arquivo de corre\u00c3\u00a7\u00c3\u00a3o j\u00c3\u00a1 existe: "}, {"VM_PATCH_DETECTED_MSG8", " download do componente de corre\u00c3\u00a7\u00c3\u00a3o efetuado com \u00c3\u00aaxito: "}, {"VM_PATCH_DETECTED_MSG9", "Erro ao gravar arquivo de corre\u00c3\u00a7\u00c3\u00a3o "}, {"VM_PATCH_DETECTED_MSG10", " no disco."}, {"SDM_UPDATE_SUCCESS", "A atualiza\u00c3\u00a7\u00c3\u00a3o foi um \u00c3\u00aaxito."}, {"SDM_UPDATE_FAILURE", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o."}, {"SDM_UPDATE_SPECIAL_FAILURE", "Falha ao criar tarefas para excluir SA(s)."}, {"SDM_UPDATE_INVALID", "A solicita\u00c3\u00a7\u00c3\u00a3o de atualiza\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lida."}, {"SDM_SCREEN_ID_INVALID", "O ID da tela \u00c3\u00a9 inv\u00c3\u00a1lido"}, {"SDM_READY", "Pronto"}, {"SDM_CGI_ERROR", "Erro ao obter CGI_NAME para "}, {"SDM_DEFAULT_ERROR", "Erro ao obter DEFAULT_VALUE para "}, {"SDM_INVALID_TARGET", "Erro: o grupo de origem ou de destino \u00c3\u00a9 inv\u00c3\u00a1lido."}, {"SDM_METADATA_ERROR", "Erro ao obter metadados para "}, {"SDM_DB_ERROR", "Erro ao acessar o banco de dados do SonicWall GMS."}, {"SDM_NOVPN_ERROR", "O VPN n\u00c3\u00a3o est\u00c3\u00a1 habilitado nesta unidade. Erro ao criar VPN para a unidade "}, {"SDM_NO_TARGET_VPN_ERROR", "O VPN n\u00c3\u00a3o est\u00c3\u00a1 habilitado no destino. Erro ao criar VPN para a unidade "}, {"SDM_NOSAS_ERROR", "Nenhuns SAs restantes dispon\u00c3\u00adveis nesta unidade. Erro ao criar VPN para a unidade "}, {"SDM_NO_TARGET_SAS_ERROR", "N\u00c3\u00a3o existem SAs restantes dispon\u00c3\u00adveis no destino. Erro ao criar VPN para a unidade "}, {"SDM_NO_UNITS_ERROR", "N\u00c3\u00a3o foram criadas tarefas."}, {"SDM_NO_3RDPARTYCERTS_ERROR", "N\u00c3\u00a3o foi encontrada nenhuma combina\u00c3\u00a7\u00c3\u00a3o v\u00c3\u00a1lida de Certificado CA/Local de terceiros. Ignorando SA de VPN \u00c3\u00a0 unidade "}, {"SDM_DHCP_ERROR", "O endere\u00c3\u00a7amento din\u00c3\u00a2mico est\u00c3\u00a1 habilitado tanto na unidade de origem como na de destino, portanto, o SA n\u00c3\u00a3o pode ser criado. Ignorando cria\u00c3\u00a7\u00c3\u00a3o de SA de VPN. "}, {"SDM_NOAES_ERROR", "O AES n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel nesta unidade. Erro ao criar VPN para a unidade "}, {"SDM_NO_TARGET_AES_ERROR", "O AES n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel no destino. Erro ao criar VPN para a unidade "}, {"SDM_DELETE_SUCCESS", "A exclus\u00c3\u00a3o foi um \u00c3\u00aaxito "}, {"SDM_DELETE_FAILURE", "Falha na exclus\u00c3\u00a3o "}, {"SDM_AGENTNAME_INVALID", "Caractere inv\u00c3\u00a1lido [<,\\,:,',@,#,*,$] no nome do Agente."}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "Falha na cria\u00c3\u00a7\u00c3\u00a3o de tarefas para SAs de VPNS com maior interconectividade"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o de grupo para "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "SAs de VPN com interconectividade aprimorada"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "SAs de VPN com interconectividade padr\u00c3\u00a3o"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "SAs de VPN sem interconectividade aprimorada"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "SAs de VPN sem interconectividade padr\u00c3\u00a3o"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "Ignorando a cria\u00c3\u00a7\u00c3\u00a3o de SA para esta unidade porque a vers\u00c3\u00a3o do firmware nesta unidade n\u00c3\u00a3o suporta o tipo de interface de T\u00c3\u00banel"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "Tarefa programada a executar a"}, {"PASSWORD_CHANGED", "A senha do SonicWall GMS foi alterada com \u00c3\u00aaxito."}, {"PASSWORD_NOT_CHANGED_A", "Foi especificada a senha antiga incorreta.<BR>"}, {"PASSWORD_NOT_CHANGED_B", " Senha inalterada."}, {"PASSWORD_NOT_CHANGED", "Foi especificada a senha antiga incorreta. Senha inalterada."}, {"LOGS_PASSWD_CHANGED", "A senha de login do usu\u00c3\u00a1rio foi alterada com \u00c3\u00aaxito "}, {"LOGS_PASSWD_NOT_CHANGED", "N\u00c3\u00a3o foi poss\u00c3\u00advel autenticar o usu\u00c3\u00a1rio para alterar a senha de login "}, {"LOGS_ADDED_NEW_USER", "Foi adicionado um novo usu\u00c3\u00a1rio ao banco de dados do SonicWall GMS: "}, {"LOGS_ADDED_NEW_USER_TYPE", "Foi adicionado um novo tipo de usu\u00c3\u00a1rio ao banco de dados do SonicWall GMS: "}, {"LOGS_DELETED_USER", "O usu\u00c3\u00a1rio e as informa\u00c3\u00a7\u00c3\u00b5es correspondentes foram exclu\u00c3\u00addos do banco de dados do SonicWall GMS: "}, {"LOGS_DELETED_GROUP", "O seguinte grupo personalizado e todas as visualiza\u00c3\u00a7\u00c3\u00b5es usando este grupo personalizado foram eliminados do banco de dados do SonicWall GMS: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "Valor do atributo personalizado ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") deve conter somente caracteres alfanum\u00c3\u00a9ricos"}, {"LOGS_ADD_CUSTOM_GROUP", "O seguinte Nome de grupo personalizado/Valor padr\u00c3\u00a3o foi adicionado ao sistema: "}, {"LOGS_MOD_CUSTOM_GROUP", "O seguinte Nome de grupo personalizado/Valor padr\u00c3\u00a3o foi modificado: "}, {"LOGS_DEL_CUSTOM_GROUP", "O seguinte Grupo personalizado foi exclu\u00c3\u00addo do sistema: "}, {"READY", "Pronto"}, {"NAV_OF", " de "}, {"NAV_PREVIOUS", "Anterior"}, {"NAV_NEXT", "Pr\u00c3\u00b3ximo"}, {"NAV_DISPLAYING", "Exibindo"}, {"NAV_FIREWALLS", "Firewall(s)"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "Voc\u00c3\u00aa n\u00c3\u00a3o possui Privil\u00c3\u00a9gios de atualiza\u00c3\u00a7\u00c3\u00a3o nesta Tela."}, {"ACT_WRONG_FILE_FORMAT", "Erro: Formato de arquivo errado, n\u00c3\u00a3o foi poss\u00c3\u00advel adicionar os c\u00c3\u00b3digos."}, {"AUTH_INVALID_PARAMS", "Par\u00c3\u00a2metros inv\u00c3\u00a1lidos, tente novamente"}, {"AUTH_AUTHENTICATE", "Autenticar"}, {"AUTH_PERFORM_LOGIN", "performLogin"}, {"AUTH_RANDOM_TIMEOUT", "o n\u00c3\u00bamero aleat\u00c3\u00b3rio de login atingiu o tempo limite"}, {"AUTH_LOGIN_TIMEOUT", "A p\u00c3\u00a1gina de login atingiu o tempo limite, tente novamente"}, {"AUTH_LOGIN_FAILURE", "Falha no login, tente novamente"}, {"AUTH_LOGIN_FAILURE_LOG", "Falha no login"}, {"NO_DOMAIN_SPECIFIED", "N\u00c3\u00a3o foi especificado um nome de dom\u00c3\u00adnio para o login"}, {"SPECIFY_DOMAIN", "Especifique um nome de dom\u00c3\u00adnio para o login"}, {"INVALID_IP", "[BR]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "Dom\u00c3\u00adnio inv\u00c3\u00a1lido. Especifique um Nome de dom\u00c3\u00adnio v\u00c3\u00a1lido"}, {"INVALID_ALIAS_MSG", "Alias inv\u00c3\u00a1lido. Especifique um Alias v\u00c3\u00a1lido"}, {"REMOTE_SUCCESSFUL_LOGIN", "Login no sistema pelo usu\u00c3\u00a1rio efetuado com \u00c3\u00aaxito: "}, {"TWOFA_FAILED_LOGIN_MSG", "[BR]Invalid Authentication Code. Please enter valid Authentication code. (Make sure that your mobile time is synced to your network time.) "}, {"TWOFA_EMERGENCY_CODE_RESET_MSG", "[BR]EMERGENCY Code Used, 2FA RESET for user : "}, {"REMOTE_FAILED_LOGIN", "Falha na Autentica\u00c3\u00a7\u00c3\u00a3o remota para o usu\u00c3\u00a1rio: "}, {"XML_REMOTE_FAILED_LOGIN", "Falha na Autentica\u00c3\u00a7\u00c3\u00a3o remota baseada em XML para o usu\u00c3\u00a1rio: "}, {"NEW_USER_ADDED", "Novo usu\u00c3\u00a1rio adicionado: "}, {"TO_USER_TYPE", "tipo de usu\u00c3\u00a1rio: "}, {"CLICK_TO_TRY_AGAIN", "Clique aqui para tentar novamente"}, {"USER_LOCKED_OUT", "O usu\u00c3\u00a1rio foi bloqueado, contatar o administrador para obter detalhes"}, {"USER_DISABLED", "A conta do usu\u00c3\u00a1rio est\u00c3\u00a1 desabilitada, contatar o administrador para obter detalhes"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o remota. Contate o seu Administrador do GMS."}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o remota. Contate o seu Administrador do GMS ou tente novamente."}, {"LDAP_AUTH_FAILED", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o remota"}, {"LDAP_USER_NOT_FOUND", "O usu\u00c3\u00a1rio n\u00c3\u00a3o foi encontrado ou n\u00c3\u00a3o existe no diret\u00c3\u00b3rio"}, {"LDAP_INVALID_CREDENTIALS", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o remota: credenciais inv\u00c3\u00a1lidas"}, {"LDAP_COMMUNICATION_ERROR", "N\u00c3\u00a3o foi poss\u00c3\u00advel comunicar com o diret\u00c3\u00b3rio ou com o servi\u00c3\u00a7o de nomenclatura"}, {"LDAP_ANONYMOUS_BIND_SET", "AnonymousBind est\u00c3\u00a1 definido como sendo permitido no dom\u00c3\u00adnio "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "Verifique se o servidor remoto permite Liga\u00c3\u00a7\u00c3\u00b5es an\u00c3\u00b4nimas."}, {"LDAP_INVALID_GROUPS_SPECIFIED", "Grupos de diret\u00c3\u00b3rios inv\u00c3\u00a1lidos especificados. Contate o seu Administrador do GMS."}, {"LDAP_INVALID_GROUP_MEMBER", "O usu\u00c3\u00a1rio n\u00c3\u00a3o \u00c3\u00a9 um membro do(s) Grupo(s) de diret\u00c3\u00b3rio(s) permitido(s)."}, {"RADIUS_UNKNOWN_HOST", "Host do servidor RADIUS desconhecido."}, {"RADIUS_CONNECTION_TIMEOUT", "A conex\u00c3\u00a3o com o servidor remoto RADIUS expirou"}, {"RADIUS_FAILED_LOGIN", "Falha de autentica\u00c3\u00a7\u00c3\u00a3o. Credenciais inv\u00c3\u00a1lidas."}, {"RADIUS_EXCEPTION", "Ocorreu uma exce\u00c3\u00a7\u00c3\u00a3o RADIUS."}, {"RADIUS_INVALID_GROUP_MEMBER", "O usu\u00c3\u00a1rio n\u00c3\u00a3o \u00c3\u00a9 um membro do(s) grupo(s) de RADIUS permitido(s)."}, {"PWD_CHANGE_SCREEN", "Alterar senha."}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "Alterar senha j\u00c3\u00a1 que o comprimento n\u00c3\u00a3o est\u00c3\u00a1 dentro do intervalo permitido: 7\u00e2\u20ac\u201c15 caracteres."}, {"PWD_VALIDATION_FAILURE", "Alterar senha j\u00c3\u00a1 que o comprimento n\u00c3\u00a3o pode exceder os 15 caracteres."}, {"PWD_EXPIRATION", "A senha deve ser alterada a cada {0} dias"}, {"PWD_CHANGE_NEXT_LOGIN", "Altera\u00c3\u00a7\u00c3\u00a3o da senha for\u00c3\u00a7ada pelo administrador."}, {"PASSWORD_EXISTS", "[BR]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[BR]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[BR]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "N\u00c3\u00a3o foi poss\u00c3\u00advel ler o arquivo da licen\u00c3\u00a7a"}, {"CUI_UPGRADE_SUCCESS", "Atualiza\u00c3\u00a7\u00c3\u00a3o efetuada com \u00c3\u00aaxito"}, {"CUI_UPGRADE_FAIL", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o: "}, {"CUI_SYNCH_SUCCESS", "Sincroniza\u00c3\u00a7\u00c3\u00a3o efetuada com \u00c3\u00aaxito"}, {"CUI_SYNCH_FAIL", "Falha na sincroniza\u00c3\u00a7\u00c3\u00a3o: "}, {"CUI_PRORATE_SUCCESS", "Solicita\u00c3\u00a7\u00c3\u00a3o de ProRate efetuada com \u00c3\u00aaxito"}, {"CUI_PRORATE_FAIL", "Falha na solicita\u00c3\u00a7\u00c3\u00a3o de ProRate: "}, {"CUI_CHANGE_PW_SUCCESS", "\u00c3\u0160xito.  Senha aceite por MySonicWall.com."}, {"CUI_CHANGE_PW_FAIL", "Falha.  A senha n\u00c3\u00a3o foi aceite por MySonicWall.com: "}, {"CUI_EMAIL_SUCCESS", "O formul\u00c3\u00a1rio TechSupport foi enviado para o centro de suporte do SonicWall GMS."}, {"CUI_EMAIL_FAIL", "Ocorreu um problema ao enviar o relat\u00c3\u00b3rio TechSupport ao centro de suporte do SonicWall GMS.<br>Tente novamente mais tarde."}, {"CUI_SESSION_TERMINATED", " a sess\u00c3\u00a3o foi terminada com \u00c3\u00aaxito."}, {"CUI_SESSIONS_TERMINATED", " as sess\u00c3\u00b5es foram terminadas com \u00c3\u00aaxito."}, {"CUI_NO_AGENTS", "N\u00c3\u00a3o foram encontrados Agentes."}, {"CUI_FILTER_ADDED", "Filtro adicionado com \u00c3\u00aaxito "}, {"DIAG_DIAG_REQUEST_A", "A solicita\u00c3\u00a7\u00c3\u00a3o de diagn\u00c3\u00b3stico feita em "}, {"DIAG_DIAG_REQUEST_B", " foi enviada."}, {"DIAG_DELETE_SUCCESS", "Exclus\u00c3\u00a3o(\u00c3\u00b5es) efetuada(s) com \u00c3\u00aaxito."}, {"DIAG_EMAIL_SUCCESS", "E-mail(s) enviado(s) com \u00c3\u00aaxito."}, {"DIAG_UNIT_UNKNOWN", "'O nome da unidade n\u00c3\u00a3o \u00c3\u00a9 conhecido '"}, {"DIAG_UNIT", "'Unidade "}, {"VPN_DUPLICATE_UFI", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o. O identificador de firewall exclusivo n\u00c3\u00a3o \u00c3\u00a9 exclusivo no SonicWall GMS."}, {"NO_LOGS_MESSAGE", "N\u00c3\u00a3o foram encontrados logs."}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "N\u00c3\u00a3o foram encontrados logs para os crit\u00c3\u00a9rios de pesquisa fornecidos."}, {"LOG_START_SEARCH", "Iniciar nova pesquisa"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "A sua consulta para os relat\u00c3\u00b3rios {0,n\u00c3\u00bamero,inteiro} \u00c3\u00a9 muito grande. Limite os seus crit\u00c3\u00a9rios de pesquisa."}, {"SQL_EXCEPTION_ERROR_MESSAGE", "Ocorreu um erro na conex\u00c3\u00a3o do banco de dados. Certifique-se de que o banco de dados est\u00c3\u00a1 dispon\u00c3\u00advel e/ou limite seus crit\u00c3\u00a9rios de pesquisa."}, {"UNKNOWN_EXCEPTION_MESSAGE", "Ocorreu um erro ao executar a sua pesquisa. Certifique-se de que o banco de dados est\u00c3\u00a1 dispon\u00c3\u00advel e/ou limite seus crit\u00c3\u00a9rios de pesquisa."}, {"LOG_NEXT", "Pr\u00c3\u00b3ximo"}, {"LOG_PREVIOUS", "Anterior"}, {"LOG_UPDATE_SUCCESS", "A atualiza\u00c3\u00a7\u00c3\u00a3o foi um \u00c3\u00aaxito"}, {"LOG_OF", " de "}, {"LOG_OF", " de "}, {"PREFS_SYNCHRONIZE_STARTED", "A sincroniza\u00c3\u00a7\u00c3\u00a3o de informa\u00c3\u00a7\u00c3\u00b5es com o dispositivo foi iniciada com \u00c3\u00aaxito."}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "Falha na sincroniza\u00c3\u00a7\u00c3\u00a3o de informa\u00c3\u00a7\u00c3\u00b5es do dispositivo, n\u00c3\u00a3o foi poss\u00c3\u00advel efetuar login no dispositivo."}, {"MON_NO_PRIVILEGES", "Voc\u00c3\u00aa n\u00c3\u00a3o possui privil\u00c3\u00a9gios suficientes para esta tela"}, {"MON_SYNC_TASK_CREATED", "Tarefa de sincroniza\u00c3\u00a7\u00c3\u00a3o criada com \u00c3\u00aaxito"}, {"MON_SYNC_TASK_FAIL", "Falha na cria\u00c3\u00a7\u00c3\u00a3o da tarefa de sincroniza\u00c3\u00a7\u00c3\u00a3o"}, {"MON_RENEGOTIATE_TASK_CREATED", "Tarefa(s) de renegocia\u00c3\u00a7\u00c3\u00a3o criada(s) com \u00c3\u00aaxito"}, {"MON_RENEGOTIATE_FAILED", "Falha na cria\u00c3\u00a7\u00c3\u00a3o da tarefa de renegocia\u00c3\u00a7\u00c3\u00a3o"}, {"MON_NO_SELECTED", "N\u00c3\u00a3o foram selecionados t\u00c3\u00baneis para Renegociar"}, {"MON_REFRESH_CREATED", "Tarefa(s) de atualiza\u00c3\u00a7\u00c3\u00a3o de estat\u00c3\u00adsticas criada(s) com \u00c3\u00aaxito"}, {"MON_REFRESH_FAIL", "Falha na cria\u00c3\u00a7\u00c3\u00a3o de tarefa de atualiza\u00c3\u00a7\u00c3\u00a3o para estat\u00c3\u00adsticas de t\u00c3\u00banel"}, {"MON_NO_SELECTED_REFRESH", "N\u00c3\u00a3o foram selecionados t\u00c3\u00baneis para atualizar Estat\u00c3\u00adsticas"}, {"MON_UPDATE_SUCCESS", "A atualiza\u00c3\u00a7\u00c3\u00a3o foi um \u00c3\u00aaxito"}, {"MON_UPDATE_FAIL", "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o"}, {"MON_NO_MONITORING", "Os t\u00c3\u00baneis n\u00c3\u00a3o podem ser monitorados."}, {"MON_NAME", "Nome"}, {"MON_GATEWAY", "Gateway"}, {"MON_LAST_UPDATED", "\u00c3\u0161ltima atualiza\u00c3\u00a7\u00c3\u00a3o"}, {"MON_DEST_ADDR_RANGE", "Intervalo de endere\u00c3\u00a7os de destino"}, {"MON_LOCAL_ADDR_RANGE", "Intervalo de endere\u00c3\u00a7os locais"}, {"MON_NO_TUNNELS_FOUND", "N\u00c3\u00a3o foram encontrados t\u00c3\u00baneis."}, {"MON_TITLE", "Estat\u00c3\u00adsticas de t\u00c3\u00banel de VPN"}, {"MON_DESCRIPTION", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"MON_VALUE", "Valor"}, {"MON_CREATE_TIME", "Hora de cria\u00c3\u00a7\u00c3\u00a3o"}, {"MON_VALID_UNTIL", "T\u00c3\u00banel v\u00c3\u00a1lido at\u00c3\u00a9"}, {"MON_PACKETS_IN", "Pacotes de entrada"}, {"MON_PACKETS_OUT", "Pacotes de sa\u00c3\u00adda"}, {"MON_BYTES_IN", "Bytes de entrada"}, {"MON_BYTES_OUT", "Bytes de sa\u00c3\u00adda"}, {"MON_FRAGMENTS_IN", "Pacotes de entrada fragmentados"}, {"MON_FRAGMENTS_OUT", "Pacotes de sa\u00c3\u00adda fragmentados"}, {"MON_TUNNEL_ACTIVE", "O t\u00c3\u00banel est\u00c3\u00a1 ativo"}, {"REG_NO_PERMISSION", "N\u00c3\u00a3o possui Privil\u00c3\u00a9gios de atualiza\u00c3\u00a7\u00c3\u00a3o nesta Tela"}, {"REG_ERROR_RETRIEVING_COUNT", "Erro ao recuperar a contagem de dispositivos registrados/n\u00c3\u00a3o registrados"}, {"REG_CURRENT", "Atual"}, {"REG_EXPIRED", "Expirado"}, {"REG_NO_LICENSE", "Sem licen\u00c3\u00a7a"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "N\u00c3\u00a3o foi poss\u00c3\u00advel carregar a Imagem de firmware"}, {"TASKS_SUCCESSFUL_DELETION", "As tarefas foram exclu\u00c3\u00addas do banco de dados com \u00c3\u00aaxito."}, {"TASKS_ERROR_DELETION", "Erro: n\u00c3\u00a3o foi poss\u00c3\u00advel excluir as tarefas."}, {"TASKS_EXECUTION_SET", "As tarefas foram configuradas com \u00c3\u00aaxito para uma execu\u00c3\u00a7\u00c3\u00a3o imediata."}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "Tentativa n\u00c3\u00a3o autorizada para executar tarefa"}, {"TASKS_ERROR_EXECUTION", "Erro: n\u00c3\u00a3o foi poss\u00c3\u00advel programar as tarefas para a execu\u00c3\u00a7\u00c3\u00a3o."}, {"TASK_DELETED_LOG_MESSAGE", "A seguinte tarefa foi exclu\u00c3\u00adda pelo usu\u00c3\u00a1rio "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "Tentativa n\u00c3\u00a3o autorizada para excluir tarefa"}, {"NO_TASKS_MESSAGE", "N\u00c3\u00a3o foram encontradas tarefas."}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "N\u00c3\u00a3o foram encontradas tarefas para os crit\u00c3\u00a9rios de pesquisa fornecidos."}, {"TASKS_RESCHEDULED", "A(s) tarefa(s) foi(foram) reprogramada(s) com \u00c3\u00aaxito."}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "Tentativa n\u00c3\u00a3o autorizada para reprogramar tarefa"}, {"TASKS_ERROR_RESCHEDULE", "Erro: N\u00c3\u00a3o foi poss\u00c3\u00advel reprogramar a(s) tarefa(s)."}, {"IMMEDIATE_STRING", "IMEDIATO"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "Local"}, {"AGENT_STRING", "Agente"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "A seguinte tarefa foi reprogramada pelo usu\u00c3\u00a1rio "}, {"FROM_LOG_MESSAGE", " de "}, {"TO_LOG_MESSAGE", " para "}, {"IMMEDIATE_LOG_MESSAGE", "Execu\u00c3\u00a7\u00c3\u00a3o imediata"}, {"REG_PASSWORD_SUCCESS", "\u00c3\u0160xito.  Senha aceite por MySonicWall.com. Pressione atualizar para continuar."}, {"REG_PASSWORD_FAIL", "Falha.  A senha n\u00c3\u00a3o foi aceite por MySonicWall.com: "}, {"LOGIN_MESSAGE", "Efetue login"}, {"LOGIN_DEFAULT_MESSAGE", "Use o usu\u00c3\u00a1rio padr\u00c3\u00a3o: 'admin' e a senha: 'password' para fazer login"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "Use o usu\u00c3\u00a1rio padr\u00c3\u00a3o: 'admin' e a senha do dispositivo/sistema"}, {"LOGIN_DEMO_MESSAGE", "Fa\u00c3\u00a7a login usando o usu\u00c3\u00a1rio: 'demo' e a senha: 'password'"}, {"SETTINGSVPS_CHANGED", "Suas configura\u00c3\u00a7\u00c3\u00b5es do Analyzer foram atualizadas."}, {"SETTINGS_CHANGED", "Suas configura\u00c3\u00a7\u00c3\u00b5es foram atualizadas."}, {"LOGS_USER_FORCEDOUT", " for\u00c3\u00a7ou o seguinte usu\u00c3\u00a1rio a efetuar logout do sistema: "}, {"SLAVE_STATE_CHANGED_MESSAGE", "O Agente foi configurado com \u00c3\u00aaxito para alterar o seu estado."}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "Tentativa sem \u00c3\u00aaxito: n\u00c3\u00a3o foi poss\u00c3\u00advel alterar o estado do Agente."}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "Os par\u00c3\u00a2metros do agente foram atualizados com \u00c3\u00aaxito."}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "N\u00c3\u00a3o foi poss\u00c3\u00advel atualizar os par\u00c3\u00a2metros do Agente com \u00c3\u00aaxito."}, {"SCHEDULER_UP_STATE", "Ativo"}, {"SCHEDULER_DOWN_STATE", "Inativo"}, {"SCHEDULER_UNDETERMINED_STATE", "Indeterminado"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "N\u00c3\u00a3o tem permiss\u00c3\u00a3o para atualizar as propriedades do Agente."}, {"SMTPSERVER_INVALID", "Endere\u00c3\u00a7o de servidor SMTP inv\u00c3\u00a1lido."}, {"APPLIANCE_MANAGE_FAILED", "Falha ao alterar as prefer\u00c3\u00aancias de gerenciamento para dispositivos."}, {"EMPTY_SMTP_PWD", "Senha SMTP n\u00c3\u00a3o pode estar vazio"}, {"TREE_AGENT_STARTED", "O agente prim\u00c3\u00a1rio deve estar no estado iniciado para poder reatribuir agentes"}, {"TREE_STANDBY_STARTED", "Os agentes em espera devem estar no estado iniciado para poder reatribuir agentes"}, {"TREE_LICENSE_EXCEEDED", "Voc\u00c3\u00aa n\u00c3\u00a3o possui licen\u00c3\u00a7a para adicionar mais dispositivos no gerenciamento."}, {"TREE_IP_EMPTY", "O IP n\u00c3\u00a3o pode ficar em branco. Forne\u00c3\u00a7a um endere\u00c3\u00a7o IP v\u00c3\u00a1lido"}, {"TREE_AUTH_FAIL", "Falha na autentica\u00c3\u00a7\u00c3\u00a3o do dispositivo; verificar configura\u00c3\u00a7\u00c3\u00b5es."}, {"TREE_NO_RESPONSE", "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 acess\u00c3\u00advel; verificar configura\u00c3\u00a7\u00c3\u00b5es."}, {"TREE_FIREWALL_NOT_LICENSED", "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 licenciado para o Analyzer."}, {"TREE_FIREWALL_STATE_ERROR", "Falha ao recuperar informa\u00c3\u00a7\u00c3\u00b5es acerca do estado do dispositivo.\nO firmware do dispositivo poder\u00c3\u00a1 ter de ser atualizado."}, {"TREE_MODEL_FAIL", "Falha ao recuperar informa\u00c3\u00a7\u00c3\u00b5es acerca do modelo"}, {"TREE_FIRMWARE_VERSION_FAIL", "Falha ao recuperar vers\u00c3\u00a3o do firmware"}, {"TREE_UNMATCHED_SERIAL", "Os n\u00c3\u00bameros de s\u00c3\u00a9rie n\u00c3\u00a3o coincidem."}, {"TREE_TIMEZONE_FAIL", "Falha ao recuperar fuso hor\u00c3\u00a1rio"}, {"TREE_UTC_FAIL", "As mensagens de log n\u00c3\u00a3o est\u00c3\u00a3o em formato UTC. Altere o formato do carimbo de data/hora do dispositivo para UTC sen\u00c3\u00a3o os relat\u00c3\u00b3rios gerados mostrar\u00c3\u00a3o a hora errada"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "Habilite a op\u00c3\u00a7\u00c3\u00a3o 'Habilitar configura\u00c3\u00a7\u00c3\u00b5es ViewPoint' na tela Log > ViewPoint. Esta configura\u00c3\u00a7\u00c3\u00a3o alterar\u00c3\u00a1 o seguinte:\n\t1. Enviar syslog em UTC\n\t2. Filtro de redund\u00c3\u00a2ncia de eventos de syslog (segundos) para 0\n\t3. Configurar 'formato syslog' para Padr\u00c3\u00a3o"}, {"TREE_NO_SCHEDULER", "N\u00c3\u00a3o foi encontrado um programador no endere\u00c3\u00a7o IP especificado, unidade n\u00c3\u00a3o foi adicionada"}, {"TREE_GET_PREFS_ERR", "Erro ao recuperar o arquivo de prefer\u00c3\u00aancias."}, {"TREE_FIREWALL_NOT_REGISTERED", "Este dispositivo n\u00c3\u00a3o foi registrado.  Visite MySonicWall.com e registre o dispositivo antes de adicion\u00c3\u00a1-lo ao Analyzer."}, {"TREE_BACKEND_COMM_FAILURE", "O Analyzer n\u00c3\u00a3o consegue comunicar com MySonicWall.com para verificar a licen\u00c3\u00a7a.\nVerifique sua liga\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a0 rede; o servidor do Analyzer dever\u00c3\u00a1 conseguir comunicar com MySonicWall.com. "}, {"SU_DB_SIZE_EMAILBODY1", "Os tamanhos atuais do banco de dados s\u00c3\u00a3o os seguintes: \n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\nNota: o limite m\u00c3\u00a1ximo do tamanho do banco de dados \u00c3\u00a9 de 2 GB \n\n \nA seguinte altera\u00c3\u00a7\u00c3\u00a3o de configura\u00c3\u00a7\u00c3\u00a3o afetar\u00c3\u00a1 o tamanho geral da utiliza\u00c3\u00a7\u00c3\u00a3o do banco de dados:\n\tReduza o n\u00c3\u00bamero de dias na configura\u00c3\u00a7\u00c3\u00a3o \"Dias para armazenar dados n\u00c3\u00a3o processados\" na tela Painel de console -> Relat\u00c3\u00b3rios -> Configura\u00c3\u00a7\u00c3\u00b5es.\n\tReduza o n\u00c3\u00bamero de dias na configura\u00c3\u00a7\u00c3\u00a3o \"Dias para armazenar dados resumidos\" na tela Painel de console -> Relat\u00c3\u00b3rios -> Resumidor."}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\nNota: "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "O limite m\u00c3\u00a1ximo do tamanho do banco de dados \u00c3\u00a9 de 2 GB\n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\nA seguinte altera\u00c3\u00a7\u00c3\u00a3o de configura\u00c3\u00a7\u00c3\u00a3o afetar\u00c3\u00a1 o tamanho geral da utiliza\u00c3\u00a7\u00c3\u00a3o do banco de dados:\n\tReduza o n\u00c3\u00bamero de dias na configura\u00c3\u00a7\u00c3\u00a3o \"Dias para armazenar dados n\u00c3\u00a3o processados\" na tela Painel de console -> Relat\u00c3\u00b3rios -> Configura\u00c3\u00a7\u00c3\u00b5es.\n\tReduza o n\u00c3\u00bamero de dias na configura\u00c3\u00a7\u00c3\u00a3o \"Dias para armazenar dados resumidos\" na tela Painel de console -> Relat\u00c3\u00b3rios -> Resumidor."}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "AVISO:\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "verifique se n\u00c3\u00a3o configurou seu banco de dados para um plano de manuten\u00c3\u00a7\u00c3\u00a3o de backup ou se um plano existente falhou ao limpar os logs.\nSe n\u00c3\u00a3o configurar o seu banco de dados para um plano de manuten\u00c3\u00a7\u00c3\u00a3o, seus logs de transa\u00c3\u00a7\u00c3\u00b5es continuar\u00c3\u00a3o a crescer e a encher o disco r\u00c3\u00adgido completamente,\no que resultar\u00c3\u00a1 no n\u00c3\u00a3o funcionamento de seu banco de dados e do sistema GMS. Em segundo lugar, em caso de falha do banco de dados, voc\u00c3\u00aa n\u00c3\u00a3o ser\u00c3\u00a1 capaz de restaurar seu \nbanco de dados para o \u00c3\u00baltimo backup conhecido."}, {"SU_DB_SIZE_EMAILSUBJECT", "Analyzer da SonicWall: verifica\u00c3\u00a7\u00c3\u00a3o de integridade do banco de dados"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "Efetue login na unidade porque a valida\u00c3\u00a7\u00c3\u00a3o da licen\u00c3\u00a7a falhou para o dispositivo com s\u00c3\u00a9rie "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", ". Certifique-se de que nenhuma das configura\u00c3\u00a7\u00c3\u00b5es necess\u00c3\u00a1rias para o login foi alterada a n\u00c3\u00advel local no dispositivo. Use Modificar unidade para que as altera\u00c3\u00a7\u00c3\u00b5es sejam refletidas no Analyzer", "Valida\u00c3\u00a7\u00c3\u00a3o da licen\u00c3\u00a7a pelo Analyzer"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "Valida\u00c3\u00a7\u00c3\u00a3o da licen\u00c3\u00a7a pelo Analyzer"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "Efetue login no seu dispositivo "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", " porque ocorreu uma falha na valida\u00c3\u00a7\u00c3\u00a3o da licen\u00c3\u00a7a e esta excedeu o per\u00c3\u00adodo de cortesia. Certifique-se de que nenhuma das configura\u00c3\u00a7\u00c3\u00b5es necess\u00c3\u00a1rias para o login foi alterada a n\u00c3\u00advel local no dispositivo. Use Modificar unidade para que as altera\u00c3\u00a7\u00c3\u00b5es sejam refletidas no Analyzer"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "A licen\u00c3\u00a7a do Analyzer expirou!"}, {"SU_LIC_EXPIRED_BODY1", "Seu dispositivo "}, {"SU_LIC_EXPIRED_BODY2", " n\u00c3\u00a3o est\u00c3\u00a1 licenciado para o Analyzer. Verifique as configura\u00c3\u00a7\u00c3\u00b5es no dispositivo"}, {"SU_LIC_EXPIRED_SUBJECT", "A licen\u00c3\u00a7a do Analyzer expirou!"}, {"LOGVIEW_WRONG_START_DT", "Formato de data de in\u00c3\u00adcio errado. A data tem de estar no formato mm/dd/aaaa."}, {"LOGVIEW_WRONG_END_DT", "Formato de data de t\u00c3\u00a9rmino errado. A data tem de estar no formato mm/dd/aaaa."}, {"LOGVIEW_ENDDT_LESS_STARTDT", "Data de t\u00c3\u00a9rmino menor do que data de in\u00c3\u00adcio. Insira as datas de in\u00c3\u00adcio e de t\u00c3\u00a9rmino v\u00c3\u00a1lidas."}, {"LOGVIEW_MSGS_PERSCRN", "Mensagens por tela"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "Voc\u00c3\u00aa est\u00c3\u00a1 prestes a exportar {0,n\u00c3\u00bamero,inteiro} entradas de log. Tem certeza de que deseja fazer isto? Sen\u00c3\u00a3o, cancele este di\u00c3\u00a1logo e limite os crit\u00c3\u00a9rios de pesquisa."}, {"LOGVIEW_GOTO_MSG", "Ir para N\u00c3\u00bamero da mensagem"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "Mostrar mensagens por tela:"}, {"LOGVIEW_RANGE", "(Intervalo: 10\u00e2\u20ac\u201c100)"}, {"LOGVIEW_COL_DT", "Data"}, {"LOGVIEW_COL_MSG", "Mensagem"}, {"LOGVIEW_COL_SEV", "Gravidade"}, {"LOGVIEW_COL_USER", "Usu\u00c3\u00a1rio GMS"}, {"LOGVIEW_COL_CO", "Alterar ordem"}, {"LOGVIEW_COL_IP", "IP do usu\u00c3\u00a1rio"}, {"LOGVIEW_SEARCH_RESULTS", "Resultados de pesquisa"}, {"LOGVIEW_SEARCH_CRITERIA", "Crit\u00c3\u00a9rios de pesquisa"}, {"LOGVIEW_EXPORT_LOGS", "Exportar logs"}, {"LOGVIEW_CLEAR_LOGS", "Limpar pesquisa"}, {"LOGVIEW_SEARCH_LOGS", "Iniciar pesquisa"}, {"LOGVIEW_MATCH_CASE", "Corresponder mai\u00c3\u00basculas/min\u00c3\u00basculas"}, {"LOGVIEW_EXACT_PHRASE", "Frase exata"}, {"LOGVIEW_ANY_WORD", "Qualquer palavra"}, {"LOGVIEW_ALL_WORDS", "Todas as palavras"}, {"LOGVIEW_MSG", "A mensagem cont\u00c3\u00a9m:"}, {"LOGVIEW_CO", "Alterar ordem:"}, {"LOGVIEW_TIME", "Selecionar hora dos logs: De:"}, {"LOGVIEW_TIME_TO", "Para: "}, {"LOGVIEW_NODE_NAME", "N\u00c3\u00b3 do SonicWall:"}, {"LOGVIEW_USER", "Usu\u00c3\u00a1rio: "}, {"LOGVIEW_SEV", "Gravidade: "}, {"LOGVIEW_CALENDAR", "Calend\u00c3\u00a1rio"}, {"LOGVIEW_ALL", "Todos (Alerta, Aviso e Info)"}, {"LOGVIEW_ALERT_WARNING", "Alerta e aviso"}, {"LOGVIEW_ALERT", "Alerta"}, {"LOGVIEW_STR_FORMAT", "Formato da cadeia de caracteres de pesquisa: user@domain.<br>Apenas para usu\u00c3\u00a1rio, inserir usu\u00c3\u00a1rio.<br>Apenas para o dom\u00c3\u00adnio, inserir @dom\u00c3\u00adnio.<br><i>Nota: se o valor do usu\u00c3\u00a1rio cont\u00c3\u00a9m um @ termine a cadeia de pesquisa com um @ semelhante.</i>"}, {"HELPABOUT_VERSION", "Vers\u00c3\u00a3o:"}, {"HELPABOUT_LIC", "Licenciado a:"}, {"HELPABOUT_SN", "N\u00c3\u00bamero de s\u00c3\u00a9rie:"}, {"HELPABOUT_DBDRIVER", "Driver de banco de dados:"}, {"HELPABOUT_DBVERSION", "Vers\u00c3\u00a3o do banco de dados:"}, {"HELPABOUT_REPORT_DBVERSION", "Vers\u00c3\u00a3o do banco de dados de relat\u00c3\u00b3rios:"}, {"LOGIN_TITLE", "Login"}, {"LOGIN_ISBLANK", " est\u00c3\u00a1 em branco. Insira um valor."}, {"LOGIN_INVALIDID", "ID do usu\u00c3\u00a1rio inv\u00c3\u00a1lido especificado."}, {"LOGIN_INVALIDID2", "O ID do usu\u00c3\u00a1rio s\u00c3\u00b3 poder\u00c3\u00a1 conter os seguintes caracteres:"}, {"LOGIN_INVALIDID3", "Alfanum\u00c3\u00a9ricos, .(Pontos), -(H\u00c3\u00adfens), _(Sublinhado) e @(arroba)."}, {"LOGIN_INVALIDID4", "Especifique um ID de usu\u00c3\u00a1rio com os caracteres permitidos."}, {"LOGIN_USERNAME", "Nome de usu\u00c3\u00a1rio"}, {"LOGIN_PASSWORD", "Senha"}, {"LOGIN_LOGIN", "LOGIN"}, {"LOGIN_DOMAIN", "Dom\u00c3\u00adnio"}, {"LOGIN_SWITCH_EN_US", "Alternar para UI em ingl\u00c3\u00aas"}, {"LOGIN_SWITCH_JA_JP", "Alternar para UI em japon\u00c3\u00aas"}, {"LOGIN_SWITCH_ZH_CN", "Alternar para UI em chin\u00c3\u00aas simplificado"}, {"LOGIN_SWITCH_ZH_TW", "Alternar para UI em chin\u00c3\u00aas tradicional"}, {"LOGIN_SWITCH_KO_KR", "Alternar para UI em coreano"}, {"LOGIN_SWITCH_PT_BR", "Comutar para portugu\u00c3\u00aas do Brasil UI"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "Efetuar logout"}, {"LOGOUT_VPMSG", "Acabou de efetuar logout do sistema Analyzer do SonicWall com \u00c3\u00aaxito."}, {"LOGOUT_VPMSG1", "Para iniciar uma nova Sess\u00c3\u00a3o do Analyzer do SonicWall, recomenda-se que feche ou saia deste navegador &nbsp<br>&nbsp e que abra uma nova inst\u00c3\u00a2ncia do navegador."}, {"LOGOUT_GMSMSG", "Acabou de efetuar logout do sistema de gerenciamento da SonicWall com \u00c3\u00aaxito. "}, {"LOGOUT_GMSMSG1", "Para iniciar uma nova sess\u00c3\u00a3o no SonicWall GMS, recomenda-se que feche ou saia deste navegador &nbsp<br>&nbsp e que abra uma nova inst\u00c3\u00a2ncia do navegador."}, {"SETTINGSUSER_CHANGE", "Alterar"}, {"SETTINGSUSER_OLD", "Atual"}, {"SETTINGSUSER_PASSWORD", "Senha"}, {"SETTINGSUSER_NEW", "Novo"}, {"SETTINGSUSER_CONFIRMMSG", "Confirmar nova senha"}, {"SETTINGSUSER_FAILMSG", " As entradas 'Senha' e 'Confirmar nova senha' n\u00c3\u00a3o correspondem."}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "A senha deve ter no m\u00c3\u00adnimo 7 caracteres e consistir em letras e/ou n\u00c3\u00bameros."}, {"INVALID_PASSWORD", "Senha inv\u00c3\u00a1lida especificada."}, {"PWD_RULES", "A senha deve ser criada baseada nas seguintes regras: "}, {"VALID_PWD_RULE_FOR_PCI", "    - Um comprimento m\u00c3\u00adnimo de 7 caracteres."}, {"MAX_PWD_LEN", "    - \u00c3\u2030 permitido um comprimento m\u00c3\u00a1ximo de 15 caracteres."}, {"PWD_ALPHANUMERIC_CHARS", "    - Pode conter caracteres alfanum\u00c3\u00a9ricos."}, {"PWD_SPCIAL_CHARS", "    - Pode conter caracteres especiais."}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[BR]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[BR]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[BR]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "Especifique uma senha que atenda \u00c3\u00a0s exig\u00c3\u00aancias."}, {"SETTINGSUSER_MISCSETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es diversas"}, {"SETTINGSUSER_TIMEOUTPERIOD", "O per\u00c3\u00adodo de tempo de limite pode ser -1 ou estar dentro do intervalo [5..120]. Insira um n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"SETTINGSUSER_NEVERTIMEOUT", "nunca ultrapassa o tempo limite"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "Tempo limite de inatividade"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "Painel de sele\u00c3\u00a7\u00c3\u00a3o do dispositivo, Mostrar:"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u00cdcones"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "Texto"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u00cdcones e Texto (padr\u00c3\u00a3o)"}, {"MAX_ROWS_PER_SCREEN", "N\u00c3\u00bamero m\u00c3\u00a1ximo de linhas por tela:"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "Intervalo: [10..100] (Aplic\u00c3\u00a1vel apenas a telas paginadas n\u00c3\u00a3o reportadas)"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "O valor do n\u00c3\u00bamero m\u00c3\u00a1ximo de linhas por tela est\u00c3\u00a1 fora do intervalo v\u00c3\u00a1lido. Insira um n\u00c3\u00bamero entre 10 e 100 inclusive."}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "O Valor do n\u00c3\u00bamero m\u00c3\u00a1ximo de linhas por tela n\u00c3\u00a3o \u00c3\u00a9 um n\u00c3\u00bamero. Insira um n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es do painel de salvamento autom\u00c3\u00a1tico:"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1:Salvamento autom\u00c3\u00a1tico n\u00c3\u00a3o habilitado ou Intervalo:[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "As Configura\u00c3\u00a7\u00c3\u00b5es do painel de salvamento autom\u00c3\u00a1tico podem ser -1 ou estar dentro do intervalo [1..60]. Insira um n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"CHANGEPASSWORD_OLD", "Senha atual"}, {"CHANGEPASSWORD_NEW", "Nova senha"}, {"CHANGEPASSWORD_CONFIRM", "Confirmar nova senha"}, {"CHANGEPASSWORD_USER", "Usu\u00c3\u00a1rio"}, {"CUSTLOGSETTINGS_NOTE1", "Nota: pode inserir v\u00c3\u00a1rios endere\u00c3\u00a7os de e-mail separados por um ponto e v\u00c3\u00adrgula (\";\")"}, {"CUSTLOGSETTINGS_SECTITLE1", "Programa\u00c3\u00a7\u00c3\u00a3o do destinat\u00c3\u00a1rio do alerta de e-mail"}, {"CUSTLOGSETTINGS_WEEKDAY", "Dia da semana:"}, {"CUSTLOGSETTINGS_SCHED1", "Programa\u00c3\u00a7\u00c3\u00a3o 1:"}, {"CUSTLOGSETTINGS_SCHED2", "Programa\u00c3\u00a7\u00c3\u00a3o 2:"}, {"CUSTLOGSETTINGS_SCHED3", "Programa\u00c3\u00a7\u00c3\u00a3o 3:"}, {"CUSTLOGSETTINGS_SAT", "S\u00c3\u00a1bado"}, {"CUSTLOGSETTINGS_SUN", "Domingo"}, {"CUSTLOGSETTINGS_WEEKEND", "Fim de semana:"}, {"CUSTLOGSETTINGS_HRS", "horas"}, {"CUSTLOGSETTINGS_TO", "para"}, {"CUSTLOGSETTINGS_ALERTFMT", "Prefer\u00c3\u00aancia de formato de alerta de e-mail"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "Cont\u00c3\u00a9m texto, cores, imagens e links. Apenas compat\u00c3\u00advel com software de e-mail habilitada para HTML."}, {"CUSTLOGSETTINGS_TEXT", "Texto sem formata\u00c3\u00a7\u00c3\u00a3o"}, {"CUSTLOGSETTINGS_TEXT_DESC", "Cont\u00c3\u00a9m todos os detalhes em texto sem formata\u00c3\u00a7\u00c3\u00a3o. Compat\u00c3\u00advel com todo o software de e-mail."}, {"CUSTLOGSETTINGS_PAGER", "Texto sem formata\u00c3\u00a7\u00c3\u00a3o (Simples)"}, {"CUSTLOGSETTINGS_PAGER_DESC", "Cont\u00c3\u00a9m uma pequena mensagem em texto sem formata\u00c3\u00a7\u00c3\u00a3o. Ideal para pagers, SMS (Short Message Service \u00e2\u20ac\u201c Servi\u00c3\u00a7o de mensagens curtas) e aplicativos semelhantes."}, {"LOGCONFIG_SECTITLE_1", "Excluir"}, {"LOGCONFIG_SECTITLE_2", "Mensagens de log"}, {"LOGCONFIG_DELLABEL", "Excluir mensagens de log mais antigas que:"}, {"LOGCONFIG_MONTH", "M\u00c3\u00aas"}, {"LOGCONFIG_DAY", "Dia"}, {"LOGCONFIG_YEAR", "Ano"}, {"LOGCONFIG_FORLABEL", "para"}, {"LOGCONFIG_DOMAIN", "Dom\u00c3\u00adnio"}, {"SESSIONS_NOSESSALERT", "N\u00c3\u00a3o existe(m) sess\u00c3\u00a3o(\u00c3\u00b5es) a terminar."}, {"SESSIONS_NOSESSSELALERT", "Selecione sess\u00c3\u00a3o(\u00c3\u00b5es) a terminar."}, {"SESSIONS_RUSUREALERT", "Tem certeza de que deseja terminar a(s) sess\u00c3\u00a3o(\u00c3\u00b5es) selecionada(s)?"}, {"SESSIONS_TITLE", "Sess\u00c3\u00b5es atuais"}, {"SESSIONS_COL1", "Nome de usu\u00c3\u00a1rio"}, {"SESSIONS_COL2", "Endere\u00c3\u00a7o IP"}, {"SESSIONS_COL3", "Hora de login"}, {"SESSIONS_COL4", "Hora do \u00c3\u00baltimo acesso"}, {"SESSIONS_COL5", "Nome do dom\u00c3\u00adnio"}, {"SESSIONS_END", "Terminar sess\u00c3\u00b5es selecionadas"}, {"LOGINVPSSETTINGS_LABEL1", "Endere\u00c3\u00a7o do servidor SMTP"}, {"LOGINVPSSETTINGS_LABEL11", "Porta SMTP"}, {"LOGINVPSSETTINGS_LABEL2", "Endere\u00c3\u00a7o de e-mail do remetente"}, {"LOGINVPSSETTINGS_LABEL3", "Endere\u00c3\u00a7o de e-mail do administrador"}, {"LOGINVPSSETTINGS_LABEL3_5", "TLS do usu\u00c3\u00a1rio"}, {"LOGINVPSSETTINGS_LABEL4", "Autentica\u00c3\u00a7\u00c3\u00a3o do usu\u00c3\u00a1rio"}, {"LOGINVPSSETTINGS_LABEL5", "Usu\u00c3\u00a1rio"}, {"LOGINVPSSETTINGS_LABEL6", "Senha"}, {"LOGINVPSSETTINGS_NOTE", "Nota: Para alterar os endere\u00c3\u00a7os de e-mail do destinat\u00c3\u00a1rio, use Console > Alertas > Configura\u00c3\u00a7\u00c3\u00b5es de base"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "N\u00c3\u00advel de depura\u00c3\u00a7\u00c3\u00a3o do sistema:"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "A configura\u00c3\u00a7\u00c3\u00a3o dos n\u00c3\u00adveis de depura\u00c3\u00a7\u00c3\u00a3o permite uma r\u00c3\u00a1pida resolu\u00c3\u00a7\u00c3\u00a3o de potenciais problemas do aplicativo. Esta a\u00c3\u00a7\u00c3\u00a3o cria arquivos log de depura\u00c3\u00a7\u00c3\u00a3o em todos os sistemas nesta implanta\u00c3\u00a7\u00c3\u00a3o e pode dificultar o desempenho do aplicativo e tamb\u00c3\u00a9m preencher espa\u00c3\u00a7o em disco. Deve redefinir para<i>Sem depura\u00c3\u00a7\u00c3\u00a3o</i> para uma opera\u00c3\u00a7\u00c3\u00a3o normal logo que o potencial problema tenha sido resolvido."}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "Nota: "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;O n\u00c3\u00advel de depura\u00c3\u00a7\u00c3\u00a3o s\u00c3\u00b3 deve ser configurado baseado nas orienta\u00c3\u00a7\u00c3\u00b5es de suporte t\u00c3\u00a9cnico da SonicWall"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp; Quanto mais alto for o n\u00c3\u00advel de depura\u00c3\u00a7\u00c3\u00a3o, mais recursos do sistema ser\u00c3\u00a3o usados para gerar dados de depura\u00c3\u00a7\u00c3\u00a3o e por sua vez diminuir o desempenho geral do sistema."}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "Sincronizar informa\u00c3\u00a7\u00c3\u00b5es de c\u00c3\u00b3digos de modelos agora"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "Deseja atualizar os endere\u00c3\u00a7os do servidor SMTP para todos os relat\u00c3\u00b3rios programados com o novo endere\u00c3\u00a7o do servidor SMTP?"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "Informa\u00c3\u00a7\u00c3\u00b5es sobre falha ao sincronizar c\u00c3\u00b3digos de modelos."}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "Exibir relat\u00c3\u00b3rios herdados (pr\u00c3\u00a9 Analyzer 7.0) "}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "Impor seguran\u00c3\u00a7a de senha"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "N\u00c3\u00bamero de dias para impor a altera\u00c3\u00a7\u00c3\u00a3o da senha"}, {"GENVPSSTATUS_INVALIDIP", "Credenciais de dispositivo incompletas dispon\u00c3\u00adveis para um login com \u00c3\u00aaxito neste momento"}, {"GENVPSSTATUS_NODE", " N\u00c3\u00b3: "}, {"GENVPSSTATUS_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es"}, {"GENVPSSTATUS_SYSLOG", "Servidores syslog"}, {"GENVPSSTATUS_IPINFO", "Endere\u00c3\u00a7o IP"}, {"GENVPSSTATUS_PORT", "Porta"}, {"GENVPSSTATUS_SYNCNOW", "Sincronizar as configura\u00c3\u00a7\u00c3\u00b5es com o dispositivo e as informa\u00c3\u00a7\u00c3\u00b5es sobre a licen\u00c3\u00a7a com With MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "No\u00c3\u00a7\u00c3\u00b5es b\u00c3\u00a1sicas sobre o Analyzer"}, {"GENVPSSTATUS_GETSTARTOPEN", "Abrir instru\u00c3\u00a7\u00c3\u00b5es iniciais em uma nova janela"}, {"GENVPSSTATUS_LOGINTITLE", "Login do dispositivo"}, {"GENVPSSTATUS_LOGINHTTP", "Usar login inseguro (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "Usar login seguro (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "Login"}, {"GENVPSSTATUS_CATEGORIES", "Categorias syslog"}, {"GENVPSSTATUS_REFRESH_MSG", "Nota: a informa\u00c3\u00a7\u00c3\u00a3o acerca do estado \u00c3\u00a9 atualizada cada 24 horas. Para atualizar a informa\u00c3\u00a7\u00c3\u00a3o, clique no link acima. Para alterar estas configura\u00c3\u00a7\u00c3\u00b5es, voc\u00c3\u00aa deve efetuar login no dispositivo e atualiz\u00c3\u00a1-las manualmente."}, {"GENVPSSTATUS_LOG_TYPE", "Tipo de log"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "Manuten\u00c3\u00a7\u00c3\u00a3o do sistema"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "Erros do sistema"}, {"GENVPSSTATUS_BLOCKED_WEB", "Sites da Web bloqueados"}, {"GENVPSSTATUS_BLOCKED_JAVA", "Java bloqueado, etc."}, {"GENVPSSTATUS_USER_ACTIVITY", "Atividade do usu\u00c3\u00a1rio"}, {"GENVPSSTATUS_VPN_TCP_STATS", "Estat\u00c3\u00adsticas TCP do VPN"}, {"GENVPSSTATUS_ATTACKS", "Ataques"}, {"GENVPSSTATUS_DROPPED_TCP", "TCP descartado"}, {"GENVPSSTATUS_DROPPED_UDP", "UDP descartado"}, {"GENVPSSTATUS_DROPPED_ICMP", "ICMP descartado"}, {"GENVPSSTATUS_NETWORK_DEBUG", "Depura\u00c3\u00a7\u00c3\u00a3o de rede"}, {"GENVPSSTATUS_DENIED_LAN_IP", "IP da LAN negado"}, {"GENVPSSTATUS_LICENSE_STATUS", "Estado da licen\u00c3\u00a7a do Analyzer"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;Execute as seguintes etapas para resolver o problema \\\"N\u00c3\u00a3o licenciado\\\":<br/>&nbsp;&nbsp;Etapa 1 - <a href=\"http://www.MySonicWall.com\" target=new>Clique aqui para verificar ou ativar a licen\u00c3\u00a7a em MySonicWall.com.</a><br/>&nbsp;&nbsp;Etapa 2 - Se a licen\u00c3\u00a7a estiver ativa, <a href=\"javascript:synchronizeInfo();\">clique aqui para sincronizar as informa\u00c3\u00a7\u00c3\u00b5es da licen\u00c3\u00a7a.</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "(Existe um problema de comunica\u00c3\u00a7\u00c3\u00a3o ao tentar acessar MySonicWall.com)<br/>&nbsp;&nbsp;Certifique-se que o servidor Web GMSVP est\u00c3\u00a1 habilitado para acessar www.MySonicWall.com."}, {"COMPONENT", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"COMPONENT_LC", "componente"}, {"FILE_SIZE", "Tamanho do arquivo (KB)"}, {"IP_ADDRESS", "Endere\u00c3\u00a7o IP"}, {"CURRENT_VERSION", "Vers\u00c3\u00a3o atual"}, {"LATEST_VERSION", "Vers\u00c3\u00a3o mais recente"}, {"RELEASE_NOTES", "Notas de vers\u00c3\u00a3o"}, {"LAST_DOWNLOADED", "\u00c3\u0161ltimo baixado"}, {"RELEASE_DATE", "Data de lan\u00c3\u00a7amento"}, {"DOWNLD_NEW", "Baixar novo "}, {"SOFTWARE_UPDATES", "Atualiza\u00c3\u00a7\u00c3\u00b5es de software"}, {"DEL_SEL_COMPS_FROM_LIST", "Excluir componentes selecionados da lista"}, {"LIC_DELETE_MSG", "N\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel excluir o"}, {"LIC_PATCH_MSG", "Os patches n\u00c3\u00a3o est\u00c3\u00a3o dispon\u00c3\u00adveis e n\u00c3\u00a3o ser\u00c3\u00a3o baixados para os seguintes componentes:"}, {"LIC_NEW_GMS_SW", "Novo software GMS"}, {"LIC_CONSOLE", "Console"}, {"LIC_SELECT_COMPONENT", "Selecione um componente."}, {"CHAP_TESTING", "Teste de CHAP"}, {"CHAP_RADIUS_TESTING_MSG", "Note que a autentica\u00c3\u00a7\u00c3\u00a3o CHAP apenas funcionar\u00c3\u00a1 com um servidor RADIUS que a suporta e, em alguns casos, precisar\u00c3\u00a1 que o servidor seja configurado para armazenar senhas de modo revers\u00c3\u00advel."}, {"CHAP_LDAP_TESTING_MSG", "Note que a autentica\u00c3\u00a7\u00c3\u00a3o CHAP s\u00c3\u00b3 funcionar\u00c3\u00a1 com um servidor que suporta a recupera\u00c3\u00a7\u00c3\u00a3o de senhas de usu\u00c3\u00a1rio atrav\u00c3\u00a9s de LDAPe, em alguns casos, \u00c3\u00a9 necess\u00c3\u00a1rio configurar o servidor LDAP para armazenar as senhas de modo revers\u00c3\u00advel."}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "Note tamb\u00c3\u00a9m que o CHAP n\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel com o Microsoft Active Directory ou Novell eDirectory"}, {"PERF_NO_SUMMARIZER", "N\u00c3\u00a3o est\u00c3\u00a3o atualmente dispon\u00c3\u00adveis nenhumas m\u00c3\u00a9tricas para o desempenho do resumidor."}, {"PERF_SUMMARIZER_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es sobre o resumidor"}, {"PERF_SUMMARIZER", "Resumidor"}, {"PERF_SYSLOG_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es do arquivo de dados"}, {"PERF_SYSLOG_FILE_TYPE", "Tipo do arquivo de dados"}, {"PERF_FILE_STATS", "Estat\u00c3\u00adsticas do arquivo"}, {"PERF_OLDEST", "O mais antigo"}, {"PERF_PRD_LABEL", "Arquivos processados"}, {"PERF_SRC_LABEL", "Arquivos agrupados"}, {"PERF_UNP_LABEL", "Arquivos n\u00c3\u00a3o processados"}, {"PERF_NMM_LABEL", "Arquivos n\u00c3\u00a3o meus"}, {"PERF_IMF_LABEL", "Arquivos infetados"}, {"PERF_ZIP_LABEL", "Arquivos arquivados"}, {"PERF_PRE_LABEL", "Arquivos de log inv\u00c3\u00a1lidos"}, {"PERF_UPE_LABEL", "Arquivos mal carregados"}, {"PERF_UPD_LABEL", "Arquivos carregados"}, {"PERF_UPL_LABEL", "Fazer upload dos arquivos pendentes"}, {"PERF_RDB_LABEL", "Banco de dados de relat\u00c3\u00b3rios"}, {"PERF_OPT_STATE_LABEL", "Estado de otimiza\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_OPT_PENDING_LABEL", "Otimiza\u00c3\u00a7\u00c3\u00a3o pendente"}, {"PERF_OPT_TOTAL_LABEL", "Total de dias sem otimiza\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_BKP_LABEL", "Arquivos de backup"}, {"PERF_FILE_ELEMENT", "Arquivos - "}, {"PERF_THREAD_INFO", "Detalhes do processo do resumidor"}, {"PERF_NUM_THREADS", "N\u00c3\u00bamero de segmentos atualmente em execu\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_SUMMARIZER_IDLE", "O resumidor est\u00c3\u00a1 ocioso."}, {"PERF_THREAD", "Segmento"}, {"PERF_FIREWALL", "Dispositivo"}, {"PERF_FILE", "Arquivo"}, {"PERF_STATE", "Estado"}, {"PERF_START_TIME", "Iniciou em"}, {"PERF_SUMMARIZER_STATS", "Estat\u00c3\u00adsticas do resumidor"}, {"PERF_PAST_24", "Nas \u00c3\u00baltimas 24 horas (desde "}, {"PERF_PAST_7_DAYS", "Nos \u00c3\u00baltimos 7 dias (desde "}, {"PERF_PAST_30_DAYS", "Nos \u00c3\u00baltimos 30 dias (desde "}, {"PERF_NUM_SYSLOGS", "N\u00c3\u00bamero de syslogs resumidos em "}, {"PERF_AVERAGE_PER_MINUTE", "M\u00c3\u00a9dia de syslog resumido por minuto"}, {"PERF_NOT_ACTIVE", "N\u00c3\u00a3o foram resumidos dados nos \u00c3\u00baltimos 7 dias"}, {"PERF_NO_GEN2", "As m\u00c3\u00a9tricas para o desempenho do resumidor est\u00c3\u00a3o dispon\u00c3\u00adveis apenas para a configura\u00c3\u00a7\u00c3\u00a3o do resumidor distribu\u00c3\u00addo"}, {"PERF_MEM_USAGE", "Consumo de mem\u00c3\u00b3ria do resumidor"}, {"PERF_LAST_RUN", "Hora da \u00c3\u00baltima execu\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_NEXT_RUN", "Hora da pr\u00c3\u00b3xima execu\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_SUMMARIZER_STATISTICS", "Estado do resumidor durante 7 dias"}, {"PERF_SUMMARIZER_UTILIZATION", "Utiliza\u00c3\u00a7\u00c3\u00a3o do resumidor"}, {"PERF_TOTAL_RUN_TIME", "M\u00c3\u00a9dia do tempo de execu\u00c3\u00a7\u00c3\u00a3o por dia"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "Capacidade estimada"}, {"PERF_METRIC_SYSLOG", "(milh\u00c3\u00b5es de syslog/dia)"}, {"PERF_METRIC_XML", "(arquivos XML/dia)"}, {"PERF_TOTAL_LOAD", "M\u00c3\u00a9dia de carregamento"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "M\u00c3\u00a9dia de syslog resumido (milh\u00c3\u00b5es/dia)"}, {"PERF_TOTAL_FILES_SUMMARIZED", "M\u00c3\u00a9dia de arquivos XML resumidos por dia"}, {"PERF_NO_DATA_SUMMARIZED", "N\u00c3\u00a3o foram resumidos dados nos \u00c3\u00baltimos 7 dias"}, {"PERF_REPORTING_INFO", "Detalhes de relat\u00c3\u00b3rio"}, {"PERF_TOP_UNITS", "Dispositivos principais de uso do resumidor"}, {"PERF_UNIT_NAME", "Dispositivo"}, {"PERF_REPORTING_DB_SIZE", "Tamanho do banco de dados de relat\u00c3\u00b3rios"}, {"PERF_BACKUPS_DIR_SIZE", "Tamanho do diret\u00c3\u00b3rio do backup"}, {"PERF_SYSLOG_DIR_SIZE", "Tamanho do diret\u00c3\u00b3rio de dados n\u00c3\u00a3o processados"}, {"PERF_CACHE_SIZE", "Tamanho do cache estimado"}, {"PERF_BAD_DIR_SIZE", "Tamanho do diret\u00c3\u00b3rio de dados inv\u00c3\u00a1lidos"}, {"PERF_PER_SUMMARIZER_INFO", "Detalhes sobre o resumidor em "}, {"PERF_AVG_UTILIZATION", "Uso m\u00c3\u00a9dio do resumidor"}, {"PERF_PEAK_UTILIZATION", "Uso m\u00c3\u00a1ximo do resumidor"}, {"NMM_DETAILS", "Syslogs enviados por dispositivos que n\u00c3\u00a3o est\u00c3\u00a3o em Relat\u00c3\u00b3rios e gerenciamento"}, {"NMM_SERIALS", "# de s\u00c3\u00a9rie de dispositivos para o resumidor em "}, {"NO_NMM_SERIAL", "Nenhum"}, {"MISCONFIGURED_SERIALS", "# de s\u00c3\u00a9rie de dispositivos que est\u00c3\u00a3o mal configurados "}, {"NO_MISCONFIGURED_SERIALS", "Nenhum "}, {"NMM_MSG_NOTE", "Nota: "}, {"NMM_MSG1", "* Efetue login no dispositivo e desabilite os syslogs"}, {"NMM_MSG2", "* Se n\u00c3\u00a3o tiver acesso ao dispositivo, use as regras para o gateway para bloquear as s\u00c3\u00a9ries"}, {"NMM_MSG3", "* Para corrigir as s\u00c3\u00a9ries mal configuradas, efetue login no dispositivo e altere as configura\u00c3\u00a7\u00c3\u00b5es GMS"}, {"NMM_MSG4", "* As s\u00c3\u00a9ries listadas aqui atualizam-se a cada 12 horas"}, {"PERF_SUMMARIZER_STATUS", "Estado"}, {"PERF_DEPLOYMENT_STATUS", "Estado da implanta\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_MSG_HIGH_CAPACITY", "O resumidor est\u00c3\u00a1 operando com uma capacidade muito alta, reatribua unidades."}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "Um dos resumidores (ou mais) na implanta\u00c3\u00a7\u00c3\u00a3o excedeu a sua capacidade de opera\u00c3\u00a7\u00c3\u00a3o nos \u00c3\u00baltimos 7 dias. Verifique a coluna de estado da sec\u00c3\u00a7\u00c3\u00a3o de utiliza\u00c3\u00a7\u00c3\u00a3o do resumidor e visite o site GMS para mais informa\u00c3\u00a7\u00c3\u00b5es sobre como gerenciar a sua implanta\u00c3\u00a7\u00c3\u00a3o."}, {"PERF_MSG_REASSIGN_UNITS", "Reatribua unidades entre os agentes."}, {"PERF_MSG_DISK_LOW", "Espa\u00c3\u00a7o de disco insuficiente, adicione discos ou aumente a aloca\u00c3\u00a7\u00c3\u00a3o do disco."}, {"PERF_MSG_DISK_LOW_RDB", "Espa\u00c3\u00a7o de disco insuficiente para o banco de dados de relat\u00c3\u00b3rios, adicione discos ou aumente a aloca\u00c3\u00a7\u00c3\u00a3o do disco."}, {"PERF_MSG_CAPACITY_PLANNING", "Visite o<a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>site do GMS</a> para mais informa\u00c3\u00a7\u00c3\u00b5es sobre como gerenciar a sua implanta\u00c3\u00a7\u00c3\u00a3o."}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "Nota: a m\u00c3\u00a9dia de carregamento e a capacidade estimada s\u00c3\u00a3o espec\u00c3\u00adficas da implanta\u00c3\u00a7\u00c3\u00a3o e poder\u00c3\u00a3o variar consoante os arquivos."}, {"PERF_OF", "de"}, {"PERF_ON_DISK", "no disco"}, {"PERF_OPT_EXPORT_PROGRESS", "Exporta\u00c3\u00a7\u00c3\u00a3o em progresso"}, {"PERF_OPT_EXPORT_DONE", "Exporta\u00c3\u00a7\u00c3\u00a3o conclu\u00c3\u00adda"}, {"PERF_OPT_DELETE_PROGRESS", "Exclus\u00c3\u00a3o em progresso"}, {"PERF_OPT_DELETE_DONE", "Exclus\u00c3\u00a3o conclu\u00c3\u00adda"}, {"PERF_OPT_IMPORT_PROGRESS", "Importa\u00c3\u00a7\u00c3\u00a3o em progresso"}, {"PERF_OPT_QUEUED_UP", "Enfileirado"}, {"PERF_OPT_IDLE", "Ocioso"}, {"PERF_OPT_CURRENT", "Atual"}, {"PERF_OPT_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es de otimiza\u00c3\u00a7\u00c3\u00a3o"}, {"PERF_XML_FILE_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es do arquivo XML"}, {"PERF_XML_LABEL", "Arquivos XML n\u00c3\u00a3o processados"}, {"PERF_XPG_LABEL", "Arquivos em processamento"}, {"PERF_XPD_LABEL", "Arquivos armazenados"}, {"PERF_XPE_LABEL", "Arquivos inv\u00c3\u00a1lidos"}, {"ALERT_NO_ALERTS", "N\u00c3\u00a3o existem alertas ativos para esta se\u00c3\u00a7\u00c3\u00a3o neste momento."}, {"ALERT_DESCRIPTION", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"ALERT_NODE_NAME", "Nome da unidade"}, {"ALERT_SEVERITY", "Gravidade"}, {"ALERT_LISTING", "Listagem de alertas"}, {"CAL_SUN", "dom."}, {"CAL_MON", "seg."}, {"CAL_TUE", "ter."}, {"CAL_WED", "qua."}, {"CAL_THU", "qui."}, {"CAL_FRI", "sex."}, {"CAL_SAT", "s\u00c3\u00a1b."}, {"CAL_JAN", "janeiro"}, {"CAL_FEB", "fevereiro"}, {"CAL_MAR", "mar\u00c3\u00a7o"}, {"CAL_APR", "abril"}, {"CAL_MAY", "maio"}, {"CAL_JUN", "junho"}, {"CAL_JUL", "julho"}, {"CAL_AUG", "agosto"}, {"CAL_SEP", "setembro"}, {"CAL_OCT", "outubro"}, {"CAL_NOV", "novembro"}, {"CAL_DEC", "dezembro"}, {Integer.toString(1), "Tarefa executada com \u00c3\u00aaxito: "}, {Integer.toString(0), "Falha na execu\u00c3\u00a7\u00c3\u00a3o da tarefa."}, {Integer.toString(42), "Tarefa executada com \u00c3\u00aaxito retornou com AVISOS: "}, {Integer.toString(10), "Comando executado com \u00c3\u00aaxito."}, {Integer.toString(-12), "A execu\u00c3\u00a7\u00c3\u00a3o do comando falhou parcial ou completamente."}, {Integer.toString(-57), "Privil\u00c3\u00a9gios de usu\u00c3\u00a1rio insuficientes para executar esta a\u00c3\u00a7\u00c3\u00a3o."}, {Integer.toString(-58), "Sem informa\u00c3\u00a7\u00c3\u00b5es para processar o comando."}, {Integer.toString(-59), "A a\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ser executada em nenhum momento."}, {Integer.toString(-56), "Apenas os usu\u00c3\u00a1rios do grupo do Administrador do Dom\u00c3\u00adnioLocal possuem privil\u00c3\u00a9gios para executar este comando."}, {Integer.toString(2), "Foi efetuada uma verifica\u00c3\u00a7\u00c3\u00a3o de novo firmware com \u00c3\u00aaxito, mas n\u00c3\u00a3o havia nenhum firmware dispon\u00c3\u00advel "}, {Integer.toString(3), "A opera\u00c3\u00a7\u00c3\u00a3o back-end foi previamente executada com \u00c3\u00aaxito para a tarefa: "}, {Integer.toString(4), "A opera\u00c3\u00a7\u00c3\u00a3o de atualiza\u00c3\u00a7\u00c3\u00a3o de banco de dados foi efetuada com \u00c3\u00aaxito para a tarefa: "}, {Integer.toString(5), "Est\u00c3\u00a3o dispon\u00c3\u00adveis unidades para atualizar e para registrar"}, {Integer.toString(6), "A avalia\u00c3\u00a7\u00c3\u00a3o gratuita n\u00c3\u00a3o foi aplicada ao dispositivo"}, {Integer.toString(7), "Est\u00c3\u00a3o dispon\u00c3\u00adveis unidades para atualizar, mas n\u00c3\u00a3o para registrar"}, {Integer.toString(8), "Est\u00c3\u00a3o dispon\u00c3\u00adveis unidades para registrar, mas n\u00c3\u00a3o para atualizar"}, {Integer.toString(-1), "Alguns par\u00c3\u00a2metros do dispositivo n\u00c3\u00a3o foram configurados corretamente."}, {Integer.toString(-53), "O dispositivo n\u00c3\u00a3o suporta logins de administrador simult\u00c3\u00a2neos."}, {Integer.toString(-63), "Credenciais de login do dispositivo ausentes."}, {Integer.toString(-69), "\u00c3\u20ac espera de obter o endere\u00c3\u00a7o IP do login atual."}, {Integer.toString(-70), "JVM OOM: mem\u00c3\u00b3ria dispon\u00c3\u00advel insuficiente para continuar, a tarefa ser\u00c3\u00a1 repetida na pr\u00c3\u00b3xima execu\u00c3\u00a7\u00c3\u00a3o"}, {Integer.toString(-64), "N\u00c3\u00a3o foi poss\u00c3\u00advel obter a p\u00c3\u00a1gina de autentica\u00c3\u00a7\u00c3\u00a3o do dispositivo gerenciado para efetuar o login."}, {Integer.toString(-64) + "_TT", "- A unidade n\u00c3\u00a3o \u00c3\u00a9 acess\u00c3\u00advel no endere\u00c3\u00a7o gerenciado.\n- A unidade n\u00c3\u00a3o suporta o login simult\u00c3\u00a2neo,\n verifique se um navegador tem login efetuado diretamente na unidade."}, {Integer.toString(-65), "Nenhuma resposta \u00c3\u00a0 postagem de login."}, {Integer.toString(-83), "O login falhou porque os n\u00c3\u00bameros de s\u00c3\u00a9rie n\u00c3\u00a3o coincidem."}, {Integer.toString(-83) + "_TT", "- O n\u00c3\u00bamero de s\u00c3\u00a9rie especificado ao adicionar a unidade ao GMS\n n\u00c3\u00a3o corresponde com o da unidade."}, {Integer.toString(-84), "O login falhou porque o modo de login especificado \u00c3\u00a9 inv\u00c3\u00a1lido."}, {Integer.toString(-84) + "_TT", "- O modo de login especificado n\u00c3\u00a3o pertence \u00c3\u00a0 lista\n de modos permitidos."}, {Integer.toString(-2), "A senha ou o nome de usu\u00c3\u00a1rio do dispositivo estavam incorretos."}, {Integer.toString(-918), "[BR]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-918), "[BR] The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "A unidade usa um certificado SSL com uma assinatura MD5 que, por motivos de seguran\u00c3\u00a7a, j\u00c3\u00a1 n\u00c3\u00a3o \u00c3\u00a9 suportado. Gere novamente o certificado para gerenciar esta unidade."}, {Integer.toString(-917), "A unidade n\u00c3\u00a3o tem uma licen\u00c3\u00a7a para executar esta tarefa."}, {Integer.toString(-71), "Url de acesso inv\u00c3\u00a1lido \u00c3\u00a0 unidade."}, {Integer.toString(-71) + "_TT", "- Endere\u00c3\u00a7o IP pode n\u00c3\u00a3o ter sido obtido pela unidade."}, {Integer.toString(-72), "Falha na solicita\u00c3\u00a7\u00c3\u00a3o do estado de xml."}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "Falha na solicita\u00c3\u00a7\u00c3\u00a3o do estado de xml, nenhuma resposta recebida."}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "A solicita\u00c3\u00a7\u00c3\u00a3o de um arquivo de prefer\u00c3\u00aancias falhou."}, {Integer.toString(-950), "[BR]Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "A solicita\u00c3\u00a7\u00c3\u00a3o de um arquivo de prefer\u00c3\u00aancias falhou, nenhuma resposta recebida."}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "Arquivo de prefer\u00c3\u00aancias inv\u00c3\u00a1lido."}, {Integer.toString(-76) + "_TT", "- N\u00c3\u00a3o foi recebido nenhum arquivo de prefer\u00c3\u00aancias.\n- O arquivo de prefer\u00c3\u00aancias obtido pode estar corrompido.\n- O arquivo de prefer\u00c3\u00aancias pode estar incompleto."}, {Integer.toString(-77), "A aquisi\u00c3\u00a7\u00c3\u00a3o da unidade falhou."}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "Mensagem de pulsa\u00c3\u00a7\u00c3\u00a3o recebida."}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "Nenhuma mensagem de pulsa\u00c3\u00a7\u00c3\u00a3o recebida."}, {Integer.toString(-78) + "_TT", "- A mensagem de pulsa\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o foi enviada pela unidade.\n- A mensagem de pulsa\u00c3\u00a7\u00c3\u00a3o enviada pela unidade n\u00c3\u00a3o consegue chegar ao GMS.\n- O SA (t\u00c3\u00banel) n\u00c3\u00a3o \u00c3\u00a9 criado no gateway do GMS.\n- A regra que autoriza o syslog n\u00c3\u00a3o \u00c3\u00a9 criada no gateway do GMS.\n- Para unidades de inst\u00c3\u00a2ncia \u00e2\u20ac\u201c siga as instru\u00c3\u00a7\u00c3\u00b5es descritas em Nota: se\u00c3\u00a7\u00c3\u00a3o das implanta\u00c3\u00a7\u00c3\u00b5es de servi\u00c3\u00a7os distribu\u00c3\u00addos do console na Web."}, {Integer.toString(-79), "As mensagens de pulsa\u00c3\u00a7\u00c3\u00a3o recebidas n\u00c3\u00a3o podem ser descriptografadas."}, {Integer.toString(-79) + "_TT", "- A senha especificada ao adicionar a unidade ao GMS\n n\u00c3\u00a3o corresponde com a da unidade."}, {Integer.toString(13), "Mensagem syslog recebida."}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "Nenhuma mensagem syslog recebida."}, {Integer.toString(-81) + "_TT", "- A mensagem syslog n\u00c3\u00a3o foi enviada pela unidade.\n- A mensagem syslog enviada pela unidade n\u00c3\u00a3o consegue chegar ao GMS.\n- O SA (t\u00c3\u00banel) n\u00c3\u00a3o \u00c3\u00a9 criado no gateway do GMS.\n- A regra que autoriza o syslog n\u00c3\u00a3o \u00c3\u00a9 criada no gateway do GMS."}, {Integer.toString(-82), "As mensagens syslog n\u00c3\u00a3o podem ser descriptografadas."}, {Integer.toString(-82) + "_TT", "- A senha especificada ao adicionar a unidade ao GMS\n n\u00c3\u00a3o corresponde com a da unidade."}, {Integer.toString(12), "Unidade adicionada; aguardando que seja adquirida."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "Unidade modificada; aguardando que seja adquirida."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar \u00c3\u00a0 unidade. A unidade ou a rede poder\u00c3\u00a3o estar inativas."}, {Integer.toString(-4), "Pelo menos um par\u00c3\u00a2metro para a configura\u00c3\u00a7\u00c3\u00a3o do dispositivo est\u00c3\u00a1 incorreto."}, {Integer.toString(-5), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o site da Web do Registro da SonicWall."}, {Integer.toString(-6), "O c\u00c3\u00b3digo de Ativa\u00c3\u00a7\u00c3\u00a3o para a Atualiza\u00c3\u00a7\u00c3\u00a3o/Assinatura \u00c3\u00a9 inv\u00c3\u00a1lido."}, {Integer.toString(-7), "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 registrado."}, {Integer.toString(-8), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o site do Registro do SonicWall GMS ou est\u00c3\u00a1 inativo. Verifique o acesso \u00c3\u00a0 Internet a partir dos Servidores do SonicWall GMS."}, {Integer.toString(-9), "Nenhum dispositivo dispon\u00c3\u00advel para atualiza\u00c3\u00a7\u00c3\u00a3o."}, {Integer.toString(-10), "Tentativa de adicionar um dispositivo que j\u00c3\u00a1 est\u00c3\u00a1 sob o gerenciamento do SonicWall GMS."}, {Integer.toString(-11), "Tentativa de configurar um dispositivo inv\u00c3\u00a1lido."}, {Integer.toString(-15), "Tentativa de criar uma Regra para um Servi\u00c3\u00a7o n\u00c3\u00a3o existente."}, {Integer.toString(-16), "Viola\u00c3\u00a7\u00c3\u00a3o da Licen\u00c3\u00a7a da SonicWall."}, {Integer.toString(-17), "Erro interno do SonicWall GMS."}, {Integer.toString(-18), "Erro no download da Lista de filtragem de conte\u00c3\u00bado."}, {Integer.toString(-19), "Tentativa de excluir um Servi\u00c3\u00a7o para o qual existe uma Regra."}, {Integer.toString(-47), "N\u00c3\u00a3o foi poss\u00c3\u00advel contatar o servidor do AV"}, {Integer.toString(-20), "Erro interno do AV"}, {Integer.toString(-21), "Tarefa do AV pendente"}, {Integer.toString(-22), "O c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o do AV \u00c3\u00a9 inv\u00c3\u00a1lido."}, {Integer.toString(-23), "O c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o do AV j\u00c3\u00a1 est\u00c3\u00a1 em uso."}, {Integer.toString(-24), "A senha do AV est\u00c3\u00a1 incorreta."}, {Integer.toString(-25), "Erro de contagem da renova\u00c3\u00a7\u00c3\u00a3o do AV."}, {Integer.toString(-26), "Renova\u00c3\u00a7\u00c3\u00a3o do AV antes do tempo."}, {Integer.toString(-27), "Tentativa de gerenciar dispositivo mais antigo do que o recomendado."}, {Integer.toString(-28), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o Servidor de atualiza\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica ou est\u00c3\u00a1, de momento, inativo."}, {Integer.toString(-85), "A a\u00c3\u00a7\u00c3\u00a3o de gerenciamento de backups de sistema falhou."}, {Integer.toString(-29), "N\u00c3\u00a3o foi poss\u00c3\u00advel fazer o upload do firmware para o dispositivo."}, {Integer.toString(-62), "Tentativa de upload de firmware inv\u00c3\u00a1lido para o dispositivo."}, {Integer.toString(-60), "O tamanho m\u00c3\u00a1ximo de um Arquivo para atualiza\u00c3\u00a7\u00c3\u00a3o de firmware \u00c3\u00a9 de 4 MB."}, {Integer.toString(-31), "Erro na grava\u00c3\u00a7\u00c3\u00a3o de firmware no disco local."}, {Integer.toString(-30), "Erro no download do firmware. N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o Servidor de atualiza\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica ou est\u00c3\u00a1, de momento, indispon\u00c3\u00advel."}, {Integer.toString(-32), "Erro ao acessar o banco de dados."}, {Integer.toString(-33), "Erro ao configurar o dispositivo."}, {Integer.toString(-34), "Erro ao autenticar o usu\u00c3\u00a1rio."}, {Integer.toString(-68), "Dom\u00c3\u00adnio n\u00c3\u00a3o encontrado ou Nome de dom\u00c3\u00adnio inv\u00c3\u00a1lido."}, {Integer.toString(-35), "Erro ao atualizar a senha CMP."}, {Integer.toString(-36), "Sem unidades dispon\u00c3\u00adveis para registrar."}, {Integer.toString(-37), "N\u00c3\u00a3o foi poss\u00c3\u00advel contatar o Servidor do antiv\u00c3\u00adrus ou foi reportado um erro desconhecido pelo Servidor."}, {Integer.toString(-38), "Sem unidades dispon\u00c3\u00adveis para registrar ou atualizar."}, {Integer.toString(-39), "Ocorreu um problema ao adicionar um c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o ao banco de dados."}, {Integer.toString(-40), "Erro ao eliminar o c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o. N\u00c3\u00a3o existe um c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o desse tipo no banco de dados."}, {Integer.toString(-41), "Erro desconhecido ao eliminar o c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o."}, {Integer.toString(-48), "Falha na atualiza\u00c3\u00a7\u00c3\u00a3o"}, {Integer.toString(-49), "Acesso negado \u00c3\u00a0 execu\u00c3\u00a7\u00c3\u00a3o de comandos CLI."}, {Integer.toString(-42), "N\u00c3\u00a3o foi poss\u00c3\u00advel atualizar o banco de dados com \u00c3\u00aaxito."}, {Integer.toString(-43), "N\u00c3\u00a3o foi poss\u00c3\u00advel enviar e-mail a um ou mais endere\u00c3\u00a7os."}, {Integer.toString(-44), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o TechSupport do dispositivo."}, {Integer.toString(-45), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o arquivo SPD do dispositivo."}, {Integer.toString(-46), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o Arquivo do certificado do dispositivo."}, {Integer.toString(-50), "N\u00c3\u00a3o foi poss\u00c3\u00advel sincronizar as informa\u00c3\u00a7\u00c3\u00b5es de monitoramento de estado do t\u00c3\u00banel."}, {Integer.toString(-51), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o arquivo RCF do dispositivo."}, {Integer.toString(-52), "Conta de usu\u00c3\u00a1rio desabilitada; Falha no login."}, {Integer.toString(-61), "A tarefa previamente executada necessitava reinicializa\u00c3\u00a7\u00c3\u00a3o, a tarefa ser\u00c3\u00a1 repetida no pr\u00c3\u00b3ximo intervalo."}, {Integer.toString(-229), "Para ativar este servi\u00c3\u00a7o, voc\u00c3\u00aa deve ter uma assinatura v\u00c3\u00a1lida de Prote\u00c3\u00a7\u00c3\u00a3o de e-mail."}, {Integer.toString(-230), "A sua vers\u00c3\u00a3o do Sonic OS n\u00c3\u00a3o suporta clustering (assinatura de licen\u00c3\u00a7a com v\u00c3\u00a1rios n\u00c3\u00b3s). Atualize ou use uma chave com um \u00c3\u00banico n\u00c3\u00b3."}, {Integer.toString(-231), "Voc\u00c3\u00aa n\u00c3\u00a3o pode misturar chaves de ativa\u00c3\u00a7\u00c3\u00a3o de diferentes modelos WANOPT."}, {Integer.toString(-232), "O seu modelo WANOPT n\u00c3\u00a3o suporta clustering (assinatura de licen\u00c3\u00a7a com v\u00c3\u00a1rios n\u00c3\u00b3s)."}, {Integer.toString(-201), "Erro com os par\u00c3\u00a2metros da API."}, {Integer.toString(-202), "O usu\u00c3\u00a1rio j\u00c3\u00a1 est\u00c3\u00a1 conectado."}, {Integer.toString(-203), "A API do SonicWall GMS n\u00c3\u00a3o est\u00c3\u00a1 implementada nesta vers\u00c3\u00a3o."}, {Integer.toString(-204), "A sess\u00c3\u00a3o n\u00c3\u00a3o existe."}, {Integer.toString(-205), "Sair da SonicWall GMS Shell"}, {Integer.toString(-206), "Os par\u00c3\u00a2metros da API est\u00c3\u00a3o em falta"}, {Integer.toString(-207), "Sem linhas para esta categoria"}, {Integer.toString(-208), "Nenhum c\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o fornecido"}, {Integer.toString(-209), "Tipo de ativa\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o especificado"}, {Integer.toString(-210), "O endere\u00c3\u00a7o IP n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lido; a unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-211), "O comprimento indicado \u00c3\u00a9 menor do que o requerido; a unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-212), "A cadeia de caracteres s\u00c3\u00b3 pode conter caracteres hexadecimais; a Unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-213), "O endere\u00c3\u00a7o IP do Agendador em espera n\u00c3\u00a3o pode ser o mesmo que o do Agendador principal; a Unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-214), "Nenhum agendador foi encontrado no endere\u00c3\u00a7o IP especificado; a Unidade n\u00c3\u00a3o foi adicionada."}, {Integer.toString(-215), "Ocorreu um erro ao adicionar a unidade."}, {Integer.toString(-226), "Voc\u00c3\u00aa n\u00c3\u00a3o tem uma Licen\u00c3\u00a7a v\u00c3\u00a1lida."}, {Integer.toString(-225), "Ocorreu um erro ao analisar o XML de entrada"}, {Integer.toString(-228), "Conte\u00c3\u00bados inv\u00c3\u00a1lidos encontrados no XML de entrada"}, {Integer.toString(-216), "Tipo de relat\u00c3\u00b3rio inv\u00c3\u00a1lido ou desconhecido. D\u00c3\u00bavida quanto ao relat\u00c3\u00b3rio ser di\u00c3\u00a1rio, semanal ou mensal"}, {Integer.toString(-217), "Endere\u00c3\u00a7o de e-mail de destino inv\u00c3\u00a1lido. Pelo menos um endere\u00c3\u00a7o de destino v\u00c3\u00a1lido deve ser fornecido"}, {Integer.toString(-218), "Endere\u00c3\u00a7o de e-mail de origem inv\u00c3\u00a1lido"}, {Integer.toString(-219), "Endere\u00c3\u00a7o de servidor SMTP inv\u00c3\u00a1lido"}, {Integer.toString(-220), "Lista de relat\u00c3\u00b3rios inv\u00c3\u00a1lida. Pelo menos um ID do relat\u00c3\u00b3rio v\u00c3\u00a1lido deve ser fornecido"}, {Integer.toString(-221), "O Endere\u00c3\u00a7o IP de programa\u00c3\u00a7\u00c3\u00a3o do analisador registrado no banco de dados \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-222), "O N\u00c3\u00bamero da porta de programa\u00c3\u00a7\u00c3\u00a3o do analisador registrado no banco de dados \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-223), "Data de relat\u00c3\u00b3rio inv\u00c3\u00a1lida ou desconhecida. A data de relat\u00c3\u00b3rio fornecida tem de estar no formato mm/dd/aaaa"}, {Integer.toString(-224), "O ID de programa\u00c3\u00a7\u00c3\u00a3o fornecido n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lido"}, {Integer.toString(-502), "Senha ausente para o arquivo zip com prote\u00c3\u00a7\u00c3\u00a3o de senha"}, {Integer.toString(-503), "O n\u00c3\u00b3 fornecido \u00c3\u00a9 inv\u00c3\u00a1lido. Devem ser especificados o N\u00c3\u00bamero de s\u00c3\u00a9rie (para unitNode) ou o nome de exibi\u00c3\u00a7\u00c3\u00a3o (para groupNode)."}, {Integer.toString(-10001), "Ocorreu um erro de comunica\u00c3\u00a7\u00c3\u00a3o"}, {Integer.toString(-10002), "Ocorreu um erro ao analisar o XML de entrada"}, {Integer.toString(-10005), "Foi invocado um Componente desconhecido"}, {Integer.toString(-10006), "Foi invocado um m\u00c3\u00a9todo do AV desconhecido"}, {Integer.toString(-10011), "Houve uma tentativa de atualizar o AV ap\u00c3\u00b3s expira\u00c3\u00a7\u00c3\u00a3o."}, {Integer.toString(-10012), "Houve uma tentativa de atualizar o AV para um dispositivo n\u00c3\u00a3o registrado."}, {Integer.toString(-10013), "Houve uma tentativa de renovar o AV por menos n\u00c3\u00b3s do que este suporta atualmente."}, {Integer.toString(-10014), "Houve uma tentativa de renovar o AV antes do tempo."}, {Integer.toString(-10020), "Uma tarefa anterior para mudan\u00c3\u00a7a de senha do AV est\u00c3\u00a1 pendente."}, {Integer.toString(-10100), "Ocorreu um erro ao comunicar com o back-end do McAfee"}, {Integer.toString(-10101), "O McAfee n\u00c3\u00a3o consegue encontrar registros deste site."}, {Integer.toString(-10102), "O McAfee n\u00c3\u00a3o consegue encontrar correspond\u00c3\u00aancia com a senha antiga deste site."}, {Integer.toString(-10103), "O site do AV j\u00c3\u00a1 est\u00c3\u00a1 registrado."}, {Integer.toString(-10200), "Ocorreu um erro ao comunicar com o servidor de banco de dados do AV"}, {Integer.toString(-10201), "O n\u00c3\u00bamero de s\u00c3\u00a9rie do dispositivo j\u00c3\u00a1 est\u00c3\u00a1 registrado"}, {Integer.toString(-10202), "A chave de licen\u00c3\u00a7a fornecida j\u00c3\u00a1 est\u00c3\u00a1 em uso"}, {Integer.toString(-10203), "O antiv\u00c3\u00adrus nunca foi registrado para este dispositivo"}, {Integer.toString(-10204), "As v\u00c3\u00a1rias chaves fornecidas t\u00c3\u00aam de ter o mesmo per\u00c3\u00adodo"}, {Integer.toString(-10205), "N\u00c3\u00a3o \u00c3\u00a9 permitido usar a chave de avalia\u00c3\u00a7\u00c3\u00a3o gratuita para atualizar"}, {Integer.toString(-10206), "Valor ilegal fornecido para um ou mais par\u00c3\u00a2metros"}, {Integer.toString(-10210), "O n\u00c3\u00bamero de s\u00c3\u00a9rie fornecido n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lido"}, {Integer.toString(-10211), "A chave de licen\u00c3\u00a7a fornecida j\u00c3\u00a1 est\u00c3\u00a1 registrada"}, {Integer.toString(-10212), "A nova senha fornecida tem caracteres inv\u00c3\u00a1lidos ou n\u00c3\u00a3o tem 6 a 12 caracteres"}, {Integer.toString(-10213), "A senha do Antiv\u00c3\u00adrus fornecida \u00c3\u00a9 inv\u00c3\u00a1lida"}, {Integer.toString(-10214), "O c\u00c3\u00b3digo de OEM fornecido \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-10215), "O endere\u00c3\u00a7o IP de WAN fornecido \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-10220), "Um pedido anterior para este dispositivo ainda est\u00c3\u00a1 pendente"}, {Integer.toString(-10250), "O dispositivo j\u00c3\u00a1 est\u00c3\u00a1 registrado para o AV e precisa ser reativado."}, {Integer.toString(-10251), "O dispositivo n\u00c3\u00a3o pode ser reativado devido a senha inv\u00c3\u00a1lida"}, {Integer.toString(-10260), "N\u00c3\u00a3o foi poss\u00c3\u00advel encontrar o N\u00c3\u00bamero de s\u00c3\u00a9rie do grupo de compartilhamento de licen\u00c3\u00a7as fornecido"}, {Integer.toString(-10261), "O N\u00c3\u00bamero de s\u00c3\u00a9rie do grupo de compartilhamento de licen\u00c3\u00a7as \u00c3\u00a9 inv\u00c3\u00a1lido"}, {Integer.toString(-10262), "O dispositivo n\u00c3\u00a3o \u00c3\u00a9 membro de nenhum Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10263), "O dispositivo j\u00c3\u00a1 tem uma assinatura de antiv\u00c3\u00adrus ativa e n\u00c3\u00a3o pode se adicionado a um Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10264), "O dispositivo n\u00c3\u00a3o \u00c3\u00a9 membro deste Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10265), "N\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel remover o propriet\u00c3\u00a1rio do Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10266), "O dispositivo j\u00c3\u00a1 \u00c3\u00a9 membro de outro Grupo de compartilhamento de licen\u00c3\u00a7as"}, {Integer.toString(-10267), "A nova Contagem de licen\u00c3\u00a7as fornecida excede o n\u00c3\u00bamero de licen\u00c3\u00a7as de Grupo de compartilhamento de licen\u00c3\u00a7as dispon\u00c3\u00adveis"}, {Integer.toString(-10004), "Um ou mais par\u00c3\u00a2metros para a opera\u00c3\u00a7\u00c3\u00a3o do antiv\u00c3\u00adrus est\u00c3\u00a3o em falta"}, {Integer.toString(-10300), "N\u00c3\u00a3o foi poss\u00c3\u00advel encontrar as informa\u00c3\u00a7\u00c3\u00b5es fornecidas sobre o parceiro TotalSecure"}, {Integer.toString(-10301), "Foi fornecida uma senha do parceiro TotalSecure incorreta"}, {Integer.toString(-10303), "A contagem de licen\u00c3\u00a7as do Antiv\u00c3\u00adrus fornecida \u00c3\u00a9 inv\u00c3\u00a1lida"}, {Integer.toString(-10304), "Houve uma tentativa de gerenciar um dispositivo que n\u00c3\u00a3o est\u00c3\u00a1 atribu\u00c3\u00addo ao parceiro TotalSecure"}, {Integer.toString(-20000), "Erro desconhecido ao comunicar com o servidor de registro back-end."}, {Integer.toString(-20101), "O contato solicitado j\u00c3\u00a1 foi registrado para o usu\u00c3\u00a1rio."}, {Integer.toString(-20102), "N\u00c3\u00a3o foi poss\u00c3\u00advel adicionar o contato solicitado para o usu\u00c3\u00a1rio."}, {Integer.toString(-20106), "N\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel modificar pois as informa\u00c3\u00a7\u00c3\u00b5es sobre o usu\u00c3\u00a1rio n\u00c3\u00a3o foram encontradas."}, {Integer.toString(-20111), "N\u00c3\u00a3o foram encontradas as informa\u00c3\u00a7\u00c3\u00b5es do contato."}, {Integer.toString(-20112), "N\u00c3\u00a3o foi poss\u00c3\u00advel modificar as informa\u00c3\u00a7\u00c3\u00b5es do contato."}, {Integer.toString(-20113), "N\u00c3\u00a3o foi poss\u00c3\u00advel eliminar as informa\u00c3\u00a7\u00c3\u00b5es do contato."}, {Integer.toString(-20116), "O dispositivo j\u00c3\u00a1 est\u00c3\u00a1 registrado em uma conta MySonicWall.com diferente."}, {Integer.toString(-20117), "O dispositivo especificado n\u00c3\u00a3o foi encontrado no sistema de registro do dispositivo."}, {Integer.toString(-20118), "N\u00c3\u00a3o foi poss\u00c3\u00advel registrar o dispositivo pelo sistema de registro back-end."}, {Integer.toString(-20119), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o estado para o dispositivo especificado."}, {Integer.toString(-20121), "O dispositivo especificado n\u00c3\u00a3o est\u00c3\u00a1 registrado."}, {Integer.toString(-20122), "A chave de ativa\u00c3\u00a7\u00c3\u00a3o especificada j\u00c3\u00a1 foi usada."}, {Integer.toString(-20123), "Foi usado um C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o inv\u00c3\u00a1lido."}, {Integer.toString(-20124), "Foi usado um C\u00c3\u00b3digo de ativa\u00c3\u00a7\u00c3\u00a3o/Combina\u00c3\u00a7\u00c3\u00a3o de dispositivo inv\u00c3\u00a1lido."}, {Integer.toString(-20125), "A atualiza\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o foi conclu\u00c3\u00adda pelo sistema de registro back-end."}, {Integer.toString(-20126), "A Ativa\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o foi conclu\u00c3\u00adda pelo sistema de registro back-end."}, {Integer.toString(-20131), "Ocorreu um erro ao registrar o endere\u00c3\u00a7o MAC errado do sistema SonicWall GMS."}, {Integer.toString(-20132), "O Sistema SonicWall GMS n\u00c3\u00a3o est\u00c3\u00a1 registrado."}, {Integer.toString(-20133), "O n\u00c3\u00bamero de s\u00c3\u00a9rie do SonicWall GMS especificado \u00c3\u00a9 inv\u00c3\u00a1lido."}, {Integer.toString(-20134), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar o Estado do SonicWall GMS pelo sistema de registro back-end."}, {Integer.toString(-20135), "O SonicWall GMS j\u00c3\u00a1 est\u00c3\u00a1 registrado."}, {Integer.toString(-20136), "O sistema de registro back-end n\u00c3\u00a3o conseguiu registrar o seu sistema SonicWall GMS."}, {Integer.toString(-20142), "O endere\u00c3\u00a7o MAC errado j\u00c3\u00a1 est\u00c3\u00a1 registrado."}, {Integer.toString(-20143), "N\u00c3\u00a3o foi poss\u00c3\u00advel recuperar as atualiza\u00c3\u00a7\u00c3\u00b5es dispon\u00c3\u00adveis para o SonicWall GMS pelo sistema de registro back-end."}, {Integer.toString(-20144), "A dura\u00c3\u00a7\u00c3\u00a3o do pacote de base n\u00c3\u00a3o foi especificada."}, {Integer.toString(-20145), "Ocorreu um erro ao ler as informa\u00c3\u00a7\u00c3\u00b5es do sistema do pacote de base no sistema de registro back-end."}, {Integer.toString(-20146), "A atualiza\u00c3\u00a7\u00c3\u00a3o do n\u00c3\u00b3 n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel para este produto."}, {Integer.toString(-20147), "A instala\u00c3\u00a7\u00c3\u00a3o do seu SonicWall GMS j\u00c3\u00a1 \u00c3\u00a9 uma vers\u00c3\u00a3o comercial."}, {Integer.toString(-20148), "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 registrado."}, {Integer.toString(-20149), "Ocorreu um erro ao recuperar as informa\u00c3\u00a7\u00c3\u00b5es sobre o sistema SonicWall GMS no servidor de registro back-end."}, {Integer.toString(-20150), "O n\u00c3\u00bamero de s\u00c3\u00a9rie do SonicWall GMS especificado n\u00c3\u00a3o est\u00c3\u00a1 registrado para o usu\u00c3\u00a1rio."}, {Integer.toString(-20151), "Ocorreu um erro ao inserir as informa\u00c3\u00a7\u00c3\u00b5es dos relat\u00c3\u00b3rios no sistema de registro back-end."}, {Integer.toString(-20152), "N\u00c3\u00bamero de s\u00c3\u00a9rie do SonicWall GMS e combina\u00c3\u00a7\u00c3\u00a3o do nome do usu\u00c3\u00a1rio inv\u00c3\u00a1lidos."}, {Integer.toString(-20153), "Ocorreu um erro no sistema de registro back-end ao atualizar o SonicWall GMS para a integra\u00c3\u00a7\u00c3\u00a3o do ViewPoint."}, {Integer.toString(-20154), "O dispositivo n\u00c3\u00a3o est\u00c3\u00a1 registrado ou foi especificado um nome de usu\u00c3\u00a1rio inv\u00c3\u00a1lido."}, {Integer.toString(-20155), "O contrato b\u00c3\u00a1sico para este servi\u00c3\u00a7o n\u00c3\u00a3o est\u00c3\u00a1 ativado ou expirou."}, {Integer.toString(-20201), "Erro interno: a entrada XML no system back-end era inv\u00c3\u00a1lida."}, {Integer.toString(-20202), "Erro interno: nenhum nome de usu\u00c3\u00a1rio foi especificado na entrada."}, {Integer.toString(-20203), "A senha especificada para a interface do sistema de Registro do SonicWall GMS \u00c3\u00a9 inv\u00c3\u00a1lida."}, {Integer.toString(-20204), "Erro interno: foi solicitado um m\u00c3\u00a9todo inv\u00c3\u00a1lido ao sistema de registro back-end."}, {Integer.toString(-20205), "Erro interno: foi solicitada uma vers\u00c3\u00a3o de XML inv\u00c3\u00a1lida ao sistema de registro back-end."}, {Integer.toString(-20401), "Erro interno: ocorreu um erro do banco de dados no sistema de registro back-end."}, {Integer.toString(-20402), "Erro interno: ocorreu um erro de registro no sistema de registro back-end."}, {Integer.toString(-20403), "Erro interno: ocorreu um erro de componente no sistema de registro back-end."}, {Integer.toString(-20404), "Erro interno: ocorreu um erro de procedimento no sistema de registro back-end."}, {Integer.toString(-20140), "N\u00c3\u00a3o foi poss\u00c3\u00advel encontrar no sistema de registro back-end as informa\u00c3\u00a7\u00c3\u00b5es de PKI para o dispositivo especificado."}, {Integer.toString(-20141), "O servi\u00c3\u00a7o PKI n\u00c3\u00a3o foi ativado para o dispositivo especificado."}, {Integer.toString(-227), "Mem\u00c3\u00b3ria insuficiente para o upload do arquivo. Fa\u00c3\u00a7a upload de um arquivo de tamanho menor."}, {Integer.toString(-66), "Tentativa de upload de arquivo de Assinatura inv\u00c3\u00a1lida para o dispositivo."}, {Integer.toString(-67), "N\u00c3\u00a3o foi poss\u00c3\u00advel fazer o upload do arquivo de assinatura para o dispositivo. Verifique se esta a\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 aplic\u00c3\u00a1vel a este Modelo/Vers\u00c3\u00a3o."}, {Integer.toString(-500), "Erro recebido do lm2.sonicwall.com."}, {Integer.toString(-501), "N\u00c3\u00a3o foi poss\u00c3\u00advel acessar o site lm2.sonicwall.com."}, {Integer.toString(-907), "N\u00c3\u00a3o existe suporte para a vers\u00c3\u00a3o do firmware do dispositivo."}, {Integer.toString(-901), "O ID de registro \u00c3\u00a9 inv\u00c3\u00a1lido ou n\u00c3\u00a3o existe."}, {Integer.toString(-902), "Falha ao aplicar o registro que inclui entidade."}, {Integer.toString(-903), "Falha ao aplicar o registro."}, {Integer.toString(-904), "O ID do modelo \u00c3\u00a9 inv\u00c3\u00a1lido ou n\u00c3\u00a3o existe."}, {Integer.toString(-905), "Falha ao aplicar o registro."}, {Integer.toString(-906), "Falha ao aplicar o modelo."}, {Integer.toString(-908), "Tempo limite atingido ao aguardar uma conex\u00c3\u00a3o do pool."}, {Integer.toString(-909), "Tempo limite atingido ao aguardar uma conex\u00c3\u00a3o com o host remoto."}, {Integer.toString(-910), "A configura\u00c3\u00a7\u00c3\u00a3o das defini\u00c3\u00a7\u00c3\u00b5es para este dispositivo n\u00c3\u00a3o s\u00c3\u00a3o apropriadas."}, {Integer.toString(-911), "Aguardando para determinar a configura\u00c3\u00a7\u00c3\u00a3o das defini\u00c3\u00a7\u00c3\u00b5es aplic\u00c3\u00a1veis a este dispositivo."}, {Integer.toString(-912), "N\u00c3\u00a3o foi poss\u00c3\u00advel encontrar o host do Servi\u00c3\u00a7o Web."}, {Integer.toString(-913), "N\u00c3\u00a3o foi poss\u00c3\u00advel criar a conex\u00c3\u00a3o do Servi\u00c3\u00a7o Web."}, {Integer.toString(-914), "Existe um problema em acessar os dados ou o recurso atrav\u00c3\u00a9s do servi\u00c3\u00a7o Web."}, {Integer.toString(-915), "Falha ao autenticar com o servi\u00c3\u00a7o Web."}, {Integer.toString(-800), "Relat\u00c3\u00b3rios de fluxo externos para GMS n\u00c3\u00a3o s\u00c3\u00a3o suportados por este dispositivo"}, {Integer.toString(-801), "As configura\u00c3\u00a7\u00c3\u00b5es do Gateway de encaminhador de fluxo n\u00c3\u00a3o est\u00c3\u00a3o corretas"}, {Integer.toString(-802), "Relat\u00c3\u00b3rios de fluxo externos para GMS n\u00c3\u00a3o s\u00c3\u00a3o suportados por este modelo"}, {Integer.toString(-803), "Relat\u00c3\u00b3rios de fluxo externos para GMS n\u00c3\u00a3o s\u00c3\u00a3o suportados por esta vers\u00c3\u00a3o de firmware"}, {Integer.toString(-804), "A Visualiza\u00c3\u00a7\u00c3\u00a3o de aplicativos n\u00c3\u00a3o est\u00c3\u00a1 licenciada neste dispositivo"}, {Integer.toString(-805), "Espa\u00c3\u00a7o de armazenamento insuficiente para atribui\u00c3\u00a7\u00c3\u00a3o de Agente de fluxo"}, {Integer.toString(-806), "Mem\u00c3\u00b3ria insuficiente de tempo de execu\u00c3\u00a7\u00c3\u00a3o para atribui\u00c3\u00a7\u00c3\u00a3o de Agente de fluxo"}, {Integer.toString(-807), "Falha de registro para o Agente de fluxo 1"}, {Integer.toString(-808), "Falha de registro para o Agente de fluxo 2"}, {Integer.toString(-809), "Falha de registro para o Agente de fluxo 1 e 2"}, {Integer.toString(-810), "Falha de registro para o Agente de fluxo 1 e Encaminhador de fluxo"}, {Integer.toString(-811), "Falha de registro para o Agente de fluxo 1, 2 e Encaminhador de fluxo"}, {Integer.toString(-812), "Falha de registro para o Agente de fluxo 2 e Encaminhador de fluxo"}, {Integer.toString(-813), "Falha de registro para o Encaminhador de fluxo"}, {Integer.toString(-814), "O Firewall de gateway n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel no GMS"}, {Integer.toString(-815), "Falha na cria\u00c3\u00a7\u00c3\u00a3o do t\u00c3\u00banel no fim do firewall de gateway"}, {Integer.toString(-816), "Falha na cria\u00c3\u00a7\u00c3\u00a3o do t\u00c3\u00banel no fim do dispositivo gerenciado"}, {Integer.toString(-817), "O aplicativo n\u00c3\u00a3o est\u00c3\u00a1 licenciado para Gerenciamento e gera\u00c3\u00a7\u00c3\u00a3o de relat\u00c3\u00b3rios GMS em nuvem"}, {Integer.toString(-818), "Pot\u00c3\u00aancia de processamento insuficiente para atribui\u00c3\u00a7\u00c3\u00a3o de Agente de fluxo"}, {Integer.toString(-819), "Largura de banda insuficiente para atribui\u00c3\u00a7\u00c3\u00a3o de Agente de fluxo"}, {"EDIT_DOMAIN", "Editar Dom\u00c3\u00adnio"}, {"VIEW_DOMAIN", "Ver os detalhes do Dom\u00c3\u00adnio"}, {"ADD_DOMAIN", "Adicionar dom\u00c3\u00adnio"}, {"SELECT_TO_DELETE", "Selecione o(s) dom\u00c3\u00adnio(s)/servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o a ser(em) exclu\u00c3\u00addo(s)."}, {"SELECT_AS_TO_DEL", "Selecione o(s) servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o a ser(em) exclu\u00c3\u00addo(s)."}, {"DELETE_CONFIRMATION", "Voc\u00c3\u00aa optou por excluir o dom\u00c3\u00adnio '"}, {"USER_DELETE_CONFIRMATION", "Todos os servidores de autentica\u00c3\u00a7\u00c3\u00a3o, usu\u00c3\u00a1rios, tipos de usu\u00c3\u00a1rios e as suas configura\u00c3\u00a7\u00c3\u00b5es tamb\u00c3\u00a9m ser\u00c3\u00a3o exclu\u00c3\u00addos."}, {"USER_AS_DELETE_CONFIRMATION", "Todos os usu\u00c3\u00a1rios, tipos de usu\u00c3\u00a1rios e as suas configura\u00c3\u00a7\u00c3\u00b5es tamb\u00c3\u00a9m ser\u00c3\u00a3o exclu\u00c3\u00addos."}, {"SURE_WANT_TO_CONTINUE", "Tem certeza de que deseja continuar?"}, {"MULTIPLE_DELETE_CONFIRMATION", "Voc\u00c3\u00aa selecionou o(s) seguinte(s) dom\u00c3\u00adnio(s) para excluir:"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "Voc\u00c3\u00aa selecionou o(s) seguinte(s) servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o para excluir:"}, {"AND_AS_DELETE_CONFIRMATION", "e excluir o(s) seguinte(s) servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o:"}, {"WANT_TO_CONTINUE", "Deseja continuar?"}, {"DOMAIN", "Dom\u00c3\u00adnio"}, {"DOMAINS", "Dom\u00c3\u00adnios"}, {"SEARCH", "Pesquisar"}, {"NAME", "Nome"}, {"DOMAIN_TYPE", "Tipo de dom\u00c3\u00adnio"}, {"DOMAIN_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es de dom\u00c3\u00adnio"}, {"ALIAS", "Alias"}, {"DISPLAY_DOMAIN", "Exibir o dom\u00c3\u00adnio na tela de Login"}, {"SET_AS_DEFAULT", "Definir como Dom\u00c3\u00adnio padr\u00c3\u00a3o"}, {"HOST_NAME", "Nome do host"}, {"HOST_TYPE", "Tipo de host"}, {"EQUALS", "\u00c3\u2030 igual a"}, {"STARTS_WITH", "Come\u00c3\u00a7a por"}, {"ENDS_WITH", "Termina com"}, {"CONTAINS", "Cont\u00c3\u00a9m"}, {"LOCAL", "Local"}, {"REMOTE", "Remoto"}, {"DOMAINS", "Dom\u00c3\u00adnios"}, {"SSL_USED", "SSL usado"}, {"CONFIGURE", "Configurar"}, {"NO_DOMAIN_FOUND", "N\u00c3\u00a3o foram encontrados dom\u00c3\u00adnios"}, {"NO_AS_FOUND", "N\u00c3\u00a3o foram encontrados servidores de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"ADD_DOMAIN", "Adicionar dom\u00c3\u00adnio"}, {"DELETE_DOMAINS", "Excluir Dom\u00c3\u00adnio(s)/Servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"DELETE_ASS", "Excluir Servidor(es) de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"EQUALS", "\u00c3\u2030 igual a"}, {"STARTS_WITH", "Come\u00c3\u00a7a por"}, {"ENDS_WITH", "Termina com"}, {"CONTAINS", "Cont\u00c3\u00a9m"}, {"LOCAL", "Local"}, {"REMOTE", "Remoto"}, {"REMOTE_DOMAIN", "Dom\u00c3\u00adnio remoto"}, {"ADMIN_PASSWORD", "Senha de administrador"}, {"DEFAULT_ADMIN_USER", "Usu\u00c3\u00a1rio padr\u00c3\u00a3o administrador"}, {"AUTH_PORT", "Porta de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"ACCT_PORT", "Porta de contabiliza\u00c3\u00a7\u00c3\u00a3o"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "Nome distinto da base"}, {"SEARCH_FILTER", "Filtro de pesquisa"}, {"SHARED_SECRET", "Segredo compartilhado"}, {"USE_SSL", "Usar o SSL"}, {"SSL_PORT", "Porta SSL"}, {"ANONYMOUS_LOGIN", "Login an\u00c3\u00b4nimo"}, {"LOGIN_USER_NAME", "Nome distinto de login de usu\u00c3\u00a1rio"}, {"DNAME_MSG", "Nome distinto usado para autenticar o Servidor de diret\u00c3\u00b3rio ao realizar uma liga\u00c3\u00a7\u00c3\u00a3o. O valor para este campo deve ser especificado como um DN (Nome distinto). Exemplo: [uid=xyz,ou=People,dc=example,dc=com], [cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "Senha de login"}, {"PROTOCOL_VERSION", "Vers\u00c3\u00a3o do protocolo"}, {"LDAPV2", "LDAP Vers\u00c3\u00a3o 2"}, {"LDAPV3", "LDAP Vers\u00c3\u00a3o 3"}, {"SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es"}, {"USER_DIRECTORY_LDAP", "Esquema LDAP do Diret\u00c3\u00b3rio de usu\u00c3\u00a1rios"}, {"LDAP_SCHEMA", "Esquema LDAP"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "Definido pelo usu\u00c3\u00a1rio"}, {"USER_OBJECTS", "Objetos de usu\u00c3\u00a1rio"}, {"OBJ_CLASS", "ObjectClass"}, {"LOGIN_NAME", "Atributo de nome de login"}, {"FIRST_NAME", "Atributo de primeiro nome"}, {"LAST_NAME", "Atributo de sobrenome"}, {"EMAIL", "Atributo de e-mail"}, {"TELEPHONE", "Atributo de telefone"}, {"CON_TIMEOUT", "Tempo limite de conex\u00c3\u00a3o"}, {"SCHEMA", "Esquema"}, {"TEST_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es de teste"}, {"TEST_RADIUS_SETTINGS", "Testar configura\u00c3\u00a7\u00c3\u00b5es RADIUS"}, {"TEST_LDAP_MSG", "Para testar as configura\u00c3\u00a7\u00c3\u00b5es LDAP, insira um LDAP v\u00c3\u00a1lido"}, {"TEST_RADIUS_MSG", "Para testar as configura\u00c3\u00a7\u00c3\u00b5es RADIUS, insira um RADIUS v\u00c3\u00a1lido"}, {"TEST_MSG", "nome de login e senha e clique no bot\u00c3\u00a3o Teste. Note que esta op\u00c3\u00a7\u00c3\u00a3o aplicar\u00c3\u00a1 quaisquer altera\u00c3\u00a7\u00c3\u00b5es que tenham sido efetuadas."}, {"USER", "Usu\u00c3\u00a1rio"}, {"PWD", "Senha"}, {"RUN_CLIENT_TEST", "Executar teste de cliente"}, {"TEST_STATUS", "Estado de teste"}, {"RETURNED_USER_ATTRIBUTES", "Resultados retornados do teste"}, {"TEST", "Teste"}, {"OK", "OK"}, {"CANCEL", "Cancelar"}, {"CLOSE", "Fechar"}, {"CANT_DELETE_LOCALDOMAIN", "O LocalDomain n\u00c3\u00a3o pode ser editado/exclu\u00c3\u00addo"}, {"CANT_EDIT", "N\u00c3\u00a3o pode ser editado se houver apenas um dom\u00c3\u00adnio"}, {"EMPTY_NAME", "O Nome n\u00c3\u00a3o pode estar em branco"}, {"EMPTY_ADMIN_PWD", "A Senha de administrador n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_ADMIN_USER", "O Usu\u00c3\u00a1rio padr\u00c3\u00a3o administrador n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_AUTH_PORT", "A Porta de autentica\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_AUTH_PORT", "A Porta de autentica\u00c3\u00a7\u00c3\u00a3o deve ser um n\u00c3\u00bamero positivo"}, {"AUTH_PORT_RANGE", "A Porta de autentica\u00c3\u00a7\u00c3\u00a3o deve ter um valor entre 0 e 65535"}, {"EMPTY_ACCT_PORT", "A Porta de contabiliza\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_ACCT_PORT", "A Porta de contabiliza\u00c3\u00a7\u00c3\u00a3o deve ser um n\u00c3\u00bamero positivo"}, {"EMPTY_BD_NAME", "O Nome distinto da base n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_SEARCH_FILTER", "O Filtro de pesquisa n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_SHRED_SECRET", "O Segredo compartilhado n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_SSL_PORT", "A Porta de SSL n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_SSL_PORT", "A Porta de SSL deve ser um n\u00c3\u00bamero positivo"}, {"SSL_PORT_RANGE", "A Porta de SSL deve ter um valor entre 0 e 65535"}, {"EMPTY_LOGIN", "O Nome distinto de login de usu\u00c3\u00a1rio n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_LOGIN_PWD", "A Senha de login n\u00c3\u00a3o pode ficar em branco"}, {"EMPTY_CON_TIMEOUT", "O Tempo limite de conex\u00c3\u00a3o n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_CON_TIMEOUT", "O Tempo limite de conex\u00c3\u00a3o deve ser um n\u00c3\u00bamero positivo"}, {"RECOMMEND_SSL", "\u00c3\u2030 altamente recomendado usar SSL para comunica\u00c3\u00a7\u00c3\u00a3o segura com o servidor remoto."}, {"CON_NOT_SECURE", "A sua conex\u00c3\u00a3o n\u00c3\u00a3o estar\u00c3\u00a1 segura se n\u00c3\u00a3o usar SSL."}, {"DOMAIN_EXISTS", "J\u00c3\u00a1 existe um dom\u00c3\u00adnio com esse nome"}, {"ALIAS_EXISTS", "J\u00c3\u00a1 existe um alias com esse nome"}, {"DOMAIN_INVALID", "IFoi especificado um Nome de dom\u00c3\u00adnio inv\u00c3\u00a1lido."}, {"DOMAIN_VALID_CHARS", "O Nome pode conter apenas os seguintes caracteres:"}, {"DOMAIN_VALID_CHARS_LIST", "Alfanum\u00c3\u00a9ricos, .(Pontos), -(H\u00c3\u00adfens), _(Sublinhado) e Espa\u00c3\u00a7o."}, {"SPECIFY_VALID_NAME", "Especifique um nome com os caracteres permitidos."}, {"DIR_GRP_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es de grupo do Active Directory"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "Permitir somente membros do grupo AD"}, {"DIR_GROUPS", "Grupo(s) do Active Directory"}, {"GRP_NAME_INVALID", "Foi(ram) especificado(s) o(s) Nome(s) de grupo inv\u00c3\u00a1lido(s)."}, {"GRP_NAME_INVALID_LENGTH", "O(s) Nome(s) de grupo n\u00c3\u00a3o pode(m) conter mais de 200 caracteres."}, {"AUTH_SERVER_NAME", "Nome do servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"ADD_AUTH_SERVER", "Adicionar um servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"ADD_AUTHSERVER", "Adicionar servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"EDIT_AUTHSERVER", "Editar servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"DELETE_DOMAIN", "Excluir este Dom\u00c3\u00adnio"}, {"CANT_DELETE_LOCAL_AS", "O Servidor de autentica\u00c3\u00a7\u00c3\u00a3o local n\u00c3\u00a3o pode ser editado/exclu\u00c3\u00addo"}, {"CANT_DELETE_ADMIN_AS", "Este servidor de autentica\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ser exclu\u00c3\u00addo, uma vez que o administrador padr\u00c3\u00a3o para este dom\u00c3\u00adnio \u00c3\u00a9 autenticado contra este.\nMova o administrador padr\u00c3\u00a3o para outro servidor de autentica\u00c3\u00a7\u00c3\u00a3o e, em seguida, tente novamente."}, {"EDIT_AUTH_SERVER", "Editar este servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"VIEW_AUTH_SERVER", "Ver detalhes do servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"DELETE_AUTH_SERVER", "Excluir este servidor de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"AS_INVALID", "Foi especificado um Servidor de autentica\u00c3\u00a7\u00c3\u00a3o inv\u00c3\u00a1lido."}, {"AS_EXISTS", "J\u00c3\u00a1 existe um Servidor de autentica\u00c3\u00a7\u00c3\u00a3o com esse nome"}, {"EMPTY_AS_NAME", "O Nome do servidor de autentica\u00c3\u00a7\u00c3\u00a3o n\u00c3\u00a3o pode ficar em branco"}, {"AS_NAME_MSG", "O nome do servidor de autentica\u00c3\u00a7\u00c3\u00a3o que ser\u00c3\u00a1 criado. Este nome \u00c3\u00a9 \u00c3\u00batil para gerenciar os diferentes servidores de autentica\u00c3\u00a7\u00c3\u00a3o em um dom\u00c3\u00adnio."}, {"AS_DELETE_CONFIRMATION", "Voc\u00c3\u00aa optou por excluir o servidor de autentica\u00c3\u00a7\u00c3\u00a3o '"}, {"PRI_RADIUS", "Servidor RADIUS principal"}, {"AUTH_PROTOCOL", "Protocolo de autentica\u00c3\u00a7\u00c3\u00a3o"}, {"RADIUS_TIMEOUT", "Tempo limite de RADIUS (segundos)"}, {"MAX_RETRIES", "M\u00c3\u00a1ximo de repeti\u00c3\u00a7\u00c3\u00b5es"}, {"BACK_RADIUS", "Backup do servidor RADIUS"}, {"RADIUS_USER_GROUP", "Configura\u00c3\u00a7\u00c3\u00b5es do Grupo de usu\u00c3\u00a1rio RADIUS"}, {"ALLOW_GROUP_MEMBERS", "Permitir somente o Grupo RADIUS\tMembros"}, {"USE_SW_VSA", "Usar atributo espec\u00c3\u00adfico do Fornecedor da SonicWall no Servidor RADIUS"}, {"USE_FILTER_ID", "Usar atributo ID de filtro no servidor RADIUS"}, {"ALLOW_GROUPS", "Grupo(s) RADIUS permitido(s)"}, {"USER_GROUP", "Grupo de usu\u00c3\u00a1rio"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "O Tempo limite de RADIUS n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_RADIUS_TIMEOUT", "O Tempo limite de RADIUS deve ser um n\u00c3\u00bamero positivo"}, {"EMPTY_MAX_RETRIES", "O M\u00c3\u00a1ximo de entradas n\u00c3\u00a3o pode ficar em branco"}, {"POSITIVE_MAX_RETRIES", "O M\u00c3\u00a1ximo de entradas deve ser um n\u00c3\u00bamero positivo"}, {"TEST_USER_NAME", "O Nome do usu\u00c3\u00a1rio do teste n\u00c3\u00a3o pode ficar em branco."}, {"TEST_USER_PWD", "A Senha do usu\u00c3\u00a1rio do teste n\u00c3\u00a3o pode ficar em branco."}, {"DOMAIN_NAME_MSG", "O nome do dom\u00c3\u00adnio que ser\u00c3\u00a1 criado. Esse nome ficar\u00c3\u00a1 vis\u00c3\u00advel no menu suspenso dos Dom\u00c3\u00adnios na p\u00c3\u00a1gina de login."}, {"DOMAIN_TYPE_MSG", "O tipo do dom\u00c3\u00adnio, [Local] ou [Remoto]. Um dom\u00c3\u00adnio que necessita autenticar os usu\u00c3\u00a1rios a partir de uma plataforma externa, tal como um servidor LDAP ou AD, ter\u00c3\u00a1 de ser criado como um tipo de dom\u00c3\u00adnio [Remoto]. Um dom\u00c3\u00adnio de tipo [Local] ter\u00c3\u00a1 a conta de usu\u00c3\u00a1rio e os detalhes de autentica\u00c3\u00a7\u00c3\u00a3o presentes no banco de dados SGMS. Ao criar um dom\u00c3\u00adnio de tipo [Local], voc\u00c3\u00aa consegue dar suporte a v\u00c3\u00a1rios dom\u00c3\u00adnios dentro do SGMS sem a necessidade de interfaces de autentica\u00c3\u00a7\u00c3\u00a3o externa."}, {"ADMIN_PASSWORD_MSG", "Quando se cria um novo dom\u00c3\u00adnio de tipo [Local], \u00c3\u00a9 criado, por padr\u00c3\u00a3o, um usu\u00c3\u00a1rio [administrador] para o dom\u00c3\u00adnio. Voc\u00c3\u00aa precisa especificar a senha para o usu\u00c3\u00a1rio administrador."}, {"ADMIN_USERID_MSG", "Especifique um nome de usu\u00c3\u00a1rio que ser\u00c3\u00a1 o administrador para o dom\u00c3\u00adnio. Este nome de usu\u00c3\u00a1rio deve ser v\u00c3\u00a1lido no servidor de diret\u00c3\u00b3rio associado a este dom\u00c3\u00adnio. Se o nome [administrador] \u00c3\u00a9 especificado para este campo, ent\u00c3\u00a3o deve existir um usu\u00c3\u00a1rio com ID de usu\u00c3\u00a1rio [administrador] no diret\u00c3\u00b3rio associado e este deve ter privil\u00c3\u00a9gios administrativos. Exemplo: jdoe"}, {"HOST_NAME_MSG", "O nome do host ou endere\u00c3\u00a7o de IP do servidor de autentica\u00c3\u00a7\u00c3\u00a3o Remota. Exemplo: \t[meudc.exemplo.com], [X.X.X.X] (endere\u00c3\u00a7o IP), [empresa.com]. Se o servidor remoto for um servidor do Active Directory (AD) do Windows e voc\u00c3\u00aa tiver v\u00c3\u00a1rios dom\u00c3\u00adnios em que precisa autenticar usu\u00c3\u00a1rios da floresta AD, especifique, em seguida, o nome do Cat\u00c3\u00a1logo global ou o endere\u00c3\u00a7o IP da sua Floresta AD como o nome do host."}, {"AUTHENTICATION_PORT_MSG", "O n\u00c3\u00bamero da porta no servidor LDAP ou AD, no qual ele atende a pedidos de autentica\u00c3\u00a7\u00c3\u00a3o. O valor padr\u00c3\u00a3o \u00c3\u00a9 389, no caso de servidores LDAP/AD. Especificou-se o nome do Cat\u00c3\u00a1logo global ou o endere\u00c3\u00a7o IP da sua Floresta AD como o nome do host, ent\u00c3\u00a3o, deve tamb\u00c3\u00a9m especificar o n\u00c3\u00bamero de porta correspondente. O valor padr\u00c3\u00a3o \u00c3\u00a9 3268."}, {"HOST_TYPE_MSG", "Este valor indica o tipo do Servidor de autentica\u00c3\u00a7\u00c3\u00a3o remota se for um servidor LDAP, um Active Directory do Windows ou um servidor RADIUS."}, {"ALIAS_MSG", "Uma forma abreviada do nome de dom\u00c3\u00adnio que pode ser usada na tela de login do GMS para acesso quando os dom\u00c3\u00adnios n\u00c3\u00a3o s\u00c3\u00a3o exibidos. Exemplo: nome de usu\u00c3\u00a1rio\\\\do alias. O alias \u00c3\u00a9 preenchido automaticamente com o nome de dom\u00c3\u00adnio, se o comprimento do nome de dom\u00c3\u00adnio for inferior ou igual a 16 caracteres."}, {"PROTOCOL_VERSION_MSG", "Esta \u00c3\u00a9 a vers\u00c3\u00a3o do protocolo LDAP em que o servidor remoto LDAP/AD est\u00c3\u00a1 sendo executado."}, {"BASE_DN_MSG", "O Nome distinto da base \u00c3\u00a9 usado para identificar a entrada da raiz no diret\u00c3\u00b3rio a partir do qual ocorrer\u00c3\u00a3o as pesquisas iniciadas pelo SGMS. A base DN para um diret\u00c3\u00b3rio (por exemplo, exemplo.com) deve ser escrita segundo o formul\u00c3\u00a1rio: [dc=exemplo,dc=com]. \u00c3\u2030 sempre necess\u00c3\u00a1rio especificar o n\u00c3\u00b3 do n\u00c3\u00advel mais alto, como a base DN na \u00c3\u00a1rvore do diret\u00c3\u00b3rio a seguir, onde dever\u00c3\u00a3o estar presentes todos os usu\u00c3\u00a1rios que podem efetuar login no SGMS."}, {"USE_SSL_MSG", "Especifique se o SSL deve ser usado para efetuar liga\u00c3\u00a7\u00c3\u00a3o ao servidor remoto. Isto \u00c3\u00a9 fortemente recomend\u00c3\u00a1vel. Para isto, o certificado CA do \\servidor remoto ou o certificado da raiz do CA que assinou o certificado\\ do servidor devem estar presentes na keystore da SGMS como CAs confi\u00c3\u00a1veis."}, {"SSL_PORT_MSG", "O n\u00c3\u00bamero de porta no qual o servidor remoto est\u00c3\u00a1 escutando por solicita\u00c3\u00a7\u00c3\u00b5es de liga\u00c3\u00a7\u00c3\u00a3o SSL. O valor padr\u00c3\u00a3o \u00c3\u00a9 636, no caso de servidores LDAP/AD. Especificou-se o nome do Cat\u00c3\u00a1logo global ou o endere\u00c3\u00a7o IP da sua Forest AD (floresta) como o nome do host, de seguida deve tamb\u00c3\u00a9m especificar o n\u00c3\u00bamero de porta SSL correspondente. O valor padr\u00c3\u00a3o \u00c3\u00a9 3269."}, {"ANONYMOUS_LOGIN_MSG", "(N\u00c3\u00a3o recomendado). Especifique se o SGMS deve ser ligado ao servidor remoto de forma an\u00c3\u00b4nima. Para tal, o servidor remoto LDAP/AD deve permitir liga\u00c3\u00a7\u00c3\u00b5es an\u00c3\u00b4nimas. Apenas deve experimentar as liga\u00c3\u00a7\u00c3\u00b5es an\u00c3\u00b4nimas quando uma conta de servi\u00c3\u00a7o (pelo menos uma conta de usu\u00c3\u00a1rio v\u00c3\u00a1lida no diret\u00c3\u00b3rio) n\u00c3\u00a3o \u00c3\u00a9 conhecida antecipadamente. Isto \u00c3\u00a9 fortemente desencorajado."}, {"LOGIN_USER_DN_MSG", "Nome distinto usado para autenticar o Servidor de diret\u00c3\u00b3rio ao realizar uma liga\u00c3\u00a7\u00c3\u00a3o. O valor para este campo deve ser especificado como um DN (Nome distinto). Exemplo: [uid=xyz, ou=People, dc=example, dc=com] , [cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "Senha para o DN do login do usu\u00c3\u00a1rio."}, {"CONN_TIMEOUT_MSG", "Este valor (em milissegundos) indica a conex\u00c3\u00a3o do per\u00c3\u00adodo de tempo limite. Ap\u00c3\u00b3s este per\u00c3\u00adodo de tempo, a tentativa de conex\u00c3\u00a3o com o servidor remoto ser\u00c3\u00a1 abandonada se n\u00c3\u00a3o for realizada com \u00c3\u00aaxito."}, {"LDAP_SCHEMA_MSG", "Esquema LDAP do servidor LDAP/AD associado."}, {"OBJ_CLASS_MSG", "O nome de uma das classes de objeto padr\u00c3\u00a3o a que os usu\u00c3\u00a1rios pertencem."}, {"LOGIN_NAME_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP/AD que representa o ID do usu\u00c3\u00a1rio. Este \u00c3\u00a9 o atributo no servidor LDAP cujo valor ser\u00c3\u00a1 usado como o ID do usu\u00c3\u00a1rio na p\u00c3\u00a1gina de login SGMS. Exemplo: uid, sAMAccountName, etc."}, {"FIRST_NAME_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP que representa o Primeiro nome. Exemplo: givenName."}, {"LAST_NAME_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP que representa o \u00c3\u0161ltimo nome. Exemplo: sn."}, {"EMAIL_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP que representa o ID do e-mail. Exemplo: e-mail."}, {"TELEPHONE_ATTRIBUTE_MSG", "O nome do atributo no servidor LDAP que representa o n\u00c3\u00bamero de Telefone. Exemplo: telephoneNumber."}, {"TEST_PANE_MSG", "Aqui pode testar as configura\u00c3\u00a7\u00c3\u00b5es do Servidor de autentica\u00c3\u00a7\u00c3\u00a3o (LDAP/AD/RADIUS) inseridas no Painel configura\u00c3\u00a7\u00c3\u00b5es."}, {"TEST_PANE_USER_MSG", "Insira um nome de usu\u00c3\u00a1rio v\u00c3\u00a1lido que voc\u00c3\u00aa inseriria na p\u00c3\u00a1gina de login SGMS para efetuar login no GMS. Este nome de usu\u00c3\u00a1rio deve ser v\u00c3\u00a1lido e deve estar no Diret\u00c3\u00b3rio associado para este dom\u00c3\u00adnio. Al\u00c3\u00a9m disso, insira a senha para este nome de usu\u00c3\u00a1rio no diret\u00c3\u00b3rio."}, {"EMPTY_DIR_GROUP", "O(s) nome(s) do grupo de diret\u00c3\u00b3rio n\u00c3\u00a3o pode(m) estar vazio(s)."}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "Quando esta op\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 selecionada permite apenas aos usu\u00c3\u00a1rios membros dos Grupos do Active Directory especificados a possibilidade de efetuar login no GMS. Com esta op\u00c3\u00a7\u00c3\u00a3o, tamb\u00c3\u00a9m \u00c3\u00a9 necess\u00c3\u00a1rio selecionar o Tipo de host como [Active Directory] no Painel configura\u00c3\u00a7\u00c3\u00b5es."}, {"DIR_GROUPS_MSG", "Especifica os nomes dos Grupos AD, membros que devem ter permiss\u00c3\u00a3o para fazer login no GMS. Podem ser especificados v\u00c3\u00a1rios Grupos AD sendo delimitados por ponto e v\u00c3\u00adrgula. Exemplo: [Usu\u00c3\u00a1riosGMS], [GrupoAD1;GrupoAD2;Usu\u00c3\u00a1rios GMS;Grupo4]"}, {"RADIUS_HOST_NAME_MSG", "O nome do host ou o endere\u00c3\u00a7o IP do servidor de autentica\u00c3\u00a7\u00c3\u00a3o RADIUS. Exemplo: [meuradius.exemplo.com], [X.X.X.X] (endere\u00c3\u00a7o IP), [empresa.com]."}, {"RADIUS_AUTH_PORT_MSG", "O n\u00c3\u00bamero de porta no servidor RADIUS no qual s\u00c3\u00a3o escutadas as solicita\u00c3\u00a7\u00c3\u00b5es de autentica\u00c3\u00a7\u00c3\u00a3o. Valor padr\u00c3\u00a3o 1812."}, {"RADIUS_SHARED_SECRET_MSG", "O segredo compartilhado entre o GMS e o servidor RADIUS. ptEste \u00c3\u00a9 um valor de cadeia conhecido apenas pelo servidor RADIUS e o cliente RADIUS."}, {"RADIUS_AUTH_PROTOCOL_MSG", "O Protocolo de autentica\u00c3\u00a7\u00c3\u00a3o RADIUS para ser usado para autentica\u00c3\u00a7\u00c3\u00a3o."}, {"RADIUS_TIMEOUT_MSG", "Este valor (em segundos) indica a conex\u00c3\u00a3o do per\u00c3\u00adodo de tempo limite. Ap\u00c3\u00b3s este per\u00c3\u00adodo de tempo, a tentativa de conex\u00c3\u00a3o com o servidor RADIUS ser\u00c3\u00a1 abandonada se n\u00c3\u00a3o for realizada com \u00c3\u00aaxito."}, {"RADIUS_MAX_RETRIES_MSG", "Este valor indica o n\u00c3\u00bamero de vezes que a tentativa de autentica\u00c3\u00a7\u00c3\u00a3o deve ser feita atrav\u00c3\u00a9s do servidor RADIUS. Ap\u00c3\u00b3s o n\u00c3\u00bamero de tentativas especificado, a tentativa de conex\u00c3\u00a3o com o servidor remoto ser\u00c3\u00a1 abandonada se n\u00c3\u00a3o for realizada com \u00c3\u00aaxito."}, {"RADIUS_ONLY_GROUP_MSG", "Quando esta op\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 selecionada permite apenas aos usu\u00c3\u00a1rios membros dos grupos de usu\u00c3\u00a1rios RADIUS especificados a possibilidade de efetuar login no GMS."}, {"RADIUS_USE_FILTER_MSG", "Quando esta op\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 selecionada permite que o valor do atributo RADIUS \\'ID de filtro\\' seja usado como o identificador do grupo de usu\u00c3\u00a1rios RADIUS. Para usar esta op\u00c3\u00a7\u00c3\u00a3o, o servidor RADIUS deve estar configurado adequadamente para retornar este par de atribui\u00c3\u00a7\u00c3\u00a3o-valor com cada ID do usu\u00c3\u00a1rio que esteja autenticado no servidor RADIUS para login no GMS."}, {"RADIUS_USE_SW_MSG", "Quando esta op\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 selecionada, esta usa o valor do(s) atributo(s) especifico(s) do fornecedor da SonicWall [SonicWall-Usu\u00c3\u00a1rio-Grupo e SonicWall-Usu\u00c3\u00a1rio-Grupos] como o identificador do grupo do usu\u00c3\u00a1rio RADIUS. Para usar esta op\u00c3\u00a7\u00c3\u00a3o, o servidor RADIUS deve estar configurado adequadamente para retornar o par de atribui\u00c3\u00a7\u00c3\u00a3o-valor espec\u00c3\u00adfico do fornecedor da SonicWall com cada ID do usu\u00c3\u00a1rio que esteja autenticado no servidor RADIUS para efetuar login no GMS."}, {"RADIUS_ALLOW_GROUPS_MSG", "Especifica os nomes dos grupos dos usu\u00c3\u00a1rios RADIUS, membros que devem ter permiss\u00c3\u00a3o para fazer login no GMS. Exemplo [Usu\u00c3\u00a1riosGMS]. Podem ser especificados v\u00c3\u00a1rios grupos de usu\u00c3\u00a1rios RADIUS sob a forma de uma cadeia separada por ponto e v\u00c3\u00adrgula. Exemplo: [RadGrupo1;Rad grupo2;Usu\u00c3\u00a1rios GMS;Grupo4]."}, {"ADD_AUTH_SERVER_MSG", "Se verificado permite adicionar uma nova configura\u00c3\u00a7\u00c3\u00a3o do Servidor de autentica\u00c3\u00a7\u00c3\u00a3o durante a adi\u00c3\u00a7\u00c3\u00a3o de dom\u00c3\u00adnio."}, {"PAGE_LABEL", "P\u00c3\u00a1gina"}, {"MANAGE_PAGE", "Gerenciar p\u00c3\u00a1gina"}, {"ADD_COMPONENT", "Adicionar componente"}, {"PAGE_MANAGER", "Gerenciador de p\u00c3\u00a1gina"}, {"ADD_NEW_PAGE", "Adicionar nova p\u00c3\u00a1gina"}, {"DEFAULT_PAGE", "P\u00c3\u00a1gina padr\u00c3\u00a3o"}, {"PAGE_DETAILS", "Detalhes de p\u00c3\u00a1gina"}, {"PAGE_TITLE", "T\u00c3\u00adtulo da p\u00c3\u00a1gina"}, {"COMPONENT_TITLE", "T\u00c3\u00adtulo de componente"}, {"PAGE_LAYOUT", "Layout de p\u00c3\u00a1gina"}, {"ONE_COLUMN_LAYOUT", "1 Coluna(100)"}, {"TWO_COLUMN_LAYOUT", "2 Coluna(50:50)"}, {"THREE_COLUMN_LAYOUT", "3 Coluna(30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 Coluna(25:25:25:25)"}, {"ADD", "Adicionar"}, {"EDIT", "Editar"}, {"DELETE", "Excluir"}, {"ADD_COMPONENT_MANAGER", "Adicionar gerenciador de componente"}, {"TYPE", "Tipo"}, {"RSS_FEED_DETAILS", "Detalhes de feed de RSS"}, {"RSS_FEEDS", "Feeds RSS"}, {"TITLE", "T\u00c3\u00adtulo"}, {"ITEMS", "Itens para mostrar (m\u00c3\u00a1x.)"}, {"REFRESH_INTERVAL", "Intervalo de atualiza\u00c3\u00a7\u00c3\u00a3o"}, {"REFRESH_INTERVAL_MINUTE", "em minutos"}, {"EVENT_ALERT_DETAILS", "Detalhes do alerta de eventos"}, {"ALERT_TYPES", "Tipos de alerta"}, {"REFRESH_INTERVAL_HOUR", "em horas"}, {"ALERT_SHOW_TIME_HOURS", "Mostrar alertas acionados nos \u00c3\u00baltimos"}, {"APPLICATION_WIDGET_DETAILS", "Detalhes do aplicativo widget"}, {"WIDGETS", "Widgets"}, {"RSS_FEED_TYPE", "Feed RSS"}, {"EVENT_ALERT_TYPE", "Alerta de eventos"}, {"APPLICATION_WIDGET_TYPE", "Aplicativo widget"}, {"CUSTOM_RSS_FEED", "Feed RSS personalizado"}, {"CUSTOM_RSS_URL", "URL de RSS personalizado"}, {"END_EDIT", "Fechar edi\u00c3\u00a7\u00c3\u00a3o"}, {"RSS_URL", "URL RSS"}, {"SAVE", "Salvar"}, {"DEFAULT_PAGE", "P\u00c3\u00a1gina padr\u00c3\u00a3o"}, {"SAVE_LAYOUT_FAIL_MSG", "Falha ao salvar layout"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "Falha ao salvar estado da barra de controle"}, {"ADD_COMPONENT_FAIL_MSG", "Falha ao adicionar componente"}, {"DELETE_COMPONENT_FAIL_MSG", "Falha ao excluir componente"}, {"PAGE_ACTION_FAIL_MSG", "Falha na a\u00c3\u00a7\u00c3\u00a3o de p\u00c3\u00a1gina"}, {"RSS_FEED_FAIL_MSG", "Falha ao obter feed RSS."}, {"EVENT_ALERT_FAIL_MSG", "Falha ao obter alerta GEM."}, {"APPLICATION_WIDGET_FAIL_MSG", "Falha ao obter Widget do aplicativo."}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "Sem alertas configurados para o destino: painel."}, {"NO_ALERT_FOUND_MSG", "Sem alertas para exibir."}, {"CHANGE_DEFAULT_PAGE_MSG", "Ao selecionar esta p\u00c3\u00a1gina como padr\u00c3\u00a3o alterar\u00c3\u00a1 quaisquer configura\u00c3\u00a7\u00c3\u00b5es de p\u00c3\u00a1gina padr\u00c3\u00a3o definidas anteriormente. Tem certeza de que deseja continuar?"}, {"DELETE_DEFAULT_PAGE_MSG", "N\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel excluir a p\u00c3\u00a1gina padr\u00c3\u00a3o. Selecione qualquer outra p\u00c3\u00a1gina para ser a p\u00c3\u00a1gina padr\u00c3\u00a3o e, de seguida, exclua esta p\u00c3\u00a1gina."}, {"DELETE_PAGE_AND_COMPONENT_MSG", "Excluir uma p\u00c3\u00a1gina, exclui, por sua vez, todos os componentes em essa p\u00c3\u00a1gina. Tem certeza de que deseja excluir esta p\u00c3\u00a1gina?"}, {"VALID_URL_MSG", "Insira um URL no formato: http://www.seudominio.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "Tem certeza de que deseja excluir este componente?"}, {"NO_COMPONENT_MSG", "N\u00c3\u00a3o h\u00c3\u00a1 componentes adicionados atualmente na p\u00c3\u00a1gina."}, {"LOAD_DATA_MSG", "Carregando dados..."}, {"COMPONENT_EXISTS_MSG", "O componente j\u00c3\u00a1 existe. Detalhes dos componentes existentes: "}, {"REFRESH_INTERVAL_RANGE", "Intervalo de atualiza\u00c3\u00a7\u00c3\u00a3o est\u00c3\u00a1 fora do intervalo. Insira um valor v\u00c3\u00a1lido."}, {"ITEMS_RANGE", "O n\u00c3\u00bamero de itens est\u00c3\u00a1 fora de alcance. Insira um n\u00c3\u00bamero v\u00c3\u00a1lido."}, {"ALERT_SHOWTIME_RANGE", "Mostrar hora para Alertas est\u00c3\u00a1 fora do alcance. Insira um valor v\u00c3\u00a1lido."}, {"NO_COMPONENT_SELECTED_ERR", ":Selecione um antes de adicionar o componente \u00c3\u00a0 p\u00c3\u00a1gina."}, {"ADDCOMPONENT_ERR_QUOTES", "O T\u00c3\u00adtulo do componente n\u00c3\u00a3o pode conter os seguintes caracteres: aspas simples, aspas duplas, dois-pontos, porcentagem, cerquilha, ponto de interroga\u00c3\u00a7\u00c3\u00a3o e barras verticais."}, {"ADDPAGE_ERR_QUOTES", "O T\u00c3\u00adtulo da p\u00c3\u00a1gina n\u00c3\u00a3o pode conter os seguintes caracteres: aspas simples, aspas duplas, dois-pontos, porcentagem, cerquilha, ponto de interroga\u00c3\u00a7\u00c3\u00a3o e barras verticais."}, {"TIME_PERIOD", "Per\u00c3\u00adodo de tempo"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "Excluir uma p\u00c3\u00a1gina, exclui, por sua vez, todos os widgets em essa p\u00c3\u00a1gina. Tem certeza de que deseja excluir esta p\u00c3\u00a1gina?"}, {"ADDWIDGET_ERR_QUOTES", "O T\u00c3\u00adtulo do widget n\u00c3\u00a3o pode conter os seguintes caracteres: aspas simples, aspas duplas, dois-pontos, porcentagem, cerquilha, ponto de interroga\u00c3\u00a7\u00c3\u00a3o e barras verticais."}, {"TIME_PERIOD", "Per\u00c3\u00adodo de tempo"}, {"COPY_WIDGET_VALIDATION_MSG", "Selecione uma p\u00c3\u00a1gina a ser copiada..."}, {"COPY_WIDGET_HEADER", "Copiar o widget"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "Nenhuma palavra-chave na cadeia de caracteres de pesquisa \u00c3\u00a9 aplic\u00c3\u00a1vel a este widget"}, {"IGNORED_INVALID_SEARCH_FILTER", "Filtro de pesquisa inv\u00c3\u00a1lido ignorado."}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "Uma ou mais inst\u00c3\u00a2ncias GMSVP n\u00c3\u00a3o tem Localiza\u00c3\u00a7\u00c3\u00a3o geogr\u00c3\u00a1fica."}, {"NDA_NG_REPORTING_WIDGET_MSG", "Nenhum registro correspondente foi encontrado."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "Mensagem de alerta"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u00c3\u0161ltima hora reportada"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "Tipo de alerta"}, {"LOGS_WIDGET_COL_MESSAGE", "Mensagem"}, {"LOGS_WIDGET_COL_DATE", "Data"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "Detalhes do usu\u00c3\u00a1rio"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "Hora do \u00c3\u00baltimo acesso"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "Hor\u00c3\u00a1rio programado (Local)"}, {"DSB_CONFIRM_DELETE_WIDGET", "Esta opera\u00c3\u00a7\u00c3\u00a3o excluir\u00c3\u00a1 o widget, continuar?"}, {"DSB_SEARCH_DIALOG_MESG", "Os widgets correspondem ao resultado para "}, {"DSB_SEARCH_DIALOG_HEADER", "Resultados de pesquisa adicionais"}, {"DSB_CLEARHISTORY_MESG", "Limpar hist\u00c3\u00b3rico de pesquisa?"}, {"DSB_CLEARHISTORY_HDR", "hist\u00c3\u00b3rico de pesquisa"}, {"DSB_ADDNEW_WIDGET_LBL", "Adicionar novo widget: "}, {"DSB_GENSTTINGS_HDR", "Configura\u00c3\u00a7\u00c3\u00b5es gerais "}, {"DSB_ASSOCPROD_HDR", "Produtos associados "}, {"DSB_SUBALERTS_HDR", "Subalertas inclu\u00c3\u00addos "}, {"DSB_WIDGETTITLE_LBL", "T\u00c3\u00adtulo: "}, {"DSB_NOFITEMS_LBL", "N\u00c3\u00bamero de itens: "}, {"DSB_REFINT_LBL", "Intervalo de atualiza\u00c3\u00a7\u00c3\u00a3o: "}, {"DSB_ALERTSTRIGGERED_LBL", "Mostrar alertas acionados nos \u00c3\u00baltimos: "}, {"DSB_NEWSUBALERTS_LBL", "Subalertas novos: "}, {"DSB_CUSTRSSURL_LBL", "URL de RSS personalizado: "}, {"DSB_WRAPTEXT_LBL", "Quebrar texto: "}, {"DSB_ADDPAGE_HDR", "Adicionar nova p\u00c3\u00a1gina "}, {"DSB_ADDPAGE_LBL", "T\u00c3\u00adtulo da p\u00c3\u00a1gina: "}, {"DSB_MAPLOCATIONDLG_HDR", "Adicionar/Editar localiza\u00c3\u00a7\u00c3\u00a3o"}, {"DSB_ADDRESS_LBL", "Endere\u00c3\u00a7o: "}, {"DSB_GEOLOCATION_LBL", "Localiza\u00c3\u00a7\u00c3\u00a3o geogr\u00c3\u00a1fica: "}, {"DSB_DELPAGE_LBL", "P\u00c3\u00a1gina gerada pelo sistema, n\u00c3\u00a3o pode ser exclu\u00c3\u00adda."}, {"DSB_DELPAGE_HDR", "Excluir p\u00c3\u00a1gina?"}, {"DSB_DELPAGECONFIRM_MSG", "Deseja excluir a p\u00c3\u00a1gina?"}, {"CZ_YES", "Sim"}, {"CZ_CERT_ISSUER", "Emissor de certificado"}, {"CZ_SUB_DN", "Nome distinto do assunto"}, {"CZ_CERT_SN", "N\u00c3\u00bamero de s\u00c3\u00a9rie do certificado"}, {"CZ_VALID_FROM", "V\u00c3\u00a1lido de"}, {"CZ_EXPIRES_ON", "Expira em"}, {"CZ_STATUS", "Estado"}, {"CZ_REQ_GEN", "Solicita\u00c3\u00a7\u00c3\u00a3o gerada"}, {"CZ_SUB_KEY_ID", "Identificador de chave de assunto"}, {"CZ_CRL_STATUS", "Estado da CRL"}, {"CZ_CRL_EXPIRES_ON", "CRL expira em"}, {"CZ_CRL_REQUIRED", "CRL obrigat\u00c3\u00b3ria"}, {"CZ_CRL_AUTO_URL", "URL de atualiza\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica da CRL"}, {"CZ_HEADER", "Certificados e Solicita\u00c3\u00a7\u00c3\u00b5es de certificados"}, {"CZ_NAME", "Nome"}, {"CZ_TYPE", "Tipo"}, {"CZ_VALIDATED", "Validado"}, {"CZ_EXPIRES", "Expira"}, {"CZ_DETAILS", "Detalhes"}, {"CZ_CONFIGURE", "Configurar"}, {"CZ_DELETE_CERT", "Excluir este certificado"}, {"CZ_CANT_DELETE_CERT", "Este \u00c3\u00a9 um certificado interno e n\u00c3\u00a3o \u00c3\u00a9 poss\u00c3\u00advel exclu\u00c3\u00ad-lo"}, {"CZ_EMAIL_CERT", "Enviar este certificado por e-mail"}, {"CZ_CANT_EMAIL_CERT", "Somente certificados locais importados e solicita\u00c3\u00a7\u00c3\u00b5es de assinatura podem ser enviados por e-mail"}, {"CZ_IMPORT_CERT_CRL", "Importar lista de revoga\u00c3\u00a7\u00c3\u00a3o de certificados"}, {"CZ_UPLOAD_SIGNED_CERT", "Upload de certificado assinado"}, {"CZ_CERT_SEARCH", "Pesquisa de certificados"}, {"CZ_CERT_SELECTED", "Voc\u00c3\u00aa optou por excluir o certificado"}, {"CZ_SURE", "Tem certeza de que deseja continuar"}, {"CZ_CERTS_SELECTED", "Selecionou o(s) seguinte(s) certificado(s) para excluir."}, {"CZ_PLZ_SELECT", "Selecione certificado(s) a ser(em) exclu\u00c3\u00addo(s)."}, {"CZ_VIEW_STYLE", "Estilo de visualiza\u00c3\u00a7\u00c3\u00a3o de certificados"}, {"CZ_ALL_CERTS", "Todos os certificados"}, {"CZ_IMPORT_CERTS", "Solicita\u00c3\u00a7\u00c3\u00b5es e certificados importados"}, {"CZ_BUILTIN_CERTS", "Certificados integrados"}, {"CZ_INCLUDE_EXPIRED_CERTS", "Incluir certificados integrados expirados"}, {"CZ_IMPORT", "Importar..."}, {"CZ_NEW_REQ", "Nova solicita\u00c3\u00a7\u00c3\u00a3o de assinatura..."}, {"CZ_DEL_CERTS", "Excluir certificado(s)"}, {"CZ_REQUIRE_CERT", "A importa\u00c3\u00a7\u00c3\u00a3o requer um Nome de certificado."}, {"CZ_IMPORT_REQUIRE_FILE", "A importa\u00c3\u00a7\u00c3\u00a3o requer um Arquivo de certificado."}, {"CZ_NO_DOT", "Nome do certificado inv\u00c3\u00a1lido. N\u00c3\u00a3o \u00c3\u00a9 permitido ter um '.'."}, {"CZ_IMPORT_REQUIRE_CMP", "A importa\u00c3\u00a7\u00c3\u00a3o requer uma Senha de gerenciamento de certificado."}, {"CZ_IMPORT_CERT", "Importar certificado"}, {"CZ_IMPORT_LOCAL", "Importe um certificado de usu\u00c3\u00a1rio final local com chave privada de um arquivo codificado PKCS n\u00c2\u00ba 12 (.p12 ou .pfx)"}, {"CZ_IMPORT_CA", "Importar um certificado de CA de um arquivo codificado PKCS n\u00c2\u00ba 7 (.p7b), PEM (.pem) ou DER (.der ou .cer)"}, {"CZ_CERT_NAME", "Nome do certificado"}, {"CZ_CMP", "Senha de gerenciamento de certificado"}, {"CZ_SEL_FILE", "Selecione um arquivo a ser importado"}, {"CZ_SPECIFY_FILE", "Especifique um arquivo a ser importado"}, {"CZ_UPLOAD_CERT", "Upload de certificado"}, {"CZ_UPLOAD_SIGN_CERT", "Upload de certificado assinado para solicita\u00c3\u00a7\u00c3\u00a3o de assinatura"}, {"CZ_SEL_UPLOAD_FILE", "Selecione um arquivo para fazer upload"}, {"CZ_FILE_FORMAT", "O arquivo deve ser codificado por PEM (.pem) ou DER (.der ou .cer)"}, {"CZ_EXPORT_CERT", "Exportar certificado"}, {"CZ_EXPORT_CERT_REQ", "Exportar solicita\u00c3\u00a7\u00c3\u00a3o de certificado"}, {"CZ_CERT_EMAIL_CONTENT", " Uma solicita\u00c3\u00a7\u00c3\u00a3o de certificado PKCS n\u00c2\u00ba 10 foi gerada e est\u00c3\u00a1 dispon\u00c3\u00advel para ser enviada por e-mail. Salve este arquivo no disco local para envio a uma autoridade de registro ou certifica\u00c3\u00a7\u00c3\u00a3o. O arquivo ser\u00c3\u00a1 salvo no formato de solicita\u00c3\u00a7\u00c3\u00a3o de certificado PEM, por padr\u00c3\u00a3o, como"}, {"CZ_CHANGE_FILE_NAME", "(o nome do arquivo pode ser alterado no download conforme necess\u00c3\u00a1rio)."}, {"CZ_SPECIFY_URL", "Especifique um URL da CRL."}, {"CZ_SPECIFY_CRL_FILE", "Especifique um arquivo CRL a ser importado"}, {"CZ_INVALID_FILE", "O formato do arquivo selecionado n\u00c3\u00a3o \u00c3\u00a9 v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_LC", "Especifique um arquivo de certificado local v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_CA", "Especifique um arquivo de certificado CA v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_CRL", "Especifique um arquivo CRL v\u00c3\u00a1lido."}, {"CZ_SPECIFY_VALID_SIGNED", "Especifique um arquivo de certificado com assinatura v\u00c3\u00a1lida."}, {"CZ_IMPORT_CRL", "Importar CRL"}, {"CZ_IMPORT_CRL_FULL", "Importar lista de revoga\u00c3\u00a7\u00c3\u00a3o de certificados"}, {"CZ_IMPORT_CRL_FILE", "Importar CRL diretamente de um arquivo codificado PEM (.pem) ou DER (.der ou .crl)"}, {"CZ_SEL_CRL_FILE", "Selecione um arquivo CRL a ser importado"}, {"CZ_AUTO_IMPORT_CRL", "Importar CRL automaticamente e periodicamente via HTTP"}, {"CZ_CRL_LOC", "Inserir local da CRL (URL)"}, {"CZ_INVALIDATE_CERTS", "Invalidar certificados e associa\u00c3\u00a7\u00c3\u00b5es de seguran\u00c3\u00a7a se houver falha na importa\u00c3\u00a7\u00c3\u00a3o ou no processamento da CRL"}, {"CZ_CMP_REQUIRE", "A senha de gerenciamento de certificado \u00c3\u00a9 necess\u00c3\u00a1ria para exportar um certificado"}, {"CZ_CERT_NAME_REQUIRE", "A gera\u00c3\u00a7\u00c3\u00a3o de PKCS10 requer um nome de certificado."}, {"CZ_CERT_NAME_IN_USE", "Nome de certificado j\u00c3\u00a1 em uso. Selecione outro."}, {"CZ_SUB_DN_REQUIRE", "A gera\u00c3\u00a7\u00c3\u00a3o PKCS10 requer pelo menos um atributo nome do assunto."}, {"CZ_CN_TWO_CHARS", "Nome do pa\u00c3\u00ads deve ter dois caracteres"}, {"CZ_DOMAIN_INVALID", "Nome de dom\u00c3\u00adnio inv\u00c3\u00a1lido em nome alternativo do assunto."}, {"CZ_IP_INVALID", "Endere\u00c3\u00a7o IP inv\u00c3\u00a1lido em nome alternativo do assunto."}, {"CZ_EMAIL_INVALID", "Endere\u00c3\u00a7o de e-mail inv\u00c3\u00a1lido em nome alternativo do assunto."}, {"CZ_CERT_REQ", "Solicita\u00c3\u00a7\u00c3\u00a3o de assinatura de certificado"}, {"CZ_GEN_CERT_REQ", "Gerar solicita\u00c3\u00a7\u00c3\u00a3o de assinatura de certificado"}, {"CZ_CERT_ALIAS", "Alias de certificado"}, {"CZ_COUNTRY", "Pa\u00c3\u00ads"}, {"CZ_STATE", "Estado"}, {"CZ_LOC", "Distrito ou munic\u00c3\u00adpio"}, {"CZ_COMPANY", "Empresa ou organiza\u00c3\u00a7\u00c3\u00a3o"}, {"CZ_LOC_CITY", "Distrito, cidade ou munic\u00c3\u00adpio"}, {"CZ_DEPT", "Departamento"}, {"CZ_GROUP", "Grupo"}, {"CZ_TEAM", "Equipe"}, {"CZ_CNAME", "Nome comum"}, {"CZ_SN", "N\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"CZ_EMAIL", "Endere\u00c3\u00a7o de e-mail"}, {"CZ_SUB_ALT_NAME", "Nome alternativo do assunto (opcional)"}, {"CZ_DOMAIN_NAME", "Nome do dom\u00c3\u00adnio"}, {"CZ_IPV4", "Endere\u00c3\u00a7o IPv4"}, {"CZ_SUB_KEY_TYPE", "Tipo de chave do assunto"}, {"CZ_SIG_ALGORITHM", "Algoritmo de assinatura"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "Tamanho da chave do assunto"}, {"CZ_NO_CERTS", "N\u00c3\u00a3o foram encontrados certificados"}, {"IMPORT", "Importar"}, {"CZ_SCEP_CONFIG", "Configura\u00c3\u00a7\u00c3\u00a3o SCEP"}, {"CZ_CSR_LIST", "Lista CSR"}, {"CZ_NO_CSR", "Sem CSR"}, {"CZ_CHALLENGE_PWD", "Senha de desafio (opcional)"}, {"CZ_CA_URL", "O URL de CA"}, {"CZ_REQ_COUNT", "Contagem de solicita\u00c3\u00a7\u00c3\u00b5es"}, {"CZ_POLL_INTERVAL", "Intervalo(s) de pesquisa"}, {"CZ_POLL_TIME", "Tempo(s) de pesquisa m\u00c3\u00a1ximo(s)"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "O URL de CA n\u00c3\u00a3o pode ficar vazio"}, {"CZ_GEN_CSR", "N\u00c3\u00a3o existe nenhum CSR dispon\u00c3\u00advel, gere pelo menos um"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "Todas as configura\u00c3\u00a7\u00c3\u00b5es do filtro selecionado ser\u00c3\u00a3o enviadas para todas as unidades no n\u00c3\u00b3 do grupo selecionado."}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "Todas as configura\u00c3\u00a7\u00c3\u00b5es do filtro selecionado ser\u00c3\u00a3o herdadas do n\u00c3\u00b3 principal da \\unidade selecionada."}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "Todas as configura\u00c3\u00a7\u00c3\u00b5es do filtro selecionado ser\u00c3\u00a3o enviadas do n\u00c3\u00b3 do grupo selecionado para o n\u00c3\u00b3 principal.<br>Para aplicar as configura\u00c3\u00a7\u00c3\u00b5es selecionadas para todas as unidades no n\u00c3\u00b3 principal (excluindo o n\u00c3\u00b3 selecionado e os seus filhos) realize a sele\u00c3\u00a7\u00c3\u00a3o adequada na tela de Visualiza\u00c3\u00a7\u00c3\u00a3o."}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "Todas as configura\u00c3\u00a7\u00c3\u00b5es do filtro selecionado ser\u00c3\u00a3o enviadas da unidade selecionada para o n\u00c3\u00b3 principal.<br>Para aplicar as configura\u00c3\u00a7\u00c3\u00b5es selecionadas para todas as unidades no n\u00c3\u00b3 principal (excluindo a unidade selecionada) realize a sele\u00c3\u00a7\u00c3\u00a3o adequada na tela de Visualiza\u00c3\u00a7\u00c3\u00a3o."}, {"WS_URI_HEADER", "URI p\u00c3\u00bablico"}, {"WS_URI_INSTRUCTIONS", "Insira o nome do servidor p\u00c3\u00bablico para esta implanta\u00c3\u00a7\u00c3\u00a3o.  Este nome ser\u00c3\u00a1 usado para acessar Servi\u00c3\u00a7os da Web neste servidor e ser\u00c3\u00a1 inclu\u00c3\u00addo em v\u00c3\u00adnculos cruzados incorporados."}, {"WS_URI_NOTE", "Nota: a porta do servidor p\u00c3\u00bablico \u00c3\u00a9 usada para acessar Servi\u00c3\u00a7os GMS da Web do dom\u00c3\u00adnio p\u00c3\u00bablico. Para modificar a porta na qual a GMS executa Servi\u00c3\u00a7os Web, navegue at\u00c3\u00a9 Interface do sistema/Implanta\u00c3\u00a7\u00c3\u00a3o/Configura\u00c3\u00a7\u00c3\u00b5es"}, {"WS_DEPLOYMENT_HEADER", "implanta\u00c3\u00a7\u00c3\u00a3o GMS"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "Selecione a implanta\u00c3\u00a7\u00c3\u00a3o para configurar servi\u00c3\u00a7os Web para."}, {"WS_DEPLOYMENT_ERROR", "N\u00c3\u00a3o existem implanta\u00c3\u00a7\u00c3\u00b5es licenciadas da SonicWall atualmente ativas"}, {"WS_STATUS_HEADER", "Servi\u00c3\u00a7os da Web"}, {"WS_SERVICES_ERROR", "N\u00c3\u00a3o foram encontrados servi\u00c3\u00a7os da Web para esta implanta\u00c3\u00a7\u00c3\u00a3o"}, {"WS_DEPLOYMENTS_EMPTY", "N\u00c3\u00a3o foi poss\u00c3\u00advel obter a lista de implanta\u00c3\u00a7\u00c3\u00b5es.  ptRegistre esta inst\u00c3\u00a2ncia de GMSVP."}, {"WS_DISTRIBUTED_HEADER", "Inst\u00c3\u00a2ncias distribu\u00c3\u00addas"}, {"WS_DISTRIBUTED_EMPTY", "N\u00c3\u00a3o existem inst\u00c3\u00a2ncias distribu\u00c3\u00addas configuradas para este servidor"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "Aplicar modelo: "}, {"HM_APPLY_RECORDING_TASK_DESC", "Aplicar registro: "}, {"LM_CONFIRM_DELETE_RULE", "Tem certeza de que deseja excluir a(s) regra(s) selecionada(s)?"}, {"LM_SUCCESS_DELETE_RULE", "A\u00c3\u00a7\u00c3\u00a3o Excluir regra efetuada com \u00c3\u00aaxito."}, {"LM_FAILURE_DELETE_RULE", "Falha ao excluir a(s) regra(s) selecionada(s) com \u00c3\u00aaxito."}, {"LM_SUCCESS_UPDATE_RULE", "A\u00c3\u00a7\u00c3\u00a3o Atualizar regra efetuada com \u00c3\u00aaxito."}, {"LM_FAILURE_UPDATE_RULE", "Falha ao atualizar a regra com \u00c3\u00aaxito."}, {"LM_DUPLICATE_STMT_NAME", "J\u00c3\u00a1 existe uma Regra com o nome especificado.\\nEspecifique um nome exclusivo para a regra"}, {"LM_RULE_DESTINATION_EMPTY", "O Destino est\u00c3\u00a1 em branco.\\nEspecifique uma entrada v\u00c3\u00a1lida."}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "O Destino n\u00c3\u00a3o pode exceder os 256 caracteres.\\nEspecifique uma entrada v\u00c3\u00a1lida."}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "O valor do destino deve ser especificado para o tipo selecionado.\\nEspecifique uma entrada v\u00c3\u00a1lida."}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "Deve ser atribu\u00c3\u00adda uma programa\u00c3\u00a7\u00c3\u00a3o a cada destino.\\nSelecione uma programa\u00c3\u00a7\u00c3\u00a3o ou um grupo de programa\u00c3\u00a7\u00c3\u00b5es v\u00c3\u00a1lidas."}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "O dom\u00c3\u00adnio do Destino selecionado nesta p\u00c3\u00a1gina n\u00c3\u00a3o corresponde \\nao da Gravidade selecionado na p\u00c3\u00a1gina anterior.\\n\\n\u00c3\u2030 importante que os objetos sejam selecionados a partir do mesmo dom\u00c3\u00adnio.\\nSe a gravidade selecionada estiver incorreta, volte atr\u00c3\u00a1s e escolha a gravidade do dom\u00c3\u00adnio original.\\nCaso contr\u00c3\u00a1rio, selecione um Destino do dom\u00c3\u00adnio que corresponda \u00c3\u00a0 Gravidade."}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "O dom\u00c3\u00adnio da Programa\u00c3\u00a7\u00c3\u00a3o selecionado nesta p\u00c3\u00a1gina n\u00c3\u00a3o corresponde \\nao da Gravidade selecionado na p\u00c3\u00a1gina anterior.\\n\\n\u00c3\u2030 importante que os objetos sejam selecionados a partir do mesmo dom\u00c3\u00adnio.\\nSe a gravidade selecionada estiver incorreta, volte atr\u00c3\u00a1s e escolha a gravidade do dom\u00c3\u00adnio original.\\nCaso contr\u00c3\u00a1rio, selecione uma Programa\u00c3\u00a7\u00c3\u00a3o do dom\u00c3\u00adnio que corresponda \u00c3\u00a0 Gravidade."}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "Falha ao configurar o estado da barra de controle."}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "Falha ao configurar o estado da rolagem autom\u00c3\u00a1tica."}, {"LM_READER_START_SUCCESS", "O leitor do monitor din\u00c3\u00a2mico foi iniciado."}, {"LM_READER_START_FAILURE", "N\u00c3\u00a3o foi poss\u00c3\u00advel iniciar o Leitor do monitor din\u00c3\u00a2mico. Verifique a Configura\u00c3\u00a7\u00c3\u00a3o das defini\u00c3\u00a7\u00c3\u00b5es da rede.\\n (Nota: o endere\u00c3\u00a7o e a porta de encaminhamento especificados devem estar acess\u00c3\u00advel a partir do Console/servidor Web)."}, {"LM_READER_STOP_SUCCESS", "O leitor do monitor din\u00c3\u00a2mico foi parado."}, {"LM_READER_STOP_FAILURE", "N\u00c3\u00a3o foi poss\u00c3\u00advel parar o Leitor do monitor din\u00c3\u00a2mico."}, {"LM_EC_DISABLED", "O encaminhamento do syslog est\u00c3\u00a1 atualmente desabilitado.<br>Os syslogs deve ser encaminhados para o servi\u00c3\u00a7o de Gerenciador de eventos para monitoramento.<br>Para habilitar o encaminhamento de syslogs para monitoramento, clique em Configura\u00c3\u00a7\u00c3\u00b5es na barra de controle acima."}, {"LM_READER_NO_ALERT_MSG", "N\u00c3\u00a3o foram recebidos novos alertas pelo Leitor.<br>Nota: se o problema persistir, verifique as Configura\u00c3\u00a7\u00c3\u00b5es do monitor e as configura\u00c3\u00a7\u00c3\u00b5es syslog do dispositivo."}, {"LM_READER_STOPPED_MSG", "O Leitor est\u00c3\u00a1 atualmente parado.<br>Inicie-o clicando no bot\u00c3\u00a3o Iniciar na barra de controle acima."}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "N\u00c3\u00a3o tem acesso \u00c3\u00a0(s) unidade(s)/dispositivo(s).<br>Se quiser monitorar os syslogs encaminhados por qualquer uma das unidades, contate seu administrador."}, {"LM_READER_ERROR_MSG", "Erro encontrado.<br>Ocorreu uma exce\u00c3\u00a7\u00c3\u00a3o durante o processamento da coleta do leitor do monitor din\u00c3\u00a2mico."}, {"LM_READER_SOCKET_ERROR_MSG", "Erro encontrado.<br>Ocorreu uma exce\u00c3\u00a7\u00c3\u00a3o ao iniciar o leitor do monitor din\u00c3\u00a2mico.<br>Detalhes da exce\u00c3\u00a7\u00c3\u00a3o: "}, {"LM_FAILURE_UPDATE_SETTINGS", "Falha ao atualizar as configura\u00c3\u00a7\u00c3\u00b5es do monitor din\u00c3\u00a2mico."}, {"LM_SUCCESS_UPDATE_SETTINGS", "Configura\u00c3\u00a7\u00c3\u00b5es do monitor din\u00c3\u00a2mico atualizadas com \u00c3\u00aaxito."}, {"LM_WARN_ENABLE_EC", "O Gerenciador de eventos usa syslogs encaminhados pelo Coletor de syslogs para monitoramento. Os syslogs s\u00c3\u00a3o enviados para o Mecanismo para identificar eventos com base em regras definidas.\\n\\nNota: ao habilitar esta op\u00c3\u00a7\u00c3\u00a3o, encaminhar\u00c3\u00a1 syslogs recebidos por todos os servi\u00c3\u00a7os do Coletor de syslogs em uma implanta\u00c3\u00a7\u00c3\u00a3o para um servi\u00c3\u00a7o de Gerenciador central de eventos. Isto aumentar\u00c3\u00a1 o tr\u00c3\u00a1fego de syslogs na rede, uma vez que cada mensagem \u00c3\u00a9 clonada pelo Coletor de syslogs para manipula\u00c3\u00a7\u00c3\u00a3o de eventos."}, {"LM_STMT_CHANGED_MSG_1", "Efetuou altera\u00c3\u00a7\u00c3\u00b5es \u00c3\u00a0 Regra selecionada"}, {"LM_STMT_CHANGED_MSG_2", ".\\nVoltar \u00c3\u00a0 tela anterior (p\u00c3\u00a1gina Listagem das regras) significa que voc\u00c3\u00aa perder\u00c3\u00a1 as altera\u00c3\u00a7\u00c3\u00b5es.\\nPressione OK para ir para a p\u00c3\u00a1gina da Lista das regras ou Cancelar para continuar a editar a regra."}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "Falha ao atualizar o estado do encaixe."}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "Voc\u00c3\u00aa n\u00c3\u00a3o possui Privil\u00c3\u00a9gios de atualiza\u00c3\u00a7\u00c3\u00a3o nesta Tela."}, {"LM_DELETE_STMT_EMPTY", "Selecione pelo menos uma regra para excluir."}, {"LM_STMT_RULE_EMPTY", "N\u00c3\u00a3o foi selecionada qualquer tipo de regra.\\nSelecione um tipo de regra."}, {"LM_STMT_RULE_DUPLICATE", "J\u00c3\u00a1 existe uma regra com as mesmas propriedades de Tipo de regra e Editor.\\nSelecione propriedades de regra exclusiva para esta regra."}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "As configura\u00c3\u00a7\u00c3\u00b5es do monitor din\u00c3\u00a2mico foram alteradas para o Leitor\\nPode demorar alguns segundos a reiniciar o Leitor com \u00c3\u00aaxito."}, {"LM_NO_RULE_EDITABLE", "N\u00c3\u00a3o existem tipos de regras edit\u00c3\u00a1veis no grupo selecionado.\nSelecione outro tipo de Regra/grupo."}, {"LM_DISABLE_STMT_EMPTY", "Selecione pelo menos uma regra para a a\u00c3\u00a7\u00c3\u00a3o habilitar/desabilitar."}, {"LM_SUCCESS_DISABLE_RULE", "A\u00c3\u00a7\u00c3\u00a3o Habilitar/Desabilitar regra efetuada com \u00c3\u00aaxito."}, {"LM_FAILURE_DISABLE_RULE", "Falha ao habilitar/desabilitar a(s) regra(s) selecionada(s) com \u00c3\u00aaxito."}, {"LM_EDIT_RULE_MSG_1", "Selecionou a(s) seguinte(s) regra(s) para editar:\\n"}, {"LM_EDIT_RULE_MSG_2", "\\nA lista selecionada cont\u00c3\u00a9m toda(s) a(s) regra(s) que n\u00c3\u00a3o pode(m) ser editada(s).\\n\\nSelecione outra regra para continuar."}, {"LM_EDIT_RULE_MSG_3", "\\nA lista selecionada cont\u00c3\u00a9m uma(v\u00c3\u00a1rias) regra(s) marcada(s) por * que n\u00c3\u00a3o pode(m) ser editada(s).\\n\\nDeseja continuar excluindo as restantes regras?"}, {"LM_DELETE_RULE_MSG_1", "Selecionou a(s) seguinte(s) regra(s) para excluir:\\n"}, {"LM_DELETE_RULE_MSG_2", "\\nA lista selecionada cont\u00c3\u00a9m toda(s) a(s) regra(s) que n\u00c3\u00a3o pode(m) ser exclu\u00c3\u00adda(s).\\n\\nSelecione outra regra para continuar."}, {"LM_DELETE_RULE_MSG_3", "\\nA lista selecionada cont\u00c3\u00a9m uma(v\u00c3\u00a1rias) regra(s) marcada(s) por * que n\u00c3\u00a3o pode(m) ser exclu\u00c3\u00adda(s).\\n\\nDeseja continuar excluindo as restantes regras?"}, {"LM_DELETE_RULE_MSG_4", "\\nDeseja continuar?"}, {"MASKED_LIVEMONITOR_MESSAGE", "A mensagem de alerta foi mascarada da exibi\u00c3\u00a7\u00c3\u00a3o com base em pol\u00c3\u00adticas privadas impostas"}, {"MASKED_ADDITIONAL_INFORMATION", "As informa\u00c3\u00a7\u00c3\u00b5es adicionais foram mascaradas da exibi\u00c3\u00a7\u00c3\u00a3o com base nas pol\u00c3\u00adticas privadas"}, {"DSB_NONENGFW_ALERT_TITLE", "Alerta da vers\u00c3\u00a3o do firmware!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "Este GMS est\u00c3\u00a1 a gerenciar dispositivos SonicOS que est\u00c3\u00a3o a executar os firmwares n\u00c3\u00a3o ingleses."}, {"DSB_NONENGFW_ALERT_MSGPART2", "Observe que objetos e pol\u00c3\u00adticas definidos em caracteres n\u00c3\u00a3o ingleses em estes dispositivos podem n\u00c3\u00a3o ser exibidos corretamente na interface do GMS do usu\u00c3\u00a1rio. Modificar e enviar tais objetos e pol\u00c3\u00adticas a tais dispositivos pode n\u00c3\u00a3o ter os resultados esperados."}, {"SYSLOGTAIL_STARTED", "O Leitor de syslog (Monitoramento do syslog em tempo real) foi iniciado."}, {"SYSLOGTAIL_START_FAILED", "N\u00c3\u00a3o foi poss\u00c3\u00advel iniciar o Leitor de syslog. Verifique a configura\u00c3\u00a7\u00c3\u00a3o de encaminhamento do syslog&nbsp;&nbsp;(Nota: o endere\u00c3\u00a7o e a porta de encaminhamento especificados devem estar acess\u00c3\u00advel a partir do Console/servidor Web)."}, {"SYSLOGTAIL_ALREADY_RUNNING", "O Leitor de syslog (Monitoramento do syslog em tempo real) j\u00c3\u00a1 est\u00c3\u00a1 a ser executado; n\u00c3\u00a3o foram realizadas altera\u00c3\u00a7\u00c3\u00b5es"}, {"SYSLOGTAIL_STOPPED", "O Leitor de syslog (Monitoramento do syslog em tempo real) foi parado."}, {"SYSLOGTAIL_ALREADY_STOPPED", "O Leitor de syslog (Monitoramento do syslog em tempo real) j\u00c3\u00a1 est\u00c3\u00a1 parado; n\u00c3\u00a3o foram realizadas altera\u00c3\u00a7\u00c3\u00b5es"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "N\u00c3\u00a3o foram recebidos novos syslogs pelo Leitor."}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(O leitor pode ainda estar a tentar coletar os syslogs)."}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(Se o problema persistir, verifique as Configura\u00c3\u00a7\u00c3\u00b5es do leitor de syslog e as do firewall."}, {"SYSLOGTAIL_CONFIG_CHECK", "Verifique as Configura\u00c3\u00a7\u00c3\u00b5es do leitor de syslog e as do firewall."}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "N\u00c3\u00a3o foram encontrados syslogs."}, {"SYSLOGTAIL_MODIFY_FILTER", "Tente modificar a cadeia de caracteres de filtro para obter melhores resultados."}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(Nota: use <b>E</b> ou <b>OU</b> entre v\u00c3\u00a1rias cadeias para obter melhores resultados)."}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "O Leitor de syslog est\u00c3\u00a1 atualmente parado"}, {"SYSLOGTAIL_START", "Inicie o Leitor de syslog."}, {"SYSLOGTAIL_ERROR", "Erro encontrado."}, {"SYSLOGTAIL_ERROR_MESSAGE", "Ocorreu uma exce\u00c3\u00a7\u00c3\u00a3o durante o processamento da coleta de syslog."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Encaminhamento do syslog desabilitado."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Configure o endere\u00c3\u00a7o e a porta de Encaminhamento do syslog e inicie o Leitor de syslog."}, {"MASKED_SYSLOG_MESSAGE", "A mensagem de syslog restante foi mascarada da exibi\u00c3\u00a7\u00c3\u00a3o com base em pol\u00c3\u00adticas privadas impostas"}, {"EVENT_ALERTS_SEARCH", "Alertas de pesquisa"}, {"EVENT_ALERTS_DELETE", "Excluir alerta(s)"}, {"EVENT_ALERTS_ENABLE_DISABLE", "Habilitar/Desabilitar alerta(s)"}, {"EVENT_ALERTS_ADD", "Adicionar alerta"}, {"EVENT_ALERTS_HEADER", "Alertas"}, {"EVENT_ALERTS_ALERT_NAME", "Nome"}, {"EVENT_ALERTS_ALERT_TYPE", "Tipo de alerta"}, {"EVENT_ALERTS_INTERVAL", "Intervalo"}, {"EVENT_ALERTS_DEST_SCHED", "Destino/Programa\u00c3\u00a7\u00c3\u00a3o"}, {"EVENT_ALERTS_ENABLED", "Habilitado"}, {"EVENT_ALERTS_DOMAIN", "Dom\u00c3\u00adnio"}, {"EVENT_ALERTS_CONFIGURE", "Configurar"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "N\u00c3\u00a3o foi encontrado qualquer alerta"}, {"DTF_ANY", "Qualquer momento"}, {"DTF_ADD", "Adicionar unidade"}, {"DTF_EXECUTE", "Executar"}, {"DTF_ENABLED", "Habilitado"}, {"DTF_SEARCH", "Pesquisa de Tarefas padr\u00c3\u00a3o"}, {"DTF_NOT_FOUND", "N\u00c3\u00a3o foram encontradas Tarefas padr\u00c3\u00a3o."}, {"DTF_DT", "Tarefas padr\u00c3\u00a3o"}, {"DTF_DESC", "Descri\u00c3\u00a7\u00c3\u00a3o"}, {"DTF_TOU", "Tipos de unidades"}, {"DTF_DURING", "Tarefa criada durante"}, {"DTF_NO_DTS", "N\u00c3\u00a3o foram selecionadas tarefas padr\u00c3\u00a3o para execu\u00c3\u00a7\u00c3\u00a3o."}, {"DTF_EXEC", "Executar esta tarefa padr\u00c3\u00a3o."}, {"DTF_NO_DISABLE", "Esta tarefa padr\u00c3\u00a3o n\u00c3\u00a3o pode ser desabilitada."}, {"DTF_NO_EXEC", "Esta tarefa padr\u00c3\u00a3o n\u00c3\u00a3o pode ser executada."}, {"DTF_SEL_UNITS", "Selecionar unidades"}, {"DTF_EXEC_METHOD", "M\u00c3\u00a9todo de execu\u00c3\u00a7\u00c3\u00a3o"}, {"DTF_ATLEAST_ONE", "Selecione pelo menos uma unidade para executar a tarefa."}, {"DTF_EXEC_ALL", "Execute as tarefas padr\u00c3\u00a3o em todas as unidades no sistema"}, {"DTF_EXEC_FOLL", "Execute as tarefas padr\u00c3\u00a3o nas seguintes unidades selecionadas"}, {"DTF_REAPPLY_1", "Executar apenas se n\u00c3\u00a3o tiver sido aplicado previamente"}, {"DTF_REAPPLY_2", "Somente as tarefas que n\u00c3\u00a3o foram aplicadas previamente \u00c3\u00a0(s) unidade(s) selecionada(s) ser\u00c3\u00a3o executadas."}, {"DTF_REAPPLY_3", "As tarefas padr\u00c3\u00a3o que j\u00c3\u00a1 foram executadas ser\u00c3\u00a3o ignoradas para essa unidade."}, {"DTF_EXEC_1", "Executar mesmo que tenha sido aplicado previamente"}, {"DTF_EXEC_2", "Todas as tarefas selecionadas ter\u00c3\u00a3o de ser executadas novamente na(s) unidade(s) selecionada(s) mesmo que tenham sido aplicadas previamente."}, {"DTF_ENABLE_SUCCESS", "Atualizou a sele\u00c3\u00a7\u00c3\u00a3o de Tarefas padr\u00c3\u00a3o com \u00c3\u00aaxito."}, {"DTF_ENABLE_FAIL", "Falha ao atualizar a sele\u00c3\u00a7\u00c3\u00a3o de Tarefas padr\u00c3\u00a3o com \u00c3\u00aaxito."}, {"DTF_SCHEDULE_SUCCESS", "Programou com \u00c3\u00aaxito as Tarefas padr\u00c3\u00a3o para execu\u00c3\u00a7\u00c3\u00a3o."}, {"DTF_SCHEDULE_FAIL", "N\u00c3\u00a3o existem Tarefas padr\u00c3\u00a3o programadas uma vez que as tarefas selecionadas n\u00c3\u00a3o s\u00c3\u00a3o aplic\u00c3\u00a1veis ou j\u00c3\u00a1 foram executadas."}, {"AUTOASSIGN_AGENT_HEADER", "Configura\u00c3\u00a7\u00c3\u00b5es de atribui\u00c3\u00a7\u00c3\u00a3o de agentes"}, {"AUTOASSIGN_AGENT_MSG_1", " requer que os agentes sejam propriet\u00c3\u00a1rios de unidades para gerenciamento, gera\u00c3\u00a7\u00c3\u00a3o de relat\u00c3\u00b3rios e monitoramento. A atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica de agentes garante que as unidades est\u00c3\u00a3o uniformemente balanceadas para melhor aloca\u00c3\u00a7\u00c3\u00a3o de recursos, desempenho otimizado, armazenamento adequado e alta disponibilidade. Este recurso pode ser habilitado com base nos modos gerenciados selecionados durante a opera\u00c3\u00a7\u00c3\u00a3o Adicionar unidade. "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "O usu\u00c3\u00a1rio pode reatribuir agentes na caixa de di\u00c3\u00a1logo <i>Modificar unidade</i>."}, {"AUTOASSIGN_AGENT_MSG_2", "O usu\u00c3\u00a1rio pode reatribuir agentes na caixa de di\u00c3\u00a1logo <i>Modificar unidade</i> ou usando a opera\u00c3\u00a7\u00c3\u00a3o <i>Reatribuir agentes</i>."}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "Somente para os modos de gerenciamento SSL, LAN ou T\u00c3\u00banel existente: A atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica se aplica somente aos modos <i>T\u00c3\u00banel existente</i> e <i>SSL</i>, sendo necess\u00c3\u00a1ria a atribui\u00c3\u00a7\u00c3\u00a3o manual para <i>T\u00c3\u00banel de gerenciamento</i>."}, {"AUTOASSIGN_AGENT_MSG_ALL", "Todos os modos de gerenciamento: A atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica se aplica a todos os modos. Para o modo <i>T\u00c3\u00banel de gerenciamento</i>, as configura\u00c3\u00a7\u00c3\u00b5es de agente precisam ser configuradas na unidade gerenciada."}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "A Atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica de agentes foi habilitada"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "A Atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica de agentes foi desabilitada"}, {"AUTOASSIGN_AGENT_ENABLE", "Habilitar atribui\u00c3\u00a7\u00c3\u00a3o autom\u00c3\u00a1tica de agentes"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL e Usando um t\u00c3\u00banel existente ou LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "Tudo"}, {"TEMPLATE_SETTINGS_TITLE", "[BR]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[BR]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[BR]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[BR]Apply Default Configuration"}, {"CUI_NO_FS", "N\u00c3\u00a3o foi encontrado um servidor de fluxo."}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "BR The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "BR The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "Tem certeza que deseja alterar a configura\u00c3\u00a7\u00c3\u00a3o"}, {"LOGCONFIG_SECTITLE_2", "Mensagens de log"}, {"LOGCONFIG_DELLABEL", "Excluir logs anteriores a:"}, {"LOGCONFIG_MONTH", "M\u00c3\u00aas"}, {"LOGCONFIG_DAY", "Dia"}, {"LOGCONFIG_YEAR", "Ano"}, {"LOGCONFIG_FORLABEL", "para"}, {"LOGCONFIG_DOMAIN", "Dom\u00c3\u00adnio"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "Erro: n\u00c3\u00a3o foi poss\u00c3\u00advel atualizar a configura\u00c3\u00a7\u00c3\u00a3o"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "Tem certeza de que deseja alterar a programa\u00c3\u00a7\u00c3\u00a3o?"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "Tem certeza de que deseja alterar o n\u00c3\u00bamero m\u00c3\u00a1ximo da contagem de arquivos de log?"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "Arquivo "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " Mensagens de log"}, {"APPLOG_CONFIG_DELETE_MSG_1", "Logs ajudam a rastrear as atividades nesse sistema. Essas atividades est\u00c3\u00a3o associadas diretamente ou indiretamente a a\u00c3\u00a7\u00c3\u00b5es iniciadas pelo usu\u00c3\u00a1rio ou com base em a\u00c3\u00a7\u00c3\u00b5es iniciadas pelo sistema. Esses logs s\u00c3\u00a3o importantes para fins de trilha de auditoria e conformidade, bem como para solu\u00c3\u00a7\u00c3\u00a3o de problemas de opera\u00c3\u00a7\u00c3\u00a3o do sistema."}, {"APPLOG_CONFIG_DELETE_MSG_2", "Logs, que n\u00c3\u00a3o precisam ser armazenados no sistema, podem ser exclu\u00c3\u00addos manualmente. Esta \u00c3\u00a9 uma a\u00c3\u00a7\u00c3\u00a3o de uma vez e ser\u00c3\u00a1 executada com base na data selecionada para exclus\u00c3\u00a3o. "}, {"APPLOG_CONFIG_DELETE_MSG_21", "A a\u00c3\u00a7\u00c3\u00a3o de exclus\u00c3\u00a3o nesta tela somente eliminar\u00c3\u00a1 os logs que n\u00c3\u00a3o s\u00c3\u00a3o relacionadas \u00c3\u00a0s ordens de altera\u00c3\u00a7\u00c3\u00a3o."}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "Logs que n\u00c3\u00a3o precisam ser armazenados no sistema podem ser exportados no formato CSV/HTML e ser descarregados do banco de dados. O processo de arquivamento arquivar\u00c3\u00a1 primeiro os dados para o diret\u00c3\u00b3rio <i>archivedLogs</i> de acordo com o \"Cronograma de log de arquivamento\" e os dados ser\u00c3\u00a3o exclu\u00c3\u00addos do banco de dados. "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "A a\u00c3\u00a7\u00c3\u00a3o de arquivamento exportar\u00c3\u00a1 todos os logs, incluindo aqueles relacionados \u00c3\u00a0 altera\u00c3\u00a7\u00c3\u00a3o de ordens, mas a exclus\u00c3\u00a3o ignorar\u00c3\u00a1 a elimina\u00c3\u00a7\u00c3\u00a3o de entradas relacionadas \u00c3\u00a0 altera\u00c3\u00a7\u00c3\u00a3o de ordem."}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "Nota: Para implanta\u00c3\u00a7\u00c3\u00b5es sem janelas: Para descarregar os arquivos log arquivados para o disco local, navegue at\u00c3\u00a9 Dispositivo > Sistemas > Tela Gerenciador de Arquivos."}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "Habilitar arquivo"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "Manter "}, {"APPLOG_CONFIG_ARCHIVE_For", " para:"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "Arquivos m\u00c3\u00a1ximos de mensagem de log:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "Formato do arquivo:"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "Configura\u00c3\u00a7\u00c3\u00b5es do arquivo"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "Mensagens de log atualizadas com \u00c3\u00aaxito"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "Arquivar mensagens GMS de log para"}, {"WF_SETTINGS_TITLE", "Configura\u00c3\u00a7\u00c3\u00b5es"}, {"WF_SETTINGS_MSG_1", "O Workflow \u00c3\u00a9 um sistema para supervisionar as altera\u00c3\u00a7\u00c3\u00b5es de configura\u00c3\u00a7\u00c3\u00a3o realizadas em um ou mais dispositivos. Ele permite realizar an\u00c3\u00a1lise e fornecer coment\u00c3\u00a1rios sobre as altera\u00c3\u00a7\u00c3\u00b5es propostas, atribuir propriedade e fornecer responsabilidade por todas as a\u00c3\u00a7\u00c3\u00b5es e todas com logs para auditoria. Gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem \u00c3\u00a9 um componente do Workflow que permite ver altera\u00c3\u00a7\u00c3\u00b5es realizadas em dispositivos, visualizar as altera\u00c3\u00a7\u00c3\u00b5es em linha na tela no contexto do dispositivo e tamb\u00c3\u00a9m comparar v\u00c3\u00a1rias altera\u00c3\u00a7\u00c3\u00b5es de ordem. "}, {"WF_SETTINGS_MSG_2", "Nota: Gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem e aprova\u00c3\u00a7\u00c3\u00a3o pode ser habilitado/desabilitado a um n\u00c3\u00advel de dom\u00c3\u00adnio. Desabilitar o Gerenciamento de aprova\u00c3\u00a7\u00c3\u00a3o \u00c3\u00a9 independente do Gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem, mas desabilitar o Gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem tamb\u00c3\u00a9m desabilita o Gerenciamento de aprova\u00c3\u00a7\u00c3\u00a3o."}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "Mesmo quando habilitado, o Fluxo de trabalho ser\u00c3\u00a1 aplicado somente aos dispositivos que est\u00c3\u00a3o licenciados ativamente para os seguintes servi\u00c3\u00a7os: "}, {"WF_SETTINGS_ENABLE_COM", "Habilitar gerenciamento de altera\u00c3\u00a7\u00c3\u00a3o de ordem"}, {"WF_SETTINGS_ENABLE_WF", "Habilitar gerenciamento de aprova\u00c3\u00a7\u00c3\u00a3o"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "Configura\u00c3\u00a7\u00c3\u00b5es de cronograma padr\u00c3\u00a3o de altera\u00c3\u00a7\u00c3\u00a3o de ordem"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "Altera\u00c3\u00a7\u00c3\u00a3o de ordem pode ser programado para ser executado ap\u00c3\u00b3s o envio com base nas configura\u00c3\u00a7\u00c3\u00b5es a seguir. Especificar um padr\u00c3\u00a3o usar\u00c3\u00a1 automaticamente a configura\u00c3\u00a7\u00c3\u00a3o selecionada quando uma nova Altera\u00c3\u00a7\u00c3\u00a3o de ordem \u00c3\u00a9 criada."}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "Programa\u00c3\u00a7\u00c3\u00a3o: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "Executar manualmente"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "Imediato na Aprova\u00c3\u00a7\u00c3\u00a3o"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "Em"}, {"WF_CONFIG_DELETE_MSG_1", "Logs ajudam a rastrear as atividades nesse sistema. Essas atividades est\u00c3\u00a3o associadas diretamente ou indiretamente a a\u00c3\u00a7\u00c3\u00b5es iniciadas pelo usu\u00c3\u00a1rio ou com base em a\u00c3\u00a7\u00c3\u00b5es iniciadas pelo sistema. Esses logs s\u00c3\u00a3o importantes para fins de trilha de auditoria e conformidade, bem como para solu\u00c3\u00a7\u00c3\u00a3o de problemas de opera\u00c3\u00a7\u00c3\u00a3o do sistema."}, {"WF_CONFIG_DELETE_MSG_2", "As altera\u00c3\u00a7\u00c3\u00b5es de ordem, geralmente com mais de "}, {"WF_CONFIG_DELETE_MSG_3", " que n\u00c3\u00a3o precisam ser armazenadas no sistema podem ser exclu\u00c3\u00addas manualmente. Esta \u00c3\u00a9 uma a\u00c3\u00a7\u00c3\u00a3o de uma vez e ser\u00c3\u00a1 executada com base na data selecionada para exclus\u00c3\u00a3o. A a\u00c3\u00a7\u00c3\u00a3o de exclus\u00c3\u00a3o nesta tela somente eliminar\u00c3\u00a1 dados, tarefas e logs relacionados \u00c3\u00a0s altera\u00c3\u00a7\u00c3\u00b5es de ordem."}, {"APPLOG_CONFIG_DEL_DATA", "Excluir dados a cada"}, {"FA_UNIT_STATUS_HEADER", "Detalhes da unidade"}, {"FA_UNIT_STATUS_SERIAL", "N\u00c3\u00bamero de s\u00c3\u00a9rie"}, {"FA_UNIT_STATUS_NODE_NAME", "Nome da unidade"}, {"FA_UNIT_STATUS_MODEL", "Modelo"}, {"FA_UNIT_STATUS_FIRMWARE", "Vers\u00c3\u00a3o do firmware"}, {"FA_UNIT_STATUS_IP", "IP gerenciado"}, {"FA_UNIT_STATUS_LICENSE", "Visualiza\u00c3\u00a7\u00c3\u00a3o de aplicativos"}, {"FA_GROUP_STATUS_HEADER1", "Detalhes do firmware"}, {"FA_GROUP_STATUS_HEADER2", "Status da licen\u00c3\u00a7a de relat\u00c3\u00b3rios de fluxo"}, {"FA_GROUP_STATUS_NO_DATA", "Nenhum dado dispon\u00c3\u00advel"}, {"FA_LICENSE_NOT_AVAILABLE", "N\u00c3\u00a3o licenciado"}, {"FA_LICENSE_AVAILABLE", "Licenciado"}, {"FA_LICENSE_FREE_TRAIL", "Avalia\u00c3\u00a7\u00c3\u00a3o gratuita"}, {"FA_LICENSE_EXPIRED", "Expirado"}, {"FA_GROUP_FIREWALL_COUNT", "Firewalls no sistema"}, {"FA_FLOW_IP1", "Agente de fluxo 1"}, {"FA_FLOW_IP2", "Agente de fluxo 2"}, {"FA_FLOW_AGENT_STATUS", "Status do Agente de fluxo"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "Configura\u00c3\u00a7\u00c3\u00b5es de firewall"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "T\u00c3\u00banel VPN"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "IP remoto"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "Reten\u00c3\u00a7\u00c3\u00a3o de dados (dias)"}, {"FA_FLOW_FORWARDER_IP", "Encaminhador de fluxo"}, {"FA_FLOWS_COLLECTED", "Fluxos coletados"}, {"FA_DISK_ALLOCATED", "Disco alocado"}, {"FA_DISK_USED", "Disco usado"}, {"FA_FLOW_STATUS", "Status"}, {"FA_NO_AGENT", "Nenhum Agente de fluxo atribu\u00c3\u00addo"}, {"FA_MODELSUPPORT", "A op\u00c3\u00a7\u00c3\u00a3o Relat\u00c3\u00b3rios de fluxo n\u00c3\u00a3o est\u00c3\u00a1 habilitada para este modelo"}, {"FA_FIRMWARESUPPORT", "A op\u00c3\u00a7\u00c3\u00a3o Relat\u00c3\u00b3rios de fluxo n\u00c3\u00a3o est\u00c3\u00a1 dispon\u00c3\u00advel para esta vers\u00c3\u00a3o"}, {"FA_LICENSESUPPORT", "N\u00c3\u00a3o est\u00c3\u00a3o dispon\u00c3\u00adveis informa\u00c3\u00a7\u00c3\u00b5es relativas \u00c3\u00a0 licen\u00c3\u00a7a Visualiza\u00c3\u00a7\u00c3\u00a3o de aplicativos"}, {"FA_HEADING", "Agentes de fluxo"}, {"FA_FLOW_AGENT", "Agente de fluxo"}, {"FA_FLOW_HEAD_IP1", "Agente de fluxo 1"}, {"FA_FLOW_HEAD_IP2", "Agente de fluxo 2"}, {"FA_FLOW_HEAD_HDD", "Disco r\u00c3\u00adgido (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "Largura de banda (%)"}, {"FA_FLOW_FORWARDER_HEAD", "Encaminhador de fluxo"}, {"FA_FLOW_PAIR", "Par de Agentes de fluxo"}, {"FA_FLOW_HEAD_DISKSIZE", "Tamanho do disco"}, {"FA_FLOW_HEAD_GATEWAY", "Firewall de gateway"}, {"FA_FLOW_HEAD_TUNNELS", "T\u00c3\u00baneis"}, {"FA_FLOW_HEAD_TENANTS", "Locat\u00c3\u00a1rios"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "Nome"}, {"GF_GATEWAY", "Gateway"}, {"GF_LAST_UPDATED", "\u00c3\u0161ltima atualiza\u00c3\u00a7\u00c3\u00a3o"}, {"GF_DEST_ADDRESS_RANGE", "Intervalo de endere\u00c3\u00a7os de destino"}, {"GF_LOCAL_ADDRESS_RANGE", "Intervalo de endere\u00c3\u00a7os locais"}, {"FA_STATUS", "Status"}, {"CLOUDSETTINGS_SECTITLE_1", "Adicionar novo par de Agentes de fluxo"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "Agente de fluxo 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "Agente de fluxo 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "Mem\u00c3\u00b3ria (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "Armazenamento do banco de dados de fluxo (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "Configura\u00c3\u00a7\u00c3\u00b5es do servidor syslog em nuvem"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "Habilitar a gera\u00c3\u00a7\u00c3\u00a3o de relat\u00c3\u00b3rios syslog para o servidor syslog:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Endere\u00c3\u00a7o IP do servidor syslog:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Porta do servidor syslog:"}, {"CLOUDSETTINGS_SECTITLE_3", "Configura\u00c3\u00a7\u00c3\u00b5es do Agente de fluxo em nuvem"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "N\u00c3\u00bamero de firewalls por Agente de fluxo:"}, {"CLOUDSETTINGS_SECTITLE_5", "[BR]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[BR]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "Informa\u00c3\u00a7\u00c3\u00b5es do SonicPoint"}, {"SP_MANAGEDBY", "Gerenciado por"}, {"SP_IPADDR", "Endere\u00c3\u00a7o IP"}, {"SP_SUBNET", "M\u00c3\u00a1scara de sub-rede"}, {"SP_IFACE", "Interface"}, {"SP_ZONE", "Zona"}, {"SP_MODEL", "Modelo"}, {"SP_ENABLED", "Habilitado"}, {"SP_DISABLED", "Desabilitado"}, {"SP_STATUS", "Estado"}, {"SP_MACADDR", "Endere\u00c3\u00a7o MAC"}, {Integer.toString(-919), "[BR]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[BR]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[BR]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[BR]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[BR]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[BR]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[BR]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[BR]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[BR]Successfully authenticated with the unit."}, {Integer.toString(-928), "[BR]Authentication with the unit failed."}, {Integer.toString(-929), "[BR]The unit is registered with the backend."}, {Integer.toString(-930), "[BR]The unit is not registered with the backend."}, {Integer.toString(-931), "[BR]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[BR]Heart beats for the unit have been started."}, {Integer.toString(-933), "[BR]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[BR]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[BR]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[BR]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[BR]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[BR]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[BR]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[BR]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[BR]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[BR]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[BR]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[BR]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[BR]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[BR]ZeroTouch feature was disabled for the firewall."}, {"TICKET_INFORMATION", "[BR] Connectwise Ticket"}, {"TICKET_DETAILS", "[BR] Details"}, {"CONNECTWISE_NOTE", "[BR] GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}};
 
     @Override
     public Object[][] getContents() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_zh_CN.java decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_zh_CN.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_zh_CN.java	2023-09-08 15:13:13.234772412 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_zh_CN.java	2023-09-08 15:14:40.196250206 -0700
@@ -7,7 +7,7 @@
 
 public class sgmsResources_zh_CN
 extends ListResourceBundle {
-    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "\u8bbe\u5907\uff08\u4e00\u53f0\uff09"}, {"APPLIANCE_NAME_PLURAL", "\u8bbe\u5907\uff08\u591a\u53f0\uff09"}, {"APPLIANCE_DESC", "\u8bbe\u5907\u8bf4\u660e"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewall"}, {"SONICWALL_DESC", "Firewall \u8bbe\u5907"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMA"}, {"SSLVPN_DESC", "SMA \u8bbe\u5907"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDP"}, {"CDP_DESC", "CDP \u8bbe\u5907"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Aventail SMA \u8bbe\u5907"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "\u7535\u5b50\u90ae\u4ef6\u5b89\u5168\u8bbe\u5907"}, {"OTHERS_NAME", "\u5176\u4ed6"}, {"OTHERS_NAME_PLURAL", "\u5176\u4ed6"}, {"OTHERS_DESC", "\u5176\u4ed6\u8bbe\u5907"}, {"MINUTE", "\u5206\u949f"}, {"TEST_STRING", "\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u5b57\u7b26\u4e32 - \u53d1\u8d27\u4e4b\u524d\u5220\u9664\u6b64\u9879"}, {"PROGRESS_ACTION_TIMED", "\u6b64\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u624d\u80fd\u5b8c\u6210"}, {"PROGRESS_PLEASE_WAIT", "\u8bf7\u7a0d\u5019..."}, {"LOADING_PLEASE_WAIT", "\u52a0\u8f7d\u4e2d\uff0c\u8bf7\u7a0d\u5019..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u66f4\u65b0\u6743\u9650\u3002"}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "\u60a8\u6ca1\u6709\u67e5\u770b\u4efb\u4f55\u9875\u9762\u7684\u6743\u9650\uff0c\u8bf7\u6ce8\u9500\u5e76\u4e0e\u7ba1\u7406\u5458\u8054\u7cfb\u3002"}, {"UPDATE", "\u66f4\u65b0"}, {"RESET", "\u91cd\u7f6e"}, {"NO_PANEL_PERMISSIONS", "[CN]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "\u4e0b\u8f7d\u578b\u53f7\u4ee3\u7801\u6210\u529f\u5df2\u5931\u8d25"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "\u4e0b\u8f7d\u578b\u53f7\u4ee3\u7801\u6210\u529f\u5df2\u5931\u8d25"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "\u4efb\u52a1\u540e\u53f0\u5904\u7406\u5df2\u6210\u529f\u542f\u52a8\u3002"}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "\u6545\u969c - \u6ca1\u6709\u53ef\u7528\u4e8e\u5e94\u7528\u5347\u7ea7\u7684\u8bbe\u5907\u3002"}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u6210\u529f\u6dfb\u52a0 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "\u6fc0\u6d3b\u7801\u5df2\u6210\u529f\u6dfb\u52a0\u3002"}, {"ERROR_ADD_ACTIVATION_CODE", "\u6dfb\u52a0\u6fc0\u6d3b\u7801\u9519\u8bef\uff1a\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u7ecf\u5b58\u5728 - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u6210\u529f\u5220\u9664 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "\u6fc0\u6d3b\u7801\u5df2\u6210\u529f\u5220\u9664\u3002"}, {"ERROR_DELETE_ACTIVATION_CODE", "\u5220\u9664\u6fc0\u6d3b\u7801\u9519\u8bef\uff1a\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u4e0d\u5b58\u5728 - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "\u5220\u9664\u6fc0\u6d3b\u7801\u9519\u8bef\uff1a\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u65e0\u6cd5\u5220\u9664 - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u6dfb\u52a0\u5230\u4e86 SonicWall GMS \u6570\u636e\u5e93\u4e2d: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u4ece\u53ef\u7528\u4ee3\u7801\u6c60\u4e2d\u5220\u9664\uff1a "}, {"UPDATE_DB_MESSAGE", "\u5df2\u5728 SonicWall GMS \u6570\u636e\u5e93\u4e2d\u6210\u529f\u66f4\u65b0\u4e86\u66f4\u6539\u3002"}, {"FAILURE_UPDATE_DB_MESSAGE", "\u66f4\u65b0\u5931\u8d25: \u672a\u80fd\u5728 SonicWall GMS \u6570\u636e\u5e93\u4e2d\u6210\u529f\u66f4\u65b0\u66f4\u6539\u3002"}, {"NO_UNITS_FOR_REGISTRATION", "\u6ca1\u6709\u6ce8\u518c\u7684\u8bbe\u5907"}, {"FREE_TRAIL_NOT_APPLIED", "\u6240\u6709\u8bbe\u5907\u5747\u672a\u6ce8\u518c\u6216\u5df2\u8ba2\u9605"}, {"AV_FAILURE_MESSAGE", "\u6ca1\u6709\u53ef\u7528\u4e8e\u5347\u7ea7\u4ee5\u53ca\u6ce8\u518c\u7684\u8bbe\u5907"}, {"AV_SUCCESS_MESSAGE", "\u5347\u7ea7\u4ee5\u53ca\u6ce8\u518c\u4efb\u52a1\u5df2\u6210\u529f\u542f\u52a8"}, {"AV_SUCCESS_UPGRADE", "\u5347\u7ea7\u4efb\u52a1\u5df2\u6210\u529f\u542f\u52a8"}, {"AV_NO_SUCCESS_REG", "\u6ca1\u6709\u53ef\u7528\u4e8e\u6ce8\u518c\u7684\u8bbe\u5907"}, {"AV_SUCCESS_REG", "\u6ce8\u518c\u4efb\u52a1\u5df2\u6210\u529f\u542f\u52a8"}, {"AV_NO_SUCCESS_UPGRADE", "\u6ca1\u6709\u53ef\u7528\u4e8e\u5347\u7ea7\u7684\u8bbe\u5907"}, {"TASK_SUCCESS_MESSAGE", "\u4efb\u52a1\u5df2\u6210\u529f\u542f\u52a8"}, {"TASK_CMP_ERROR", "CMP \u5bc6\u7801\u53ea\u80fd\u5728\u8bbe\u5907\u7ea7\u522b\u8fdb\u884c\u66f4\u6539"}, {"TASK_ERROR_MESSAGE", "\u4efb\u52a1\u672a\u6210\u529f\u542f\u52a8"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "\u6ca1\u6709\u53ef\u7528\u4e8e\u8bb8\u53ef\u8bc1\u5171\u4eab\u64cd\u4f5c\u7684\u8bbe\u5907\u3002"}, {"SGMS_EMAIL_BOTTOM_MSG1", "\u6280\u672f\u652f\u6301 "}, {"SGMS_EMAIL_BOTTOM_MSG2", "\u7248\u672c "}, {"SGMS_EMAIL_BOTTOM_MSG3", "\u5e8f\u5217\uff1a "}, {"SGMS_EMAIL_BOTTOM_MSG4", "\u670d\u52a1\u5668\uff1a "}, {"FIRMWARE_DOWNLOADED", "\u56fa\u4ef6\u7684\u65b0\u526f\u672c\u5df2\u4e0b\u8f7d\u3002"}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", "\u4ee5\u4e0b\u8bbe\u5907\u7684\u8bb8\u53ef\u8bc1\u4e0d\u4e45\u5373\u5c06\u5230\u671f\u3002\n\u8bf7\u8054\u7cfb SonicWall \u9500\u552e\u8d2d\u4e70\u6fc0\u6d3b\u7801\u4ee5\u7eed\u8ba2\u8fd9\u4e9b\u8ba2\u8d2d\u670d\u52a1\u3002"}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "\u8ba2\u9605\u8fc7\u671f\u4fe1\u606f\u3002"}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "\u672a\u627e\u5230\u8fc7\u671f\u3002"}, {"VERSION_MESSAGE", "SonicWall GMS \u7248\u672c\u53f7: "}, {"NUM_NODES_MESSAGE", "\u6b64 SonicWall GMS \u53ef\u7ba1\u7406\u7684\u8282\u70b9\u6570\u91cf: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "GMS \u4ea7\u54c1\u8bf4\u660e\uff1a "}, {"DATABASE_TYPE_MESSAGE", "\u6570\u636e\u5e93\u7c7b\u578b\uff1a "}, {"MODEL_TYPES_MESSAGE", "\u8282\u70b9\u6570\u548c\u578b\u53f7\u540d\u79f0\uff1a "}, {"NUM_AGENTS_MESSAGE", "\u7cfb\u7edf\u4e2d\u7684\u4ee3\u7406\u6570\uff1a "}, {"AGENT_IP_MESSAGE", "\u4ee3\u7406\u7684 IP \u5730\u5740\uff1a "}, {"UNKNOWN_MESSAGE", "\u672a\u77e5"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "\u672a\u77e5\u6570\u636e\u5e93"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "\u8bbe\u5907\u540d\u79f0\u4e2d\u7684\u65e0\u6548\u5b57\u7b26 [<,\\,:]\u3002"}, {"PM_NAME_KEYWORD", "\u662f\u4e00\u4e2a\u5173\u952e\u5b57\u5e76\u4e14\u4e0d\u80fd\u7528\u4e8e\u547d\u540d\u8bbe\u5907\u3002\u8bf7\u4f7f\u7528\u5176\u4ed6\u540d\u79f0"}, {"PM_NAME_EXISTS_A", "\u5df2\u7ecf\u5b58\u5728\u540d\u4e3a\u201c"}, {"PM_NAME_EXISTS_B", "\u201d\u7684\u8bbe\u5907 "}, {"PM_UNKNOWN", "\u672a\u77e5"}, {"PM_UNKNOWN_UNREGISTERED", "\u672a\u77e5/\u672a\u6ce8\u518c"}, {"PM_UNREGISTERED", "\u672a\u6ce8\u518c"}, {"PM_YES", "\u662f"}, {"PM_NO", "\u5426"}, {"PM_ENABLED", "\u5df2\u542f\u7528"}, {"PM_DISABLED", "\u5df2\u7981\u7528"}, {"PM_NOTAVAILABLE", "\u4e0d\u53ef\u7528"}, {"PM_UNLIMITED", "\u65e0\u9650\u5236"}, {"PM_CURRENT", "\u5f53\u524d"}, {"PM_DEFAULT", "\u9ed8\u8ba4\u503c"}, {"PM_EXPIRED", "\u8fc7\u671f"}, {"PM_UP", "\u8fd0\u884c"}, {"PM_DOWN", "\u5173\u95ed"}, {"PM_NOT_ACQUIRED", "\u672a\u83b7\u53d6"}, {"PM_SINCE", "\u81ea\u4ece "}, {"PM_NONE", "\u65e0"}, {"PM_N_A", "\u4e0d\u53ef\u7528"}, {"PM_NO_LICENSE", "\u65e0\u8bb8\u53ef\u8bc1"}, {"PM_MODEL", "\u578b\u53f7"}, {"PM_SERIAL_NUM", "\u5e8f\u5217\u53f7"}, {"PM_DOMAIN", "\u57df"}, {"PM_NUM_LAN_IPS", "\u5141\u8bb8\u7684 LAN IP \u6570"}, {"PM_HA", "\u9ad8\u53ef\u7528\u6027"}, {"PM_DMZ_PORT", "DMZ \u7aef\u53e3"}, {"PM_NUM_WORKPORTS", "\u5141\u8bb8\u7684\u5de5\u4f5c\u7aef\u53e3 IP \u6570"}, {"PM_HOMEPORT", "\u8d77\u59cb\u7aef\u53e3"}, {"PM_WLAN_PORT", "WLAN \u7aef\u53e3"}, {"PM_OPT_PORT", "OPT \u7aef\u53e3"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN \u5347\u7ea7"}, {"PM_VPN_CLIENTS", "\u5168\u5c40 VPN \u5ba2\u6237\u7aef"}, {"PM_IPS", "\u5165\u4fb5\u4fdd\u62a4\u670d\u52a1"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "\u7f51\u5173\u9632\u75c5\u6bd2"}, {"PM_FIRMWARE_VERSION", "\u56fa\u4ef6\u7248\u672c"}, {"PM_REGISTRATION_CODE", "\u6ce8\u518c\u7801"}, {"PM_CFS_SUB", "\u5185\u5bb9\u8fc7\u6ee4\u5668\u5217\u8868/\u670d\u52a1"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "\u9632\u75c5\u6bd2"}, {"PM_WARRANTY", "\u5ef6\u957f\u4fdd\u4fee"}, {"PM_SW_STATUS", "\u72b6\u6001"}, {"PM_SW_MANAGEDINSTANCE", "\u6309\u5b9e\u4f8b\u7ba1\u7406"}, {"PM_TASKS_PENDING", "\u5f85\u5904\u7406\u7684\u4efb\u52a1"}, {"PM_LAST_LOG", "\u6700\u540e\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee"}, {"PM_SAS_CONFIG_INFO", "SA \u914d\u7f6e\u4fe1\u606f"}, {"PM_SAS_DEFINED", "\u5b9a\u4e49\u7684 SA"}, {"PM_SAS_ENABLED", "\u542f\u7528\u7684 SA"}, {"PM_SAS_AVAILABLE", "\u53ef\u7528\u7684 SA"}, {"PM_SAS_REMAINING", "\u5269\u4f59\u7684 SA"}, {"PM_SAS_INTERCONNECTED", "\u4e92\u8fde\u7684 SA"}, {"PM_AGENT_ASSIGNED", "\u5206\u914d\u7684\u4ee3\u7406"}, {"PM_PRIMARY_AGENT", "\u4e3b\u8981\u4ee3\u7406"}, {"PM_STANDBY_AGENT", "\u5907\u7528\u4ee3\u7406"}, {"PM_TUNNEL_MGMT", "\u7ba1\u7406\u6a21\u5f0f"}, {"PM_FW_ADDED_TO_GMS", "\u8bbe\u5907\u88ab\u6dfb\u52a0\u5230 SonicWall GMS \u7684\u65f6\u95f4"}, {"PM_FW_UP_SINCE", "\u8bbe\u5907\u8fd0\u884c\u65f6\uff0c\u81ea"}, {"PM_FW_DOWN_SINCE", "\u8bbe\u5907\u5173\u95ed\u65f6\uff0c\u81ea"}, {"PM_SW_IP", "SonicWall IP"}, {"PM_TIME_ZONE", "\u65f6\u533a"}, {"PM_SW_IN_SYSTEM", "\u5728\u7cfb\u7edf\u4e2d"}, {"PM_SW_IN_DMZ", "\u5728 DMZ \u4e2d"}, {"PM_SW_IN_GROUP", "\u5728\u7ec4\u4e2d"}, {"PM_SW_UNREGISTERED", "\u672a\u6ce8\u518c"}, {"PM_SW_VPN_UPGRADE", "\u901a\u8fc7 VPN \u5347\u7ea7"}, {"PM_SW_VPN_CLIENT", "\u901a\u8fc7\u5168\u5c40 VPN \u5ba2\u6237\u7aef\u5347\u7ea7"}, {"PM_SW_MSSP", "\u652f\u6301 MSSP"}, {"PM_CFL_SUBSCRIPTION", "\u5185\u5bb9\u8fc7\u6ee4\u5668\u5217\u8868/\u670d\u52a1"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "\u9632\u75c5\u6bd2"}, {"PM_HGMS_SUBSCRIPTION", "\u4e91\u670d\u52a1"}, {"PM_SUPPORT_SUBSCRIPTION", "\u652f\u6301 "}, {"PM_EXTENDED_WARRANTY", "\u5ef6\u957f\u4fdd\u4fee"}, {"PM_UNITS_DOWN", "\u5173\u95ed\u7684 SonicWall"}, {"PM_PENDING_TASKS", "\u6709\u5f85\u5904\u7406\u4efb\u52a1\u7684 SonicWall"}, {"PM_MANAGED_WITH_TUNNEL", "\u4f7f\u7528\u7ba1\u7406\u96a7\u9053\u7ba1\u7406\u7684 SonicWall"}, {"PM_TASK_SPOOLED", "\u4efb\u52a1\u5df2\u540e\u53f0\u5904\u7406\u4ee5\u66f4\u6539\u4e3b\u673a\u540d\u3002"}, {"PM_RAVLIN_MODEL", "Ravlin \u578b\u53f7"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/\u5e8f\u5217\u53f7"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "\u56fa\u4ef6\u7248\u672c"}, {"PM_HW_VERSION", "\u786c\u4ef6\u7248\u672c"}, {"PM_ROM_VERSION", "ROM \u7248\u672c"}, {"PM_SECURITY_ID", "\u5b89\u5168 ID"}, {"PM_RAVLIN_STATUS", "Ravlin \u72b6\u6001"}, {"PM_TASKS_PENDING", "\u5f85\u5904\u7406\u7684\u4efb\u52a1"}, {"PM_AGENT_ASSIGNED", "\u5206\u914d\u7684\u4ee3\u7406"}, {"PM_RAVLINS_IN_NODE", "\u8282\u70b9\u4e2d\u7684 Ravlin"}, {"PM_RAVLINS_DOWN", "\u5173\u95ed\u7684 Ravlin"}, {"PM_RAVLINS_PENDING_TASKS", "\u6709\u5f85\u5904\u7406\u4efb\u52a1\u7684 Ravlin"}, {"PM_FIX_UNIT_ERROR", "\u4fee\u590d\u8bbe\u5907\u65f6\u53d1\u751f\u9519\u8bef "}, {"PM_MOD_UNIT_EXISTS", "\u4fee\u6539\u7684\u8bbe\u5907\u5df2\u7ecf\u5b58\u5728\uff0c\u5e8f\u5217\u53f7\u4e3a"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "\u5df2\u7ecf\u5b58\u5728\u540d\u4e3a"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "\u7684\u4fee\u6539\u7684\u8bbe\u5907 "}, {"PM_ADD_ERR_PRIVILEGES", "\u9519\u8bef\uff1a\u60a8\u6ca1\u6709\u8db3\u591f\u7684\u6743\u9650\u6dfb\u52a0\u8bbe\u5907\u3002"}, {"PM_UNIT_EXISTS", "\u8bbe\u5907\u5df2\u7ecf\u5b58\u5728\uff0c\u5e8f\u5217\u53f7\u4e3a"}, {"PM_UNIT_NAME_EXISTS_A", "\u57df\u4e2d\u5df2\u7ecf\u5b58\u5728\u540d\u4e3a"}, {"PM_UNIT_NAME_EXISTS_B", "\u7684\u8bbe\u5907 "}, {"PM_ADD_UNIT_ERR", "\u5c06\u8bbe\u5907\u6dfb\u52a0\u5230 SonicWall \u6570\u636e\u5e93\u65f6\u51fa\u9519\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "\u8bf7\u8f93\u5165\u4e00\u4e2a\u6709\u6548\u7684\u5e8f\u5217\u53f7\u3002\n\u5e8f\u5217\u53f7\u957f\u5ea6\u5e94\u4e3a "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "\u4e2a\u5b57\u7b26\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "\u5e8f\u5217\u53f7\u5e94\u4ec5\u5305\u542b\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u3002"}, {"PM_GET_PREFS_ERR", "\u68c0\u7d22\u9996\u9009\u9879\u6587\u4ef6\u65f6\u51fa\u9519\u3002"}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "\u672a\u5bf9\u4e91\u670d\u52a1\u6388\u6743\u8bbe\u5907\u3002\n\u8bf7\u5148\u4ece MySonicWall.com \u6388\u6743\u4ee5\u4e0b\u4efb\u4f55\u670d\u52a1\uff0c\u7136\u540e\u518d\u5c06\u8bbe\u5907\u6dfb\u52a0\u5230 "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " \u65e0\u6cd5\u83b7\u53d6\u6b64\u8bbe\u5907\u7684\u8bb8\u53ef\u4fe1\u606f\u3002\n\u8bf7\u7a0d\u5019\u518d\u8bd5\u3002"}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " \u65e0\u6cd5\u4e0e MySonicWall.com \u8fdb\u884c\u901a\u4fe1\u6765\u9a8c\u8bc1\u6b64\u8bbe\u5907\u7684\u8bb8\u53ef\u8bc1\u3002\n\u8bf7\u7a0d\u540e\u518d\u8bd5\u3002"}, {"PM_LICENSED", "\u5df2\u8bb8\u53ef"}, {"PM_NOT_LICENSED", "\u672a\u8bb8\u53ef"}, {"PM_IS_MSSP", "MSSP \u8bbe\u5907"}, {"PM_SYSLOG_FORMAT", "Syslog \u683c\u5f0f"}, {"PM_STATUS_MSG_ONLY", "\u4ec5\u72b6\u6001\u6d88\u606f"}, {"PM_SYSLOG_IN_UTC", "UTC \u4e2d\u7684\u65e5\u5fd7"}, {"PM_VIEWPOINT_MODE", "Analyzer \u6a21\u5f0f\u5df2\u542f\u7528"}, {"PM_NAME_RESOLUTION", "\u540d\u79f0\u89e3\u6790\u6a21\u5f0f"}, {"PM_ACCESS_MODE", "\u63a5\u5165\u6a21\u5f0f"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "\u5148 DNS \u540e NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"VM_PATCH_DETECTED_MSG1", "\u5df2\u68c0\u6d4b\u5230\u53ef\u7528\u7684\u65b0\u8f6f\u4ef6\u66f4\u65b0"}, {"VM_PATCH_DETECTED_MSG2", "\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u7ba1\u7406\u5458\u65b0\u8f6f\u4ef6\u66f4\u65b0\u4fe1\u606f\u65f6\u51fa\u9519\u3002SMTP \u6216\u7ba1\u7406\u5458\u7535\u5b50\u90ae\u4ef6\u672a\u914d\u7f6e\u3002"}, {"VM_PATCH_DETECTED_MSG3", "\u53ef\u7528\u7684\u8f6f\u4ef6\u66f4\u65b0\n\n"}, {"VM_NEW", "\u65b0 "}, {"VM_PATCH_DETECTED_MSG4", "\u6709\u5173\u53d1\u884c\u8bf4\u660e\u548c\u4e0b\u8f7d\u4fe1\u606f\uff0c\u8bf7\u767b\u5f55\u5230 <a href=https://www.mysonicwall.com>MySonicWall.com</a> \u5e10\u6237"}, {"VM_SCREEN", "\u5c4f\u5e55\u3002"}, {"VM_PATCH_DETECTED_MSG5", "\u7ec4\u4ef6\u4fee\u8865\u7a0b\u5e8f\u66f4\u65b0\u68c0\u67e5\u6210\u529f\u3002\u5df2\u627e\u5230\u65b0\u7ec4\u4ef6\u66f4\u65b0\u3002\u7535\u5b50\u90ae\u4ef6\u5df2\u53d1\u9001\u7ed9\u7ba1\u7406\u5458\u3002"}, {"VM_PATCH_DETECTED_MSG6", "\u65e0\u6cd5\u4e0b\u8f7d\u4fee\u8865\u7a0b\u5e8f\u66f4\u65b0 "}, {"VM_FOR", "\u7528\u4e8e "}, {"VM_ON", "\u4e8e "}, {"VM_PATCH_DETECTED_MSG7", "\u7ec4\u4ef6\u4fee\u8865\u7a0b\u5e8f\u4e0b\u8f7d\u5df2\u4e2d\u6b62\u3002\u4fee\u8865\u7a0b\u5e8f\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff1a "}, {"VM_PATCH_DETECTED_MSG8", "\u7ec4\u4ef6\u4fee\u8865\u7a0b\u5e8f\u4e0b\u8f7d\u6210\u529f\uff1a "}, {"VM_PATCH_DETECTED_MSG9", "\u5c06\u4fee\u8865\u7a0b\u5e8f\u6587\u4ef6 "}, {"VM_PATCH_DETECTED_MSG10", "\u5199\u5165\u5230\u78c1\u76d8\u65f6\u51fa\u9519\u3002"}, {"SDM_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f\u3002"}, {"SDM_UPDATE_FAILURE", "\u66f4\u65b0\u5931\u8d25\u3002"}, {"SDM_UPDATE_SPECIAL_FAILURE", "\u65e0\u6cd5\u521b\u5efa\u4efb\u52a1\u4ee5\u5220\u9664 SA\u3002"}, {"SDM_UPDATE_INVALID", "\u66f4\u65b0\u8bf7\u6c42\u65e0\u6548\u3002"}, {"SDM_SCREEN_ID_INVALID", "\u5c4f\u5e55 ID \u65e0\u6548"}, {"SDM_READY", "\u5c31\u7eea"}, {"SDM_CGI_ERROR", "\u83b7\u53d6\u4ee5\u4e0b\u9879\u7684 CGI_NAME \u65f6\u51fa\u9519 "}, {"SDM_DEFAULT_ERROR", "\u83b7\u53d6\u4ee5\u4e0b\u9879\u7684 DEFAULT_VALUE \u65f6\u51fa\u9519 "}, {"SDM_INVALID_TARGET", "\u9519\u8bef\uff1a\u6e90\u6216\u76ee\u6807\u7ec4\u65e0\u6548\u3002"}, {"SDM_METADATA_ERROR", "\u83b7\u53d6\u4ee5\u4e0b\u9879\u7684\u5143\u6570\u636e\u65f6\u51fa\u9519 "}, {"SDM_DB_ERROR", "\u8bbf\u95ee SonicWall GMS \u6570\u636e\u5e93\u65f6\u51fa\u9519\u3002"}, {"SDM_NOVPN_ERROR", "\u6b64\u8bbe\u5907\u4e2d\u6ca1\u6709\u542f\u7528 VPN\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NO_TARGET_VPN_ERROR", "\u76ee\u6807\u4e2d\u6ca1\u6709\u542f\u7528 VPN\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NOSAS_ERROR", "\u6b64\u8bbe\u5907\u4e2d\u6ca1\u6709\u5269\u4f59\u7684 SA \u53ef\u7528\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NO_TARGET_SAS_ERROR", "\u76ee\u6807\u4e2d\u6ca1\u6709\u5269\u4f59\u7684 SA \u53ef\u7528\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NO_UNITS_ERROR", "\u6ca1\u6709\u521b\u5efa\u4efb\u4f55\u4efb\u52a1\u3002"}, {"SDM_NO_3RDPARTYCERTS_ERROR", "\u672a\u627e\u5230\u6709\u6548\u7684\u7b2c\u4e09\u65b9\u672c\u5730/CA \u8bc1\u4e66\u7ec4\u5408\u3002\u8df3\u8fc7 VPN SA \u5230\u8bbe\u5907 "}, {"SDM_DHCP_ERROR", "\u52a8\u6001\u5bfb\u5740\u5728\u6e90\u548c\u76ee\u6807\u8bbe\u5907\u4e0a\u5747\u5df2\u542f\u7528\uff0c\u56e0\u6b64\u65e0\u6cd5\u521b\u5efa SA\u3002\u8df3\u8fc7 VPN SA \u521b\u5efa\u3002 "}, {"SDM_NOAES_ERROR", "AES \u5728\u8bbe\u5907\u4e2d\u4e0d\u53ef\u7528\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NO_TARGET_AES_ERROR", "AES \u5728\u76ee\u6807\u4e2d\u4e0d\u53ef\u7528\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_DELETE_SUCCESS", "\u5220\u9664\u6210\u529f "}, {"SDM_DELETE_FAILURE", "\u5220\u9664\u5931\u8d25 "}, {"SDM_AGENTNAME_INVALID", "\u4ee3\u7406\u540d\u79f0\u4e2d\u7684\u65e0\u6548\u5b57\u7b26 [<,\\,:,',@,#,*,$]\u3002"}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "\u589e\u5f3a\u578b\u4e92\u8fde VPNS SA \u7684\u4efb\u52a1\u521b\u5efa\u5931\u8d25"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "\u4ee5\u4e0b\u9879\u7684\u7ec4\u66f4\u65b0\u5931\u8d25 "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "\u589e\u5f3a\u578b\u4e92\u8fde VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "\u6807\u51c6\u4e92\u8fde VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "\u589e\u5f3a\u578b\u975e\u4e92\u8fde VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "\u6807\u51c6\u975e\u4e92\u8fde VPN SA"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "\u8df3\u8fc7\u6b64\u8bbe\u5907\u7684 SA \u521b\u5efa\uff0c\u539f\u56e0\u662f\u6b64\u8bbe\u5907\u4e0a\u7684\u56fa\u4ef6\u7248\u672c\u4e0d\u652f\u6301\u96a7\u9053\u63a5\u53e3\u7c7b\u578b"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "\u5b89\u6392\u4efb\u52a1\u5728\u4ee5\u4e0b\u9879\u4e0a\u6267\u884c"}, {"PASSWORD_CHANGED", "SonicWall GMS \u5bc6\u7801\u66f4\u6539\u6210\u529f\u3002"}, {"PASSWORD_NOT_CHANGED_A", "\u6307\u5b9a\u7684\u65e7\u5bc6\u7801\u4e0d\u6b63\u786e\u3002<BR>"}, {"PASSWORD_NOT_CHANGED_B", "\u5bc6\u7801\u672a\u66f4\u6539\u3002"}, {"PASSWORD_NOT_CHANGED", "\u6307\u5b9a\u7684\u65e7\u5bc6\u7801\u4e0d\u6b63\u786e\u3002\u5bc6\u7801\u672a\u66f4\u6539\u3002"}, {"LOGS_PASSWD_CHANGED", "\u7528\u6237\u767b\u5f55\u5bc6\u7801\u5df2\u6210\u529f\u66f4\u6539 "}, {"LOGS_PASSWD_NOT_CHANGED", "\u7cfb\u7edf\u65e0\u6cd5\u9a8c\u8bc1\u7528\u6237\u4ee5\u66f4\u6539\u767b\u5f55\u5bc6\u7801 "}, {"LOGS_ADDED_NEW_USER", "\u6dfb\u52a0\u5230 SonicWall GMS \u6570\u636e\u5e93\u7684\u65b0\u7528\u6237: "}, {"LOGS_ADDED_NEW_USER_TYPE", "\u6dfb\u52a0\u5230 SonicWall GMS \u6570\u636e\u5e93\u7684\u65b0\u7528\u6237\u7c7b\u578b: "}, {"LOGS_DELETED_USER", "\u4ece SonicWall GMS \u6570\u636e\u5e93\u4e2d\u5220\u9664\u7684\u7528\u6237\u548c\u76f8\u5e94\u4fe1\u606f: "}, {"LOGS_DELETED_GROUP", "\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u7ec4\u4ee5\u53ca\u4f7f\u7528\u6b64\u81ea\u5b9a\u4e49\u7ec4\u7684\u6240\u6709\u89c6\u56fe\u5df2\u4ece SonicWall GMS \u6570\u636e\u5e93\u4e2d\u5220\u9664: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "\u81ea\u5b9a\u4e49\u5c5e\u6027\u503c ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") \u5e94\u4ec5\u5305\u542b\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26"}, {"LOGS_ADD_CUSTOM_GROUP", "\u5c06\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u7fa4\u7ec4\u540d\u79f0/\u9ed8\u8ba4\u503c\u6dfb\u52a0\u5230\u7cfb\u7edf\u4e2d\uff1a "}, {"LOGS_MOD_CUSTOM_GROUP", "\u4fee\u6539\u4e86\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u7fa4\u7ec4\u540d\u79f0/\u9ed8\u8ba4\u503c\uff1a "}, {"LOGS_DEL_CUSTOM_GROUP", "\u5df2\u4ece\u7cfb\u7edf\u4e2d\u5220\u9664\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u7ec4\uff1a "}, {"READY", "\u5c31\u7eea"}, {"NAV_OF", "/ "}, {"NAV_PREVIOUS", "\u4e0a\u4e00\u6b65"}, {"NAV_NEXT", "\u4e0b\u4e00\u6b65"}, {"NAV_DISPLAYING", "\u663e\u793a"}, {"NAV_FIREWALLS", "Firewall"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u66f4\u65b0\u6743\u9650\u3002"}, {"ACT_WRONG_FILE_FORMAT", "\u9519\u8bef\uff1a\u6587\u4ef6\u683c\u5f0f\u9519\u8bef\uff0c\u65e0\u6cd5\u6dfb\u52a0\u4ee3\u7801\u3002"}, {"AUTH_INVALID_PARAMS", "\u53c2\u6570\u65e0\u6548\uff0c\u8bf7\u91cd\u8bd5"}, {"AUTH_AUTHENTICATE", "\u9a8c\u8bc1"}, {"AUTH_PERFORM_LOGIN", "\u6267\u884c\u767b\u5f55"}, {"AUTH_RANDOM_TIMEOUT", "\u767b\u5f55\u968f\u673a\u6570\u5df2\u8d85\u65f6"}, {"AUTH_LOGIN_TIMEOUT", "\u767b\u5f55\u9875\u9762\u5df2\u8d85\u65f6\uff0c\u8bf7\u91cd\u8bd5"}, {"AUTH_LOGIN_FAILURE", "\u767b\u5f55\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5"}, {"AUTH_LOGIN_FAILURE_LOG", "\u767b\u5f55\u5931\u8d25"}, {"NO_DOMAIN_SPECIFIED", "\u6ca1\u6709\u6307\u5b9a\u7528\u4e8e\u767b\u5f55\u7684\u57df\u540d"}, {"SPECIFY_DOMAIN", "\u8bf7\u6307\u5b9a\u7528\u4e8e\u767b\u5f55\u7684\u57df\u540d"}, {"INVALID_IP", "[CN]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "\u57df\u65e0\u6548\u3002\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u57df\u540d"}, {"INVALID_ALIAS_MSG", "\u522b\u540d\u65e0\u6548\u3002\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u522b\u540d"}, {"REMOTE_SUCCESSFUL_LOGIN", "\u901a\u8fc7\u4ee5\u4e0b\u7528\u6237\u6210\u529f\u767b\u5f55\u5230\u7cfb\u7edf\uff1a "}, {"REMOTE_FAILED_LOGIN", "\u4ee5\u4e0b\u7528\u6237\u7684\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\uff1a "}, {"XML_REMOTE_FAILED_LOGIN", "\u4ee5\u4e0b\u7528\u6237\u57fa\u4e8e XML \u7684\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\uff1a "}, {"NEW_USER_ADDED", "\u6dfb\u52a0\u7684\u65b0\u7528\u6237\uff1a "}, {"TO_USER_TYPE", "\u7528\u6237\u7c7b\u578b\uff1a "}, {"CLICK_TO_TRY_AGAIN", "\u5355\u51fb\u6b64\u5904\u91cd\u8bd5"}, {"USER_LOCKED_OUT", "\u7528\u6237\u5df2\u9501\u5b9a\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u4ee5\u83b7\u53d6\u8be6\u7ec6\u4fe1\u606f"}, {"USER_DISABLED", "\u7528\u6237\u5e10\u6237\u5df2\u7981\u7528\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u4ee5\u83b7\u53d6\u8be6\u7ec6\u4fe1\u606f"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\u3002\u8bf7\u8054\u7cfb GMS \u7ba1\u7406\u5458\u3002"}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\u3002\u8bf7\u8054\u7cfb GMS \u7ba1\u7406\u5458\u6216\u91cd\u8bd5\u3002"}, {"LDAP_AUTH_FAILED", "\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25"}, {"LDAP_USER_NOT_FOUND", "\u4ee5\u4e0b\u76ee\u5f55\u4e2d\u7528\u6237\u672a\u627e\u5230\u6216\u4e0d\u5b58\u5728"}, {"LDAP_INVALID_CREDENTIALS", "\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\uff1a\u51ed\u8bc1\u65e0\u6548"}, {"LDAP_COMMUNICATION_ERROR", "\u65e0\u6cd5\u4e0e\u76ee\u5f55\u6216\u547d\u540d\u670d\u52a1\u8fdb\u884c\u901a\u4fe1"}, {"LDAP_ANONYMOUS_BIND_SET", "\u533f\u540d\u7ed1\u5b9a\u8bbe\u7f6e\u4e3a\u5141\u8bb8\u7528\u4e8e\u8be5\u57df "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "\u68c0\u67e5\u8fdc\u7a0b\u670d\u52a1\u5668\u662f\u5426\u5141\u8bb8\u533f\u540d\u7ed1\u5b9a\u3002"}, {"LDAP_INVALID_GROUPS_SPECIFIED", "\u6307\u5b9a\u7684\u76ee\u5f55\u7ec4\u65e0\u6548\u3002\u8bf7\u8054\u7cfb GMS \u7ba1\u7406\u5458\u3002"}, {"LDAP_INVALID_GROUP_MEMBER", "\u7528\u6237\u5e76\u975e\u5141\u8bb8\u7684\u76ee\u5f55\u7ec4\u7684\u6210\u5458\u3002"}, {"RADIUS_UNKNOWN_HOST", "RADIUS \u670d\u52a1\u5668\u4e3b\u673a\u672a\u77e5\u3002"}, {"RADIUS_CONNECTION_TIMEOUT", "\u4e0e\u8fdc\u7a0b RADIUS \u670d\u52a1\u5668\u7684\u8fde\u63a5\u8d85\u65f6"}, {"RADIUS_FAILED_LOGIN", "\u9a8c\u8bc1\u5931\u8d25\u3002\u51ed\u8bc1\u65e0\u6548\u3002"}, {"RADIUS_EXCEPTION", "\u53d1\u751f RADIUS \u5f02\u5e38\u3002"}, {"RADIUS_INVALID_GROUP_MEMBER", "\u7528\u6237\u5e76\u975e\u5141\u8bb8\u7684 RADIUS \u7ec4\u7684\u6210\u5458\u3002"}, {"PWD_CHANGE_SCREEN", "\u66f4\u6539\u5bc6\u7801\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "\u66f4\u6539\u5bc6\u7801\uff0c\u539f\u56e0\u662f\u5176\u957f\u5ea6\u4e0d\u5728\u5141\u8bb8\u7684\u8303\u56f4\u5185\uff1a7 - 15 \u4e2a\u5b57\u7b26\u3002"}, {"PWD_VALIDATION_FAILURE", "\u66f4\u6539\u5bc6\u7801\uff0c\u539f\u56e0\u662f\u5176\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 15 \u4e2a\u5b57\u7b26\u3002"}, {"PWD_EXPIRATION", "\u5bc6\u7801\u9700\u8981\u6bcf {0} \u5929\u66f4\u6539\u4e00\u6b21"}, {"PWD_CHANGE_NEXT_LOGIN", "\u901a\u8fc7\u7ba1\u7406\u5458\u5f3a\u5236\u66f4\u6539\u5bc6\u7801\u3002"}, {"PASSWORD_EXISTS", "[CN]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[CN]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[CN]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "\u65e0\u6cd5\u8bfb\u53d6\u8bb8\u53ef\u8bc1\u6587\u4ef6"}, {"CUI_UPGRADE_SUCCESS", "\u5347\u7ea7\u6210\u529f"}, {"CUI_UPGRADE_FAIL", "\u5347\u7ea7\u5931\u8d25\uff1a "}, {"CUI_SYNCH_SUCCESS", "\u540c\u6b65\u6210\u529f"}, {"CUI_SYNCH_FAIL", "\u540c\u6b65\u5931\u8d25\uff1a "}, {"CUI_PRORATE_SUCCESS", "\u6309\u6bd4\u4f8b\u5206\u914d\u8bf7\u6c42\u6210\u529f"}, {"CUI_PRORATE_FAIL", "\u6309\u6bd4\u4f8b\u5206\u914d\u8bf7\u6c42\u5931\u8d25\uff1a "}, {"CUI_CHANGE_PW_SUCCESS", "\u6210\u529f\u3002MySonicWall.com \u63a5\u53d7\u4e86\u5bc6\u7801\u3002"}, {"CUI_CHANGE_PW_FAIL", "\u5931\u8d25\u3002MySonicWall.com \u4e0d\u63a5\u53d7\u5bc6\u7801\uff1a "}, {"CUI_EMAIL_SUCCESS", "\u5df2\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5c06\u6280\u672f\u652f\u6301\u8868\u5355\u53d1\u9001\u81f3 SonicWall GMS \u652f\u6301\u4e2d\u5fc3\u3002"}, {"CUI_EMAIL_FAIL", "\u5c06\u6280\u672f\u652f\u6301\u62a5\u544a\u53d1\u9001\u81f3 SonicWall GMS \u652f\u6301\u4e2d\u5fc3\u65f6\u51fa\u73b0\u95ee\u9898\u3002<br>\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002"}, {"CUI_SESSION_TERMINATED", " \u4f1a\u8bdd\u5df2\u6210\u529f\u7ec8\u6b62\u3002"}, {"CUI_SESSIONS_TERMINATED", "\u4f1a\u8bdd\u5df2\u6210\u529f\u7ec8\u6b62\u3002"}, {"CUI_NO_AGENTS", "\u672a\u627e\u5230\u4ee3\u7406\u3002"}, {"CUI_FILTER_ADDED", "\u6210\u529f\u6dfb\u52a0\u65b0\u8fc7\u6ee4\u5668 "}, {"DIAG_DIAG_REQUEST_A", "\u5bf9\u4ee5\u4e0b\u9879\u8fdb\u884c\u7684\u8bca\u65ad\u8bf7\u6c42 "}, {"DIAG_DIAG_REQUEST_B", "\u5df2\u63d0\u4ea4\u3002"}, {"DIAG_DELETE_SUCCESS", "\u5220\u9664\u6210\u529f\u3002"}, {"DIAG_EMAIL_SUCCESS", "\u7535\u5b50\u90ae\u4ef6\u6210\u529f\u53d1\u9001\u3002"}, {"DIAG_UNIT_UNKNOWN", "\u201c\u8bbe\u5907\u540d\u79f0\u672a\u77e5\u201d"}, {"DIAG_UNIT", "\u8bbe\u5907 "}, {"VPN_DUPLICATE_UFI", "\u66f4\u65b0\u5931\u8d25\u3002\u552f\u4e00\u7684\u9632\u706b\u5899\u6807\u793a\u7b26\u5728 SonicWall GMS \u4e2d\u4e0d\u552f\u4e00\u3002"}, {"NO_LOGS_MESSAGE", "\u672a\u627e\u5230\u65e5\u5fd7\u3002"}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "\u6ca1\u6709\u627e\u5230\u7b26\u5408\u63d0\u4f9b\u7684\u641c\u7d22\u6761\u4ef6\u7684\u65e5\u5fd7\u3002"}, {"LOG_START_SEARCH", "\u5f00\u59cb\u65b0\u641c\u7d22"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "\u60a8\u67e5\u8be2\u7684 {0,number,integer} \u6761\u8bb0\u5f55\u592a\u5927\u3002\u8bf7\u9650\u5236\u60a8\u7684\u641c\u7d22\u6761\u4ef6\u3002"}, {"SQL_EXCEPTION_ERROR_MESSAGE", "\u6570\u636e\u5e93\u8fde\u63a5\u4e2d\u51fa\u9519\u3002\u8bf7\u786e\u4fdd\u6570\u636e\u5e93\u53ef\u7528\u5e76/\u6216\u9650\u5236\u60a8\u7684\u641c\u7d22\u6761\u4ef6\u3002"}, {"UNKNOWN_EXCEPTION_MESSAGE", "\u6267\u884c\u641c\u7d22\u65f6\u51fa\u9519\u3002\u8bf7\u786e\u4fdd\u6570\u636e\u5e93\u53ef\u7528\u5e76/\u6216\u9650\u5236\u60a8\u7684\u641c\u7d22\u6761\u4ef6\u3002"}, {"LOG_NEXT", "\u4e0b\u4e00\u6b65"}, {"LOG_PREVIOUS", "\u4e0a\u4e00\u6b65"}, {"LOG_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f"}, {"LOG_OF", "/ "}, {"LOG_OF", "/ "}, {"PREFS_SYNCHRONIZE_STARTED", "\u4e0e\u542f\u52a8\u7684\u8bbe\u5907\u540c\u6b65\u4fe1\u606f\u6210\u529f\u3002"}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "\u540c\u6b65\u8bbe\u5907\u4fe1\u606f\u5931\u8d25\uff0c\u65e0\u6cd5\u767b\u5f55\u5230\u8bbe\u5907\u3002"}, {"MON_NO_PRIVILEGES", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u8db3\u591f\u6743\u9650"}, {"MON_SYNC_TASK_CREATED", "\u521b\u5efa\u540c\u6b65\u4efb\u52a1\u6210\u529f"}, {"MON_SYNC_TASK_FAIL", "\u521b\u5efa\u540c\u6b65\u4efb\u52a1\u5931\u8d25"}, {"MON_RENEGOTIATE_TASK_CREATED", "\u521b\u5efa\u91cd\u65b0\u534f\u5546\u4efb\u52a1\u6210\u529f"}, {"MON_RENEGOTIATE_FAILED", "\u521b\u5efa\u91cd\u65b0\u534f\u5546\u4efb\u52a1\u5931\u8d25"}, {"MON_NO_SELECTED", "\u6ca1\u6709\u9009\u5b9a\u7528\u4e8e\u91cd\u65b0\u534f\u5546\u7684\u96a7\u9053"}, {"MON_REFRESH_CREATED", "\u521b\u5efa\u5237\u65b0\u7edf\u8ba1\u4efb\u52a1\u6210\u529f"}, {"MON_REFRESH_FAIL", "\u521b\u5efa\u96a7\u9053\u7edf\u8ba1\u7684\u5237\u65b0\u4efb\u52a1\u5931\u8d25"}, {"MON_NO_SELECTED_REFRESH", "\u6ca1\u6709\u9009\u5b9a\u7528\u4e8e\u5237\u65b0\u7edf\u8ba1\u7684\u96a7\u9053"}, {"MON_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f"}, {"MON_UPDATE_FAIL", "\u66f4\u65b0\u5931\u8d25"}, {"MON_NO_MONITORING", "\u65e0\u6cd5\u76d1\u89c6\u96a7\u9053\u3002"}, {"MON_NAME", "\u540d\u79f0"}, {"MON_GATEWAY", "\u7f51\u5173"}, {"MON_LAST_UPDATED", "\u6700\u540e\u66f4\u65b0\u65f6\u95f4"}, {"MON_DEST_ADDR_RANGE", "\u76ee\u6807\u5730\u5740\u8303\u56f4"}, {"MON_LOCAL_ADDR_RANGE", "\u672c\u5730\u5730\u5740\u8303\u56f4"}, {"MON_NO_TUNNELS_FOUND", "\u672a\u627e\u5230\u96a7\u9053\u3002"}, {"MON_TITLE", "VPN \u96a7\u9053\u7edf\u8ba1"}, {"MON_DESCRIPTION", "\u8bf4\u660e"}, {"MON_VALUE", "\u503c"}, {"MON_CREATE_TIME", "\u521b\u5efa\u65f6\u95f4"}, {"MON_VALID_UNTIL", "\u96a7\u9053\u6709\u6548\u671f\u81f3"}, {"MON_PACKETS_IN", "\u8f93\u5165\u6570\u636e\u5305\u6570"}, {"MON_PACKETS_OUT", "\u8f93\u51fa\u6570\u636e\u5305\u6570"}, {"MON_BYTES_IN", "\u8f93\u5165\u5b57\u8282\u6570"}, {"MON_BYTES_OUT", "\u8f93\u51fa\u5b57\u8282\u6570"}, {"MON_FRAGMENTS_IN", "\u8f93\u5165\u5df2\u5206\u5272\u6570\u636e\u5305\u6570"}, {"MON_FRAGMENTS_OUT", "\u8f93\u51fa\u5df2\u5206\u5272\u6570\u636e\u5305\u6570"}, {"MON_TUNNEL_ACTIVE", "\u96a7\u9053\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001"}, {"REG_NO_PERMISSION", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u66f4\u65b0\u6743\u9650"}, {"REG_ERROR_RETRIEVING_COUNT", "\u68c0\u7d22\u6ce8\u518c/\u672a\u6ce8\u518c\u8bbe\u5907\u7684\u8ba1\u6570\u65f6\u51fa\u9519"}, {"REG_CURRENT", "\u5f53\u524d"}, {"REG_EXPIRED", "\u8fc7\u671f"}, {"REG_NO_LICENSE", "\u65e0\u8bb8\u53ef\u8bc1"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "\u65e0\u6cd5\u4e0a\u4f20\u56fa\u4ef6\u6620\u50cf"}, {"TASKS_SUCCESSFUL_DELETION", "\u4efb\u52a1\u5df2\u4ece\u6570\u636e\u5e93\u6210\u529f\u5220\u9664\u3002"}, {"TASKS_ERROR_DELETION", "\u9519\u8bef\uff1a\u65e0\u6cd5\u5220\u9664\u4efb\u52a1\u3002"}, {"TASKS_EXECUTION_SET", "\u4efb\u52a1\u5df2\u6210\u529f\u8bbe\u7f6e\u4e3a\u7acb\u5373\u6267\u884c\u3002"}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\u7684\u672a\u6388\u6743\u5c1d\u8bd5"}, {"TASKS_ERROR_EXECUTION", "\u9519\u8bef\uff1a\u65e0\u6cd5\u5b89\u6392\u6267\u884c\u7684\u4efb\u52a1\u3002"}, {"TASK_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u4efb\u52a1\u5df2\u88ab\u7528\u6237\u5220\u9664 "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "\u5220\u9664\u4ee5\u4e0b\u4efb\u52a1\u7684\u672a\u6388\u6743\u5c1d\u8bd5"}, {"NO_TASKS_MESSAGE", "\u672a\u627e\u5230\u4efb\u52a1\u3002"}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "\u6ca1\u6709\u627e\u5230\u7b26\u5408\u63d0\u4f9b\u7684\u641c\u7d22\u6761\u4ef6\u7684\u4efb\u52a1\u3002"}, {"TASKS_RESCHEDULED", "\u4efb\u52a1\u5df2\u6210\u529f\u91cd\u65b0\u5b89\u6392\u3002"}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "\u91cd\u65b0\u5b89\u6392\u4ee5\u4e0b\u4efb\u52a1\u7684\u672a\u6388\u6743\u5c1d\u8bd5"}, {"TASKS_ERROR_RESCHEDULE", "\u9519\u8bef\uff1a\u65e0\u6cd5\u91cd\u65b0\u5b89\u6392\u4efb\u52a1\u3002"}, {"IMMEDIATE_STRING", "\u7acb\u5373"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "\u672c\u5730"}, {"AGENT_STRING", "\u4ee3\u7406"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "\u4ee5\u4e0b\u4efb\u52a1\u5df2\u88ab\u7528\u6237\u91cd\u65b0\u5b89\u6392 "}, {"FROM_LOG_MESSAGE", "\u4ece "}, {"TO_LOG_MESSAGE", "\u5230 "}, {"IMMEDIATE_LOG_MESSAGE", "\u7acb\u5373\u6267\u884c"}, {"REG_PASSWORD_SUCCESS", "\u6210\u529f\u3002MySonicWall.com \u63a5\u53d7\u4e86\u5bc6\u7801\u3002\u6309\u66f4\u65b0\u4ee5\u7ee7\u7eed\u3002"}, {"REG_PASSWORD_FAIL", "\u5931\u8d25\u3002MySonicWall.com \u4e0d\u63a5\u53d7\u5bc6\u7801\uff1a "}, {"LOGIN_MESSAGE", "\u8bf7\u767b\u5f55"}, {"LOGIN_DEFAULT_MESSAGE", "\u4f7f\u7528\u9ed8\u8ba4\u7528\u6237\u201cadmin\u201d\u548c\u5bc6\u7801\u201cpassword\u201d\u767b\u5f55"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "\u4f7f\u7528\u9ed8\u8ba4\u7528\u6237\u201cadmin\u201d\u548c\u4e0e\u8bbe\u5907\u76f8\u540c\u7684\u5bc6\u7801"}, {"LOGIN_DEMO_MESSAGE", "\u8bf7\u4f7f\u7528\u7528\u6237\u201cdemo\u201d\u548c\u5bc6\u7801\u201cpassword\u201d\u767b\u5f55"}, {"SETTINGSVPS_CHANGED", "\u60a8\u7684 Analyzer \u8bbe\u7f6e\u5df2\u66f4\u65b0\u3002"}, {"SETTINGS_CHANGED", "\u5df2\u66f4\u65b0\u60a8\u7684\u8bbe\u7f6e\u3002"}, {"LOGS_USER_FORCEDOUT", "\u5df2\u5f3a\u5236\u4ee5\u4e0b\u7528\u6237\u4ece\u7cfb\u7edf\u6ce8\u9500\uff1a "}, {"SLAVE_STATE_CHANGED_MESSAGE", "\u4ee3\u7406\u5df2\u6210\u529f\u914d\u7f6e\u4ee5\u66f4\u6539\u5176\u72b6\u6001\u3002"}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "\u5c1d\u8bd5\u5931\u8d25\uff1a\u4ee3\u7406\u72b6\u6001\u65e0\u6cd5\u66f4\u6539\u3002"}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "\u4ee3\u7406\u53c2\u6570\u5df2\u6210\u529f\u66f4\u65b0\u3002"}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "\u4ee3\u7406\u53c2\u6570\u65e0\u6cd5\u6210\u529f\u66f4\u65b0\u3002"}, {"SCHEDULER_UP_STATE", "\u8fd0\u884c"}, {"SCHEDULER_DOWN_STATE", "\u5173\u95ed"}, {"SCHEDULER_UNDETERMINED_STATE", "\u4e0d\u786e\u5b9a"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6ca1\u6709\u6743\u9650\u66f4\u65b0\u4ee3\u7406\u5c5e\u6027\u3002"}, {"SMTPSERVER_INVALID", "SMTP \u670d\u52a1\u5668\u5730\u5740\u65e0\u6548\u3002"}, {"APPLIANCE_MANAGE_FAILED", "\u65e0\u6cd5\u66f4\u6539\u8bbe\u5907\u7684\u7ba1\u7406\u9996\u9009\u9879\u3002"}, {"EMPTY_SMTP_PWD", "SMTP \u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a"}, {"TREE_AGENT_STARTED", "\u4e3b\u8981\u4ee3\u7406\u5e94\u5904\u4e8e\u542f\u52a8\u72b6\u6001\u624d\u80fd\u91cd\u65b0\u5206\u914d\u4ee3\u7406"}, {"TREE_STANDBY_STARTED", "\u5907\u7528\u4ee3\u7406\u5e94\u5904\u4e8e\u542f\u52a8\u72b6\u6001\u624d\u80fd\u91cd\u65b0\u5206\u914d\u4ee3\u7406"}, {"TREE_LICENSE_EXCEEDED", "\u60a8\u6ca1\u6709\u6dfb\u52a0\u66f4\u591a\u8fdb\u884c\u7ba1\u7406\u7684\u8bbe\u5907\u7684\u8bb8\u53ef\u8bc1\u3002"}, {"TREE_IP_EMPTY", "IP \u4e0d\u80fd\u4e3a\u7a7a\u3002\u8bf7\u63d0\u4f9b\u4e00\u4e2a\u6709\u6548\u7684 IP \u5730\u5740"}, {"TREE_AUTH_FAIL", "\u8bbe\u5907\u9a8c\u8bc1\u5931\u8d25\uff1b\u8bf7\u786e\u8ba4\u8bbe\u7f6e\u3002"}, {"TREE_NO_RESPONSE", "\u8bbe\u5907\u4e0d\u53ef\u8bbf\u95ee\uff1b\u8bf7\u786e\u8ba4\u8bbe\u7f6e\u3002"}, {"TREE_FIREWALL_NOT_LICENSED", "\u8bbe\u5907\u6ca1\u6709 Analyzer \u8bb8\u53ef\u3002"}, {"TREE_FIREWALL_STATE_ERROR", "\u65e0\u6cd5\u68c0\u7d22\u8bbe\u5907\u72b6\u6001\u4fe1\u606f\u3002\n\u8bbe\u5907\u7684\u56fa\u4ef6\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u66f4\u65b0\u3002"}, {"TREE_MODEL_FAIL", "\u65e0\u6cd5\u68c0\u7d22\u578b\u53f7\u4fe1\u606f"}, {"TREE_FIRMWARE_VERSION_FAIL", "\u65e0\u6cd5\u68c0\u7d22\u56fa\u4ef6\u7248\u672c"}, {"TREE_UNMATCHED_SERIAL", "\u5e8f\u5217\u53f7\u4e0d\u5339\u914d\u3002"}, {"TREE_TIMEZONE_FAIL", "\u65e0\u6cd5\u68c0\u7d22\u65f6\u533a"}, {"TREE_UTC_FAIL", "\u65e5\u5fd7\u6d88\u606f\u5e76\u975e UTC \u683c\u5f0f\u3002\u8bf7\u5c06\u8bbe\u5907\u7684\u65f6\u95f4\u6233\u683c\u5f0f\u66f4\u6539\u4e3a UTC\uff0c\u5426\u5219\u751f\u6210\u7684\u62a5\u544a\u5c06\u663e\u793a\u9519\u8bef\u7684\u65f6\u95f4"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "\u8bf7\u5728\u201c\u65e5\u5fd7\u201d>ViewPoint \u5c4f\u5e55\u4e2d\u542f\u7528\u201c\u542f\u7528 ViewPoint \u8bbe\u7f6e\u201d\u9009\u9879\u3002\u6b64\u8bbe\u7f6e\u5c06\u66f4\u6539\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\t1.\u4ee5 UT\u683c\u5f0f\u53d1\u9001 Syslog\n\t2.\u5c06\u201cSyslog \u4e8b\u4ef6\u5197\u4f59\u8fc7\u6ee4\u5668\u201d\uff08\u79d2\u6570\uff09\u8bbe\u7f6e\u4e3a 0\n\t3.\u5c06\u201cSyslog \u683c\u5f0f\u201d\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c"}, {"TREE_NO_SCHEDULER", "\u6307\u5b9a\u7684 IP \u5730\u5740\u672a\u627e\u5230\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u8bbe\u5907\u672a\u6dfb\u52a0"}, {"TREE_GET_PREFS_ERR", "\u68c0\u7d22\u9996\u9009\u9879\u6587\u4ef6\u65f6\u51fa\u9519\u3002"}, {"TREE_FIREWALL_NOT_REGISTERED", "\u6b64\u8bbe\u5907\u672a\u6ce8\u518c\u3002\u8bf7\u8bbf\u95ee MySonicWall.com \u5e76\u6ce8\u518c\u8be5\u8bbe\u5907\uff0c\u7136\u540e\u5c06\u5176\u6dfb\u52a0\u5230 Analyzer\u3002"}, {"TREE_BACKEND_COMM_FAILURE", "Analyzer \u65e0\u6cd5\u4e0e MySonicWall.com \u901a\u4fe1\u4ee5\u9a8c\u8bc1\u8bb8\u53ef\u8bc1\u3002\n\u8bf7\u68c0\u67e5\u60a8\u7684\u7f51\u7edc\u8fde\u63a5\uff1bAnalyzer \u670d\u52a1\u5668\u5fc5\u987b\u80fd\u591f\u4e0e MySonicWall.com \u901a\u4fe1\u3002 "}, {"SU_DB_SIZE_EMAILBODY1", "\u5f53\u524d\u6570\u636e\u5e93\u5927\u5c0f\u5982\u4e0b\uff1a\n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\n\u6ce8\uff1a\u6700\u5927\u6570\u636e\u5e93\u5927\u5c0f\u9650\u5236\u4e3a 2GB \n\n \n\u4ee5\u4e0b\u914d\u7f6e\u66f4\u6539\u5c06\u5f71\u54cd\u6570\u636e\u5e93\u4f7f\u7528\u60c5\u51b5\u7684\u603b\u4f53\u89c4\u6a21\uff1a\n\t\u51cf\u5c0f\u201c\u63a7\u5236\u53f0\u9762\u677f\u201d->\u201c\u62a5\u544a\u201d->\u201c\u8bbe\u7f6e\u201d\u5c4f\u5e55\u4e2d\u201c\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5929\u6570\u201d\u7684\u5929\u6570\u8bbe\u7f6e\u3002\n\t\u51cf\u5c0f\u201c\u63a7\u5236\u53f0\u9762\u677f\u201d->\u201c\u62a5\u544a\u201d->\u201c\u6458\u8981\u751f\u6210\u5668\u201d\u5c4f\u5e55\u4e2d\u201c\u6c47\u603b\u6570\u636e\u5b58\u50a8\u5929\u6570\u201d\u8bbe\u7f6e\u7684\u5929\u6570\u3002"}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\n\u6ce8\uff1a "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "\u6700\u5927\u6570\u636e\u5e93\u5927\u5c0f\u9650\u5236\u4e3a 2GB \n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\n\u4ee5\u4e0b\u914d\u7f6e\u66f4\u6539\u5c06\u5f71\u54cd\u6570\u636e\u5e93\u4f7f\u7528\u60c5\u51b5\u7684\u603b\u4f53\u89c4\u6a21\uff1a\n\t\u51cf\u5c0f\u201c\u63a7\u5236\u53f0\u9762\u677f\u201d->\u201c\u62a5\u544a\u201d->\u201c\u8bbe\u7f6e\u201d\u5c4f\u5e55\u4e2d\u201c\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5929\u6570\u201d\u7684\u5929\u6570\u8bbe\u7f6e\u3002\n\t\u51cf\u5c0f\u201c\u63a7\u5236\u53f0\u9762\u677f\u201d->\u201c\u62a5\u544a\u201d->\u201c\u6458\u8981\u751f\u6210\u5668\u201d\u5c4f\u5e55\u4e2d\u201c\u6c47\u603b\u6570\u636e\u5b58\u50a8\u5929\u6570\u201d\u8bbe\u7f6e\u7684\u5929\u6570\u3002"}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "\u8b66\u544a\uff1a\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "\u8bf7\u786e\u8ba4\u6ca1\u6709\u5728\u7ef4\u62a4\u5907\u4efd\u8ba1\u5212\u4e2d\u8bbe\u7f6e\u6570\u636e\u5e93\uff0c\u6216\u73b0\u6709\u8ba1\u5212\u65e0\u6cd5\u6e05\u9664\u65e5\u5fd7\u3002\n\u5982\u679c\u6ca1\u6709\u5728\u7ef4\u62a4\u8ba1\u5212\u4e2d\u8bbe\u7f6e\u6570\u636e\u5e93\uff0c\u4e8b\u52a1\u65e5\u5fd7\u5c06\u7ee7\u7eed\u589e\u957f\u5e76\u586b\u6ee1\u6574\u4e2a\u786c\u76d8\uff0c \n\u6b64\u65f6\u6570\u636e\u5e93\u548c GMS \u7cfb\u7edf\u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002\u5176\u6b21\uff0c\u5982\u679c\u6570\u636e\u5e93\u5d29\u6e83\uff0c\u60a8\u5c06\u65e0\u6cd5\u5c06\u6570\u636e\u5e93 \n\u8fd8\u539f\u4e3a\u4e0a\u4e00\u5df2\u77e5\u5907\u4efd\u3002"}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: \u6570\u636e\u5e93\u5065\u5eb7\u68c0\u67e5"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "\u767b\u5f55\u8bb8\u53ef\u8bc1\u9a8c\u8bc1\u5931\u8d25\u7684\u8bbe\u5907\uff0c\u8bbe\u5907\u5e8f\u5217\u53f7\u4e3a "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", "\u3002\u8bf7\u786e\u4fdd\u6ca1\u6709\u5728\u8bbe\u5907\u4e0a\u672c\u5730\u66f4\u6539\u767b\u5f55\u6240\u9700\u7684\u4efb\u4f55\u8bbe\u7f6e\u3002 \u4f7f\u7528\u201c\u4fee\u6539\u8bbe\u5907\u201d\u4f53\u73b0 Analyzer \u4e2d\u7684\u66f4\u6539", "\u901a\u8fc7 Analyzer \u8fdb\u884c\u8bb8\u53ef\u8bc1\u9a8c\u8bc1"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "\u901a\u8fc7 Analyzer \u8fdb\u884c\u8bb8\u53ef\u8bc1\u9a8c\u8bc1"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "\u767b\u5f55\u5230\u8bbe\u5907 "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", "\uff0c\u8be5\u8bbe\u5907\u8bb8\u53ef\u8bc1\u9a8c\u8bc1\u5931\u8d25\u5e76\u4e14\u5df2\u8d85\u8fc7\u5bbd\u9650\u671f\u3002\u8bf7\u786e\u4fdd\u6ca1\u6709\u5728\u8bbe\u5907\u4e0a\u672c\u5730\u66f4\u6539\u767b\u5f55\u6240\u9700\u7684\u4efb\u4f55\u8bbe\u7f6e\u3002 \u4f7f\u7528\u201c\u4fee\u6539\u8bbe\u5907\u201d\u4f53\u73b0 VPS \u4e2d\u7684\u66f4\u6539"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "Analyzer \u8bb8\u53ef\u8bc1\u5df2\u8fc7\u671f\uff01"}, {"SU_LIC_EXPIRED_BODY1", "\u60a8\u7684\u8bbe\u5907 "}, {"SU_LIC_EXPIRED_BODY2", "\u6ca1\u6709 Analyzer \u8bb8\u53ef\u3002\u8bf7\u68c0\u67e5\u8bbe\u5907\u4e0a\u7684\u8bbe\u7f6e"}, {"SU_LIC_EXPIRED_SUBJECT", "Analyzer \u8bb8\u53ef\u8bc1\u5df2\u8fc7\u671f\uff01"}, {"LOGVIEW_WRONG_START_DT", "\u5f00\u59cb\u65e5\u671f\u683c\u5f0f\u9519\u8bef\u3002\u65e5\u671f\u5fc5\u987b\u4e3a mm/dd/yyyy \u683c\u5f0f\u3002"}, {"LOGVIEW_WRONG_END_DT", "\u7ed3\u675f\u65e5\u671f\u683c\u5f0f\u9519\u8bef\u3002\u65e5\u671f\u5fc5\u987b\u4e3a mm/dd/yyyy \u683c\u5f0f\u3002"}, {"LOGVIEW_ENDDT_LESS_STARTDT", "\u7ed3\u675f\u65e5\u671f\u5c0f\u4e8e\u5f00\u59cb\u65e5\u671f\u3002\u8bf7\u8f93\u5165\u6709\u6548\u7684\u5f00\u59cb\u65e5\u671f\u548c\u7ed3\u675f\u65e5\u671f\u3002"}, {"LOGVIEW_MSGS_PERSCRN", "\u6bcf\u5c4f\u5e55\u6d88\u606f\u6570"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "\u60a8\u5373\u5c06\u5bfc\u51fa {0,number,integer} \u4e2a\u65e5\u5fd7\u6761\u76ee\u3002\u662f\u5426\u786e\u5b9a\u8981\u8fd9\u6837\u505a\uff1f \u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u53d6\u6d88\u6b64\u5bf9\u8bdd\u6846\u5e76\u9650\u5236\u641c\u7d22\u6761\u4ef6\u3002"}, {"LOGVIEW_GOTO_MSG", "\u8f6c\u5230\u6d88\u606f\u7f16\u53f7"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "\u663e\u793a\u6bcf\u5c4f\u5e55\u6d88\u606f\u6570\uff1a"}, {"LOGVIEW_RANGE", "\uff08\u8303\u56f4\uff1a10-100\uff09"}, {"LOGVIEW_COL_DT", "\u65e5\u671f"}, {"LOGVIEW_COL_MSG", "\u6d88\u606f"}, {"LOGVIEW_COL_SEV", "\u4e25\u91cd\u6027"}, {"LOGVIEW_COL_USER", "GMS \u7528\u6237"}, {"LOGVIEW_COL_CO", "Change Order"}, {"LOGVIEW_COL_IP", "\u7528\u6237 IP"}, {"LOGVIEW_SEARCH_RESULTS", "\u641c\u7d22\u7ed3\u679c"}, {"LOGVIEW_SEARCH_CRITERIA", "\u641c\u7d22\u6761\u4ef6"}, {"LOGVIEW_EXPORT_LOGS", "\u5bfc\u51fa\u65e5\u5fd7"}, {"LOGVIEW_CLEAR_LOGS", "\u6e05\u9664\u641c\u7d22"}, {"LOGVIEW_SEARCH_LOGS", "\u5f00\u59cb\u641c\u7d22"}, {"LOGVIEW_MATCH_CASE", "\u533a\u5206\u5927\u5c0f\u5199"}, {"LOGVIEW_EXACT_PHRASE", "\u786e\u5207\u77ed\u8bed"}, {"LOGVIEW_ANY_WORD", "\u4efb\u610f\u8bcd"}, {"LOGVIEW_ALL_WORDS", "\u6240\u6709\u8bcd"}, {"LOGVIEW_MSG", "\u6d88\u606f\u5305\u542b\uff1a"}, {"LOGVIEW_CO", "Change Order:"}, {"LOGVIEW_TIME", "\u9009\u62e9\u65e5\u5fd7\u65f6\u95f4\uff1a\u4ece\uff1a"}, {"LOGVIEW_TIME_TO", "\u5230\uff1a "}, {"LOGVIEW_NODE_NAME", "SonicWall \u8282\u70b9\uff1a"}, {"LOGVIEW_USER", "\u7528\u6237\uff1a "}, {"LOGVIEW_SEV", "\u4e25\u91cd\u6027\uff1a "}, {"LOGVIEW_CALENDAR", "\u65e5\u5386"}, {"LOGVIEW_ALL", "\u6240\u6709\uff08\u8b66\u62a5\u3001\u8b66\u544a\u548c Info\uff09"}, {"LOGVIEW_ALERT_WARNING", "\u8b66\u62a5\u548c\u8b66\u544a"}, {"LOGVIEW_ALERT", "\u8b66\u62a5"}, {"LOGVIEW_STR_FORMAT", "\u641c\u7d22\u5b57\u7b26\u4e32\u683c\u5f0f\uff1auser@domain\u3002<br>\u4ec5\u9650\u7528\u6237\uff0c\u8f93\u5165 user\u3002<br>\u4ec5\u9650\u57df\uff0c\u8f93\u5165 @domain\u3002<br><i>\u6ce8\uff1a \u5982\u679c\u7528\u6237\u503c\u5305\u542b @ \u5b57\u7b26\uff0c\u5219\u4f7f\u7528\u53e6\u4e00\u4e2a @ \u7ec8\u6b62\u641c\u7d22\u5b57\u7b26\u4e32\u3002</i>"}, {"HELPABOUT_VERSION", "\u7248\u672c\uff1a"}, {"HELPABOUT_LIC", "\u8bb8\u53ef\u7ed9\uff1a"}, {"HELPABOUT_SN", "\u5e8f\u5217\u53f7\uff1a"}, {"HELPABOUT_DBDRIVER", "\u6570\u636e\u5e93\u9a71\u52a8\u7a0b\u5e8f\uff1a"}, {"HELPABOUT_DBVERSION", "\u6570\u636e\u5e93\u7248\u672c\uff1a"}, {"HELPABOUT_REPORT_DBVERSION", "\u62a5\u544a\u6570\u636e\u5e93\u7248\u672c\uff1a"}, {"LOGIN_TITLE", "\u767b\u5f55"}, {"LOGIN_ISBLANK", "\u4e3a\u7a7a\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u503c\u3002"}, {"LOGIN_INVALIDID", "\u6307\u5b9a\u7684\u7528\u6237 ID \u65e0\u6548\u3002"}, {"LOGIN_INVALIDID2", "\u7528\u6237 ID \u53ea\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a"}, {"LOGIN_INVALIDID3", "\u5b57\u6bcd\u6570\u5b57\u3001.\uff08\u70b9\u53f7\uff09\u3001-\uff08\u8fde\u5b57\u7b26\uff09\u3001_\uff08\u4e0b\u5212\u7ebf\uff09\u548c @(At)\u3002"}, {"LOGIN_INVALIDID4", "\u8bf7\u4f7f\u7528\u5141\u8bb8\u7684\u5b57\u7b26\u6307\u5b9a\u7528\u6237 ID\u3002"}, {"LOGIN_USERNAME", "\u7528\u6237\u540d"}, {"LOGIN_PASSWORD", "\u5bc6\u7801"}, {"LOGIN_LOGIN", "\u767b\u5f55"}, {"LOGIN_DOMAIN", "\u57df"}, {"LOGIN_SWITCH_EN_US", "\u5207\u6362\u5230\u82f1\u6587 UI"}, {"LOGIN_SWITCH_JA_JP", "\u5207\u6362\u5230\u65e5\u6587 UI"}, {"LOGIN_SWITCH_ZH_CN", "\u5207\u6362\u5230\u7b80\u4f53\u4e2d\u6587 UI"}, {"LOGIN_SWITCH_ZH_TW", "\u5207\u6362\u5230\u7e41\u4f53\u4e2d\u6587 UI"}, {"LOGIN_SWITCH_KO_KR", "\u5207\u6362\u5230\u97e9\u8bed UI"}, {"LOGIN_SWITCH_PT_BR", "Switch to Brazilian Portugese UI"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "\u6ce8\u9500"}, {"LOGOUT_VPMSG", "\u60a8\u73b0\u5728\u5df2\u6210\u529f\u4ece SonicWall Analyzer \u7cfb\u7edf\u4e2d\u6ce8\u9500\u3002"}, {"LOGOUT_VPMSG1", "\u8981\u542f\u52a8\u65b0\u7684 SonicWall Analyzer \u4f1a\u8bdd\uff0c\u5efa\u8bae\u60a8\u5173\u95ed\u6216\u9000\u51fa\u6b64\u6d4f\u89c8\u5668&nbsp<br>&nbsp\u7136\u540e\u6253\u5f00\u8be5\u6d4f\u89c8\u5668\u7684\u4e00\u4e2a\u65b0\u7a97\u53e3\u3002"}, {"LOGOUT_GMSMSG", "\u60a8\u73b0\u5728\u5df2\u6210\u529f\u4ece SonicWall \u5168\u5c40\u7ba1\u7406\u7cfb\u7edf\u4e2d\u6ce8\u9500\u3002"}, {"LOGOUT_GMSMSG1", "\u8981\u542f\u52a8\u65b0\u7684 SonicWall GMS \u4f1a\u8bdd\uff0c\u5efa\u8bae\u60a8\u5173\u95ed\u6216\u9000\u51fa\u6b64\u6d4f\u89c8\u5668&nbsp<br>&nbsp\u7136\u540e\u6253\u5f00\u8be5\u6d4f\u89c8\u5668\u7684\u4e00\u4e2a\u65b0\u7a97\u53e3\u3002"}, {"SETTINGSUSER_CHANGE", "\u66f4\u6539"}, {"SETTINGSUSER_OLD", "\u5f53\u524d"}, {"SETTINGSUSER_PASSWORD", "\u5bc6\u7801"}, {"SETTINGSUSER_NEW", "\u65b0"}, {"SETTINGSUSER_CONFIRMMSG", "\u786e\u8ba4\u65b0\u5bc6\u7801"}, {"SETTINGSUSER_FAILMSG", "\u201c\u5bc6\u7801\u201d\u548c\u201c\u786e\u8ba4\u65b0\u5bc6\u7801\u201d\u6761\u76ee\u4e0d\u5339\u914d\u3002"}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "\u5bc6\u7801\u957f\u5ea6\u5fc5\u987b\u81f3\u5c11\u4e3a 7 \u4e2a\u5b57\u7b26\u5e76\u4e14\u5305\u542b\u5b57\u6bcd\u548c/\u6216\u6570\u5b57\u3002"}, {"INVALID_PASSWORD", "\u6307\u5b9a\u7684\u5bc6\u7801\u65e0\u6548\u3002"}, {"PWD_RULES", "\u5bc6\u7801\u5e94\u57fa\u4e8e\u4ee5\u4e0b\u89c4\u5219\u521b\u5efa\uff1a "}, {"VALID_PWD_RULE_FOR_PCI", "    - \u957f\u5ea6\u81f3\u5c11 7 \u4e2a\u5b57\u7b26\u3002"}, {"MAX_PWD_LEN", "    - \u5141\u8bb8\u7684\u6700\u5927\u957f\u5ea6\u4e3a 15 \u4e2a\u5b57\u7b26\u3002"}, {"PWD_ALPHANUMERIC_CHARS", "    - \u53ef\u5305\u542b\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002"}, {"PWD_SPCIAL_CHARS", "    - \u53ef\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u3002"}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[CN]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[CN]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[CN]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "\u8bf7\u6307\u5b9a\u7b26\u5408\u8981\u6c42\u7684\u5bc6\u7801\u3002"}, {"SETTINGSUSER_MISCSETTINGS", "\u5176\u4ed6\u8bbe\u7f6e"}, {"SETTINGSUSER_TIMEOUTPERIOD", "\u8d85\u65f6\u671f\u9650\u53ef\u4e3a -1 \u6216\u5728 [5..120] \u8303\u56f4\u5185\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\u3002"}, {"SETTINGSUSER_NEVERTIMEOUT", "\u6c38\u4e0d\u8d85\u65f6"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "\u4e0d\u6d3b\u52a8\u8d85\u65f6"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "\u8bbe\u5907\u9009\u62e9\u9762\u677f\uff0c\u663e\u793a\uff1a"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u56fe\u6807"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "\u6587\u672c"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u56fe\u6807\u548c\u6587\u672c\uff08\u9ed8\u8ba4\u503c\uff09"}, {"MAX_ROWS_PER_SCREEN", "\u6bcf\u5c4f\u5e55\u6700\u5927\u884c\u6570\uff1a"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "\u8303\u56f4\uff1a[10..100]\uff08\u4ec5\u9002\u7528\u4e8e\u975e\u62a5\u544a\u76f8\u5173\u5206\u9875\u5c4f\u5e55\uff09"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "\u6bcf\u5c4f\u5e55\u6700\u5927\u884c\u6570\u503c\u8d85\u51fa\u6709\u6548\u7684\u8303\u56f4\u3002\u8bf7\u8f93\u5165\u4ecb\u4e8e 10 \u5230 100 \u4e4b\u95f4\u7684\u6570\u5b57\uff08\u5305\u542b\u8fb9\u754c\uff09\u3002"}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "\u6bcf\u5c4f\u5e55\u6700\u5927\u884c\u6570\u503c\u5e76\u975e\u6570\u5b57\u3002\u8bf7\u8f93\u5165\u4e00\u4e2a\u6709\u6548\u6570\u5b57\u3002"}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "\u81ea\u52a8\u4fdd\u5b58\u4eea\u8868\u677f\u8bbe\u7f6e\uff1a"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1\uff1a\u81ea\u52a8\u4fdd\u5b58\u672a\u542f\u7528\u6216\u8303\u56f4\uff1a[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "\u81ea\u52a8\u4fdd\u5b58\u4eea\u8868\u677f\u8bbe\u7f6e\u53ef\u4e3a -1 \u6216\u5728 [1..60] \u8303\u56f4\u5185\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\u3002"}, {"CHANGEPASSWORD_OLD", "\u5f53\u524d\u5bc6\u7801"}, {"CHANGEPASSWORD_NEW", "\u65b0\u5bc6\u7801"}, {"CHANGEPASSWORD_CONFIRM", "\u786e\u8ba4\u65b0\u5bc6\u7801"}, {"CHANGEPASSWORD_USER", "\u7528\u6237"}, {"CUSTLOGSETTINGS_NOTE1", "\u6ce8\uff1a\u60a8\u53ef\u4ee5\u8f93\u5165\u901a\u8fc7\u5206\u53f7 (\";\") \u5206\u9694\u7684\u591a\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740"}, {"CUSTLOGSETTINGS_SECTITLE1", "\u7535\u5b50\u90ae\u4ef6\u8b66\u62a5\u6536\u4ef6\u4eba\u65e5\u7a0b"}, {"CUSTLOGSETTINGS_WEEKDAY", "\u5de5\u4f5c\u65e5\uff1a"}, {"CUSTLOGSETTINGS_SCHED1", "\u65e5\u7a0b 1\uff1a"}, {"CUSTLOGSETTINGS_SCHED2", "\u65e5\u7a0b 2\uff1a"}, {"CUSTLOGSETTINGS_SCHED3", "\u65e5\u7a0b 3\uff1a"}, {"CUSTLOGSETTINGS_SAT", "\u5468\u516d"}, {"CUSTLOGSETTINGS_SUN", "\u5468\u65e5"}, {"CUSTLOGSETTINGS_WEEKEND", "\u5468\u672b\uff1a"}, {"CUSTLOGSETTINGS_HRS", "\u5c0f\u65f6"}, {"CUSTLOGSETTINGS_TO", "\u6536\u4ef6\u4eba"}, {"CUSTLOGSETTINGS_ALERTFMT", "\u7535\u5b50\u90ae\u4ef6\u8b66\u62a5\u683c\u5f0f\u9996\u9009\u9879"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "\u5305\u542b\u6587\u672c\uff0c\u8272\u5f69\uff0c\u56fe\u50cf\u548c\u94fe\u63a5\u3002\u4ec5\u80fd\u4e0e\u7535\u5b50\u90ae\u4ef6\u8f6f\u4ef6\u517c\u5bb9(HTML)."}, {"CUSTLOGSETTINGS_TEXT", "\u7eaf\u6587\u672c"}, {"CUSTLOGSETTINGS_TEXT_DESC", "\u5305\u542b\u7eaf\u6587\u5b57\u7684\u6240\u6709\u7ec6\u8282\uff0c\u517c\u5bb9\u6240\u6709\u7684\u7535\u5b50\u90ae\u4ef6\u8f6f\u4ef6."}, {"CUSTLOGSETTINGS_PAGER", "\u7eaf\u6587\u5b57\uff08\u7b80\u5355\uff09"}, {"CUSTLOGSETTINGS_PAGER_DESC", "\u5305\u542b\u4e00\u4e2a\u7eaf\u6587\u5b57\u7684\u77ed\u6d88\u606f\u3002\u62e9\u7528\u4e8e\u5bfb\u547c\u673a\uff0cSMS\uff08\u77ed\u8baf\u670d\u52a1\uff09\u548c\u7c7b\u4f3c\u7684\u7a0b\u5f0f."}, {"LOGCONFIG_SECTITLE_1", "\u5220\u9664"}, {"LOGCONFIG_SECTITLE_2", "\u65e5\u5fd7\u6d88\u606f"}, {"LOGCONFIG_DELLABEL", "\u5220\u9664\u65e9\u4e8e\u4ee5\u4e0b\u65f6\u95f4\u7684\u65e5\u5fd7\u6d88\u606f\uff1a"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u65e5"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u7528\u4e8e"}, {"LOGCONFIG_DOMAIN", "\u57df"}, {"SESSIONS_NOSESSALERT", "\u6ca1\u6709\u8981\u7ed3\u675f\u7684\u4f1a\u8bdd\u3002"}, {"SESSIONS_NOSESSSELALERT", "\u8bf7\u9009\u62e9\u8981\u7ed3\u675f\u7684\u4f1a\u8bdd\u3002"}, {"SESSIONS_RUSUREALERT", "\u662f\u5426\u786e\u5b9a\u8981\u7ed3\u675f\u9009\u5b9a\u7684\u4f1a\u8bdd\uff1f"}, {"SESSIONS_TITLE", "\u5f53\u524d\u4f1a\u8bdd"}, {"SESSIONS_COL1", "\u7528\u6237\u540d"}, {"SESSIONS_COL2", "IP \u5730\u5740"}, {"SESSIONS_COL3", "\u767b\u5f55\u65f6\u95f4"}, {"SESSIONS_COL4", "\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4"}, {"SESSIONS_COL5", "\u57df\u540d"}, {"SESSIONS_END", "\u7ed3\u675f\u9009\u5b9a\u7684\u4f1a\u8bdd"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP \u670d\u52a1\u5668\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP \u7aef\u53e3"}, {"LOGINVPSSETTINGS_LABEL2", "\u53d1\u4ef6\u4eba\u7535\u5b50\u90ae\u4ef6\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL3", "\u7ba1\u7406\u5458\u7535\u5b50\u90ae\u4ef6\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL3_5", "\u4f7f\u7528 TLS"}, {"LOGINVPSSETTINGS_LABEL4", "\u4f7f\u7528\u8ba4\u8bc1"}, {"LOGINVPSSETTINGS_LABEL5", "\u7528\u6237"}, {"LOGINVPSSETTINGS_LABEL6", "\u5bc6\u7801"}, {"LOGINVPSSETTINGS_NOTE", "\u6ce8\uff1a\u5982\u9700\u66f4\u6539\u6536\u4ef6\u4eba\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u8bf7\u4f7f\u7528\u201c\u63a7\u5236\u53f0 > \u8b66\u62a5 > \u57fa\u672c\u8bbe\u7f6e\u201d"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "\u7cfb\u7edf\u8c03\u8bd5\u7ea7\u522b\uff1a"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "\u8bbe\u7f6e\u8c03\u8bd5\u7ea7\u522b\u53ef\u4ee5\u66f4\u5feb\u901f\u5730\u9488\u5bf9\u6f5c\u5728\u7684\u5e94\u7528\u7a0b\u5e8f\u95ee\u9898\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002\u901a\u8fc7\u6b64\u90e8\u7f72\uff0c\u6b64\u64cd\u4f5c\u5c06\u5728\u6240\u6709\u7cfb\u7edf\u4e0a\u521b\u5efa\u8c03\u8bd5\u65e5\u5fd7\u6587\u4ef6\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u8fd8\u4f1a\u7528\u5c3d\u78c1\u76d8\u7a7a\u95f4\u3002\u53ea\u8981\u6f5c\u5728\u7684\u95ee\u9898\u83b7\u5f97\u4e86\u89e3\u51b3\uff0c\u60a8\u5c31\u5e94\u8be5\u5bf9\u6b63\u5e38\u64cd\u4f5c\u91cd\u7f6e\u4e3a<i>\u65e0\u8c03\u8bd5</i>\u3002"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "\u6ce8\uff1a "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u5e94\u5f53\u57fa\u4e8e SonicWall \u6280\u672f\u652f\u6301\u4e2d\u7684\u6307\u5bfc\u6765\u8bbe\u7f6e\u8c03\u8bd5\u7ea7\u522b"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u8c03\u8bd5\u7ea7\u522b\u8d8a\u9ad8\uff0c\u7528\u4e8e\u751f\u6210\u8c03\u8bd5\u6570\u636e\u7684\u7cfb\u7edf\u8d44\u6e90\u8d8a\u591a\uff0c\u8fdb\u800c\u4f1a\u964d\u4f4e\u6574\u4f53\u7cfb\u7edf\u6027\u80fd\u3002"}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "\u7acb\u5373\u540c\u6b65\u578b\u53f7\u4ee3\u7801\u4fe1\u606f"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\u662f\u5426\u8981\u4f7f\u7528\u65b0\u7684 SMTP \u670d\u52a1\u5668\u5730\u5740\u66f4\u65b0\u6240\u6709\u73b0\u6709\u5b9a\u671f\u62a5\u544a\u7684 SMTP \u670d\u52a1\u5668\u5730\u5740\uff1f"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "\u65e0\u6cd5\u540c\u6b65\u578b\u53f7\u4ee3\u7801\u4fe1\u606f\u3002"}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "\u663e\u793a\u5386\u53f2\uff08Analyzer 7.0 \u4e4b\u524d\uff09\u62a5\u544a"}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "\u589e\u5f3a\u5bc6\u7801\u5b89\u5168\u6027"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "\u5f3a\u5236\u8fdb\u884c\u5bc6\u7801\u66f4\u6539\u7684\u5929\u6570"}, {"GENVPSSTATUS_INVALIDIP", "\u4e0d\u5b8c\u6574\u7684\u8bbe\u5907\u51ed\u8bc1\u6b64\u65f6\u53ef\u7528\u4e8e\u6210\u529f\u767b\u5f55"}, {"GENVPSSTATUS_NODE", "\u8282\u70b9\uff1a "}, {"GENVPSSTATUS_INFO", "\u4fe1\u606f"}, {"GENVPSSTATUS_SYSLOG", "Syslog \u670d\u52a1\u5668"}, {"GENVPSSTATUS_IPINFO", "IP \u5730\u5740"}, {"GENVPSSTATUS_PORT", "\u7aef\u53e3"}, {"GENVPSSTATUS_SYNCNOW", "\u540c\u6b65\u8bbe\u7f6e\u548c\u8bbe\u5907\uff0c\u4ee5\u53ca\u8bb8\u53ef\u8bc1\u4fe1\u606f\u548c MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "Analyzer \u4f7f\u7528\u5165\u95e8"}, {"GENVPSSTATUS_GETSTARTOPEN", "\u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00\u4f7f\u7528\u5165\u95e8\u8bf4\u660e"}, {"GENVPSSTATUS_LOGINTITLE", "\u8bbe\u5907\u767b\u5f55"}, {"GENVPSSTATUS_LOGINHTTP", "\u4f7f\u7528\u4e0d\u5b89\u5168\u767b\u5f55 (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "\u4f7f\u7528\u5b89\u5168\u767b\u5f55 (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "\u767b\u5f55"}, {"GENVPSSTATUS_CATEGORIES", "Syslog \u7c7b\u522b"}, {"GENVPSSTATUS_REFRESH_MSG", "\u6ce8:\u72b6\u6001\u4fe1\u606f\u6bcf 24 \u5c0f\u65f6\u66f4\u65b0\u4e00\u6b21\u3002\u8981\u5237\u65b0\u4fe1\u606f\uff0c\u8bf7\u5355\u51fb\u4e0a\u9762\u7684\u94fe\u63a5\u3002\u8981\u66f4\u6539\u8fd9\u4e9b\u8bbe\u7f6e\uff0c\u60a8\u5fc5\u987b\u767b\u5f55\u5230\u8bbe\u5907\u5e76\u624b\u52a8\u5bf9\u5176\u8fdb\u884c\u66f4\u65b0\u3002"}, {"GENVPSSTATUS_LOG_TYPE", "\u65e5\u5fd7\u7c7b\u578b"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "\u7cfb\u7edf\u7ef4\u62a4"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "\u7cfb\u7edf\u9519\u8bef"}, {"GENVPSSTATUS_BLOCKED_WEB", "\u963b\u6b62\u7684\u7f51\u7ad9"}, {"GENVPSSTATUS_BLOCKED_JAVA", "\u963b\u6b62\u7684 Java \u7b49"}, {"GENVPSSTATUS_USER_ACTIVITY", "\u7528\u6237\u6d3b\u52a8"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP \u7edf\u8ba1"}, {"GENVPSSTATUS_ATTACKS", "\u653b\u51fb"}, {"GENVPSSTATUS_DROPPED_TCP", "\u4e22\u5931\u7684 TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "\u4e22\u5931\u7684 UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "\u4e22\u5931\u7684 ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "\u7f51\u7edc\u8c03\u8bd5"}, {"GENVPSSTATUS_DENIED_LAN_IP", "\u62d2\u7edd\u7684 LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "Analyzer \u8bb8\u53ef\u8bc1\u72b6\u6001"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u6765\u89e3\u51b3\\\"\u672a\u6388\u6743\\\"\u95ee\u9898:<br/>&nbsp;&nbsp;\u6b65\u9aa4 1 - <a href=\"http://www.MySonicWall.com\" target=new>\u5355\u51fb\u6b64\u5904\u5728 MySonicWall.com \u4e0a\u9a8c\u8bc1\u6216\u6fc0\u6d3b\u8bb8\u53ef\u8bc1\u3002</a><br/>&nbsp;&nbsp;\u6b65\u9aa4 2 - \u5982\u679c\u8bb8\u53ef\u8bc1\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c<a href=\"javascript:synchronizeInfo();\">\u8bf7\u5355\u51fb\u6b64\u5904\u540c\u6b65\u8bb8\u53ef\u8bc1\u4fe1\u606f\u3002</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "\uff08\u5c1d\u8bd5\u8bbf\u95ee MySonicWall.com \u65f6\u51fa\u73b0\u901a\u4fe1\u6545\u969c\uff09<br/>&nbsp;&nbsp;\u786e\u8ba4 GMSVP Web \u670d\u52a1\u5668\u80fd\u591f\u8bbf\u95ee www.MySonicWall.com\u3002"}, {"COMPONENT", "\u8bf4\u660e"}, {"COMPONENT_LC", "\u7ec4\u4ef6"}, {"FILE_SIZE", "\u6587\u4ef6\u5927\u5c0f (KB)"}, {"IP_ADDRESS", "IP \u5730\u5740"}, {"CURRENT_VERSION", "\u5f53\u524d\u7248\u672c"}, {"LATEST_VERSION", "\u6700\u65b0\u7248\u672c"}, {"RELEASE_NOTES", "\u53d1\u884c\u8bf4\u660e"}, {"LAST_DOWNLOADED", "\u6700\u8fd1\u4e0b\u8f7d"}, {"RELEASE_DATE", "\u53d1\u884c\u65e5\u671f"}, {"DOWNLD_NEW", "\u4e0b\u8f7d\u65b0 "}, {"SOFTWARE_UPDATES", "\u8f6f\u4ef6\u66f4\u65b0"}, {"DEL_SEL_COMPS_FROM_LIST", "\u4ece\u5217\u8868\u4e2d\u5220\u9664\u9009\u5b9a\u7684\u7ec4\u4ef6"}, {"LIC_DELETE_MSG", "\u60a8\u4e0d\u80fd\u5220\u9664"}, {"LIC_PATCH_MSG", "\u4ee5\u4e0b\u7ec4\u4ef6\u7684\u4fee\u8865\u7a0b\u5e8f\u4e0d\u53ef\u7528\u5e76\u4e14\u4e0d\u4f1a\u4e0b\u8f7d\uff1a"}, {"LIC_NEW_GMS_SW", "\u65b0 GMS \u8f6f\u4ef6"}, {"LIC_CONSOLE", "\u63a7\u5236\u53f0"}, {"LIC_SELECT_COMPONENT", "\u8bf7\u9009\u62e9\u4e00\u4e2a\u7ec4\u4ef6\u3002"}, {"CHAP_TESTING", "CHAP \u6d4b\u8bd5"}, {"CHAP_RADIUS_TESTING_MSG", "\u8bf7\u6ce8\u610f\uff0cCHAP \u9a8c\u8bc1\u4ec5\u4e0e\u652f\u6301\u7684 RADIUS \u670d\u52a1\u5668\u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u4e14\u5728 \u67d0\u4e9b\u60c5\u51b5\u4e0b\u5c06\u9700\u8981\u670d\u52a1\u5668\u914d\u7f6e\u4e3a\u5b58\u50a8\u53ef\u9006\u5bc6\u7801\u3002"}, {"CHAP_LDAP_TESTING_MSG", "\u8bf7\u6ce8\u610f\uff0cCHAP \u9a8c\u8bc1\u5c06\u4ec5\u4e0e\u652f\u6301\u901a\u8fc7 LDAP \u68c0\u7d22\u7528\u6237\u5bc6\u7801\u7684\u670d\u52a1\u5668\u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u4e14\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5c06\u9700\u8981 LDAP \u670d\u52a1\u5668\u914d\u7f6e\u4e3a\u5b58\u50a8\u53ef\u9006\u5bc6\u7801\u3002"}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "\u8fd8\u8981\u6ce8\u610f\u7684\u662f\uff0cCHAP \u4e0d\u80fd\u4e0e Microsoft Active Directory \u6216 Novell eDirectory \u4e00\u8d77\u4f7f\u7528"}, {"PERF_NO_SUMMARIZER", "\u6ca1\u6709\u5f53\u524d\u53ef\u7528\u7684\u6458\u8981\u751f\u6210\u5668\u6027\u80fd\u6307\u6807\u3002"}, {"PERF_SUMMARIZER_INFO", "\u6458\u8981\u751f\u6210\u5668\u4fe1\u606f"}, {"PERF_SUMMARIZER", "\u6458\u8981\u751f\u6210\u5668"}, {"PERF_SYSLOG_INFO", "\u6570\u636e\u6587\u4ef6\u683c\u5f0f"}, {"PERF_SYSLOG_FILE_TYPE", "\u6570\u636e\u6587\u4ef6\u7c7b\u578b"}, {"PERF_FILE_STATS", "\u6587\u4ef6\u7edf\u8ba1"}, {"PERF_OLDEST", "\u6700\u65e7"}, {"PERF_PRD_LABEL", "\u5904\u7406\u7684\u6587\u4ef6"}, {"PERF_SRC_LABEL", "\u5206\u7ec4\u7684\u6587\u4ef6"}, {"PERF_UNP_LABEL", "\u672a\u5904\u7406\u7684\u6587\u4ef6"}, {"PERF_NMM_LABEL", "\u4e0d\u662f\u6211\u7684\u6587\u4ef6"}, {"PERF_IMF_LABEL", "\u611f\u67d3\u7684\u6587\u4ef6"}, {"PERF_ZIP_LABEL", "\u5f52\u6863\u7684\u6587\u4ef6"}, {"PERF_PRE_LABEL", "\u65e0\u6548\u7684\u65e5\u5fd7\u6587\u4ef6"}, {"PERF_UPE_LABEL", "\u9519\u8bef\u7684\u4e0a\u4f20\u6587\u4ef6"}, {"PERF_UPD_LABEL", "\u4e0a\u4f20\u7684\u6587\u4ef6"}, {"PERF_UPL_LABEL", "\u4e0a\u4f20\u5f85\u5904\u7406\u7684\u6587\u4ef6"}, {"PERF_RDB_LABEL", "\u62a5\u544a\u6570\u636e\u5e93"}, {"PERF_OPT_STATE_LABEL", "\u4f18\u5316\u72b6\u6001"}, {"PERF_OPT_PENDING_LABEL", "\u6682\u505c\u7684\u4f18\u5316"}, {"PERF_OPT_TOTAL_LABEL", "\u672a\u4f18\u5316\u603b\u5929\u6570"}, {"PERF_BKP_LABEL", "\u5907\u4efd\u6587\u4ef6"}, {"PERF_FILE_ELEMENT", "\u6587\u4ef6 - "}, {"PERF_THREAD_INFO", "\u6458\u8981\u751f\u6210\u5668\u5904\u7406\u8be6\u7ec6\u4fe1\u606f"}, {"PERF_NUM_THREADS", "\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570"}, {"PERF_SUMMARIZER_IDLE", "\u6458\u8981\u751f\u6210\u5668\u7a7a\u95f2\u3002"}, {"PERF_THREAD", "\u7ebf\u7a0b"}, {"PERF_FIREWALL", "\u8bbe\u5907"}, {"PERF_FILE", "\u6587\u4ef6"}, {"PERF_STATE", "\u72b6\u6001"}, {"PERF_START_TIME", "\u5f00\u59cb\u4e8e"}, {"PERF_SUMMARIZER_STATS", "\u6458\u8981\u751f\u6210\u5668\u7edf\u8ba1"}, {"PERF_PAST_24", "\u5728\u8fc7\u53bb 24 \u5c0f\u65f6\u5185\uff08\u81ea\u4ece "}, {"PERF_PAST_7_DAYS", "\u5728\u8fc7\u53bb 7 \u5929\u5185\uff08\u81ea\u4ece "}, {"PERF_PAST_30_DAYS", "\u5728\u8fc7\u53bb 30 \u5929\u5185\uff08\u81ea\u4ece "}, {"PERF_NUM_SYSLOGS", "\u4ee5\u4e0b\u9879\u4e2d\u6c47\u603b\u7684 Syslogs \u6570 "}, {"PERF_AVERAGE_PER_MINUTE", "\u6bcf\u5206\u949f\u6458\u8981\u7684\u5e73\u5747 Syslog"}, {"PERF_NOT_ACTIVE", "\u8fc7\u53bb 7 \u5929\u5185\u6ca1\u6709\u6c47\u603b\u4efb\u4f55\u6570\u636e"}, {"PERF_NO_GEN2", "\u6458\u8981\u751f\u6210\u5668\u6027\u80fd\u6307\u6807\u4ec5\u9002\u7528\u4e8e\u5206\u5e03\u5f0f\u6458\u8981\u751f\u6210\u5668\u914d\u7f6e"}, {"PERF_MEM_USAGE", "\u6458\u8981\u751f\u6210\u5668\u5185\u5b58\u6d88\u8017"}, {"PERF_LAST_RUN", "\u4e0a\u6b21\u8fd0\u884c\u65f6\u95f4"}, {"PERF_NEXT_RUN", "\u4e0b\u6b21\u8fd0\u884c\u65f6\u95f4"}, {"PERF_SUMMARIZER_STATISTICS", "\u8fc7\u53bb 7 \u5929\u5185\u7684\u6458\u8981\u751f\u6210\u5668\u72b6\u6001"}, {"PERF_SUMMARIZER_UTILIZATION", "\u6458\u8981\u751f\u6210\u5668\u4f7f\u7528\u7387"}, {"PERF_TOTAL_RUN_TIME", "\u6bcf\u5929\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "\u4f30\u8ba1\u7684\u5bb9\u91cf"}, {"PERF_METRIC_SYSLOG", "\uff08\u767e\u4e07 syslog/\u5929\uff09"}, {"PERF_METRIC_XML", "\uff08XML \u6587\u4ef6/\u5929\uff09"}, {"PERF_TOTAL_LOAD", "\u5e73\u5747\u8d1f\u8f7d"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "\u6458\u8981\u7684\u5e73\u5747 Syslog\uff08\u767e\u4e07/\u5929\uff09"}, {"PERF_TOTAL_FILES_SUMMARIZED", "\u6bcf\u5929\u6458\u8981\u7684\u5e73\u5747 XML \u6587\u4ef6"}, {"PERF_NO_DATA_SUMMARIZED", "\u5728\u8fc7\u53bb\u76847\u5929\uff0c\u6ca1\u6709\u6570\u636e\u53ef\u4ee5\u603b\u7ed3"}, {"PERF_REPORTING_INFO", "\u62a5\u544a\u8be6\u7ec6\u4fe1\u606f"}, {"PERF_TOP_UNITS", "\u6458\u8981\u751f\u6210\u5668\u4f7f\u7528\u60c5\u51b5\u8bbe\u5907\u6392\u540d"}, {"PERF_UNIT_NAME", "\u8bbe\u5907"}, {"PERF_REPORTING_DB_SIZE", "\u62a5\u544a\u6570\u636e\u5e93\u5927\u5c0f"}, {"PERF_BACKUPS_DIR_SIZE", "\u5907\u4efd\u76ee\u5f55\u5927\u5c0f"}, {"PERF_SYSLOG_DIR_SIZE", "\u539f\u59cb\u6570\u636e\u76ee\u5f55\u5927\u5c0f"}, {"PERF_CACHE_SIZE", "\u4f30\u8ba1\u7684\u7f13\u5b58\u5927\u5c0f"}, {"PERF_BAD_DIR_SIZE", "\u9519\u8bef\u6570\u636e\u76ee\u5f55\u5927\u5c0f"}, {"PERF_PER_SUMMARIZER_INFO", "\u6458\u8981\u751f\u6210\u5668\u8be6\u7ec6\u4fe1\u606f "}, {"PERF_AVG_UTILIZATION", "\u5e73\u5747\u6458\u8981\u751f\u6210\u5668\u4f7f\u7528\u7387"}, {"PERF_PEAK_UTILIZATION", "\u5cf0\u503c\u6458\u8981\u751f\u6210\u5668\u4f7f\u7528\u7387"}, {"NMM_DETAILS", "\u8bbe\u5907\u53d1\u9001\u7684\u4e0d\u4f4d\u4e8e\u201c\u62a5\u544a\u548c\u7ba1\u7406\u201d\u4e0b\u7684 Syslog"}, {"NMM_SERIALS", "\u6458\u8981\u751f\u6210\u5668\u7684\u8bbe\u5907\u7684\u5e8f\u5217\u53f7 "}, {"NO_NMM_SERIAL", "\u8bbe\u5907\u53d1\u9001\u7684 syslog \u5747\u4f4d\u4e8e\u201c\u62a5\u544a\u548c\u7ba1\u7406\u201d\u4e0b "}, {"MISCONFIGURED_SERIALS", "\u8bef\u914d\u7f6e\u7684\u8bbe\u5907\u7684\u5e8f\u5217\u53f7 "}, {"NO_MISCONFIGURED_SERIALS", "\u6ca1\u6709\u8bef\u914d\u7f6e\u7684\u8bbe\u5907 "}, {"NMM_MSG_NOTE", "\u6ce8: "}, {"NMM_MSG1", "* \u767b\u5f55\u5230\u8bbe\u5907\u5e76\u7981\u7528 syslog"}, {"NMM_MSG2", "* \u5982\u679c\u60a8\u65e0\u6743\u8bbf\u95ee\u8bbe\u5907\uff0c\u8bf7\u4f7f\u7528\u7f51\u5173\u89c4\u5219\u6765\u963b\u6b62\u5e8f\u5217"}, {"NMM_MSG3", "* \u8981\u4fee\u590d\u8bef\u914d\u7f6e\u7684\u7cfb\u5217\uff0c\u8bf7\u767b\u5f55\u5230\u8bbe\u5907\u5e76\u66f4\u6539 GMS \u8bbe\u7f6e"}, {"NMM_MSG4", "* \u6b64\u5904\u5217\u51fa\u7684\u5e8f\u5217\u6bcf 12 \u5c0f\u65f6\u5237\u65b0\u4e00\u6b21"}, {"PERF_SUMMARIZER_STATUS", "\u72b6\u6001"}, {"PERF_DEPLOYMENT_STATUS", "\u90e8\u7f72\u72b6\u6001"}, {"PERF_MSG_HIGH_CAPACITY", "\u6458\u8981\u751f\u6210\u5668\u4ee5\u6781\u9ad8\u7684\u5bb9\u91cf\u8fd0\u884c\u65f6\uff0c\u8bf7\u91cd\u65b0\u5206\u914d\u8bbe\u5907\u3002"}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "\u90e8\u7f72\u4e2d\u7684\u4e00\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u6458\u8981\u751f\u6210\u5668\u5728\u8fc7\u53bb\u7684 7 \u5929\u4e2d\u5df2\u8d85\u8fc7\u4e86\u5176\u8fd0\u884c\u5bb9\u91cf\u3002\u68c0\u67e5\u6458\u8981\u751f\u6210\u5668\u5229\u7528\u7387\u90e8\u5206\u7684\u72b6\u6001\u5217\uff0c\u7136\u540e\u8bbf\u95ee GMS \u7f51\u7ad9\uff0c\u67e5\u770b\u5173\u4e8e\u5982\u4f55\u7ba1\u7406\u90e8\u7f72\u7684\u66f4\u591a\u4fe1\u606f\u3002"}, {"PERF_MSG_REASSIGN_UNITS", "\u8bf7\u91cd\u65b0\u5206\u914d\u4ee3\u7406\u4e4b\u95f4\u7684\u8bbe\u5907\u3002"}, {"PERF_MSG_DISK_LOW", "\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\uff0c\u8bf7\u989d\u5916\u6dfb\u52a0\u78c1\u76d8\u6216\u589e\u52a0\u78c1\u76d8\u5206\u914d\u3002"}, {"PERF_MSG_DISK_LOW_RDB", "\u7528\u4e8e\u62a5\u544a\u6570\u636e\u5e93\u7684\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\uff0c\u8bf7\u989d\u5916\u6dfb\u52a0\u78c1\u76d8\u6216\u589e\u52a0\u78c1\u76d8\u5206\u914d\u3002"}, {"PERF_MSG_CAPACITY_PLANNING", "\u8bf7\u8bbf\u95ee <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS \u7f51\u7ad9</a>\u4e86\u89e3\u6709\u5173\u5982\u4f55\u7ba1\u7406\u60a8\u7684\u90e8\u7f72\u7684\u66f4\u591a\u4fe1\u606f\u3002"}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "\u6ce8:\u5e73\u5747\u8d1f\u8f7d\u548c\u4f30\u8ba1\u7684\u5bb9\u91cf\u662f\u7279\u5b9a\u4e8e\u90e8\u7f72\u7684\uff0c\u5176\u5728\u7cfb\u7edf\u4e2d\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002"}, {"PERF_OF", "/"}, {"PERF_ON_DISK", "\u5728\u78c1\u76d8\u4e0a"}, {"PERF_OPT_EXPORT_PROGRESS", "\u6b63\u5728\u5bfc\u51fa"}, {"PERF_OPT_EXPORT_DONE", "\u5bfc\u51fa\u5b8c\u6210"}, {"PERF_OPT_DELETE_PROGRESS", "\u6b63\u5728\u5220\u9664"}, {"PERF_OPT_DELETE_DONE", "\u5220\u9664\u5b8c\u6210"}, {"PERF_OPT_IMPORT_PROGRESS", "\u6b63\u5728\u5bfc\u5165"}, {"PERF_OPT_QUEUED_UP", "\u5df2\u6392\u961f"}, {"PERF_OPT_IDLE", "\u95f2\u7f6e"}, {"PERF_OPT_CURRENT", "\u5f53\u524d"}, {"PERF_OPT_INFO", "\u4f18\u5316\u4fe1\u606f"}, {"PERF_XML_FILE_INFO", "XML \u6587\u4ef6\u4fe1\u606f"}, {"PERF_XML_LABEL", "\u672a\u5904\u7406\u7684 XML \u6587\u4ef6"}, {"PERF_XPG_LABEL", "\u6b63\u5728\u5904\u7406\u7684\u6587\u4ef6"}, {"PERF_XPD_LABEL", "\u5df2\u5f52\u6863\u7684\u6587\u4ef6"}, {"PERF_XPE_LABEL", "\u65e0\u6548\u7684\u6587\u4ef6"}, {"ALERT_NO_ALERTS", "\u6b64\u65f6\u6ca1\u6709\u6b64\u90e8\u5206\u7684\u6d3b\u52a8\u8b66\u62a5\u3002"}, {"ALERT_DESCRIPTION", "\u8bf4\u660e"}, {"ALERT_NODE_NAME", "\u8bbe\u5907\u540d\u79f0"}, {"ALERT_SEVERITY", "\u4e25\u91cd\u6027"}, {"ALERT_LISTING", "\u8b66\u62a5\u5217\u8868"}, {"CAL_SUN", "\u5468\u65e5"}, {"CAL_MON", "\u5468\u4e00"}, {"CAL_TUE", "\u5468\u4e8c"}, {"CAL_WED", "\u5468\u4e09"}, {"CAL_THU", "\u5468\u56db"}, {"CAL_FRI", "\u5468\u4e94"}, {"CAL_SAT", "\u5468\u516d"}, {"CAL_JAN", "\u4e00\u6708"}, {"CAL_FEB", "\u4e8c\u6708"}, {"CAL_MAR", "\u4e09\u6708"}, {"CAL_APR", "\u56db\u6708"}, {"CAL_MAY", "\u4e94\u6708"}, {"CAL_JUN", "\u516d\u6708"}, {"CAL_JUL", "\u4e03\u6708"}, {"CAL_AUG", "\u516b\u6708"}, {"CAL_SEP", "\u4e5d\u6708"}, {"CAL_OCT", "\u5341\u6708"}, {"CAL_NOV", "\u5341\u4e00\u6708"}, {"CAL_DEC", "\u5341\u4e8c\u6708"}, {Integer.toString(1), "\u6210\u529f\u6267\u884c\u4efb\u52a1\uff1a "}, {Integer.toString(0), "\u6267\u884c\u4efb\u52a1\u5931\u8d25\u3002"}, {Integer.toString(42), "\u6210\u529f\u6267\u884c\u4efb\u52a1\uff0c\u8fd4\u56de\u8b66\u544a\uff1a "}, {Integer.toString(10), "\u547d\u4ee4\u6210\u529f\u6267\u884c\u3002"}, {Integer.toString(-12), "\u547d\u4ee4\u6267\u884c\u90e8\u5206\u6216\u5b8c\u5168\u5931\u8d25\u3002"}, {Integer.toString(-57), "\u7528\u6237\u6743\u9650\u4e0d\u8db3\u4ee5\u6267\u884c\u6b64\u64cd\u4f5c\u3002"}, {Integer.toString(-58), "\u6ca1\u6709\u5904\u7406\u547d\u4ee4\u7684\u4fe1\u606f\u3002"}, {Integer.toString(-59), "\u8be5\u64cd\u4f5c\u65e0\u6cd5\u968f\u65f6\u6267\u884c\u3002"}, {Integer.toString(-56), "\u53ea\u6709\u672c\u5730\u57df\u7ba1\u7406\u5458\u7ec4\u7684\u7528\u6237\u624d\u6709\u6743\u9650\u6267\u884c\u6b64\u547d\u4ee4\u3002"}, {Integer.toString(2), "\u6210\u529f\u6267\u884c\u65b0\u56fa\u4ef6\u68c0\u67e5\uff0c\u4f46\u6ca1\u6709\u53ef\u7528\u7684\u65b0\u56fa\u4ef6 "}, {Integer.toString(3), "\u4efb\u52a1\u7684\u540e\u7aef\u64cd\u4f5c\u4ee5\u524d\u5df2\u6210\u529f\u6267\u884c\uff1a "}, {Integer.toString(4), "\u4efb\u52a1\u7684\u66f4\u65b0\u6570\u636e\u5e93\u64cd\u4f5c\u6210\u529f\uff1a "}, {Integer.toString(5), "\u8bbe\u5907\u53ef\u7528\u4e8e\u5347\u7ea7\u4ee5\u53ca\u6ce8\u518c"}, {Integer.toString(6), "\u514d\u8d39\u8bd5\u7528\u4e0d\u9002\u7528\u4e8e\u8be5\u8bbe\u5907"}, {Integer.toString(7), "\u8bbe\u5907\u53ef\u7528\u4e8e\u5347\u7ea7\u4f46\u4e0d\u53ef\u7528\u4e8e\u6ce8\u518c"}, {Integer.toString(8), "\u8bbe\u5907\u53ef\u7528\u4e8e\u6ce8\u518c\u4f46\u4e0d\u53ef\u7528\u4e8e\u5347\u7ea7"}, {Integer.toString(-1), "\u8bbe\u5907\u7684\u67d0\u4e9b\u53c2\u6570\u6ca1\u6709\u6b63\u786e\u914d\u7f6e\u3002"}, {Integer.toString(-53), "\u8bbe\u5907\u4e0d\u652f\u6301\u591a\u540d\u7ba1\u7406\u5458\u540c\u65f6\u767b\u5f55\u3002"}, {Integer.toString(-63), "\u7f3a\u5c11\u767b\u5f55\u7684\u8bbe\u5907\u51ed\u8bc1\u3002"}, {Integer.toString(-69), "\u7b49\u5f85\u83b7\u53d6\u5f53\u524d\u767b\u5f55 ip \u5730\u5740\u3002"}, {Integer.toString(-70), "JVM OOM\uff1a\u5185\u5b58\u4e0d\u8db3\u65e0\u6cd5\u7ee7\u7eed\uff0c\u5c06\u5728\u4e0b\u6b21\u8fd0\u884c\u65f6\u91cd\u8bd5\u4efb\u52a1"}, {Integer.toString(-64), "\u65e0\u6cd5\u83b7\u53d6\u53d7\u63a7\u88c5\u7f6e\u7684\u8eab\u4efd\u9a8c\u8bc1\u9875\u9762\u4ee5\u8fdb\u884c\u767b\u5f55\u3002"}, {Integer.toString(-64) + "_TT", "- \u8bbe\u5907\u5728\u7ba1\u7406\u5730\u5740\u4e0d\u53ef\u8bbf\u95ee\u3002\n- \u8bbe\u5907\u4e0d\u652f\u6301\u5e76\u884c\u767b\u5f55\uff0c\n\u786e\u8ba4\u6d4f\u89c8\u5668\u662f\u5426\u5df2\u76f4\u63a5\u767b\u5f55\u5230\u8bbe\u5907\u3002"}, {Integer.toString(-65), "\u767b\u5f55\u540e\u65e0\u54cd\u5e94\u3002"}, {Integer.toString(-83), "\u767b\u5f55\u5931\u8d25\uff0c\u539f\u56e0\u662f\u5e8f\u5217\u53f7\u4e0d\u5339\u914d\u3002"}, {Integer.toString(-83) + "_TT", "- \u6dfb\u52a0\u8bbe\u5907\u5230 GMS \u65f6\u6307\u5b9a\u7684\u5e8f\u5217\u53f7\n\u4e0e\u8bbe\u5907\u7684\u5e8f\u5217\u53f7\u4e0d\u5339\u914d\u3002"}, {Integer.toString(-84), "\u767b\u5f55\u5931\u8d25\uff0c\u56e0\u4e3a\u6307\u5b9a\u7684\u767b\u5f55\u6a21\u5f0f\u65e0\u6548\u3002"}, {Integer.toString(-84) + "_TT", "- \u6307\u5b9a\u7684\u767b\u5f55\u6a21\u5f0f\u4e0d\u5c5e\u4e8e\u5141\u8bb8\u6a21\u5f0f\u5217\u8868\u3002\n"}, {Integer.toString(-2), "\u8bbe\u5907\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\u3002"}, {Integer.toString(-918), "[CN]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "\u8be5\u8bbe\u5907\u4f7f\u7528\u5177\u6709 MD5 \u7b7e\u540d\u7684 SSL \u8bc1\u4e66\uff0c\u4f46\u51fa\u4e8e\u5b89\u5168\u539f\u56e0\uff0cMD5 \u7b7e\u540d\u4e0d\u518d\u53d7\u652f\u6301\u3002\u8bf7\u91cd\u65b0\u751f\u6210\u8bc1\u4e66\u4ee5\u7ba1\u7406\u6b64\u8bbe\u5907\u3002"}, {Integer.toString(-917), "\u8bbe\u5907\u6ca1\u6709\u7528\u4e8e\u6267\u884c\u6b64\u4efb\u52a1\u7684\u8bb8\u53ef\u8bc1\u3002"}, {Integer.toString(-71), "\u8bbe\u5907\u7684\u8bbf\u95ee url \u65e0\u6548\u3002"}, {Integer.toString(-71) + "_TT", "- \u65e0\u6cd5\u4ece\u8bbe\u5907\u83b7\u53d6 IP \u5730\u5740\u3002"}, {Integer.toString(-72), "\u8bf7\u6c42\u72b6\u6001 xml \u5931\u8d25\u3002"}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "\u8bf7\u6c42\u72b6\u6001 xml \u5931\u8d25\uff0c\u6ca1\u6709\u6536\u5230\u54cd\u5e94\u3002"}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "\u8bf7\u6c42\u9996\u9009\u9879\u6587\u4ef6\u5931\u8d25\u3002"}, {Integer.toString(-950), "[CN]Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "\u8bf7\u6c42\u9996\u9009\u9879\u6587\u4ef6\u5931\u8d25\uff0c\u6ca1\u6709\u6536\u5230\u54cd\u5e94\u3002"}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "\u9996\u9009\u9879\u6587\u4ef6\u65e0\u6548\u3002"}, {Integer.toString(-76) + "_TT", "- \u6ca1\u6709\u6536\u5230\u9996\u9009\u9879\u6587\u4ef6\u3002\n- \u83b7\u53d6\u7684\u9996\u9009\u9879\u6587\u4ef6\u53ef\u80fd\u5df2\u635f\u574f\u3002\n- \u9996\u9009\u9879\u6587\u4ef6\u53ef\u80fd\u4e0d\u5b8c\u6574\u3002"}, {Integer.toString(-77), "\u8bbe\u5907\u83b7\u53d6\u5931\u8d25\u3002"}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "\u6536\u5230\u5fc3\u8df3\u6d88\u606f\u3002"}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "\u672a\u6536\u5230\u5fc3\u8df3\u6d88\u606f\u3002"}, {Integer.toString(-78) + "_TT", "- \u672a\u4ece\u8bbe\u5907\u53d1\u9001\u5fc3\u8df3\u6d88\u606f\u3002\n- \u4ece\u8bbe\u5907\u53d1\u9001\u7684\u5fc3\u8df3\u6d88\u606f\u65e0\u6cd5\u5230\u8fbe GMS\u3002\n- \u672a\u5728 GMS \u7f51\u5173\u4e0a\u521b\u5efa SA\uff08\u96a7\u9053\uff09\u3002\n- \u672a\u5728 GMS \u7f51\u5173\u4e0a\u521b\u5efa\u5141\u8bb8 Syslog \u7684\u89c4\u5219\u3002\n- \u4f8b\u5982\u8bbe\u5907 - \u8bf7\u9075\u5faa\u201c\u63a7\u5236\u53f0-Web \u670d\u52a1-\u5206\u53d1\u7684\u90e8\u7f72\u201d\u4e2d\u201c\u6ce8:\u201d\u90e8\u5206\u4e2d\u6240\u8ff0\u7684\u8bf4\u660e\u3002"}, {Integer.toString(-79), "\u6536\u5230\u7684\u5fc3\u8df3\u6d88\u606f\u65e0\u6cd5\u89e3\u5bc6\u3002"}, {Integer.toString(-79) + "_TT", "- \u6dfb\u52a0\u8bbe\u5907\u5230 GMS \u65f6\u6307\u5b9a\u7684\u5bc6\u7801\n\u4e0e\u8bbe\u5907\u7684\u5bc6\u7801\u4e0d\u5339\u914d\u3002"}, {Integer.toString(13), "\u6536\u5230 syslog \u6d88\u606f\u3002"}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "\u672a\u6536\u5230 syslog \u6d88\u606f\u3002"}, {Integer.toString(-81) + "_TT", "- Syslog \u6d88\u606f\u5e76\u975e\u6765\u81ea\u8bbe\u5907\u3002D138- \u4ece\u8bbe\u5907\u53d1\u9001\u7684 Syslog \u6d88\u606f\u4e0d\u80fd\u5230\u8fbe GMS\u3002\n- \u672a\u5728 GMS \u7f51\u5173\u4e0a\u521b\u5efa SA\uff08\u96a7\u9053\uff09\u3002\n- \u672a\u5728 GMS \u7f51\u5173\u4e0a\u521b\u5efa\u5141\u8bb8 Syslog \u7684\u89c4\u5219\u3002"}, {Integer.toString(-82), "\u6536\u5230\u7684 syslog \u6d88\u606f\u65e0\u6cd5\u89e3\u5bc6\u3002"}, {Integer.toString(-82) + "_TT", "- \u6dfb\u52a0\u8bbe\u5907\u5230 GMS \u65f6\u6307\u5b9a\u7684\u5bc6\u7801\n\u4e0e\u8bbe\u5907\u7684\u5bc6\u7801\u4e0d\u5339\u914d\u3002"}, {Integer.toString(12), "\u8bbe\u5907\u5df2\u6dfb\u52a0;\u7b49\u5f85\u52a0\u5165GMS."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "\u8bbe\u5907\u5df2\u6dfb\u52a0;\u7b49\u5f85\u52a0\u5165GMS."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "\u65e0\u6cd5\u8bbf\u95ee\u8bbe\u5907\u3002\u8bbe\u5907\u6216\u7f51\u7edc\u65e0\u6cd5\u5173\u95ed\u3002"}, {Integer.toString(-4), "\u81f3\u5c11\u4e00\u4e2a\u8bbe\u5907\u53c2\u6570\u914d\u7f6e\u4e0d\u6b63\u786e\u3002"}, {Integer.toString(-5), "SonicWall \u6ce8\u518c\u7f51\u7ad9\u65e0\u6cd5\u8bbf\u95ee\u3002"}, {Integer.toString(-6), "\u5347\u7ea7/\u8ba2\u9605\u7684\u6fc0\u6d3b\u7801\u65e0\u6548\u3002"}, {Integer.toString(-7), "\u8bbe\u5907\u672a\u6ce8\u518c\u3002"}, {Integer.toString(-8), "SonicWall GMS \u6ce8\u518c\u7f51\u7ad9\u5df2\u5173\u95ed\uff0c\u6216\u8005\u65e0\u6cd5\u8bbf\u95ee\u3002\u8bf7\u68c0\u67e5 SonicWall GMS \u670d\u52a1\u5668\u7684 Internet \u8bbf\u95ee\u3002"}, {Integer.toString(-9), "\u6ca1\u6709\u53ef\u7528\u4e8e\u5347\u7ea7\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-10), "\u5f53\u524d\u5c1d\u8bd5\u6dfb\u52a0\u7684\u8bbe\u5907\u5df2\u5728 SonicWall GMS \u7684\u7ba1\u7406\u4e4b\u4e0b\u3002"}, {Integer.toString(-11), "\u5c1d\u8bd5\u914d\u7f6e\u65e0\u6548\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-15), "\u5c1d\u8bd5\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u670d\u52a1\u7684\u89c4\u5219\u3002"}, {Integer.toString(-16), "\u8fdd\u53cd SonicWall \u8bb8\u53ef\u8bc1\u3002"}, {Integer.toString(-17), "SonicWall GMS \u5185\u90e8\u9519\u8bef\u3002"}, {Integer.toString(-18), "\u4e0b\u8f7d\u5185\u5bb9\u8fc7\u6ee4\u5668\u5217\u8868\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-19), "\u5c1d\u8bd5\u5220\u9664\u5b58\u5728\u89c4\u5219\u7684\u670d\u52a1\u3002"}, {Integer.toString(-47), "\u65e0\u6cd5\u8054\u7cfb AV \u670d\u52a1\u5668"}, {Integer.toString(-20), "\u5185\u90e8 AV \u9519\u8bef"}, {Integer.toString(-21), "\u5f85\u5904\u7406\u7684 AV \u4efb\u52a1"}, {Integer.toString(-22), "AV \u6fc0\u6d3b\u7801\u65e0\u6548\u3002"}, {Integer.toString(-23), "AV \u6fc0\u6d3b\u7801\u5df2\u7ecf\u4f7f\u7528\u3002"}, {Integer.toString(-24), "AV \u5bc6\u7801\u4e0d\u6b63\u786e\u3002"}, {Integer.toString(-25), "AV \u7eed\u8ba2\u8ba1\u6570\u9519\u8bef\u3002"}, {Integer.toString(-26), "AV \u7eed\u8ba2\u592a\u65e9\u3002"}, {Integer.toString(-27), "\u5c1d\u8bd5\u7ba1\u7406\u6bd4\u63a8\u8350\u66f4\u65e7\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-28), "\u81ea\u52a8\u66f4\u65b0\u670d\u52a1\u5668\u5f53\u524d\u5173\u95ed\u6216\u65e0\u6cd5\u8bbf\u95ee\u3002"}, {Integer.toString(-85), "\u7ba1\u7406\u7cfb\u7edf\u5907\u4efd\u64cd\u4f5c\u5931\u8d25\u3002"}, {Integer.toString(-29), "\u56fa\u4ef6\u65e0\u6cd5\u4e0a\u4f20\u5230\u8bbe\u5907\u3002"}, {Integer.toString(-62), "\u5c1d\u8bd5\u4e0a\u4f20\u5230\u8bbe\u5907\u7684\u56fa\u4ef6\u65e0\u6548\u3002"}, {Integer.toString(-60), "\u56fa\u4ef6\u5347\u7ea7\u7684\u6700\u5927\u6587\u4ef6\u5927\u5c0f\u4e3a 4MB\u3002"}, {Integer.toString(-31), "\u5c06\u56fa\u4ef6\u5199\u5165\u5230\u672c\u5730\u78c1\u76d8\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-30), "\u4e0b\u8f7d\u56fa\u4ef6\u65f6\u51fa\u9519\u3002\u81ea\u52a8\u66f4\u65b0\u670d\u52a1\u5668\u5f53\u524d\u4e0d\u53ef\u7528\u6216\u65e0\u6cd5\u8bbf\u95ee\u3002"}, {Integer.toString(-32), "\u6570\u636e\u5e93\u8bbf\u95ee\u9519\u8bef\u3002"}, {Integer.toString(-33), "\u914d\u7f6e\u8bbe\u5907\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-34), "\u9a8c\u8bc1\u7528\u6237\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-68), "\u57df\u672a\u627e\u5230\u6216\u57df\u540d\u65e0\u6548\u3002"}, {Integer.toString(-35), "\u66f4\u65b0 CMP \u5bc6\u7801\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-36), "\u6ca1\u6709\u53ef\u7528\u4e8e\u6ce8\u518c\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-37), "\u65e0\u6cd5\u8054\u7cfb\u9632\u75c5\u6bd2\u670d\u52a1\u5668\uff0c\u6216\u8005\u9632\u75c5\u6bd2\u670d\u52a1\u5668\u62a5\u544a\u672a\u77e5\u9519\u8bef\u3002"}, {Integer.toString(-38), "\u6ca1\u6709\u53ef\u7528\u4e8e\u6ce8\u518c\u6216\u5347\u7ea7\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-39), "\u6dfb\u52a0\u6fc0\u6d3b\u7801\u5230\u6570\u636e\u5e93\u65f6\u51fa\u73b0\u95ee\u9898\u3002"}, {Integer.toString(-40), "\u5220\u9664\u6fc0\u6d3b\u7801\u65f6\u51fa\u9519\u3002\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u8fd9\u6837\u7684\u6fc0\u6d3b\u7801\u3002"}, {Integer.toString(-41), "\u5220\u9664\u6fc0\u6d3b\u7801\u65f6\u53d1\u751f\u672a\u77e5\u9519\u8bef\u3002"}, {Integer.toString(-48), "\u5347\u7ea7\u5931\u8d25"}, {Integer.toString(-49), "\u62d2\u7edd\u8bbf\u95ee\u4ee5\u6267\u884c CLI \u547d\u4ee4\u3002"}, {Integer.toString(-42), "\u6570\u636e\u5e93\u65e0\u6cd5\u6210\u529f\u66f4\u65b0\u3002"}, {Integer.toString(-43), "\u7535\u5b50\u90ae\u4ef6\u65e0\u6cd5\u53d1\u9001\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u5730\u5740\u3002"}, {Integer.toString(-44), "\u65e0\u6cd5\u4ece\u8bbe\u5907\u68c0\u7d22\u5230\u6280\u672f\u652f\u6301\u62a5\u544a\u3002"}, {Integer.toString(-45), "\u65e0\u6cd5\u4ece\u8bbe\u5907\u68c0\u7d22\u5230 SPD \u6587\u4ef6\u3002"}, {Integer.toString(-46), "\u65e0\u6cd5\u4ece\u8bbe\u5907\u68c0\u7d22\u5230\u8bc1\u4e66\u6587\u4ef6\u3002"}, {Integer.toString(-50), "\u65e0\u6cd5\u540c\u6b65\u96a7\u9053\u72b6\u6001\u76d1\u89c6\u4fe1\u606f\u3002"}, {Integer.toString(-51), "\u65e0\u6cd5\u4ece\u8bbe\u5907\u68c0\u7d22\u5230 RCF \u6587\u4ef6\u3002"}, {Integer.toString(-52), "\u7528\u6237\u5e10\u6237\u5df2\u7981\u7528\uff1b\u767b\u5f55\u5931\u8d25\u3002"}, {Integer.toString(-61), "\u4ee5\u524d\u6267\u884c\u7684\u4efb\u52a1\u9700\u8981\u91cd\u65b0\u542f\u52a8\uff0c\u5c06\u5728\u4e0b\u4e00\u95f4\u9694\u4e2d\u91cd\u8bd5\u4efb\u52a1\u3002"}, {Integer.toString(-229), "\u5982\u9700\u6fc0\u6d3b\u6b64\u670d\u52a1\uff0c\u60a8\u5fc5\u987b\u62e5\u6709\u6709\u6548\u7684\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4\u8ba2\u9605\u3002"}, {Integer.toString(-230), "\u60a8\u7684 Sonic OS \u7248\u672c\u4e0d\u652f\u6301\u96c6\u7fa4\uff08\u591a\u8282\u70b9\u8ba2\u9605\uff09\u3002\u8bf7\u5347\u7ea7\u6216\u4f7f\u7528\u5355\u8282\u70b9\u5bc6\u94a5\u3002"}, {Integer.toString(-231), "\u60a8\u4e0d\u80fd\u6df7\u5408\u4e0d\u540c WANOPT \u578b\u53f7\u7684\u6fc0\u6d3b\u5bc6\u94a5\u3002"}, {Integer.toString(-232), "\u60a8\u7684 WANOPT \u6a21\u578b\u4e0d\u652f\u6301\u96c6\u7fa4\uff08\u591a\u8282\u70b9\u8ba2\u9605\uff09\u3002"}, {Integer.toString(-201), "API \u53c2\u6570\u51fa\u9519\u3002"}, {Integer.toString(-202), "\u7528\u6237\u5df2\u767b\u5f55\u3002"}, {Integer.toString(-203), "\u6b64\u7248\u672c\u4e2d\u672a\u5b9e\u73b0 SonicWall GMS API\u3002"}, {Integer.toString(-204), "\u4f1a\u8bdd\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-205), "\u6b63\u5728\u9000\u51fa SonicWall GMS Shell"}, {Integer.toString(-206), "API \u53c2\u6570\u4e22\u5931"}, {Integer.toString(-207), "\u6ca1\u6709\u6b64\u7c7b\u522b\u7684\u884c"}, {Integer.toString(-208), "\u672a\u63d0\u4f9b\u6fc0\u6d3b\u7801"}, {Integer.toString(-209), "\u672a\u6307\u5b9a\u6fc0\u6d3b\u7c7b\u578b"}, {Integer.toString(-210), "IP \u5730\u5740\u65e0\u6548\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-211), "\u6307\u5b9a\u7684\u957f\u5ea6\u5c0f\u4e8e\u6240\u9700\u957f\u5ea6\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-212), "\u5b57\u7b26\u4e32\u53ea\u80fd\u5305\u542b\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-213), "\u5907\u7528\u8c03\u5ea6\u7a0b\u5e8f\u7684 IP \u5730\u5740\u4e0d\u80fd\u4e0e\u4e3b\u8981\u8c03\u5ea6\u7a0b\u5e8f\u7684\u76f8\u540c\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-214), "\u5728\u6307\u5b9a\u7684 IP \u5730\u5740\u672a\u627e\u5230\u8c03\u5ea6\u7a0b\u5e8f\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-215), "\u6dfb\u52a0\u8bbe\u5907\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-226), "\u60a8\u6ca1\u6709\u6709\u6548\u7684\u8bb8\u53ef\u8bc1\u3002"}, {Integer.toString(-225), "\u89e3\u6790\u8f93\u5165 XML \u65f6\u51fa\u9519"}, {Integer.toString(-228), "\u5728\u8f93\u5165 XML \u4e2d\u627e\u5230\u4e86\u65e0\u6548\u7684\u5185\u5bb9"}, {Integer.toString(-216), "\u62a5\u544a\u7c7b\u578b\u65e0\u6548\u6216\u672a\u77e5\u3002\u4e0d\u77e5\u9053\u62a5\u544a\u662f\u6bcf\u65e5\u3001\u6bcf\u5468\u8fd8\u662f\u6bcf\u6708\u62a5\u544a"}, {Integer.toString(-217), "\u76ee\u6807\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65e0\u6548\u3002\u5e94\u63d0\u4f9b\u81f3\u5c11\u4e00\u4e2a\u6709\u6548\u7684\u76ee\u6807\u5730\u5740"}, {Integer.toString(-218), "\u6e90\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65e0\u6548"}, {Integer.toString(-219), "SMTP \u670d\u52a1\u5668\u5730\u5740\u65e0\u6548"}, {Integer.toString(-220), "\u62a5\u544a\u5217\u8868\u65e0\u6548\u3002\u5e94\u63d0\u4f9b\u81f3\u5c11\u4e00\u4e2a\u6709\u6548\u7684\u62a5\u544a ID"}, {Integer.toString(-221), "\u6570\u636e\u5e93\u4e2d\u6ce8\u518c\u7684 Analyzer \u8c03\u5ea6\u7a0b\u5e8f IP \u5730\u5740\u65e0\u6548"}, {Integer.toString(-222), "\u6570\u636e\u5e93\u4e2d\u6ce8\u518c\u7684 Analyzer \u8c03\u5ea6\u7a0b\u5e8f\u7aef\u53e3\u53f7\u65e0\u6548"}, {Integer.toString(-223), "\u62a5\u544a\u65e5\u671f\u65e0\u6548\u6216\u672a\u77e5\u3002\u63d0\u4f9b\u7684\u62a5\u544a\u65e5\u671f\u5e94\u4e3a mm/dd/yyyy \u683c\u5f0f"}, {Integer.toString(-224), "\u63d0\u4f9b\u7684\u65e5\u7a0b ID \u65e0\u6548"}, {Integer.toString(-502), "zip \u6587\u4ef6\u5bc6\u7801\u4fdd\u62a4\u7684\u5bc6\u7801\u4e22\u5931"}, {Integer.toString(-503), "\u63d0\u4f9b\u7684\u8282\u70b9\u65e0\u6548\u3002\u5e94\u6307\u5b9a\u5e8f\u5217\u53f7\uff08\u7528\u4e8e\u8bbe\u5907\u8282\u70b9\uff09\u6216\u663e\u793a\u540d\u79f0\uff08\u7528\u4e8e\u7ec4\u8282\u70b9\uff09\u3002"}, {Integer.toString(-10001), "\u53d1\u751f\u901a\u4fe1\u9519\u8bef"}, {Integer.toString(-10002), "\u89e3\u6790\u8f93\u5165 XML \u65f6\u51fa\u9519"}, {Integer.toString(-10005), "\u8c03\u7528\u672a\u77e5\u7ec4\u4ef6"}, {Integer.toString(-10006), "\u8c03\u7528\u672a\u77e5\u7684 AV \u65b9\u6cd5"}, {Integer.toString(-10011), "\u5c1d\u8bd5\u5347\u7ea7\u8fc7\u671f\u540e\u7684 AV\u3002"}, {Integer.toString(-10012), "\u5c1d\u8bd5\u5347\u7ea7\u672a\u6ce8\u518c\u8bbe\u5907\u7684 AV\u3002"}, {Integer.toString(-10013), "\u5c1d\u8bd5\u7eed\u8ba2\u6bd4\u5f53\u524d\u652f\u6301\u8282\u70b9\u66f4\u5c11\u7684 AV\u3002"}, {Integer.toString(-10014), "\u5c1d\u8bd5\u7eed\u8ba2 AV \u8fc7\u65e9\u3002"}, {Integer.toString(-10020), "\u66f4\u6539 AV \u5bc6\u7801\u7684\u4ee5\u524d\u4efb\u52a1\u5f85\u5904\u7406\u3002"}, {Integer.toString(-10100), "\u4e0e McAfee \u540e\u7aef\u901a\u4fe1\u65f6\u51fa\u9519"}, {Integer.toString(-10101), "McAfee \u65e0\u6cd5\u627e\u5230\u6b64\u7f51\u7ad9\u7684\u4efb\u4f55\u8bb0\u5f55\u3002"}, {Integer.toString(-10102), "McAfee \u65e0\u6cd5\u5339\u914d\u6b64\u7f51\u7ad9\u7684\u65e7\u5bc6\u7801\u3002"}, {Integer.toString(-10103), "AV \u7f51\u7ad9\u5df2\u6ce8\u518c\u3002"}, {Integer.toString(-10200), "\u4e0e AV \u6570\u636e\u5e93\u670d\u52a1\u5668\u901a\u4fe1\u65f6\u51fa\u9519"}, {Integer.toString(-10201), "\u8bbe\u5907\u5e8f\u5217\u53f7\u5df2\u6ce8\u518c"}, {Integer.toString(-10202), "\u63d0\u4f9b\u7684\u8bb8\u53ef\u8bc1\u5bc6\u94a5\u5df2\u7ecf\u4f7f\u7528"}, {Integer.toString(-10203), "\u4ece\u672a\u6ce8\u518c\u6b64\u8bbe\u5907\u7684\u9632\u75c5\u6bd2"}, {Integer.toString(-10204), "\u63d0\u4f9b\u7684\u591a\u4e2a\u5bc6\u94a5\u5fc5\u987b\u6709\u76f8\u540c\u7684\u671f\u9650"}, {Integer.toString(-10205), "\u514d\u8d39\u8bd5\u7528\u5bc6\u94a5\u4e0d\u5141\u8bb8\u7528\u4e8e\u5347\u7ea7"}, {Integer.toString(-10206), "\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u63d0\u4f9b\u4e86\u975e\u6cd5\u503c"}, {Integer.toString(-10210), "\u63d0\u4f9b\u7684\u5e8f\u5217\u53f7\u65e0\u6548"}, {Integer.toString(-10211), "\u63d0\u4f9b\u7684\u8bb8\u53ef\u8bc1\u5bc6\u94a5\u5df2\u7ecf\u6ce8\u518c"}, {Integer.toString(-10212), "\u63d0\u4f9b\u7684\u65b0\u5bc6\u7801\u6709\u65e0\u6548\u5b57\u7b26\u6216\u957f\u5ea6\u5e76\u975e 6 \u5230 12 \u4e2a\u5b57\u7b26"}, {Integer.toString(-10213), "\u63d0\u4f9b\u7684\u9632\u75c5\u6bd2\u5bc6\u7801\u65e0\u6548"}, {Integer.toString(-10214), "\u63d0\u4f9b\u7684 OEM \u4ee3\u7801\u65e0\u6548"}, {Integer.toString(-10215), "\u63d0\u4f9b\u7684 WAN IP \u5730\u5740\u65e0\u6548"}, {Integer.toString(-10220), "\u6b64\u8bbe\u5907\u4ee5\u524d\u7684\u8bf7\u6c42\u4ecd\u5f85\u5904\u7406"}, {Integer.toString(-10250), "\u8bbe\u5907\u5df2\u6ce8\u518c AV \u5e76\u9700\u8981\u91cd\u65b0\u6fc0\u6d3b\u3002"}, {Integer.toString(-10251), "\u7531\u4e8e\u5bc6\u7801\u65e0\u6548\uff0c\u8bbe\u5907\u65e0\u6cd5\u91cd\u65b0\u6fc0\u6d3b"}, {Integer.toString(-10260), "\u65e0\u6cd5\u627e\u5230\u63d0\u4f9b\u7684\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u5e8f\u5217\u53f7"}, {Integer.toString(-10261), "\u63d0\u4f9b\u7684\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u5e8f\u5217\u53f7\u65e0\u6548"}, {Integer.toString(-10262), "\u8bbe\u5907\u5e76\u975e\u4efb\u4f55\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u6210\u5458"}, {Integer.toString(-10263), "\u8bbe\u5907\u5df2\u6709\u6d3b\u52a8\u7684\u9632\u75c5\u6bd2\u8ba2\u9605\u5e76\u4e14\u65e0\u6cd5\u6dfb\u52a0\u5230\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4"}, {Integer.toString(-10264), "\u8bbe\u5907\u5e76\u975e\u6b64\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u6210\u5458"}, {Integer.toString(-10265), "\u65e0\u6cd5\u5220\u9664\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u6240\u6709\u8005"}, {Integer.toString(-10266), "\u8bbe\u5907\u5df2\u7ecf\u662f\u53e6\u4e00\u4e2a\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u6210\u5458"}, {Integer.toString(-10267), "\u63d0\u4f9b\u7684\u65b0\u8bb8\u53ef\u8bc1\u8ba1\u6570\u8d85\u51fa\u4e86\u53ef\u7528\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u8bb8\u53ef\u8bc1\u6570"}, {Integer.toString(-10004), "\u9632\u75c5\u6bd2\u64cd\u4f5c\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u4e22\u5931"}, {Integer.toString(-10300), "\u65e0\u6cd5\u627e\u5230\u63d0\u4f9b\u7684\u5173\u4e8e\u5168\u9762\u4fdd\u62a4\u5408\u4f5c\u4f19\u4f34\u7684\u4fe1\u606f"}, {Integer.toString(-10301), "\u63d0\u4f9b\u7684\u5168\u9762\u4fdd\u62a4\u5408\u4f5c\u4f19\u4f34\u5bc6\u7801\u4e0d\u6b63\u786e"}, {Integer.toString(-10303), "\u63d0\u4f9b\u7684\u9632\u75c5\u6bd2\u8bb8\u53ef\u8bc1\u8ba1\u6570\u65e0\u6548"}, {Integer.toString(-10304), "\u5c1d\u8bd5\u7ba1\u7406\u6ca1\u6709\u5206\u914d\u7ed9\u5168\u9762\u4fdd\u62a4\u5408\u4f5c\u4f19\u4f34\u7684\u8bbe\u5907"}, {Integer.toString(-20000), "\u4e0e\u540e\u7aef\u6ce8\u518c\u670d\u52a1\u5668\u901a\u4fe1\u65f6\u53d1\u751f\u672a\u77e5\u9519\u8bef\u3002"}, {Integer.toString(-20101), "\u5df2\u4e3a\u8be5\u7528\u6237\u6ce8\u518c\u8bf7\u6c42\u7684\u8054\u7cfb\u3002"}, {Integer.toString(-20102), "\u65e0\u6cd5\u4e3a\u7528\u6237\u6dfb\u52a0\u8bf7\u6c42\u7684\u8054\u7cfb\u3002"}, {Integer.toString(-20106), "\u65e0\u6cd5\u4fee\u6539\uff0c\u539f\u56e0\u662f\u672a\u627e\u5230\u7528\u6237\u4fe1\u606f\u3002"}, {Integer.toString(-20111), "\u672a\u627e\u5230\u8054\u7cfb\u4fe1\u606f\u3002"}, {Integer.toString(-20112), "\u65e0\u6cd5\u4fee\u6539\u8054\u7cfb\u4fe1\u606f\u3002"}, {Integer.toString(-20113), "\u65e0\u6cd5\u5220\u9664\u8054\u7cfb\u4fe1\u606f\u3002"}, {Integer.toString(-20116), "\u8bbe\u5907\u5df2\u6ce8\u518c\u5230\u5176\u4ed6 MySonicWall.com \u5e10\u6237\u3002"}, {Integer.toString(-20117), "\u8bbe\u5907\u6ce8\u518c\u7cfb\u7edf\u4e2d\u672a\u627e\u5230\u6307\u5b9a\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-20118), "\u8bbe\u5907\u65e0\u6cd5\u901a\u8fc7\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u6ce8\u518c\u3002"}, {Integer.toString(-20119), "\u65e0\u6cd5\u68c0\u7d22\u6307\u5b9a\u8bbe\u5907\u7684\u72b6\u6001\u3002"}, {Integer.toString(-20121), "\u6307\u5b9a\u7684\u8bbe\u5907\u672a\u6ce8\u518c\u3002"}, {Integer.toString(-20122), "\u6307\u5b9a\u7684\u6fc0\u6d3b\u5bc6\u94a5\u5df2\u4f7f\u7528\u8fc7\u3002"}, {Integer.toString(-20123), "\u4f7f\u7528\u7684\u6fc0\u6d3b\u7801\u65e0\u6548\u3002"}, {Integer.toString(-20124), "\u4f7f\u7528\u7684\u6fc0\u6d3b\u7801/\u8bbe\u5907\u7ec4\u5408\u65e0\u6548\u3002"}, {Integer.toString(-20125), "\u901a\u8fc7\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u7684\u5347\u7ea7\u672a\u5b8c\u6210\u3002"}, {Integer.toString(-20126), "\u901a\u8fc7\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u7684\u6fc0\u6d3b\u672a\u5b8c\u6210\u3002"}, {Integer.toString(-20131), "\u6ce8\u518c SonicWall GMS \u7cfb\u7edf\u7684\u9519\u8bef MAC \u5730\u5740\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-20132), "SonicWall GMS \u7cfb\u7edf\u672a\u6ce8\u518c\u3002"}, {Integer.toString(-20133), "\u6307\u5b9a\u7684 SonicWall GMS \u5e8f\u5217\u53f7\u65e0\u6548\u3002"}, {Integer.toString(-20134), "\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u65e0\u6cd5\u68c0\u7d22 SonicWall GMS \u72b6\u6001\u3002"}, {Integer.toString(-20135), "SonicWall GMS \u5df2\u6ce8\u518c\u3002"}, {Integer.toString(-20136), "\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u65e0\u6cd5\u6ce8\u518c\u60a8\u7684 SonicWall GMS \u7cfb\u7edf\u3002"}, {Integer.toString(-20142), "\u9519\u8bef\u7684 mac \u5730\u5740\u5df2\u6ce8\u518c\u3002"}, {Integer.toString(-20143), "\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u65e0\u6cd5\u68c0\u7d22 SonicWall GMS \u7684\u53ef\u7528\u5347\u7ea7\u7a0b\u5e8f\u3002"}, {Integer.toString(-20144), "\u6ca1\u6709\u6307\u5b9a\u57fa\u672c\u5305\u671f\u9650\u3002"}, {Integer.toString(-20145), "\u8bfb\u53d6\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u7684\u57fa\u672c\u5305\u7cfb\u7edf\u4fe1\u606f\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-20146), "\u6ca1\u6709\u53ef\u7528\u4e8e\u672c\u4ea7\u54c1\u7684\u8282\u70b9\u5347\u7ea7\u3002"}, {Integer.toString(-20147), "\u60a8\u7684 SonicWall GMS \u5b89\u88c5\u5df2\u6210\u4e3a\u4e00\u4e2a\u96f6\u552e\u7248\u3002"}, {Integer.toString(-20148), "\u8bbe\u5907\u672a\u6ce8\u518c\u3002"}, {Integer.toString(-20149), "\u5728\u540e\u7aef\u6ce8\u518c\u670d\u52a1\u5668\u4e2d\u68c0\u7d22\u6709\u5173 SonicWall GMS \u7cfb\u7edf\u7684\u4fe1\u606f\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-20150), "\u6307\u5b9a\u7684 SonicWall GMS \u5e8f\u5217\u53f7\u6ca1\u6709\u6ce8\u518c\u7ed9\u7528\u6237\u3002"}, {Integer.toString(-20151), "\u5728\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u63d2\u5165\u62a5\u544a\u4fe1\u606f\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-20152), "SonicWall GMS \u5e8f\u5217\u53f7\u548c\u7528\u6237\u540d\u7ec4\u5408\u65e0\u6548\u3002"}, {Integer.toString(-20153), "\u5f53\u5347\u7ea7 SonicWall GMS \u4ee5\u4fbf\u96c6\u6210 ViewPoint \u65f6\u540e\u53f0\u6ce8\u518c\u7cfb\u7edf\u51fa\u9519\u3002"}, {Integer.toString(-20154), "\u8bbe\u5907\u6ca1\u6709\u6ce8\u518c\uff0c\u6216\u6307\u5b9a\u7684\u7528\u6237\u540d\u65e0\u6548\u3002"}, {Integer.toString(-20155), "\u6b64\u670d\u52a1\u7684\u57fa\u672c\u5408\u540c\u6ca1\u6709\u6fc0\u6d3b\u6216\u5df2\u8fc7\u671f\u3002"}, {Integer.toString(-20201), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u7cfb\u7edf\u7684 XML \u8f93\u5165\u65e0\u6548\u3002"}, {Integer.toString(-20202), "\u5185\u90e8\u9519\u8bef\uff1a\u8f93\u5165\u4e2d\u672a\u6307\u5b9a\u7528\u6237\u540d\u3002"}, {Integer.toString(-20203), "\u4e3a SonicWall GMS \u6ce8\u518c\u7cfb\u7edf\u63a5\u53e3\u6307\u5b9a\u7684\u5bc6\u7801\u65e0\u6548\u3002"}, {Integer.toString(-20204), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u8bf7\u6c42\u7684\u65b9\u6cd5\u65e0\u6548\u3002"}, {Integer.toString(-20205), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u8bf7\u6c42\u7684 XML \u7248\u672c\u65e0\u6548\u3002"}, {Integer.toString(-20401), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u53d1\u751f\u6570\u636e\u5e93\u9519\u8bef\u3002"}, {Integer.toString(-20402), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u53d1\u751f\u6ce8\u518c\u8868\u9519\u8bef\u3002"}, {Integer.toString(-20403), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u53d1\u751f\u7ec4\u4ef6\u9519\u8bef\u3002"}, {Integer.toString(-20404), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u53d1\u751f\u7a0b\u5e8f\u9519\u8bef\u3002"}, {Integer.toString(-20140), "\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u672a\u627e\u5230\u6307\u5b9a\u8bbe\u5907\u7684 PKI \u4fe1\u606f\u3002"}, {Integer.toString(-20141), "\u6307\u5b9a\u8bbe\u5907\u7684 PKI \u670d\u52a1\u672a\u6fc0\u6d3b\u3002"}, {Integer.toString(-227), "\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u7528\u4e8e\u6587\u4ef6\u4e0a\u4f20\u3002\u8bf7\u4e0a\u4f20\u8f83\u5c0f\u5927\u5c0f\u7684\u6587\u4ef6\u3002"}, {Integer.toString(-66), "\u5c1d\u8bd5\u4e0a\u4f20\u5230\u8bbe\u5907\u7684\u7b7e\u540d\u6587\u4ef6\u65e0\u6548\u3002"}, {Integer.toString(-67), "\u7b7e\u540d\u6587\u4ef6\u65e0\u6cd5\u4e0a\u4f20\u5230\u8bbe\u5907\u3002\u8bf7\u786e\u8ba4\u6b64\u64cd\u4f5c\u662f\u5426\u9002\u7528\u4e8e\u6b64\u578b\u53f7/\u7248\u672c\u3002"}, {Integer.toString(-500), "\u4ece lm2.sonicwall.com \u6536\u5230\u7684\u9519\u8bef\u3002"}, {Integer.toString(-501), "\u65e0\u6cd5\u8bbf\u95ee lm2.sonicwall.com \u7f51\u7ad9\u3002"}, {Integer.toString(-907), "\u4e0d\u652f\u6301\u8bbe\u5907\u4e0a\u7684\u56fa\u4ef6\u7248\u672c\u3002"}, {Integer.toString(-901), "\u8bb0\u5f55 id \u65e0\u6548\u6216\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-902), "\u65e0\u6cd5\u5e94\u7528\u5b9e\u4f53\u5c01\u95ed\u8bb0\u5f55\u3002"}, {Integer.toString(-903), "\u65e0\u6cd5\u5e94\u7528\u8bb0\u5f55\u3002"}, {Integer.toString(-904), "\u6a21\u677f id \u65e0\u6548\u6216\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-905), "\u65e0\u6cd5\u5e94\u7528\u8bb0\u5f55\u3002"}, {Integer.toString(-906), "\u65e0\u6cd5\u5e94\u7528\u6a21\u677f\u3002"}, {Integer.toString(-908), "\u7b49\u5f85\u6765\u81ea\u6c60\u7684\u8fde\u63a5\u8d85\u65f6\u3002"}, {Integer.toString(-909), "\u7b49\u5f85\u5230\u8fdc\u7a0b\u4e3b\u673a\u7684\u8fde\u63a5\u8d85\u65f6\u3002"}, {Integer.toString(-910), "\u6b64\u8bbe\u5907\u7684\u914d\u7f6e\u8bbe\u7f6e\u4e0d\u6b63\u786e\u3002"}, {Integer.toString(-911), "\u7b49\u5f85\u786e\u5b9a\u6b64\u8bbe\u5907\u7684\u9002\u7528\u914d\u7f6e\u8bbe\u7f6e\u3002"}, {Integer.toString(-912), "\u65e0\u6cd5\u627e\u5230 Web \u670d\u52a1\u4e3b\u673a\u3002"}, {Integer.toString(-913), "\u65e0\u6cd5\u521b\u5efa Web \u670d\u52a1\u8fde\u63a5\u3002"}, {Integer.toString(-914), "\u901a\u8fc7 Web \u670d\u52a1\u8bbf\u95ee\u6570\u636e\u6216\u8d44\u6e90\u65f6\u51fa\u73b0\u95ee\u9898\u3002"}, {Integer.toString(-915), "\u65e0\u6cd5\u9a8c\u8bc1 Web \u670d\u52a1\u3002"}, {Integer.toString(-800), "\u6b64\u8bbe\u5907\u4e0d\u652f\u6301 GMS \u7684\u5916\u90e8\u6d41\u91cf\u62a5\u544a"}, {Integer.toString(-801), "\u6d41\u91cf\u8f6c\u53d1\u5668\u7f51\u5173\u914d\u7f6e\u4e0d\u6b63\u786e"}, {Integer.toString(-802), "\u6b64\u578b\u53f7\u4e0d\u652f\u6301 GMS \u7684\u5916\u90e8\u6d41\u91cf\u62a5\u544a"}, {Integer.toString(-803), "\u6b64\u56fa\u4ef6\u7248\u672c\u4e0d\u652f\u6301 GMS \u7684\u5916\u90e8\u6d41\u91cf\u62a5\u544a"}, {Integer.toString(-804), "\u5e94\u7528\u7a0b\u5e8f\u53ef\u89c6\u5316\u672a\u5728\u6b64\u8bbe\u5907\u4e0a\u83b7\u5f97\u6388\u6743"}, {Integer.toString(-805), "\u53ef\u7528\u4e8e\u6d41\u91cf\u4ee3\u7406\u5206\u914d\u7684\u5b58\u50a8\u7a7a\u95f4\u4e0d\u8db3"}, {Integer.toString(-806), "\u53ef\u7528\u4e8e\u6d41\u91cf\u4ee3\u7406\u5206\u914d\u7684\u8fd0\u884c\u65f6\u5185\u5b58\u4e0d\u8db3"}, {Integer.toString(-807), "\u5411\u6d41\u91cf\u4ee3\u7406 1 \u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-808), "\u5411\u6d41\u91cf\u4ee3\u7406 2 \u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-809), "\u5411\u6d41\u91cf\u4ee3\u7406 1 \u548c 2 \u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-810), "\u5411\u6d41\u91cf\u4ee3\u7406 1 \u548c\u6d41\u91cf\u8f6c\u53d1\u5668\u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-811), "\u5411\u6d41\u91cf\u4ee3\u7406 1\u30012 \u548c\u6d41\u91cf\u8f6c\u53d1\u5668\u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-812), "\u5411\u6d41\u91cf\u4ee3\u7406 2 \u548c\u6d41\u91cf\u8f6c\u53d1\u5668\u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-813), "\u5411\u6d41\u91cf\u8f6c\u53d1\u5668\u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-814), "\u7f51\u5173\u9632\u706b\u5899\u5728 GMS \u4e2d\u4e0d\u53ef\u7528"}, {Integer.toString(-815), "\u96a7\u9053\u521b\u5efa\u5728\u7f51\u5173\u9632\u706b\u5899\u7aef\u5931\u8d25"}, {Integer.toString(-816), "\u96a7\u9053\u521b\u5efa\u5728\u53d7\u7ba1\u8bbe\u5907\u7aef\u5931\u8d25"}, {Integer.toString(-817), "\u5bf9\u4e8e\u4e91 GMS \u7ba1\u7406\u548c\u62a5\u544a\uff0c\u672a\u5bf9\u8bbe\u5907\u8fdb\u884c\u6388\u6743"}, {Integer.toString(-818), "\u53ef\u7528\u4e8e\u6d41\u91cf\u4ee3\u7406\u5206\u914d\u7684\u5904\u7406\u80fd\u529b\u4e0d\u8db3"}, {Integer.toString(-819), "\u53ef\u7528\u4e8e\u6d41\u91cf\u4ee3\u7406\u5206\u914d\u7684\u5e26\u5bbd\u4e0d\u8db3"}, {"EDIT_DOMAIN", "\u7f16\u8f91\u57df"}, {"VIEW_DOMAIN", "\u67e5\u770b\u57df\u8be6\u7ec6\u4fe1\u606f"}, {"ADD_DOMAIN", "\u6dfb\u52a0\u57df"}, {"SELECT_TO_DELETE", "\u8bf7\u9009\u62e9\u8981\u5220\u9664\u7684\u57df/\u9a8c\u8bc1\u670d\u52a1\u5668\u3002"}, {"SELECT_AS_TO_DEL", "\u8bf7\u9009\u62e9\u8981\u5220\u9664\u7684\u9a8c\u8bc1\u670d\u52a1\u5668\u3002"}, {"DELETE_CONFIRMATION", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u57df '"}, {"USER_DELETE_CONFIRMATION", "\u6240\u6709\u9a8c\u8bc1\u670d\u52a1\u5668\u3001\u7528\u6237\u3001\u7528\u6237\u7c7b\u578b\u53ca\u5176\u8bbe\u7f6e\u4e5f\u5c06\u88ab\u5220\u9664\u3002"}, {"USER_AS_DELETE_CONFIRMATION", "\u6240\u6709\u7528\u6237\u3001\u7528\u6237\u7c7b\u578b\u53ca\u5176\u8bbe\u7f6e\u4e5f\u5c06\u88ab\u5220\u9664\u3002"}, {"SURE_WANT_TO_CONTINUE", "\u662f\u5426\u786e\u5b9a\u8981\u7ee7\u7eed\uff1f"}, {"MULTIPLE_DELETE_CONFIRMATION", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u4ee5\u4e0b\u57df\uff1a"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u4ee5\u4e0b\u9a8c\u8bc1\u670d\u52a1\u5668\uff1a"}, {"AND_AS_DELETE_CONFIRMATION", "\u548c\u5220\u9664\u4ee5\u4e0b\u9a8c\u8bc1\u670d\u52a1\u5668\uff1a"}, {"WANT_TO_CONTINUE", "\u662f\u5426\u8981\u7ee7\u7eed\uff1f"}, {"DOMAIN", "\u57df"}, {"DOMAINS", "\u57df"}, {"SEARCH", "\u641c\u7d22"}, {"NAME", "\u540d\u79f0"}, {"DOMAIN_TYPE", "\u57df\u7c7b\u578b"}, {"DOMAIN_SETTINGS", "\u57df\u8bbe\u7f6e"}, {"ALIAS", "\u522b\u540d"}, {"DISPLAY_DOMAIN", "\u5728\u767b\u5f55\u5c4f\u5e55\u4e2d\u663e\u793a\u57df"}, {"SET_AS_DEFAULT", "\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u57df"}, {"HOST_NAME", "\u4e3b\u673a\u540d"}, {"HOST_TYPE", "\u4e3b\u673a\u7c7b\u578b"}, {"EQUALS", "\u7b49\u4e8e"}, {"STARTS_WITH", "\u5f00\u5934\u4e3a"}, {"ENDS_WITH", "\u7ed3\u5c3e\u4e3a"}, {"CONTAINS", "\u5305\u542b"}, {"LOCAL", "\u672c\u5730"}, {"REMOTE", "\u8fdc\u7a0b"}, {"DOMAINS", "\u57df"}, {"SSL_USED", "\u4f7f\u7528\u7684 SSL"}, {"CONFIGURE", "\u914d\u7f6e"}, {"NO_DOMAIN_FOUND", "\u672a\u627e\u5230\u57df"}, {"NO_AS_FOUND", "\u672a\u627e\u5230\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"ADD_DOMAIN", "\u6dfb\u52a0\u57df"}, {"DELETE_DOMAINS", "\u5220\u9664\u57df/\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"DELETE_ASS", "\u5220\u9664\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"EQUALS", "\u7b49\u4e8e"}, {"STARTS_WITH", "\u5f00\u5934\u4e3a"}, {"ENDS_WITH", "\u7ed3\u5c3e\u4e3a"}, {"CONTAINS", "\u5305\u542b"}, {"LOCAL", "\u672c\u5730"}, {"REMOTE", "\u8fdc\u7a0b"}, {"REMOTE_DOMAIN", "\u8fdc\u7a0b\u57df"}, {"ADMIN_PASSWORD", "\u7ba1\u7406\u5458\u5bc6\u7801"}, {"DEFAULT_ADMIN_USER", "\u9ed8\u8ba4\u7ba1\u7406\u5458\u7528\u6237"}, {"AUTH_PORT", "\u9a8c\u8bc1\u7aef\u53e3"}, {"ACCT_PORT", "\u8ba1\u8d39\u7aef\u53e3"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "\u57fa\u672c\u8bc6\u522b\u540d"}, {"SEARCH_FILTER", "\u641c\u7d22\u8fc7\u6ee4\u5668"}, {"SHARED_SECRET", "\u5171\u4eab\u7684\u673a\u5bc6"}, {"USE_SSL", "\u4f7f\u7528 SSL"}, {"SSL_PORT", "SSL \u7aef\u53e3"}, {"ANONYMOUS_LOGIN", "\u533f\u540d\u767b\u5f55"}, {"LOGIN_USER_NAME", "\u767b\u5f55\u7528\u6237\u8bc6\u522b\u540d"}, {"DNAME_MSG", "\u8bc6\u522b\u540d\u7528\u4e8e\u5728\u6267\u884c\u7ed1\u5b9a\u65f6\u9a8c\u8bc1\u76ee\u5f55\u670d\u52a1\u5668\u3002\u6b64\u5b57\u6bb5\u7684\u503c\u5e94\u6307\u5b9a\u4e3a DN\uff08\u8bc6\u522b\u540d\uff09\u3002\u4f8b\u5982\uff1a[uid=xyz,ou=People,dc=example,dc=com]\u3001[cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "\u767b\u5f55\u5bc6\u7801"}, {"PROTOCOL_VERSION", "\u534f\u8bae\u7248\u672c"}, {"LDAPV2", "LDAP \u7248\u672c 2"}, {"LDAPV3", "LDAP \u7248\u672c 3"}, {"SETTINGS", "\u8bbe\u7f6e"}, {"USER_DIRECTORY_LDAP", "\u7528\u6237\u76ee\u5f55 LDAP \u6a21\u5f0f"}, {"LDAP_SCHEMA", "LDAP \u6a21\u5f0f"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "\u5b9a\u4e49\u7684\u7528\u6237"}, {"USER_OBJECTS", "\u7528\u6237\u5bf9\u8c61"}, {"OBJ_CLASS", "\u5bf9\u8c61\u7c7b"}, {"LOGIN_NAME", "\u767b\u5f55\u540d\u5c5e\u6027"}, {"FIRST_NAME", "\u540d\u5b57\u5c5e\u6027"}, {"LAST_NAME", "\u59d3\u6c0f\u5c5e\u6027"}, {"EMAIL", "\u7535\u5b50\u90ae\u4ef6\u5c5e\u6027"}, {"TELEPHONE", "\u7535\u8bdd\u5c5e\u6027"}, {"CON_TIMEOUT", "\u8fde\u63a5\u8d85\u65f6"}, {"SCHEMA", "\u6a21\u5f0f"}, {"TEST_SETTINGS", "\u6d4b\u8bd5\u8bbe\u7f6e"}, {"TEST_RADIUS_SETTINGS", "\u6d4b\u8bd5 RADIUS \u8bbe\u7f6e"}, {"TEST_LDAP_MSG", "\u8981\u6d4b\u8bd5 LDAP \u8bbe\u7f6e\uff0c\u8bf7\u8f93\u5165\u4e00\u4e2a\u6709\u6548\u7684 LDAP"}, {"TEST_RADIUS_MSG", "\u8981\u6d4b\u8bd5 RADIUS \u8bbe\u7f6e\uff0c\u8bf7\u8f93\u5165\u4e00\u4e2a\u6709\u6548\u7684 RADIUS"}, {"TEST_MSG", "\u767b\u5f55\u540d\u548c\u5bc6\u7801\uff0c\u7136\u540e\u5355\u51fb\u201c\u6d4b\u8bd5\u201d\u6309\u94ae\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5c06\u5e94\u7528\u5df2\u8fdb\u884c\u7684\u4efb\u4f55\u66f4\u6539\u3002"}, {"USER", "\u7528\u6237"}, {"PWD", "\u5bc6\u7801"}, {"RUN_CLIENT_TEST", "\u8fd0\u884c\u5ba2\u6237\u7aef\u6d4b\u8bd5"}, {"TEST_STATUS", "\u6d4b\u8bd5\u72b6\u6001"}, {"RETURNED_USER_ATTRIBUTES", "\u8fd4\u56de\u7684\u6d4b\u8bd5\u7ed3\u679c"}, {"TEST", "\u6d4b\u8bd5"}, {"OK", "\u786e\u5b9a"}, {"CANCEL", "\u53d6\u6d88"}, {"CLOSE", "\u5173\u95ed"}, {"CANT_DELETE_LOCALDOMAIN", "\u65e0\u6cd5\u7f16\u8f91/\u5220\u9664\u672c\u5730\u57df"}, {"CANT_EDIT", "\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u57df\uff0c\u5219\u65e0\u6cd5\u8fdb\u884c\u7f16\u8f91"}, {"EMPTY_NAME", "\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_ADMIN_PWD", "\u7ba1\u7406\u5458\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_ADMIN_USER", "\u9ed8\u8ba4\u7ba1\u7406\u5458\u7528\u6237\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_AUTH_PORT", "\u9a8c\u8bc1\u7aef\u53e3\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_AUTH_PORT", "\u9a8c\u8bc1\u7aef\u53e3\u5e94\u4e3a\u6b63\u6570"}, {"AUTH_PORT_RANGE", "\u9a8c\u8bc1\u7aef\u53e3\u5e94\u5728 0 - 65535 \u8303\u56f4\u5185"}, {"EMPTY_ACCT_PORT", "\u8ba1\u8d39\u7aef\u53e3\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_ACCT_PORT", "\u8ba1\u8d39\u7aef\u53e3\u5e94\u4e3a\u6b63\u6570"}, {"EMPTY_BD_NAME", "\u57fa\u672c\u8bc6\u522b\u540d\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_SEARCH_FILTER", "\u641c\u7d22\u8fc7\u6ee4\u5668\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_SHRED_SECRET", "\u5171\u4eab\u7684\u673a\u5bc6\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_SSL_PORT", "SSL \u7aef\u53e3\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_SSL_PORT", "SSL \u7aef\u53e3\u5e94\u4e3a\u6b63\u6570"}, {"SSL_PORT_RANGE", "SSL \u7aef\u53e3\u5e94\u5728 0 - 65535 \u8303\u56f4\u5185"}, {"EMPTY_LOGIN", "\u767b\u5f55\u7528\u6237\u8bc6\u522b\u540d\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_LOGIN_PWD", "\u767b\u5f55\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_CON_TIMEOUT", "\u8fde\u63a5\u8d85\u65f6\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_CON_TIMEOUT", "\u8fde\u63a5\u8d85\u65f6\u5e94\u4e3a\u6b63\u6570"}, {"RECOMMEND_SSL", "\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528 SSL \u4e0e\u8fdc\u7a0b\u670d\u52a1\u5668\u8fdb\u884c\u5b89\u5168\u901a\u4fe1\u3002"}, {"CON_NOT_SECURE", "\u5982\u679c\u6ca1\u6709\u4f7f\u7528 SSL\uff0c\u60a8\u7684\u8fde\u63a5\u5c06\u4e0d\u5b89\u5168\u3002"}, {"DOMAIN_EXISTS", "\u5df2\u7ecf\u5b58\u5728\u5177\u6709\u6b64\u540d\u79f0\u7684\u57df"}, {"ALIAS_EXISTS", "\u5df2\u7ecf\u5b58\u5728\u5177\u6709\u6b64\u540d\u79f0\u7684\u522b\u540d"}, {"DOMAIN_INVALID", "\u6307\u5b9a\u7684\u57df\u540d\u65e0\u6548\u3002"}, {"DOMAIN_VALID_CHARS", "\u540d\u79f0\u53ea\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a"}, {"DOMAIN_VALID_CHARS_LIST", "\u5b57\u6bcd\u6570\u5b57\u3001.\uff08\u70b9\u53f7\uff09\u3001-\uff08\u8fde\u5b57\u7b26\uff09\u3001_\uff08\u4e0b\u5212\u7ebf\uff09\u548c\u7a7a\u683c\u3002"}, {"SPECIFY_VALID_NAME", "\u8bf7\u4f7f\u7528\u5141\u8bb8\u7684\u5b57\u7b26\u6307\u5b9a\u540d\u79f0\u3002"}, {"DIR_GRP_SETTINGS", "Active Directory \u7ec4\u8bbe\u7f6e"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "\u53ea\u5141\u8bb8 AD \u7ec4\u6210\u5458"}, {"DIR_GROUPS", "Active Directory \u7ec4"}, {"GRP_NAME_INVALID", "\u6307\u5b9a\u7684\u7ec4\u540d\u79f0\u65e0\u6548\u3002"}, {"GRP_NAME_INVALID_LENGTH", "\u7ec4\u540d\u79f0\u4e0d\u80fd\u8d85\u8fc7 200 \u4e2a\u5b57\u7b26\u3002"}, {"AUTH_SERVER_NAME", "\u9a8c\u8bc1\u670d\u52a1\u5668\u540d\u79f0"}, {"ADD_AUTH_SERVER", "\u6dfb\u52a0\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"ADD_AUTHSERVER", "\u6dfb\u52a0\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"EDIT_AUTHSERVER", "\u7f16\u8f91\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"DELETE_DOMAIN", "\u5220\u9664\u8be5\u57df"}, {"CANT_DELETE_LOCAL_AS", "\u65e0\u6cd5\u7f16\u8f91/\u5220\u9664\u672c\u5730\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"CANT_DELETE_ADMIN_AS", "\u7531\u4e8e\u8be5\u57df\u7684\u9ed8\u8ba4\u7ba1\u7406\u5458\u5df2\u9488\u5bf9\u6b64\u670d\u52a1\u5668\u8fdb\u884c\u9a8c\u8bc1\uff0c\u56e0\u6b64\u65e0\u6cd5\u5220\u9664\u6b64\u9a8c\u8bc1\u670d\u52a1\u5668\u3002\n\u5c06\u9ed8\u8ba4\u7ba1\u7406\u5458\u79fb\u52a8\u5230\u5176\u4ed6\u9a8c\u8bc1\u670d\u52a1\u5668\uff0c\u7136\u540e\u91cd\u8bd5\u3002"}, {"EDIT_AUTH_SERVER", "\u7f16\u8f91\u6b64\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"VIEW_AUTH_SERVER", "\u67e5\u770b\u9a8c\u8bc1\u670d\u52a1\u5668\u8be6\u7ec6\u4fe1\u606f"}, {"DELETE_AUTH_SERVER", "\u5220\u9664\u6b64\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"AS_INVALID", "\u6307\u5b9a\u7684\u9a8c\u8bc1\u670d\u52a1\u5668\u65e0\u6548\u3002"}, {"AS_EXISTS", "\u5df2\u7ecf\u5b58\u5728\u5177\u6709\u6b64\u540d\u79f0\u7684\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"EMPTY_AS_NAME", "\u9a8c\u8bc1\u670d\u52a1\u5668\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a"}, {"AS_NAME_MSG", "\u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u540d\u79f0\u5c06\u88ab\u521b\u5efa\u3002\u6b64\u540d\u79f0\u5bf9\u4e8e\u7ba1\u7406\u57df\u4e2d\u4e0d\u540c\u7684\u9a8c\u8bc1\u670d\u52a1\u5668\u975e\u5e38\u6709\u7528\u3002"}, {"AS_DELETE_CONFIRMATION", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u9a8c\u8bc1\u670d\u52a1\u5668 '"}, {"PRI_RADIUS", "\u4e3b\u8981 RADIUS \u670d\u52a1\u5668"}, {"AUTH_PROTOCOL", "\u9a8c\u8bc1\u534f\u8bae"}, {"RADIUS_TIMEOUT", "RADIUS \u8d85\u65f6\uff08\u79d2\u6570\uff09"}, {"MAX_RETRIES", "\u6700\u5927\u91cd\u8bd5\u6b21\u6570"}, {"BACK_RADIUS", "\u5907\u7528 RADIUS \u670d\u52a1\u5668"}, {"RADIUS_USER_GROUP", "RADIUS \u7528\u6237\u7ec4\u8bbe\u7f6e"}, {"ALLOW_GROUP_MEMBERS", "\u53ea\u5141\u8bb8 RADIUS \u7ec4\u6210\u5458"}, {"USE_SW_VSA", "\u4f7f\u7528 RADIUS \u670d\u52a1\u5668\u4e0a SonicWall \u4f9b\u5e94\u5546\u7279\u5b9a\u7684\u5c5e\u6027"}, {"USE_FILTER_ID", "\u5728 RADIUS \u670d\u52a1\u5668\u4e0a\u4f7f\u7528\u8fc7\u6ee4\u5668 ID \u5c5e\u6027"}, {"ALLOW_GROUPS", "\u5141\u8bb8\u7684 RADIUS \u7ec4"}, {"USER_GROUP", "\u7528\u6237\u7ec4"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS \u8d85\u65f6\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS \u8d85\u65f6\u5e94\u4e3a\u6b63\u6570"}, {"EMPTY_MAX_RETRIES", "\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_MAX_RETRIES", "\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u5e94\u4e3a\u6b63\u6570"}, {"TEST_USER_NAME", "\u6d4b\u8bd5\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\u3002"}, {"TEST_USER_PWD", "\u6d4b\u8bd5\u7528\u6237\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\u3002"}, {"DOMAIN_NAME_MSG", "\u57df\u7684\u540d\u79f0\u5c06\u88ab\u521b\u5efa\u3002\u8be5\u540d\u79f0\u5c06\u5728\u767b\u5f55\u9875\u9762\u7684\u57df\u4e0b\u62c9\u5217\u8868\u4e2d\u53ef\u89c1\u3002"}, {"DOMAIN_TYPE_MSG", "\u57df\u7684\u7c7b\u578b\uff0c[\u672c\u5730] \u6216 [\u8fdc\u7a0b]\u3002\u9700\u8981\u4ece\u5916\u90e8\u5e73\u53f0\uff08\u5982 LDAP \u6216 AD \u670d\u52a1\u5668\uff09\u9a8c\u8bc1\u7528\u6237\u7684\u57df\u5c06\u9700\u8981\u521b\u5efa\u4e3a [\u8fdc\u7a0b] \u7c7b\u578b\u7684\u57df\u3002[\u672c\u5730] \u7c7b\u578b\u7684\u57df\u5c06\u62e5\u6709 SGMS \u6570\u636e\u5e93\u5185\u5b58\u5728\u7684\u7528\u6237\u5e10\u6237\u548c\u9a8c\u8bc1\u8be6\u7ec6\u4fe1\u606f\u3002\u901a\u8fc7\u521b\u5efa [\u672c\u5730] \u7c7b\u578b\u7684\u57df\uff0c\u60a8\u53ef\u4ee5\u5728 SGMS \u5185\u652f\u6301\u591a\u4e2a\u57df\u800c\u65e0\u9700\u5916\u90e8\u9a8c\u8bc1\u63a5\u53e3\u3002"}, {"ADMIN_PASSWORD_MSG", "\u521b\u5efa\u65b0\u57df\u7c7b\u578b [\u672c\u5730] \u540e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u521b\u5efa\u8be5\u57df\u7684 [\u7ba1\u7406\u5458] \u7528\u6237\u3002\u60a8\u9700\u8981\u6307\u5b9a\u7ba1\u7406\u5458\u7528\u6237\u7684\u5bc6\u7801\u3002"}, {"ADMIN_USERID_MSG", "\u6307\u5b9a\u9700\u8981\u6210\u4e3a\u8be5\u57df\u7ba1\u7406\u5458\u7684\u7528\u6237\u540d\u3002\u6b64\u7528\u6237\u540d\u5e94\u4e3a\u76ee\u5f55\u670d\u52a1\u5668\u4e2d\u4e0e\u8be5\u57df\u5173\u8054\u7684\u6709\u6548\u7528\u6237\u540d\u3002\u5982\u679c\u4e3a\u6b64\u5b57\u6bb5\u6307\u5b9a\u540d\u79f0 [\u7ba1\u7406\u5458]\uff0c\u5219\u7528\u6237 id \u4e3a [\u7ba1\u7406\u5458] \u7684\u7528\u6237\u5e94\u5728\u5173\u8054\u7684\u76ee\u5f55\u4e2d\u5b58\u5728\u5e76\u4e14\u5e94\u62e5\u6709\u7ba1\u7406\u6743\u9650\u3002\u4f8b\u5982\uff1ajdoe"}, {"HOST_NAME_MSG", "\u8fdc\u7a0b\u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u6216 IP \u5730\u5740\u3002\u4f8b\u5982\uff1a\t[mydc.example.com]\u3001[X.X.X.X]\uff08ip \u5730\u5740\uff09\u3001[company.com]\u3002\u5982\u679c\u8fdc\u7a0b\u670d\u52a1\u5668\u662f Windows Active Directory (AD) \u670d\u52a1\u5668\u5e76\u4e14\u60a8\u6709\u591a\u4e2a\u57df\u9700\u8981\u4ece AD \u6797\u4e0b\u9a8c\u8bc1\u7528\u6237\uff0c\u5219\u6307\u5b9a AD \u6797\u7684\u5168\u5c40\u76ee\u5f55\u540d\u79f0\u6216 IP \u5730\u5740\u4f5c\u4e3a\u4e3b\u673a\u540d\u3002"}, {"AUTHENTICATION_PORT_MSG", "LDAP \u6216 AD \u670d\u52a1\u5668\u4e0a\u7684\u7aef\u53e3\u53f7\uff0c\u53ef\u5728\u5176\u4e0a\u76d1\u542c\u9a8c\u8bc1\u8bf7\u6c42\u3002\u5982\u679c\u662f LDAP/AD \u670d\u52a1\u5668\uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a 389\u3002\u5982\u679c\u60a8\u6307\u5b9a\u4e86 AD \u6797\u7684\u5168\u5c40\u76ee\u5f55\u540d\u79f0\u6216 IP \u5730\u5740\u4f5c\u4e3a\u4e3b\u673a\u540d\uff0c\u5219\u8fd8\u5e94\u6307\u5b9a\u76f8\u5e94\u7684\u7aef\u53e3\u53f7\u3002\u9ed8\u8ba4\u503c\u4e3a 3268\u3002"}, {"HOST_TYPE_MSG", "\u8be5\u503c\u8868\u793a\u8fdc\u7a0b\u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u7c7b\u578b\u662f LDAP \u670d\u52a1\u5668\u3001Windows Active Directory \u8fd8\u662f RADIUS \u670d\u52a1\u5668\u3002"}, {"ALIAS_MSG", "\u5982\u679c\u57df\u6ca1\u6709\u663e\u793a\uff0c\u53ef\u5728 GMS \u767b\u5f55\u5c4f\u5e55\u4e2d\u4f7f\u7528\u57df\u540d\u7f29\u5199\u767b\u5f55\u3002\u4f8b\u5982\uff1a\u522b\u540d\\\\\u7528\u6237\u540d\u3002\u5982\u679c\u57df\u540d\u7684\u957f\u5ea6\u5c0f\u4e8e\u6216\u7b49\u4e8e 16 \u4e2a\u5b57\u7b26\uff0c\u5219\u522b\u540d\u81ea\u52a8\u586b\u5199\u4e3a\u57df\u540d\u3002"}, {"PROTOCOL_VERSION_MSG", "\u8fd9\u662f\u8fdc\u7a0b LDAP/AD \u670d\u52a1\u5668\u5728\u5176\u4e0a\u8fd0\u884c\u7684 LDAP \u534f\u8bae\u7248\u672c\u3002"}, {"BASE_DN_MSG", "\u57fa\u672c\u8bc6\u522b\u540d\u7528\u4e8e\u533a\u522b\u76ee\u5f55\u4e2d\u7684\u6839\u6761\u76ee\u4e0e\u5c06\u51fa\u73b0\u7684\u3001SGMS \u53d1\u8d77\u7684\u641c\u7d22\u3002\u76ee\u5f55\u7684\u57fa\u672c DN\uff08\u6bd4\u5982 example.com\uff09\u5e94\u4e3a\u4ee5\u4e0b\u683c\u5f0f\u5199\u5165\uff1a[dc=example,dc=com]\u3002\u59cb\u7ec8\u9700\u8981\u6307\u5b9a\u6700\u9876\u7ea7\u7684\u8282\u70b9\u4f5c\u4e3a\u76ee\u5f55\u6811\u4e2d\u7684\u57fa\u672c DN\uff0c\u8be5\u8282\u70b9\u4e4b\u4e0b\u662f\u60a8\u9884\u671f\u663e\u793a\u4e3a\u53ef\u767b\u5f55\u5230 SGMS \u7684\u6240\u6709\u7528\u6237\u3002"}, {"USE_SSL_MSG", "\u6307\u5b9a\u662f\u5426\u4f7f\u7528 SSL \u7ed1\u5b9a\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u3002\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528\u6b64\u9879\u3002\u5bf9\u4e8e\u6b64\u9879\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684 CA \u8bc1\u4e66\u6216\u7b7e\u540d\u670d\u52a1\u5668\u8bc1\u4e66\u7684 CA \u6839\u8bc1\u4e66\u5c06\u5728 SGMS \u7684\u5bc6\u94a5\u5e93\u4e2d\u663e\u793a\u4e3a\u4fe1\u4efb\u7684 CA\u3002"}, {"SSL_PORT_MSG", "\u8fdc\u7a0b\u670d\u52a1\u5668\u5728\u5176\u4e0a\u76d1\u542c SSL \u7ed1\u5b9a\u8bf7\u6c42\u7684\u7aef\u53e3\u53f7\u3002\u5982\u679c\u662f LDAP/AD \u670d\u52a1\u5668\uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a 636\u3002\u5982\u679c\u60a8\u6307\u5b9a\u4e86 AD \u6797\u7684\u5168\u5c40\u76ee\u5f55\u540d\u79f0\u6216 IP \u5730\u5740\u4f5c\u4e3a\u4e3b\u673a\u540d\uff0c\u5219\u8fd8\u5e94\u6307\u5b9a\u76f8\u5e94\u7684 SSL \u7aef\u53e3\u53f7\u3002\u9ed8\u8ba4\u503c\u4e3a 3269\u3002"}, {"ANONYMOUS_LOGIN_MSG", "\uff08\u4e0d\u63a8\u8350\uff09\u3002\u6307\u5b9a SGMS \u662f\u5426\u5e94\u533f\u540d\u7ed1\u5b9a\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u3002\u5bf9\u4e8e\u6b64\u9879\uff0c\u8fdc\u7a0b LDAP/AD \u670d\u52a1\u5668\u5e94\u5141\u8bb8\u533f\u540d\u7ed1\u5b9a\u3002\u533f\u540d\u7ed1\u5b9a\u5e94\u4ec5\u5f53\u4e8b\u5148\u4e0d\u77e5\u9053\u670d\u52a1\u5e10\u6237\uff08\u76ee\u5f55\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6709\u6548\u7684\u7528\u6237\u5e10\u6237\uff09\u65f6\u5c1d\u8bd5\u3002\u5f3a\u70c8\u4e0d\u63a8\u8350\u4f7f\u7528\u6b64\u9879\u3002"}, {"LOGIN_USER_DN_MSG", "\u8bc6\u522b\u540d\u7528\u4e8e\u5728\u6267\u884c\u7ed1\u5b9a\u65f6\u9a8c\u8bc1\u76ee\u5f55\u670d\u52a1\u5668\u3002\u6b64\u5b57\u6bb5\u7684\u503c\u5e94\u6307\u5b9a\u4e3a DN\uff08\u8bc6\u522b\u540d\uff09\u3002\u4f8b\u5982\uff1a[uid=xyz, ou=People, dc=example, dc=com]\u3001[cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "\u767b\u5f55\u7528\u6237 DN \u7684\u5bc6\u7801\u3002"}, {"CONN_TIMEOUT_MSG", "\u8be5\u503c\uff08\u6beb\u79d2\u6570\uff09\u662f\u8fde\u63a5\u8d85\u65f6\u671f\u9650\u3002\u7ecf\u8fc7\u6b64\u65f6\u95f4\u6bb5\u540e\uff0c\u5982\u679c\u672a\u6210\u529f\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u8fde\u63a5\u5c1d\u8bd5\u5c06\u653e\u5f03\u3002"}, {"LDAP_SCHEMA_MSG", "\u5173\u8054 LDAP/AD \u670d\u52a1\u5668\u7684 LDAP \u6a21\u5f0f\u3002"}, {"OBJ_CLASS_MSG", "\u7528\u6237\u6240\u5c5e\u7684\u5176\u4e2d\u4e00\u4e2a\u6807\u51c6\u5bf9\u8c61\u7c7b\u522b\u7684\u540d\u79f0\u3002"}, {"LOGIN_NAME_ATTRIBUTE_MSG", "LDAP/AD \u670d\u52a1\u5668\u4e2d\u8868\u793a\u7528\u6237 id \u7684\u5c5e\u6027\u540d\u79f0\u3002\u8fd9\u662f LDAP \u670d\u52a1\u5668\u4e2d\u7684\u5c5e\u6027\uff0c\u5176\u503c\u5c06\u88ab\u7528\u4f5c SGMS \u767b\u5f55\u9875\u9762\u4e2d\u7684\u7528\u6237 id\u3002\u4f8b\u5982\uff1auid\u3001sAMAccountName \u7b49\u3002"}, {"FIRST_NAME_ATTRIBUTE_MSG", "LDAP \u670d\u52a1\u5668\u4e2d\u8868\u793a\u540d\u5b57\u7684\u5c5e\u6027\u540d\u79f0\u3002\u4f8b\u5982\uff1agivenName\u3002"}, {"LAST_NAME_ATTRIBUTE_MSG", "LDAP \u670d\u52a1\u5668\u4e2d\u8868\u793a\u59d3\u6c0f\u7684\u5c5e\u6027\u540d\u79f0\u3002\u4f8b\u5982\uff1asn\u3002"}, {"EMAIL_ATTRIBUTE_MSG", "LDAP \u670d\u52a1\u5668\u4e2d\u8868\u793a\u7535\u5b50\u90ae\u4ef6 id \u7684\u5c5e\u6027\u540d\u79f0\u3002\u4f8b\u5982\uff1amail\u3002"}, {"TELEPHONE_ATTRIBUTE_MSG", "LDAP \u670d\u52a1\u5668\u4e2d\u8868\u793a\u7535\u8bdd\u53f7\u7801\u7684\u5c5e\u6027\u540d\u79f0\u3002\u4f8b\u5982\uff1atelephoneNumber\u3002"}, {"TEST_PANE_MSG", "\u60a8\u53ef\u5728\u6b64\u5904\u6d4b\u8bd5\u5728\u8bbe\u7f6e\u9762\u677f\u4e2d\u8f93\u5165\u7684\u9a8c\u8bc1\u670d\u52a1\u5668 (LDAP/AD/RADIUS) \u914d\u7f6e\u3002"}, {"TEST_PANE_USER_MSG", "\u8f93\u5165\u60a8\u5c06\u5728 SGMS \u767b\u5f55\u9875\u9762\u4e2d\u8f93\u5165\u7684\u6709\u6548\u7528\u6237\u540d\u4ee5\u767b\u5f55\u5230 GMS\u3002\u6b64\u7528\u6237\u540d\u5e94\u6709\u6548\u5e76\u5728\u8be5\u57df\u7684\u5173\u8054\u76ee\u5f55\u4e2d\u51fa\u73b0\u3002\u53e6\u5916\uff0c\u8f93\u5165\u76ee\u5f55\u4e2d\u6b64\u7528\u6237\u540d\u7684\u5bc6\u7801\u3002"}, {"EMPTY_DIR_GROUP", "\u76ee\u5f55\u7ec4\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a\u3002"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "\u6b64\u9009\u9879\u9009\u5b9a\u65f6\u53ea\u5141\u8bb8\u4f5c\u4e3a\u6307\u5b9a Active Directory \u7ec4\u6210\u5458\u7684\u7528\u6237\u767b\u5f55\u5230 GMS\u3002\u4f7f\u7528\u6b64\u9009\u9879\uff0c\u8fd8\u9700\u8981\u5728\u8bbe\u7f6e\u9762\u677f\u4e2d\u5c06\u4e3b\u673a\u7c7b\u578b\u9009\u62e9\u4e3a [Active Directory]\u3002"}, {"DIR_GROUPS_MSG", "\u6307\u5b9a AD \u7ec4\u540d\u79f0\uff0c\u5176\u6210\u5458\u5e94\u5141\u8bb8\u767b\u5f55\u5230 GMS\u3002\u53ef\u4ee5\u6307\u5b9a\u4ee5\u5206\u53f7\u5206\u9694\u7684\u591a\u4e2a AD \u7ec4\u3002\u4f8b\u5982\uff1a[GMSUsers]\u3001[ADGroup1;AD group2;GMS Users;Group4]"}, {"RADIUS_HOST_NAME_MSG", "RADIUS \u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u6216 IP \u5730\u5740\u3002\u4f8b\u5982\uff1a[myradius.example.com]\u3001[X.X.X.X]\uff08ip \u5730\u5740\uff09\u3001[company.com]\u3002"}, {"RADIUS_AUTH_PORT_MSG", "RADIUS \u670d\u52a1\u5668\u4e0a\u7684\u7aef\u53e3\u53f7\uff0c\u53ef\u5728\u5176\u4e0a\u76d1\u542c\u9a8c\u8bc1\u8bf7\u6c42\u3002\u9ed8\u8ba4\u503c\u4e3a 1812\u3002"}, {"RADIUS_SHARED_SECRET_MSG", "\u5728 GMS \u548c RADIUS \u670d\u52a1\u5668\u4e4b\u95f4\u5171\u4eab\u7684\u673a\u5bc6\u3002\u8fd9\u662f\u4e00\u4e2a\u53ea\u6709 RADIUS \u670d\u52a1\u5668\u548c RADIUS \u5ba2\u6237\u7aef\u77e5\u9053\u7684\u5b57\u7b26\u4e32\u503c\u3002"}, {"RADIUS_AUTH_PROTOCOL_MSG", "\u5c06\u7528\u4e8e\u9a8c\u8bc1\u7684 RADIUS \u9a8c\u8bc1\u534f\u8bae\u3002"}, {"RADIUS_TIMEOUT_MSG", "\u8be5\u503c\uff08\u79d2\u6570\uff09\u8868\u793a\u8fde\u63a5\u8d85\u65f6\u671f\u9650\u3002\u7ecf\u8fc7\u6b64\u65f6\u95f4\u6bb5\u540e\uff0c\u5982\u679c\u672a\u6210\u529f\uff0cRADIUS \u670d\u52a1\u5668\u7684\u8fde\u63a5\u5c1d\u8bd5\u5c06\u653e\u5f03\u3002"}, {"RADIUS_MAX_RETRIES_MSG", "\u8be5\u503c\u8868\u793a RADIUS \u670d\u52a1\u5668\u5e94\u5c1d\u8bd5\u7684\u9a8c\u8bc1\u6b21\u6570\u3002\u7ecf\u8fc7\u6307\u5b9a\u7684\u5c1d\u8bd5\u6b21\u6570\u540e\uff0c\u5982\u679c\u672a\u6210\u529f\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u9a8c\u8bc1\u5c1d\u8bd5\u5c06\u653e\u5f03\u3002"}, {"RADIUS_ONLY_GROUP_MSG", "\u6b64\u9009\u9879\u9009\u5b9a\u65f6\u53ea\u5141\u8bb8\u4f5c\u4e3a\u6307\u5b9a RADIUS \u7528\u6237\u7ec4\u6210\u5458\u7684\u7528\u6237\u767b\u5f55\u5230 GMS\u3002"}, {"RADIUS_USE_FILTER_MSG", "\u6b64\u9009\u9879\u9009\u5b9a\u65f6\u53ea\u5141\u8bb8\u5c06\u7528\u4f5c RADIUS \u7528\u6237\u7ec4\u6807\u8bc6\u7b26\u7684 RADIUS \u5c5e\u6027\u201c\u8fc7\u6ee4\u5668 ID\u201d\u7684\u503c\u3002\u8981\u4f7f\u7528\u6b64\u9009\u9879\uff0c\u5e94\u6b63\u786e\u914d\u7f6e RADIUS \u670d\u52a1\u5668\u4ee5\u8fd4\u56de\u6b64\u5c5e\u6027-\u503c\u5bf9\u4ee5\u53ca\u4ece RADIUS \u670d\u52a1\u5668\u9a8c\u8bc1\u7684\u6bcf\u4e2a\u7528\u6237 id \u7528\u4e8e\u767b\u5f55\u5230 GMS\u3002"}, {"RADIUS_USE_SW_MSG", "\u9009\u4e2d\u6b64\u9009\u9879\u540e\uff0c\u4f1a\u5c06 SonicWall \u4f9b\u5e94\u5546\u7279\u5b9a\u5c5e\u6027 [SonicWall-User-Group \u548c SonicWall-User-Groups] \u7684\u503c\u7528\u4f5c RADIUS \u7528\u6237\u7ec4\u6807\u8bc6\u7b26\u3002\u4e3a\u4e86\u80fd\u591f\u4f7f\u7528\u6b64\u9009\u9879\uff0c\u5e94\u6b63\u786e\u914d\u7f6e RADIUS \u670d\u52a1\u5668\u4ee5\u8fd4\u56de SonicWall \u4f9b\u5e94\u5546\u7279\u5b9a\u5c5e\u6027\u503c\u5bf9\u4ee5\u53ca\u4ece RADIUS \u670d\u52a1\u5668\u8ba4\u8bc1\u7684\u3001\u7528\u4e8e\u767b\u5f55 GMS \u7684\u7528\u6237 ID\u3002"}, {"RADIUS_ALLOW_GROUPS_MSG", "\u6307\u5b9a RADIUS \u7528\u6237\u7ec4\u540d\u79f0\uff0c\u5176\u6210\u5458\u5e94\u5141\u8bb8\u767b\u5f55\u5230 GMS\u3002\u4f8b\u5982\uff0c[GMSUsers]\u3002\u4ee5\u5206\u53f7\u5206\u9694\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u53ef\u6307\u5b9a\u591a\u4e2a RADIUS \u7528\u6237\u7ec4\u3002\u4f8b\u5982\uff1a[RadGroup1;Rad group2;GMS Users;Group4]\u3002"}, {"ADD_AUTH_SERVER_MSG", "\u5982\u679c\u9009\u4e2d\uff0c\u6dfb\u52a0\u57df\u65f6\u5141\u8bb8\u6dfb\u52a0\u65b0\u7684\u9a8c\u8bc1\u670d\u52a1\u5668\u914d\u7f6e\u3002"}, {"PAGE_LABEL", "\u9875\u9762"}, {"MANAGE_PAGE", "\u7ba1\u7406\u9875\u9762"}, {"ADD_COMPONENT", "\u6dfb\u52a0\u7ec4\u4ef6"}, {"PAGE_MANAGER", "\u9875\u9762\u7ba1\u7406\u5668"}, {"ADD_NEW_PAGE", "\u6dfb\u52a0\u65b0\u9875\u9762"}, {"DEFAULT_PAGE", "\u9ed8\u8ba4\u9875\u9762"}, {"PAGE_DETAILS", "\u9875\u9762\u8be6\u7ec6\u4fe1\u606f"}, {"PAGE_TITLE", "\u9875\u9762\u6807\u9898"}, {"COMPONENT_TITLE", "\u7ec4\u4ef6\u6807\u9898"}, {"PAGE_LAYOUT", "\u9875\u9762\u5e03\u5c40"}, {"ONE_COLUMN_LAYOUT", "1 \u5217 (100)"}, {"TWO_COLUMN_LAYOUT", "2 \u5217 (50:50)"}, {"THREE_COLUMN_LAYOUT", "3 \u5217 (30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 \u5217 (25:25:25:25)"}, {"ADD", "\u6dfb\u52a0"}, {"EDIT", "\u7f16\u8f91"}, {"DELETE", "\u5220\u9664"}, {"ADD_COMPONENT_MANAGER", "\u6dfb\u52a0\u7ec4\u4ef6\u7ba1\u7406\u5668"}, {"TYPE", "\u7c7b\u578b"}, {"RSS_FEED_DETAILS", "RSS \u6e90\u8be6\u7ec6\u4fe1\u606f"}, {"RSS_FEEDS", "RSS \u6e90"}, {"TITLE", "\u6807\u9898"}, {"ITEMS", "\u663e\u793a\u7684\u9879\u76ee\uff08\u6700\u5927\u503c\uff09"}, {"REFRESH_INTERVAL", "\u5237\u65b0\u95f4\u9694"}, {"REFRESH_INTERVAL_MINUTE", "\u5206\u949f\u6570"}, {"EVENT_ALERT_DETAILS", "\u4e8b\u4ef6\u8b66\u62a5\u8be6\u7ec6\u4fe1\u606f"}, {"ALERT_TYPES", "\u8b66\u62a5\u7c7b\u578b"}, {"REFRESH_INTERVAL_HOUR", "\u5c0f\u65f6\u6570"}, {"ALERT_SHOW_TIME_HOURS", "\u663e\u793a\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u5185\u89e6\u53d1\u7684\u8b66\u62a5"}, {"APPLICATION_WIDGET_DETAILS", "\u5e94\u7528\u7a0b\u5e8f\u90e8\u4ef6\u8be6\u7ec6\u4fe1\u606f"}, {"WIDGETS", "\u90e8\u4ef6"}, {"RSS_FEED_TYPE", "RSS \u6e90"}, {"EVENT_ALERT_TYPE", "\u4e8b\u4ef6\u8b66\u62a5"}, {"APPLICATION_WIDGET_TYPE", "\u5e94\u7528\u7a0b\u5e8f\u90e8\u4ef6"}, {"CUSTOM_RSS_FEED", "\u81ea\u5b9a\u4e49 RSS \u6e90"}, {"CUSTOM_RSS_URL", "\u81ea\u5b9a\u4e49 RSS URL"}, {"END_EDIT", "\u7ed3\u675f\u7f16\u8f91"}, {"RSS_URL", "RSS URL"}, {"SAVE", "\u4fdd\u5b58"}, {"DEFAULT_PAGE", "\u9ed8\u8ba4\u9875\u9762"}, {"SAVE_LAYOUT_FAIL_MSG", "\u4fdd\u5b58\u5e03\u5c40\u5931\u8d25"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "\u4fdd\u5b58\u63a7\u5236\u680f\u72b6\u6001\u5931\u8d25"}, {"ADD_COMPONENT_FAIL_MSG", "\u6dfb\u52a0\u7ec4\u4ef6\u5931\u8d25"}, {"DELETE_COMPONENT_FAIL_MSG", "\u5220\u9664\u7ec4\u4ef6\u5931\u8d25"}, {"PAGE_ACTION_FAIL_MSG", "\u9875\u9762\u64cd\u4f5c\u5931\u8d25"}, {"RSS_FEED_FAIL_MSG", "RSS \u6e90\u83b7\u53d6\u5931\u8d25\u3002"}, {"EVENT_ALERT_FAIL_MSG", "GEM \u8b66\u62a5\u83b7\u53d6\u5931\u8d25\u3002"}, {"APPLICATION_WIDGET_FAIL_MSG", "\u5e94\u7528\u7a0b\u5e8f\u90e8\u4ef6\u83b7\u53d6\u5931\u8d25\u3002"}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "\u6ca1\u6709\u4e3a\u4ee5\u4e0b\u76ee\u6807\u914d\u7f6e\u7684\u8b66\u62a5\uff1aDashboard\u3002"}, {"NO_ALERT_FOUND_MSG", "\u672a\u627e\u5230\u8981\u663e\u793a\u7684\u8b66\u62a5\u3002"}, {"CHANGE_DEFAULT_PAGE_MSG", "\u5c06\u6b64\u9875\u9762\u8bbe\u4e3a\u9ed8\u8ba4\u503c\u5c06\u66f4\u6539\u4efb\u4f55\u4ee5\u524d\u7684\u9ed8\u8ba4\u9875\u9762\u8bbe\u7f6e\u3002\u662f\u5426\u786e\u5b9a\u8981\u7ee7\u7eed\uff1f"}, {"DELETE_DEFAULT_PAGE_MSG", "\u65e0\u6cd5\u5220\u9664\u9ed8\u8ba4\u9875\u9762\u3002\u9009\u62e9\u4efb\u4f55\u5176\u4ed6\u9875\u9762\u4f5c\u4e3a\u9ed8\u8ba4\u9875\u9762\uff0c\u7136\u540e\u518d\u5220\u9664\u6b64\u9875\u9762\u3002"}, {"DELETE_PAGE_AND_COMPONENT_MSG", "\u5220\u9664\u9875\u9762\u5c06\u56e0\u800c\u5220\u9664\u8be5\u9875\u9762\u4e2d\u7684\u6240\u6709\u7ec4\u4ef6\u3002\u662f\u5426\u786e\u5b9a\u8981\u5220\u9664\u6b64\u9875\u9762\uff1f"}, {"VALID_URL_MSG", "\u8bf7\u8f93\u5165\u4ee5\u4e0b\u683c\u5f0f\u7684 URL\uff1ahttp://www.yourdomain.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "\u662f\u5426\u786e\u5b9a\u8981\u5220\u9664\u6b64\u7ec4\u4ef6\uff1f"}, {"NO_COMPONENT_MSG", "\u5f53\u524d\u6ca1\u6709\u5728\u9875\u9762\u4e2d\u6dfb\u52a0\u4efb\u4f55\u7ec4\u4ef6\u3002"}, {"LOAD_DATA_MSG", "\u6b63\u5728\u52a0\u8f7d\u6570\u636e..."}, {"COMPONENT_EXISTS_MSG", "\u7ec4\u4ef6\u5df2\u7ecf\u5b58\u5728\u3002\u73b0\u6709\u7ec4\u4ef6\u8be6\u7ec6\u4fe1\u606f\uff1a "}, {"REFRESH_INTERVAL_RANGE", "\u5237\u65b0\u95f4\u9694\u8d85\u51fa\u8303\u56f4\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u503c\u3002"}, {"ITEMS_RANGE", "\u9879\u76ee\u6570\u8d85\u51fa\u8303\u56f4\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\u3002"}, {"ALERT_SHOWTIME_RANGE", "\u8b66\u62a5\u663e\u793a\u65f6\u95f4\u8d85\u51fa\u8303\u56f4\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u503c\u3002"}, {"NO_COMPONENT_SELECTED_ERR", "\uff1a\u5c06\u7ec4\u4ef6\u6dfb\u52a0\u5230\u9875\u9762\u4e4b\u524d\uff0c\u8bf7\u9009\u62e9\u4e00\u4e2a\u7ec4\u4ef6\u3002"}, {"ADDCOMPONENT_ERR_QUOTES", "\u7ec4\u4ef6\u6807\u9898\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u3001\u5192\u53f7\u3001\u767e\u5206\u6bd4\u3001\u54c8\u5e0c\u3001\u95ee\u53f7\u548c\u7ba1\u9053\u7b26\u53f7\u3002"}, {"ADDPAGE_ERR_QUOTES", "\u9875\u9762\u6807\u9898\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u3001\u5192\u53f7\u3001\u767e\u5206\u6bd4\u3001\u54c8\u5e0c\u3001\u95ee\u53f7\u548c\u7ba1\u9053\u7b26\u53f7\u3002"}, {"TIME_PERIOD", "\u65f6\u95f4\u6bb5"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "\u5220\u9664\u9875\u9762\u5c06\u56e0\u800c\u5220\u9664\u8be5\u9875\u9762\u4e2d\u7684\u6240\u6709\u90e8\u4ef6\u3002\u662f\u5426\u786e\u5b9a\u8981\u5220\u9664\u6b64\u9875\u9762\uff1f"}, {"ADDWIDGET_ERR_QUOTES", "\u90e8\u4ef6\u6807\u9898\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u3001\u5192\u53f7\u3001\u767e\u5206\u6bd4\u3001\u54c8\u5e0c\u3001\u95ee\u53f7\u548c\u7ba1\u9053\u7b26\u53f7\u3002"}, {"TIME_PERIOD", "\u65f6\u95f4\u6bb5"}, {"COPY_WIDGET_VALIDATION_MSG", "\u8bf7\u9009\u62e9\u8981\u590d\u5236\u7684\u9875\u9762\u3002"}, {"COPY_WIDGET_HEADER", "\u590d\u5236\u90e8\u4ef6"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "\u641c\u7d22\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u9002\u7528\u4e8e\u6b64\u90e8\u4ef6\u7684\u5173\u952e\u5b57"}, {"IGNORED_INVALID_SEARCH_FILTER", "\u5ffd\u7565\u65e0\u6548\u7684\u641c\u7d22\u8fc7\u6ee4\u5668\u3002"}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "\u4e00\u4e2a\u6216\u591a\u4e2a GMSVP \u5b9e\u4f8b\u6ca1\u6709\u5730\u7406\u4f4d\u7f6e\u3002"}, {"NDA_NG_REPORTING_WIDGET_MSG", "\u672a\u53d1\u73b0\u5339\u914d\u7684\u8bb0\u5f55"}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "\u8b66\u62a5\u8baf\u606f"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u6700\u540e\u62a5\u544a\u65f6\u95f4"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "\u8b66\u62a5\u7c7b\u578b"}, {"LOGS_WIDGET_COL_MESSAGE", "\u8baf\u606f"}, {"LOGS_WIDGET_COL_DATE", "\u65e5\u671f"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "\u7528\u6237\u8be6\u60c5"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "\u8bf4\u660e"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "\u9884\u5b9a\u65f6\u95f4\uff08\u5f53\u5730\u65f6\u95f4"}, {"DSB_CONFIRM_DELETE_WIDGET", "\u6b64\u64cd\u4f5c\u5c06\u5220\u9664\u8be5\u90e8\u4ef6\uff0c\u662f\u5426\u7ee7\u7eed\uff1f"}, {"DSB_SEARCH_DIALOG_MESG", "\u8fd9\u4e9b\u90e8\u4ef6\u5339\u914d\u4ee5\u4e0b\u9879\u7684\u7ed3\u679c "}, {"DSB_SEARCH_DIALOG_HEADER", "\u5176\u4ed6\u641c\u7d22\u7ed3\u679c"}, {"DSB_CLEARHISTORY_MESG", "\u662f\u5426\u6e05\u9664\u6240\u6709\u641c\u7d22\u5386\u53f2\u8bb0\u5f55\uff1f"}, {"DSB_CLEARHISTORY_HDR", "\u641c\u7d22\u5386\u53f2\u8bb0\u5f55"}, {"DSB_ADDNEW_WIDGET_LBL", "\u6dfb\u52a0\u65b0\u90e8\u4ef6 "}, {"DSB_GENSTTINGS_HDR", "\u5e38\u89c4\u8bbe\u7f6e "}, {"DSB_ASSOCPROD_HDR", "\u76f8\u5173\u4ea7\u54c1 "}, {"DSB_SUBALERTS_HDR", "\u5305\u62ec\u7684\u5b50\u8b66\u62a5 "}, {"DSB_WIDGETTITLE_LBL", "\u6807\u9898\uff1a "}, {"DSB_NOFITEMS_LBL", "\u9879\u76ee\u6570\uff1a "}, {"DSB_REFINT_LBL", "\u5237\u65b0\u95f4\u9694\uff1a "}, {"DSB_ALERTSTRIGGERED_LBL", "\u663e\u793a\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u5185\u89e6\u53d1\u7684\u8b66\u62a5\uff1a "}, {"DSB_NEWSUBALERTS_LBL", "\u65b0\u7684\u5b50\u8b66\u62a5\uff1a "}, {"DSB_CUSTRSSURL_LBL", "\u81ea\u5b9a\u4e49 RSS URL\uff1a "}, {"DSB_WRAPTEXT_LBL", "\u6587\u672c\u6362\u884c\uff1a "}, {"DSB_ADDPAGE_HDR", "\u6dfb\u52a0\u65b0\u9875\u9762 "}, {"DSB_ADDPAGE_LBL", "\u9875\u9762\u6807\u9898\uff1a "}, {"DSB_MAPLOCATIONDLG_HDR", "\u6dfb\u52a0/\u7f16\u8f91\u4f4d\u7f6e"}, {"DSB_ADDRESS_LBL", "\u5730\u5740\uff1a "}, {"DSB_GEOLOCATION_LBL", "\u5730\u7406\u4f4d\u7f6e\uff1a "}, {"DSB_DELPAGE_LBL", "\u7cfb\u7edf\u751f\u6210\u7684\u9875\u9762\uff0c\u65e0\u6cd5\u5220\u9664\u3002"}, {"DSB_DELPAGE_HDR", "\u662f\u5426\u5220\u9664\u9875\u9762\uff1f"}, {"DSB_DELPAGECONFIRM_MSG", "\u662f\u5426\u8981\u5220\u9664\u8be5\u9875\u9762\uff1f"}, {"CZ_YES", "\u662f"}, {"CZ_CERT_ISSUER", "\u8bc1\u4e66\u9881\u53d1\u8005"}, {"CZ_SUB_DN", "\u4f7f\u7528\u8005\u8bc6\u522b\u540d"}, {"CZ_CERT_SN", "\u8bc1\u4e66\u5e8f\u5217\u53f7"}, {"CZ_VALID_FROM", "\u6709\u6548\u671f\u81ea"}, {"CZ_EXPIRES_ON", "\u5230\u671f\u65e5"}, {"CZ_STATUS", "\u72b6\u6001"}, {"CZ_REQ_GEN", "\u751f\u6210\u7684\u8bf7\u6c42"}, {"CZ_SUB_KEY_ID", "\u4f7f\u7528\u8005\u5bc6\u94a5\u6807\u8bc6\u7b26"}, {"CZ_CRL_STATUS", "CRL \u72b6\u6001"}, {"CZ_CRL_EXPIRES_ON", "CRL \u5230\u671f\u65e5"}, {"CZ_CRL_REQUIRED", "\u9700\u8981 CRL"}, {"CZ_CRL_AUTO_URL", "CRL \u81ea\u52a8\u66f4\u65b0 URL"}, {"CZ_HEADER", "\u8bc1\u4e66\u548c\u8bc1\u4e66\u8bf7\u6c42"}, {"CZ_NAME", "\u540d\u79f0"}, {"CZ_TYPE", "\u7c7b\u578b"}, {"CZ_VALIDATED", "\u5df2\u9a8c\u8bc1"}, {"CZ_EXPIRES", "\u5230\u671f"}, {"CZ_DETAILS", "\u8be6\u7ec6\u4fe1\u606f"}, {"CZ_CONFIGURE", "\u914d\u7f6e"}, {"CZ_DELETE_CERT", "\u5220\u9664\u6b64\u8bc1\u4e66"}, {"CZ_CANT_DELETE_CERT", "\u8fd9\u662f\u4e00\u4e2a\u65e0\u6cd5\u5220\u9664\u7684\u5185\u7f6e\u8bc1\u4e66"}, {"CZ_EMAIL_CERT", "\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u6b64\u8bc1\u4e66"}, {"CZ_CANT_EMAIL_CERT", "\u53ea\u6709\u5bfc\u5165\u7684\u672c\u5730\u8bc1\u4e66\u548c\u7b7e\u540d\u8bf7\u6c42\u624d\u80fd\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u53d1\u9001"}, {"CZ_IMPORT_CERT_CRL", "\u5bfc\u5165\u8bc1\u4e66\u540a\u9500\u5217\u8868"}, {"CZ_UPLOAD_SIGNED_CERT", "\u4e0a\u4f20\u7b7e\u540d\u7684\u8bc1\u4e66"}, {"CZ_CERT_SEARCH", "\u8bc1\u4e66\u641c\u7d22"}, {"CZ_CERT_SELECTED", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u9a8c\u8bc1\u8be5\u8bc1\u4e66"}, {"CZ_SURE", "\u662f\u5426\u786e\u5b9a\u8981\u7ee7\u7eed"}, {"CZ_CERTS_SELECTED", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u4ee5\u4e0b\u8bc1\u4e66\u3002"}, {"CZ_PLZ_SELECT", "\u8bf7\u9009\u62e9\u8981\u5220\u9664\u7684\u8bc1\u4e66\u3002"}, {"CZ_VIEW_STYLE", "\u8bc1\u4e66\u89c6\u56fe\u6837\u5f0f"}, {"CZ_ALL_CERTS", "\u6240\u6709\u8bc1\u4e66"}, {"CZ_IMPORT_CERTS", "\u5bfc\u5165\u7684\u8bc1\u4e66\u548c\u8bf7\u6c42"}, {"CZ_BUILTIN_CERTS", "\u5185\u7f6e\u8bc1\u4e66"}, {"CZ_INCLUDE_EXPIRED_CERTS", "\u5305\u62ec\u8fc7\u671f\u7684\u5185\u7f6e\u8bc1\u4e66"}, {"CZ_IMPORT", "\u5bfc\u5165..."}, {"CZ_NEW_REQ", "\u65b0\u7b7e\u540d\u8bf7\u6c42..."}, {"CZ_DEL_CERTS", "\u5220\u9664\u8bc1\u4e66"}, {"CZ_REQUIRE_CERT", "\u5bfc\u5165\u9700\u8981\u8bc1\u4e66\u540d\u79f0\u3002"}, {"CZ_IMPORT_REQUIRE_FILE", "\u5bfc\u5165\u9700\u8981\u8bc1\u4e66\u6587\u4ef6\u3002"}, {"CZ_NO_DOT", "\u8bc1\u4e66\u540d\u79f0\u65e0\u6548\u3002\u8be5\u540d\u79f0\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528\u4efb\u4f55\u201c.\u201d\u3002"}, {"CZ_IMPORT_REQUIRE_CMP", "\u5bfc\u5165\u9700\u8981\u8bc1\u4e66\u7ba1\u7406\u5bc6\u7801\u3002"}, {"CZ_IMPORT_CERT", "\u5bfc\u5165\u8bc1\u4e66"}, {"CZ_IMPORT_LOCAL", "\u4ece PKCS#12\uff08.p12 \u6216 .pfx\uff09\u7f16\u7801\u6587\u4ef6\u5bfc\u5165\u672c\u5730\u6700\u7ec8\u7528\u6237\u8bc1\u4e66\u53ca\u79c1\u6709\u5bc6\u94a5"}, {"CZ_IMPORT_CA", "\u4ece PKCS#7 (.p7b)\u3001PEM (.pem) \u6216 DER\uff08.der \u6216 .cer\uff09\u7f16\u7801\u6587\u4ef6\u5bfc\u5165 CA \u8bc1\u4e66"}, {"CZ_CERT_NAME", "\u8bc1\u4e66\u540d\u79f0"}, {"CZ_CMP", "\u8bc1\u4e66\u7ba1\u7406\u5bc6\u7801"}, {"CZ_SEL_FILE", "\u8bf7\u9009\u62e9\u8981\u5bfc\u5165\u7684\u6587\u4ef6"}, {"CZ_SPECIFY_FILE", "\u8bf7\u6307\u5b9a\u8981\u5bfc\u5165\u7684\u6587\u4ef6"}, {"CZ_UPLOAD_CERT", "\u4e0a\u4f20\u8bc1\u4e66"}, {"CZ_UPLOAD_SIGN_CERT", "\u4e0a\u4f20\u7b7e\u540d\u8bf7\u6c42\u7684\u5df2\u7b7e\u540d\u8bc1\u4e66"}, {"CZ_SEL_UPLOAD_FILE", "\u8bf7\u9009\u62e9\u8981\u4e0a\u4f20\u7684\u6587\u4ef6"}, {"CZ_FILE_FORMAT", "\u6587\u4ef6\u5e94\u4e3a PEM (.pem) \u6216 DER\uff08.der \u6216 .cer\uff09\u7f16\u7801"}, {"CZ_EXPORT_CERT", "\u5bfc\u51fa\u8bc1\u4e66"}, {"CZ_EXPORT_CERT_REQ", "\u5bfc\u51fa\u8bc1\u4e66\u8bf7\u6c42"}, {"CZ_CERT_EMAIL_CONTENT", "\u5df2\u751f\u6210 PKCS#10 \u8ba4\u8bc1\u8bf7\u6c42\u5e76\u53ef\u7528\u4e8e\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u8bf7\u5c06\u6b64\u6587\u4ef6\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u4e0a\uff0c\u7528\u4e8e\u63d0\u4ea4\u81f3\u6ce8\u518c\u6216\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u3002\u8be5\u6587\u4ef6\u5c06\u4ee5 PEM \u8bc1\u4e66\u8bf7\u6c42\u683c\u5f0f\u4fdd\u5b58\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f5c\u4e3a"}, {"CZ_CHANGE_FILE_NAME", "\uff08\u53ef\u5728\u4e0b\u8f7d\u65f6\u6839\u636e\u9700\u8981\u66f4\u6539\u6587\u4ef6\u540d\uff09\u3002"}, {"CZ_SPECIFY_URL", "\u8bf7\u6307\u5b9a\u4e00\u4e2a CRL URL\u3002"}, {"CZ_SPECIFY_CRL_FILE", "\u8bf7\u6307\u5b9a\u8981\u5bfc\u5165\u7684 CRL \u6587\u4ef6"}, {"CZ_INVALID_FILE", "\u9009\u5b9a\u7684\u6587\u4ef6\u683c\u5f0f\u65e0\u6548\u3002"}, {"CZ_SPECIFY_VALID_LC", "\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u672c\u5730\u8bc1\u4e66\u6587\u4ef6\u3002"}, {"CZ_SPECIFY_VALID_CA", "\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684 CA \u8bc1\u4e66\u6587\u4ef6\u3002"}, {"CZ_SPECIFY_VALID_CRL", "\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684 CRL \u6587\u4ef6\u3002"}, {"CZ_SPECIFY_VALID_SIGNED", "\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u7b7e\u540d\u8bc1\u4e66\u6587\u4ef6\u3002"}, {"CZ_IMPORT_CRL", "\u5bfc\u5165 CRL"}, {"CZ_IMPORT_CRL_FULL", "\u5bfc\u5165\u8bc1\u4e66\u540a\u9500\u5217\u8868"}, {"CZ_IMPORT_CRL_FILE", "\u76f4\u63a5\u4ece PEM (.pem) \u6216 DER\uff08.der \u6216 .crl\uff09\u7f16\u7801\u6587\u4ef6\u5bfc\u5165 CRL"}, {"CZ_SEL_CRL_FILE", "\u9009\u62e9\u8981\u5bfc\u5165\u7684 CRL \u6587\u4ef6"}, {"CZ_AUTO_IMPORT_CRL", "\u901a\u8fc7 HTTP \u5b9a\u671f\u81ea\u52a8\u5bfc\u5165 CRL"}, {"CZ_CRL_LOC", "\u8f93\u5165 CRL \u7684\u4f4d\u7f6e (URL)"}, {"CZ_INVALIDATE_CERTS", "\u5982\u679c CRL \u5bfc\u5165\u6216\u5904\u7406\u5931\u8d25\uff0c\u5219\u8bc1\u4e66\u548c\u5b89\u5168\u5173\u8054\u5931\u6548"}, {"CZ_CMP_REQUIRE", "\u9700\u8981\u8bc1\u4e66\u7ba1\u7406\u5bc6\u7801\u624d\u80fd\u5bfc\u51fa\u8bc1\u4e66"}, {"CZ_CERT_NAME_REQUIRE", "PKCS10 \u751f\u6210\u9700\u8981\u8bc1\u4e66\u540d\u79f0\u3002"}, {"CZ_CERT_NAME_IN_USE", "\u8bc1\u4e66\u540d\u79f0\u5df2\u7ecf\u4f7f\u7528\u3002\u8bf7\u9009\u62e9\u53e6\u4e00\u540d\u79f0\u3002"}, {"CZ_SUB_DN_REQUIRE", "PKCS10 \u751f\u6210\u81f3\u5c11\u9700\u8981\u4e00\u4e2a\u4f7f\u7528\u8005\u540d\u79f0\u5c5e\u6027\u3002"}, {"CZ_CN_TWO_CHARS", "\u56fd\u5bb6\u6216\u5730\u533a\u540d\u79f0\u5e94\u4e3a\u4e24\u4e2a\u5b57\u7b26"}, {"CZ_DOMAIN_INVALID", "\u4f7f\u7528\u8005\u5907\u7528\u540d\u79f0\u4e2d\u7684\u57df\u540d\u65e0\u6548\u3002"}, {"CZ_IP_INVALID", "\u4f7f\u7528\u8005\u5907\u7528\u540d\u79f0\u7684 IP \u5730\u5740\u65e0\u6548\u3002"}, {"CZ_EMAIL_INVALID", "\u4f7f\u7528\u8005\u5907\u7528\u540d\u79f0\u4e2d\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65e0\u6548\u3002"}, {"CZ_CERT_REQ", "\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42"}, {"CZ_GEN_CERT_REQ", "\u751f\u6210\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42"}, {"CZ_CERT_ALIAS", "\u8bc1\u4e66\u522b\u540d"}, {"CZ_COUNTRY", "\u56fd\u5bb6\u6216\u5730\u533a"}, {"CZ_STATE", "\u7701/\u81ea\u6cbb\u533a"}, {"CZ_LOC", "\u53bf\u5e02\u6216\u53bf"}, {"CZ_COMPANY", "\u516c\u53f8\u6216\u7ec4\u7ec7"}, {"CZ_LOC_CITY", "\u53bf\u5e02\u3001\u5e02\u6216\u53bf"}, {"CZ_DEPT", "\u90e8\u95e8"}, {"CZ_GROUP", "\u7ec4"}, {"CZ_TEAM", "\u5c0f\u7ec4"}, {"CZ_CNAME", "\u516c\u7528\u540d"}, {"CZ_SN", "\u5e8f\u5217\u53f7"}, {"CZ_EMAIL", "\u7535\u5b50\u90ae\u4ef6\u5730\u5740"}, {"CZ_SUB_ALT_NAME", "\u4f7f\u7528\u8005\u5907\u7528\u540d\u79f0\uff08\u53ef\u9009\uff09"}, {"CZ_DOMAIN_NAME", "\u57df\u540d"}, {"CZ_IPV4", "IPv4 \u5730\u5740"}, {"CZ_SUB_KEY_TYPE", "\u4f7f\u7528\u8005\u5bc6\u94a5\u7c7b\u578b"}, {"CZ_SIG_ALGORITHM", "\u7b7e\u540d\u7b97\u6cd5"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "\u4f7f\u7528\u8005\u5bc6\u94a5\u5927\u5c0f"}, {"CZ_NO_CERTS", "\u672a\u627e\u5230\u8bc1\u4e66"}, {"IMPORT", "\u5bfc\u5165"}, {"CZ_SCEP_CONFIG", "SCEP \u914d\u7f6e"}, {"CZ_CSR_LIST", "CSR \u5217\u8868"}, {"CZ_NO_CSR", "\u65e0 CSR"}, {"CZ_CHALLENGE_PWD", "\u6311\u6218\u5bc6\u7801\uff08\u53ef\u9009\uff09"}, {"CZ_CA_URL", "CA URL"}, {"CZ_REQ_COUNT", "\u8bf7\u6c42\u8ba1\u6570"}, {"CZ_POLL_INTERVAL", "\u8f6e\u8be2\u95f4\u9694\uff08\u79d2\uff09"}, {"CZ_POLL_TIME", "\u6700\u5927\u8f6e\u8be2\u65f6\u95f4\uff08\u79d2\uff09"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA URL \u4e0d\u80fd\u4e3a\u7a7a"}, {"CZ_GEN_CSR", "\u6ca1\u6709\u53ef\u7528\u7684 CSR\uff0c\u8bf7\u81f3\u5c11\u751f\u6210\u4e00\u4e2a"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "\u6765\u81ea\u9009\u5b9a\u8fc7\u6ee4\u5668\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u5c06\u88ab\u63a8\u9001\u5230\u9009\u5b9a\u7ec4\u8282\u70b9\u4e0b\u7684\u6240\u6709\u8bbe\u5907\u3002"}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "\u6765\u81ea\u9009\u5b9a\u8fc7\u6ee4\u5668\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u5c06\u4ece\u9009\u5b9a\u8bbe\u5907\u7684\u7236\u8282\u70b9\u7ee7\u627f\u3002"}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "\u6765\u81ea\u9009\u5b9a\u8fc7\u6ee4\u5668\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u5c06\u4ece\u9009\u5b9a\u7ec4\u8282\u70b9\u63a8\u9001\u5230\u7236\u8282\u70b9\u3002<br>\u8981\u5c06\u8bbe\u7f6e\u5e94\u7528\u5230\u7236\u8282\u70b9\u4e0b\u7684\u6240\u6709\u8bbe\u5907\uff08\u9009\u5b9a\u8282\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u9664\u5916\uff09\uff0c\u8bf7\u5728\u201c\u9884\u89c8\u201d\u5c4f\u5e55\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u9009\u62e9\u3002"}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "\u6765\u81ea\u9009\u5b9a\u8fc7\u6ee4\u5668\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u5c06\u4ece\u9009\u5b9a\u8bbe\u5907\u63a8\u9001\u5230\u7236\u8282\u70b9\u3002<br>\u8981\u5c06\u8bbe\u7f6e\u5e94\u7528\u5230\u7236\u8282\u70b9\u4e0b\u7684\u6240\u6709\u8bbe\u5907\uff08\u9009\u5b9a\u8bbe\u5907\u9664\u5916\uff09\uff0c\u8bf7\u5728\u201c\u9884\u89c8\u201d\u5c4f\u5e55\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u9009\u62e9\u3002"}, {"WS_URI_HEADER", "\u516c\u5171 URI"}, {"WS_URI_INSTRUCTIONS", "\u8f93\u5165\u6b64\u90e8\u7f72\u7684\u516c\u5171\u670d\u52a1\u5668\u540d\u79f0\u3002\u6b64\u540d\u79f0\u5c06\u7528\u4e8e\u8bbf\u95ee\u6b64\u670d\u52a1\u5668\u4e0a\u7684 Web \u670d\u52a1\u5e76\u5c06\u88ab\u5305\u542b\u5728\u5d4c\u5165\u5f0f\u4ea4\u53c9\u94fe\u63a5\u4e2d\u3002"}, {"WS_URI_NOTE", "\u6ce8\uff1a\u516c\u5171\u670d\u52a1\u5668\u7aef\u53e3\u7528\u4e8e\u4ece\u516c\u5171\u57df\u8bbf\u95ee GMS Web \u670d\u52a1\u3002\u8981\u4fee\u6539 GMS \u5728\u5176\u4e0a\u8fd0\u884c Web \u670d\u52a1\u7684\u7aef\u53e3\uff0c\u8bf7\u5bfc\u822a\u5230 System Interface/Deployment/Settings"}, {"WS_DEPLOYMENT_HEADER", "GMS \u90e8\u7f72"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "\u9009\u62e9\u8981\u914d\u7f6e Web \u670d\u52a1\u7684\u90e8\u7f72\u3002"}, {"WS_DEPLOYMENT_ERROR", "\u6ca1\u6709\u5f53\u524d\u6d3b\u52a8\u7684\u5df2\u8bb8\u53ef\u90e8\u7f72"}, {"WS_STATUS_HEADER", "Web \u670d\u52a1"}, {"WS_SERVICES_ERROR", "\u6ca1\u6709\u627e\u5230\u6b64\u90e8\u7f72\u7684 Web \u670d\u52a1"}, {"WS_DEPLOYMENTS_EMPTY", "\u65e0\u6cd5\u83b7\u53d6\u90e8\u7f72\u5217\u8868\u3002\u8bf7\u6ce8\u518c GMSVP \u7684\u6b64\u5b9e\u4f8b\u3002"}, {"WS_DISTRIBUTED_HEADER", "\u5206\u5e03\u5f0f\u5b9e\u4f8b"}, {"WS_DISTRIBUTED_EMPTY", "\u6ca1\u6709\u914d\u7f6e\u7528\u4e8e\u6b64\u670d\u52a1\u5668\u7684\u5206\u5e03\u5f0f\u5b9e\u4f8b"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "\u5e94\u7528\u6a21\u677f\uff1a "}, {"HM_APPLY_RECORDING_TASK_DESC", "\u5e94\u7528\u8bb0\u5f55\uff1a "}, {"LM_CONFIRM_DELETE_RULE", "\u662f\u5426\u786e\u5b9a\u8981\u5220\u9664\u9009\u5b9a\u7684\u89c4\u5219\uff1f"}, {"LM_SUCCESS_DELETE_RULE", "\u89c4\u5219\u5220\u9664\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_DELETE_RULE", "\u65e0\u6cd5\u6210\u529f\u5220\u9664\u9009\u5b9a\u7684\u89c4\u5219\u3002"}, {"LM_SUCCESS_UPDATE_RULE", "\u89c4\u5219\u66f4\u65b0\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_UPDATE_RULE", "\u65e0\u6cd5\u6210\u529f\u66f4\u65b0\u89c4\u5219\u3002"}, {"LM_DUPLICATE_STMT_NAME", "\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u89c4\u5219\u5df2\u7ecf\u5b58\u5728\u3002\\n\u8bf7\u4e3a\u89c4\u5219\u8f93\u5165\u4e00\u4e2a\u552f\u4e00\u7684\u540d\u79f0"}, {"LM_RULE_DESTINATION_EMPTY", "\u76ee\u6807\u4e3a\u7a7a\u3002\\n\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u6761\u76ee\u3002"}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "\u76ee\u6807\u4e0d\u80fd\u8d85\u8fc7 256 \u4e2a\u5b57\u7b26\u3002\\n\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u6761\u76ee\u3002"}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "\u5fc5\u987b\u6307\u5b9a\u9009\u5b9a\u7c7b\u578b\u7684\u76ee\u6807\u503c\u3002\\n\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u6761\u76ee\u3002"}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u76ee\u6807\u6307\u5b9a\u65e5\u7a0b\u3002\\n\u8bf7\u9009\u62e9\u4e00\u4e2a\u6709\u6548\u7684\u65e5\u7a0b\u6216\u65e5\u7a0b\u7ec4\u3002"}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "\u6b64\u9875\u9762\u4e2d\u9009\u5b9a\u76ee\u6807\u7684\u57df\u4e0e\u4e0a\u4e00\u9875\\n\u9009\u5b9a\u4e25\u91cd\u6027\u7684\u57df\u4e0d\u5339\u914d\u3002\\n\\n\u4ece\u76f8\u540c\u7684\u57df\u5185\u9009\u53d6\u5bf9\u8c61\u975e\u5e38\u91cd\u8981\u3002\\n\u5982\u679c\u9009\u5b9a\u7684\u4e25\u91cd\u6027\u4e0d\u6b63\u786e\uff0c\u8bf7\u8fd4\u56de\u5e76\u4ece\u9884\u671f\u7684\u57df\u4e2d\u9009\u53d6\u4e25\u91cd\u6027\u3002\\n\u5426\u5219\uff0c\u4ece\u5339\u914d\u4e25\u91cd\u6027\u7684\u57df\u4e2d\u9009\u62e9\u4e00\u4e2a\u76ee\u6807\u3002"}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "\u6b64\u9875\u9762\u4e2d\u9009\u5b9a\u65e5\u7a0b\u7684\u57df\u4e0e\u4e0a\u4e00\u9875\\n\u9009\u5b9a\u4e25\u91cd\u6027\u7684\u57df\u4e0d\u5339\u914d\u3002\\n\\n\u4ece\u76f8\u540c\u7684\u57df\u5185\u9009\u53d6\u5bf9\u8c61\u975e\u5e38\u91cd\u8981\u3002\\n\u5982\u679c\u9009\u5b9a\u7684\u4e25\u91cd\u6027\u4e0d\u6b63\u786e\uff0c\u8bf7\u8fd4\u56de\u5e76\u4ece\u9884\u671f\u7684\u57df\u4e2d\u9009\u53d6\u4e25\u91cd\u6027\u3002\\n\u5426\u5219\uff0c\u4ece\u5339\u914d\u4e25\u91cd\u6027\u7684\u57df\u4e2d\u9009\u62e9\u4e00\u4e2a\u65e5\u7a0b\u3002"}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "\u65e0\u6cd5\u8bbe\u7f6e\u63a7\u5236\u680f\u72b6\u6001\u3002"}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "\u65e0\u6cd5\u8bbe\u7f6e\u81ea\u52a8\u6eda\u52a8\u72b6\u6001\u3002"}, {"LM_READER_START_SUCCESS", "\u5b9e\u65f6\u76d1\u89c6\u8bfb\u53d6\u5668\u5df2\u542f\u52a8\u3002"}, {"LM_READER_START_FAILURE", "\u65e0\u6cd5\u542f\u52a8\u5b9e\u65f6\u76d1\u89c6\u8bfb\u53d6\u5668\u3002\u8bf7\u68c0\u67e5\u8bbe\u7f6e\u914d\u7f6e\u3002\\n \uff08\u6ce8\uff1a\u6307\u5b9a\u7684\u8f6c\u53d1\u5730\u5740\u548c\u7aef\u53e3\u5e94\u53ef\u4ece\u63a7\u5236\u53f0/Web \u670d\u52a1\u5668\u8fdb\u884c\u8bbf\u95ee\uff09\u3002"}, {"LM_READER_STOP_SUCCESS", "\u5b9e\u65f6\u76d1\u89c6\u8bfb\u53d6\u5668\u5df2\u505c\u6b62\u3002"}, {"LM_READER_STOP_FAILURE", "\u65e0\u6cd5\u505c\u6b62\u5b9e\u65f6\u76d1\u89c6\u8bfb\u53d6\u5668\u3002"}, {"LM_EC_DISABLED", "Syslog \u8f6c\u53d1\u5f53\u524d\u5df2\u7981\u7528\u3002<br>Syslog \u5fc5\u987b\u8f6c\u53d1\u5230\u4e8b\u4ef6\u7ba1\u7406\u5668\u670d\u52a1\u4ee5\u8fdb\u884c\u76d1\u89c6\u3002<br>\u8981\u542f\u7528 Syslog \u8f6c\u53d1\u4ee5\u8fdb\u884c\u76d1\u89c6\uff0c\u8bf7\u5355\u51fb\u4e0a\u9762\u63a7\u5236\u680f\u4e2d\u7684\u201c\u8bbe\u7f6e\u201d\u3002"}, {"LM_READER_NO_ALERT_MSG", "\u8bfb\u53d6\u5668\u672a\u6536\u5230\u4efb\u4f55\u65b0\u8b66\u62a5\u3002<br>\u6ce8\uff1a\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u68c0\u67e5\u76d1\u89c6\u5668\u8bbe\u7f6e\u548c\u8bbe\u5907\u7684 syslog \u914d\u7f6e\u3002"}, {"LM_READER_STOPPED_MSG", "\u8bfb\u53d6\u5668\u5f53\u524d\u5df2\u505c\u6b62\u3002<br>\u8bf7\u901a\u8fc7\u5355\u51fb\u4e0a\u9762\u63a7\u5236\u680f\u4e2d\u7684\u201c\u542f\u52a8\u201d\u6309\u94ae\u542f\u52a8\u8bfb\u53d6\u5668\u3002"}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "\u60a8\u65e0\u6743\u8bbf\u95ee\u8bbe\u5907\u3002<br>\u5982\u679c\u60a8\u60f3\u76d1\u89c6\u4efb\u4f55\u6b64\u7c7b\u8bbe\u5907\u8f6c\u53d1\u7684 syslog\uff0c\u8bf7\u8054\u7cfb\u60a8\u7684\u7ba1\u7406\u5458\u3002"}, {"LM_READER_ERROR_MSG", "\u9047\u5230\u9519\u8bef\u3002<br>\u5904\u7406\u5b9e\u65f6\u76d1\u89c6\u5668\u8bfb\u53d6\u5668\u6536\u96c6\u65f6\u53d1\u751f\u5f02\u5e38\u3002"}, {"LM_READER_SOCKET_ERROR_MSG", "\u9047\u5230\u9519\u8bef\u3002<br>\u542f\u52a8\u5b9e\u65f6\u76d1\u89c6\u5668\u8bfb\u53d6\u5668\u65f6\u53d1\u751f\u5f02\u5e38\u3002<br>\u5f02\u5e38\u8be6\u7ec6\u4fe1\u606f\uff1a "}, {"LM_FAILURE_UPDATE_SETTINGS", "\u65e0\u6cd5\u66f4\u65b0\u5b9e\u65f6\u76d1\u89c6\u5668\u8bbe\u7f6e\u3002"}, {"LM_SUCCESS_UPDATE_SETTINGS", "\u6210\u529f\u66f4\u65b0\u5b9e\u65f6\u76d1\u89c6\u5668\u8bbe\u7f6e\u3002"}, {"LM_WARN_ENABLE_EC", "\u4e8b\u4ef6\u7ba1\u7406\u4f7f\u7528Syslog Collector\u6536\u96c6\u548c\u8f6c\u53d1\u7684\u65e5\u5fd7\uff08Syslog\uff09\u6765\u76d1\u63a7\u7f51\u7edc\u3002\u8fd9\u4e9b\u65e5\u5fd7\u6839\u636e\u5b9a\u4e49\u89c4\u5219\u88ab\u53d1\u9001\u5230\u5f15\u64ce\u505a\u4e8b\u4ef6\u5904\u7406\u3002 \\n\\n\u6ce8\u610f\uff1a\u542f\u7528\u6b64\u9009\u9879\u4f1a\u628a\u6240\u6709\u4eceSyslog Collector\u6536\u5230\u7684\u65e5\u5fd7\u9001\u5230\u4e00\u4e2a\u4e2d\u592e\u4e8b\u4ef6\u7ba1\u7406\u670d\u52a1. \u4e3a\u4e86\u5904\u7406\u4e8b\u4ef6\uff0c\u6bcf\u4e00\u4e2a\u65e5\u5fd7\u901a\u8fc7Syslog Collector\u590d\u5236\uff0c\u8fd9\u5c06\u63d0\u9ad8\u6574\u4e2a\u7f51\u7edc\u7684Syslog\u6d41\u91cf."}, {"LM_STMT_CHANGED_MSG_1", "\u60a8\u5df2\u66f4\u6539\u9009\u5b9a\u7684\u89c4\u5219"}, {"LM_STMT_CHANGED_MSG_2", "\u3002\\n\u8f6c\u5230\u4e0a\u4e00\u5c4f\u5e55\uff08\u201c\u89c4\u5219\u5217\u8868\u201d\u9875\u9762\uff09\u5c06\u610f\u5473\u7740\u4e22\u5931\u60a8\u7684\u66f4\u6539\u3002\\n\u5355\u51fb\u201c\u786e\u5b9a\u201d\u8f6c\u5230\u201c\u89c4\u5219\u5217\u8868\u201d\u9875\u9762\uff0c\u6216\u5355\u51fb\u201c\u53d6\u6d88\u201d\u7ee7\u7eed\u7f16\u8f91\u6b64\u89c4\u5219\u3002"}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "\u65e0\u6cd5\u66f4\u65b0\u5bf9\u63a5\u72b6\u6001\u3002"}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u66f4\u65b0\u6743\u9650\u3002"}, {"LM_DELETE_STMT_EMPTY", "\u8bf7\u9009\u62e9\u81f3\u5c11\u4e00\u4e2a\u89c4\u5219\u8fdb\u884c\u5220\u9664\u3002"}, {"LM_STMT_RULE_EMPTY", "\u6ca1\u6709\u9009\u62e9\u89c4\u5219\u7c7b\u578b\u3002\\n\u8bf7\u9009\u62e9\u4e00\u4e2a\u89c4\u5219\u7c7b\u578b\u3002"}, {"LM_STMT_RULE_DUPLICATE", "\u5177\u6709\u76f8\u540c\u89c4\u5219\u7c7b\u578b\u548c\u7f16\u8f91\u5668\u5c5e\u6027\u7684\u89c4\u5219\u5df2\u7ecf\u5b58\u5728\u3002\\n\u8bf7\u4e3a\u6b64\u89c4\u5219\u9009\u62e9\u552f\u4e00\u7684\u89c4\u5219\u5c5e\u6027\u3002"}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "\u8bfb\u53d6\u5668\u7684\u8f6c\u53d1\u7aef\u53e3\u5df2\u66f4\u6539\u3002\\n\u8bfb\u53d6\u5668\u53ef\u80fd\u9700\u8981\u51e0\u79d2\u65f6\u95f4\u624d\u80fd\u6210\u529f\u91cd\u65b0\u542f\u52a8\u3002"}, {"LM_NO_RULE_EDITABLE", "\u9009\u5b9a\u7ec4\u4e2d\u6ca1\u6709\u53ef\u7f16\u8f91\u7684\u89c4\u5219\u7c7b\u578b\u3002\n\u8bf7\u9009\u62e9\u5176\u4ed6\u7ec4/\u89c4\u5219\u7c7b\u578b\u3002"}, {"LM_DISABLE_STMT_EMPTY", "\u8bf7\u9009\u62e9\u81f3\u5c11\u4e00\u4e2a\u89c4\u5219\u7528\u4e8e\u542f\u7528/\u7981\u7528\u64cd\u4f5c\u3002"}, {"LM_SUCCESS_DISABLE_RULE", "\u89c4\u5219\u542f\u7528/\u7981\u7528\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_DISABLE_RULE", "\u65e0\u6cd5\u6210\u529f\u542f\u7528/\u7981\u7528\u9009\u5b9a\u7684\u89c4\u5219\u3002"}, {"LM_EDIT_RULE_MSG_1", "\u60a8\u5df2\u9009\u62e9\u7f16\u8f91\u4ee5\u4e0b\u89c4\u5219\uff1a\\n"}, {"LM_EDIT_RULE_MSG_2", "\\n\u9009\u5b9a\u7684\u5217\u8868\u5305\u542b\u65e0\u6cd5\u7f16\u8f91\u7684\u6240\u6709\u89c4\u5219\u3002\\n\\n\u8bf7\u9009\u62e9\u5176\u4ed6\u89c4\u5219\u4ee5\u7ee7\u7eed\u3002"}, {"LM_EDIT_RULE_MSG_3", "\\n\u9009\u5b9a\u5217\u8868\u5305\u542b\u65e0\u6cd5\u7f16\u8f91\u7684\u89c4\u5219\uff08\u901a\u8fc7 * \u6807\u8bb0\uff09\u3002\\n\\n\u662f\u5426\u8981\u7ee7\u7eed\u7f16\u8f91\u5176\u4f59\u7684\u89c4\u5219\uff1f"}, {"LM_DELETE_RULE_MSG_1", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u4ee5\u4e0b\u89c4\u5219\uff1a\\n"}, {"LM_DELETE_RULE_MSG_2", "\\n\u9009\u5b9a\u7684\u5217\u8868\u5305\u542b\u65e0\u6cd5\u5220\u9664\u7684\u6240\u6709\u89c4\u5219\u3002\\n\\n\u8bf7\u9009\u62e9\u5176\u4ed6\u89c4\u5219\u4ee5\u7ee7\u7eed\u3002"}, {"LM_DELETE_RULE_MSG_3", "\\n\u9009\u5b9a\u5217\u8868\u5305\u542b\u65e0\u6cd5\u5220\u9664\u7684\u89c4\u5219\uff08\u901a\u8fc7 * \u6807\u8bb0\uff09\u3002\\n\\n\u662f\u5426\u8981\u7ee7\u7eed\u5220\u9664\u5176\u4f59\u7684\u89c4\u5219\uff1f"}, {"LM_DELETE_RULE_MSG_4", "\\n\u662f\u5426\u8981\u7ee7\u7eed\uff1f"}, {"MASKED_LIVEMONITOR_MESSAGE", "\u57fa\u4e8e\u5f3a\u5236\u7684\u9690\u79c1\u653f\u7b56\u5c06\u4e0d\u663e\u793a\u8b66\u62a5\u6d88\u606f"}, {"MASKED_ADDITIONAL_INFORMATION", "\u57fa\u4e8e\u5f3a\u5236\u7684\u9690\u79c1\u653f\u7b56\u5c06\u4e0d\u663e\u793a\u989d\u5916\u7684\u4fe1\u606f"}, {"DSB_NONENGFW_ALERT_TITLE", "\u56fa\u4ef6\u7248\u672c\u8b66\u62a5!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "\u6b64 GMS \u6b63\u5728\u7ba1\u7406\u8fd0\u884c\u975e\u82f1\u8bed\u56fa\u4ef6\u7684 SonicOS \u8bbe\u5907\u3002"}, {"DSB_NONENGFW_ALERT_MSGPART2", "\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e9b\u8bbe\u5907\u4e2d\u4ee5\u975e\u82f1\u8bed\u5b9a\u4e49\u7684\u5bf9\u8c61\u548c\u7b56\u7565\u5728 GMS UI \u4e2d\u7684\u663e\u793a\u53ef\u80fd\u4e0d\u6b63\u786e\u3002\u4fee\u6539\u6b64\u7c7b\u5bf9\u8c61\u548c\u7b56\u7565\u5e76\u5c06\u5176\u63a8\u9001\u81f3\u6b64\u7c7b\u8bbe\u5907\u53ef\u80fd\u4e0d\u4f1a\u5bfc\u81f4\u9884\u671f\u7684\u7ed3\u679c\u3002"}, {"SYSLOGTAIL_STARTED", "Syslog Reader\uff08\u7528\u4e8e\u8fdb\u884c\u5b9e\u65f6 Syslog \u76d1\u89c6\uff09\u5df2\u542f\u52a8\u3002"}, {"SYSLOGTAIL_START_FAILED", "\u4e0d\u80fd\u542f\u52a8 Syslog Reader\u3002\u8bf7\u68c0\u67e5 Syslog \u8f6c\u53d1\u914d\u7f6e\u3002&nbsp;&nbsp;\uff08\u6ce8:\u5e94\u8be5\u53ef\u4ee5\u4ece\u63a7\u5236\u53f0/Web \u670d\u52a1\u5668\u8bbf\u95ee\u6307\u5b9a\u7684\u8f6c\u53d1\u5730\u5740\u548c\u7aef\u53e3\u3002\uff09"}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog Reader\uff08\u7528\u4e8e\u8fdb\u884c\u5b9e\u65f6 Syslog \u76d1\u89c6\uff09\u5df2\u8fd0\u884c\uff1b\u672a\u8fdb\u884c\u4efb\u4f55\u66f4\u6539"}, {"SYSLOGTAIL_STOPPED", "Syslog Reader\uff08\u7528\u4e8e\u8fdb\u884c\u5b9e\u65f6 Syslog \u76d1\u89c6\uff09\u5df2\u505c\u6b62\u3002"}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog Reader\uff08\u7528\u4e8e\u8fdb\u884c\u5b9e\u65f6 Syslog \u76d1\u89c6\uff09\u5df2\u505c\u6b62\uff1b\u672a\u8fdb\u884c\u4efb\u4f55\u66f4\u6539"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "Reader \u672a\u6536\u5230\u4efb\u4f55\u65b0\u7684 syslog\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(\uff08Reader \u4ecd\u4f1a\u5c1d\u8bd5\u6536\u96c6 syslog\uff09\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(\uff08\u5982\u679c\u95ee\u9898\u4f9d\u7136\u5b58\u5728\uff0c\u8bf7\u68c0\u67e5 Syslog Reader \u8bbe\u7f6e\u548c\u9632\u706b\u5899\u914d\u7f6e\uff09\u3002"}, {"SYSLOGTAIL_CONFIG_CHECK", "\u8bf7\u68c0\u67e5 Syslog Reader \u8bbe\u7f6e\u548c\u9632\u706b\u5899\u914d\u7f6e\u3002"}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "\u672a\u627e\u5230 syslog\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER", "\u8bf7\u5c1d\u8bd5\u4fee\u6539\u8fc7\u6ee4\u5b57\u7b26\u4e32\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(\uff08\u6ce8:\u5728\u591a\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u4f7f\u7528 <b>AND</b> \u6216 <b>OR</b> \u53ef\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\uff09\u3002"}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Syslog Reader \u5f53\u524d\u5df2\u505c\u6b62"}, {"SYSLOGTAIL_START", "\u8bf7\u542f\u52a8 Syslog Reader\u3002"}, {"SYSLOGTAIL_ERROR", "\u51fa\u9519\u3002"}, {"SYSLOGTAIL_ERROR_MESSAGE", "\u5f53\u5904\u7406 syslog \u6536\u96c6\u65f6\u51fa\u73b0\u5f02\u5e38\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "\u672a\u542f\u7528 Syslog \u8f6c\u53d1\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "\u8bf7\u914d\u7f6e Syslog \u8f6c\u53d1\u5730\u5740\u548c\u7aef\u53e3\uff0c\u5e76\u542f\u52a8 Syslog Reader\u3002"}, {"MASKED_SYSLOG_MESSAGE", "\u57fa\u4e8e\u5f3a\u5236\u7684\u9690\u79c1\u653f\u7b56\u5c06\u4e0d\u663e\u793a\u5176\u4f59\u7684 syslog \u6d88\u606f"}, {"EVENT_ALERTS_SEARCH", "\u641c\u7d22\u8b66\u62a5"}, {"EVENT_ALERTS_DELETE", "\u5220\u9664\u8b66\u62a5"}, {"EVENT_ALERTS_ENABLE_DISABLE", "\u542f\u7528/\u7981\u7528\u8b66\u62a5"}, {"EVENT_ALERTS_ADD", "\u6dfb\u52a0\u8b66\u62a5"}, {"EVENT_ALERTS_HEADER", "\u8b66\u62a5"}, {"EVENT_ALERTS_ALERT_NAME", "\u540d\u79f0"}, {"EVENT_ALERTS_ALERT_TYPE", "\u8b66\u62a5\u7c7b\u578b"}, {"EVENT_ALERTS_INTERVAL", "\u95f4\u9694"}, {"EVENT_ALERTS_DEST_SCHED", "\u76ee\u6807/\u8ba1\u5212"}, {"EVENT_ALERTS_ENABLED", "\u5df2\u542f\u7528"}, {"EVENT_ALERTS_DOMAIN", "\u57df"}, {"EVENT_ALERTS_CONFIGURE", "\u914d\u7f6e"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "\u672a\u627e\u5230\u8b66\u62a5"}, {"DTF_ANY", "\u4efb\u4f55\u65f6\u95f4"}, {"DTF_ADD", "\u6dfb\u52a0\u8bbe\u5907"}, {"DTF_EXECUTE", "\u6267\u884c"}, {"DTF_ENABLED", "\u5df2\u542f\u7528"}, {"DTF_SEARCH", "\u9ed8\u8ba4\u4efb\u52a1\u641c\u7d22"}, {"DTF_NOT_FOUND", "\u672a\u627e\u5230\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_DT", "\u9ed8\u8ba4\u4efb\u52a1"}, {"DTF_DESC", "\u8bf4\u660e"}, {"DTF_TOU", "\u8bbe\u5907\u7c7b\u578b"}, {"DTF_DURING", "\u4efb\u52a1\u521b\u5efa\u65f6\u95f4"}, {"DTF_NO_DTS", "\u672a\u9009\u62e9\u4efb\u4f55\u8981\u6267\u884c\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_EXEC", "\u6267\u884c\u6b64\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_NO_DISABLE", "\u4e0d\u80fd\u7981\u7528\u6b64\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_NO_EXEC", "\u4e0d\u80fd\u6267\u884c\u6b64\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_SEL_UNITS", "\u9009\u62e9\u8bbe\u5907"}, {"DTF_EXEC_METHOD", "\u6267\u884c\u65b9\u6cd5"}, {"DTF_ATLEAST_ONE", "\u81f3\u5c11\u9009\u62e9\u4e00\u53f0\u8bbe\u5907\u6765\u6267\u884c\u4efb\u52a1\u3002"}, {"DTF_EXEC_ALL", "\u5728\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u8bbe\u5907\u4e0a\u6267\u884c\u9ed8\u8ba4\u4efb\u52a1"}, {"DTF_EXEC_FOLL", "\u5728\u6240\u9009\u7684\u4ee5\u4e0b\u8bbe\u5907\u4e0a\u6267\u884c\u9ed8\u8ba4\u4efb\u52a1"}, {"DTF_REAPPLY_1", "\u4ec5\u5f53\u4e4b\u524d\u672a\u5e94\u7528\u65f6\u52a0\u4ee5\u6267\u884c"}, {"DTF_REAPPLY_2", "\u53ea\u6709\u4e4b\u524d\u672a\u5e94\u7528\u81f3\u6240\u9009\u8bbe\u5907\u7684\u4efb\u52a1\u624d\u4f1a\u6267\u884c\u3002"}, {"DTF_REAPPLY_3", "\u8be5\u8bbe\u5907\u5c06\u5ffd\u7565\u5df2\u6267\u884c\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_EXEC_1", "\u5373\u4f7f\u4e4b\u524d\u5df2\u5e94\u7528\u4e5f\u5c06\u6267\u884c"}, {"DTF_EXEC_2", "\u5373\u4f7f\u4e4b\u524d\u5e94\u7528\u4e86\u9009\u5b9a\u7684\u6240\u6709\u4efb\u52a1\uff0c\u4ecd\u4f1a\u5728\u6240\u9009\u8bbe\u5907\u4e0a\u91cd\u65b0\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\u3002"}, {"DTF_ENABLE_SUCCESS", "\u6210\u529f\u66f4\u65b0\u6240\u9009\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_ENABLE_FAIL", "\u65e0\u6cd5\u66f4\u65b0\u6240\u9009\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_SCHEDULE_SUCCESS", "\u6210\u529f\u8ba1\u5212\u8981\u6267\u884c\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_SCHEDULE_FAIL", "\u7531\u4e8e\u6240\u9009\u7684\u4efb\u52a1\u4e0d\u9002\u7528\u6216\u8005\u5df2\u6267\u884c\uff0c\u56e0\u6b64\u672a\u8ba1\u5212\u4efb\u4f55\u9ed8\u8ba4\u4efb\u52a1\u3002."}, {"AUTOASSIGN_AGENT_HEADER", "\u4ee3\u7406\u5206\u914d\u8bbe\u7f6e"}, {"AUTOASSIGN_AGENT_MSG_1", " \u8981\u6c42\u4ee3\u7406\u62e5\u6709\u8bbe\u5907\u8fdb\u884c\u7ba1\u7406\u3001\u62a5\u544a\u548c\u76d1\u63a7\u3002\u4ee3\u7406\u7684\u81ea\u52a8\u5206\u914d\u53ef\u786e\u4fdd\u8bbe\u5907\u5747\u8861\u5e73\u8861\uff0c\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u8d44\u6e90\u5206\u914d\u3001\u6700\u4f18\u6027\u80fd\u3001\u5145\u8db3\u7684\u5b58\u50a8\u548c\u9ad8\u53ef\u7528\u6027\u3002\u5728\u6267\u884c\u201c\u6dfb\u52a0\u8bbe\u5907\u201d\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u57fa\u4e8e\u7ba1\u7406\u6a21\u5f0f\u542f\u7528\u6b64\u529f\u80fd\u3002 "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "\u7528\u6237\u53ef\u4ee5\u4ece<i>\u4fee\u6539\u8bbe\u5907</i>\u5bf9\u8bdd\u6846\u91cd\u65b0\u5206\u914d\u4ee3\u7406\u3002"}, {"AUTOASSIGN_AGENT_MSG_2", "\u7528\u6237\u53ef\u4ee5\u4ece<i>\u4fee\u6539\u8bbe\u5907</i>\u5bf9\u8bdd\u6846\u6216\u4f7f\u7528<i>\u91cd\u65b0\u5206\u914d\u4ee3\u7406</i>\u64cd\u4f5c\u6765\u91cd\u65b0\u5206\u914d\u4ee3\u7406\u3002"}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\u4ec5\u9650\u73b0\u6709\u96a7\u9053\u6216 LAN\u3001SSL \u7ba1\u7406\u6a21\u5f0f\uff1a\u81ea\u52a8\u5206\u914d\u4ec5\u9002\u7528\u4e8e<i>\u73b0\u6709\u96a7\u9053</i>\u548c <i>SSL</i> \u6a21\u5f0f\uff0c\u4f46\u5bf9\u4e8e<i>\u7ba1\u7406\u96a7\u9053</i>\uff0c\u9700\u8981\u8fdb\u884c\u624b\u52a8\u5206\u914d\u3002"}, {"AUTOASSIGN_AGENT_MSG_ALL", "\u6240\u6709\u7ba1\u7406\u6a21\u5f0f\uff1a\u81ea\u52a8\u5206\u914d\u9002\u7528\u4e8e\u6240\u6709\u6a21\u5f0f\u3002\u5bf9\u4e8e<i>\u7ba1\u7406\u96a7\u9053</i>\u6a21\u5f0f\uff0c\u5fc5\u987b\u5728\u7ba1\u7406\u8bbe\u5907\u4e0a\u914d\u7f6e\u4ee3\u7406\u8bbe\u7f6e\u3002"}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "\u81ea\u52a8\u5206\u914d\u4ee3\u7406\u5df2\u542f\u7528"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "\u81ea\u52a8\u5206\u914d\u4ee3\u7406\u5df2\u7981\u7528"}, {"AUTOASSIGN_AGENT_ENABLE", "\u542f\u7528\u81ea\u52a8\u5206\u914d\u4ee3\u7406"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL \u548c\u4f7f\u7528\u73b0\u6709\u96a7\u9053\u6216 LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "\u5168\u90e8"}, {"TEMPLATE_SETTINGS_TITLE", "[CN]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[CN]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[CN]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[CN]Apply Default Configuration"}, {"CUI_NO_FS", "\u672a\u627e\u5230\u6d41\u91cf\u670d\u52a1\u5668\u3002"}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "CN The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "CN The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\u662f\u5426\u786e\u5b9a\u8981\u66f4\u6539\u914d\u7f6e"}, {"LOGCONFIG_SECTITLE_2", "\u65e5\u5fd7\u6d88\u606f"}, {"LOGCONFIG_DELLABEL", "\u5220\u9664\u4ee5\u4e0b\u65e5\u671f\u4e4b\u524d\u7684\u65e5\u5fd7\uff1a"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u5929"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u5bf9\u4e8e"}, {"LOGCONFIG_DOMAIN", "\u57df"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "\u9519\u8bef\uff1a\u65e0\u6cd5\u66f4\u65b0\u914d\u7f6e"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\u662f\u5426\u786e\u5b9a\u8981\u66f4\u6539\u65e5\u7a0b\uff1f"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\u662f\u5426\u786e\u5b9a\u8981\u66f4\u6539\u65e5\u5fd7\u6587\u4ef6\u8ba1\u6570\u7684\u6700\u5927\u6570\uff1f"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "\u5f52\u6863 "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " \u65e5\u5fd7\u6d88\u606f"}, {"APPLOG_CONFIG_DELETE_MSG_1", "\u65e5\u5fd7\u5e2e\u52a9\u8ddf\u8e2a\u6b64\u7cfb\u7edf\u4e2d\u7684\u6d3b\u52a8\u3002\u8fd9\u4e9b\u6d3b\u52a8\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u4e0e\u7528\u6237\u53d1\u8d77\u7684\u52a8\u4f5c\u76f8\u5173\u8054\u6216\u57fa\u4e8e\u7cfb\u7edf\u53d1\u8d77\u7684\u52a8\u4f5c\u3002\u8fd9\u4e9b\u65e5\u5fd7\u5bf9\u4e8e\u5ba1\u8ba1\u8ddf\u8e2a\u3001\u5408\u89c4\u6027\u76ee\u7684\u4ee5\u53ca\u5bf9\u7cfb\u7edf\u8fd0\u884c\u8fdb\u884c\u6545\u969c\u6392\u9664\u90fd\u975e\u5e38\u91cd\u8981\u3002"}, {"APPLOG_CONFIG_DELETE_MSG_2", "\u53ef\u4ee5\u624b\u52a8\u5220\u9664\u65e0\u9700\u5b58\u50a8\u4e8e\u7cfb\u7edf\u4e2d\u7684\u65e5\u5fd7\u3002\u6b64\u64cd\u4f5c\u662f\u4e00\u6b21\u6027\u64cd\u4f5c\uff0c\u5c06\u6839\u636e\u9009\u62e9\u7684\u8981\u5220\u9664\u7684\u65e5\u671f\u6267\u884c\u3002 "}, {"APPLOG_CONFIG_DELETE_MSG_21", "\u6b64\u9875\u9762\u4e2d\u7684\u5220\u9664\u64cd\u4f5c\u53ea\u4f1a\u6e05\u9664\u4e0e\u53d8\u66f4\u5355\u65e0\u5173\u7684\u65e5\u5fd7\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "\u53ef\u4ee5 CSV/HTML \u683c\u5f0f\u5bfc\u51fa\u65e0\u9700\u5b58\u50a8\u4e8e\u7cfb\u7edf\u4e2d\u7684\u65e5\u5fd7\uff0c\u5e76\u4ece\u6570\u636e\u5e93\u5c06\u4e4b\u5378\u8f7d\u3002\u5f52\u6863\u8fc7\u7a0b\u5c06\u9996\u5148\u6309\u7167\"\u5f52\u6863\u65e5\u5fd7\u65e5\u7a0b\"\u5c06\u6570\u636e\u5f52\u6863\u5230 <i>archivedLogs</i> \u76ee\u5f55\uff0c\u7136\u540e\u5c06\u6570\u636e\u4ece\u6570\u636e\u5e93\u4e2d\u5220\u9664\u3002 "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "\u5f52\u6863\u64cd\u4f5c\u5c06\u5bfc\u51fa\u6240\u6709\u65e5\u5fd7\uff0c\u5305\u62ec\u4e0e\u53d8\u66f4\u5355\u76f8\u5173\u7684\u65e5\u5fd7\uff0c\u4f46\u5220\u9664\u64cd\u4f5c\u5c06\u8df3\u8fc7\u6e05\u9664\u4e0e\u66f4\u6539\u987a\u5e8f\u76f8\u5173\u7684\u6761\u76ee\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "\u6ce8\uff1a\u5bf9\u4e8e\u975e Windows \u90e8\u7f72\uff1a\u5982\u9700\u5c06\u5f52\u6863\u65e5\u5fd7\u6587\u4ef6\u5378\u200b\u200b\u8f7d\u5230\u672c\u5730\u9a71\u52a8\u5668\uff0c\u8bf7\u8f6c\u81f3\u201c\u8bbe\u5907 > \u7cfb\u7edf > \u6587\u4ef6\u7ba1\u7406\u5668\u201d\u9875\u9762\u3002"}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "\u542f\u7528\u5f52\u6863"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "\u4fdd\u7559 "}, {"APPLOG_CONFIG_ARCHIVE_For", " \u5bf9\u4e8e\uff1a"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "\u65e5\u5fd7\u6d88\u606f\u6587\u4ef6\u7684\u6700\u5927\u6570\uff1a"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "\u5f52\u6863\u683c\u5f0f\uff1a"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "\u5f52\u6863\u8bbe\u7f6e"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "\u65e5\u5fd7\u6d88\u606f\u66f4\u65b0\u6210\u529f"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "\u5f52\u6863 GMS \u65e5\u5fd7\u6d88\u606f"}, {"WF_SETTINGS_TITLE", "\u8bbe\u7f6e"}, {"WF_SETTINGS_MSG_1", "\u5de5\u4f5c\u6d41\u662f\u7528\u4e8e\u76d1\u89c6\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u8bbe\u5907\u8fdb\u884c\u7684\u914d\u7f6e\u66f4\u6539\u7684\u7cfb\u7edf\u3002\u5b83\u5141\u8bb8\u5bf9\u6240\u63d0\u8bae\u7684\u53d8\u66f4\u8fdb\u884c\u5ba1\u67e5\u5e76\u63d0\u4f9b\u53cd\u9988\uff0c\u5206\u914d\u6240\u6709\u6743\u5e76\u4e3a\u6240\u6709\u64cd\u4f5c\u63d0\u4f9b\u95ee\u8d23\u5236\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u6709\u5b8c\u6574\u7684\u5ba1\u8ba1\u65e5\u5fd7\u3002\u53d8\u66f4\u5355\u7ba1\u7406\u662f\u5de5\u4f5c\u6d41\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5141\u8bb8\u67e5\u770b\u5bf9\u8bbe\u5907\u6240\u505a\u7684\u66f4\u6539\uff0c\u5728\u8bbe\u5907\u4e0a\u4e0b\u6587\u4e2d\u7684\u9875\u9762\u4e0a\u9884\u89c8\u884c\u5185\u66f4\u6539\uff0c\u8fd8\u53ef\u4ee5\u6bd4\u8f83\u591a\u4e2a\u53d8\u66f4\u5355\u3002 "}, {"WF_SETTINGS_MSG_2", "\u6ce8\uff1a\u53ef\u4ee5\u5728\u57df\u7ea7\u522b\u542f\u7528/\u7981\u7528\u53d8\u66f4\u5355\u548c\u5ba1\u6279\u7ba1\u7406\u3002\u7981\u7528\u5ba1\u6279\u7ba1\u7406\u72ec\u7acb\u4e8e\u53d8\u66f4\u5355\u7ba1\u7406\uff0c\u4f46\u7981\u7528\u53d8\u66f4\u5355\u7ba1\u7406\u4e5f\u4f1a\u7981\u7528\u5ba1\u6279\u7ba1\u7406\u3002"}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "\u5373\u4f7f\u5728\u5df2\u542f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5de5\u4f5c\u6d41\u4e5f\u4ec5\u5e94\u7528\u4e8e\u5bf9\u4e0b\u5217\u670d\u52a1\u4e3b\u52a8\u6388\u6743\u7684\u8bbe\u5907\uff1a "}, {"WF_SETTINGS_ENABLE_COM", "\u542f\u7528\u53d8\u66f4\u5355\u7ba1\u7406"}, {"WF_SETTINGS_ENABLE_WF", "\u542f\u7528\u5ba1\u6279\u7ba1\u7406"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "\u53d8\u66f4\u5355\u9ed8\u8ba4\u65e5\u7a0b\u8bbe\u7f6e"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "\u6839\u636e\u4ee5\u4e0b\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u5728\u63d0\u4ea4\u540e\u5b89\u6392\u6267\u884c\u53d8\u66f4\u5355\u3002\u6307\u5b9a\u9ed8\u8ba4\u503c\u5c06\u5728\u521b\u5efa\u65b0\u7684\u53d8\u66f4\u5355\u65f6\u81ea\u52a8\u4f7f\u7528\u9009\u5b9a\u7684\u8bbe\u7f6e\u3002"}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "\u65e5\u7a0b\uff1a "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "\u624b\u52a8\u6267\u884c"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "\u7acb\u5373\u6279\u51c6"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "\u4e8e"}, {"WF_CONFIG_DELETE_MSG_1", "\u65e5\u5fd7\u5e2e\u52a9\u8ddf\u8e2a\u6b64\u7cfb\u7edf\u4e2d\u7684\u6d3b\u52a8\u3002\u8fd9\u4e9b\u6d3b\u52a8\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u4e0e\u7528\u6237\u53d1\u8d77\u7684\u52a8\u4f5c\u76f8\u5173\u8054\u6216\u57fa\u4e8e\u7cfb\u7edf\u53d1\u8d77\u7684\u52a8\u4f5c\u3002\u8fd9\u4e9b\u65e5\u5fd7\u5bf9\u4e8e\u5ba1\u8ba1\u8ddf\u8e2a\u3001\u5408\u89c4\u6027\u76ee\u7684\u4ee5\u53ca\u5bf9\u7cfb\u7edf\u8fd0\u884c\u8fdb\u884c\u6545\u969c\u6392\u9664\u90fd\u975e\u5e38\u91cd\u8981\u3002"}, {"WF_CONFIG_DELETE_MSG_2", "\u53ef\u4ee5\u624b\u52a8\u5220\u9664\u901a\u5e38\u8d85\u8fc7 "}, {"WF_CONFIG_DELETE_MSG_3", " \u5929\u7684\u3001\u65e0\u9700\u5b58\u50a8\u4e8e\u7cfb\u7edf\u4e2d\u7684\u53d8\u66f4\u5355\u3002\u6b64\u64cd\u4f5c\u662f\u4e00\u6b21\u6027\u64cd\u4f5c\uff0c\u5c06\u6839\u636e\u9009\u62e9\u7684\u8981\u5220\u9664\u7684\u65e5\u671f\u6267\u884c\u3002\u6b64\u9875\u9762\u4e2d\u7684\u5220\u9664\u64cd\u4f5c\u53ea\u4f1a\u6e05\u9664\u4e0e\u53d8\u66f4\u5355\u76f8\u5173\u7684\u6570\u636e\u3001\u4efb\u52a1\u548c\u65e5\u5fd7\u3002"}, {"APPLOG_CONFIG_DEL_DATA", "\u5220\u9664\u6570\u636e\u65f6\u95f4"}, {"FA_UNIT_STATUS_HEADER", "\u8bbe\u5907\u8be6\u7ec6\u4fe1\u606f"}, {"FA_UNIT_STATUS_SERIAL", "\u5e8f\u5217\u53f7"}, {"FA_UNIT_STATUS_NODE_NAME", "\u8bbe\u5907\u540d\u79f0"}, {"FA_UNIT_STATUS_MODEL", "\u578b\u53f7"}, {"FA_UNIT_STATUS_FIRMWARE", "\u56fa\u4ef6\u7248\u672c"}, {"FA_UNIT_STATUS_IP", "\u7ba1\u7406 IP"}, {"FA_UNIT_STATUS_LICENSE", "\u5e94\u7528\u7a0b\u5e8f\u53ef\u89c6\u5316"}, {"FA_GROUP_STATUS_HEADER1", "\u56fa\u4ef6\u8be6\u7ec6\u4fe1\u606f"}, {"FA_GROUP_STATUS_HEADER2", "\u6d41\u91cf\u62a5\u544a\u8bb8\u53ef\u8bc1\u72b6\u6001"}, {"FA_GROUP_STATUS_NO_DATA", "\u65e0\u6570\u636e\u53ef\u7528"}, {"FA_LICENSE_NOT_AVAILABLE", "\u672a\u8bb8\u53ef"}, {"FA_LICENSE_AVAILABLE", "\u5df2\u8bb8\u53ef"}, {"FA_LICENSE_FREE_TRAIL", "\u514d\u8d39\u8bd5\u7528"}, {"FA_LICENSE_EXPIRED", "\u5df2\u8fc7\u671f"}, {"FA_GROUP_FIREWALL_COUNT", "\u7cfb\u7edf\u4e2d\u7684\u9632\u706b\u5899"}, {"FA_FLOW_IP1", "\u6d41\u91cf\u4ee3\u7406 1"}, {"FA_FLOW_IP2", "\u6d41\u91cf\u4ee3\u7406 2"}, {"FA_FLOW_AGENT_STATUS", "\u6d41\u91cf\u4ee3\u7406\u72b6\u6001"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "\u9632\u706b\u5899\u8bbe\u7f6e"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN \u96a7\u9053"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "\u8fdc\u7a0b IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "\u6570\u636e\u4fdd\u7559\uff08\u5929\u6570\uff09"}, {"FA_FLOW_FORWARDER_IP", "\u6d41\u91cf\u8f6c\u53d1\u5668"}, {"FA_FLOWS_COLLECTED", "\u6536\u96c6\u7684\u6d41\u91cf"}, {"FA_DISK_ALLOCATED", "\u5df2\u5206\u914d\u7684\u78c1\u76d8"}, {"FA_DISK_USED", "\u5df2\u4f7f\u7528\u78c1\u76d8"}, {"FA_FLOW_STATUS", "\u72b6\u6001"}, {"FA_NO_AGENT", "\u672a\u5206\u914d\u6d41\u91cf\u4ee3\u7406"}, {"FA_MODELSUPPORT", "\u672a\u5bf9\u6b64\u578b\u53f7\u542f\u7528\u6d41\u91cf\u62a5\u544a"}, {"FA_FIRMWARESUPPORT", "\u6d41\u91cf\u62a5\u544a\u4e0d\u9002\u7528\u4e8e\u6b64\u7248\u672c"}, {"FA_LICENSESUPPORT", "\u5e94\u7528\u7a0b\u5e8f\u53ef\u89c6\u5316\u8bb8\u53ef\u8bc1\u4fe1\u606f\u4e0d\u53ef\u7528"}, {"FA_HEADING", "\u6d41\u91cf\u4ee3\u7406"}, {"FA_FLOW_AGENT", "\u6d41\u91cf\u4ee3\u7406"}, {"FA_FLOW_HEAD_IP1", "\u6d41\u91cf\u4ee3\u7406 1"}, {"FA_FLOW_HEAD_IP2", "\u6d41\u91cf\u4ee3\u7406 2"}, {"FA_FLOW_HEAD_HDD", "\u786c\u76d8 (%)"}, {"FA_FLOW_HEAD_RAM", "\u5185\u5b58 (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "\u5e26\u5bbd (%)"}, {"FA_FLOW_FORWARDER_HEAD", "\u6d41\u91cf\u8f6c\u53d1\u5668"}, {"FA_FLOW_PAIR", "\u6d41\u91cf\u4ee3\u7406\u5bf9"}, {"FA_FLOW_HEAD_DISKSIZE", "\u78c1\u76d8\u5927\u5c0f"}, {"FA_FLOW_HEAD_GATEWAY", "\u7f51\u5173\u9632\u706b\u5899"}, {"FA_FLOW_HEAD_TUNNELS", "\u96a7\u9053\u6570"}, {"FA_FLOW_HEAD_TENANTS", "\u79df\u6237"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "\u540d\u79f0"}, {"GF_GATEWAY", "\u7f51\u5173"}, {"GF_LAST_UPDATED", "\u6700\u540e\u66f4\u65b0\u65e5\u671f"}, {"GF_DEST_ADDRESS_RANGE", "\u76ee\u6807\u5730\u5740\u8303\u56f4"}, {"GF_LOCAL_ADDRESS_RANGE", "\u672c\u5730\u5730\u5740\u8303\u56f4"}, {"FA_STATUS", "\u72b6\u6001"}, {"CLOUDSETTINGS_SECTITLE_1", "\u6dfb\u52a0\u65b0\u7684\u6d41\u91cf\u4ee3\u7406\u5bf9"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "\u6d41\u91cf\u4ee3\u7406 1\uff1a"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "\u6d41\u91cf\u4ee3\u7406 2\uff1a"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "\u5185\u5b58 (GB)\uff1a"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "\u6d41\u91cf\u6570\u636e\u5e93\u5b58\u50a8 (GB)\uff1a"}, {"CLOUDSETTINGS_SECTITLE_2", "\u4e91 Syslog \u670d\u52a1\u5668\u8bbe\u7f6e"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "\u542f\u7528 Syslog \u670d\u52a1\u5668\u7684 Syslog \u62a5\u544a\uff1a"}, {"CLOUDSETTINGS_SYSLOG_IP", "Syslog \u670d\u52a1\u5668\u7684 IP \u5730\u5740\uff1a"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog \u670d\u52a1\u5668\u7aef\u53e3\uff1a"}, {"CLOUDSETTINGS_SECTITLE_3", "\u4e91\u6d41\u91cf\u4ee3\u7406\u8bbe\u7f6e"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "\u6bcf\u4e2a\u6d41\u91cf\u4ee3\u7406\u7684\u9632\u706b\u5899\u6570\uff1a"}, {"CLOUDSETTINGS_SECTITLE_5", "[CN]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[CN]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "SonicPoint \u4fe1\u606f"}, {"SP_MANAGEDBY", "\u7ba1\u7406\u8005"}, {"SP_IPADDR", "IP \u5730\u5740"}, {"SP_SUBNET", "\u5b50\u7f51\u63a9\u7801"}, {"SP_IFACE", "\u63a5\u53e3"}, {"SP_ZONE", "\u533a\u57df"}, {"SP_MODEL", "\u578b\u53f7"}, {"SP_ENABLED", "\u5df2\u542f\u7528"}, {"SP_DISABLED", "\u5df2\u7981\u7528"}, {"SP_STATUS", "\u72b6\u6001"}, {"SP_MACADDR", "MAC \u5730\u5740"}, {"PM_CONNECTWISE_STATUS", "[CN]Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[CN]Not Available"}, {"TICKET_INFORMATION", "[CN]Connectwise Ticket"}, {"TICKET_DETAILS", "[CN]Details"}, {"CONNECTWISE_NOTE", "[CN]GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}, {Integer.toString(-919), "[CN]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[CN]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[CN]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[CN]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[CN]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[CN]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[CN]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[CN]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[CN]Successfully authenticated with the unit."}, {Integer.toString(-928), "[CN]Authentication with the unit failed."}, {Integer.toString(-929), "[CN]The unit is registered with the backend."}, {Integer.toString(-930), "[CN]The unit is not registered with the backend."}, {Integer.toString(-931), "[CN]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[CN]Heart beats for the unit have been started."}, {Integer.toString(-933), "[CN]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[CN]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[CN]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[CN]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[CN]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[CN]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[CN]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[CN]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[CN]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[CN]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[CN]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[CN]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[CN]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[CN]ZeroTouch feature was disabled for the firewall."}};
+    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "\u8bbe\u5907\uff08\u4e00\u53f0\uff09"}, {"APPLIANCE_NAME_PLURAL", "\u8bbe\u5907\uff08\u591a\u53f0\uff09"}, {"APPLIANCE_DESC", "\u8bbe\u5907\u8bf4\u660e"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewall"}, {"SONICWALL_DESC", "Firewall \u8bbe\u5907"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMA"}, {"SSLVPN_DESC", "SMA \u8bbe\u5907"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDP"}, {"CDP_DESC", "CDP \u8bbe\u5907"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Aventail SMA \u8bbe\u5907"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "\u7535\u5b50\u90ae\u4ef6\u5b89\u5168\u8bbe\u5907"}, {"OTHERS_NAME", "\u5176\u4ed6"}, {"OTHERS_NAME_PLURAL", "\u5176\u4ed6"}, {"OTHERS_DESC", "\u5176\u4ed6\u8bbe\u5907"}, {"MINUTE", "\u5206\u949f"}, {"TEST_STRING", "\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u5b57\u7b26\u4e32 - \u53d1\u8d27\u4e4b\u524d\u5220\u9664\u6b64\u9879"}, {"PROGRESS_ACTION_TIMED", "\u6b64\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u624d\u80fd\u5b8c\u6210"}, {"PROGRESS_PLEASE_WAIT", "\u8bf7\u7a0d\u5019..."}, {"LOADING_PLEASE_WAIT", "\u52a0\u8f7d\u4e2d\uff0c\u8bf7\u7a0d\u5019..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u66f4\u65b0\u6743\u9650\u3002"}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "\u60a8\u6ca1\u6709\u67e5\u770b\u4efb\u4f55\u9875\u9762\u7684\u6743\u9650\uff0c\u8bf7\u6ce8\u9500\u5e76\u4e0e\u7ba1\u7406\u5458\u8054\u7cfb\u3002"}, {"UPDATE", "\u66f4\u65b0"}, {"RESET", "\u91cd\u7f6e"}, {"NO_PANEL_PERMISSIONS", "[CN]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "\u4e0b\u8f7d\u578b\u53f7\u4ee3\u7801\u6210\u529f\u5df2\u5931\u8d25"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "\u4e0b\u8f7d\u578b\u53f7\u4ee3\u7801\u6210\u529f\u5df2\u5931\u8d25"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "\u4efb\u52a1\u540e\u53f0\u5904\u7406\u5df2\u6210\u529f\u542f\u52a8\u3002"}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "\u6545\u969c - \u6ca1\u6709\u53ef\u7528\u4e8e\u5e94\u7528\u5347\u7ea7\u7684\u8bbe\u5907\u3002"}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u6210\u529f\u6dfb\u52a0 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "\u6fc0\u6d3b\u7801\u5df2\u6210\u529f\u6dfb\u52a0\u3002"}, {"ERROR_ADD_ACTIVATION_CODE", "\u6dfb\u52a0\u6fc0\u6d3b\u7801\u9519\u8bef\uff1a\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u7ecf\u5b58\u5728 - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u6210\u529f\u5220\u9664 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "\u6fc0\u6d3b\u7801\u5df2\u6210\u529f\u5220\u9664\u3002"}, {"ERROR_DELETE_ACTIVATION_CODE", "\u5220\u9664\u6fc0\u6d3b\u7801\u9519\u8bef\uff1a\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u4e0d\u5b58\u5728 - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "\u5220\u9664\u6fc0\u6d3b\u7801\u9519\u8bef\uff1a\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u65e0\u6cd5\u5220\u9664 - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u6dfb\u52a0\u5230\u4e86 SonicWall GMS \u6570\u636e\u5e93\u4e2d: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u6fc0\u6d3b\u7801\u5df2\u4ece\u53ef\u7528\u4ee3\u7801\u6c60\u4e2d\u5220\u9664\uff1a "}, {"UPDATE_DB_MESSAGE", "\u5df2\u5728 SonicWall GMS \u6570\u636e\u5e93\u4e2d\u6210\u529f\u66f4\u65b0\u4e86\u66f4\u6539\u3002"}, {"FAILURE_UPDATE_DB_MESSAGE", "\u66f4\u65b0\u5931\u8d25: \u672a\u80fd\u5728 SonicWall GMS \u6570\u636e\u5e93\u4e2d\u6210\u529f\u66f4\u65b0\u66f4\u6539\u3002"}, {"NO_UNITS_FOR_REGISTRATION", "\u6ca1\u6709\u6ce8\u518c\u7684\u8bbe\u5907"}, {"FREE_TRAIL_NOT_APPLIED", "\u6240\u6709\u8bbe\u5907\u5747\u672a\u6ce8\u518c\u6216\u5df2\u8ba2\u9605"}, {"AV_FAILURE_MESSAGE", "\u6ca1\u6709\u53ef\u7528\u4e8e\u5347\u7ea7\u4ee5\u53ca\u6ce8\u518c\u7684\u8bbe\u5907"}, {"AV_SUCCESS_MESSAGE", "\u5347\u7ea7\u4ee5\u53ca\u6ce8\u518c\u4efb\u52a1\u5df2\u6210\u529f\u542f\u52a8"}, {"AV_SUCCESS_UPGRADE", "\u5347\u7ea7\u4efb\u52a1\u5df2\u6210\u529f\u542f\u52a8"}, {"AV_NO_SUCCESS_REG", "\u6ca1\u6709\u53ef\u7528\u4e8e\u6ce8\u518c\u7684\u8bbe\u5907"}, {"AV_SUCCESS_REG", "\u6ce8\u518c\u4efb\u52a1\u5df2\u6210\u529f\u542f\u52a8"}, {"AV_NO_SUCCESS_UPGRADE", "\u6ca1\u6709\u53ef\u7528\u4e8e\u5347\u7ea7\u7684\u8bbe\u5907"}, {"TASK_SUCCESS_MESSAGE", "\u4efb\u52a1\u5df2\u6210\u529f\u542f\u52a8"}, {"TASK_CMP_ERROR", "CMP \u5bc6\u7801\u53ea\u80fd\u5728\u8bbe\u5907\u7ea7\u522b\u8fdb\u884c\u66f4\u6539"}, {"TASK_ERROR_MESSAGE", "\u4efb\u52a1\u672a\u6210\u529f\u542f\u52a8"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "\u6ca1\u6709\u53ef\u7528\u4e8e\u8bb8\u53ef\u8bc1\u5171\u4eab\u64cd\u4f5c\u7684\u8bbe\u5907\u3002"}, {"SGMS_EMAIL_BOTTOM_MSG1", "\u6280\u672f\u652f\u6301 "}, {"SGMS_EMAIL_BOTTOM_MSG2", "\u7248\u672c "}, {"SGMS_EMAIL_BOTTOM_MSG3", "\u5e8f\u5217\uff1a "}, {"SGMS_EMAIL_BOTTOM_MSG4", "\u670d\u52a1\u5668\uff1a "}, {"FIRMWARE_DOWNLOADED", "\u56fa\u4ef6\u7684\u65b0\u526f\u672c\u5df2\u4e0b\u8f7d\u3002"}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", "\u4ee5\u4e0b\u8bbe\u5907\u7684\u8bb8\u53ef\u8bc1\u4e0d\u4e45\u5373\u5c06\u5230\u671f\u3002\n\u8bf7\u8054\u7cfb SonicWall \u9500\u552e\u8d2d\u4e70\u6fc0\u6d3b\u7801\u4ee5\u7eed\u8ba2\u8fd9\u4e9b\u8ba2\u8d2d\u670d\u52a1\u3002"}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "\u8ba2\u9605\u8fc7\u671f\u4fe1\u606f\u3002"}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "\u672a\u627e\u5230\u8fc7\u671f\u3002"}, {"VERSION_MESSAGE", "SonicWall GMS \u7248\u672c\u53f7: "}, {"NUM_NODES_MESSAGE", "\u6b64 SonicWall GMS \u53ef\u7ba1\u7406\u7684\u8282\u70b9\u6570\u91cf: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "GMS \u4ea7\u54c1\u8bf4\u660e\uff1a "}, {"DATABASE_TYPE_MESSAGE", "\u6570\u636e\u5e93\u7c7b\u578b\uff1a "}, {"MODEL_TYPES_MESSAGE", "\u8282\u70b9\u6570\u548c\u578b\u53f7\u540d\u79f0\uff1a "}, {"NUM_AGENTS_MESSAGE", "\u7cfb\u7edf\u4e2d\u7684\u4ee3\u7406\u6570\uff1a "}, {"AGENT_IP_MESSAGE", "\u4ee3\u7406\u7684 IP \u5730\u5740\uff1a "}, {"UNKNOWN_MESSAGE", "\u672a\u77e5"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "\u672a\u77e5\u6570\u636e\u5e93"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "\u8bbe\u5907\u540d\u79f0\u4e2d\u7684\u65e0\u6548\u5b57\u7b26 [<,\\,:]\u3002"}, {"PM_NAME_KEYWORD", "\u662f\u4e00\u4e2a\u5173\u952e\u5b57\u5e76\u4e14\u4e0d\u80fd\u7528\u4e8e\u547d\u540d\u8bbe\u5907\u3002\u8bf7\u4f7f\u7528\u5176\u4ed6\u540d\u79f0"}, {"PM_NAME_EXISTS_A", "\u5df2\u7ecf\u5b58\u5728\u540d\u4e3a\u201c"}, {"PM_NAME_EXISTS_B", "\u201d\u7684\u8bbe\u5907 "}, {"PM_UNKNOWN", "\u672a\u77e5"}, {"PM_UNKNOWN_UNREGISTERED", "\u672a\u77e5/\u672a\u6ce8\u518c"}, {"PM_UNREGISTERED", "\u672a\u6ce8\u518c"}, {"PM_YES", "\u662f"}, {"PM_NO", "\u5426"}, {"PM_ENABLED", "\u5df2\u542f\u7528"}, {"PM_DISABLED", "\u5df2\u7981\u7528"}, {"PM_NOTAVAILABLE", "\u4e0d\u53ef\u7528"}, {"PM_UNLIMITED", "\u65e0\u9650\u5236"}, {"PM_CURRENT", "\u5f53\u524d"}, {"PM_DEFAULT", "\u9ed8\u8ba4\u503c"}, {"PM_EXPIRED", "\u8fc7\u671f"}, {"PM_UP", "\u8fd0\u884c"}, {"PM_DOWN", "\u5173\u95ed"}, {"PM_NOT_ACQUIRED", "\u672a\u83b7\u53d6"}, {"PM_SINCE", "\u81ea\u4ece "}, {"PM_NONE", "\u65e0"}, {"PM_N_A", "\u4e0d\u53ef\u7528"}, {"PM_NO_LICENSE", "\u65e0\u8bb8\u53ef\u8bc1"}, {"PM_MODEL", "\u578b\u53f7"}, {"PM_SERIAL_NUM", "\u5e8f\u5217\u53f7"}, {"PM_DOMAIN", "\u57df"}, {"PM_NUM_LAN_IPS", "\u5141\u8bb8\u7684 LAN IP \u6570"}, {"PM_HA", "\u9ad8\u53ef\u7528\u6027"}, {"PM_DMZ_PORT", "DMZ \u7aef\u53e3"}, {"PM_NUM_WORKPORTS", "\u5141\u8bb8\u7684\u5de5\u4f5c\u7aef\u53e3 IP \u6570"}, {"PM_HOMEPORT", "\u8d77\u59cb\u7aef\u53e3"}, {"PM_WLAN_PORT", "WLAN \u7aef\u53e3"}, {"PM_OPT_PORT", "OPT \u7aef\u53e3"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN \u5347\u7ea7"}, {"PM_VPN_CLIENTS", "\u5168\u5c40 VPN \u5ba2\u6237\u7aef"}, {"PM_IPS", "\u5165\u4fb5\u4fdd\u62a4\u670d\u52a1"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "\u7f51\u5173\u9632\u75c5\u6bd2"}, {"PM_FIRMWARE_VERSION", "\u56fa\u4ef6\u7248\u672c"}, {"PM_REGISTRATION_CODE", "\u6ce8\u518c\u7801"}, {"PM_CFS_SUB", "\u5185\u5bb9\u8fc7\u6ee4\u5668\u5217\u8868/\u670d\u52a1"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "\u9632\u75c5\u6bd2"}, {"PM_WARRANTY", "\u5ef6\u957f\u4fdd\u4fee"}, {"PM_SW_STATUS", "\u72b6\u6001"}, {"PM_SW_MANAGEDINSTANCE", "\u6309\u5b9e\u4f8b\u7ba1\u7406"}, {"PM_TASKS_PENDING", "\u5f85\u5904\u7406\u7684\u4efb\u52a1"}, {"PM_LAST_LOG", "\u6700\u540e\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee"}, {"PM_SAS_CONFIG_INFO", "SA \u914d\u7f6e\u4fe1\u606f"}, {"PM_SAS_DEFINED", "\u5b9a\u4e49\u7684 SA"}, {"PM_SAS_ENABLED", "\u542f\u7528\u7684 SA"}, {"PM_SAS_AVAILABLE", "\u53ef\u7528\u7684 SA"}, {"PM_SAS_REMAINING", "\u5269\u4f59\u7684 SA"}, {"PM_SAS_INTERCONNECTED", "\u4e92\u8fde\u7684 SA"}, {"PM_AGENT_ASSIGNED", "\u5206\u914d\u7684\u4ee3\u7406"}, {"PM_PRIMARY_AGENT", "\u4e3b\u8981\u4ee3\u7406"}, {"PM_STANDBY_AGENT", "\u5907\u7528\u4ee3\u7406"}, {"PM_TUNNEL_MGMT", "\u7ba1\u7406\u6a21\u5f0f"}, {"PM_FW_ADDED_TO_GMS", "\u8bbe\u5907\u88ab\u6dfb\u52a0\u5230 SonicWall GMS \u7684\u65f6\u95f4"}, {"PM_FW_UP_SINCE", "\u8bbe\u5907\u8fd0\u884c\u65f6\uff0c\u81ea"}, {"PM_FW_DOWN_SINCE", "\u8bbe\u5907\u5173\u95ed\u65f6\uff0c\u81ea"}, {"PM_SW_IP", "SonicWall IP"}, {"PM_TIME_ZONE", "\u65f6\u533a"}, {"PM_SW_IN_SYSTEM", "\u5728\u7cfb\u7edf\u4e2d"}, {"PM_SW_IN_DMZ", "\u5728 DMZ \u4e2d"}, {"PM_SW_IN_GROUP", "\u5728\u7ec4\u4e2d"}, {"PM_SW_UNREGISTERED", "\u672a\u6ce8\u518c"}, {"PM_SW_VPN_UPGRADE", "\u901a\u8fc7 VPN \u5347\u7ea7"}, {"PM_SW_VPN_CLIENT", "\u901a\u8fc7\u5168\u5c40 VPN \u5ba2\u6237\u7aef\u5347\u7ea7"}, {"PM_SW_MSSP", "\u652f\u6301 MSSP"}, {"PM_CFL_SUBSCRIPTION", "\u5185\u5bb9\u8fc7\u6ee4\u5668\u5217\u8868/\u670d\u52a1"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "\u9632\u75c5\u6bd2"}, {"PM_HGMS_SUBSCRIPTION", "\u4e91\u670d\u52a1"}, {"PM_SUPPORT_SUBSCRIPTION", "\u652f\u6301 "}, {"PM_EXTENDED_WARRANTY", "\u5ef6\u957f\u4fdd\u4fee"}, {"PM_UNITS_DOWN", "\u5173\u95ed\u7684 SonicWall"}, {"PM_PENDING_TASKS", "\u6709\u5f85\u5904\u7406\u4efb\u52a1\u7684 SonicWall"}, {"PM_MANAGED_WITH_TUNNEL", "\u4f7f\u7528\u7ba1\u7406\u96a7\u9053\u7ba1\u7406\u7684 SonicWall"}, {"PM_TASK_SPOOLED", "\u4efb\u52a1\u5df2\u540e\u53f0\u5904\u7406\u4ee5\u66f4\u6539\u4e3b\u673a\u540d\u3002"}, {"PM_RAVLIN_MODEL", "Ravlin \u578b\u53f7"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/\u5e8f\u5217\u53f7"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "\u56fa\u4ef6\u7248\u672c"}, {"PM_HW_VERSION", "\u786c\u4ef6\u7248\u672c"}, {"PM_ROM_VERSION", "ROM \u7248\u672c"}, {"PM_SECURITY_ID", "\u5b89\u5168 ID"}, {"PM_RAVLIN_STATUS", "Ravlin \u72b6\u6001"}, {"PM_TASKS_PENDING", "\u5f85\u5904\u7406\u7684\u4efb\u52a1"}, {"PM_AGENT_ASSIGNED", "\u5206\u914d\u7684\u4ee3\u7406"}, {"PM_RAVLINS_IN_NODE", "\u8282\u70b9\u4e2d\u7684 Ravlin"}, {"PM_RAVLINS_DOWN", "\u5173\u95ed\u7684 Ravlin"}, {"PM_RAVLINS_PENDING_TASKS", "\u6709\u5f85\u5904\u7406\u4efb\u52a1\u7684 Ravlin"}, {"PM_FIX_UNIT_ERROR", "\u4fee\u590d\u8bbe\u5907\u65f6\u53d1\u751f\u9519\u8bef "}, {"PM_MOD_UNIT_EXISTS", "\u4fee\u6539\u7684\u8bbe\u5907\u5df2\u7ecf\u5b58\u5728\uff0c\u5e8f\u5217\u53f7\u4e3a"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "\u5df2\u7ecf\u5b58\u5728\u540d\u4e3a"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "\u7684\u4fee\u6539\u7684\u8bbe\u5907 "}, {"PM_ADD_ERR_PRIVILEGES", "\u9519\u8bef\uff1a\u60a8\u6ca1\u6709\u8db3\u591f\u7684\u6743\u9650\u6dfb\u52a0\u8bbe\u5907\u3002"}, {"PM_UNIT_EXISTS", "\u8bbe\u5907\u5df2\u7ecf\u5b58\u5728\uff0c\u5e8f\u5217\u53f7\u4e3a"}, {"PM_UNIT_NAME_EXISTS_A", "\u57df\u4e2d\u5df2\u7ecf\u5b58\u5728\u540d\u4e3a"}, {"PM_UNIT_NAME_EXISTS_B", "\u7684\u8bbe\u5907 "}, {"PM_ADD_UNIT_ERR", "\u5c06\u8bbe\u5907\u6dfb\u52a0\u5230 SonicWall \u6570\u636e\u5e93\u65f6\u51fa\u9519\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "\u8bf7\u8f93\u5165\u4e00\u4e2a\u6709\u6548\u7684\u5e8f\u5217\u53f7\u3002\n\u5e8f\u5217\u53f7\u957f\u5ea6\u5e94\u4e3a "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "\u4e2a\u5b57\u7b26\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "\u5e8f\u5217\u53f7\u5e94\u4ec5\u5305\u542b\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u3002"}, {"PM_GET_PREFS_ERR", "\u68c0\u7d22\u9996\u9009\u9879\u6587\u4ef6\u65f6\u51fa\u9519\u3002"}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "\u672a\u5bf9\u4e91\u670d\u52a1\u6388\u6743\u8bbe\u5907\u3002\n\u8bf7\u5148\u4ece MySonicWall.com \u6388\u6743\u4ee5\u4e0b\u4efb\u4f55\u670d\u52a1\uff0c\u7136\u540e\u518d\u5c06\u8bbe\u5907\u6dfb\u52a0\u5230 "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " \u65e0\u6cd5\u83b7\u53d6\u6b64\u8bbe\u5907\u7684\u8bb8\u53ef\u4fe1\u606f\u3002\n\u8bf7\u7a0d\u5019\u518d\u8bd5\u3002"}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " \u65e0\u6cd5\u4e0e MySonicWall.com \u8fdb\u884c\u901a\u4fe1\u6765\u9a8c\u8bc1\u6b64\u8bbe\u5907\u7684\u8bb8\u53ef\u8bc1\u3002\n\u8bf7\u7a0d\u540e\u518d\u8bd5\u3002"}, {"PM_LICENSED", "\u5df2\u8bb8\u53ef"}, {"PM_NOT_LICENSED", "\u672a\u8bb8\u53ef"}, {"PM_IS_MSSP", "MSSP \u8bbe\u5907"}, {"PM_SYSLOG_FORMAT", "Syslog \u683c\u5f0f"}, {"PM_STATUS_MSG_ONLY", "\u4ec5\u72b6\u6001\u6d88\u606f"}, {"PM_SYSLOG_IN_UTC", "UTC \u4e2d\u7684\u65e5\u5fd7"}, {"PM_VIEWPOINT_MODE", "Analyzer \u6a21\u5f0f\u5df2\u542f\u7528"}, {"PM_NAME_RESOLUTION", "\u540d\u79f0\u89e3\u6790\u6a21\u5f0f"}, {"PM_ACCESS_MODE", "\u63a5\u5165\u6a21\u5f0f"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "\u5148 DNS \u540e NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"VM_PATCH_DETECTED_MSG1", "\u5df2\u68c0\u6d4b\u5230\u53ef\u7528\u7684\u65b0\u8f6f\u4ef6\u66f4\u65b0"}, {"VM_PATCH_DETECTED_MSG2", "\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u7ba1\u7406\u5458\u65b0\u8f6f\u4ef6\u66f4\u65b0\u4fe1\u606f\u65f6\u51fa\u9519\u3002SMTP \u6216\u7ba1\u7406\u5458\u7535\u5b50\u90ae\u4ef6\u672a\u914d\u7f6e\u3002"}, {"VM_PATCH_DETECTED_MSG3", "\u53ef\u7528\u7684\u8f6f\u4ef6\u66f4\u65b0\n\n"}, {"VM_NEW", "\u65b0 "}, {"VM_PATCH_DETECTED_MSG4", "\u6709\u5173\u53d1\u884c\u8bf4\u660e\u548c\u4e0b\u8f7d\u4fe1\u606f\uff0c\u8bf7\u767b\u5f55\u5230 <a href=https://www.mysonicwall.com>MySonicWall.com</a> \u5e10\u6237"}, {"VM_SCREEN", "\u5c4f\u5e55\u3002"}, {"VM_PATCH_DETECTED_MSG5", "\u7ec4\u4ef6\u4fee\u8865\u7a0b\u5e8f\u66f4\u65b0\u68c0\u67e5\u6210\u529f\u3002\u5df2\u627e\u5230\u65b0\u7ec4\u4ef6\u66f4\u65b0\u3002\u7535\u5b50\u90ae\u4ef6\u5df2\u53d1\u9001\u7ed9\u7ba1\u7406\u5458\u3002"}, {"VM_PATCH_DETECTED_MSG6", "\u65e0\u6cd5\u4e0b\u8f7d\u4fee\u8865\u7a0b\u5e8f\u66f4\u65b0 "}, {"VM_FOR", "\u7528\u4e8e "}, {"VM_ON", "\u4e8e "}, {"VM_PATCH_DETECTED_MSG7", "\u7ec4\u4ef6\u4fee\u8865\u7a0b\u5e8f\u4e0b\u8f7d\u5df2\u4e2d\u6b62\u3002\u4fee\u8865\u7a0b\u5e8f\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff1a "}, {"VM_PATCH_DETECTED_MSG8", "\u7ec4\u4ef6\u4fee\u8865\u7a0b\u5e8f\u4e0b\u8f7d\u6210\u529f\uff1a "}, {"VM_PATCH_DETECTED_MSG9", "\u5c06\u4fee\u8865\u7a0b\u5e8f\u6587\u4ef6 "}, {"VM_PATCH_DETECTED_MSG10", "\u5199\u5165\u5230\u78c1\u76d8\u65f6\u51fa\u9519\u3002"}, {"SDM_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f\u3002"}, {"SDM_UPDATE_FAILURE", "\u66f4\u65b0\u5931\u8d25\u3002"}, {"SDM_UPDATE_SPECIAL_FAILURE", "\u65e0\u6cd5\u521b\u5efa\u4efb\u52a1\u4ee5\u5220\u9664 SA\u3002"}, {"SDM_UPDATE_INVALID", "\u66f4\u65b0\u8bf7\u6c42\u65e0\u6548\u3002"}, {"SDM_SCREEN_ID_INVALID", "\u5c4f\u5e55 ID \u65e0\u6548"}, {"SDM_READY", "\u5c31\u7eea"}, {"SDM_CGI_ERROR", "\u83b7\u53d6\u4ee5\u4e0b\u9879\u7684 CGI_NAME \u65f6\u51fa\u9519 "}, {"SDM_DEFAULT_ERROR", "\u83b7\u53d6\u4ee5\u4e0b\u9879\u7684 DEFAULT_VALUE \u65f6\u51fa\u9519 "}, {"SDM_INVALID_TARGET", "\u9519\u8bef\uff1a\u6e90\u6216\u76ee\u6807\u7ec4\u65e0\u6548\u3002"}, {"SDM_METADATA_ERROR", "\u83b7\u53d6\u4ee5\u4e0b\u9879\u7684\u5143\u6570\u636e\u65f6\u51fa\u9519 "}, {"SDM_DB_ERROR", "\u8bbf\u95ee SonicWall GMS \u6570\u636e\u5e93\u65f6\u51fa\u9519\u3002"}, {"SDM_NOVPN_ERROR", "\u6b64\u8bbe\u5907\u4e2d\u6ca1\u6709\u542f\u7528 VPN\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NO_TARGET_VPN_ERROR", "\u76ee\u6807\u4e2d\u6ca1\u6709\u542f\u7528 VPN\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NOSAS_ERROR", "\u6b64\u8bbe\u5907\u4e2d\u6ca1\u6709\u5269\u4f59\u7684 SA \u53ef\u7528\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NO_TARGET_SAS_ERROR", "\u76ee\u6807\u4e2d\u6ca1\u6709\u5269\u4f59\u7684 SA \u53ef\u7528\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NO_UNITS_ERROR", "\u6ca1\u6709\u521b\u5efa\u4efb\u4f55\u4efb\u52a1\u3002"}, {"SDM_NO_3RDPARTYCERTS_ERROR", "\u672a\u627e\u5230\u6709\u6548\u7684\u7b2c\u4e09\u65b9\u672c\u5730/CA \u8bc1\u4e66\u7ec4\u5408\u3002\u8df3\u8fc7 VPN SA \u5230\u8bbe\u5907 "}, {"SDM_DHCP_ERROR", "\u52a8\u6001\u5bfb\u5740\u5728\u6e90\u548c\u76ee\u6807\u8bbe\u5907\u4e0a\u5747\u5df2\u542f\u7528\uff0c\u56e0\u6b64\u65e0\u6cd5\u521b\u5efa SA\u3002\u8df3\u8fc7 VPN SA \u521b\u5efa\u3002 "}, {"SDM_NOAES_ERROR", "AES \u5728\u8bbe\u5907\u4e2d\u4e0d\u53ef\u7528\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_NO_TARGET_AES_ERROR", "AES \u5728\u76ee\u6807\u4e2d\u4e0d\u53ef\u7528\u3002\u521b\u5efa\u5230\u4ee5\u4e0b\u8bbe\u5907\u7684 VPN \u65f6\u51fa\u9519 "}, {"SDM_DELETE_SUCCESS", "\u5220\u9664\u6210\u529f "}, {"SDM_DELETE_FAILURE", "\u5220\u9664\u5931\u8d25 "}, {"SDM_AGENTNAME_INVALID", "\u4ee3\u7406\u540d\u79f0\u4e2d\u7684\u65e0\u6548\u5b57\u7b26 [<,\\,:,',@,#,*,$]\u3002"}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "\u589e\u5f3a\u578b\u4e92\u8fde VPNS SA \u7684\u4efb\u52a1\u521b\u5efa\u5931\u8d25"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "\u4ee5\u4e0b\u9879\u7684\u7ec4\u66f4\u65b0\u5931\u8d25 "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "\u589e\u5f3a\u578b\u4e92\u8fde VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "\u6807\u51c6\u4e92\u8fde VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "\u589e\u5f3a\u578b\u975e\u4e92\u8fde VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "\u6807\u51c6\u975e\u4e92\u8fde VPN SA"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "\u8df3\u8fc7\u6b64\u8bbe\u5907\u7684 SA \u521b\u5efa\uff0c\u539f\u56e0\u662f\u6b64\u8bbe\u5907\u4e0a\u7684\u56fa\u4ef6\u7248\u672c\u4e0d\u652f\u6301\u96a7\u9053\u63a5\u53e3\u7c7b\u578b"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "\u5b89\u6392\u4efb\u52a1\u5728\u4ee5\u4e0b\u9879\u4e0a\u6267\u884c"}, {"PASSWORD_CHANGED", "SonicWall GMS \u5bc6\u7801\u66f4\u6539\u6210\u529f\u3002"}, {"PASSWORD_NOT_CHANGED_A", "\u6307\u5b9a\u7684\u65e7\u5bc6\u7801\u4e0d\u6b63\u786e\u3002<BR>"}, {"PASSWORD_NOT_CHANGED_B", "\u5bc6\u7801\u672a\u66f4\u6539\u3002"}, {"PASSWORD_NOT_CHANGED", "\u6307\u5b9a\u7684\u65e7\u5bc6\u7801\u4e0d\u6b63\u786e\u3002\u5bc6\u7801\u672a\u66f4\u6539\u3002"}, {"LOGS_PASSWD_CHANGED", "\u7528\u6237\u767b\u5f55\u5bc6\u7801\u5df2\u6210\u529f\u66f4\u6539 "}, {"LOGS_PASSWD_NOT_CHANGED", "\u7cfb\u7edf\u65e0\u6cd5\u9a8c\u8bc1\u7528\u6237\u4ee5\u66f4\u6539\u767b\u5f55\u5bc6\u7801 "}, {"LOGS_ADDED_NEW_USER", "\u6dfb\u52a0\u5230 SonicWall GMS \u6570\u636e\u5e93\u7684\u65b0\u7528\u6237: "}, {"LOGS_ADDED_NEW_USER_TYPE", "\u6dfb\u52a0\u5230 SonicWall GMS \u6570\u636e\u5e93\u7684\u65b0\u7528\u6237\u7c7b\u578b: "}, {"LOGS_DELETED_USER", "\u4ece SonicWall GMS \u6570\u636e\u5e93\u4e2d\u5220\u9664\u7684\u7528\u6237\u548c\u76f8\u5e94\u4fe1\u606f: "}, {"LOGS_DELETED_GROUP", "\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u7ec4\u4ee5\u53ca\u4f7f\u7528\u6b64\u81ea\u5b9a\u4e49\u7ec4\u7684\u6240\u6709\u89c6\u56fe\u5df2\u4ece SonicWall GMS \u6570\u636e\u5e93\u4e2d\u5220\u9664: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "\u81ea\u5b9a\u4e49\u5c5e\u6027\u503c ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") \u5e94\u4ec5\u5305\u542b\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26"}, {"LOGS_ADD_CUSTOM_GROUP", "\u5c06\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u7fa4\u7ec4\u540d\u79f0/\u9ed8\u8ba4\u503c\u6dfb\u52a0\u5230\u7cfb\u7edf\u4e2d\uff1a "}, {"LOGS_MOD_CUSTOM_GROUP", "\u4fee\u6539\u4e86\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u7fa4\u7ec4\u540d\u79f0/\u9ed8\u8ba4\u503c\uff1a "}, {"LOGS_DEL_CUSTOM_GROUP", "\u5df2\u4ece\u7cfb\u7edf\u4e2d\u5220\u9664\u4ee5\u4e0b\u81ea\u5b9a\u4e49\u7ec4\uff1a "}, {"READY", "\u5c31\u7eea"}, {"NAV_OF", "/ "}, {"NAV_PREVIOUS", "\u4e0a\u4e00\u6b65"}, {"NAV_NEXT", "\u4e0b\u4e00\u6b65"}, {"NAV_DISPLAYING", "\u663e\u793a"}, {"NAV_FIREWALLS", "Firewall"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u66f4\u65b0\u6743\u9650\u3002"}, {"ACT_WRONG_FILE_FORMAT", "\u9519\u8bef\uff1a\u6587\u4ef6\u683c\u5f0f\u9519\u8bef\uff0c\u65e0\u6cd5\u6dfb\u52a0\u4ee3\u7801\u3002"}, {"AUTH_INVALID_PARAMS", "\u53c2\u6570\u65e0\u6548\uff0c\u8bf7\u91cd\u8bd5"}, {"AUTH_AUTHENTICATE", "\u9a8c\u8bc1"}, {"AUTH_PERFORM_LOGIN", "\u6267\u884c\u767b\u5f55"}, {"AUTH_RANDOM_TIMEOUT", "\u767b\u5f55\u968f\u673a\u6570\u5df2\u8d85\u65f6"}, {"AUTH_LOGIN_TIMEOUT", "\u767b\u5f55\u9875\u9762\u5df2\u8d85\u65f6\uff0c\u8bf7\u91cd\u8bd5"}, {"AUTH_LOGIN_FAILURE", "\u767b\u5f55\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5"}, {"AUTH_LOGIN_FAILURE_LOG", "\u767b\u5f55\u5931\u8d25"}, {"NO_DOMAIN_SPECIFIED", "\u6ca1\u6709\u6307\u5b9a\u7528\u4e8e\u767b\u5f55\u7684\u57df\u540d"}, {"SPECIFY_DOMAIN", "\u8bf7\u6307\u5b9a\u7528\u4e8e\u767b\u5f55\u7684\u57df\u540d"}, {"INVALID_IP", "[CN]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "\u57df\u65e0\u6548\u3002\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u57df\u540d"}, {"INVALID_ALIAS_MSG", "\u522b\u540d\u65e0\u6548\u3002\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u522b\u540d"}, {"REMOTE_SUCCESSFUL_LOGIN", "\u901a\u8fc7\u4ee5\u4e0b\u7528\u6237\u6210\u529f\u767b\u5f55\u5230\u7cfb\u7edf\uff1a "}, {"TWOFA_FAILED_LOGIN_MSG", "[CN]Invalid Authentication Code. Please enter valid Authentication code. (Make sure that your mobile time is synced to your network time.) "}, {"TWOFA_EMERGENCY_CODE_RESET_MSG", "[CN]EMERGENCY Code Used, 2FA RESET for user : "}, {"REMOTE_FAILED_LOGIN", "\u4ee5\u4e0b\u7528\u6237\u7684\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\uff1a "}, {"XML_REMOTE_FAILED_LOGIN", "\u4ee5\u4e0b\u7528\u6237\u57fa\u4e8e XML \u7684\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\uff1a "}, {"NEW_USER_ADDED", "\u6dfb\u52a0\u7684\u65b0\u7528\u6237\uff1a "}, {"TO_USER_TYPE", "\u7528\u6237\u7c7b\u578b\uff1a "}, {"CLICK_TO_TRY_AGAIN", "\u5355\u51fb\u6b64\u5904\u91cd\u8bd5"}, {"USER_LOCKED_OUT", "\u7528\u6237\u5df2\u9501\u5b9a\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u4ee5\u83b7\u53d6\u8be6\u7ec6\u4fe1\u606f"}, {"USER_DISABLED", "\u7528\u6237\u5e10\u6237\u5df2\u7981\u7528\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u4ee5\u83b7\u53d6\u8be6\u7ec6\u4fe1\u606f"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\u3002\u8bf7\u8054\u7cfb GMS \u7ba1\u7406\u5458\u3002"}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\u3002\u8bf7\u8054\u7cfb GMS \u7ba1\u7406\u5458\u6216\u91cd\u8bd5\u3002"}, {"LDAP_AUTH_FAILED", "\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25"}, {"LDAP_USER_NOT_FOUND", "\u4ee5\u4e0b\u76ee\u5f55\u4e2d\u7528\u6237\u672a\u627e\u5230\u6216\u4e0d\u5b58\u5728"}, {"LDAP_INVALID_CREDENTIALS", "\u8fdc\u7a0b\u9a8c\u8bc1\u5931\u8d25\uff1a\u51ed\u8bc1\u65e0\u6548"}, {"LDAP_COMMUNICATION_ERROR", "\u65e0\u6cd5\u4e0e\u76ee\u5f55\u6216\u547d\u540d\u670d\u52a1\u8fdb\u884c\u901a\u4fe1"}, {"LDAP_ANONYMOUS_BIND_SET", "\u533f\u540d\u7ed1\u5b9a\u8bbe\u7f6e\u4e3a\u5141\u8bb8\u7528\u4e8e\u8be5\u57df "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "\u68c0\u67e5\u8fdc\u7a0b\u670d\u52a1\u5668\u662f\u5426\u5141\u8bb8\u533f\u540d\u7ed1\u5b9a\u3002"}, {"LDAP_INVALID_GROUPS_SPECIFIED", "\u6307\u5b9a\u7684\u76ee\u5f55\u7ec4\u65e0\u6548\u3002\u8bf7\u8054\u7cfb GMS \u7ba1\u7406\u5458\u3002"}, {"LDAP_INVALID_GROUP_MEMBER", "\u7528\u6237\u5e76\u975e\u5141\u8bb8\u7684\u76ee\u5f55\u7ec4\u7684\u6210\u5458\u3002"}, {"RADIUS_UNKNOWN_HOST", "RADIUS \u670d\u52a1\u5668\u4e3b\u673a\u672a\u77e5\u3002"}, {"RADIUS_CONNECTION_TIMEOUT", "\u4e0e\u8fdc\u7a0b RADIUS \u670d\u52a1\u5668\u7684\u8fde\u63a5\u8d85\u65f6"}, {"RADIUS_FAILED_LOGIN", "\u9a8c\u8bc1\u5931\u8d25\u3002\u51ed\u8bc1\u65e0\u6548\u3002"}, {"RADIUS_EXCEPTION", "\u53d1\u751f RADIUS \u5f02\u5e38\u3002"}, {"RADIUS_INVALID_GROUP_MEMBER", "\u7528\u6237\u5e76\u975e\u5141\u8bb8\u7684 RADIUS \u7ec4\u7684\u6210\u5458\u3002"}, {"PWD_CHANGE_SCREEN", "\u66f4\u6539\u5bc6\u7801\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "\u66f4\u6539\u5bc6\u7801\uff0c\u539f\u56e0\u662f\u5176\u957f\u5ea6\u4e0d\u5728\u5141\u8bb8\u7684\u8303\u56f4\u5185\uff1a7 - 15 \u4e2a\u5b57\u7b26\u3002"}, {"PWD_VALIDATION_FAILURE", "\u66f4\u6539\u5bc6\u7801\uff0c\u539f\u56e0\u662f\u5176\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 15 \u4e2a\u5b57\u7b26\u3002"}, {"PWD_EXPIRATION", "\u5bc6\u7801\u9700\u8981\u6bcf {0} \u5929\u66f4\u6539\u4e00\u6b21"}, {"PWD_CHANGE_NEXT_LOGIN", "\u901a\u8fc7\u7ba1\u7406\u5458\u5f3a\u5236\u66f4\u6539\u5bc6\u7801\u3002"}, {"PASSWORD_EXISTS", "[CN]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[CN]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[CN]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "\u65e0\u6cd5\u8bfb\u53d6\u8bb8\u53ef\u8bc1\u6587\u4ef6"}, {"CUI_UPGRADE_SUCCESS", "\u5347\u7ea7\u6210\u529f"}, {"CUI_UPGRADE_FAIL", "\u5347\u7ea7\u5931\u8d25\uff1a "}, {"CUI_SYNCH_SUCCESS", "\u540c\u6b65\u6210\u529f"}, {"CUI_SYNCH_FAIL", "\u540c\u6b65\u5931\u8d25\uff1a "}, {"CUI_PRORATE_SUCCESS", "\u6309\u6bd4\u4f8b\u5206\u914d\u8bf7\u6c42\u6210\u529f"}, {"CUI_PRORATE_FAIL", "\u6309\u6bd4\u4f8b\u5206\u914d\u8bf7\u6c42\u5931\u8d25\uff1a "}, {"CUI_CHANGE_PW_SUCCESS", "\u6210\u529f\u3002MySonicWall.com \u63a5\u53d7\u4e86\u5bc6\u7801\u3002"}, {"CUI_CHANGE_PW_FAIL", "\u5931\u8d25\u3002MySonicWall.com \u4e0d\u63a5\u53d7\u5bc6\u7801\uff1a "}, {"CUI_EMAIL_SUCCESS", "\u5df2\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5c06\u6280\u672f\u652f\u6301\u8868\u5355\u53d1\u9001\u81f3 SonicWall GMS \u652f\u6301\u4e2d\u5fc3\u3002"}, {"CUI_EMAIL_FAIL", "\u5c06\u6280\u672f\u652f\u6301\u62a5\u544a\u53d1\u9001\u81f3 SonicWall GMS \u652f\u6301\u4e2d\u5fc3\u65f6\u51fa\u73b0\u95ee\u9898\u3002<br>\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002"}, {"CUI_SESSION_TERMINATED", " \u4f1a\u8bdd\u5df2\u6210\u529f\u7ec8\u6b62\u3002"}, {"CUI_SESSIONS_TERMINATED", "\u4f1a\u8bdd\u5df2\u6210\u529f\u7ec8\u6b62\u3002"}, {"CUI_NO_AGENTS", "\u672a\u627e\u5230\u4ee3\u7406\u3002"}, {"CUI_FILTER_ADDED", "\u6210\u529f\u6dfb\u52a0\u65b0\u8fc7\u6ee4\u5668 "}, {"DIAG_DIAG_REQUEST_A", "\u5bf9\u4ee5\u4e0b\u9879\u8fdb\u884c\u7684\u8bca\u65ad\u8bf7\u6c42 "}, {"DIAG_DIAG_REQUEST_B", "\u5df2\u63d0\u4ea4\u3002"}, {"DIAG_DELETE_SUCCESS", "\u5220\u9664\u6210\u529f\u3002"}, {"DIAG_EMAIL_SUCCESS", "\u7535\u5b50\u90ae\u4ef6\u6210\u529f\u53d1\u9001\u3002"}, {"DIAG_UNIT_UNKNOWN", "\u201c\u8bbe\u5907\u540d\u79f0\u672a\u77e5\u201d"}, {"DIAG_UNIT", "\u8bbe\u5907 "}, {"VPN_DUPLICATE_UFI", "\u66f4\u65b0\u5931\u8d25\u3002\u552f\u4e00\u7684\u9632\u706b\u5899\u6807\u793a\u7b26\u5728 SonicWall GMS \u4e2d\u4e0d\u552f\u4e00\u3002"}, {"NO_LOGS_MESSAGE", "\u672a\u627e\u5230\u65e5\u5fd7\u3002"}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "\u6ca1\u6709\u627e\u5230\u7b26\u5408\u63d0\u4f9b\u7684\u641c\u7d22\u6761\u4ef6\u7684\u65e5\u5fd7\u3002"}, {"LOG_START_SEARCH", "\u5f00\u59cb\u65b0\u641c\u7d22"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "\u60a8\u67e5\u8be2\u7684 {0,number,integer} \u6761\u8bb0\u5f55\u592a\u5927\u3002\u8bf7\u9650\u5236\u60a8\u7684\u641c\u7d22\u6761\u4ef6\u3002"}, {"SQL_EXCEPTION_ERROR_MESSAGE", "\u6570\u636e\u5e93\u8fde\u63a5\u4e2d\u51fa\u9519\u3002\u8bf7\u786e\u4fdd\u6570\u636e\u5e93\u53ef\u7528\u5e76/\u6216\u9650\u5236\u60a8\u7684\u641c\u7d22\u6761\u4ef6\u3002"}, {"UNKNOWN_EXCEPTION_MESSAGE", "\u6267\u884c\u641c\u7d22\u65f6\u51fa\u9519\u3002\u8bf7\u786e\u4fdd\u6570\u636e\u5e93\u53ef\u7528\u5e76/\u6216\u9650\u5236\u60a8\u7684\u641c\u7d22\u6761\u4ef6\u3002"}, {"LOG_NEXT", "\u4e0b\u4e00\u6b65"}, {"LOG_PREVIOUS", "\u4e0a\u4e00\u6b65"}, {"LOG_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f"}, {"LOG_OF", "/ "}, {"LOG_OF", "/ "}, {"PREFS_SYNCHRONIZE_STARTED", "\u4e0e\u542f\u52a8\u7684\u8bbe\u5907\u540c\u6b65\u4fe1\u606f\u6210\u529f\u3002"}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "\u540c\u6b65\u8bbe\u5907\u4fe1\u606f\u5931\u8d25\uff0c\u65e0\u6cd5\u767b\u5f55\u5230\u8bbe\u5907\u3002"}, {"MON_NO_PRIVILEGES", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u8db3\u591f\u6743\u9650"}, {"MON_SYNC_TASK_CREATED", "\u521b\u5efa\u540c\u6b65\u4efb\u52a1\u6210\u529f"}, {"MON_SYNC_TASK_FAIL", "\u521b\u5efa\u540c\u6b65\u4efb\u52a1\u5931\u8d25"}, {"MON_RENEGOTIATE_TASK_CREATED", "\u521b\u5efa\u91cd\u65b0\u534f\u5546\u4efb\u52a1\u6210\u529f"}, {"MON_RENEGOTIATE_FAILED", "\u521b\u5efa\u91cd\u65b0\u534f\u5546\u4efb\u52a1\u5931\u8d25"}, {"MON_NO_SELECTED", "\u6ca1\u6709\u9009\u5b9a\u7528\u4e8e\u91cd\u65b0\u534f\u5546\u7684\u96a7\u9053"}, {"MON_REFRESH_CREATED", "\u521b\u5efa\u5237\u65b0\u7edf\u8ba1\u4efb\u52a1\u6210\u529f"}, {"MON_REFRESH_FAIL", "\u521b\u5efa\u96a7\u9053\u7edf\u8ba1\u7684\u5237\u65b0\u4efb\u52a1\u5931\u8d25"}, {"MON_NO_SELECTED_REFRESH", "\u6ca1\u6709\u9009\u5b9a\u7528\u4e8e\u5237\u65b0\u7edf\u8ba1\u7684\u96a7\u9053"}, {"MON_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f"}, {"MON_UPDATE_FAIL", "\u66f4\u65b0\u5931\u8d25"}, {"MON_NO_MONITORING", "\u65e0\u6cd5\u76d1\u89c6\u96a7\u9053\u3002"}, {"MON_NAME", "\u540d\u79f0"}, {"MON_GATEWAY", "\u7f51\u5173"}, {"MON_LAST_UPDATED", "\u6700\u540e\u66f4\u65b0\u65f6\u95f4"}, {"MON_DEST_ADDR_RANGE", "\u76ee\u6807\u5730\u5740\u8303\u56f4"}, {"MON_LOCAL_ADDR_RANGE", "\u672c\u5730\u5730\u5740\u8303\u56f4"}, {"MON_NO_TUNNELS_FOUND", "\u672a\u627e\u5230\u96a7\u9053\u3002"}, {"MON_TITLE", "VPN \u96a7\u9053\u7edf\u8ba1"}, {"MON_DESCRIPTION", "\u8bf4\u660e"}, {"MON_VALUE", "\u503c"}, {"MON_CREATE_TIME", "\u521b\u5efa\u65f6\u95f4"}, {"MON_VALID_UNTIL", "\u96a7\u9053\u6709\u6548\u671f\u81f3"}, {"MON_PACKETS_IN", "\u8f93\u5165\u6570\u636e\u5305\u6570"}, {"MON_PACKETS_OUT", "\u8f93\u51fa\u6570\u636e\u5305\u6570"}, {"MON_BYTES_IN", "\u8f93\u5165\u5b57\u8282\u6570"}, {"MON_BYTES_OUT", "\u8f93\u51fa\u5b57\u8282\u6570"}, {"MON_FRAGMENTS_IN", "\u8f93\u5165\u5df2\u5206\u5272\u6570\u636e\u5305\u6570"}, {"MON_FRAGMENTS_OUT", "\u8f93\u51fa\u5df2\u5206\u5272\u6570\u636e\u5305\u6570"}, {"MON_TUNNEL_ACTIVE", "\u96a7\u9053\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001"}, {"REG_NO_PERMISSION", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u66f4\u65b0\u6743\u9650"}, {"REG_ERROR_RETRIEVING_COUNT", "\u68c0\u7d22\u6ce8\u518c/\u672a\u6ce8\u518c\u8bbe\u5907\u7684\u8ba1\u6570\u65f6\u51fa\u9519"}, {"REG_CURRENT", "\u5f53\u524d"}, {"REG_EXPIRED", "\u8fc7\u671f"}, {"REG_NO_LICENSE", "\u65e0\u8bb8\u53ef\u8bc1"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "\u65e0\u6cd5\u4e0a\u4f20\u56fa\u4ef6\u6620\u50cf"}, {"TASKS_SUCCESSFUL_DELETION", "\u4efb\u52a1\u5df2\u4ece\u6570\u636e\u5e93\u6210\u529f\u5220\u9664\u3002"}, {"TASKS_ERROR_DELETION", "\u9519\u8bef\uff1a\u65e0\u6cd5\u5220\u9664\u4efb\u52a1\u3002"}, {"TASKS_EXECUTION_SET", "\u4efb\u52a1\u5df2\u6210\u529f\u8bbe\u7f6e\u4e3a\u7acb\u5373\u6267\u884c\u3002"}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\u7684\u672a\u6388\u6743\u5c1d\u8bd5"}, {"TASKS_ERROR_EXECUTION", "\u9519\u8bef\uff1a\u65e0\u6cd5\u5b89\u6392\u6267\u884c\u7684\u4efb\u52a1\u3002"}, {"TASK_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u4efb\u52a1\u5df2\u88ab\u7528\u6237\u5220\u9664 "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "\u5220\u9664\u4ee5\u4e0b\u4efb\u52a1\u7684\u672a\u6388\u6743\u5c1d\u8bd5"}, {"NO_TASKS_MESSAGE", "\u672a\u627e\u5230\u4efb\u52a1\u3002"}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "\u6ca1\u6709\u627e\u5230\u7b26\u5408\u63d0\u4f9b\u7684\u641c\u7d22\u6761\u4ef6\u7684\u4efb\u52a1\u3002"}, {"TASKS_RESCHEDULED", "\u4efb\u52a1\u5df2\u6210\u529f\u91cd\u65b0\u5b89\u6392\u3002"}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "\u91cd\u65b0\u5b89\u6392\u4ee5\u4e0b\u4efb\u52a1\u7684\u672a\u6388\u6743\u5c1d\u8bd5"}, {"TASKS_ERROR_RESCHEDULE", "\u9519\u8bef\uff1a\u65e0\u6cd5\u91cd\u65b0\u5b89\u6392\u4efb\u52a1\u3002"}, {"IMMEDIATE_STRING", "\u7acb\u5373"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "\u672c\u5730"}, {"AGENT_STRING", "\u4ee3\u7406"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "\u4ee5\u4e0b\u4efb\u52a1\u5df2\u88ab\u7528\u6237\u91cd\u65b0\u5b89\u6392 "}, {"FROM_LOG_MESSAGE", "\u4ece "}, {"TO_LOG_MESSAGE", "\u5230 "}, {"IMMEDIATE_LOG_MESSAGE", "\u7acb\u5373\u6267\u884c"}, {"REG_PASSWORD_SUCCESS", "\u6210\u529f\u3002MySonicWall.com \u63a5\u53d7\u4e86\u5bc6\u7801\u3002\u6309\u66f4\u65b0\u4ee5\u7ee7\u7eed\u3002"}, {"REG_PASSWORD_FAIL", "\u5931\u8d25\u3002MySonicWall.com \u4e0d\u63a5\u53d7\u5bc6\u7801\uff1a "}, {"LOGIN_MESSAGE", "\u8bf7\u767b\u5f55"}, {"LOGIN_DEFAULT_MESSAGE", "\u4f7f\u7528\u9ed8\u8ba4\u7528\u6237\u201cadmin\u201d\u548c\u5bc6\u7801\u201cpassword\u201d\u767b\u5f55"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "\u4f7f\u7528\u9ed8\u8ba4\u7528\u6237\u201cadmin\u201d\u548c\u4e0e\u8bbe\u5907\u76f8\u540c\u7684\u5bc6\u7801"}, {"LOGIN_DEMO_MESSAGE", "\u8bf7\u4f7f\u7528\u7528\u6237\u201cdemo\u201d\u548c\u5bc6\u7801\u201cpassword\u201d\u767b\u5f55"}, {"SETTINGSVPS_CHANGED", "\u60a8\u7684 Analyzer \u8bbe\u7f6e\u5df2\u66f4\u65b0\u3002"}, {"SETTINGS_CHANGED", "\u5df2\u66f4\u65b0\u60a8\u7684\u8bbe\u7f6e\u3002"}, {"LOGS_USER_FORCEDOUT", "\u5df2\u5f3a\u5236\u4ee5\u4e0b\u7528\u6237\u4ece\u7cfb\u7edf\u6ce8\u9500\uff1a "}, {"SLAVE_STATE_CHANGED_MESSAGE", "\u4ee3\u7406\u5df2\u6210\u529f\u914d\u7f6e\u4ee5\u66f4\u6539\u5176\u72b6\u6001\u3002"}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "\u5c1d\u8bd5\u5931\u8d25\uff1a\u4ee3\u7406\u72b6\u6001\u65e0\u6cd5\u66f4\u6539\u3002"}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "\u4ee3\u7406\u53c2\u6570\u5df2\u6210\u529f\u66f4\u65b0\u3002"}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "\u4ee3\u7406\u53c2\u6570\u65e0\u6cd5\u6210\u529f\u66f4\u65b0\u3002"}, {"SCHEDULER_UP_STATE", "\u8fd0\u884c"}, {"SCHEDULER_DOWN_STATE", "\u5173\u95ed"}, {"SCHEDULER_UNDETERMINED_STATE", "\u4e0d\u786e\u5b9a"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6ca1\u6709\u6743\u9650\u66f4\u65b0\u4ee3\u7406\u5c5e\u6027\u3002"}, {"SMTPSERVER_INVALID", "SMTP \u670d\u52a1\u5668\u5730\u5740\u65e0\u6548\u3002"}, {"APPLIANCE_MANAGE_FAILED", "\u65e0\u6cd5\u66f4\u6539\u8bbe\u5907\u7684\u7ba1\u7406\u9996\u9009\u9879\u3002"}, {"EMPTY_SMTP_PWD", "SMTP \u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a"}, {"TREE_AGENT_STARTED", "\u4e3b\u8981\u4ee3\u7406\u5e94\u5904\u4e8e\u542f\u52a8\u72b6\u6001\u624d\u80fd\u91cd\u65b0\u5206\u914d\u4ee3\u7406"}, {"TREE_STANDBY_STARTED", "\u5907\u7528\u4ee3\u7406\u5e94\u5904\u4e8e\u542f\u52a8\u72b6\u6001\u624d\u80fd\u91cd\u65b0\u5206\u914d\u4ee3\u7406"}, {"TREE_LICENSE_EXCEEDED", "\u60a8\u6ca1\u6709\u6dfb\u52a0\u66f4\u591a\u8fdb\u884c\u7ba1\u7406\u7684\u8bbe\u5907\u7684\u8bb8\u53ef\u8bc1\u3002"}, {"TREE_IP_EMPTY", "IP \u4e0d\u80fd\u4e3a\u7a7a\u3002\u8bf7\u63d0\u4f9b\u4e00\u4e2a\u6709\u6548\u7684 IP \u5730\u5740"}, {"TREE_AUTH_FAIL", "\u8bbe\u5907\u9a8c\u8bc1\u5931\u8d25\uff1b\u8bf7\u786e\u8ba4\u8bbe\u7f6e\u3002"}, {"TREE_NO_RESPONSE", "\u8bbe\u5907\u4e0d\u53ef\u8bbf\u95ee\uff1b\u8bf7\u786e\u8ba4\u8bbe\u7f6e\u3002"}, {"TREE_FIREWALL_NOT_LICENSED", "\u8bbe\u5907\u6ca1\u6709 Analyzer \u8bb8\u53ef\u3002"}, {"TREE_FIREWALL_STATE_ERROR", "\u65e0\u6cd5\u68c0\u7d22\u8bbe\u5907\u72b6\u6001\u4fe1\u606f\u3002\n\u8bbe\u5907\u7684\u56fa\u4ef6\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u66f4\u65b0\u3002"}, {"TREE_MODEL_FAIL", "\u65e0\u6cd5\u68c0\u7d22\u578b\u53f7\u4fe1\u606f"}, {"TREE_FIRMWARE_VERSION_FAIL", "\u65e0\u6cd5\u68c0\u7d22\u56fa\u4ef6\u7248\u672c"}, {"TREE_UNMATCHED_SERIAL", "\u5e8f\u5217\u53f7\u4e0d\u5339\u914d\u3002"}, {"TREE_TIMEZONE_FAIL", "\u65e0\u6cd5\u68c0\u7d22\u65f6\u533a"}, {"TREE_UTC_FAIL", "\u65e5\u5fd7\u6d88\u606f\u5e76\u975e UTC \u683c\u5f0f\u3002\u8bf7\u5c06\u8bbe\u5907\u7684\u65f6\u95f4\u6233\u683c\u5f0f\u66f4\u6539\u4e3a UTC\uff0c\u5426\u5219\u751f\u6210\u7684\u62a5\u544a\u5c06\u663e\u793a\u9519\u8bef\u7684\u65f6\u95f4"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "\u8bf7\u5728\u201c\u65e5\u5fd7\u201d>ViewPoint \u5c4f\u5e55\u4e2d\u542f\u7528\u201c\u542f\u7528 ViewPoint \u8bbe\u7f6e\u201d\u9009\u9879\u3002\u6b64\u8bbe\u7f6e\u5c06\u66f4\u6539\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\t1.\u4ee5 UT\u683c\u5f0f\u53d1\u9001 Syslog\n\t2.\u5c06\u201cSyslog \u4e8b\u4ef6\u5197\u4f59\u8fc7\u6ee4\u5668\u201d\uff08\u79d2\u6570\uff09\u8bbe\u7f6e\u4e3a 0\n\t3.\u5c06\u201cSyslog \u683c\u5f0f\u201d\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c"}, {"TREE_NO_SCHEDULER", "\u6307\u5b9a\u7684 IP \u5730\u5740\u672a\u627e\u5230\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u8bbe\u5907\u672a\u6dfb\u52a0"}, {"TREE_GET_PREFS_ERR", "\u68c0\u7d22\u9996\u9009\u9879\u6587\u4ef6\u65f6\u51fa\u9519\u3002"}, {"TREE_FIREWALL_NOT_REGISTERED", "\u6b64\u8bbe\u5907\u672a\u6ce8\u518c\u3002\u8bf7\u8bbf\u95ee MySonicWall.com \u5e76\u6ce8\u518c\u8be5\u8bbe\u5907\uff0c\u7136\u540e\u5c06\u5176\u6dfb\u52a0\u5230 Analyzer\u3002"}, {"TREE_BACKEND_COMM_FAILURE", "Analyzer \u65e0\u6cd5\u4e0e MySonicWall.com \u901a\u4fe1\u4ee5\u9a8c\u8bc1\u8bb8\u53ef\u8bc1\u3002\n\u8bf7\u68c0\u67e5\u60a8\u7684\u7f51\u7edc\u8fde\u63a5\uff1bAnalyzer \u670d\u52a1\u5668\u5fc5\u987b\u80fd\u591f\u4e0e MySonicWall.com \u901a\u4fe1\u3002 "}, {"SU_DB_SIZE_EMAILBODY1", "\u5f53\u524d\u6570\u636e\u5e93\u5927\u5c0f\u5982\u4e0b\uff1a\n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\n\u6ce8\uff1a\u6700\u5927\u6570\u636e\u5e93\u5927\u5c0f\u9650\u5236\u4e3a 2GB \n\n \n\u4ee5\u4e0b\u914d\u7f6e\u66f4\u6539\u5c06\u5f71\u54cd\u6570\u636e\u5e93\u4f7f\u7528\u60c5\u51b5\u7684\u603b\u4f53\u89c4\u6a21\uff1a\n\t\u51cf\u5c0f\u201c\u63a7\u5236\u53f0\u9762\u677f\u201d->\u201c\u62a5\u544a\u201d->\u201c\u8bbe\u7f6e\u201d\u5c4f\u5e55\u4e2d\u201c\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5929\u6570\u201d\u7684\u5929\u6570\u8bbe\u7f6e\u3002\n\t\u51cf\u5c0f\u201c\u63a7\u5236\u53f0\u9762\u677f\u201d->\u201c\u62a5\u544a\u201d->\u201c\u6458\u8981\u751f\u6210\u5668\u201d\u5c4f\u5e55\u4e2d\u201c\u6c47\u603b\u6570\u636e\u5b58\u50a8\u5929\u6570\u201d\u8bbe\u7f6e\u7684\u5929\u6570\u3002"}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\n\u6ce8\uff1a "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "\u6700\u5927\u6570\u636e\u5e93\u5927\u5c0f\u9650\u5236\u4e3a 2GB \n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\n\u4ee5\u4e0b\u914d\u7f6e\u66f4\u6539\u5c06\u5f71\u54cd\u6570\u636e\u5e93\u4f7f\u7528\u60c5\u51b5\u7684\u603b\u4f53\u89c4\u6a21\uff1a\n\t\u51cf\u5c0f\u201c\u63a7\u5236\u53f0\u9762\u677f\u201d->\u201c\u62a5\u544a\u201d->\u201c\u8bbe\u7f6e\u201d\u5c4f\u5e55\u4e2d\u201c\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5929\u6570\u201d\u7684\u5929\u6570\u8bbe\u7f6e\u3002\n\t\u51cf\u5c0f\u201c\u63a7\u5236\u53f0\u9762\u677f\u201d->\u201c\u62a5\u544a\u201d->\u201c\u6458\u8981\u751f\u6210\u5668\u201d\u5c4f\u5e55\u4e2d\u201c\u6c47\u603b\u6570\u636e\u5b58\u50a8\u5929\u6570\u201d\u8bbe\u7f6e\u7684\u5929\u6570\u3002"}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "\u8b66\u544a\uff1a\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "\u8bf7\u786e\u8ba4\u6ca1\u6709\u5728\u7ef4\u62a4\u5907\u4efd\u8ba1\u5212\u4e2d\u8bbe\u7f6e\u6570\u636e\u5e93\uff0c\u6216\u73b0\u6709\u8ba1\u5212\u65e0\u6cd5\u6e05\u9664\u65e5\u5fd7\u3002\n\u5982\u679c\u6ca1\u6709\u5728\u7ef4\u62a4\u8ba1\u5212\u4e2d\u8bbe\u7f6e\u6570\u636e\u5e93\uff0c\u4e8b\u52a1\u65e5\u5fd7\u5c06\u7ee7\u7eed\u589e\u957f\u5e76\u586b\u6ee1\u6574\u4e2a\u786c\u76d8\uff0c \n\u6b64\u65f6\u6570\u636e\u5e93\u548c GMS \u7cfb\u7edf\u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002\u5176\u6b21\uff0c\u5982\u679c\u6570\u636e\u5e93\u5d29\u6e83\uff0c\u60a8\u5c06\u65e0\u6cd5\u5c06\u6570\u636e\u5e93 \n\u8fd8\u539f\u4e3a\u4e0a\u4e00\u5df2\u77e5\u5907\u4efd\u3002"}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: \u6570\u636e\u5e93\u5065\u5eb7\u68c0\u67e5"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "\u767b\u5f55\u8bb8\u53ef\u8bc1\u9a8c\u8bc1\u5931\u8d25\u7684\u8bbe\u5907\uff0c\u8bbe\u5907\u5e8f\u5217\u53f7\u4e3a "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", "\u3002\u8bf7\u786e\u4fdd\u6ca1\u6709\u5728\u8bbe\u5907\u4e0a\u672c\u5730\u66f4\u6539\u767b\u5f55\u6240\u9700\u7684\u4efb\u4f55\u8bbe\u7f6e\u3002 \u4f7f\u7528\u201c\u4fee\u6539\u8bbe\u5907\u201d\u4f53\u73b0 Analyzer \u4e2d\u7684\u66f4\u6539", "\u901a\u8fc7 Analyzer \u8fdb\u884c\u8bb8\u53ef\u8bc1\u9a8c\u8bc1"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "\u901a\u8fc7 Analyzer \u8fdb\u884c\u8bb8\u53ef\u8bc1\u9a8c\u8bc1"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "\u767b\u5f55\u5230\u8bbe\u5907 "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", "\uff0c\u8be5\u8bbe\u5907\u8bb8\u53ef\u8bc1\u9a8c\u8bc1\u5931\u8d25\u5e76\u4e14\u5df2\u8d85\u8fc7\u5bbd\u9650\u671f\u3002\u8bf7\u786e\u4fdd\u6ca1\u6709\u5728\u8bbe\u5907\u4e0a\u672c\u5730\u66f4\u6539\u767b\u5f55\u6240\u9700\u7684\u4efb\u4f55\u8bbe\u7f6e\u3002 \u4f7f\u7528\u201c\u4fee\u6539\u8bbe\u5907\u201d\u4f53\u73b0 VPS \u4e2d\u7684\u66f4\u6539"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "Analyzer \u8bb8\u53ef\u8bc1\u5df2\u8fc7\u671f\uff01"}, {"SU_LIC_EXPIRED_BODY1", "\u60a8\u7684\u8bbe\u5907 "}, {"SU_LIC_EXPIRED_BODY2", "\u6ca1\u6709 Analyzer \u8bb8\u53ef\u3002\u8bf7\u68c0\u67e5\u8bbe\u5907\u4e0a\u7684\u8bbe\u7f6e"}, {"SU_LIC_EXPIRED_SUBJECT", "Analyzer \u8bb8\u53ef\u8bc1\u5df2\u8fc7\u671f\uff01"}, {"LOGVIEW_WRONG_START_DT", "\u5f00\u59cb\u65e5\u671f\u683c\u5f0f\u9519\u8bef\u3002\u65e5\u671f\u5fc5\u987b\u4e3a mm/dd/yyyy \u683c\u5f0f\u3002"}, {"LOGVIEW_WRONG_END_DT", "\u7ed3\u675f\u65e5\u671f\u683c\u5f0f\u9519\u8bef\u3002\u65e5\u671f\u5fc5\u987b\u4e3a mm/dd/yyyy \u683c\u5f0f\u3002"}, {"LOGVIEW_ENDDT_LESS_STARTDT", "\u7ed3\u675f\u65e5\u671f\u5c0f\u4e8e\u5f00\u59cb\u65e5\u671f\u3002\u8bf7\u8f93\u5165\u6709\u6548\u7684\u5f00\u59cb\u65e5\u671f\u548c\u7ed3\u675f\u65e5\u671f\u3002"}, {"LOGVIEW_MSGS_PERSCRN", "\u6bcf\u5c4f\u5e55\u6d88\u606f\u6570"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "\u60a8\u5373\u5c06\u5bfc\u51fa {0,number,integer} \u4e2a\u65e5\u5fd7\u6761\u76ee\u3002\u662f\u5426\u786e\u5b9a\u8981\u8fd9\u6837\u505a\uff1f \u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u53d6\u6d88\u6b64\u5bf9\u8bdd\u6846\u5e76\u9650\u5236\u641c\u7d22\u6761\u4ef6\u3002"}, {"LOGVIEW_GOTO_MSG", "\u8f6c\u5230\u6d88\u606f\u7f16\u53f7"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "\u663e\u793a\u6bcf\u5c4f\u5e55\u6d88\u606f\u6570\uff1a"}, {"LOGVIEW_RANGE", "\uff08\u8303\u56f4\uff1a10-100\uff09"}, {"LOGVIEW_COL_DT", "\u65e5\u671f"}, {"LOGVIEW_COL_MSG", "\u6d88\u606f"}, {"LOGVIEW_COL_SEV", "\u4e25\u91cd\u6027"}, {"LOGVIEW_COL_USER", "GMS \u7528\u6237"}, {"LOGVIEW_COL_CO", "Change Order"}, {"LOGVIEW_COL_IP", "\u7528\u6237 IP"}, {"LOGVIEW_SEARCH_RESULTS", "\u641c\u7d22\u7ed3\u679c"}, {"LOGVIEW_SEARCH_CRITERIA", "\u641c\u7d22\u6761\u4ef6"}, {"LOGVIEW_EXPORT_LOGS", "\u5bfc\u51fa\u65e5\u5fd7"}, {"LOGVIEW_CLEAR_LOGS", "\u6e05\u9664\u641c\u7d22"}, {"LOGVIEW_SEARCH_LOGS", "\u5f00\u59cb\u641c\u7d22"}, {"LOGVIEW_MATCH_CASE", "\u533a\u5206\u5927\u5c0f\u5199"}, {"LOGVIEW_EXACT_PHRASE", "\u786e\u5207\u77ed\u8bed"}, {"LOGVIEW_ANY_WORD", "\u4efb\u610f\u8bcd"}, {"LOGVIEW_ALL_WORDS", "\u6240\u6709\u8bcd"}, {"LOGVIEW_MSG", "\u6d88\u606f\u5305\u542b\uff1a"}, {"LOGVIEW_CO", "Change Order:"}, {"LOGVIEW_TIME", "\u9009\u62e9\u65e5\u5fd7\u65f6\u95f4\uff1a\u4ece\uff1a"}, {"LOGVIEW_TIME_TO", "\u5230\uff1a "}, {"LOGVIEW_NODE_NAME", "SonicWall \u8282\u70b9\uff1a"}, {"LOGVIEW_USER", "\u7528\u6237\uff1a "}, {"LOGVIEW_SEV", "\u4e25\u91cd\u6027\uff1a "}, {"LOGVIEW_CALENDAR", "\u65e5\u5386"}, {"LOGVIEW_ALL", "\u6240\u6709\uff08\u8b66\u62a5\u3001\u8b66\u544a\u548c Info\uff09"}, {"LOGVIEW_ALERT_WARNING", "\u8b66\u62a5\u548c\u8b66\u544a"}, {"LOGVIEW_ALERT", "\u8b66\u62a5"}, {"LOGVIEW_STR_FORMAT", "\u641c\u7d22\u5b57\u7b26\u4e32\u683c\u5f0f\uff1auser@domain\u3002<br>\u4ec5\u9650\u7528\u6237\uff0c\u8f93\u5165 user\u3002<br>\u4ec5\u9650\u57df\uff0c\u8f93\u5165 @domain\u3002<br><i>\u6ce8\uff1a \u5982\u679c\u7528\u6237\u503c\u5305\u542b @ \u5b57\u7b26\uff0c\u5219\u4f7f\u7528\u53e6\u4e00\u4e2a @ \u7ec8\u6b62\u641c\u7d22\u5b57\u7b26\u4e32\u3002</i>"}, {"HELPABOUT_VERSION", "\u7248\u672c\uff1a"}, {"HELPABOUT_LIC", "\u8bb8\u53ef\u7ed9\uff1a"}, {"HELPABOUT_SN", "\u5e8f\u5217\u53f7\uff1a"}, {"HELPABOUT_DBDRIVER", "\u6570\u636e\u5e93\u9a71\u52a8\u7a0b\u5e8f\uff1a"}, {"HELPABOUT_DBVERSION", "\u6570\u636e\u5e93\u7248\u672c\uff1a"}, {"HELPABOUT_REPORT_DBVERSION", "\u62a5\u544a\u6570\u636e\u5e93\u7248\u672c\uff1a"}, {"LOGIN_TITLE", "\u767b\u5f55"}, {"LOGIN_ISBLANK", "\u4e3a\u7a7a\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u503c\u3002"}, {"LOGIN_INVALIDID", "\u6307\u5b9a\u7684\u7528\u6237 ID \u65e0\u6548\u3002"}, {"LOGIN_INVALIDID2", "\u7528\u6237 ID \u53ea\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a"}, {"LOGIN_INVALIDID3", "\u5b57\u6bcd\u6570\u5b57\u3001.\uff08\u70b9\u53f7\uff09\u3001-\uff08\u8fde\u5b57\u7b26\uff09\u3001_\uff08\u4e0b\u5212\u7ebf\uff09\u548c @(At)\u3002"}, {"LOGIN_INVALIDID4", "\u8bf7\u4f7f\u7528\u5141\u8bb8\u7684\u5b57\u7b26\u6307\u5b9a\u7528\u6237 ID\u3002"}, {"LOGIN_USERNAME", "\u7528\u6237\u540d"}, {"LOGIN_PASSWORD", "\u5bc6\u7801"}, {"LOGIN_LOGIN", "\u767b\u5f55"}, {"LOGIN_DOMAIN", "\u57df"}, {"LOGIN_SWITCH_EN_US", "\u5207\u6362\u5230\u82f1\u6587 UI"}, {"LOGIN_SWITCH_JA_JP", "\u5207\u6362\u5230\u65e5\u6587 UI"}, {"LOGIN_SWITCH_ZH_CN", "\u5207\u6362\u5230\u7b80\u4f53\u4e2d\u6587 UI"}, {"LOGIN_SWITCH_ZH_TW", "\u5207\u6362\u5230\u7e41\u4f53\u4e2d\u6587 UI"}, {"LOGIN_SWITCH_KO_KR", "\u5207\u6362\u5230\u97e9\u8bed UI"}, {"LOGIN_SWITCH_PT_BR", "Switch to Brazilian Portugese UI"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "\u6ce8\u9500"}, {"LOGOUT_VPMSG", "\u60a8\u73b0\u5728\u5df2\u6210\u529f\u4ece SonicWall Analyzer \u7cfb\u7edf\u4e2d\u6ce8\u9500\u3002"}, {"LOGOUT_VPMSG1", "\u8981\u542f\u52a8\u65b0\u7684 SonicWall Analyzer \u4f1a\u8bdd\uff0c\u5efa\u8bae\u60a8\u5173\u95ed\u6216\u9000\u51fa\u6b64\u6d4f\u89c8\u5668&nbsp<br>&nbsp\u7136\u540e\u6253\u5f00\u8be5\u6d4f\u89c8\u5668\u7684\u4e00\u4e2a\u65b0\u7a97\u53e3\u3002"}, {"LOGOUT_GMSMSG", "\u60a8\u73b0\u5728\u5df2\u6210\u529f\u4ece SonicWall \u5168\u5c40\u7ba1\u7406\u7cfb\u7edf\u4e2d\u6ce8\u9500\u3002"}, {"LOGOUT_GMSMSG1", "\u8981\u542f\u52a8\u65b0\u7684 SonicWall GMS \u4f1a\u8bdd\uff0c\u5efa\u8bae\u60a8\u5173\u95ed\u6216\u9000\u51fa\u6b64\u6d4f\u89c8\u5668&nbsp<br>&nbsp\u7136\u540e\u6253\u5f00\u8be5\u6d4f\u89c8\u5668\u7684\u4e00\u4e2a\u65b0\u7a97\u53e3\u3002"}, {"SETTINGSUSER_CHANGE", "\u66f4\u6539"}, {"SETTINGSUSER_OLD", "\u5f53\u524d"}, {"SETTINGSUSER_PASSWORD", "\u5bc6\u7801"}, {"SETTINGSUSER_NEW", "\u65b0"}, {"SETTINGSUSER_CONFIRMMSG", "\u786e\u8ba4\u65b0\u5bc6\u7801"}, {"SETTINGSUSER_FAILMSG", "\u201c\u5bc6\u7801\u201d\u548c\u201c\u786e\u8ba4\u65b0\u5bc6\u7801\u201d\u6761\u76ee\u4e0d\u5339\u914d\u3002"}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "\u5bc6\u7801\u957f\u5ea6\u5fc5\u987b\u81f3\u5c11\u4e3a 7 \u4e2a\u5b57\u7b26\u5e76\u4e14\u5305\u542b\u5b57\u6bcd\u548c/\u6216\u6570\u5b57\u3002"}, {"INVALID_PASSWORD", "\u6307\u5b9a\u7684\u5bc6\u7801\u65e0\u6548\u3002"}, {"PWD_RULES", "\u5bc6\u7801\u5e94\u57fa\u4e8e\u4ee5\u4e0b\u89c4\u5219\u521b\u5efa\uff1a "}, {"VALID_PWD_RULE_FOR_PCI", "    - \u957f\u5ea6\u81f3\u5c11 7 \u4e2a\u5b57\u7b26\u3002"}, {"MAX_PWD_LEN", "    - \u5141\u8bb8\u7684\u6700\u5927\u957f\u5ea6\u4e3a 15 \u4e2a\u5b57\u7b26\u3002"}, {"PWD_ALPHANUMERIC_CHARS", "    - \u53ef\u5305\u542b\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002"}, {"PWD_SPCIAL_CHARS", "    - \u53ef\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u3002"}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[CN]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[CN]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[CN]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "\u8bf7\u6307\u5b9a\u7b26\u5408\u8981\u6c42\u7684\u5bc6\u7801\u3002"}, {"SETTINGSUSER_MISCSETTINGS", "\u5176\u4ed6\u8bbe\u7f6e"}, {"SETTINGSUSER_TIMEOUTPERIOD", "\u8d85\u65f6\u671f\u9650\u53ef\u4e3a -1 \u6216\u5728 [5..120] \u8303\u56f4\u5185\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\u3002"}, {"SETTINGSUSER_NEVERTIMEOUT", "\u6c38\u4e0d\u8d85\u65f6"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "\u4e0d\u6d3b\u52a8\u8d85\u65f6"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "\u8bbe\u5907\u9009\u62e9\u9762\u677f\uff0c\u663e\u793a\uff1a"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u56fe\u6807"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "\u6587\u672c"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u56fe\u6807\u548c\u6587\u672c\uff08\u9ed8\u8ba4\u503c\uff09"}, {"MAX_ROWS_PER_SCREEN", "\u6bcf\u5c4f\u5e55\u6700\u5927\u884c\u6570\uff1a"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "\u8303\u56f4\uff1a[10..100]\uff08\u4ec5\u9002\u7528\u4e8e\u975e\u62a5\u544a\u76f8\u5173\u5206\u9875\u5c4f\u5e55\uff09"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "\u6bcf\u5c4f\u5e55\u6700\u5927\u884c\u6570\u503c\u8d85\u51fa\u6709\u6548\u7684\u8303\u56f4\u3002\u8bf7\u8f93\u5165\u4ecb\u4e8e 10 \u5230 100 \u4e4b\u95f4\u7684\u6570\u5b57\uff08\u5305\u542b\u8fb9\u754c\uff09\u3002"}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "\u6bcf\u5c4f\u5e55\u6700\u5927\u884c\u6570\u503c\u5e76\u975e\u6570\u5b57\u3002\u8bf7\u8f93\u5165\u4e00\u4e2a\u6709\u6548\u6570\u5b57\u3002"}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "\u81ea\u52a8\u4fdd\u5b58\u4eea\u8868\u677f\u8bbe\u7f6e\uff1a"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1\uff1a\u81ea\u52a8\u4fdd\u5b58\u672a\u542f\u7528\u6216\u8303\u56f4\uff1a[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "\u81ea\u52a8\u4fdd\u5b58\u4eea\u8868\u677f\u8bbe\u7f6e\u53ef\u4e3a -1 \u6216\u5728 [1..60] \u8303\u56f4\u5185\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\u3002"}, {"CHANGEPASSWORD_OLD", "\u5f53\u524d\u5bc6\u7801"}, {"CHANGEPASSWORD_NEW", "\u65b0\u5bc6\u7801"}, {"CHANGEPASSWORD_CONFIRM", "\u786e\u8ba4\u65b0\u5bc6\u7801"}, {"CHANGEPASSWORD_USER", "\u7528\u6237"}, {"CUSTLOGSETTINGS_NOTE1", "\u6ce8\uff1a\u60a8\u53ef\u4ee5\u8f93\u5165\u901a\u8fc7\u5206\u53f7 (\";\") \u5206\u9694\u7684\u591a\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740"}, {"CUSTLOGSETTINGS_SECTITLE1", "\u7535\u5b50\u90ae\u4ef6\u8b66\u62a5\u6536\u4ef6\u4eba\u65e5\u7a0b"}, {"CUSTLOGSETTINGS_WEEKDAY", "\u5de5\u4f5c\u65e5\uff1a"}, {"CUSTLOGSETTINGS_SCHED1", "\u65e5\u7a0b 1\uff1a"}, {"CUSTLOGSETTINGS_SCHED2", "\u65e5\u7a0b 2\uff1a"}, {"CUSTLOGSETTINGS_SCHED3", "\u65e5\u7a0b 3\uff1a"}, {"CUSTLOGSETTINGS_SAT", "\u5468\u516d"}, {"CUSTLOGSETTINGS_SUN", "\u5468\u65e5"}, {"CUSTLOGSETTINGS_WEEKEND", "\u5468\u672b\uff1a"}, {"CUSTLOGSETTINGS_HRS", "\u5c0f\u65f6"}, {"CUSTLOGSETTINGS_TO", "\u6536\u4ef6\u4eba"}, {"CUSTLOGSETTINGS_ALERTFMT", "\u7535\u5b50\u90ae\u4ef6\u8b66\u62a5\u683c\u5f0f\u9996\u9009\u9879"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "\u5305\u542b\u6587\u672c\uff0c\u8272\u5f69\uff0c\u56fe\u50cf\u548c\u94fe\u63a5\u3002\u4ec5\u80fd\u4e0e\u7535\u5b50\u90ae\u4ef6\u8f6f\u4ef6\u517c\u5bb9(HTML)."}, {"CUSTLOGSETTINGS_TEXT", "\u7eaf\u6587\u672c"}, {"CUSTLOGSETTINGS_TEXT_DESC", "\u5305\u542b\u7eaf\u6587\u5b57\u7684\u6240\u6709\u7ec6\u8282\uff0c\u517c\u5bb9\u6240\u6709\u7684\u7535\u5b50\u90ae\u4ef6\u8f6f\u4ef6."}, {"CUSTLOGSETTINGS_PAGER", "\u7eaf\u6587\u5b57\uff08\u7b80\u5355\uff09"}, {"CUSTLOGSETTINGS_PAGER_DESC", "\u5305\u542b\u4e00\u4e2a\u7eaf\u6587\u5b57\u7684\u77ed\u6d88\u606f\u3002\u62e9\u7528\u4e8e\u5bfb\u547c\u673a\uff0cSMS\uff08\u77ed\u8baf\u670d\u52a1\uff09\u548c\u7c7b\u4f3c\u7684\u7a0b\u5f0f."}, {"LOGCONFIG_SECTITLE_1", "\u5220\u9664"}, {"LOGCONFIG_SECTITLE_2", "\u65e5\u5fd7\u6d88\u606f"}, {"LOGCONFIG_DELLABEL", "\u5220\u9664\u65e9\u4e8e\u4ee5\u4e0b\u65f6\u95f4\u7684\u65e5\u5fd7\u6d88\u606f\uff1a"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u65e5"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u7528\u4e8e"}, {"LOGCONFIG_DOMAIN", "\u57df"}, {"SESSIONS_NOSESSALERT", "\u6ca1\u6709\u8981\u7ed3\u675f\u7684\u4f1a\u8bdd\u3002"}, {"SESSIONS_NOSESSSELALERT", "\u8bf7\u9009\u62e9\u8981\u7ed3\u675f\u7684\u4f1a\u8bdd\u3002"}, {"SESSIONS_RUSUREALERT", "\u662f\u5426\u786e\u5b9a\u8981\u7ed3\u675f\u9009\u5b9a\u7684\u4f1a\u8bdd\uff1f"}, {"SESSIONS_TITLE", "\u5f53\u524d\u4f1a\u8bdd"}, {"SESSIONS_COL1", "\u7528\u6237\u540d"}, {"SESSIONS_COL2", "IP \u5730\u5740"}, {"SESSIONS_COL3", "\u767b\u5f55\u65f6\u95f4"}, {"SESSIONS_COL4", "\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4"}, {"SESSIONS_COL5", "\u57df\u540d"}, {"SESSIONS_END", "\u7ed3\u675f\u9009\u5b9a\u7684\u4f1a\u8bdd"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP \u670d\u52a1\u5668\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP \u7aef\u53e3"}, {"LOGINVPSSETTINGS_LABEL2", "\u53d1\u4ef6\u4eba\u7535\u5b50\u90ae\u4ef6\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL3", "\u7ba1\u7406\u5458\u7535\u5b50\u90ae\u4ef6\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL3_5", "\u4f7f\u7528 TLS"}, {"LOGINVPSSETTINGS_LABEL4", "\u4f7f\u7528\u8ba4\u8bc1"}, {"LOGINVPSSETTINGS_LABEL5", "\u7528\u6237"}, {"LOGINVPSSETTINGS_LABEL6", "\u5bc6\u7801"}, {"LOGINVPSSETTINGS_NOTE", "\u6ce8\uff1a\u5982\u9700\u66f4\u6539\u6536\u4ef6\u4eba\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u8bf7\u4f7f\u7528\u201c\u63a7\u5236\u53f0 > \u8b66\u62a5 > \u57fa\u672c\u8bbe\u7f6e\u201d"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "\u7cfb\u7edf\u8c03\u8bd5\u7ea7\u522b\uff1a"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "\u8bbe\u7f6e\u8c03\u8bd5\u7ea7\u522b\u53ef\u4ee5\u66f4\u5feb\u901f\u5730\u9488\u5bf9\u6f5c\u5728\u7684\u5e94\u7528\u7a0b\u5e8f\u95ee\u9898\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002\u901a\u8fc7\u6b64\u90e8\u7f72\uff0c\u6b64\u64cd\u4f5c\u5c06\u5728\u6240\u6709\u7cfb\u7edf\u4e0a\u521b\u5efa\u8c03\u8bd5\u65e5\u5fd7\u6587\u4ef6\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u8fd8\u4f1a\u7528\u5c3d\u78c1\u76d8\u7a7a\u95f4\u3002\u53ea\u8981\u6f5c\u5728\u7684\u95ee\u9898\u83b7\u5f97\u4e86\u89e3\u51b3\uff0c\u60a8\u5c31\u5e94\u8be5\u5bf9\u6b63\u5e38\u64cd\u4f5c\u91cd\u7f6e\u4e3a<i>\u65e0\u8c03\u8bd5</i>\u3002"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "\u6ce8\uff1a "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u5e94\u5f53\u57fa\u4e8e SonicWall \u6280\u672f\u652f\u6301\u4e2d\u7684\u6307\u5bfc\u6765\u8bbe\u7f6e\u8c03\u8bd5\u7ea7\u522b"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u8c03\u8bd5\u7ea7\u522b\u8d8a\u9ad8\uff0c\u7528\u4e8e\u751f\u6210\u8c03\u8bd5\u6570\u636e\u7684\u7cfb\u7edf\u8d44\u6e90\u8d8a\u591a\uff0c\u8fdb\u800c\u4f1a\u964d\u4f4e\u6574\u4f53\u7cfb\u7edf\u6027\u80fd\u3002"}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "\u7acb\u5373\u540c\u6b65\u578b\u53f7\u4ee3\u7801\u4fe1\u606f"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\u662f\u5426\u8981\u4f7f\u7528\u65b0\u7684 SMTP \u670d\u52a1\u5668\u5730\u5740\u66f4\u65b0\u6240\u6709\u73b0\u6709\u5b9a\u671f\u62a5\u544a\u7684 SMTP \u670d\u52a1\u5668\u5730\u5740\uff1f"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "\u65e0\u6cd5\u540c\u6b65\u578b\u53f7\u4ee3\u7801\u4fe1\u606f\u3002"}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "\u663e\u793a\u5386\u53f2\uff08Analyzer 7.0 \u4e4b\u524d\uff09\u62a5\u544a"}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "\u589e\u5f3a\u5bc6\u7801\u5b89\u5168\u6027"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "\u5f3a\u5236\u8fdb\u884c\u5bc6\u7801\u66f4\u6539\u7684\u5929\u6570"}, {"GENVPSSTATUS_INVALIDIP", "\u4e0d\u5b8c\u6574\u7684\u8bbe\u5907\u51ed\u8bc1\u6b64\u65f6\u53ef\u7528\u4e8e\u6210\u529f\u767b\u5f55"}, {"GENVPSSTATUS_NODE", "\u8282\u70b9\uff1a "}, {"GENVPSSTATUS_INFO", "\u4fe1\u606f"}, {"GENVPSSTATUS_SYSLOG", "Syslog \u670d\u52a1\u5668"}, {"GENVPSSTATUS_IPINFO", "IP \u5730\u5740"}, {"GENVPSSTATUS_PORT", "\u7aef\u53e3"}, {"GENVPSSTATUS_SYNCNOW", "\u540c\u6b65\u8bbe\u7f6e\u548c\u8bbe\u5907\uff0c\u4ee5\u53ca\u8bb8\u53ef\u8bc1\u4fe1\u606f\u548c MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "Analyzer \u4f7f\u7528\u5165\u95e8"}, {"GENVPSSTATUS_GETSTARTOPEN", "\u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00\u4f7f\u7528\u5165\u95e8\u8bf4\u660e"}, {"GENVPSSTATUS_LOGINTITLE", "\u8bbe\u5907\u767b\u5f55"}, {"GENVPSSTATUS_LOGINHTTP", "\u4f7f\u7528\u4e0d\u5b89\u5168\u767b\u5f55 (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "\u4f7f\u7528\u5b89\u5168\u767b\u5f55 (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "\u767b\u5f55"}, {"GENVPSSTATUS_CATEGORIES", "Syslog \u7c7b\u522b"}, {"GENVPSSTATUS_REFRESH_MSG", "\u6ce8:\u72b6\u6001\u4fe1\u606f\u6bcf 24 \u5c0f\u65f6\u66f4\u65b0\u4e00\u6b21\u3002\u8981\u5237\u65b0\u4fe1\u606f\uff0c\u8bf7\u5355\u51fb\u4e0a\u9762\u7684\u94fe\u63a5\u3002\u8981\u66f4\u6539\u8fd9\u4e9b\u8bbe\u7f6e\uff0c\u60a8\u5fc5\u987b\u767b\u5f55\u5230\u8bbe\u5907\u5e76\u624b\u52a8\u5bf9\u5176\u8fdb\u884c\u66f4\u65b0\u3002"}, {"GENVPSSTATUS_LOG_TYPE", "\u65e5\u5fd7\u7c7b\u578b"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "\u7cfb\u7edf\u7ef4\u62a4"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "\u7cfb\u7edf\u9519\u8bef"}, {"GENVPSSTATUS_BLOCKED_WEB", "\u963b\u6b62\u7684\u7f51\u7ad9"}, {"GENVPSSTATUS_BLOCKED_JAVA", "\u963b\u6b62\u7684 Java \u7b49"}, {"GENVPSSTATUS_USER_ACTIVITY", "\u7528\u6237\u6d3b\u52a8"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP \u7edf\u8ba1"}, {"GENVPSSTATUS_ATTACKS", "\u653b\u51fb"}, {"GENVPSSTATUS_DROPPED_TCP", "\u4e22\u5931\u7684 TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "\u4e22\u5931\u7684 UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "\u4e22\u5931\u7684 ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "\u7f51\u7edc\u8c03\u8bd5"}, {"GENVPSSTATUS_DENIED_LAN_IP", "\u62d2\u7edd\u7684 LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "Analyzer \u8bb8\u53ef\u8bc1\u72b6\u6001"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u6765\u89e3\u51b3\\\"\u672a\u6388\u6743\\\"\u95ee\u9898:<br/>&nbsp;&nbsp;\u6b65\u9aa4 1 - <a href=\"http://www.MySonicWall.com\" target=new>\u5355\u51fb\u6b64\u5904\u5728 MySonicWall.com \u4e0a\u9a8c\u8bc1\u6216\u6fc0\u6d3b\u8bb8\u53ef\u8bc1\u3002</a><br/>&nbsp;&nbsp;\u6b65\u9aa4 2 - \u5982\u679c\u8bb8\u53ef\u8bc1\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c<a href=\"javascript:synchronizeInfo();\">\u8bf7\u5355\u51fb\u6b64\u5904\u540c\u6b65\u8bb8\u53ef\u8bc1\u4fe1\u606f\u3002</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "\uff08\u5c1d\u8bd5\u8bbf\u95ee MySonicWall.com \u65f6\u51fa\u73b0\u901a\u4fe1\u6545\u969c\uff09<br/>&nbsp;&nbsp;\u786e\u8ba4 GMSVP Web \u670d\u52a1\u5668\u80fd\u591f\u8bbf\u95ee www.MySonicWall.com\u3002"}, {"COMPONENT", "\u8bf4\u660e"}, {"COMPONENT_LC", "\u7ec4\u4ef6"}, {"FILE_SIZE", "\u6587\u4ef6\u5927\u5c0f (KB)"}, {"IP_ADDRESS", "IP \u5730\u5740"}, {"CURRENT_VERSION", "\u5f53\u524d\u7248\u672c"}, {"LATEST_VERSION", "\u6700\u65b0\u7248\u672c"}, {"RELEASE_NOTES", "\u53d1\u884c\u8bf4\u660e"}, {"LAST_DOWNLOADED", "\u6700\u8fd1\u4e0b\u8f7d"}, {"RELEASE_DATE", "\u53d1\u884c\u65e5\u671f"}, {"DOWNLD_NEW", "\u4e0b\u8f7d\u65b0 "}, {"SOFTWARE_UPDATES", "\u8f6f\u4ef6\u66f4\u65b0"}, {"DEL_SEL_COMPS_FROM_LIST", "\u4ece\u5217\u8868\u4e2d\u5220\u9664\u9009\u5b9a\u7684\u7ec4\u4ef6"}, {"LIC_DELETE_MSG", "\u60a8\u4e0d\u80fd\u5220\u9664"}, {"LIC_PATCH_MSG", "\u4ee5\u4e0b\u7ec4\u4ef6\u7684\u4fee\u8865\u7a0b\u5e8f\u4e0d\u53ef\u7528\u5e76\u4e14\u4e0d\u4f1a\u4e0b\u8f7d\uff1a"}, {"LIC_NEW_GMS_SW", "\u65b0 GMS \u8f6f\u4ef6"}, {"LIC_CONSOLE", "\u63a7\u5236\u53f0"}, {"LIC_SELECT_COMPONENT", "\u8bf7\u9009\u62e9\u4e00\u4e2a\u7ec4\u4ef6\u3002"}, {"CHAP_TESTING", "CHAP \u6d4b\u8bd5"}, {"CHAP_RADIUS_TESTING_MSG", "\u8bf7\u6ce8\u610f\uff0cCHAP \u9a8c\u8bc1\u4ec5\u4e0e\u652f\u6301\u7684 RADIUS \u670d\u52a1\u5668\u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u4e14\u5728 \u67d0\u4e9b\u60c5\u51b5\u4e0b\u5c06\u9700\u8981\u670d\u52a1\u5668\u914d\u7f6e\u4e3a\u5b58\u50a8\u53ef\u9006\u5bc6\u7801\u3002"}, {"CHAP_LDAP_TESTING_MSG", "\u8bf7\u6ce8\u610f\uff0cCHAP \u9a8c\u8bc1\u5c06\u4ec5\u4e0e\u652f\u6301\u901a\u8fc7 LDAP \u68c0\u7d22\u7528\u6237\u5bc6\u7801\u7684\u670d\u52a1\u5668\u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u4e14\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5c06\u9700\u8981 LDAP \u670d\u52a1\u5668\u914d\u7f6e\u4e3a\u5b58\u50a8\u53ef\u9006\u5bc6\u7801\u3002"}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "\u8fd8\u8981\u6ce8\u610f\u7684\u662f\uff0cCHAP \u4e0d\u80fd\u4e0e Microsoft Active Directory \u6216 Novell eDirectory \u4e00\u8d77\u4f7f\u7528"}, {"PERF_NO_SUMMARIZER", "\u6ca1\u6709\u5f53\u524d\u53ef\u7528\u7684\u6458\u8981\u751f\u6210\u5668\u6027\u80fd\u6307\u6807\u3002"}, {"PERF_SUMMARIZER_INFO", "\u6458\u8981\u751f\u6210\u5668\u4fe1\u606f"}, {"PERF_SUMMARIZER", "\u6458\u8981\u751f\u6210\u5668"}, {"PERF_SYSLOG_INFO", "\u6570\u636e\u6587\u4ef6\u683c\u5f0f"}, {"PERF_SYSLOG_FILE_TYPE", "\u6570\u636e\u6587\u4ef6\u7c7b\u578b"}, {"PERF_FILE_STATS", "\u6587\u4ef6\u7edf\u8ba1"}, {"PERF_OLDEST", "\u6700\u65e7"}, {"PERF_PRD_LABEL", "\u5904\u7406\u7684\u6587\u4ef6"}, {"PERF_SRC_LABEL", "\u5206\u7ec4\u7684\u6587\u4ef6"}, {"PERF_UNP_LABEL", "\u672a\u5904\u7406\u7684\u6587\u4ef6"}, {"PERF_NMM_LABEL", "\u4e0d\u662f\u6211\u7684\u6587\u4ef6"}, {"PERF_IMF_LABEL", "\u611f\u67d3\u7684\u6587\u4ef6"}, {"PERF_ZIP_LABEL", "\u5f52\u6863\u7684\u6587\u4ef6"}, {"PERF_PRE_LABEL", "\u65e0\u6548\u7684\u65e5\u5fd7\u6587\u4ef6"}, {"PERF_UPE_LABEL", "\u9519\u8bef\u7684\u4e0a\u4f20\u6587\u4ef6"}, {"PERF_UPD_LABEL", "\u4e0a\u4f20\u7684\u6587\u4ef6"}, {"PERF_UPL_LABEL", "\u4e0a\u4f20\u5f85\u5904\u7406\u7684\u6587\u4ef6"}, {"PERF_RDB_LABEL", "\u62a5\u544a\u6570\u636e\u5e93"}, {"PERF_OPT_STATE_LABEL", "\u4f18\u5316\u72b6\u6001"}, {"PERF_OPT_PENDING_LABEL", "\u6682\u505c\u7684\u4f18\u5316"}, {"PERF_OPT_TOTAL_LABEL", "\u672a\u4f18\u5316\u603b\u5929\u6570"}, {"PERF_BKP_LABEL", "\u5907\u4efd\u6587\u4ef6"}, {"PERF_FILE_ELEMENT", "\u6587\u4ef6 - "}, {"PERF_THREAD_INFO", "\u6458\u8981\u751f\u6210\u5668\u5904\u7406\u8be6\u7ec6\u4fe1\u606f"}, {"PERF_NUM_THREADS", "\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570"}, {"PERF_SUMMARIZER_IDLE", "\u6458\u8981\u751f\u6210\u5668\u7a7a\u95f2\u3002"}, {"PERF_THREAD", "\u7ebf\u7a0b"}, {"PERF_FIREWALL", "\u8bbe\u5907"}, {"PERF_FILE", "\u6587\u4ef6"}, {"PERF_STATE", "\u72b6\u6001"}, {"PERF_START_TIME", "\u5f00\u59cb\u4e8e"}, {"PERF_SUMMARIZER_STATS", "\u6458\u8981\u751f\u6210\u5668\u7edf\u8ba1"}, {"PERF_PAST_24", "\u5728\u8fc7\u53bb 24 \u5c0f\u65f6\u5185\uff08\u81ea\u4ece "}, {"PERF_PAST_7_DAYS", "\u5728\u8fc7\u53bb 7 \u5929\u5185\uff08\u81ea\u4ece "}, {"PERF_PAST_30_DAYS", "\u5728\u8fc7\u53bb 30 \u5929\u5185\uff08\u81ea\u4ece "}, {"PERF_NUM_SYSLOGS", "\u4ee5\u4e0b\u9879\u4e2d\u6c47\u603b\u7684 Syslogs \u6570 "}, {"PERF_AVERAGE_PER_MINUTE", "\u6bcf\u5206\u949f\u6458\u8981\u7684\u5e73\u5747 Syslog"}, {"PERF_NOT_ACTIVE", "\u8fc7\u53bb 7 \u5929\u5185\u6ca1\u6709\u6c47\u603b\u4efb\u4f55\u6570\u636e"}, {"PERF_NO_GEN2", "\u6458\u8981\u751f\u6210\u5668\u6027\u80fd\u6307\u6807\u4ec5\u9002\u7528\u4e8e\u5206\u5e03\u5f0f\u6458\u8981\u751f\u6210\u5668\u914d\u7f6e"}, {"PERF_MEM_USAGE", "\u6458\u8981\u751f\u6210\u5668\u5185\u5b58\u6d88\u8017"}, {"PERF_LAST_RUN", "\u4e0a\u6b21\u8fd0\u884c\u65f6\u95f4"}, {"PERF_NEXT_RUN", "\u4e0b\u6b21\u8fd0\u884c\u65f6\u95f4"}, {"PERF_SUMMARIZER_STATISTICS", "\u8fc7\u53bb 7 \u5929\u5185\u7684\u6458\u8981\u751f\u6210\u5668\u72b6\u6001"}, {"PERF_SUMMARIZER_UTILIZATION", "\u6458\u8981\u751f\u6210\u5668\u4f7f\u7528\u7387"}, {"PERF_TOTAL_RUN_TIME", "\u6bcf\u5929\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "\u4f30\u8ba1\u7684\u5bb9\u91cf"}, {"PERF_METRIC_SYSLOG", "\uff08\u767e\u4e07 syslog/\u5929\uff09"}, {"PERF_METRIC_XML", "\uff08XML \u6587\u4ef6/\u5929\uff09"}, {"PERF_TOTAL_LOAD", "\u5e73\u5747\u8d1f\u8f7d"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "\u6458\u8981\u7684\u5e73\u5747 Syslog\uff08\u767e\u4e07/\u5929\uff09"}, {"PERF_TOTAL_FILES_SUMMARIZED", "\u6bcf\u5929\u6458\u8981\u7684\u5e73\u5747 XML \u6587\u4ef6"}, {"PERF_NO_DATA_SUMMARIZED", "\u5728\u8fc7\u53bb\u76847\u5929\uff0c\u6ca1\u6709\u6570\u636e\u53ef\u4ee5\u603b\u7ed3"}, {"PERF_REPORTING_INFO", "\u62a5\u544a\u8be6\u7ec6\u4fe1\u606f"}, {"PERF_TOP_UNITS", "\u6458\u8981\u751f\u6210\u5668\u4f7f\u7528\u60c5\u51b5\u8bbe\u5907\u6392\u540d"}, {"PERF_UNIT_NAME", "\u8bbe\u5907"}, {"PERF_REPORTING_DB_SIZE", "\u62a5\u544a\u6570\u636e\u5e93\u5927\u5c0f"}, {"PERF_BACKUPS_DIR_SIZE", "\u5907\u4efd\u76ee\u5f55\u5927\u5c0f"}, {"PERF_SYSLOG_DIR_SIZE", "\u539f\u59cb\u6570\u636e\u76ee\u5f55\u5927\u5c0f"}, {"PERF_CACHE_SIZE", "\u4f30\u8ba1\u7684\u7f13\u5b58\u5927\u5c0f"}, {"PERF_BAD_DIR_SIZE", "\u9519\u8bef\u6570\u636e\u76ee\u5f55\u5927\u5c0f"}, {"PERF_PER_SUMMARIZER_INFO", "\u6458\u8981\u751f\u6210\u5668\u8be6\u7ec6\u4fe1\u606f "}, {"PERF_AVG_UTILIZATION", "\u5e73\u5747\u6458\u8981\u751f\u6210\u5668\u4f7f\u7528\u7387"}, {"PERF_PEAK_UTILIZATION", "\u5cf0\u503c\u6458\u8981\u751f\u6210\u5668\u4f7f\u7528\u7387"}, {"NMM_DETAILS", "\u8bbe\u5907\u53d1\u9001\u7684\u4e0d\u4f4d\u4e8e\u201c\u62a5\u544a\u548c\u7ba1\u7406\u201d\u4e0b\u7684 Syslog"}, {"NMM_SERIALS", "\u6458\u8981\u751f\u6210\u5668\u7684\u8bbe\u5907\u7684\u5e8f\u5217\u53f7 "}, {"NO_NMM_SERIAL", "\u8bbe\u5907\u53d1\u9001\u7684 syslog \u5747\u4f4d\u4e8e\u201c\u62a5\u544a\u548c\u7ba1\u7406\u201d\u4e0b "}, {"MISCONFIGURED_SERIALS", "\u8bef\u914d\u7f6e\u7684\u8bbe\u5907\u7684\u5e8f\u5217\u53f7 "}, {"NO_MISCONFIGURED_SERIALS", "\u6ca1\u6709\u8bef\u914d\u7f6e\u7684\u8bbe\u5907 "}, {"NMM_MSG_NOTE", "\u6ce8: "}, {"NMM_MSG1", "* \u767b\u5f55\u5230\u8bbe\u5907\u5e76\u7981\u7528 syslog"}, {"NMM_MSG2", "* \u5982\u679c\u60a8\u65e0\u6743\u8bbf\u95ee\u8bbe\u5907\uff0c\u8bf7\u4f7f\u7528\u7f51\u5173\u89c4\u5219\u6765\u963b\u6b62\u5e8f\u5217"}, {"NMM_MSG3", "* \u8981\u4fee\u590d\u8bef\u914d\u7f6e\u7684\u7cfb\u5217\uff0c\u8bf7\u767b\u5f55\u5230\u8bbe\u5907\u5e76\u66f4\u6539 GMS \u8bbe\u7f6e"}, {"NMM_MSG4", "* \u6b64\u5904\u5217\u51fa\u7684\u5e8f\u5217\u6bcf 12 \u5c0f\u65f6\u5237\u65b0\u4e00\u6b21"}, {"PERF_SUMMARIZER_STATUS", "\u72b6\u6001"}, {"PERF_DEPLOYMENT_STATUS", "\u90e8\u7f72\u72b6\u6001"}, {"PERF_MSG_HIGH_CAPACITY", "\u6458\u8981\u751f\u6210\u5668\u4ee5\u6781\u9ad8\u7684\u5bb9\u91cf\u8fd0\u884c\u65f6\uff0c\u8bf7\u91cd\u65b0\u5206\u914d\u8bbe\u5907\u3002"}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "\u90e8\u7f72\u4e2d\u7684\u4e00\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u6458\u8981\u751f\u6210\u5668\u5728\u8fc7\u53bb\u7684 7 \u5929\u4e2d\u5df2\u8d85\u8fc7\u4e86\u5176\u8fd0\u884c\u5bb9\u91cf\u3002\u68c0\u67e5\u6458\u8981\u751f\u6210\u5668\u5229\u7528\u7387\u90e8\u5206\u7684\u72b6\u6001\u5217\uff0c\u7136\u540e\u8bbf\u95ee GMS \u7f51\u7ad9\uff0c\u67e5\u770b\u5173\u4e8e\u5982\u4f55\u7ba1\u7406\u90e8\u7f72\u7684\u66f4\u591a\u4fe1\u606f\u3002"}, {"PERF_MSG_REASSIGN_UNITS", "\u8bf7\u91cd\u65b0\u5206\u914d\u4ee3\u7406\u4e4b\u95f4\u7684\u8bbe\u5907\u3002"}, {"PERF_MSG_DISK_LOW", "\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\uff0c\u8bf7\u989d\u5916\u6dfb\u52a0\u78c1\u76d8\u6216\u589e\u52a0\u78c1\u76d8\u5206\u914d\u3002"}, {"PERF_MSG_DISK_LOW_RDB", "\u7528\u4e8e\u62a5\u544a\u6570\u636e\u5e93\u7684\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\uff0c\u8bf7\u989d\u5916\u6dfb\u52a0\u78c1\u76d8\u6216\u589e\u52a0\u78c1\u76d8\u5206\u914d\u3002"}, {"PERF_MSG_CAPACITY_PLANNING", "\u8bf7\u8bbf\u95ee <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS \u7f51\u7ad9</a>\u4e86\u89e3\u6709\u5173\u5982\u4f55\u7ba1\u7406\u60a8\u7684\u90e8\u7f72\u7684\u66f4\u591a\u4fe1\u606f\u3002"}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "\u6ce8:\u5e73\u5747\u8d1f\u8f7d\u548c\u4f30\u8ba1\u7684\u5bb9\u91cf\u662f\u7279\u5b9a\u4e8e\u90e8\u7f72\u7684\uff0c\u5176\u5728\u7cfb\u7edf\u4e2d\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002"}, {"PERF_OF", "/"}, {"PERF_ON_DISK", "\u5728\u78c1\u76d8\u4e0a"}, {"PERF_OPT_EXPORT_PROGRESS", "\u6b63\u5728\u5bfc\u51fa"}, {"PERF_OPT_EXPORT_DONE", "\u5bfc\u51fa\u5b8c\u6210"}, {"PERF_OPT_DELETE_PROGRESS", "\u6b63\u5728\u5220\u9664"}, {"PERF_OPT_DELETE_DONE", "\u5220\u9664\u5b8c\u6210"}, {"PERF_OPT_IMPORT_PROGRESS", "\u6b63\u5728\u5bfc\u5165"}, {"PERF_OPT_QUEUED_UP", "\u5df2\u6392\u961f"}, {"PERF_OPT_IDLE", "\u95f2\u7f6e"}, {"PERF_OPT_CURRENT", "\u5f53\u524d"}, {"PERF_OPT_INFO", "\u4f18\u5316\u4fe1\u606f"}, {"PERF_XML_FILE_INFO", "XML \u6587\u4ef6\u4fe1\u606f"}, {"PERF_XML_LABEL", "\u672a\u5904\u7406\u7684 XML \u6587\u4ef6"}, {"PERF_XPG_LABEL", "\u6b63\u5728\u5904\u7406\u7684\u6587\u4ef6"}, {"PERF_XPD_LABEL", "\u5df2\u5f52\u6863\u7684\u6587\u4ef6"}, {"PERF_XPE_LABEL", "\u65e0\u6548\u7684\u6587\u4ef6"}, {"ALERT_NO_ALERTS", "\u6b64\u65f6\u6ca1\u6709\u6b64\u90e8\u5206\u7684\u6d3b\u52a8\u8b66\u62a5\u3002"}, {"ALERT_DESCRIPTION", "\u8bf4\u660e"}, {"ALERT_NODE_NAME", "\u8bbe\u5907\u540d\u79f0"}, {"ALERT_SEVERITY", "\u4e25\u91cd\u6027"}, {"ALERT_LISTING", "\u8b66\u62a5\u5217\u8868"}, {"CAL_SUN", "\u5468\u65e5"}, {"CAL_MON", "\u5468\u4e00"}, {"CAL_TUE", "\u5468\u4e8c"}, {"CAL_WED", "\u5468\u4e09"}, {"CAL_THU", "\u5468\u56db"}, {"CAL_FRI", "\u5468\u4e94"}, {"CAL_SAT", "\u5468\u516d"}, {"CAL_JAN", "\u4e00\u6708"}, {"CAL_FEB", "\u4e8c\u6708"}, {"CAL_MAR", "\u4e09\u6708"}, {"CAL_APR", "\u56db\u6708"}, {"CAL_MAY", "\u4e94\u6708"}, {"CAL_JUN", "\u516d\u6708"}, {"CAL_JUL", "\u4e03\u6708"}, {"CAL_AUG", "\u516b\u6708"}, {"CAL_SEP", "\u4e5d\u6708"}, {"CAL_OCT", "\u5341\u6708"}, {"CAL_NOV", "\u5341\u4e00\u6708"}, {"CAL_DEC", "\u5341\u4e8c\u6708"}, {Integer.toString(1), "\u6210\u529f\u6267\u884c\u4efb\u52a1\uff1a "}, {Integer.toString(0), "\u6267\u884c\u4efb\u52a1\u5931\u8d25\u3002"}, {Integer.toString(42), "\u6210\u529f\u6267\u884c\u4efb\u52a1\uff0c\u8fd4\u56de\u8b66\u544a\uff1a "}, {Integer.toString(10), "\u547d\u4ee4\u6210\u529f\u6267\u884c\u3002"}, {Integer.toString(-12), "\u547d\u4ee4\u6267\u884c\u90e8\u5206\u6216\u5b8c\u5168\u5931\u8d25\u3002"}, {Integer.toString(-57), "\u7528\u6237\u6743\u9650\u4e0d\u8db3\u4ee5\u6267\u884c\u6b64\u64cd\u4f5c\u3002"}, {Integer.toString(-58), "\u6ca1\u6709\u5904\u7406\u547d\u4ee4\u7684\u4fe1\u606f\u3002"}, {Integer.toString(-59), "\u8be5\u64cd\u4f5c\u65e0\u6cd5\u968f\u65f6\u6267\u884c\u3002"}, {Integer.toString(-56), "\u53ea\u6709\u672c\u5730\u57df\u7ba1\u7406\u5458\u7ec4\u7684\u7528\u6237\u624d\u6709\u6743\u9650\u6267\u884c\u6b64\u547d\u4ee4\u3002"}, {Integer.toString(2), "\u6210\u529f\u6267\u884c\u65b0\u56fa\u4ef6\u68c0\u67e5\uff0c\u4f46\u6ca1\u6709\u53ef\u7528\u7684\u65b0\u56fa\u4ef6 "}, {Integer.toString(3), "\u4efb\u52a1\u7684\u540e\u7aef\u64cd\u4f5c\u4ee5\u524d\u5df2\u6210\u529f\u6267\u884c\uff1a "}, {Integer.toString(4), "\u4efb\u52a1\u7684\u66f4\u65b0\u6570\u636e\u5e93\u64cd\u4f5c\u6210\u529f\uff1a "}, {Integer.toString(5), "\u8bbe\u5907\u53ef\u7528\u4e8e\u5347\u7ea7\u4ee5\u53ca\u6ce8\u518c"}, {Integer.toString(6), "\u514d\u8d39\u8bd5\u7528\u4e0d\u9002\u7528\u4e8e\u8be5\u8bbe\u5907"}, {Integer.toString(7), "\u8bbe\u5907\u53ef\u7528\u4e8e\u5347\u7ea7\u4f46\u4e0d\u53ef\u7528\u4e8e\u6ce8\u518c"}, {Integer.toString(8), "\u8bbe\u5907\u53ef\u7528\u4e8e\u6ce8\u518c\u4f46\u4e0d\u53ef\u7528\u4e8e\u5347\u7ea7"}, {Integer.toString(-1), "\u8bbe\u5907\u7684\u67d0\u4e9b\u53c2\u6570\u6ca1\u6709\u6b63\u786e\u914d\u7f6e\u3002"}, {Integer.toString(-53), "\u8bbe\u5907\u4e0d\u652f\u6301\u591a\u540d\u7ba1\u7406\u5458\u540c\u65f6\u767b\u5f55\u3002"}, {Integer.toString(-63), "\u7f3a\u5c11\u767b\u5f55\u7684\u8bbe\u5907\u51ed\u8bc1\u3002"}, {Integer.toString(-69), "\u7b49\u5f85\u83b7\u53d6\u5f53\u524d\u767b\u5f55 ip \u5730\u5740\u3002"}, {Integer.toString(-70), "JVM OOM\uff1a\u5185\u5b58\u4e0d\u8db3\u65e0\u6cd5\u7ee7\u7eed\uff0c\u5c06\u5728\u4e0b\u6b21\u8fd0\u884c\u65f6\u91cd\u8bd5\u4efb\u52a1"}, {Integer.toString(-64), "\u65e0\u6cd5\u83b7\u53d6\u53d7\u63a7\u88c5\u7f6e\u7684\u8eab\u4efd\u9a8c\u8bc1\u9875\u9762\u4ee5\u8fdb\u884c\u767b\u5f55\u3002"}, {Integer.toString(-64) + "_TT", "- \u8bbe\u5907\u5728\u7ba1\u7406\u5730\u5740\u4e0d\u53ef\u8bbf\u95ee\u3002\n- \u8bbe\u5907\u4e0d\u652f\u6301\u5e76\u884c\u767b\u5f55\uff0c\n\u786e\u8ba4\u6d4f\u89c8\u5668\u662f\u5426\u5df2\u76f4\u63a5\u767b\u5f55\u5230\u8bbe\u5907\u3002"}, {Integer.toString(-65), "\u767b\u5f55\u540e\u65e0\u54cd\u5e94\u3002"}, {Integer.toString(-83), "\u767b\u5f55\u5931\u8d25\uff0c\u539f\u56e0\u662f\u5e8f\u5217\u53f7\u4e0d\u5339\u914d\u3002"}, {Integer.toString(-83) + "_TT", "- \u6dfb\u52a0\u8bbe\u5907\u5230 GMS \u65f6\u6307\u5b9a\u7684\u5e8f\u5217\u53f7\n\u4e0e\u8bbe\u5907\u7684\u5e8f\u5217\u53f7\u4e0d\u5339\u914d\u3002"}, {Integer.toString(-84), "\u767b\u5f55\u5931\u8d25\uff0c\u56e0\u4e3a\u6307\u5b9a\u7684\u767b\u5f55\u6a21\u5f0f\u65e0\u6548\u3002"}, {Integer.toString(-84) + "_TT", "- \u6307\u5b9a\u7684\u767b\u5f55\u6a21\u5f0f\u4e0d\u5c5e\u4e8e\u5141\u8bb8\u6a21\u5f0f\u5217\u8868\u3002\n"}, {Integer.toString(-2), "\u8bbe\u5907\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\u3002"}, {Integer.toString(-918), "[CN]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "\u8be5\u8bbe\u5907\u4f7f\u7528\u5177\u6709 MD5 \u7b7e\u540d\u7684 SSL \u8bc1\u4e66\uff0c\u4f46\u51fa\u4e8e\u5b89\u5168\u539f\u56e0\uff0cMD5 \u7b7e\u540d\u4e0d\u518d\u53d7\u652f\u6301\u3002\u8bf7\u91cd\u65b0\u751f\u6210\u8bc1\u4e66\u4ee5\u7ba1\u7406\u6b64\u8bbe\u5907\u3002"}, {Integer.toString(-917), "\u8bbe\u5907\u6ca1\u6709\u7528\u4e8e\u6267\u884c\u6b64\u4efb\u52a1\u7684\u8bb8\u53ef\u8bc1\u3002"}, {Integer.toString(-71), "\u8bbe\u5907\u7684\u8bbf\u95ee url \u65e0\u6548\u3002"}, {Integer.toString(-71) + "_TT", "- \u65e0\u6cd5\u4ece\u8bbe\u5907\u83b7\u53d6 IP \u5730\u5740\u3002"}, {Integer.toString(-72), "\u8bf7\u6c42\u72b6\u6001 xml \u5931\u8d25\u3002"}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "\u8bf7\u6c42\u72b6\u6001 xml \u5931\u8d25\uff0c\u6ca1\u6709\u6536\u5230\u54cd\u5e94\u3002"}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "\u8bf7\u6c42\u9996\u9009\u9879\u6587\u4ef6\u5931\u8d25\u3002"}, {Integer.toString(-950), "[CN]Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "\u8bf7\u6c42\u9996\u9009\u9879\u6587\u4ef6\u5931\u8d25\uff0c\u6ca1\u6709\u6536\u5230\u54cd\u5e94\u3002"}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "\u9996\u9009\u9879\u6587\u4ef6\u65e0\u6548\u3002"}, {Integer.toString(-76) + "_TT", "- \u6ca1\u6709\u6536\u5230\u9996\u9009\u9879\u6587\u4ef6\u3002\n- \u83b7\u53d6\u7684\u9996\u9009\u9879\u6587\u4ef6\u53ef\u80fd\u5df2\u635f\u574f\u3002\n- \u9996\u9009\u9879\u6587\u4ef6\u53ef\u80fd\u4e0d\u5b8c\u6574\u3002"}, {Integer.toString(-77), "\u8bbe\u5907\u83b7\u53d6\u5931\u8d25\u3002"}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "\u6536\u5230\u5fc3\u8df3\u6d88\u606f\u3002"}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "\u672a\u6536\u5230\u5fc3\u8df3\u6d88\u606f\u3002"}, {Integer.toString(-78) + "_TT", "- \u672a\u4ece\u8bbe\u5907\u53d1\u9001\u5fc3\u8df3\u6d88\u606f\u3002\n- \u4ece\u8bbe\u5907\u53d1\u9001\u7684\u5fc3\u8df3\u6d88\u606f\u65e0\u6cd5\u5230\u8fbe GMS\u3002\n- \u672a\u5728 GMS \u7f51\u5173\u4e0a\u521b\u5efa SA\uff08\u96a7\u9053\uff09\u3002\n- \u672a\u5728 GMS \u7f51\u5173\u4e0a\u521b\u5efa\u5141\u8bb8 Syslog \u7684\u89c4\u5219\u3002\n- \u4f8b\u5982\u8bbe\u5907 - \u8bf7\u9075\u5faa\u201c\u63a7\u5236\u53f0-Web \u670d\u52a1-\u5206\u53d1\u7684\u90e8\u7f72\u201d\u4e2d\u201c\u6ce8:\u201d\u90e8\u5206\u4e2d\u6240\u8ff0\u7684\u8bf4\u660e\u3002"}, {Integer.toString(-79), "\u6536\u5230\u7684\u5fc3\u8df3\u6d88\u606f\u65e0\u6cd5\u89e3\u5bc6\u3002"}, {Integer.toString(-79) + "_TT", "- \u6dfb\u52a0\u8bbe\u5907\u5230 GMS \u65f6\u6307\u5b9a\u7684\u5bc6\u7801\n\u4e0e\u8bbe\u5907\u7684\u5bc6\u7801\u4e0d\u5339\u914d\u3002"}, {Integer.toString(13), "\u6536\u5230 syslog \u6d88\u606f\u3002"}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "\u672a\u6536\u5230 syslog \u6d88\u606f\u3002"}, {Integer.toString(-81) + "_TT", "- Syslog \u6d88\u606f\u5e76\u975e\u6765\u81ea\u8bbe\u5907\u3002D138- \u4ece\u8bbe\u5907\u53d1\u9001\u7684 Syslog \u6d88\u606f\u4e0d\u80fd\u5230\u8fbe GMS\u3002\n- \u672a\u5728 GMS \u7f51\u5173\u4e0a\u521b\u5efa SA\uff08\u96a7\u9053\uff09\u3002\n- \u672a\u5728 GMS \u7f51\u5173\u4e0a\u521b\u5efa\u5141\u8bb8 Syslog \u7684\u89c4\u5219\u3002"}, {Integer.toString(-82), "\u6536\u5230\u7684 syslog \u6d88\u606f\u65e0\u6cd5\u89e3\u5bc6\u3002"}, {Integer.toString(-82) + "_TT", "- \u6dfb\u52a0\u8bbe\u5907\u5230 GMS \u65f6\u6307\u5b9a\u7684\u5bc6\u7801\n\u4e0e\u8bbe\u5907\u7684\u5bc6\u7801\u4e0d\u5339\u914d\u3002"}, {Integer.toString(12), "\u8bbe\u5907\u5df2\u6dfb\u52a0;\u7b49\u5f85\u52a0\u5165GMS."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "\u8bbe\u5907\u5df2\u6dfb\u52a0;\u7b49\u5f85\u52a0\u5165GMS."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "\u65e0\u6cd5\u8bbf\u95ee\u8bbe\u5907\u3002\u8bbe\u5907\u6216\u7f51\u7edc\u65e0\u6cd5\u5173\u95ed\u3002"}, {Integer.toString(-4), "\u81f3\u5c11\u4e00\u4e2a\u8bbe\u5907\u53c2\u6570\u914d\u7f6e\u4e0d\u6b63\u786e\u3002"}, {Integer.toString(-5), "SonicWall \u6ce8\u518c\u7f51\u7ad9\u65e0\u6cd5\u8bbf\u95ee\u3002"}, {Integer.toString(-6), "\u5347\u7ea7/\u8ba2\u9605\u7684\u6fc0\u6d3b\u7801\u65e0\u6548\u3002"}, {Integer.toString(-7), "\u8bbe\u5907\u672a\u6ce8\u518c\u3002"}, {Integer.toString(-8), "SonicWall GMS \u6ce8\u518c\u7f51\u7ad9\u5df2\u5173\u95ed\uff0c\u6216\u8005\u65e0\u6cd5\u8bbf\u95ee\u3002\u8bf7\u68c0\u67e5 SonicWall GMS \u670d\u52a1\u5668\u7684 Internet \u8bbf\u95ee\u3002"}, {Integer.toString(-9), "\u6ca1\u6709\u53ef\u7528\u4e8e\u5347\u7ea7\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-10), "\u5f53\u524d\u5c1d\u8bd5\u6dfb\u52a0\u7684\u8bbe\u5907\u5df2\u5728 SonicWall GMS \u7684\u7ba1\u7406\u4e4b\u4e0b\u3002"}, {Integer.toString(-11), "\u5c1d\u8bd5\u914d\u7f6e\u65e0\u6548\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-15), "\u5c1d\u8bd5\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u670d\u52a1\u7684\u89c4\u5219\u3002"}, {Integer.toString(-16), "\u8fdd\u53cd SonicWall \u8bb8\u53ef\u8bc1\u3002"}, {Integer.toString(-17), "SonicWall GMS \u5185\u90e8\u9519\u8bef\u3002"}, {Integer.toString(-18), "\u4e0b\u8f7d\u5185\u5bb9\u8fc7\u6ee4\u5668\u5217\u8868\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-19), "\u5c1d\u8bd5\u5220\u9664\u5b58\u5728\u89c4\u5219\u7684\u670d\u52a1\u3002"}, {Integer.toString(-47), "\u65e0\u6cd5\u8054\u7cfb AV \u670d\u52a1\u5668"}, {Integer.toString(-20), "\u5185\u90e8 AV \u9519\u8bef"}, {Integer.toString(-21), "\u5f85\u5904\u7406\u7684 AV \u4efb\u52a1"}, {Integer.toString(-22), "AV \u6fc0\u6d3b\u7801\u65e0\u6548\u3002"}, {Integer.toString(-23), "AV \u6fc0\u6d3b\u7801\u5df2\u7ecf\u4f7f\u7528\u3002"}, {Integer.toString(-24), "AV \u5bc6\u7801\u4e0d\u6b63\u786e\u3002"}, {Integer.toString(-25), "AV \u7eed\u8ba2\u8ba1\u6570\u9519\u8bef\u3002"}, {Integer.toString(-26), "AV \u7eed\u8ba2\u592a\u65e9\u3002"}, {Integer.toString(-27), "\u5c1d\u8bd5\u7ba1\u7406\u6bd4\u63a8\u8350\u66f4\u65e7\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-28), "\u81ea\u52a8\u66f4\u65b0\u670d\u52a1\u5668\u5f53\u524d\u5173\u95ed\u6216\u65e0\u6cd5\u8bbf\u95ee\u3002"}, {Integer.toString(-85), "\u7ba1\u7406\u7cfb\u7edf\u5907\u4efd\u64cd\u4f5c\u5931\u8d25\u3002"}, {Integer.toString(-29), "\u56fa\u4ef6\u65e0\u6cd5\u4e0a\u4f20\u5230\u8bbe\u5907\u3002"}, {Integer.toString(-62), "\u5c1d\u8bd5\u4e0a\u4f20\u5230\u8bbe\u5907\u7684\u56fa\u4ef6\u65e0\u6548\u3002"}, {Integer.toString(-60), "\u56fa\u4ef6\u5347\u7ea7\u7684\u6700\u5927\u6587\u4ef6\u5927\u5c0f\u4e3a 4MB\u3002"}, {Integer.toString(-31), "\u5c06\u56fa\u4ef6\u5199\u5165\u5230\u672c\u5730\u78c1\u76d8\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-30), "\u4e0b\u8f7d\u56fa\u4ef6\u65f6\u51fa\u9519\u3002\u81ea\u52a8\u66f4\u65b0\u670d\u52a1\u5668\u5f53\u524d\u4e0d\u53ef\u7528\u6216\u65e0\u6cd5\u8bbf\u95ee\u3002"}, {Integer.toString(-32), "\u6570\u636e\u5e93\u8bbf\u95ee\u9519\u8bef\u3002"}, {Integer.toString(-33), "\u914d\u7f6e\u8bbe\u5907\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-34), "\u9a8c\u8bc1\u7528\u6237\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-68), "\u57df\u672a\u627e\u5230\u6216\u57df\u540d\u65e0\u6548\u3002"}, {Integer.toString(-35), "\u66f4\u65b0 CMP \u5bc6\u7801\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-36), "\u6ca1\u6709\u53ef\u7528\u4e8e\u6ce8\u518c\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-37), "\u65e0\u6cd5\u8054\u7cfb\u9632\u75c5\u6bd2\u670d\u52a1\u5668\uff0c\u6216\u8005\u9632\u75c5\u6bd2\u670d\u52a1\u5668\u62a5\u544a\u672a\u77e5\u9519\u8bef\u3002"}, {Integer.toString(-38), "\u6ca1\u6709\u53ef\u7528\u4e8e\u6ce8\u518c\u6216\u5347\u7ea7\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-39), "\u6dfb\u52a0\u6fc0\u6d3b\u7801\u5230\u6570\u636e\u5e93\u65f6\u51fa\u73b0\u95ee\u9898\u3002"}, {Integer.toString(-40), "\u5220\u9664\u6fc0\u6d3b\u7801\u65f6\u51fa\u9519\u3002\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u8fd9\u6837\u7684\u6fc0\u6d3b\u7801\u3002"}, {Integer.toString(-41), "\u5220\u9664\u6fc0\u6d3b\u7801\u65f6\u53d1\u751f\u672a\u77e5\u9519\u8bef\u3002"}, {Integer.toString(-48), "\u5347\u7ea7\u5931\u8d25"}, {Integer.toString(-49), "\u62d2\u7edd\u8bbf\u95ee\u4ee5\u6267\u884c CLI \u547d\u4ee4\u3002"}, {Integer.toString(-42), "\u6570\u636e\u5e93\u65e0\u6cd5\u6210\u529f\u66f4\u65b0\u3002"}, {Integer.toString(-43), "\u7535\u5b50\u90ae\u4ef6\u65e0\u6cd5\u53d1\u9001\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u5730\u5740\u3002"}, {Integer.toString(-44), "\u65e0\u6cd5\u4ece\u8bbe\u5907\u68c0\u7d22\u5230\u6280\u672f\u652f\u6301\u62a5\u544a\u3002"}, {Integer.toString(-45), "\u65e0\u6cd5\u4ece\u8bbe\u5907\u68c0\u7d22\u5230 SPD \u6587\u4ef6\u3002"}, {Integer.toString(-46), "\u65e0\u6cd5\u4ece\u8bbe\u5907\u68c0\u7d22\u5230\u8bc1\u4e66\u6587\u4ef6\u3002"}, {Integer.toString(-50), "\u65e0\u6cd5\u540c\u6b65\u96a7\u9053\u72b6\u6001\u76d1\u89c6\u4fe1\u606f\u3002"}, {Integer.toString(-51), "\u65e0\u6cd5\u4ece\u8bbe\u5907\u68c0\u7d22\u5230 RCF \u6587\u4ef6\u3002"}, {Integer.toString(-52), "\u7528\u6237\u5e10\u6237\u5df2\u7981\u7528\uff1b\u767b\u5f55\u5931\u8d25\u3002"}, {Integer.toString(-61), "\u4ee5\u524d\u6267\u884c\u7684\u4efb\u52a1\u9700\u8981\u91cd\u65b0\u542f\u52a8\uff0c\u5c06\u5728\u4e0b\u4e00\u95f4\u9694\u4e2d\u91cd\u8bd5\u4efb\u52a1\u3002"}, {Integer.toString(-229), "\u5982\u9700\u6fc0\u6d3b\u6b64\u670d\u52a1\uff0c\u60a8\u5fc5\u987b\u62e5\u6709\u6709\u6548\u7684\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4\u8ba2\u9605\u3002"}, {Integer.toString(-230), "\u60a8\u7684 Sonic OS \u7248\u672c\u4e0d\u652f\u6301\u96c6\u7fa4\uff08\u591a\u8282\u70b9\u8ba2\u9605\uff09\u3002\u8bf7\u5347\u7ea7\u6216\u4f7f\u7528\u5355\u8282\u70b9\u5bc6\u94a5\u3002"}, {Integer.toString(-231), "\u60a8\u4e0d\u80fd\u6df7\u5408\u4e0d\u540c WANOPT \u578b\u53f7\u7684\u6fc0\u6d3b\u5bc6\u94a5\u3002"}, {Integer.toString(-232), "\u60a8\u7684 WANOPT \u6a21\u578b\u4e0d\u652f\u6301\u96c6\u7fa4\uff08\u591a\u8282\u70b9\u8ba2\u9605\uff09\u3002"}, {Integer.toString(-201), "API \u53c2\u6570\u51fa\u9519\u3002"}, {Integer.toString(-202), "\u7528\u6237\u5df2\u767b\u5f55\u3002"}, {Integer.toString(-203), "\u6b64\u7248\u672c\u4e2d\u672a\u5b9e\u73b0 SonicWall GMS API\u3002"}, {Integer.toString(-204), "\u4f1a\u8bdd\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-205), "\u6b63\u5728\u9000\u51fa SonicWall GMS Shell"}, {Integer.toString(-206), "API \u53c2\u6570\u4e22\u5931"}, {Integer.toString(-207), "\u6ca1\u6709\u6b64\u7c7b\u522b\u7684\u884c"}, {Integer.toString(-208), "\u672a\u63d0\u4f9b\u6fc0\u6d3b\u7801"}, {Integer.toString(-209), "\u672a\u6307\u5b9a\u6fc0\u6d3b\u7c7b\u578b"}, {Integer.toString(-210), "IP \u5730\u5740\u65e0\u6548\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-211), "\u6307\u5b9a\u7684\u957f\u5ea6\u5c0f\u4e8e\u6240\u9700\u957f\u5ea6\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-212), "\u5b57\u7b26\u4e32\u53ea\u80fd\u5305\u542b\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-213), "\u5907\u7528\u8c03\u5ea6\u7a0b\u5e8f\u7684 IP \u5730\u5740\u4e0d\u80fd\u4e0e\u4e3b\u8981\u8c03\u5ea6\u7a0b\u5e8f\u7684\u76f8\u540c\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-214), "\u5728\u6307\u5b9a\u7684 IP \u5730\u5740\u672a\u627e\u5230\u8c03\u5ea6\u7a0b\u5e8f\uff1b\u8bbe\u5907\u672a\u6dfb\u52a0\u3002"}, {Integer.toString(-215), "\u6dfb\u52a0\u8bbe\u5907\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-226), "\u60a8\u6ca1\u6709\u6709\u6548\u7684\u8bb8\u53ef\u8bc1\u3002"}, {Integer.toString(-225), "\u89e3\u6790\u8f93\u5165 XML \u65f6\u51fa\u9519"}, {Integer.toString(-228), "\u5728\u8f93\u5165 XML \u4e2d\u627e\u5230\u4e86\u65e0\u6548\u7684\u5185\u5bb9"}, {Integer.toString(-216), "\u62a5\u544a\u7c7b\u578b\u65e0\u6548\u6216\u672a\u77e5\u3002\u4e0d\u77e5\u9053\u62a5\u544a\u662f\u6bcf\u65e5\u3001\u6bcf\u5468\u8fd8\u662f\u6bcf\u6708\u62a5\u544a"}, {Integer.toString(-217), "\u76ee\u6807\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65e0\u6548\u3002\u5e94\u63d0\u4f9b\u81f3\u5c11\u4e00\u4e2a\u6709\u6548\u7684\u76ee\u6807\u5730\u5740"}, {Integer.toString(-218), "\u6e90\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65e0\u6548"}, {Integer.toString(-219), "SMTP \u670d\u52a1\u5668\u5730\u5740\u65e0\u6548"}, {Integer.toString(-220), "\u62a5\u544a\u5217\u8868\u65e0\u6548\u3002\u5e94\u63d0\u4f9b\u81f3\u5c11\u4e00\u4e2a\u6709\u6548\u7684\u62a5\u544a ID"}, {Integer.toString(-221), "\u6570\u636e\u5e93\u4e2d\u6ce8\u518c\u7684 Analyzer \u8c03\u5ea6\u7a0b\u5e8f IP \u5730\u5740\u65e0\u6548"}, {Integer.toString(-222), "\u6570\u636e\u5e93\u4e2d\u6ce8\u518c\u7684 Analyzer \u8c03\u5ea6\u7a0b\u5e8f\u7aef\u53e3\u53f7\u65e0\u6548"}, {Integer.toString(-223), "\u62a5\u544a\u65e5\u671f\u65e0\u6548\u6216\u672a\u77e5\u3002\u63d0\u4f9b\u7684\u62a5\u544a\u65e5\u671f\u5e94\u4e3a mm/dd/yyyy \u683c\u5f0f"}, {Integer.toString(-224), "\u63d0\u4f9b\u7684\u65e5\u7a0b ID \u65e0\u6548"}, {Integer.toString(-502), "zip \u6587\u4ef6\u5bc6\u7801\u4fdd\u62a4\u7684\u5bc6\u7801\u4e22\u5931"}, {Integer.toString(-503), "\u63d0\u4f9b\u7684\u8282\u70b9\u65e0\u6548\u3002\u5e94\u6307\u5b9a\u5e8f\u5217\u53f7\uff08\u7528\u4e8e\u8bbe\u5907\u8282\u70b9\uff09\u6216\u663e\u793a\u540d\u79f0\uff08\u7528\u4e8e\u7ec4\u8282\u70b9\uff09\u3002"}, {Integer.toString(-10001), "\u53d1\u751f\u901a\u4fe1\u9519\u8bef"}, {Integer.toString(-10002), "\u89e3\u6790\u8f93\u5165 XML \u65f6\u51fa\u9519"}, {Integer.toString(-10005), "\u8c03\u7528\u672a\u77e5\u7ec4\u4ef6"}, {Integer.toString(-10006), "\u8c03\u7528\u672a\u77e5\u7684 AV \u65b9\u6cd5"}, {Integer.toString(-10011), "\u5c1d\u8bd5\u5347\u7ea7\u8fc7\u671f\u540e\u7684 AV\u3002"}, {Integer.toString(-10012), "\u5c1d\u8bd5\u5347\u7ea7\u672a\u6ce8\u518c\u8bbe\u5907\u7684 AV\u3002"}, {Integer.toString(-10013), "\u5c1d\u8bd5\u7eed\u8ba2\u6bd4\u5f53\u524d\u652f\u6301\u8282\u70b9\u66f4\u5c11\u7684 AV\u3002"}, {Integer.toString(-10014), "\u5c1d\u8bd5\u7eed\u8ba2 AV \u8fc7\u65e9\u3002"}, {Integer.toString(-10020), "\u66f4\u6539 AV \u5bc6\u7801\u7684\u4ee5\u524d\u4efb\u52a1\u5f85\u5904\u7406\u3002"}, {Integer.toString(-10100), "\u4e0e McAfee \u540e\u7aef\u901a\u4fe1\u65f6\u51fa\u9519"}, {Integer.toString(-10101), "McAfee \u65e0\u6cd5\u627e\u5230\u6b64\u7f51\u7ad9\u7684\u4efb\u4f55\u8bb0\u5f55\u3002"}, {Integer.toString(-10102), "McAfee \u65e0\u6cd5\u5339\u914d\u6b64\u7f51\u7ad9\u7684\u65e7\u5bc6\u7801\u3002"}, {Integer.toString(-10103), "AV \u7f51\u7ad9\u5df2\u6ce8\u518c\u3002"}, {Integer.toString(-10200), "\u4e0e AV \u6570\u636e\u5e93\u670d\u52a1\u5668\u901a\u4fe1\u65f6\u51fa\u9519"}, {Integer.toString(-10201), "\u8bbe\u5907\u5e8f\u5217\u53f7\u5df2\u6ce8\u518c"}, {Integer.toString(-10202), "\u63d0\u4f9b\u7684\u8bb8\u53ef\u8bc1\u5bc6\u94a5\u5df2\u7ecf\u4f7f\u7528"}, {Integer.toString(-10203), "\u4ece\u672a\u6ce8\u518c\u6b64\u8bbe\u5907\u7684\u9632\u75c5\u6bd2"}, {Integer.toString(-10204), "\u63d0\u4f9b\u7684\u591a\u4e2a\u5bc6\u94a5\u5fc5\u987b\u6709\u76f8\u540c\u7684\u671f\u9650"}, {Integer.toString(-10205), "\u514d\u8d39\u8bd5\u7528\u5bc6\u94a5\u4e0d\u5141\u8bb8\u7528\u4e8e\u5347\u7ea7"}, {Integer.toString(-10206), "\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u63d0\u4f9b\u4e86\u975e\u6cd5\u503c"}, {Integer.toString(-10210), "\u63d0\u4f9b\u7684\u5e8f\u5217\u53f7\u65e0\u6548"}, {Integer.toString(-10211), "\u63d0\u4f9b\u7684\u8bb8\u53ef\u8bc1\u5bc6\u94a5\u5df2\u7ecf\u6ce8\u518c"}, {Integer.toString(-10212), "\u63d0\u4f9b\u7684\u65b0\u5bc6\u7801\u6709\u65e0\u6548\u5b57\u7b26\u6216\u957f\u5ea6\u5e76\u975e 6 \u5230 12 \u4e2a\u5b57\u7b26"}, {Integer.toString(-10213), "\u63d0\u4f9b\u7684\u9632\u75c5\u6bd2\u5bc6\u7801\u65e0\u6548"}, {Integer.toString(-10214), "\u63d0\u4f9b\u7684 OEM \u4ee3\u7801\u65e0\u6548"}, {Integer.toString(-10215), "\u63d0\u4f9b\u7684 WAN IP \u5730\u5740\u65e0\u6548"}, {Integer.toString(-10220), "\u6b64\u8bbe\u5907\u4ee5\u524d\u7684\u8bf7\u6c42\u4ecd\u5f85\u5904\u7406"}, {Integer.toString(-10250), "\u8bbe\u5907\u5df2\u6ce8\u518c AV \u5e76\u9700\u8981\u91cd\u65b0\u6fc0\u6d3b\u3002"}, {Integer.toString(-10251), "\u7531\u4e8e\u5bc6\u7801\u65e0\u6548\uff0c\u8bbe\u5907\u65e0\u6cd5\u91cd\u65b0\u6fc0\u6d3b"}, {Integer.toString(-10260), "\u65e0\u6cd5\u627e\u5230\u63d0\u4f9b\u7684\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u5e8f\u5217\u53f7"}, {Integer.toString(-10261), "\u63d0\u4f9b\u7684\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u5e8f\u5217\u53f7\u65e0\u6548"}, {Integer.toString(-10262), "\u8bbe\u5907\u5e76\u975e\u4efb\u4f55\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u6210\u5458"}, {Integer.toString(-10263), "\u8bbe\u5907\u5df2\u6709\u6d3b\u52a8\u7684\u9632\u75c5\u6bd2\u8ba2\u9605\u5e76\u4e14\u65e0\u6cd5\u6dfb\u52a0\u5230\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4"}, {Integer.toString(-10264), "\u8bbe\u5907\u5e76\u975e\u6b64\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u6210\u5458"}, {Integer.toString(-10265), "\u65e0\u6cd5\u5220\u9664\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u6240\u6709\u8005"}, {Integer.toString(-10266), "\u8bbe\u5907\u5df2\u7ecf\u662f\u53e6\u4e00\u4e2a\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u6210\u5458"}, {Integer.toString(-10267), "\u63d0\u4f9b\u7684\u65b0\u8bb8\u53ef\u8bc1\u8ba1\u6570\u8d85\u51fa\u4e86\u53ef\u7528\u8bb8\u53ef\u8bc1\u5171\u4eab\u7ec4\u7684\u8bb8\u53ef\u8bc1\u6570"}, {Integer.toString(-10004), "\u9632\u75c5\u6bd2\u64cd\u4f5c\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\u4e22\u5931"}, {Integer.toString(-10300), "\u65e0\u6cd5\u627e\u5230\u63d0\u4f9b\u7684\u5173\u4e8e\u5168\u9762\u4fdd\u62a4\u5408\u4f5c\u4f19\u4f34\u7684\u4fe1\u606f"}, {Integer.toString(-10301), "\u63d0\u4f9b\u7684\u5168\u9762\u4fdd\u62a4\u5408\u4f5c\u4f19\u4f34\u5bc6\u7801\u4e0d\u6b63\u786e"}, {Integer.toString(-10303), "\u63d0\u4f9b\u7684\u9632\u75c5\u6bd2\u8bb8\u53ef\u8bc1\u8ba1\u6570\u65e0\u6548"}, {Integer.toString(-10304), "\u5c1d\u8bd5\u7ba1\u7406\u6ca1\u6709\u5206\u914d\u7ed9\u5168\u9762\u4fdd\u62a4\u5408\u4f5c\u4f19\u4f34\u7684\u8bbe\u5907"}, {Integer.toString(-20000), "\u4e0e\u540e\u7aef\u6ce8\u518c\u670d\u52a1\u5668\u901a\u4fe1\u65f6\u53d1\u751f\u672a\u77e5\u9519\u8bef\u3002"}, {Integer.toString(-20101), "\u5df2\u4e3a\u8be5\u7528\u6237\u6ce8\u518c\u8bf7\u6c42\u7684\u8054\u7cfb\u3002"}, {Integer.toString(-20102), "\u65e0\u6cd5\u4e3a\u7528\u6237\u6dfb\u52a0\u8bf7\u6c42\u7684\u8054\u7cfb\u3002"}, {Integer.toString(-20106), "\u65e0\u6cd5\u4fee\u6539\uff0c\u539f\u56e0\u662f\u672a\u627e\u5230\u7528\u6237\u4fe1\u606f\u3002"}, {Integer.toString(-20111), "\u672a\u627e\u5230\u8054\u7cfb\u4fe1\u606f\u3002"}, {Integer.toString(-20112), "\u65e0\u6cd5\u4fee\u6539\u8054\u7cfb\u4fe1\u606f\u3002"}, {Integer.toString(-20113), "\u65e0\u6cd5\u5220\u9664\u8054\u7cfb\u4fe1\u606f\u3002"}, {Integer.toString(-20116), "\u8bbe\u5907\u5df2\u6ce8\u518c\u5230\u5176\u4ed6 MySonicWall.com \u5e10\u6237\u3002"}, {Integer.toString(-20117), "\u8bbe\u5907\u6ce8\u518c\u7cfb\u7edf\u4e2d\u672a\u627e\u5230\u6307\u5b9a\u7684\u8bbe\u5907\u3002"}, {Integer.toString(-20118), "\u8bbe\u5907\u65e0\u6cd5\u901a\u8fc7\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u6ce8\u518c\u3002"}, {Integer.toString(-20119), "\u65e0\u6cd5\u68c0\u7d22\u6307\u5b9a\u8bbe\u5907\u7684\u72b6\u6001\u3002"}, {Integer.toString(-20121), "\u6307\u5b9a\u7684\u8bbe\u5907\u672a\u6ce8\u518c\u3002"}, {Integer.toString(-20122), "\u6307\u5b9a\u7684\u6fc0\u6d3b\u5bc6\u94a5\u5df2\u4f7f\u7528\u8fc7\u3002"}, {Integer.toString(-20123), "\u4f7f\u7528\u7684\u6fc0\u6d3b\u7801\u65e0\u6548\u3002"}, {Integer.toString(-20124), "\u4f7f\u7528\u7684\u6fc0\u6d3b\u7801/\u8bbe\u5907\u7ec4\u5408\u65e0\u6548\u3002"}, {Integer.toString(-20125), "\u901a\u8fc7\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u7684\u5347\u7ea7\u672a\u5b8c\u6210\u3002"}, {Integer.toString(-20126), "\u901a\u8fc7\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u7684\u6fc0\u6d3b\u672a\u5b8c\u6210\u3002"}, {Integer.toString(-20131), "\u6ce8\u518c SonicWall GMS \u7cfb\u7edf\u7684\u9519\u8bef MAC \u5730\u5740\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-20132), "SonicWall GMS \u7cfb\u7edf\u672a\u6ce8\u518c\u3002"}, {Integer.toString(-20133), "\u6307\u5b9a\u7684 SonicWall GMS \u5e8f\u5217\u53f7\u65e0\u6548\u3002"}, {Integer.toString(-20134), "\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u65e0\u6cd5\u68c0\u7d22 SonicWall GMS \u72b6\u6001\u3002"}, {Integer.toString(-20135), "SonicWall GMS \u5df2\u6ce8\u518c\u3002"}, {Integer.toString(-20136), "\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u65e0\u6cd5\u6ce8\u518c\u60a8\u7684 SonicWall GMS \u7cfb\u7edf\u3002"}, {Integer.toString(-20142), "\u9519\u8bef\u7684 mac \u5730\u5740\u5df2\u6ce8\u518c\u3002"}, {Integer.toString(-20143), "\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u65e0\u6cd5\u68c0\u7d22 SonicWall GMS \u7684\u53ef\u7528\u5347\u7ea7\u7a0b\u5e8f\u3002"}, {Integer.toString(-20144), "\u6ca1\u6709\u6307\u5b9a\u57fa\u672c\u5305\u671f\u9650\u3002"}, {Integer.toString(-20145), "\u8bfb\u53d6\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u7684\u57fa\u672c\u5305\u7cfb\u7edf\u4fe1\u606f\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-20146), "\u6ca1\u6709\u53ef\u7528\u4e8e\u672c\u4ea7\u54c1\u7684\u8282\u70b9\u5347\u7ea7\u3002"}, {Integer.toString(-20147), "\u60a8\u7684 SonicWall GMS \u5b89\u88c5\u5df2\u6210\u4e3a\u4e00\u4e2a\u96f6\u552e\u7248\u3002"}, {Integer.toString(-20148), "\u8bbe\u5907\u672a\u6ce8\u518c\u3002"}, {Integer.toString(-20149), "\u5728\u540e\u7aef\u6ce8\u518c\u670d\u52a1\u5668\u4e2d\u68c0\u7d22\u6709\u5173 SonicWall GMS \u7cfb\u7edf\u7684\u4fe1\u606f\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-20150), "\u6307\u5b9a\u7684 SonicWall GMS \u5e8f\u5217\u53f7\u6ca1\u6709\u6ce8\u518c\u7ed9\u7528\u6237\u3002"}, {Integer.toString(-20151), "\u5728\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u63d2\u5165\u62a5\u544a\u4fe1\u606f\u65f6\u51fa\u9519\u3002"}, {Integer.toString(-20152), "SonicWall GMS \u5e8f\u5217\u53f7\u548c\u7528\u6237\u540d\u7ec4\u5408\u65e0\u6548\u3002"}, {Integer.toString(-20153), "\u5f53\u5347\u7ea7 SonicWall GMS \u4ee5\u4fbf\u96c6\u6210 ViewPoint \u65f6\u540e\u53f0\u6ce8\u518c\u7cfb\u7edf\u51fa\u9519\u3002"}, {Integer.toString(-20154), "\u8bbe\u5907\u6ca1\u6709\u6ce8\u518c\uff0c\u6216\u6307\u5b9a\u7684\u7528\u6237\u540d\u65e0\u6548\u3002"}, {Integer.toString(-20155), "\u6b64\u670d\u52a1\u7684\u57fa\u672c\u5408\u540c\u6ca1\u6709\u6fc0\u6d3b\u6216\u5df2\u8fc7\u671f\u3002"}, {Integer.toString(-20201), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u7cfb\u7edf\u7684 XML \u8f93\u5165\u65e0\u6548\u3002"}, {Integer.toString(-20202), "\u5185\u90e8\u9519\u8bef\uff1a\u8f93\u5165\u4e2d\u672a\u6307\u5b9a\u7528\u6237\u540d\u3002"}, {Integer.toString(-20203), "\u4e3a SonicWall GMS \u6ce8\u518c\u7cfb\u7edf\u63a5\u53e3\u6307\u5b9a\u7684\u5bc6\u7801\u65e0\u6548\u3002"}, {Integer.toString(-20204), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u8bf7\u6c42\u7684\u65b9\u6cd5\u65e0\u6548\u3002"}, {Integer.toString(-20205), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u8bf7\u6c42\u7684 XML \u7248\u672c\u65e0\u6548\u3002"}, {Integer.toString(-20401), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u53d1\u751f\u6570\u636e\u5e93\u9519\u8bef\u3002"}, {Integer.toString(-20402), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u53d1\u751f\u6ce8\u518c\u8868\u9519\u8bef\u3002"}, {Integer.toString(-20403), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u53d1\u751f\u7ec4\u4ef6\u9519\u8bef\u3002"}, {Integer.toString(-20404), "\u5185\u90e8\u9519\u8bef\uff1a\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u53d1\u751f\u7a0b\u5e8f\u9519\u8bef\u3002"}, {Integer.toString(-20140), "\u540e\u7aef\u6ce8\u518c\u7cfb\u7edf\u4e2d\u672a\u627e\u5230\u6307\u5b9a\u8bbe\u5907\u7684 PKI \u4fe1\u606f\u3002"}, {Integer.toString(-20141), "\u6307\u5b9a\u8bbe\u5907\u7684 PKI \u670d\u52a1\u672a\u6fc0\u6d3b\u3002"}, {Integer.toString(-227), "\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u7528\u4e8e\u6587\u4ef6\u4e0a\u4f20\u3002\u8bf7\u4e0a\u4f20\u8f83\u5c0f\u5927\u5c0f\u7684\u6587\u4ef6\u3002"}, {Integer.toString(-66), "\u5c1d\u8bd5\u4e0a\u4f20\u5230\u8bbe\u5907\u7684\u7b7e\u540d\u6587\u4ef6\u65e0\u6548\u3002"}, {Integer.toString(-67), "\u7b7e\u540d\u6587\u4ef6\u65e0\u6cd5\u4e0a\u4f20\u5230\u8bbe\u5907\u3002\u8bf7\u786e\u8ba4\u6b64\u64cd\u4f5c\u662f\u5426\u9002\u7528\u4e8e\u6b64\u578b\u53f7/\u7248\u672c\u3002"}, {Integer.toString(-500), "\u4ece lm2.sonicwall.com \u6536\u5230\u7684\u9519\u8bef\u3002"}, {Integer.toString(-501), "\u65e0\u6cd5\u8bbf\u95ee lm2.sonicwall.com \u7f51\u7ad9\u3002"}, {Integer.toString(-907), "\u4e0d\u652f\u6301\u8bbe\u5907\u4e0a\u7684\u56fa\u4ef6\u7248\u672c\u3002"}, {Integer.toString(-901), "\u8bb0\u5f55 id \u65e0\u6548\u6216\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-902), "\u65e0\u6cd5\u5e94\u7528\u5b9e\u4f53\u5c01\u95ed\u8bb0\u5f55\u3002"}, {Integer.toString(-903), "\u65e0\u6cd5\u5e94\u7528\u8bb0\u5f55\u3002"}, {Integer.toString(-904), "\u6a21\u677f id \u65e0\u6548\u6216\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-905), "\u65e0\u6cd5\u5e94\u7528\u8bb0\u5f55\u3002"}, {Integer.toString(-906), "\u65e0\u6cd5\u5e94\u7528\u6a21\u677f\u3002"}, {Integer.toString(-908), "\u7b49\u5f85\u6765\u81ea\u6c60\u7684\u8fde\u63a5\u8d85\u65f6\u3002"}, {Integer.toString(-909), "\u7b49\u5f85\u5230\u8fdc\u7a0b\u4e3b\u673a\u7684\u8fde\u63a5\u8d85\u65f6\u3002"}, {Integer.toString(-910), "\u6b64\u8bbe\u5907\u7684\u914d\u7f6e\u8bbe\u7f6e\u4e0d\u6b63\u786e\u3002"}, {Integer.toString(-911), "\u7b49\u5f85\u786e\u5b9a\u6b64\u8bbe\u5907\u7684\u9002\u7528\u914d\u7f6e\u8bbe\u7f6e\u3002"}, {Integer.toString(-912), "\u65e0\u6cd5\u627e\u5230 Web \u670d\u52a1\u4e3b\u673a\u3002"}, {Integer.toString(-913), "\u65e0\u6cd5\u521b\u5efa Web \u670d\u52a1\u8fde\u63a5\u3002"}, {Integer.toString(-914), "\u901a\u8fc7 Web \u670d\u52a1\u8bbf\u95ee\u6570\u636e\u6216\u8d44\u6e90\u65f6\u51fa\u73b0\u95ee\u9898\u3002"}, {Integer.toString(-915), "\u65e0\u6cd5\u9a8c\u8bc1 Web \u670d\u52a1\u3002"}, {Integer.toString(-800), "\u6b64\u8bbe\u5907\u4e0d\u652f\u6301 GMS \u7684\u5916\u90e8\u6d41\u91cf\u62a5\u544a"}, {Integer.toString(-801), "\u6d41\u91cf\u8f6c\u53d1\u5668\u7f51\u5173\u914d\u7f6e\u4e0d\u6b63\u786e"}, {Integer.toString(-802), "\u6b64\u578b\u53f7\u4e0d\u652f\u6301 GMS \u7684\u5916\u90e8\u6d41\u91cf\u62a5\u544a"}, {Integer.toString(-803), "\u6b64\u56fa\u4ef6\u7248\u672c\u4e0d\u652f\u6301 GMS \u7684\u5916\u90e8\u6d41\u91cf\u62a5\u544a"}, {Integer.toString(-804), "\u5e94\u7528\u7a0b\u5e8f\u53ef\u89c6\u5316\u672a\u5728\u6b64\u8bbe\u5907\u4e0a\u83b7\u5f97\u6388\u6743"}, {Integer.toString(-805), "\u53ef\u7528\u4e8e\u6d41\u91cf\u4ee3\u7406\u5206\u914d\u7684\u5b58\u50a8\u7a7a\u95f4\u4e0d\u8db3"}, {Integer.toString(-806), "\u53ef\u7528\u4e8e\u6d41\u91cf\u4ee3\u7406\u5206\u914d\u7684\u8fd0\u884c\u65f6\u5185\u5b58\u4e0d\u8db3"}, {Integer.toString(-807), "\u5411\u6d41\u91cf\u4ee3\u7406 1 \u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-808), "\u5411\u6d41\u91cf\u4ee3\u7406 2 \u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-809), "\u5411\u6d41\u91cf\u4ee3\u7406 1 \u548c 2 \u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-810), "\u5411\u6d41\u91cf\u4ee3\u7406 1 \u548c\u6d41\u91cf\u8f6c\u53d1\u5668\u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-811), "\u5411\u6d41\u91cf\u4ee3\u7406 1\u30012 \u548c\u6d41\u91cf\u8f6c\u53d1\u5668\u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-812), "\u5411\u6d41\u91cf\u4ee3\u7406 2 \u548c\u6d41\u91cf\u8f6c\u53d1\u5668\u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-813), "\u5411\u6d41\u91cf\u8f6c\u53d1\u5668\u6ce8\u518c\u5931\u8d25"}, {Integer.toString(-814), "\u7f51\u5173\u9632\u706b\u5899\u5728 GMS \u4e2d\u4e0d\u53ef\u7528"}, {Integer.toString(-815), "\u96a7\u9053\u521b\u5efa\u5728\u7f51\u5173\u9632\u706b\u5899\u7aef\u5931\u8d25"}, {Integer.toString(-816), "\u96a7\u9053\u521b\u5efa\u5728\u53d7\u7ba1\u8bbe\u5907\u7aef\u5931\u8d25"}, {Integer.toString(-817), "\u5bf9\u4e8e\u4e91 GMS \u7ba1\u7406\u548c\u62a5\u544a\uff0c\u672a\u5bf9\u8bbe\u5907\u8fdb\u884c\u6388\u6743"}, {Integer.toString(-818), "\u53ef\u7528\u4e8e\u6d41\u91cf\u4ee3\u7406\u5206\u914d\u7684\u5904\u7406\u80fd\u529b\u4e0d\u8db3"}, {Integer.toString(-819), "\u53ef\u7528\u4e8e\u6d41\u91cf\u4ee3\u7406\u5206\u914d\u7684\u5e26\u5bbd\u4e0d\u8db3"}, {"EDIT_DOMAIN", "\u7f16\u8f91\u57df"}, {"VIEW_DOMAIN", "\u67e5\u770b\u57df\u8be6\u7ec6\u4fe1\u606f"}, {"ADD_DOMAIN", "\u6dfb\u52a0\u57df"}, {"SELECT_TO_DELETE", "\u8bf7\u9009\u62e9\u8981\u5220\u9664\u7684\u57df/\u9a8c\u8bc1\u670d\u52a1\u5668\u3002"}, {"SELECT_AS_TO_DEL", "\u8bf7\u9009\u62e9\u8981\u5220\u9664\u7684\u9a8c\u8bc1\u670d\u52a1\u5668\u3002"}, {"DELETE_CONFIRMATION", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u57df '"}, {"USER_DELETE_CONFIRMATION", "\u6240\u6709\u9a8c\u8bc1\u670d\u52a1\u5668\u3001\u7528\u6237\u3001\u7528\u6237\u7c7b\u578b\u53ca\u5176\u8bbe\u7f6e\u4e5f\u5c06\u88ab\u5220\u9664\u3002"}, {"USER_AS_DELETE_CONFIRMATION", "\u6240\u6709\u7528\u6237\u3001\u7528\u6237\u7c7b\u578b\u53ca\u5176\u8bbe\u7f6e\u4e5f\u5c06\u88ab\u5220\u9664\u3002"}, {"SURE_WANT_TO_CONTINUE", "\u662f\u5426\u786e\u5b9a\u8981\u7ee7\u7eed\uff1f"}, {"MULTIPLE_DELETE_CONFIRMATION", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u4ee5\u4e0b\u57df\uff1a"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u4ee5\u4e0b\u9a8c\u8bc1\u670d\u52a1\u5668\uff1a"}, {"AND_AS_DELETE_CONFIRMATION", "\u548c\u5220\u9664\u4ee5\u4e0b\u9a8c\u8bc1\u670d\u52a1\u5668\uff1a"}, {"WANT_TO_CONTINUE", "\u662f\u5426\u8981\u7ee7\u7eed\uff1f"}, {"DOMAIN", "\u57df"}, {"DOMAINS", "\u57df"}, {"SEARCH", "\u641c\u7d22"}, {"NAME", "\u540d\u79f0"}, {"DOMAIN_TYPE", "\u57df\u7c7b\u578b"}, {"DOMAIN_SETTINGS", "\u57df\u8bbe\u7f6e"}, {"ALIAS", "\u522b\u540d"}, {"DISPLAY_DOMAIN", "\u5728\u767b\u5f55\u5c4f\u5e55\u4e2d\u663e\u793a\u57df"}, {"SET_AS_DEFAULT", "\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u57df"}, {"HOST_NAME", "\u4e3b\u673a\u540d"}, {"HOST_TYPE", "\u4e3b\u673a\u7c7b\u578b"}, {"EQUALS", "\u7b49\u4e8e"}, {"STARTS_WITH", "\u5f00\u5934\u4e3a"}, {"ENDS_WITH", "\u7ed3\u5c3e\u4e3a"}, {"CONTAINS", "\u5305\u542b"}, {"LOCAL", "\u672c\u5730"}, {"REMOTE", "\u8fdc\u7a0b"}, {"DOMAINS", "\u57df"}, {"SSL_USED", "\u4f7f\u7528\u7684 SSL"}, {"CONFIGURE", "\u914d\u7f6e"}, {"NO_DOMAIN_FOUND", "\u672a\u627e\u5230\u57df"}, {"NO_AS_FOUND", "\u672a\u627e\u5230\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"ADD_DOMAIN", "\u6dfb\u52a0\u57df"}, {"DELETE_DOMAINS", "\u5220\u9664\u57df/\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"DELETE_ASS", "\u5220\u9664\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"EQUALS", "\u7b49\u4e8e"}, {"STARTS_WITH", "\u5f00\u5934\u4e3a"}, {"ENDS_WITH", "\u7ed3\u5c3e\u4e3a"}, {"CONTAINS", "\u5305\u542b"}, {"LOCAL", "\u672c\u5730"}, {"REMOTE", "\u8fdc\u7a0b"}, {"REMOTE_DOMAIN", "\u8fdc\u7a0b\u57df"}, {"ADMIN_PASSWORD", "\u7ba1\u7406\u5458\u5bc6\u7801"}, {"DEFAULT_ADMIN_USER", "\u9ed8\u8ba4\u7ba1\u7406\u5458\u7528\u6237"}, {"AUTH_PORT", "\u9a8c\u8bc1\u7aef\u53e3"}, {"ACCT_PORT", "\u8ba1\u8d39\u7aef\u53e3"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "\u57fa\u672c\u8bc6\u522b\u540d"}, {"SEARCH_FILTER", "\u641c\u7d22\u8fc7\u6ee4\u5668"}, {"SHARED_SECRET", "\u5171\u4eab\u7684\u673a\u5bc6"}, {"USE_SSL", "\u4f7f\u7528 SSL"}, {"SSL_PORT", "SSL \u7aef\u53e3"}, {"ANONYMOUS_LOGIN", "\u533f\u540d\u767b\u5f55"}, {"LOGIN_USER_NAME", "\u767b\u5f55\u7528\u6237\u8bc6\u522b\u540d"}, {"DNAME_MSG", "\u8bc6\u522b\u540d\u7528\u4e8e\u5728\u6267\u884c\u7ed1\u5b9a\u65f6\u9a8c\u8bc1\u76ee\u5f55\u670d\u52a1\u5668\u3002\u6b64\u5b57\u6bb5\u7684\u503c\u5e94\u6307\u5b9a\u4e3a DN\uff08\u8bc6\u522b\u540d\uff09\u3002\u4f8b\u5982\uff1a[uid=xyz,ou=People,dc=example,dc=com]\u3001[cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "\u767b\u5f55\u5bc6\u7801"}, {"PROTOCOL_VERSION", "\u534f\u8bae\u7248\u672c"}, {"LDAPV2", "LDAP \u7248\u672c 2"}, {"LDAPV3", "LDAP \u7248\u672c 3"}, {"SETTINGS", "\u8bbe\u7f6e"}, {"USER_DIRECTORY_LDAP", "\u7528\u6237\u76ee\u5f55 LDAP \u6a21\u5f0f"}, {"LDAP_SCHEMA", "LDAP \u6a21\u5f0f"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "\u5b9a\u4e49\u7684\u7528\u6237"}, {"USER_OBJECTS", "\u7528\u6237\u5bf9\u8c61"}, {"OBJ_CLASS", "\u5bf9\u8c61\u7c7b"}, {"LOGIN_NAME", "\u767b\u5f55\u540d\u5c5e\u6027"}, {"FIRST_NAME", "\u540d\u5b57\u5c5e\u6027"}, {"LAST_NAME", "\u59d3\u6c0f\u5c5e\u6027"}, {"EMAIL", "\u7535\u5b50\u90ae\u4ef6\u5c5e\u6027"}, {"TELEPHONE", "\u7535\u8bdd\u5c5e\u6027"}, {"CON_TIMEOUT", "\u8fde\u63a5\u8d85\u65f6"}, {"SCHEMA", "\u6a21\u5f0f"}, {"TEST_SETTINGS", "\u6d4b\u8bd5\u8bbe\u7f6e"}, {"TEST_RADIUS_SETTINGS", "\u6d4b\u8bd5 RADIUS \u8bbe\u7f6e"}, {"TEST_LDAP_MSG", "\u8981\u6d4b\u8bd5 LDAP \u8bbe\u7f6e\uff0c\u8bf7\u8f93\u5165\u4e00\u4e2a\u6709\u6548\u7684 LDAP"}, {"TEST_RADIUS_MSG", "\u8981\u6d4b\u8bd5 RADIUS \u8bbe\u7f6e\uff0c\u8bf7\u8f93\u5165\u4e00\u4e2a\u6709\u6548\u7684 RADIUS"}, {"TEST_MSG", "\u767b\u5f55\u540d\u548c\u5bc6\u7801\uff0c\u7136\u540e\u5355\u51fb\u201c\u6d4b\u8bd5\u201d\u6309\u94ae\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5c06\u5e94\u7528\u5df2\u8fdb\u884c\u7684\u4efb\u4f55\u66f4\u6539\u3002"}, {"USER", "\u7528\u6237"}, {"PWD", "\u5bc6\u7801"}, {"RUN_CLIENT_TEST", "\u8fd0\u884c\u5ba2\u6237\u7aef\u6d4b\u8bd5"}, {"TEST_STATUS", "\u6d4b\u8bd5\u72b6\u6001"}, {"RETURNED_USER_ATTRIBUTES", "\u8fd4\u56de\u7684\u6d4b\u8bd5\u7ed3\u679c"}, {"TEST", "\u6d4b\u8bd5"}, {"OK", "\u786e\u5b9a"}, {"CANCEL", "\u53d6\u6d88"}, {"CLOSE", "\u5173\u95ed"}, {"CANT_DELETE_LOCALDOMAIN", "\u65e0\u6cd5\u7f16\u8f91/\u5220\u9664\u672c\u5730\u57df"}, {"CANT_EDIT", "\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u57df\uff0c\u5219\u65e0\u6cd5\u8fdb\u884c\u7f16\u8f91"}, {"EMPTY_NAME", "\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_ADMIN_PWD", "\u7ba1\u7406\u5458\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_ADMIN_USER", "\u9ed8\u8ba4\u7ba1\u7406\u5458\u7528\u6237\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_AUTH_PORT", "\u9a8c\u8bc1\u7aef\u53e3\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_AUTH_PORT", "\u9a8c\u8bc1\u7aef\u53e3\u5e94\u4e3a\u6b63\u6570"}, {"AUTH_PORT_RANGE", "\u9a8c\u8bc1\u7aef\u53e3\u5e94\u5728 0 - 65535 \u8303\u56f4\u5185"}, {"EMPTY_ACCT_PORT", "\u8ba1\u8d39\u7aef\u53e3\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_ACCT_PORT", "\u8ba1\u8d39\u7aef\u53e3\u5e94\u4e3a\u6b63\u6570"}, {"EMPTY_BD_NAME", "\u57fa\u672c\u8bc6\u522b\u540d\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_SEARCH_FILTER", "\u641c\u7d22\u8fc7\u6ee4\u5668\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_SHRED_SECRET", "\u5171\u4eab\u7684\u673a\u5bc6\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_SSL_PORT", "SSL \u7aef\u53e3\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_SSL_PORT", "SSL \u7aef\u53e3\u5e94\u4e3a\u6b63\u6570"}, {"SSL_PORT_RANGE", "SSL \u7aef\u53e3\u5e94\u5728 0 - 65535 \u8303\u56f4\u5185"}, {"EMPTY_LOGIN", "\u767b\u5f55\u7528\u6237\u8bc6\u522b\u540d\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_LOGIN_PWD", "\u767b\u5f55\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a"}, {"EMPTY_CON_TIMEOUT", "\u8fde\u63a5\u8d85\u65f6\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_CON_TIMEOUT", "\u8fde\u63a5\u8d85\u65f6\u5e94\u4e3a\u6b63\u6570"}, {"RECOMMEND_SSL", "\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528 SSL \u4e0e\u8fdc\u7a0b\u670d\u52a1\u5668\u8fdb\u884c\u5b89\u5168\u901a\u4fe1\u3002"}, {"CON_NOT_SECURE", "\u5982\u679c\u6ca1\u6709\u4f7f\u7528 SSL\uff0c\u60a8\u7684\u8fde\u63a5\u5c06\u4e0d\u5b89\u5168\u3002"}, {"DOMAIN_EXISTS", "\u5df2\u7ecf\u5b58\u5728\u5177\u6709\u6b64\u540d\u79f0\u7684\u57df"}, {"ALIAS_EXISTS", "\u5df2\u7ecf\u5b58\u5728\u5177\u6709\u6b64\u540d\u79f0\u7684\u522b\u540d"}, {"DOMAIN_INVALID", "\u6307\u5b9a\u7684\u57df\u540d\u65e0\u6548\u3002"}, {"DOMAIN_VALID_CHARS", "\u540d\u79f0\u53ea\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a"}, {"DOMAIN_VALID_CHARS_LIST", "\u5b57\u6bcd\u6570\u5b57\u3001.\uff08\u70b9\u53f7\uff09\u3001-\uff08\u8fde\u5b57\u7b26\uff09\u3001_\uff08\u4e0b\u5212\u7ebf\uff09\u548c\u7a7a\u683c\u3002"}, {"SPECIFY_VALID_NAME", "\u8bf7\u4f7f\u7528\u5141\u8bb8\u7684\u5b57\u7b26\u6307\u5b9a\u540d\u79f0\u3002"}, {"DIR_GRP_SETTINGS", "Active Directory \u7ec4\u8bbe\u7f6e"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "\u53ea\u5141\u8bb8 AD \u7ec4\u6210\u5458"}, {"DIR_GROUPS", "Active Directory \u7ec4"}, {"GRP_NAME_INVALID", "\u6307\u5b9a\u7684\u7ec4\u540d\u79f0\u65e0\u6548\u3002"}, {"GRP_NAME_INVALID_LENGTH", "\u7ec4\u540d\u79f0\u4e0d\u80fd\u8d85\u8fc7 200 \u4e2a\u5b57\u7b26\u3002"}, {"AUTH_SERVER_NAME", "\u9a8c\u8bc1\u670d\u52a1\u5668\u540d\u79f0"}, {"ADD_AUTH_SERVER", "\u6dfb\u52a0\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"ADD_AUTHSERVER", "\u6dfb\u52a0\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"EDIT_AUTHSERVER", "\u7f16\u8f91\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"DELETE_DOMAIN", "\u5220\u9664\u8be5\u57df"}, {"CANT_DELETE_LOCAL_AS", "\u65e0\u6cd5\u7f16\u8f91/\u5220\u9664\u672c\u5730\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"CANT_DELETE_ADMIN_AS", "\u7531\u4e8e\u8be5\u57df\u7684\u9ed8\u8ba4\u7ba1\u7406\u5458\u5df2\u9488\u5bf9\u6b64\u670d\u52a1\u5668\u8fdb\u884c\u9a8c\u8bc1\uff0c\u56e0\u6b64\u65e0\u6cd5\u5220\u9664\u6b64\u9a8c\u8bc1\u670d\u52a1\u5668\u3002\n\u5c06\u9ed8\u8ba4\u7ba1\u7406\u5458\u79fb\u52a8\u5230\u5176\u4ed6\u9a8c\u8bc1\u670d\u52a1\u5668\uff0c\u7136\u540e\u91cd\u8bd5\u3002"}, {"EDIT_AUTH_SERVER", "\u7f16\u8f91\u6b64\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"VIEW_AUTH_SERVER", "\u67e5\u770b\u9a8c\u8bc1\u670d\u52a1\u5668\u8be6\u7ec6\u4fe1\u606f"}, {"DELETE_AUTH_SERVER", "\u5220\u9664\u6b64\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"AS_INVALID", "\u6307\u5b9a\u7684\u9a8c\u8bc1\u670d\u52a1\u5668\u65e0\u6548\u3002"}, {"AS_EXISTS", "\u5df2\u7ecf\u5b58\u5728\u5177\u6709\u6b64\u540d\u79f0\u7684\u9a8c\u8bc1\u670d\u52a1\u5668"}, {"EMPTY_AS_NAME", "\u9a8c\u8bc1\u670d\u52a1\u5668\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a"}, {"AS_NAME_MSG", "\u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u540d\u79f0\u5c06\u88ab\u521b\u5efa\u3002\u6b64\u540d\u79f0\u5bf9\u4e8e\u7ba1\u7406\u57df\u4e2d\u4e0d\u540c\u7684\u9a8c\u8bc1\u670d\u52a1\u5668\u975e\u5e38\u6709\u7528\u3002"}, {"AS_DELETE_CONFIRMATION", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u9a8c\u8bc1\u670d\u52a1\u5668 '"}, {"PRI_RADIUS", "\u4e3b\u8981 RADIUS \u670d\u52a1\u5668"}, {"AUTH_PROTOCOL", "\u9a8c\u8bc1\u534f\u8bae"}, {"RADIUS_TIMEOUT", "RADIUS \u8d85\u65f6\uff08\u79d2\u6570\uff09"}, {"MAX_RETRIES", "\u6700\u5927\u91cd\u8bd5\u6b21\u6570"}, {"BACK_RADIUS", "\u5907\u7528 RADIUS \u670d\u52a1\u5668"}, {"RADIUS_USER_GROUP", "RADIUS \u7528\u6237\u7ec4\u8bbe\u7f6e"}, {"ALLOW_GROUP_MEMBERS", "\u53ea\u5141\u8bb8 RADIUS \u7ec4\u6210\u5458"}, {"USE_SW_VSA", "\u4f7f\u7528 RADIUS \u670d\u52a1\u5668\u4e0a SonicWall \u4f9b\u5e94\u5546\u7279\u5b9a\u7684\u5c5e\u6027"}, {"USE_FILTER_ID", "\u5728 RADIUS \u670d\u52a1\u5668\u4e0a\u4f7f\u7528\u8fc7\u6ee4\u5668 ID \u5c5e\u6027"}, {"ALLOW_GROUPS", "\u5141\u8bb8\u7684 RADIUS \u7ec4"}, {"USER_GROUP", "\u7528\u6237\u7ec4"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS \u8d85\u65f6\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS \u8d85\u65f6\u5e94\u4e3a\u6b63\u6570"}, {"EMPTY_MAX_RETRIES", "\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u4e0d\u80fd\u4e3a\u7a7a"}, {"POSITIVE_MAX_RETRIES", "\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u5e94\u4e3a\u6b63\u6570"}, {"TEST_USER_NAME", "\u6d4b\u8bd5\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\u3002"}, {"TEST_USER_PWD", "\u6d4b\u8bd5\u7528\u6237\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\u3002"}, {"DOMAIN_NAME_MSG", "\u57df\u7684\u540d\u79f0\u5c06\u88ab\u521b\u5efa\u3002\u8be5\u540d\u79f0\u5c06\u5728\u767b\u5f55\u9875\u9762\u7684\u57df\u4e0b\u62c9\u5217\u8868\u4e2d\u53ef\u89c1\u3002"}, {"DOMAIN_TYPE_MSG", "\u57df\u7684\u7c7b\u578b\uff0c[\u672c\u5730] \u6216 [\u8fdc\u7a0b]\u3002\u9700\u8981\u4ece\u5916\u90e8\u5e73\u53f0\uff08\u5982 LDAP \u6216 AD \u670d\u52a1\u5668\uff09\u9a8c\u8bc1\u7528\u6237\u7684\u57df\u5c06\u9700\u8981\u521b\u5efa\u4e3a [\u8fdc\u7a0b] \u7c7b\u578b\u7684\u57df\u3002[\u672c\u5730] \u7c7b\u578b\u7684\u57df\u5c06\u62e5\u6709 SGMS \u6570\u636e\u5e93\u5185\u5b58\u5728\u7684\u7528\u6237\u5e10\u6237\u548c\u9a8c\u8bc1\u8be6\u7ec6\u4fe1\u606f\u3002\u901a\u8fc7\u521b\u5efa [\u672c\u5730] \u7c7b\u578b\u7684\u57df\uff0c\u60a8\u53ef\u4ee5\u5728 SGMS \u5185\u652f\u6301\u591a\u4e2a\u57df\u800c\u65e0\u9700\u5916\u90e8\u9a8c\u8bc1\u63a5\u53e3\u3002"}, {"ADMIN_PASSWORD_MSG", "\u521b\u5efa\u65b0\u57df\u7c7b\u578b [\u672c\u5730] \u540e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u521b\u5efa\u8be5\u57df\u7684 [\u7ba1\u7406\u5458] \u7528\u6237\u3002\u60a8\u9700\u8981\u6307\u5b9a\u7ba1\u7406\u5458\u7528\u6237\u7684\u5bc6\u7801\u3002"}, {"ADMIN_USERID_MSG", "\u6307\u5b9a\u9700\u8981\u6210\u4e3a\u8be5\u57df\u7ba1\u7406\u5458\u7684\u7528\u6237\u540d\u3002\u6b64\u7528\u6237\u540d\u5e94\u4e3a\u76ee\u5f55\u670d\u52a1\u5668\u4e2d\u4e0e\u8be5\u57df\u5173\u8054\u7684\u6709\u6548\u7528\u6237\u540d\u3002\u5982\u679c\u4e3a\u6b64\u5b57\u6bb5\u6307\u5b9a\u540d\u79f0 [\u7ba1\u7406\u5458]\uff0c\u5219\u7528\u6237 id \u4e3a [\u7ba1\u7406\u5458] \u7684\u7528\u6237\u5e94\u5728\u5173\u8054\u7684\u76ee\u5f55\u4e2d\u5b58\u5728\u5e76\u4e14\u5e94\u62e5\u6709\u7ba1\u7406\u6743\u9650\u3002\u4f8b\u5982\uff1ajdoe"}, {"HOST_NAME_MSG", "\u8fdc\u7a0b\u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u6216 IP \u5730\u5740\u3002\u4f8b\u5982\uff1a\t[mydc.example.com]\u3001[X.X.X.X]\uff08ip \u5730\u5740\uff09\u3001[company.com]\u3002\u5982\u679c\u8fdc\u7a0b\u670d\u52a1\u5668\u662f Windows Active Directory (AD) \u670d\u52a1\u5668\u5e76\u4e14\u60a8\u6709\u591a\u4e2a\u57df\u9700\u8981\u4ece AD \u6797\u4e0b\u9a8c\u8bc1\u7528\u6237\uff0c\u5219\u6307\u5b9a AD \u6797\u7684\u5168\u5c40\u76ee\u5f55\u540d\u79f0\u6216 IP \u5730\u5740\u4f5c\u4e3a\u4e3b\u673a\u540d\u3002"}, {"AUTHENTICATION_PORT_MSG", "LDAP \u6216 AD \u670d\u52a1\u5668\u4e0a\u7684\u7aef\u53e3\u53f7\uff0c\u53ef\u5728\u5176\u4e0a\u76d1\u542c\u9a8c\u8bc1\u8bf7\u6c42\u3002\u5982\u679c\u662f LDAP/AD \u670d\u52a1\u5668\uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a 389\u3002\u5982\u679c\u60a8\u6307\u5b9a\u4e86 AD \u6797\u7684\u5168\u5c40\u76ee\u5f55\u540d\u79f0\u6216 IP \u5730\u5740\u4f5c\u4e3a\u4e3b\u673a\u540d\uff0c\u5219\u8fd8\u5e94\u6307\u5b9a\u76f8\u5e94\u7684\u7aef\u53e3\u53f7\u3002\u9ed8\u8ba4\u503c\u4e3a 3268\u3002"}, {"HOST_TYPE_MSG", "\u8be5\u503c\u8868\u793a\u8fdc\u7a0b\u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u7c7b\u578b\u662f LDAP \u670d\u52a1\u5668\u3001Windows Active Directory \u8fd8\u662f RADIUS \u670d\u52a1\u5668\u3002"}, {"ALIAS_MSG", "\u5982\u679c\u57df\u6ca1\u6709\u663e\u793a\uff0c\u53ef\u5728 GMS \u767b\u5f55\u5c4f\u5e55\u4e2d\u4f7f\u7528\u57df\u540d\u7f29\u5199\u767b\u5f55\u3002\u4f8b\u5982\uff1a\u522b\u540d\\\\\u7528\u6237\u540d\u3002\u5982\u679c\u57df\u540d\u7684\u957f\u5ea6\u5c0f\u4e8e\u6216\u7b49\u4e8e 16 \u4e2a\u5b57\u7b26\uff0c\u5219\u522b\u540d\u81ea\u52a8\u586b\u5199\u4e3a\u57df\u540d\u3002"}, {"PROTOCOL_VERSION_MSG", "\u8fd9\u662f\u8fdc\u7a0b LDAP/AD \u670d\u52a1\u5668\u5728\u5176\u4e0a\u8fd0\u884c\u7684 LDAP \u534f\u8bae\u7248\u672c\u3002"}, {"BASE_DN_MSG", "\u57fa\u672c\u8bc6\u522b\u540d\u7528\u4e8e\u533a\u522b\u76ee\u5f55\u4e2d\u7684\u6839\u6761\u76ee\u4e0e\u5c06\u51fa\u73b0\u7684\u3001SGMS \u53d1\u8d77\u7684\u641c\u7d22\u3002\u76ee\u5f55\u7684\u57fa\u672c DN\uff08\u6bd4\u5982 example.com\uff09\u5e94\u4e3a\u4ee5\u4e0b\u683c\u5f0f\u5199\u5165\uff1a[dc=example,dc=com]\u3002\u59cb\u7ec8\u9700\u8981\u6307\u5b9a\u6700\u9876\u7ea7\u7684\u8282\u70b9\u4f5c\u4e3a\u76ee\u5f55\u6811\u4e2d\u7684\u57fa\u672c DN\uff0c\u8be5\u8282\u70b9\u4e4b\u4e0b\u662f\u60a8\u9884\u671f\u663e\u793a\u4e3a\u53ef\u767b\u5f55\u5230 SGMS \u7684\u6240\u6709\u7528\u6237\u3002"}, {"USE_SSL_MSG", "\u6307\u5b9a\u662f\u5426\u4f7f\u7528 SSL \u7ed1\u5b9a\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u3002\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528\u6b64\u9879\u3002\u5bf9\u4e8e\u6b64\u9879\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684 CA \u8bc1\u4e66\u6216\u7b7e\u540d\u670d\u52a1\u5668\u8bc1\u4e66\u7684 CA \u6839\u8bc1\u4e66\u5c06\u5728 SGMS \u7684\u5bc6\u94a5\u5e93\u4e2d\u663e\u793a\u4e3a\u4fe1\u4efb\u7684 CA\u3002"}, {"SSL_PORT_MSG", "\u8fdc\u7a0b\u670d\u52a1\u5668\u5728\u5176\u4e0a\u76d1\u542c SSL \u7ed1\u5b9a\u8bf7\u6c42\u7684\u7aef\u53e3\u53f7\u3002\u5982\u679c\u662f LDAP/AD \u670d\u52a1\u5668\uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a 636\u3002\u5982\u679c\u60a8\u6307\u5b9a\u4e86 AD \u6797\u7684\u5168\u5c40\u76ee\u5f55\u540d\u79f0\u6216 IP \u5730\u5740\u4f5c\u4e3a\u4e3b\u673a\u540d\uff0c\u5219\u8fd8\u5e94\u6307\u5b9a\u76f8\u5e94\u7684 SSL \u7aef\u53e3\u53f7\u3002\u9ed8\u8ba4\u503c\u4e3a 3269\u3002"}, {"ANONYMOUS_LOGIN_MSG", "\uff08\u4e0d\u63a8\u8350\uff09\u3002\u6307\u5b9a SGMS \u662f\u5426\u5e94\u533f\u540d\u7ed1\u5b9a\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u3002\u5bf9\u4e8e\u6b64\u9879\uff0c\u8fdc\u7a0b LDAP/AD \u670d\u52a1\u5668\u5e94\u5141\u8bb8\u533f\u540d\u7ed1\u5b9a\u3002\u533f\u540d\u7ed1\u5b9a\u5e94\u4ec5\u5f53\u4e8b\u5148\u4e0d\u77e5\u9053\u670d\u52a1\u5e10\u6237\uff08\u76ee\u5f55\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6709\u6548\u7684\u7528\u6237\u5e10\u6237\uff09\u65f6\u5c1d\u8bd5\u3002\u5f3a\u70c8\u4e0d\u63a8\u8350\u4f7f\u7528\u6b64\u9879\u3002"}, {"LOGIN_USER_DN_MSG", "\u8bc6\u522b\u540d\u7528\u4e8e\u5728\u6267\u884c\u7ed1\u5b9a\u65f6\u9a8c\u8bc1\u76ee\u5f55\u670d\u52a1\u5668\u3002\u6b64\u5b57\u6bb5\u7684\u503c\u5e94\u6307\u5b9a\u4e3a DN\uff08\u8bc6\u522b\u540d\uff09\u3002\u4f8b\u5982\uff1a[uid=xyz, ou=People, dc=example, dc=com]\u3001[cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "\u767b\u5f55\u7528\u6237 DN \u7684\u5bc6\u7801\u3002"}, {"CONN_TIMEOUT_MSG", "\u8be5\u503c\uff08\u6beb\u79d2\u6570\uff09\u662f\u8fde\u63a5\u8d85\u65f6\u671f\u9650\u3002\u7ecf\u8fc7\u6b64\u65f6\u95f4\u6bb5\u540e\uff0c\u5982\u679c\u672a\u6210\u529f\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u8fde\u63a5\u5c1d\u8bd5\u5c06\u653e\u5f03\u3002"}, {"LDAP_SCHEMA_MSG", "\u5173\u8054 LDAP/AD \u670d\u52a1\u5668\u7684 LDAP \u6a21\u5f0f\u3002"}, {"OBJ_CLASS_MSG", "\u7528\u6237\u6240\u5c5e\u7684\u5176\u4e2d\u4e00\u4e2a\u6807\u51c6\u5bf9\u8c61\u7c7b\u522b\u7684\u540d\u79f0\u3002"}, {"LOGIN_NAME_ATTRIBUTE_MSG", "LDAP/AD \u670d\u52a1\u5668\u4e2d\u8868\u793a\u7528\u6237 id \u7684\u5c5e\u6027\u540d\u79f0\u3002\u8fd9\u662f LDAP \u670d\u52a1\u5668\u4e2d\u7684\u5c5e\u6027\uff0c\u5176\u503c\u5c06\u88ab\u7528\u4f5c SGMS \u767b\u5f55\u9875\u9762\u4e2d\u7684\u7528\u6237 id\u3002\u4f8b\u5982\uff1auid\u3001sAMAccountName \u7b49\u3002"}, {"FIRST_NAME_ATTRIBUTE_MSG", "LDAP \u670d\u52a1\u5668\u4e2d\u8868\u793a\u540d\u5b57\u7684\u5c5e\u6027\u540d\u79f0\u3002\u4f8b\u5982\uff1agivenName\u3002"}, {"LAST_NAME_ATTRIBUTE_MSG", "LDAP \u670d\u52a1\u5668\u4e2d\u8868\u793a\u59d3\u6c0f\u7684\u5c5e\u6027\u540d\u79f0\u3002\u4f8b\u5982\uff1asn\u3002"}, {"EMAIL_ATTRIBUTE_MSG", "LDAP \u670d\u52a1\u5668\u4e2d\u8868\u793a\u7535\u5b50\u90ae\u4ef6 id \u7684\u5c5e\u6027\u540d\u79f0\u3002\u4f8b\u5982\uff1amail\u3002"}, {"TELEPHONE_ATTRIBUTE_MSG", "LDAP \u670d\u52a1\u5668\u4e2d\u8868\u793a\u7535\u8bdd\u53f7\u7801\u7684\u5c5e\u6027\u540d\u79f0\u3002\u4f8b\u5982\uff1atelephoneNumber\u3002"}, {"TEST_PANE_MSG", "\u60a8\u53ef\u5728\u6b64\u5904\u6d4b\u8bd5\u5728\u8bbe\u7f6e\u9762\u677f\u4e2d\u8f93\u5165\u7684\u9a8c\u8bc1\u670d\u52a1\u5668 (LDAP/AD/RADIUS) \u914d\u7f6e\u3002"}, {"TEST_PANE_USER_MSG", "\u8f93\u5165\u60a8\u5c06\u5728 SGMS \u767b\u5f55\u9875\u9762\u4e2d\u8f93\u5165\u7684\u6709\u6548\u7528\u6237\u540d\u4ee5\u767b\u5f55\u5230 GMS\u3002\u6b64\u7528\u6237\u540d\u5e94\u6709\u6548\u5e76\u5728\u8be5\u57df\u7684\u5173\u8054\u76ee\u5f55\u4e2d\u51fa\u73b0\u3002\u53e6\u5916\uff0c\u8f93\u5165\u76ee\u5f55\u4e2d\u6b64\u7528\u6237\u540d\u7684\u5bc6\u7801\u3002"}, {"EMPTY_DIR_GROUP", "\u76ee\u5f55\u7ec4\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a\u3002"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "\u6b64\u9009\u9879\u9009\u5b9a\u65f6\u53ea\u5141\u8bb8\u4f5c\u4e3a\u6307\u5b9a Active Directory \u7ec4\u6210\u5458\u7684\u7528\u6237\u767b\u5f55\u5230 GMS\u3002\u4f7f\u7528\u6b64\u9009\u9879\uff0c\u8fd8\u9700\u8981\u5728\u8bbe\u7f6e\u9762\u677f\u4e2d\u5c06\u4e3b\u673a\u7c7b\u578b\u9009\u62e9\u4e3a [Active Directory]\u3002"}, {"DIR_GROUPS_MSG", "\u6307\u5b9a AD \u7ec4\u540d\u79f0\uff0c\u5176\u6210\u5458\u5e94\u5141\u8bb8\u767b\u5f55\u5230 GMS\u3002\u53ef\u4ee5\u6307\u5b9a\u4ee5\u5206\u53f7\u5206\u9694\u7684\u591a\u4e2a AD \u7ec4\u3002\u4f8b\u5982\uff1a[GMSUsers]\u3001[ADGroup1;AD group2;GMS Users;Group4]"}, {"RADIUS_HOST_NAME_MSG", "RADIUS \u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u6216 IP \u5730\u5740\u3002\u4f8b\u5982\uff1a[myradius.example.com]\u3001[X.X.X.X]\uff08ip \u5730\u5740\uff09\u3001[company.com]\u3002"}, {"RADIUS_AUTH_PORT_MSG", "RADIUS \u670d\u52a1\u5668\u4e0a\u7684\u7aef\u53e3\u53f7\uff0c\u53ef\u5728\u5176\u4e0a\u76d1\u542c\u9a8c\u8bc1\u8bf7\u6c42\u3002\u9ed8\u8ba4\u503c\u4e3a 1812\u3002"}, {"RADIUS_SHARED_SECRET_MSG", "\u5728 GMS \u548c RADIUS \u670d\u52a1\u5668\u4e4b\u95f4\u5171\u4eab\u7684\u673a\u5bc6\u3002\u8fd9\u662f\u4e00\u4e2a\u53ea\u6709 RADIUS \u670d\u52a1\u5668\u548c RADIUS \u5ba2\u6237\u7aef\u77e5\u9053\u7684\u5b57\u7b26\u4e32\u503c\u3002"}, {"RADIUS_AUTH_PROTOCOL_MSG", "\u5c06\u7528\u4e8e\u9a8c\u8bc1\u7684 RADIUS \u9a8c\u8bc1\u534f\u8bae\u3002"}, {"RADIUS_TIMEOUT_MSG", "\u8be5\u503c\uff08\u79d2\u6570\uff09\u8868\u793a\u8fde\u63a5\u8d85\u65f6\u671f\u9650\u3002\u7ecf\u8fc7\u6b64\u65f6\u95f4\u6bb5\u540e\uff0c\u5982\u679c\u672a\u6210\u529f\uff0cRADIUS \u670d\u52a1\u5668\u7684\u8fde\u63a5\u5c1d\u8bd5\u5c06\u653e\u5f03\u3002"}, {"RADIUS_MAX_RETRIES_MSG", "\u8be5\u503c\u8868\u793a RADIUS \u670d\u52a1\u5668\u5e94\u5c1d\u8bd5\u7684\u9a8c\u8bc1\u6b21\u6570\u3002\u7ecf\u8fc7\u6307\u5b9a\u7684\u5c1d\u8bd5\u6b21\u6570\u540e\uff0c\u5982\u679c\u672a\u6210\u529f\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u9a8c\u8bc1\u5c1d\u8bd5\u5c06\u653e\u5f03\u3002"}, {"RADIUS_ONLY_GROUP_MSG", "\u6b64\u9009\u9879\u9009\u5b9a\u65f6\u53ea\u5141\u8bb8\u4f5c\u4e3a\u6307\u5b9a RADIUS \u7528\u6237\u7ec4\u6210\u5458\u7684\u7528\u6237\u767b\u5f55\u5230 GMS\u3002"}, {"RADIUS_USE_FILTER_MSG", "\u6b64\u9009\u9879\u9009\u5b9a\u65f6\u53ea\u5141\u8bb8\u5c06\u7528\u4f5c RADIUS \u7528\u6237\u7ec4\u6807\u8bc6\u7b26\u7684 RADIUS \u5c5e\u6027\u201c\u8fc7\u6ee4\u5668 ID\u201d\u7684\u503c\u3002\u8981\u4f7f\u7528\u6b64\u9009\u9879\uff0c\u5e94\u6b63\u786e\u914d\u7f6e RADIUS \u670d\u52a1\u5668\u4ee5\u8fd4\u56de\u6b64\u5c5e\u6027-\u503c\u5bf9\u4ee5\u53ca\u4ece RADIUS \u670d\u52a1\u5668\u9a8c\u8bc1\u7684\u6bcf\u4e2a\u7528\u6237 id \u7528\u4e8e\u767b\u5f55\u5230 GMS\u3002"}, {"RADIUS_USE_SW_MSG", "\u9009\u4e2d\u6b64\u9009\u9879\u540e\uff0c\u4f1a\u5c06 SonicWall \u4f9b\u5e94\u5546\u7279\u5b9a\u5c5e\u6027 [SonicWall-User-Group \u548c SonicWall-User-Groups] \u7684\u503c\u7528\u4f5c RADIUS \u7528\u6237\u7ec4\u6807\u8bc6\u7b26\u3002\u4e3a\u4e86\u80fd\u591f\u4f7f\u7528\u6b64\u9009\u9879\uff0c\u5e94\u6b63\u786e\u914d\u7f6e RADIUS \u670d\u52a1\u5668\u4ee5\u8fd4\u56de SonicWall \u4f9b\u5e94\u5546\u7279\u5b9a\u5c5e\u6027\u503c\u5bf9\u4ee5\u53ca\u4ece RADIUS \u670d\u52a1\u5668\u8ba4\u8bc1\u7684\u3001\u7528\u4e8e\u767b\u5f55 GMS \u7684\u7528\u6237 ID\u3002"}, {"RADIUS_ALLOW_GROUPS_MSG", "\u6307\u5b9a RADIUS \u7528\u6237\u7ec4\u540d\u79f0\uff0c\u5176\u6210\u5458\u5e94\u5141\u8bb8\u767b\u5f55\u5230 GMS\u3002\u4f8b\u5982\uff0c[GMSUsers]\u3002\u4ee5\u5206\u53f7\u5206\u9694\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u53ef\u6307\u5b9a\u591a\u4e2a RADIUS \u7528\u6237\u7ec4\u3002\u4f8b\u5982\uff1a[RadGroup1;Rad group2;GMS Users;Group4]\u3002"}, {"ADD_AUTH_SERVER_MSG", "\u5982\u679c\u9009\u4e2d\uff0c\u6dfb\u52a0\u57df\u65f6\u5141\u8bb8\u6dfb\u52a0\u65b0\u7684\u9a8c\u8bc1\u670d\u52a1\u5668\u914d\u7f6e\u3002"}, {"PAGE_LABEL", "\u9875\u9762"}, {"MANAGE_PAGE", "\u7ba1\u7406\u9875\u9762"}, {"ADD_COMPONENT", "\u6dfb\u52a0\u7ec4\u4ef6"}, {"PAGE_MANAGER", "\u9875\u9762\u7ba1\u7406\u5668"}, {"ADD_NEW_PAGE", "\u6dfb\u52a0\u65b0\u9875\u9762"}, {"DEFAULT_PAGE", "\u9ed8\u8ba4\u9875\u9762"}, {"PAGE_DETAILS", "\u9875\u9762\u8be6\u7ec6\u4fe1\u606f"}, {"PAGE_TITLE", "\u9875\u9762\u6807\u9898"}, {"COMPONENT_TITLE", "\u7ec4\u4ef6\u6807\u9898"}, {"PAGE_LAYOUT", "\u9875\u9762\u5e03\u5c40"}, {"ONE_COLUMN_LAYOUT", "1 \u5217 (100)"}, {"TWO_COLUMN_LAYOUT", "2 \u5217 (50:50)"}, {"THREE_COLUMN_LAYOUT", "3 \u5217 (30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 \u5217 (25:25:25:25)"}, {"ADD", "\u6dfb\u52a0"}, {"EDIT", "\u7f16\u8f91"}, {"DELETE", "\u5220\u9664"}, {"ADD_COMPONENT_MANAGER", "\u6dfb\u52a0\u7ec4\u4ef6\u7ba1\u7406\u5668"}, {"TYPE", "\u7c7b\u578b"}, {"RSS_FEED_DETAILS", "RSS \u6e90\u8be6\u7ec6\u4fe1\u606f"}, {"RSS_FEEDS", "RSS \u6e90"}, {"TITLE", "\u6807\u9898"}, {"ITEMS", "\u663e\u793a\u7684\u9879\u76ee\uff08\u6700\u5927\u503c\uff09"}, {"REFRESH_INTERVAL", "\u5237\u65b0\u95f4\u9694"}, {"REFRESH_INTERVAL_MINUTE", "\u5206\u949f\u6570"}, {"EVENT_ALERT_DETAILS", "\u4e8b\u4ef6\u8b66\u62a5\u8be6\u7ec6\u4fe1\u606f"}, {"ALERT_TYPES", "\u8b66\u62a5\u7c7b\u578b"}, {"REFRESH_INTERVAL_HOUR", "\u5c0f\u65f6\u6570"}, {"ALERT_SHOW_TIME_HOURS", "\u663e\u793a\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u5185\u89e6\u53d1\u7684\u8b66\u62a5"}, {"APPLICATION_WIDGET_DETAILS", "\u5e94\u7528\u7a0b\u5e8f\u90e8\u4ef6\u8be6\u7ec6\u4fe1\u606f"}, {"WIDGETS", "\u90e8\u4ef6"}, {"RSS_FEED_TYPE", "RSS \u6e90"}, {"EVENT_ALERT_TYPE", "\u4e8b\u4ef6\u8b66\u62a5"}, {"APPLICATION_WIDGET_TYPE", "\u5e94\u7528\u7a0b\u5e8f\u90e8\u4ef6"}, {"CUSTOM_RSS_FEED", "\u81ea\u5b9a\u4e49 RSS \u6e90"}, {"CUSTOM_RSS_URL", "\u81ea\u5b9a\u4e49 RSS URL"}, {"END_EDIT", "\u7ed3\u675f\u7f16\u8f91"}, {"RSS_URL", "RSS URL"}, {"SAVE", "\u4fdd\u5b58"}, {"DEFAULT_PAGE", "\u9ed8\u8ba4\u9875\u9762"}, {"SAVE_LAYOUT_FAIL_MSG", "\u4fdd\u5b58\u5e03\u5c40\u5931\u8d25"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "\u4fdd\u5b58\u63a7\u5236\u680f\u72b6\u6001\u5931\u8d25"}, {"ADD_COMPONENT_FAIL_MSG", "\u6dfb\u52a0\u7ec4\u4ef6\u5931\u8d25"}, {"DELETE_COMPONENT_FAIL_MSG", "\u5220\u9664\u7ec4\u4ef6\u5931\u8d25"}, {"PAGE_ACTION_FAIL_MSG", "\u9875\u9762\u64cd\u4f5c\u5931\u8d25"}, {"RSS_FEED_FAIL_MSG", "RSS \u6e90\u83b7\u53d6\u5931\u8d25\u3002"}, {"EVENT_ALERT_FAIL_MSG", "GEM \u8b66\u62a5\u83b7\u53d6\u5931\u8d25\u3002"}, {"APPLICATION_WIDGET_FAIL_MSG", "\u5e94\u7528\u7a0b\u5e8f\u90e8\u4ef6\u83b7\u53d6\u5931\u8d25\u3002"}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "\u6ca1\u6709\u4e3a\u4ee5\u4e0b\u76ee\u6807\u914d\u7f6e\u7684\u8b66\u62a5\uff1aDashboard\u3002"}, {"NO_ALERT_FOUND_MSG", "\u672a\u627e\u5230\u8981\u663e\u793a\u7684\u8b66\u62a5\u3002"}, {"CHANGE_DEFAULT_PAGE_MSG", "\u5c06\u6b64\u9875\u9762\u8bbe\u4e3a\u9ed8\u8ba4\u503c\u5c06\u66f4\u6539\u4efb\u4f55\u4ee5\u524d\u7684\u9ed8\u8ba4\u9875\u9762\u8bbe\u7f6e\u3002\u662f\u5426\u786e\u5b9a\u8981\u7ee7\u7eed\uff1f"}, {"DELETE_DEFAULT_PAGE_MSG", "\u65e0\u6cd5\u5220\u9664\u9ed8\u8ba4\u9875\u9762\u3002\u9009\u62e9\u4efb\u4f55\u5176\u4ed6\u9875\u9762\u4f5c\u4e3a\u9ed8\u8ba4\u9875\u9762\uff0c\u7136\u540e\u518d\u5220\u9664\u6b64\u9875\u9762\u3002"}, {"DELETE_PAGE_AND_COMPONENT_MSG", "\u5220\u9664\u9875\u9762\u5c06\u56e0\u800c\u5220\u9664\u8be5\u9875\u9762\u4e2d\u7684\u6240\u6709\u7ec4\u4ef6\u3002\u662f\u5426\u786e\u5b9a\u8981\u5220\u9664\u6b64\u9875\u9762\uff1f"}, {"VALID_URL_MSG", "\u8bf7\u8f93\u5165\u4ee5\u4e0b\u683c\u5f0f\u7684 URL\uff1ahttp://www.yourdomain.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "\u662f\u5426\u786e\u5b9a\u8981\u5220\u9664\u6b64\u7ec4\u4ef6\uff1f"}, {"NO_COMPONENT_MSG", "\u5f53\u524d\u6ca1\u6709\u5728\u9875\u9762\u4e2d\u6dfb\u52a0\u4efb\u4f55\u7ec4\u4ef6\u3002"}, {"LOAD_DATA_MSG", "\u6b63\u5728\u52a0\u8f7d\u6570\u636e..."}, {"COMPONENT_EXISTS_MSG", "\u7ec4\u4ef6\u5df2\u7ecf\u5b58\u5728\u3002\u73b0\u6709\u7ec4\u4ef6\u8be6\u7ec6\u4fe1\u606f\uff1a "}, {"REFRESH_INTERVAL_RANGE", "\u5237\u65b0\u95f4\u9694\u8d85\u51fa\u8303\u56f4\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u503c\u3002"}, {"ITEMS_RANGE", "\u9879\u76ee\u6570\u8d85\u51fa\u8303\u56f4\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u6570\u5b57\u3002"}, {"ALERT_SHOWTIME_RANGE", "\u8b66\u62a5\u663e\u793a\u65f6\u95f4\u8d85\u51fa\u8303\u56f4\u3002\u8bf7\u586b\u5199\u4e00\u4e2a\u6709\u6548\u7684\u503c\u3002"}, {"NO_COMPONENT_SELECTED_ERR", "\uff1a\u5c06\u7ec4\u4ef6\u6dfb\u52a0\u5230\u9875\u9762\u4e4b\u524d\uff0c\u8bf7\u9009\u62e9\u4e00\u4e2a\u7ec4\u4ef6\u3002"}, {"ADDCOMPONENT_ERR_QUOTES", "\u7ec4\u4ef6\u6807\u9898\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u3001\u5192\u53f7\u3001\u767e\u5206\u6bd4\u3001\u54c8\u5e0c\u3001\u95ee\u53f7\u548c\u7ba1\u9053\u7b26\u53f7\u3002"}, {"ADDPAGE_ERR_QUOTES", "\u9875\u9762\u6807\u9898\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u3001\u5192\u53f7\u3001\u767e\u5206\u6bd4\u3001\u54c8\u5e0c\u3001\u95ee\u53f7\u548c\u7ba1\u9053\u7b26\u53f7\u3002"}, {"TIME_PERIOD", "\u65f6\u95f4\u6bb5"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "\u5220\u9664\u9875\u9762\u5c06\u56e0\u800c\u5220\u9664\u8be5\u9875\u9762\u4e2d\u7684\u6240\u6709\u90e8\u4ef6\u3002\u662f\u5426\u786e\u5b9a\u8981\u5220\u9664\u6b64\u9875\u9762\uff1f"}, {"ADDWIDGET_ERR_QUOTES", "\u90e8\u4ef6\u6807\u9898\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u7b26\uff1a\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u3001\u5192\u53f7\u3001\u767e\u5206\u6bd4\u3001\u54c8\u5e0c\u3001\u95ee\u53f7\u548c\u7ba1\u9053\u7b26\u53f7\u3002"}, {"TIME_PERIOD", "\u65f6\u95f4\u6bb5"}, {"COPY_WIDGET_VALIDATION_MSG", "\u8bf7\u9009\u62e9\u8981\u590d\u5236\u7684\u9875\u9762\u3002"}, {"COPY_WIDGET_HEADER", "\u590d\u5236\u90e8\u4ef6"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "\u641c\u7d22\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u9002\u7528\u4e8e\u6b64\u90e8\u4ef6\u7684\u5173\u952e\u5b57"}, {"IGNORED_INVALID_SEARCH_FILTER", "\u5ffd\u7565\u65e0\u6548\u7684\u641c\u7d22\u8fc7\u6ee4\u5668\u3002"}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "\u4e00\u4e2a\u6216\u591a\u4e2a GMSVP \u5b9e\u4f8b\u6ca1\u6709\u5730\u7406\u4f4d\u7f6e\u3002"}, {"NDA_NG_REPORTING_WIDGET_MSG", "\u672a\u53d1\u73b0\u5339\u914d\u7684\u8bb0\u5f55"}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "\u8b66\u62a5\u8baf\u606f"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u6700\u540e\u62a5\u544a\u65f6\u95f4"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "\u8b66\u62a5\u7c7b\u578b"}, {"LOGS_WIDGET_COL_MESSAGE", "\u8baf\u606f"}, {"LOGS_WIDGET_COL_DATE", "\u65e5\u671f"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "\u7528\u6237\u8be6\u60c5"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "\u8bf4\u660e"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "\u9884\u5b9a\u65f6\u95f4\uff08\u5f53\u5730\u65f6\u95f4"}, {"DSB_CONFIRM_DELETE_WIDGET", "\u6b64\u64cd\u4f5c\u5c06\u5220\u9664\u8be5\u90e8\u4ef6\uff0c\u662f\u5426\u7ee7\u7eed\uff1f"}, {"DSB_SEARCH_DIALOG_MESG", "\u8fd9\u4e9b\u90e8\u4ef6\u5339\u914d\u4ee5\u4e0b\u9879\u7684\u7ed3\u679c "}, {"DSB_SEARCH_DIALOG_HEADER", "\u5176\u4ed6\u641c\u7d22\u7ed3\u679c"}, {"DSB_CLEARHISTORY_MESG", "\u662f\u5426\u6e05\u9664\u6240\u6709\u641c\u7d22\u5386\u53f2\u8bb0\u5f55\uff1f"}, {"DSB_CLEARHISTORY_HDR", "\u641c\u7d22\u5386\u53f2\u8bb0\u5f55"}, {"DSB_ADDNEW_WIDGET_LBL", "\u6dfb\u52a0\u65b0\u90e8\u4ef6 "}, {"DSB_GENSTTINGS_HDR", "\u5e38\u89c4\u8bbe\u7f6e "}, {"DSB_ASSOCPROD_HDR", "\u76f8\u5173\u4ea7\u54c1 "}, {"DSB_SUBALERTS_HDR", "\u5305\u62ec\u7684\u5b50\u8b66\u62a5 "}, {"DSB_WIDGETTITLE_LBL", "\u6807\u9898\uff1a "}, {"DSB_NOFITEMS_LBL", "\u9879\u76ee\u6570\uff1a "}, {"DSB_REFINT_LBL", "\u5237\u65b0\u95f4\u9694\uff1a "}, {"DSB_ALERTSTRIGGERED_LBL", "\u663e\u793a\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u5185\u89e6\u53d1\u7684\u8b66\u62a5\uff1a "}, {"DSB_NEWSUBALERTS_LBL", "\u65b0\u7684\u5b50\u8b66\u62a5\uff1a "}, {"DSB_CUSTRSSURL_LBL", "\u81ea\u5b9a\u4e49 RSS URL\uff1a "}, {"DSB_WRAPTEXT_LBL", "\u6587\u672c\u6362\u884c\uff1a "}, {"DSB_ADDPAGE_HDR", "\u6dfb\u52a0\u65b0\u9875\u9762 "}, {"DSB_ADDPAGE_LBL", "\u9875\u9762\u6807\u9898\uff1a "}, {"DSB_MAPLOCATIONDLG_HDR", "\u6dfb\u52a0/\u7f16\u8f91\u4f4d\u7f6e"}, {"DSB_ADDRESS_LBL", "\u5730\u5740\uff1a "}, {"DSB_GEOLOCATION_LBL", "\u5730\u7406\u4f4d\u7f6e\uff1a "}, {"DSB_DELPAGE_LBL", "\u7cfb\u7edf\u751f\u6210\u7684\u9875\u9762\uff0c\u65e0\u6cd5\u5220\u9664\u3002"}, {"DSB_DELPAGE_HDR", "\u662f\u5426\u5220\u9664\u9875\u9762\uff1f"}, {"DSB_DELPAGECONFIRM_MSG", "\u662f\u5426\u8981\u5220\u9664\u8be5\u9875\u9762\uff1f"}, {"CZ_YES", "\u662f"}, {"CZ_CERT_ISSUER", "\u8bc1\u4e66\u9881\u53d1\u8005"}, {"CZ_SUB_DN", "\u4f7f\u7528\u8005\u8bc6\u522b\u540d"}, {"CZ_CERT_SN", "\u8bc1\u4e66\u5e8f\u5217\u53f7"}, {"CZ_VALID_FROM", "\u6709\u6548\u671f\u81ea"}, {"CZ_EXPIRES_ON", "\u5230\u671f\u65e5"}, {"CZ_STATUS", "\u72b6\u6001"}, {"CZ_REQ_GEN", "\u751f\u6210\u7684\u8bf7\u6c42"}, {"CZ_SUB_KEY_ID", "\u4f7f\u7528\u8005\u5bc6\u94a5\u6807\u8bc6\u7b26"}, {"CZ_CRL_STATUS", "CRL \u72b6\u6001"}, {"CZ_CRL_EXPIRES_ON", "CRL \u5230\u671f\u65e5"}, {"CZ_CRL_REQUIRED", "\u9700\u8981 CRL"}, {"CZ_CRL_AUTO_URL", "CRL \u81ea\u52a8\u66f4\u65b0 URL"}, {"CZ_HEADER", "\u8bc1\u4e66\u548c\u8bc1\u4e66\u8bf7\u6c42"}, {"CZ_NAME", "\u540d\u79f0"}, {"CZ_TYPE", "\u7c7b\u578b"}, {"CZ_VALIDATED", "\u5df2\u9a8c\u8bc1"}, {"CZ_EXPIRES", "\u5230\u671f"}, {"CZ_DETAILS", "\u8be6\u7ec6\u4fe1\u606f"}, {"CZ_CONFIGURE", "\u914d\u7f6e"}, {"CZ_DELETE_CERT", "\u5220\u9664\u6b64\u8bc1\u4e66"}, {"CZ_CANT_DELETE_CERT", "\u8fd9\u662f\u4e00\u4e2a\u65e0\u6cd5\u5220\u9664\u7684\u5185\u7f6e\u8bc1\u4e66"}, {"CZ_EMAIL_CERT", "\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u6b64\u8bc1\u4e66"}, {"CZ_CANT_EMAIL_CERT", "\u53ea\u6709\u5bfc\u5165\u7684\u672c\u5730\u8bc1\u4e66\u548c\u7b7e\u540d\u8bf7\u6c42\u624d\u80fd\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u53d1\u9001"}, {"CZ_IMPORT_CERT_CRL", "\u5bfc\u5165\u8bc1\u4e66\u540a\u9500\u5217\u8868"}, {"CZ_UPLOAD_SIGNED_CERT", "\u4e0a\u4f20\u7b7e\u540d\u7684\u8bc1\u4e66"}, {"CZ_CERT_SEARCH", "\u8bc1\u4e66\u641c\u7d22"}, {"CZ_CERT_SELECTED", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u9a8c\u8bc1\u8be5\u8bc1\u4e66"}, {"CZ_SURE", "\u662f\u5426\u786e\u5b9a\u8981\u7ee7\u7eed"}, {"CZ_CERTS_SELECTED", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u4ee5\u4e0b\u8bc1\u4e66\u3002"}, {"CZ_PLZ_SELECT", "\u8bf7\u9009\u62e9\u8981\u5220\u9664\u7684\u8bc1\u4e66\u3002"}, {"CZ_VIEW_STYLE", "\u8bc1\u4e66\u89c6\u56fe\u6837\u5f0f"}, {"CZ_ALL_CERTS", "\u6240\u6709\u8bc1\u4e66"}, {"CZ_IMPORT_CERTS", "\u5bfc\u5165\u7684\u8bc1\u4e66\u548c\u8bf7\u6c42"}, {"CZ_BUILTIN_CERTS", "\u5185\u7f6e\u8bc1\u4e66"}, {"CZ_INCLUDE_EXPIRED_CERTS", "\u5305\u62ec\u8fc7\u671f\u7684\u5185\u7f6e\u8bc1\u4e66"}, {"CZ_IMPORT", "\u5bfc\u5165..."}, {"CZ_NEW_REQ", "\u65b0\u7b7e\u540d\u8bf7\u6c42..."}, {"CZ_DEL_CERTS", "\u5220\u9664\u8bc1\u4e66"}, {"CZ_REQUIRE_CERT", "\u5bfc\u5165\u9700\u8981\u8bc1\u4e66\u540d\u79f0\u3002"}, {"CZ_IMPORT_REQUIRE_FILE", "\u5bfc\u5165\u9700\u8981\u8bc1\u4e66\u6587\u4ef6\u3002"}, {"CZ_NO_DOT", "\u8bc1\u4e66\u540d\u79f0\u65e0\u6548\u3002\u8be5\u540d\u79f0\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528\u4efb\u4f55\u201c.\u201d\u3002"}, {"CZ_IMPORT_REQUIRE_CMP", "\u5bfc\u5165\u9700\u8981\u8bc1\u4e66\u7ba1\u7406\u5bc6\u7801\u3002"}, {"CZ_IMPORT_CERT", "\u5bfc\u5165\u8bc1\u4e66"}, {"CZ_IMPORT_LOCAL", "\u4ece PKCS#12\uff08.p12 \u6216 .pfx\uff09\u7f16\u7801\u6587\u4ef6\u5bfc\u5165\u672c\u5730\u6700\u7ec8\u7528\u6237\u8bc1\u4e66\u53ca\u79c1\u6709\u5bc6\u94a5"}, {"CZ_IMPORT_CA", "\u4ece PKCS#7 (.p7b)\u3001PEM (.pem) \u6216 DER\uff08.der \u6216 .cer\uff09\u7f16\u7801\u6587\u4ef6\u5bfc\u5165 CA \u8bc1\u4e66"}, {"CZ_CERT_NAME", "\u8bc1\u4e66\u540d\u79f0"}, {"CZ_CMP", "\u8bc1\u4e66\u7ba1\u7406\u5bc6\u7801"}, {"CZ_SEL_FILE", "\u8bf7\u9009\u62e9\u8981\u5bfc\u5165\u7684\u6587\u4ef6"}, {"CZ_SPECIFY_FILE", "\u8bf7\u6307\u5b9a\u8981\u5bfc\u5165\u7684\u6587\u4ef6"}, {"CZ_UPLOAD_CERT", "\u4e0a\u4f20\u8bc1\u4e66"}, {"CZ_UPLOAD_SIGN_CERT", "\u4e0a\u4f20\u7b7e\u540d\u8bf7\u6c42\u7684\u5df2\u7b7e\u540d\u8bc1\u4e66"}, {"CZ_SEL_UPLOAD_FILE", "\u8bf7\u9009\u62e9\u8981\u4e0a\u4f20\u7684\u6587\u4ef6"}, {"CZ_FILE_FORMAT", "\u6587\u4ef6\u5e94\u4e3a PEM (.pem) \u6216 DER\uff08.der \u6216 .cer\uff09\u7f16\u7801"}, {"CZ_EXPORT_CERT", "\u5bfc\u51fa\u8bc1\u4e66"}, {"CZ_EXPORT_CERT_REQ", "\u5bfc\u51fa\u8bc1\u4e66\u8bf7\u6c42"}, {"CZ_CERT_EMAIL_CONTENT", "\u5df2\u751f\u6210 PKCS#10 \u8ba4\u8bc1\u8bf7\u6c42\u5e76\u53ef\u7528\u4e8e\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u8bf7\u5c06\u6b64\u6587\u4ef6\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u4e0a\uff0c\u7528\u4e8e\u63d0\u4ea4\u81f3\u6ce8\u518c\u6216\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u3002\u8be5\u6587\u4ef6\u5c06\u4ee5 PEM \u8bc1\u4e66\u8bf7\u6c42\u683c\u5f0f\u4fdd\u5b58\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f5c\u4e3a"}, {"CZ_CHANGE_FILE_NAME", "\uff08\u53ef\u5728\u4e0b\u8f7d\u65f6\u6839\u636e\u9700\u8981\u66f4\u6539\u6587\u4ef6\u540d\uff09\u3002"}, {"CZ_SPECIFY_URL", "\u8bf7\u6307\u5b9a\u4e00\u4e2a CRL URL\u3002"}, {"CZ_SPECIFY_CRL_FILE", "\u8bf7\u6307\u5b9a\u8981\u5bfc\u5165\u7684 CRL \u6587\u4ef6"}, {"CZ_INVALID_FILE", "\u9009\u5b9a\u7684\u6587\u4ef6\u683c\u5f0f\u65e0\u6548\u3002"}, {"CZ_SPECIFY_VALID_LC", "\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u672c\u5730\u8bc1\u4e66\u6587\u4ef6\u3002"}, {"CZ_SPECIFY_VALID_CA", "\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684 CA \u8bc1\u4e66\u6587\u4ef6\u3002"}, {"CZ_SPECIFY_VALID_CRL", "\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684 CRL \u6587\u4ef6\u3002"}, {"CZ_SPECIFY_VALID_SIGNED", "\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u7b7e\u540d\u8bc1\u4e66\u6587\u4ef6\u3002"}, {"CZ_IMPORT_CRL", "\u5bfc\u5165 CRL"}, {"CZ_IMPORT_CRL_FULL", "\u5bfc\u5165\u8bc1\u4e66\u540a\u9500\u5217\u8868"}, {"CZ_IMPORT_CRL_FILE", "\u76f4\u63a5\u4ece PEM (.pem) \u6216 DER\uff08.der \u6216 .crl\uff09\u7f16\u7801\u6587\u4ef6\u5bfc\u5165 CRL"}, {"CZ_SEL_CRL_FILE", "\u9009\u62e9\u8981\u5bfc\u5165\u7684 CRL \u6587\u4ef6"}, {"CZ_AUTO_IMPORT_CRL", "\u901a\u8fc7 HTTP \u5b9a\u671f\u81ea\u52a8\u5bfc\u5165 CRL"}, {"CZ_CRL_LOC", "\u8f93\u5165 CRL \u7684\u4f4d\u7f6e (URL)"}, {"CZ_INVALIDATE_CERTS", "\u5982\u679c CRL \u5bfc\u5165\u6216\u5904\u7406\u5931\u8d25\uff0c\u5219\u8bc1\u4e66\u548c\u5b89\u5168\u5173\u8054\u5931\u6548"}, {"CZ_CMP_REQUIRE", "\u9700\u8981\u8bc1\u4e66\u7ba1\u7406\u5bc6\u7801\u624d\u80fd\u5bfc\u51fa\u8bc1\u4e66"}, {"CZ_CERT_NAME_REQUIRE", "PKCS10 \u751f\u6210\u9700\u8981\u8bc1\u4e66\u540d\u79f0\u3002"}, {"CZ_CERT_NAME_IN_USE", "\u8bc1\u4e66\u540d\u79f0\u5df2\u7ecf\u4f7f\u7528\u3002\u8bf7\u9009\u62e9\u53e6\u4e00\u540d\u79f0\u3002"}, {"CZ_SUB_DN_REQUIRE", "PKCS10 \u751f\u6210\u81f3\u5c11\u9700\u8981\u4e00\u4e2a\u4f7f\u7528\u8005\u540d\u79f0\u5c5e\u6027\u3002"}, {"CZ_CN_TWO_CHARS", "\u56fd\u5bb6\u6216\u5730\u533a\u540d\u79f0\u5e94\u4e3a\u4e24\u4e2a\u5b57\u7b26"}, {"CZ_DOMAIN_INVALID", "\u4f7f\u7528\u8005\u5907\u7528\u540d\u79f0\u4e2d\u7684\u57df\u540d\u65e0\u6548\u3002"}, {"CZ_IP_INVALID", "\u4f7f\u7528\u8005\u5907\u7528\u540d\u79f0\u7684 IP \u5730\u5740\u65e0\u6548\u3002"}, {"CZ_EMAIL_INVALID", "\u4f7f\u7528\u8005\u5907\u7528\u540d\u79f0\u4e2d\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u65e0\u6548\u3002"}, {"CZ_CERT_REQ", "\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42"}, {"CZ_GEN_CERT_REQ", "\u751f\u6210\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42"}, {"CZ_CERT_ALIAS", "\u8bc1\u4e66\u522b\u540d"}, {"CZ_COUNTRY", "\u56fd\u5bb6\u6216\u5730\u533a"}, {"CZ_STATE", "\u7701/\u81ea\u6cbb\u533a"}, {"CZ_LOC", "\u53bf\u5e02\u6216\u53bf"}, {"CZ_COMPANY", "\u516c\u53f8\u6216\u7ec4\u7ec7"}, {"CZ_LOC_CITY", "\u53bf\u5e02\u3001\u5e02\u6216\u53bf"}, {"CZ_DEPT", "\u90e8\u95e8"}, {"CZ_GROUP", "\u7ec4"}, {"CZ_TEAM", "\u5c0f\u7ec4"}, {"CZ_CNAME", "\u516c\u7528\u540d"}, {"CZ_SN", "\u5e8f\u5217\u53f7"}, {"CZ_EMAIL", "\u7535\u5b50\u90ae\u4ef6\u5730\u5740"}, {"CZ_SUB_ALT_NAME", "\u4f7f\u7528\u8005\u5907\u7528\u540d\u79f0\uff08\u53ef\u9009\uff09"}, {"CZ_DOMAIN_NAME", "\u57df\u540d"}, {"CZ_IPV4", "IPv4 \u5730\u5740"}, {"CZ_SUB_KEY_TYPE", "\u4f7f\u7528\u8005\u5bc6\u94a5\u7c7b\u578b"}, {"CZ_SIG_ALGORITHM", "\u7b7e\u540d\u7b97\u6cd5"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "\u4f7f\u7528\u8005\u5bc6\u94a5\u5927\u5c0f"}, {"CZ_NO_CERTS", "\u672a\u627e\u5230\u8bc1\u4e66"}, {"IMPORT", "\u5bfc\u5165"}, {"CZ_SCEP_CONFIG", "SCEP \u914d\u7f6e"}, {"CZ_CSR_LIST", "CSR \u5217\u8868"}, {"CZ_NO_CSR", "\u65e0 CSR"}, {"CZ_CHALLENGE_PWD", "\u6311\u6218\u5bc6\u7801\uff08\u53ef\u9009\uff09"}, {"CZ_CA_URL", "CA URL"}, {"CZ_REQ_COUNT", "\u8bf7\u6c42\u8ba1\u6570"}, {"CZ_POLL_INTERVAL", "\u8f6e\u8be2\u95f4\u9694\uff08\u79d2\uff09"}, {"CZ_POLL_TIME", "\u6700\u5927\u8f6e\u8be2\u65f6\u95f4\uff08\u79d2\uff09"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA URL \u4e0d\u80fd\u4e3a\u7a7a"}, {"CZ_GEN_CSR", "\u6ca1\u6709\u53ef\u7528\u7684 CSR\uff0c\u8bf7\u81f3\u5c11\u751f\u6210\u4e00\u4e2a"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "\u6765\u81ea\u9009\u5b9a\u8fc7\u6ee4\u5668\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u5c06\u88ab\u63a8\u9001\u5230\u9009\u5b9a\u7ec4\u8282\u70b9\u4e0b\u7684\u6240\u6709\u8bbe\u5907\u3002"}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "\u6765\u81ea\u9009\u5b9a\u8fc7\u6ee4\u5668\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u5c06\u4ece\u9009\u5b9a\u8bbe\u5907\u7684\u7236\u8282\u70b9\u7ee7\u627f\u3002"}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "\u6765\u81ea\u9009\u5b9a\u8fc7\u6ee4\u5668\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u5c06\u4ece\u9009\u5b9a\u7ec4\u8282\u70b9\u63a8\u9001\u5230\u7236\u8282\u70b9\u3002<br>\u8981\u5c06\u8bbe\u7f6e\u5e94\u7528\u5230\u7236\u8282\u70b9\u4e0b\u7684\u6240\u6709\u8bbe\u5907\uff08\u9009\u5b9a\u8282\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u9664\u5916\uff09\uff0c\u8bf7\u5728\u201c\u9884\u89c8\u201d\u5c4f\u5e55\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u9009\u62e9\u3002"}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "\u6765\u81ea\u9009\u5b9a\u8fc7\u6ee4\u5668\u7684\u6240\u6709\u8bbe\u7f6e\u90fd\u5c06\u4ece\u9009\u5b9a\u8bbe\u5907\u63a8\u9001\u5230\u7236\u8282\u70b9\u3002<br>\u8981\u5c06\u8bbe\u7f6e\u5e94\u7528\u5230\u7236\u8282\u70b9\u4e0b\u7684\u6240\u6709\u8bbe\u5907\uff08\u9009\u5b9a\u8bbe\u5907\u9664\u5916\uff09\uff0c\u8bf7\u5728\u201c\u9884\u89c8\u201d\u5c4f\u5e55\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u9009\u62e9\u3002"}, {"WS_URI_HEADER", "\u516c\u5171 URI"}, {"WS_URI_INSTRUCTIONS", "\u8f93\u5165\u6b64\u90e8\u7f72\u7684\u516c\u5171\u670d\u52a1\u5668\u540d\u79f0\u3002\u6b64\u540d\u79f0\u5c06\u7528\u4e8e\u8bbf\u95ee\u6b64\u670d\u52a1\u5668\u4e0a\u7684 Web \u670d\u52a1\u5e76\u5c06\u88ab\u5305\u542b\u5728\u5d4c\u5165\u5f0f\u4ea4\u53c9\u94fe\u63a5\u4e2d\u3002"}, {"WS_URI_NOTE", "\u6ce8\uff1a\u516c\u5171\u670d\u52a1\u5668\u7aef\u53e3\u7528\u4e8e\u4ece\u516c\u5171\u57df\u8bbf\u95ee GMS Web \u670d\u52a1\u3002\u8981\u4fee\u6539 GMS \u5728\u5176\u4e0a\u8fd0\u884c Web \u670d\u52a1\u7684\u7aef\u53e3\uff0c\u8bf7\u5bfc\u822a\u5230 System Interface/Deployment/Settings"}, {"WS_DEPLOYMENT_HEADER", "GMS \u90e8\u7f72"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "\u9009\u62e9\u8981\u914d\u7f6e Web \u670d\u52a1\u7684\u90e8\u7f72\u3002"}, {"WS_DEPLOYMENT_ERROR", "\u6ca1\u6709\u5f53\u524d\u6d3b\u52a8\u7684\u5df2\u8bb8\u53ef\u90e8\u7f72"}, {"WS_STATUS_HEADER", "Web \u670d\u52a1"}, {"WS_SERVICES_ERROR", "\u6ca1\u6709\u627e\u5230\u6b64\u90e8\u7f72\u7684 Web \u670d\u52a1"}, {"WS_DEPLOYMENTS_EMPTY", "\u65e0\u6cd5\u83b7\u53d6\u90e8\u7f72\u5217\u8868\u3002\u8bf7\u6ce8\u518c GMSVP \u7684\u6b64\u5b9e\u4f8b\u3002"}, {"WS_DISTRIBUTED_HEADER", "\u5206\u5e03\u5f0f\u5b9e\u4f8b"}, {"WS_DISTRIBUTED_EMPTY", "\u6ca1\u6709\u914d\u7f6e\u7528\u4e8e\u6b64\u670d\u52a1\u5668\u7684\u5206\u5e03\u5f0f\u5b9e\u4f8b"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "\u5e94\u7528\u6a21\u677f\uff1a "}, {"HM_APPLY_RECORDING_TASK_DESC", "\u5e94\u7528\u8bb0\u5f55\uff1a "}, {"LM_CONFIRM_DELETE_RULE", "\u662f\u5426\u786e\u5b9a\u8981\u5220\u9664\u9009\u5b9a\u7684\u89c4\u5219\uff1f"}, {"LM_SUCCESS_DELETE_RULE", "\u89c4\u5219\u5220\u9664\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_DELETE_RULE", "\u65e0\u6cd5\u6210\u529f\u5220\u9664\u9009\u5b9a\u7684\u89c4\u5219\u3002"}, {"LM_SUCCESS_UPDATE_RULE", "\u89c4\u5219\u66f4\u65b0\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_UPDATE_RULE", "\u65e0\u6cd5\u6210\u529f\u66f4\u65b0\u89c4\u5219\u3002"}, {"LM_DUPLICATE_STMT_NAME", "\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u89c4\u5219\u5df2\u7ecf\u5b58\u5728\u3002\\n\u8bf7\u4e3a\u89c4\u5219\u8f93\u5165\u4e00\u4e2a\u552f\u4e00\u7684\u540d\u79f0"}, {"LM_RULE_DESTINATION_EMPTY", "\u76ee\u6807\u4e3a\u7a7a\u3002\\n\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u6761\u76ee\u3002"}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "\u76ee\u6807\u4e0d\u80fd\u8d85\u8fc7 256 \u4e2a\u5b57\u7b26\u3002\\n\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u6761\u76ee\u3002"}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "\u5fc5\u987b\u6307\u5b9a\u9009\u5b9a\u7c7b\u578b\u7684\u76ee\u6807\u503c\u3002\\n\u8bf7\u6307\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u6761\u76ee\u3002"}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u76ee\u6807\u6307\u5b9a\u65e5\u7a0b\u3002\\n\u8bf7\u9009\u62e9\u4e00\u4e2a\u6709\u6548\u7684\u65e5\u7a0b\u6216\u65e5\u7a0b\u7ec4\u3002"}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "\u6b64\u9875\u9762\u4e2d\u9009\u5b9a\u76ee\u6807\u7684\u57df\u4e0e\u4e0a\u4e00\u9875\\n\u9009\u5b9a\u4e25\u91cd\u6027\u7684\u57df\u4e0d\u5339\u914d\u3002\\n\\n\u4ece\u76f8\u540c\u7684\u57df\u5185\u9009\u53d6\u5bf9\u8c61\u975e\u5e38\u91cd\u8981\u3002\\n\u5982\u679c\u9009\u5b9a\u7684\u4e25\u91cd\u6027\u4e0d\u6b63\u786e\uff0c\u8bf7\u8fd4\u56de\u5e76\u4ece\u9884\u671f\u7684\u57df\u4e2d\u9009\u53d6\u4e25\u91cd\u6027\u3002\\n\u5426\u5219\uff0c\u4ece\u5339\u914d\u4e25\u91cd\u6027\u7684\u57df\u4e2d\u9009\u62e9\u4e00\u4e2a\u76ee\u6807\u3002"}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "\u6b64\u9875\u9762\u4e2d\u9009\u5b9a\u65e5\u7a0b\u7684\u57df\u4e0e\u4e0a\u4e00\u9875\\n\u9009\u5b9a\u4e25\u91cd\u6027\u7684\u57df\u4e0d\u5339\u914d\u3002\\n\\n\u4ece\u76f8\u540c\u7684\u57df\u5185\u9009\u53d6\u5bf9\u8c61\u975e\u5e38\u91cd\u8981\u3002\\n\u5982\u679c\u9009\u5b9a\u7684\u4e25\u91cd\u6027\u4e0d\u6b63\u786e\uff0c\u8bf7\u8fd4\u56de\u5e76\u4ece\u9884\u671f\u7684\u57df\u4e2d\u9009\u53d6\u4e25\u91cd\u6027\u3002\\n\u5426\u5219\uff0c\u4ece\u5339\u914d\u4e25\u91cd\u6027\u7684\u57df\u4e2d\u9009\u62e9\u4e00\u4e2a\u65e5\u7a0b\u3002"}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "\u65e0\u6cd5\u8bbe\u7f6e\u63a7\u5236\u680f\u72b6\u6001\u3002"}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "\u65e0\u6cd5\u8bbe\u7f6e\u81ea\u52a8\u6eda\u52a8\u72b6\u6001\u3002"}, {"LM_READER_START_SUCCESS", "\u5b9e\u65f6\u76d1\u89c6\u8bfb\u53d6\u5668\u5df2\u542f\u52a8\u3002"}, {"LM_READER_START_FAILURE", "\u65e0\u6cd5\u542f\u52a8\u5b9e\u65f6\u76d1\u89c6\u8bfb\u53d6\u5668\u3002\u8bf7\u68c0\u67e5\u8bbe\u7f6e\u914d\u7f6e\u3002\\n \uff08\u6ce8\uff1a\u6307\u5b9a\u7684\u8f6c\u53d1\u5730\u5740\u548c\u7aef\u53e3\u5e94\u53ef\u4ece\u63a7\u5236\u53f0/Web \u670d\u52a1\u5668\u8fdb\u884c\u8bbf\u95ee\uff09\u3002"}, {"LM_READER_STOP_SUCCESS", "\u5b9e\u65f6\u76d1\u89c6\u8bfb\u53d6\u5668\u5df2\u505c\u6b62\u3002"}, {"LM_READER_STOP_FAILURE", "\u65e0\u6cd5\u505c\u6b62\u5b9e\u65f6\u76d1\u89c6\u8bfb\u53d6\u5668\u3002"}, {"LM_EC_DISABLED", "Syslog \u8f6c\u53d1\u5f53\u524d\u5df2\u7981\u7528\u3002<br>Syslog \u5fc5\u987b\u8f6c\u53d1\u5230\u4e8b\u4ef6\u7ba1\u7406\u5668\u670d\u52a1\u4ee5\u8fdb\u884c\u76d1\u89c6\u3002<br>\u8981\u542f\u7528 Syslog \u8f6c\u53d1\u4ee5\u8fdb\u884c\u76d1\u89c6\uff0c\u8bf7\u5355\u51fb\u4e0a\u9762\u63a7\u5236\u680f\u4e2d\u7684\u201c\u8bbe\u7f6e\u201d\u3002"}, {"LM_READER_NO_ALERT_MSG", "\u8bfb\u53d6\u5668\u672a\u6536\u5230\u4efb\u4f55\u65b0\u8b66\u62a5\u3002<br>\u6ce8\uff1a\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u68c0\u67e5\u76d1\u89c6\u5668\u8bbe\u7f6e\u548c\u8bbe\u5907\u7684 syslog \u914d\u7f6e\u3002"}, {"LM_READER_STOPPED_MSG", "\u8bfb\u53d6\u5668\u5f53\u524d\u5df2\u505c\u6b62\u3002<br>\u8bf7\u901a\u8fc7\u5355\u51fb\u4e0a\u9762\u63a7\u5236\u680f\u4e2d\u7684\u201c\u542f\u52a8\u201d\u6309\u94ae\u542f\u52a8\u8bfb\u53d6\u5668\u3002"}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "\u60a8\u65e0\u6743\u8bbf\u95ee\u8bbe\u5907\u3002<br>\u5982\u679c\u60a8\u60f3\u76d1\u89c6\u4efb\u4f55\u6b64\u7c7b\u8bbe\u5907\u8f6c\u53d1\u7684 syslog\uff0c\u8bf7\u8054\u7cfb\u60a8\u7684\u7ba1\u7406\u5458\u3002"}, {"LM_READER_ERROR_MSG", "\u9047\u5230\u9519\u8bef\u3002<br>\u5904\u7406\u5b9e\u65f6\u76d1\u89c6\u5668\u8bfb\u53d6\u5668\u6536\u96c6\u65f6\u53d1\u751f\u5f02\u5e38\u3002"}, {"LM_READER_SOCKET_ERROR_MSG", "\u9047\u5230\u9519\u8bef\u3002<br>\u542f\u52a8\u5b9e\u65f6\u76d1\u89c6\u5668\u8bfb\u53d6\u5668\u65f6\u53d1\u751f\u5f02\u5e38\u3002<br>\u5f02\u5e38\u8be6\u7ec6\u4fe1\u606f\uff1a "}, {"LM_FAILURE_UPDATE_SETTINGS", "\u65e0\u6cd5\u66f4\u65b0\u5b9e\u65f6\u76d1\u89c6\u5668\u8bbe\u7f6e\u3002"}, {"LM_SUCCESS_UPDATE_SETTINGS", "\u6210\u529f\u66f4\u65b0\u5b9e\u65f6\u76d1\u89c6\u5668\u8bbe\u7f6e\u3002"}, {"LM_WARN_ENABLE_EC", "\u4e8b\u4ef6\u7ba1\u7406\u4f7f\u7528Syslog Collector\u6536\u96c6\u548c\u8f6c\u53d1\u7684\u65e5\u5fd7\uff08Syslog\uff09\u6765\u76d1\u63a7\u7f51\u7edc\u3002\u8fd9\u4e9b\u65e5\u5fd7\u6839\u636e\u5b9a\u4e49\u89c4\u5219\u88ab\u53d1\u9001\u5230\u5f15\u64ce\u505a\u4e8b\u4ef6\u5904\u7406\u3002 \\n\\n\u6ce8\u610f\uff1a\u542f\u7528\u6b64\u9009\u9879\u4f1a\u628a\u6240\u6709\u4eceSyslog Collector\u6536\u5230\u7684\u65e5\u5fd7\u9001\u5230\u4e00\u4e2a\u4e2d\u592e\u4e8b\u4ef6\u7ba1\u7406\u670d\u52a1. \u4e3a\u4e86\u5904\u7406\u4e8b\u4ef6\uff0c\u6bcf\u4e00\u4e2a\u65e5\u5fd7\u901a\u8fc7Syslog Collector\u590d\u5236\uff0c\u8fd9\u5c06\u63d0\u9ad8\u6574\u4e2a\u7f51\u7edc\u7684Syslog\u6d41\u91cf."}, {"LM_STMT_CHANGED_MSG_1", "\u60a8\u5df2\u66f4\u6539\u9009\u5b9a\u7684\u89c4\u5219"}, {"LM_STMT_CHANGED_MSG_2", "\u3002\\n\u8f6c\u5230\u4e0a\u4e00\u5c4f\u5e55\uff08\u201c\u89c4\u5219\u5217\u8868\u201d\u9875\u9762\uff09\u5c06\u610f\u5473\u7740\u4e22\u5931\u60a8\u7684\u66f4\u6539\u3002\\n\u5355\u51fb\u201c\u786e\u5b9a\u201d\u8f6c\u5230\u201c\u89c4\u5219\u5217\u8868\u201d\u9875\u9762\uff0c\u6216\u5355\u51fb\u201c\u53d6\u6d88\u201d\u7ee7\u7eed\u7f16\u8f91\u6b64\u89c4\u5219\u3002"}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "\u65e0\u6cd5\u66f4\u65b0\u5bf9\u63a5\u72b6\u6001\u3002"}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "\u60a8\u6ca1\u6709\u6b64\u5c4f\u5e55\u7684\u66f4\u65b0\u6743\u9650\u3002"}, {"LM_DELETE_STMT_EMPTY", "\u8bf7\u9009\u62e9\u81f3\u5c11\u4e00\u4e2a\u89c4\u5219\u8fdb\u884c\u5220\u9664\u3002"}, {"LM_STMT_RULE_EMPTY", "\u6ca1\u6709\u9009\u62e9\u89c4\u5219\u7c7b\u578b\u3002\\n\u8bf7\u9009\u62e9\u4e00\u4e2a\u89c4\u5219\u7c7b\u578b\u3002"}, {"LM_STMT_RULE_DUPLICATE", "\u5177\u6709\u76f8\u540c\u89c4\u5219\u7c7b\u578b\u548c\u7f16\u8f91\u5668\u5c5e\u6027\u7684\u89c4\u5219\u5df2\u7ecf\u5b58\u5728\u3002\\n\u8bf7\u4e3a\u6b64\u89c4\u5219\u9009\u62e9\u552f\u4e00\u7684\u89c4\u5219\u5c5e\u6027\u3002"}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "\u8bfb\u53d6\u5668\u7684\u8f6c\u53d1\u7aef\u53e3\u5df2\u66f4\u6539\u3002\\n\u8bfb\u53d6\u5668\u53ef\u80fd\u9700\u8981\u51e0\u79d2\u65f6\u95f4\u624d\u80fd\u6210\u529f\u91cd\u65b0\u542f\u52a8\u3002"}, {"LM_NO_RULE_EDITABLE", "\u9009\u5b9a\u7ec4\u4e2d\u6ca1\u6709\u53ef\u7f16\u8f91\u7684\u89c4\u5219\u7c7b\u578b\u3002\n\u8bf7\u9009\u62e9\u5176\u4ed6\u7ec4/\u89c4\u5219\u7c7b\u578b\u3002"}, {"LM_DISABLE_STMT_EMPTY", "\u8bf7\u9009\u62e9\u81f3\u5c11\u4e00\u4e2a\u89c4\u5219\u7528\u4e8e\u542f\u7528/\u7981\u7528\u64cd\u4f5c\u3002"}, {"LM_SUCCESS_DISABLE_RULE", "\u89c4\u5219\u542f\u7528/\u7981\u7528\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_DISABLE_RULE", "\u65e0\u6cd5\u6210\u529f\u542f\u7528/\u7981\u7528\u9009\u5b9a\u7684\u89c4\u5219\u3002"}, {"LM_EDIT_RULE_MSG_1", "\u60a8\u5df2\u9009\u62e9\u7f16\u8f91\u4ee5\u4e0b\u89c4\u5219\uff1a\\n"}, {"LM_EDIT_RULE_MSG_2", "\\n\u9009\u5b9a\u7684\u5217\u8868\u5305\u542b\u65e0\u6cd5\u7f16\u8f91\u7684\u6240\u6709\u89c4\u5219\u3002\\n\\n\u8bf7\u9009\u62e9\u5176\u4ed6\u89c4\u5219\u4ee5\u7ee7\u7eed\u3002"}, {"LM_EDIT_RULE_MSG_3", "\\n\u9009\u5b9a\u5217\u8868\u5305\u542b\u65e0\u6cd5\u7f16\u8f91\u7684\u89c4\u5219\uff08\u901a\u8fc7 * \u6807\u8bb0\uff09\u3002\\n\\n\u662f\u5426\u8981\u7ee7\u7eed\u7f16\u8f91\u5176\u4f59\u7684\u89c4\u5219\uff1f"}, {"LM_DELETE_RULE_MSG_1", "\u60a8\u5df2\u9009\u62e9\u5220\u9664\u4ee5\u4e0b\u89c4\u5219\uff1a\\n"}, {"LM_DELETE_RULE_MSG_2", "\\n\u9009\u5b9a\u7684\u5217\u8868\u5305\u542b\u65e0\u6cd5\u5220\u9664\u7684\u6240\u6709\u89c4\u5219\u3002\\n\\n\u8bf7\u9009\u62e9\u5176\u4ed6\u89c4\u5219\u4ee5\u7ee7\u7eed\u3002"}, {"LM_DELETE_RULE_MSG_3", "\\n\u9009\u5b9a\u5217\u8868\u5305\u542b\u65e0\u6cd5\u5220\u9664\u7684\u89c4\u5219\uff08\u901a\u8fc7 * \u6807\u8bb0\uff09\u3002\\n\\n\u662f\u5426\u8981\u7ee7\u7eed\u5220\u9664\u5176\u4f59\u7684\u89c4\u5219\uff1f"}, {"LM_DELETE_RULE_MSG_4", "\\n\u662f\u5426\u8981\u7ee7\u7eed\uff1f"}, {"MASKED_LIVEMONITOR_MESSAGE", "\u57fa\u4e8e\u5f3a\u5236\u7684\u9690\u79c1\u653f\u7b56\u5c06\u4e0d\u663e\u793a\u8b66\u62a5\u6d88\u606f"}, {"MASKED_ADDITIONAL_INFORMATION", "\u57fa\u4e8e\u5f3a\u5236\u7684\u9690\u79c1\u653f\u7b56\u5c06\u4e0d\u663e\u793a\u989d\u5916\u7684\u4fe1\u606f"}, {"DSB_NONENGFW_ALERT_TITLE", "\u56fa\u4ef6\u7248\u672c\u8b66\u62a5!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "\u6b64 GMS \u6b63\u5728\u7ba1\u7406\u8fd0\u884c\u975e\u82f1\u8bed\u56fa\u4ef6\u7684 SonicOS \u8bbe\u5907\u3002"}, {"DSB_NONENGFW_ALERT_MSGPART2", "\u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e9b\u8bbe\u5907\u4e2d\u4ee5\u975e\u82f1\u8bed\u5b9a\u4e49\u7684\u5bf9\u8c61\u548c\u7b56\u7565\u5728 GMS UI \u4e2d\u7684\u663e\u793a\u53ef\u80fd\u4e0d\u6b63\u786e\u3002\u4fee\u6539\u6b64\u7c7b\u5bf9\u8c61\u548c\u7b56\u7565\u5e76\u5c06\u5176\u63a8\u9001\u81f3\u6b64\u7c7b\u8bbe\u5907\u53ef\u80fd\u4e0d\u4f1a\u5bfc\u81f4\u9884\u671f\u7684\u7ed3\u679c\u3002"}, {"SYSLOGTAIL_STARTED", "Syslog Reader\uff08\u7528\u4e8e\u8fdb\u884c\u5b9e\u65f6 Syslog \u76d1\u89c6\uff09\u5df2\u542f\u52a8\u3002"}, {"SYSLOGTAIL_START_FAILED", "\u4e0d\u80fd\u542f\u52a8 Syslog Reader\u3002\u8bf7\u68c0\u67e5 Syslog \u8f6c\u53d1\u914d\u7f6e\u3002&nbsp;&nbsp;\uff08\u6ce8:\u5e94\u8be5\u53ef\u4ee5\u4ece\u63a7\u5236\u53f0/Web \u670d\u52a1\u5668\u8bbf\u95ee\u6307\u5b9a\u7684\u8f6c\u53d1\u5730\u5740\u548c\u7aef\u53e3\u3002\uff09"}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog Reader\uff08\u7528\u4e8e\u8fdb\u884c\u5b9e\u65f6 Syslog \u76d1\u89c6\uff09\u5df2\u8fd0\u884c\uff1b\u672a\u8fdb\u884c\u4efb\u4f55\u66f4\u6539"}, {"SYSLOGTAIL_STOPPED", "Syslog Reader\uff08\u7528\u4e8e\u8fdb\u884c\u5b9e\u65f6 Syslog \u76d1\u89c6\uff09\u5df2\u505c\u6b62\u3002"}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog Reader\uff08\u7528\u4e8e\u8fdb\u884c\u5b9e\u65f6 Syslog \u76d1\u89c6\uff09\u5df2\u505c\u6b62\uff1b\u672a\u8fdb\u884c\u4efb\u4f55\u66f4\u6539"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "Reader \u672a\u6536\u5230\u4efb\u4f55\u65b0\u7684 syslog\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "(\uff08Reader \u4ecd\u4f1a\u5c1d\u8bd5\u6536\u96c6 syslog\uff09\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "(\uff08\u5982\u679c\u95ee\u9898\u4f9d\u7136\u5b58\u5728\uff0c\u8bf7\u68c0\u67e5 Syslog Reader \u8bbe\u7f6e\u548c\u9632\u706b\u5899\u914d\u7f6e\uff09\u3002"}, {"SYSLOGTAIL_CONFIG_CHECK", "\u8bf7\u68c0\u67e5 Syslog Reader \u8bbe\u7f6e\u548c\u9632\u706b\u5899\u914d\u7f6e\u3002"}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "\u672a\u627e\u5230 syslog\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER", "\u8bf7\u5c1d\u8bd5\u4fee\u6539\u8fc7\u6ee4\u5b57\u7b26\u4e32\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "(\uff08\u6ce8:\u5728\u591a\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u4f7f\u7528 <b>AND</b> \u6216 <b>OR</b> \u53ef\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\uff09\u3002"}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Syslog Reader \u5f53\u524d\u5df2\u505c\u6b62"}, {"SYSLOGTAIL_START", "\u8bf7\u542f\u52a8 Syslog Reader\u3002"}, {"SYSLOGTAIL_ERROR", "\u51fa\u9519\u3002"}, {"SYSLOGTAIL_ERROR_MESSAGE", "\u5f53\u5904\u7406 syslog \u6536\u96c6\u65f6\u51fa\u73b0\u5f02\u5e38\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "\u672a\u542f\u7528 Syslog \u8f6c\u53d1\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "\u8bf7\u914d\u7f6e Syslog \u8f6c\u53d1\u5730\u5740\u548c\u7aef\u53e3\uff0c\u5e76\u542f\u52a8 Syslog Reader\u3002"}, {"MASKED_SYSLOG_MESSAGE", "\u57fa\u4e8e\u5f3a\u5236\u7684\u9690\u79c1\u653f\u7b56\u5c06\u4e0d\u663e\u793a\u5176\u4f59\u7684 syslog \u6d88\u606f"}, {"EVENT_ALERTS_SEARCH", "\u641c\u7d22\u8b66\u62a5"}, {"EVENT_ALERTS_DELETE", "\u5220\u9664\u8b66\u62a5"}, {"EVENT_ALERTS_ENABLE_DISABLE", "\u542f\u7528/\u7981\u7528\u8b66\u62a5"}, {"EVENT_ALERTS_ADD", "\u6dfb\u52a0\u8b66\u62a5"}, {"EVENT_ALERTS_HEADER", "\u8b66\u62a5"}, {"EVENT_ALERTS_ALERT_NAME", "\u540d\u79f0"}, {"EVENT_ALERTS_ALERT_TYPE", "\u8b66\u62a5\u7c7b\u578b"}, {"EVENT_ALERTS_INTERVAL", "\u95f4\u9694"}, {"EVENT_ALERTS_DEST_SCHED", "\u76ee\u6807/\u8ba1\u5212"}, {"EVENT_ALERTS_ENABLED", "\u5df2\u542f\u7528"}, {"EVENT_ALERTS_DOMAIN", "\u57df"}, {"EVENT_ALERTS_CONFIGURE", "\u914d\u7f6e"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "\u672a\u627e\u5230\u8b66\u62a5"}, {"DTF_ANY", "\u4efb\u4f55\u65f6\u95f4"}, {"DTF_ADD", "\u6dfb\u52a0\u8bbe\u5907"}, {"DTF_EXECUTE", "\u6267\u884c"}, {"DTF_ENABLED", "\u5df2\u542f\u7528"}, {"DTF_SEARCH", "\u9ed8\u8ba4\u4efb\u52a1\u641c\u7d22"}, {"DTF_NOT_FOUND", "\u672a\u627e\u5230\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_DT", "\u9ed8\u8ba4\u4efb\u52a1"}, {"DTF_DESC", "\u8bf4\u660e"}, {"DTF_TOU", "\u8bbe\u5907\u7c7b\u578b"}, {"DTF_DURING", "\u4efb\u52a1\u521b\u5efa\u65f6\u95f4"}, {"DTF_NO_DTS", "\u672a\u9009\u62e9\u4efb\u4f55\u8981\u6267\u884c\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_EXEC", "\u6267\u884c\u6b64\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_NO_DISABLE", "\u4e0d\u80fd\u7981\u7528\u6b64\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_NO_EXEC", "\u4e0d\u80fd\u6267\u884c\u6b64\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_SEL_UNITS", "\u9009\u62e9\u8bbe\u5907"}, {"DTF_EXEC_METHOD", "\u6267\u884c\u65b9\u6cd5"}, {"DTF_ATLEAST_ONE", "\u81f3\u5c11\u9009\u62e9\u4e00\u53f0\u8bbe\u5907\u6765\u6267\u884c\u4efb\u52a1\u3002"}, {"DTF_EXEC_ALL", "\u5728\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u8bbe\u5907\u4e0a\u6267\u884c\u9ed8\u8ba4\u4efb\u52a1"}, {"DTF_EXEC_FOLL", "\u5728\u6240\u9009\u7684\u4ee5\u4e0b\u8bbe\u5907\u4e0a\u6267\u884c\u9ed8\u8ba4\u4efb\u52a1"}, {"DTF_REAPPLY_1", "\u4ec5\u5f53\u4e4b\u524d\u672a\u5e94\u7528\u65f6\u52a0\u4ee5\u6267\u884c"}, {"DTF_REAPPLY_2", "\u53ea\u6709\u4e4b\u524d\u672a\u5e94\u7528\u81f3\u6240\u9009\u8bbe\u5907\u7684\u4efb\u52a1\u624d\u4f1a\u6267\u884c\u3002"}, {"DTF_REAPPLY_3", "\u8be5\u8bbe\u5907\u5c06\u5ffd\u7565\u5df2\u6267\u884c\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_EXEC_1", "\u5373\u4f7f\u4e4b\u524d\u5df2\u5e94\u7528\u4e5f\u5c06\u6267\u884c"}, {"DTF_EXEC_2", "\u5373\u4f7f\u4e4b\u524d\u5e94\u7528\u4e86\u9009\u5b9a\u7684\u6240\u6709\u4efb\u52a1\uff0c\u4ecd\u4f1a\u5728\u6240\u9009\u8bbe\u5907\u4e0a\u91cd\u65b0\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\u3002"}, {"DTF_ENABLE_SUCCESS", "\u6210\u529f\u66f4\u65b0\u6240\u9009\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_ENABLE_FAIL", "\u65e0\u6cd5\u66f4\u65b0\u6240\u9009\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_SCHEDULE_SUCCESS", "\u6210\u529f\u8ba1\u5212\u8981\u6267\u884c\u7684\u9ed8\u8ba4\u4efb\u52a1\u3002"}, {"DTF_SCHEDULE_FAIL", "\u7531\u4e8e\u6240\u9009\u7684\u4efb\u52a1\u4e0d\u9002\u7528\u6216\u8005\u5df2\u6267\u884c\uff0c\u56e0\u6b64\u672a\u8ba1\u5212\u4efb\u4f55\u9ed8\u8ba4\u4efb\u52a1\u3002."}, {"AUTOASSIGN_AGENT_HEADER", "\u4ee3\u7406\u5206\u914d\u8bbe\u7f6e"}, {"AUTOASSIGN_AGENT_MSG_1", " \u8981\u6c42\u4ee3\u7406\u62e5\u6709\u8bbe\u5907\u8fdb\u884c\u7ba1\u7406\u3001\u62a5\u544a\u548c\u76d1\u63a7\u3002\u4ee3\u7406\u7684\u81ea\u52a8\u5206\u914d\u53ef\u786e\u4fdd\u8bbe\u5907\u5747\u8861\u5e73\u8861\uff0c\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u8d44\u6e90\u5206\u914d\u3001\u6700\u4f18\u6027\u80fd\u3001\u5145\u8db3\u7684\u5b58\u50a8\u548c\u9ad8\u53ef\u7528\u6027\u3002\u5728\u6267\u884c\u201c\u6dfb\u52a0\u8bbe\u5907\u201d\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u57fa\u4e8e\u7ba1\u7406\u6a21\u5f0f\u542f\u7528\u6b64\u529f\u80fd\u3002 "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "\u7528\u6237\u53ef\u4ee5\u4ece<i>\u4fee\u6539\u8bbe\u5907</i>\u5bf9\u8bdd\u6846\u91cd\u65b0\u5206\u914d\u4ee3\u7406\u3002"}, {"AUTOASSIGN_AGENT_MSG_2", "\u7528\u6237\u53ef\u4ee5\u4ece<i>\u4fee\u6539\u8bbe\u5907</i>\u5bf9\u8bdd\u6846\u6216\u4f7f\u7528<i>\u91cd\u65b0\u5206\u914d\u4ee3\u7406</i>\u64cd\u4f5c\u6765\u91cd\u65b0\u5206\u914d\u4ee3\u7406\u3002"}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\u4ec5\u9650\u73b0\u6709\u96a7\u9053\u6216 LAN\u3001SSL \u7ba1\u7406\u6a21\u5f0f\uff1a\u81ea\u52a8\u5206\u914d\u4ec5\u9002\u7528\u4e8e<i>\u73b0\u6709\u96a7\u9053</i>\u548c <i>SSL</i> \u6a21\u5f0f\uff0c\u4f46\u5bf9\u4e8e<i>\u7ba1\u7406\u96a7\u9053</i>\uff0c\u9700\u8981\u8fdb\u884c\u624b\u52a8\u5206\u914d\u3002"}, {"AUTOASSIGN_AGENT_MSG_ALL", "\u6240\u6709\u7ba1\u7406\u6a21\u5f0f\uff1a\u81ea\u52a8\u5206\u914d\u9002\u7528\u4e8e\u6240\u6709\u6a21\u5f0f\u3002\u5bf9\u4e8e<i>\u7ba1\u7406\u96a7\u9053</i>\u6a21\u5f0f\uff0c\u5fc5\u987b\u5728\u7ba1\u7406\u8bbe\u5907\u4e0a\u914d\u7f6e\u4ee3\u7406\u8bbe\u7f6e\u3002"}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "\u81ea\u52a8\u5206\u914d\u4ee3\u7406\u5df2\u542f\u7528"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "\u81ea\u52a8\u5206\u914d\u4ee3\u7406\u5df2\u7981\u7528"}, {"AUTOASSIGN_AGENT_ENABLE", "\u542f\u7528\u81ea\u52a8\u5206\u914d\u4ee3\u7406"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL \u548c\u4f7f\u7528\u73b0\u6709\u96a7\u9053\u6216 LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "\u5168\u90e8"}, {"TEMPLATE_SETTINGS_TITLE", "[CN]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[CN]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration (Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[CN]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[CN]Apply Default Configuration"}, {"CUI_NO_FS", "\u672a\u627e\u5230\u6d41\u91cf\u670d\u52a1\u5668\u3002"}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "CN The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "CN The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\u662f\u5426\u786e\u5b9a\u8981\u66f4\u6539\u914d\u7f6e"}, {"LOGCONFIG_SECTITLE_2", "\u65e5\u5fd7\u6d88\u606f"}, {"LOGCONFIG_DELLABEL", "\u5220\u9664\u4ee5\u4e0b\u65e5\u671f\u4e4b\u524d\u7684\u65e5\u5fd7\uff1a"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u5929"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u5bf9\u4e8e"}, {"LOGCONFIG_DOMAIN", "\u57df"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "\u9519\u8bef\uff1a\u65e0\u6cd5\u66f4\u65b0\u914d\u7f6e"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\u662f\u5426\u786e\u5b9a\u8981\u66f4\u6539\u65e5\u7a0b\uff1f"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\u662f\u5426\u786e\u5b9a\u8981\u66f4\u6539\u65e5\u5fd7\u6587\u4ef6\u8ba1\u6570\u7684\u6700\u5927\u6570\uff1f"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "\u5f52\u6863 "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " \u65e5\u5fd7\u6d88\u606f"}, {"APPLOG_CONFIG_DELETE_MSG_1", "\u65e5\u5fd7\u5e2e\u52a9\u8ddf\u8e2a\u6b64\u7cfb\u7edf\u4e2d\u7684\u6d3b\u52a8\u3002\u8fd9\u4e9b\u6d3b\u52a8\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u4e0e\u7528\u6237\u53d1\u8d77\u7684\u52a8\u4f5c\u76f8\u5173\u8054\u6216\u57fa\u4e8e\u7cfb\u7edf\u53d1\u8d77\u7684\u52a8\u4f5c\u3002\u8fd9\u4e9b\u65e5\u5fd7\u5bf9\u4e8e\u5ba1\u8ba1\u8ddf\u8e2a\u3001\u5408\u89c4\u6027\u76ee\u7684\u4ee5\u53ca\u5bf9\u7cfb\u7edf\u8fd0\u884c\u8fdb\u884c\u6545\u969c\u6392\u9664\u90fd\u975e\u5e38\u91cd\u8981\u3002"}, {"APPLOG_CONFIG_DELETE_MSG_2", "\u53ef\u4ee5\u624b\u52a8\u5220\u9664\u65e0\u9700\u5b58\u50a8\u4e8e\u7cfb\u7edf\u4e2d\u7684\u65e5\u5fd7\u3002\u6b64\u64cd\u4f5c\u662f\u4e00\u6b21\u6027\u64cd\u4f5c\uff0c\u5c06\u6839\u636e\u9009\u62e9\u7684\u8981\u5220\u9664\u7684\u65e5\u671f\u6267\u884c\u3002 "}, {"APPLOG_CONFIG_DELETE_MSG_21", "\u6b64\u9875\u9762\u4e2d\u7684\u5220\u9664\u64cd\u4f5c\u53ea\u4f1a\u6e05\u9664\u4e0e\u53d8\u66f4\u5355\u65e0\u5173\u7684\u65e5\u5fd7\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "\u53ef\u4ee5 CSV/HTML \u683c\u5f0f\u5bfc\u51fa\u65e0\u9700\u5b58\u50a8\u4e8e\u7cfb\u7edf\u4e2d\u7684\u65e5\u5fd7\uff0c\u5e76\u4ece\u6570\u636e\u5e93\u5c06\u4e4b\u5378\u8f7d\u3002\u5f52\u6863\u8fc7\u7a0b\u5c06\u9996\u5148\u6309\u7167\"\u5f52\u6863\u65e5\u5fd7\u65e5\u7a0b\"\u5c06\u6570\u636e\u5f52\u6863\u5230 <i>archivedLogs</i> \u76ee\u5f55\uff0c\u7136\u540e\u5c06\u6570\u636e\u4ece\u6570\u636e\u5e93\u4e2d\u5220\u9664\u3002 "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "\u5f52\u6863\u64cd\u4f5c\u5c06\u5bfc\u51fa\u6240\u6709\u65e5\u5fd7\uff0c\u5305\u62ec\u4e0e\u53d8\u66f4\u5355\u76f8\u5173\u7684\u65e5\u5fd7\uff0c\u4f46\u5220\u9664\u64cd\u4f5c\u5c06\u8df3\u8fc7\u6e05\u9664\u4e0e\u66f4\u6539\u987a\u5e8f\u76f8\u5173\u7684\u6761\u76ee\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "\u6ce8\uff1a\u5bf9\u4e8e\u975e Windows \u90e8\u7f72\uff1a\u5982\u9700\u5c06\u5f52\u6863\u65e5\u5fd7\u6587\u4ef6\u5378\u200b\u200b\u8f7d\u5230\u672c\u5730\u9a71\u52a8\u5668\uff0c\u8bf7\u8f6c\u81f3\u201c\u8bbe\u5907 > \u7cfb\u7edf > \u6587\u4ef6\u7ba1\u7406\u5668\u201d\u9875\u9762\u3002"}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "\u542f\u7528\u5f52\u6863"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "\u4fdd\u7559 "}, {"APPLOG_CONFIG_ARCHIVE_For", " \u5bf9\u4e8e\uff1a"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "\u65e5\u5fd7\u6d88\u606f\u6587\u4ef6\u7684\u6700\u5927\u6570\uff1a"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "\u5f52\u6863\u683c\u5f0f\uff1a"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "\u5f52\u6863\u8bbe\u7f6e"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "\u65e5\u5fd7\u6d88\u606f\u66f4\u65b0\u6210\u529f"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "\u5f52\u6863 GMS \u65e5\u5fd7\u6d88\u606f"}, {"WF_SETTINGS_TITLE", "\u8bbe\u7f6e"}, {"WF_SETTINGS_MSG_1", "\u5de5\u4f5c\u6d41\u662f\u7528\u4e8e\u76d1\u89c6\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u8bbe\u5907\u8fdb\u884c\u7684\u914d\u7f6e\u66f4\u6539\u7684\u7cfb\u7edf\u3002\u5b83\u5141\u8bb8\u5bf9\u6240\u63d0\u8bae\u7684\u53d8\u66f4\u8fdb\u884c\u5ba1\u67e5\u5e76\u63d0\u4f9b\u53cd\u9988\uff0c\u5206\u914d\u6240\u6709\u6743\u5e76\u4e3a\u6240\u6709\u64cd\u4f5c\u63d0\u4f9b\u95ee\u8d23\u5236\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u6709\u5b8c\u6574\u7684\u5ba1\u8ba1\u65e5\u5fd7\u3002\u53d8\u66f4\u5355\u7ba1\u7406\u662f\u5de5\u4f5c\u6d41\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5141\u8bb8\u67e5\u770b\u5bf9\u8bbe\u5907\u6240\u505a\u7684\u66f4\u6539\uff0c\u5728\u8bbe\u5907\u4e0a\u4e0b\u6587\u4e2d\u7684\u9875\u9762\u4e0a\u9884\u89c8\u884c\u5185\u66f4\u6539\uff0c\u8fd8\u53ef\u4ee5\u6bd4\u8f83\u591a\u4e2a\u53d8\u66f4\u5355\u3002 "}, {"WF_SETTINGS_MSG_2", "\u6ce8\uff1a\u53ef\u4ee5\u5728\u57df\u7ea7\u522b\u542f\u7528/\u7981\u7528\u53d8\u66f4\u5355\u548c\u5ba1\u6279\u7ba1\u7406\u3002\u7981\u7528\u5ba1\u6279\u7ba1\u7406\u72ec\u7acb\u4e8e\u53d8\u66f4\u5355\u7ba1\u7406\uff0c\u4f46\u7981\u7528\u53d8\u66f4\u5355\u7ba1\u7406\u4e5f\u4f1a\u7981\u7528\u5ba1\u6279\u7ba1\u7406\u3002"}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "\u5373\u4f7f\u5728\u5df2\u542f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5de5\u4f5c\u6d41\u4e5f\u4ec5\u5e94\u7528\u4e8e\u5bf9\u4e0b\u5217\u670d\u52a1\u4e3b\u52a8\u6388\u6743\u7684\u8bbe\u5907\uff1a "}, {"WF_SETTINGS_ENABLE_COM", "\u542f\u7528\u53d8\u66f4\u5355\u7ba1\u7406"}, {"WF_SETTINGS_ENABLE_WF", "\u542f\u7528\u5ba1\u6279\u7ba1\u7406"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "\u53d8\u66f4\u5355\u9ed8\u8ba4\u65e5\u7a0b\u8bbe\u7f6e"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "\u6839\u636e\u4ee5\u4e0b\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u5728\u63d0\u4ea4\u540e\u5b89\u6392\u6267\u884c\u53d8\u66f4\u5355\u3002\u6307\u5b9a\u9ed8\u8ba4\u503c\u5c06\u5728\u521b\u5efa\u65b0\u7684\u53d8\u66f4\u5355\u65f6\u81ea\u52a8\u4f7f\u7528\u9009\u5b9a\u7684\u8bbe\u7f6e\u3002"}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "\u65e5\u7a0b\uff1a "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "\u624b\u52a8\u6267\u884c"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "\u7acb\u5373\u6279\u51c6"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "\u4e8e"}, {"WF_CONFIG_DELETE_MSG_1", "\u65e5\u5fd7\u5e2e\u52a9\u8ddf\u8e2a\u6b64\u7cfb\u7edf\u4e2d\u7684\u6d3b\u52a8\u3002\u8fd9\u4e9b\u6d3b\u52a8\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u4e0e\u7528\u6237\u53d1\u8d77\u7684\u52a8\u4f5c\u76f8\u5173\u8054\u6216\u57fa\u4e8e\u7cfb\u7edf\u53d1\u8d77\u7684\u52a8\u4f5c\u3002\u8fd9\u4e9b\u65e5\u5fd7\u5bf9\u4e8e\u5ba1\u8ba1\u8ddf\u8e2a\u3001\u5408\u89c4\u6027\u76ee\u7684\u4ee5\u53ca\u5bf9\u7cfb\u7edf\u8fd0\u884c\u8fdb\u884c\u6545\u969c\u6392\u9664\u90fd\u975e\u5e38\u91cd\u8981\u3002"}, {"WF_CONFIG_DELETE_MSG_2", "\u53ef\u4ee5\u624b\u52a8\u5220\u9664\u901a\u5e38\u8d85\u8fc7 "}, {"WF_CONFIG_DELETE_MSG_3", " \u5929\u7684\u3001\u65e0\u9700\u5b58\u50a8\u4e8e\u7cfb\u7edf\u4e2d\u7684\u53d8\u66f4\u5355\u3002\u6b64\u64cd\u4f5c\u662f\u4e00\u6b21\u6027\u64cd\u4f5c\uff0c\u5c06\u6839\u636e\u9009\u62e9\u7684\u8981\u5220\u9664\u7684\u65e5\u671f\u6267\u884c\u3002\u6b64\u9875\u9762\u4e2d\u7684\u5220\u9664\u64cd\u4f5c\u53ea\u4f1a\u6e05\u9664\u4e0e\u53d8\u66f4\u5355\u76f8\u5173\u7684\u6570\u636e\u3001\u4efb\u52a1\u548c\u65e5\u5fd7\u3002"}, {"APPLOG_CONFIG_DEL_DATA", "\u5220\u9664\u6570\u636e\u65f6\u95f4"}, {"FA_UNIT_STATUS_HEADER", "\u8bbe\u5907\u8be6\u7ec6\u4fe1\u606f"}, {"FA_UNIT_STATUS_SERIAL", "\u5e8f\u5217\u53f7"}, {"FA_UNIT_STATUS_NODE_NAME", "\u8bbe\u5907\u540d\u79f0"}, {"FA_UNIT_STATUS_MODEL", "\u578b\u53f7"}, {"FA_UNIT_STATUS_FIRMWARE", "\u56fa\u4ef6\u7248\u672c"}, {"FA_UNIT_STATUS_IP", "\u7ba1\u7406 IP"}, {"FA_UNIT_STATUS_LICENSE", "\u5e94\u7528\u7a0b\u5e8f\u53ef\u89c6\u5316"}, {"FA_GROUP_STATUS_HEADER1", "\u56fa\u4ef6\u8be6\u7ec6\u4fe1\u606f"}, {"FA_GROUP_STATUS_HEADER2", "\u6d41\u91cf\u62a5\u544a\u8bb8\u53ef\u8bc1\u72b6\u6001"}, {"FA_GROUP_STATUS_NO_DATA", "\u65e0\u6570\u636e\u53ef\u7528"}, {"FA_LICENSE_NOT_AVAILABLE", "\u672a\u8bb8\u53ef"}, {"FA_LICENSE_AVAILABLE", "\u5df2\u8bb8\u53ef"}, {"FA_LICENSE_FREE_TRAIL", "\u514d\u8d39\u8bd5\u7528"}, {"FA_LICENSE_EXPIRED", "\u5df2\u8fc7\u671f"}, {"FA_GROUP_FIREWALL_COUNT", "\u7cfb\u7edf\u4e2d\u7684\u9632\u706b\u5899"}, {"FA_FLOW_IP1", "\u6d41\u91cf\u4ee3\u7406 1"}, {"FA_FLOW_IP2", "\u6d41\u91cf\u4ee3\u7406 2"}, {"FA_FLOW_AGENT_STATUS", "\u6d41\u91cf\u4ee3\u7406\u72b6\u6001"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "\u9632\u706b\u5899\u8bbe\u7f6e"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN \u96a7\u9053"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "\u8fdc\u7a0b IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "\u6570\u636e\u4fdd\u7559\uff08\u5929\u6570\uff09"}, {"FA_FLOW_FORWARDER_IP", "\u6d41\u91cf\u8f6c\u53d1\u5668"}, {"FA_FLOWS_COLLECTED", "\u6536\u96c6\u7684\u6d41\u91cf"}, {"FA_DISK_ALLOCATED", "\u5df2\u5206\u914d\u7684\u78c1\u76d8"}, {"FA_DISK_USED", "\u5df2\u4f7f\u7528\u78c1\u76d8"}, {"FA_FLOW_STATUS", "\u72b6\u6001"}, {"FA_NO_AGENT", "\u672a\u5206\u914d\u6d41\u91cf\u4ee3\u7406"}, {"FA_MODELSUPPORT", "\u672a\u5bf9\u6b64\u578b\u53f7\u542f\u7528\u6d41\u91cf\u62a5\u544a"}, {"FA_FIRMWARESUPPORT", "\u6d41\u91cf\u62a5\u544a\u4e0d\u9002\u7528\u4e8e\u6b64\u7248\u672c"}, {"FA_LICENSESUPPORT", "\u5e94\u7528\u7a0b\u5e8f\u53ef\u89c6\u5316\u8bb8\u53ef\u8bc1\u4fe1\u606f\u4e0d\u53ef\u7528"}, {"FA_HEADING", "\u6d41\u91cf\u4ee3\u7406"}, {"FA_FLOW_AGENT", "\u6d41\u91cf\u4ee3\u7406"}, {"FA_FLOW_HEAD_IP1", "\u6d41\u91cf\u4ee3\u7406 1"}, {"FA_FLOW_HEAD_IP2", "\u6d41\u91cf\u4ee3\u7406 2"}, {"FA_FLOW_HEAD_HDD", "\u786c\u76d8 (%)"}, {"FA_FLOW_HEAD_RAM", "\u5185\u5b58 (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "\u5e26\u5bbd (%)"}, {"FA_FLOW_FORWARDER_HEAD", "\u6d41\u91cf\u8f6c\u53d1\u5668"}, {"FA_FLOW_PAIR", "\u6d41\u91cf\u4ee3\u7406\u5bf9"}, {"FA_FLOW_HEAD_DISKSIZE", "\u78c1\u76d8\u5927\u5c0f"}, {"FA_FLOW_HEAD_GATEWAY", "\u7f51\u5173\u9632\u706b\u5899"}, {"FA_FLOW_HEAD_TUNNELS", "\u96a7\u9053\u6570"}, {"FA_FLOW_HEAD_TENANTS", "\u79df\u6237"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "\u540d\u79f0"}, {"GF_GATEWAY", "\u7f51\u5173"}, {"GF_LAST_UPDATED", "\u6700\u540e\u66f4\u65b0\u65e5\u671f"}, {"GF_DEST_ADDRESS_RANGE", "\u76ee\u6807\u5730\u5740\u8303\u56f4"}, {"GF_LOCAL_ADDRESS_RANGE", "\u672c\u5730\u5730\u5740\u8303\u56f4"}, {"FA_STATUS", "\u72b6\u6001"}, {"CLOUDSETTINGS_SECTITLE_1", "\u6dfb\u52a0\u65b0\u7684\u6d41\u91cf\u4ee3\u7406\u5bf9"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "\u6d41\u91cf\u4ee3\u7406 1\uff1a"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "\u6d41\u91cf\u4ee3\u7406 2\uff1a"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "\u5185\u5b58 (GB)\uff1a"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "\u6d41\u91cf\u6570\u636e\u5e93\u5b58\u50a8 (GB)\uff1a"}, {"CLOUDSETTINGS_SECTITLE_2", "\u4e91 Syslog \u670d\u52a1\u5668\u8bbe\u7f6e"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "\u542f\u7528 Syslog \u670d\u52a1\u5668\u7684 Syslog \u62a5\u544a\uff1a"}, {"CLOUDSETTINGS_SYSLOG_IP", "Syslog \u670d\u52a1\u5668\u7684 IP \u5730\u5740\uff1a"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog \u670d\u52a1\u5668\u7aef\u53e3\uff1a"}, {"CLOUDSETTINGS_SECTITLE_3", "\u4e91\u6d41\u91cf\u4ee3\u7406\u8bbe\u7f6e"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "\u6bcf\u4e2a\u6d41\u91cf\u4ee3\u7406\u7684\u9632\u706b\u5899\u6570\uff1a"}, {"CLOUDSETTINGS_SECTITLE_5", "[CN]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[CN]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "SonicPoint \u4fe1\u606f"}, {"SP_MANAGEDBY", "\u7ba1\u7406\u8005"}, {"SP_IPADDR", "IP \u5730\u5740"}, {"SP_SUBNET", "\u5b50\u7f51\u63a9\u7801"}, {"SP_IFACE", "\u63a5\u53e3"}, {"SP_ZONE", "\u533a\u57df"}, {"SP_MODEL", "\u578b\u53f7"}, {"SP_ENABLED", "\u5df2\u542f\u7528"}, {"SP_DISABLED", "\u5df2\u7981\u7528"}, {"SP_STATUS", "\u72b6\u6001"}, {"SP_MACADDR", "MAC \u5730\u5740"}, {"PM_CONNECTWISE_STATUS", "[CN]Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[CN]Not Available"}, {"TICKET_INFORMATION", "[CN]Connectwise Ticket"}, {"TICKET_DETAILS", "[CN]Details"}, {"CONNECTWISE_NOTE", "[CN]GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}, {Integer.toString(-919), "[CN]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[CN]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[CN]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[CN]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[CN]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[CN]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[CN]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[CN]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[CN]Successfully authenticated with the unit."}, {Integer.toString(-928), "[CN]Authentication with the unit failed."}, {Integer.toString(-929), "[CN]The unit is registered with the backend."}, {Integer.toString(-930), "[CN]The unit is not registered with the backend."}, {Integer.toString(-931), "[CN]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[CN]Heart beats for the unit have been started."}, {Integer.toString(-933), "[CN]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[CN]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[CN]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[CN]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[CN]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[CN]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[CN]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[CN]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[CN]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[CN]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[CN]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[CN]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[CN]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[CN]ZeroTouch feature was disabled for the firewall."}};
 
     @Override
     public Object[][] getContents() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_zh_TW.java decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_zh_TW.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/sgmsResources_zh_TW.java	2023-09-08 15:13:13.329776087 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/sgmsResources_zh_TW.java	2023-09-08 15:14:40.293129255 -0700
@@ -7,7 +7,7 @@
 
 public class sgmsResources_zh_TW
 extends ListResourceBundle {
-    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "\u88dd\u7f6e\uff08\u4e00\u53f0\uff09"}, {"APPLIANCE_NAME_PLURAL", "\u88dd\u7f6e\uff08\u591a\u53f0\uff09"}, {"APPLIANCE_DESC", "\u88dd\u7f6e\u8aaa\u660e"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewall"}, {"SONICWALL_DESC", "Firewall \u88dd\u7f6e"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMA"}, {"SSLVPN_DESC", "SMA \u88dd\u7f6e"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDP"}, {"CDP_DESC", "CDP \u88dd\u7f6e"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Aventail SMA \u88dd\u7f6e"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "\u96fb\u5b50\u90f5\u4ef6\u5b89\u5168\u88dd\u7f6e"}, {"OTHERS_NAME", "\u5176\u4ed6"}, {"OTHERS_NAME_PLURAL", "\u5176\u4ed6"}, {"OTHERS_DESC", "\u5176\u4ed6\u88dd\u7f6e"}, {"MINUTE", "\u5206\u9418"}, {"TEST_STRING", "\u9019\u662f\u4e00\u500b\u6e2c\u8a66\u5b57\u4e32 - \u767c\u8ca8\u4e4b\u524d\u79fb\u9664\u6b64\u9805\u76ee"}, {"PROGRESS_ACTION_TIMED", "\u6b64\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u6642\u9593\u624d\u80fd\u5b8c\u6210"}, {"PROGRESS_PLEASE_WAIT", "\u8acb\u7a0d\u5019..."}, {"LOADING_PLEASE_WAIT", "\u52a0\u8f09\u4e2d\uff0c\u8acb\u7a0d\u5019..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u66f4\u65b0\u6b0a\u9650\u3002"}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "\u60a8\u6c92\u6709\u6aa2\u8996\u4efb\u4f55\u756b\u9762\u7684\u6b0a\u9650\uff0c\u8acb\u767b\u51fa\u4e26\u806f\u7d61\u60a8\u7684\u7ba1\u7406\u54e1\u3002"}, {"UPDATE", "\u66f4\u65b0"}, {"RESET", "\u91cd\u8a2d"}, {"NO_PANEL_PERMISSIONS", "[TW]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "\u4e0b\u8f09\u578b\u865f\u4ee3\u78bc\u5df2\u6210\u529f"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "\u4e0b\u8f09\u578b\u865f\u4ee3\u78bc\u6210\u529f\u5df2\u5931\u6557"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "\u5de5\u4f5c\u591a\u5de5\u7de9\u885d\u8655\u7406\u5df2\u6210\u529f\u555f\u52d5\u3002"}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "\u6545\u969c - \u6c92\u6709\u53ef\u7528\u65bc\u8acb\u6c42\u5347\u7d1a\u7684\u88dd\u7f6e\u3002"}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u6210\u529f\u65b0\u589e - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "\u555f\u7528\u4ee3\u78bc\u5df2\u6210\u529f\u65b0\u589e\u3002"}, {"ERROR_ADD_ACTIVATION_CODE", "\u65b0\u589e\u555f\u7528\u4ee3\u78bc\u932f\u8aa4\uff1a\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u7d93\u5b58\u5728 - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u6210\u529f\u522a\u9664 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "\u555f\u7528\u4ee3\u78bc\u5df2\u6210\u529f\u522a\u9664\u3002"}, {"ERROR_DELETE_ACTIVATION_CODE", "\u522a\u9664\u555f\u7528\u4ee3\u78bc\u932f\u8aa4\uff1a\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u4e0d\u5b58\u5728 - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "\u522a\u9664\u555f\u7528\u4ee3\u78bc\u932f\u8aa4\uff1a\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u7121\u6cd5\u522a\u9664 - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u65b0\u589e\u5230\u4e86 SonicWall GMS \u8cc7\u6599\u5eab\u4e2d: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u5f9e\u53ef\u7528\u4ee3\u78bc\u6c60\u4e2d\u79fb\u9664\uff1a "}, {"UPDATE_DB_MESSAGE", "\u5df2\u5728 SonicWall GMS \u8cc7\u6599\u5eab\u4e2d\u6210\u529f\u66f4\u65b0\u4e86\u8b8a\u66f4\u3002"}, {"FAILURE_UPDATE_DB_MESSAGE", "\u66f4\u65b0\u5931\u6557: \u672a\u80fd\u5728 SonicWall GMS \u8cc7\u6599\u5eab\u4e2d\u6210\u529f\u66f4\u65b0\u8b8a\u66f4\u3002"}, {"NO_UNITS_FOR_REGISTRATION", "\u6c92\u6709\u8981\u8a3b\u518a\u7684\u88dd\u7f6e"}, {"FREE_TRAIL_NOT_APPLIED", "\u6240\u6709\u88dd\u7f6e\u5747\u672a\u8a3b\u518a\u6216\u5df2\u8a02\u95b1"}, {"AV_FAILURE_MESSAGE", "\u6c92\u6709\u53ef\u7528\u65bc\u5347\u7d1a\u4ee5\u53ca\u8a3b\u518a\u7684\u88dd\u7f6e"}, {"AV_SUCCESS_MESSAGE", "\u5347\u7d1a\u4ee5\u53ca\u8a3b\u518a\u5de5\u4f5c\u5df2\u6210\u529f\u555f\u52d5"}, {"AV_SUCCESS_UPGRADE", "\u5347\u7d1a\u5de5\u4f5c\u5df2\u6210\u529f\u555f\u52d5"}, {"AV_NO_SUCCESS_REG", "\u6c92\u6709\u53ef\u7528\u65bc\u8a3b\u518a\u7684\u88dd\u7f6e"}, {"AV_SUCCESS_REG", "\u8a3b\u518a\u5de5\u4f5c\u5df2\u6210\u529f\u555f\u52d5"}, {"AV_NO_SUCCESS_UPGRADE", "\u6c92\u6709\u53ef\u7528\u65bc\u5347\u7d1a\u7684\u88dd\u7f6e"}, {"TASK_SUCCESS_MESSAGE", "\u5de5\u4f5c\u5df2\u6210\u529f\u555f\u52d5"}, {"TASK_CMP_ERROR", "CMP \u5bc6\u78bc\u53ea\u80fd\u5728\u88dd\u7f6e\u7d1a\u5225\u9032\u884c\u8b8a\u66f4"}, {"TASK_ERROR_MESSAGE", "\u5de5\u4f5c\u672a\u6210\u529f\u555f\u52d5"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "\u6c92\u6709\u53ef\u7528\u65bc\u6388\u6b0a\u5171\u7528\u64cd\u4f5c\u7684\u88dd\u7f6e\u3002"}, {"SGMS_EMAIL_BOTTOM_MSG1", "\u6280\u8853\u652f\u63f4 "}, {"SGMS_EMAIL_BOTTOM_MSG2", "\u7248\u672c "}, {"SGMS_EMAIL_BOTTOM_MSG3", "\u5e8f\u5217\uff1a "}, {"SGMS_EMAIL_BOTTOM_MSG4", "\u4f3a\u670d\u5668\uff1a "}, {"FIRMWARE_DOWNLOADED", "\u97cc\u9ad4\u7684\u65b0\u526f\u672c\u5df2\u4e0b\u8f09\u3002"}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", "\u4ee5\u4e0b\u8a2d\u5099\u7684\u6388\u6b0a\u4e0d\u4e45\u5373\u5c07\u5230\u671f\u3002\n\u8acb\u806f\u7d61 SonicWall \u92b7\u552e\u8cfc\u8cb7\u555f\u7528\u4ee3\u78bc\u4ee5\u7e8c\u8a02\u9019\u4e9b\u8a02\u8cfc\u670d\u52d9\u3002"}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "\u8a02\u95b1\u904e\u671f\u8cc7\u8a0a\u3002"}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "\u672a\u627e\u5230\u904e\u671f\u8cc7\u8a0a\u3002"}, {"VERSION_MESSAGE", "SonicWall GMS \u7248\u672c\u865f: "}, {"NUM_NODES_MESSAGE", "\u6b64 SonicWall GMS \u53ef\u7ba1\u7406\u7684\u7bc0\u9ede\u6578\u91cf: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "GMS \u7522\u54c1\u8aaa\u660e\uff1a "}, {"DATABASE_TYPE_MESSAGE", "\u8cc7\u6599\u5eab\u985e\u578b\uff1a "}, {"MODEL_TYPES_MESSAGE", "\u7bc0\u9ede\u6578\u548c\u578b\u865f\u540d\u7a31\uff1a "}, {"NUM_AGENTS_MESSAGE", "\u7cfb\u7d71\u4e2d\u7684\u4ee3\u7406\u6578\uff1a "}, {"AGENT_IP_MESSAGE", "\u4ee3\u7406\u7684 IP \u4f4d\u5740\uff1a "}, {"UNKNOWN_MESSAGE", "\u672a\u77e5"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "\u672a\u77e5\u8cc7\u6599\u5eab"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "\u88dd\u7f6e\u540d\u7a31\u4e2d\u7684\u7121\u6548\u5b57\u5143 [<,\\,:]\u3002"}, {"PM_NAME_KEYWORD", "\u662f\u4e00\u500b\u95dc\u9375\u5b57\u4e26\u4e14\u4e0d\u80fd\u7528\u65bc\u547d\u540d\u88dd\u7f6e\u3002\u8acb\u4f7f\u7528\u5176\u4ed6\u540d\u7a31"}, {"PM_NAME_EXISTS_A", "\u5df2\u7d93\u5b58\u5728\u540d\u70ba\u300c"}, {"PM_NAME_EXISTS_B", "\u300d\u7684\u88dd\u7f6e "}, {"PM_UNKNOWN", "\u672a\u77e5"}, {"PM_UNKNOWN_UNREGISTERED", "\u672a\u77e5/\u672a\u8a3b\u518a"}, {"PM_UNREGISTERED", "\u672a\u8a3b\u518a"}, {"PM_YES", "\u662f"}, {"PM_NO", "\u5426"}, {"PM_ENABLED", "\u5df2\u555f\u7528"}, {"PM_DISABLED", "\u5df2\u505c\u7528"}, {"PM_NOTAVAILABLE", "\u4e0d\u53ef\u7528"}, {"PM_UNLIMITED", "\u7121\u9650\u5236"}, {"PM_CURRENT", "\u76ee\u524d"}, {"PM_DEFAULT", "\u9810\u8a2d\u503c"}, {"PM_EXPIRED", "\u904e\u671f"}, {"PM_UP", "\u57f7\u884c"}, {"PM_DOWN", "\u95dc\u9589"}, {"PM_NOT_ACQUIRED", "\u672a\u64f7\u53d6"}, {"PM_SINCE", "\u81ea\u5f9e "}, {"PM_NONE", "\u7121"}, {"PM_N_A", "\u4e0d\u53ef\u7528"}, {"PM_NO_LICENSE", "\u7121\u6388\u6b0a"}, {"PM_MODEL", "\u578b\u865f"}, {"PM_SERIAL_NUM", "\u5e8f\u865f"}, {"PM_DOMAIN", "\u7db2\u57df"}, {"PM_NUM_LAN_IPS", "\u5141\u8a31\u7684 LAN IP \u6578"}, {"PM_HA", "\u9ad8\u53ef\u7528\u6027"}, {"PM_DMZ_PORT", "DMZ \u9023\u63a5\u57e0"}, {"PM_NUM_WORKPORTS", "\u5141\u8a31\u7684\u5de5\u4f5c\u9023\u63a5\u57e0 IP \u6578"}, {"PM_HOMEPORT", "\u8d77\u59cb\u9023\u63a5\u57e0"}, {"PM_WLAN_PORT", "WLAN \u9023\u63a5\u57e0"}, {"PM_OPT_PORT", "OPT \u9023\u63a5\u57e0"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN \u5347\u7d1a"}, {"PM_VPN_CLIENTS", "\u5168\u57df VPN \u7528\u6236\u7aef"}, {"PM_IPS", "\u5165\u4fb5\u4fdd\u8b77\u670d\u52d9"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "\u9598\u9053\u9632\u6bd2"}, {"PM_FIRMWARE_VERSION", "\u97cc\u9ad4\u7248\u672c"}, {"PM_REGISTRATION_CODE", "\u8a3b\u518a\u78bc"}, {"PM_CFS_SUB", "\u5167\u5bb9\u7be9\u9078\u5668\u6e05\u55ae/\u670d\u52d9"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "\u9632\u6bd2"}, {"PM_WARRANTY", "\u5ef6\u9577\u4fdd\u56fa"}, {"PM_SW_STATUS", "\u72c0\u614b"}, {"PM_SW_MANAGEDINSTANCE", "\u6309\u57f7\u884c\u500b\u9ad4\u7ba1\u7406"}, {"PM_TASKS_PENDING", "\u64f1\u7f6e\u4e2d\u7684\u5de5\u4f5c"}, {"PM_LAST_LOG", "\u6700\u5f8c\u4e00\u500b\u8a18\u9304\u9805\u76ee"}, {"PM_SAS_CONFIG_INFO", "SA \u8a2d\u5b9a\u8cc7\u8a0a"}, {"PM_SAS_DEFINED", "\u5b9a\u7fa9\u7684 SA"}, {"PM_SAS_ENABLED", "\u555f\u7528\u7684 SA"}, {"PM_SAS_AVAILABLE", "\u53ef\u7528\u7684 SA"}, {"PM_SAS_REMAINING", "\u5269\u9918\u7684 SA"}, {"PM_SAS_INTERCONNECTED", "\u4e92\u9023\u7684 SA"}, {"PM_AGENT_ASSIGNED", "\u6307\u6d3e\u7684\u4ee3\u7406"}, {"PM_PRIMARY_AGENT", "\u4e3b\u8981\u4ee3\u7406"}, {"PM_STANDBY_AGENT", "\u5099\u7528\u4ee3\u7406"}, {"PM_TUNNEL_MGMT", "\u7ba1\u7406\u6a21\u5f0f"}, {"PM_FW_ADDED_TO_GMS", "\u8a2d\u5099\u88ab\u65b0\u589e\u81f3 SonicWall GMS \u7684\u6642\u9593"}, {"PM_FW_UP_SINCE", "\u88dd\u7f6e\u57f7\u884c\u6642\uff0c\u81ea"}, {"PM_FW_DOWN_SINCE", "\u88dd\u7f6e\u95dc\u9589\u6642\uff0c\u81ea"}, {"PM_SW_IP", "SonicWall IP"}, {"PM_TIME_ZONE", "\u6642\u5340"}, {"PM_SW_IN_SYSTEM", "\u5728\u7cfb\u7d71\u4e2d"}, {"PM_SW_IN_DMZ", "\u5728 DMZ \u4e2d"}, {"PM_SW_IN_GROUP", "\u5728\u7fa4\u7d44\u4e2d"}, {"PM_SW_UNREGISTERED", "\u672a\u8a3b\u518a"}, {"PM_SW_VPN_UPGRADE", "\u900f\u904e VPN \u5347\u7d1a"}, {"PM_SW_VPN_CLIENT", "\u900f\u904e\u5168\u57df VPN \u7528\u6236\u7aef\u5347\u7d1a"}, {"PM_SW_MSSP", "\u652f\u63f4 MSSP"}, {"PM_CFL_SUBSCRIPTION", "\u5167\u5bb9\u7be9\u9078\u5668\u6e05\u55ae/\u670d\u52d9"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "\u9632\u6bd2"}, {"PM_HGMS_SUBSCRIPTION", "\u96f2\u7aef\u670d\u52d9"}, {"PM_SUPPORT_SUBSCRIPTION", "\u652f\u63f4 "}, {"PM_EXTENDED_WARRANTY", "\u5ef6\u9577\u4fdd\u56fa"}, {"PM_UNITS_DOWN", "\u95dc\u9589\u7684 SonicWall"}, {"PM_PENDING_TASKS", "\u64f1\u7f6e\u4e2d\u5de5\u4f5c\u7684 SonicWall"}, {"PM_MANAGED_WITH_TUNNEL", "\u4f7f\u7528\u7ba1\u7406\u901a\u9053\u7ba1\u7406\u7684 SonicWall"}, {"PM_TASK_SPOOLED", "\u5de5\u4f5c\u5df2\u591a\u5de5\u7de9\u885d\u8655\u7406\u4ee5\u8b8a\u66f4\u4e3b\u6a5f\u540d\u7a31\u3002"}, {"PM_RAVLIN_MODEL", "Ravlin \u578b\u865f"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/\u5e8f\u865f"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "\u97cc\u9ad4\u7248\u672c"}, {"PM_HW_VERSION", "\u786c\u9ad4\u7248\u672c"}, {"PM_ROM_VERSION", "ROM \u7248\u672c"}, {"PM_SECURITY_ID", "\u5b89\u5168 ID"}, {"PM_RAVLIN_STATUS", "Ravlin \u72c0\u614b"}, {"PM_TASKS_PENDING", "\u64f1\u7f6e\u4e2d\u7684\u5de5\u4f5c"}, {"PM_AGENT_ASSIGNED", "\u6307\u6d3e\u7684\u4ee3\u7406"}, {"PM_RAVLINS_IN_NODE", "\u7bc0\u9ede\u4e2d\u7684 Ravlin"}, {"PM_RAVLINS_DOWN", "\u95dc\u9589\u7684 Ravlin"}, {"PM_RAVLINS_PENDING_TASKS", "\u64f1\u7f6e\u4e2d\u5de5\u4f5c\u7684 Ravlin"}, {"PM_FIX_UNIT_ERROR", "\u4fee\u5fa9\u88dd\u7f6e\u6642\u767c\u751f\u932f\u8aa4 "}, {"PM_MOD_UNIT_EXISTS", "\u4fee\u6539\u7684\u88dd\u7f6e\u5df2\u7d93\u5b58\u5728\uff0c\u5e8f\u865f\u70ba"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "\u5df2\u7d93\u5b58\u5728\u540d\u70ba"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "\u7684\u4fee\u6539\u7684\u88dd\u7f6e "}, {"PM_ADD_ERR_PRIVILEGES", "\u932f\u8aa4\uff1a\u60a8\u6c92\u6709\u8db3\u5920\u7684\u6b0a\u9650\u65b0\u589e\u88dd\u7f6e\u3002"}, {"PM_UNIT_EXISTS", "\u88dd\u7f6e\u5df2\u7d93\u5b58\u5728\uff0c\u5e8f\u865f\u70ba"}, {"PM_UNIT_NAME_EXISTS_A", "\u7db2\u57df\u4e2d\u5df2\u7d93\u5b58\u5728\u540d\u70ba"}, {"PM_UNIT_NAME_EXISTS_B", "\u7684\u88dd\u7f6e "}, {"PM_ADD_UNIT_ERR", "\u5c07\u8a2d\u5099\u65b0\u589e\u81f3 SonicWall \u8cc7\u6599\u5eab\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "\u8acb\u8f38\u5165\u4e00\u500b\u6709\u6548\u7684\u5e8f\u865f\u3002\n\u5e8f\u865f\u9577\u5ea6\u61c9\u70ba "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "\u500b\u5b57\u5143\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "\u5e8f\u865f\u61c9\u50c5\u5305\u542b\u5341\u516d\u9032\u4f4d\u5b57\u5143\u3002"}, {"PM_GET_PREFS_ERR", "\u64f7\u53d6\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "\u672a\u91dd\u5c0d\u96f2\u7aef\u670d\u52d9\u6388\u6b0a\u88dd\u7f6e\u3002\n\u8acb\u5148\u5f9e MySonicWall.com \u6388\u6b0a\u4ee5\u4e0b\u4efb\u4e00\u670d\u52d9\uff0c\u518d\u5c07\u88dd\u7f6e\u65b0\u589e\u81f3 "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " \u7121\u6cd5\u53d6\u5f97\u6b64\u88dd\u7f6e\u7684\u6388\u6b0a\u8cc7\u8a0a\u3002\n\u8acb\u7a0d\u5f8c\u518d\u8a66\u3002"}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " \u7121\u6cd5\u8207 MySonicWall.com \u901a\u8a0a\u4ee5\u78ba\u8a8d\u6b64\u88dd\u7f6e\u7684\u6388\u6b0a\u3002\n\u8acb\u7a0d\u5f8c\u518d\u8a66\u3002"}, {"PM_LICENSED", "\u5df2\u6388\u6b0a"}, {"PM_NOT_LICENSED", "\u672a\u6388\u6b0a"}, {"PM_IS_MSSP", "MSSP \u88dd\u7f6e"}, {"PM_SYSLOG_FORMAT", "Syslog \u683c\u5f0f"}, {"PM_STATUS_MSG_ONLY", "\u50c5\u72c0\u614b\u8a0a\u606f"}, {"PM_SYSLOG_IN_UTC", "UTC \u4e2d\u7684\u8a18\u9304"}, {"PM_VIEWPOINT_MODE", "Analyzer \u6a21\u5f0f\u5df2\u555f\u7528"}, {"PM_NAME_RESOLUTION", "\u540d\u7a31\u89e3\u6790\u6a21\u5f0f"}, {"PM_ACCESS_MODE", "\u5b58\u53d6\u6a21\u5f0f"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "\u5148 DNS \u5f8c NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"VM_PATCH_DETECTED_MSG1", "\u5df2\u5075\u6e2c\u5230\u53ef\u7528\u7684\u65b0\u8edf\u9ad4\u66f4\u65b0"}, {"VM_PATCH_DETECTED_MSG2", "\u900f\u904e\u96fb\u5b50\u90f5\u4ef6\u50b3\u9001\u7ba1\u7406\u54e1\u65b0\u8edf\u9ad4\u66f4\u65b0\u8cc7\u8a0a\u6642\u767c\u751f\u932f\u8aa4\u3002SMTP \u6216\u7ba1\u7406\u54e1\u96fb\u5b50\u90f5\u4ef6\u672a\u8a2d\u5b9a\u3002"}, {"VM_PATCH_DETECTED_MSG3", "\u53ef\u7528\u7684\u8edf\u9ad4\u66f4\u65b0\n\n"}, {"VM_NEW", "\u65b0 "}, {"VM_PATCH_DETECTED_MSG4", "\u6709\u95dc\u767c\u884c\u8aaa\u660e\u548c\u4e0b\u8f09\u8cc7\u8a0a\uff0c\u8acb\u767b\u5165\u81f3 <a href=https://www.mysonicwall.com>MySonicWall.com</a> \u5e33\u6236"}, {"VM_SCREEN", "\u87a2\u5e55\u3002"}, {"VM_PATCH_DETECTED_MSG5", "\u5143\u4ef6\u4fee\u88dc\u7a0b\u5f0f\u66f4\u65b0\u6aa2\u67e5\u6210\u529f\u3002\u5df2\u627e\u5230\u65b0\u5143\u4ef6\u66f4\u65b0\u3002\u96fb\u5b50\u90f5\u4ef6\u5df2\u50b3\u9001\u7d66\u7ba1\u7406\u54e1\u3002"}, {"VM_PATCH_DETECTED_MSG6", "\u7121\u6cd5\u4e0b\u8f09\u4fee\u88dc\u7a0b\u5f0f\u66f4\u65b0 "}, {"VM_FOR", "\u7528\u65bc "}, {"VM_ON", "\u4e0a "}, {"VM_PATCH_DETECTED_MSG7", "\u5143\u4ef6\u4fee\u88dc\u7a0b\u5f0f\u4e0b\u8f09\u5df2\u4e2d\u6b62\u3002\u4fee\u88dc\u7a0b\u5f0f\u6a94\u6848\u5df2\u7d93\u5b58\u5728\uff1a "}, {"VM_PATCH_DETECTED_MSG8", "\u5143\u4ef6\u4fee\u88dc\u7a0b\u5f0f\u4e0b\u8f09\u6210\u529f\uff1a "}, {"VM_PATCH_DETECTED_MSG9", "\u5c07\u4fee\u88dc\u7a0b\u5f0f\u6a94\u6848 "}, {"VM_PATCH_DETECTED_MSG10", "\u5beb\u5165\u81f3\u78c1\u789f\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"SDM_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f\u3002"}, {"SDM_UPDATE_FAILURE", "\u66f4\u65b0\u5931\u6557\u3002"}, {"SDM_UPDATE_SPECIAL_FAILURE", "\u7121\u6cd5\u5efa\u7acb\u5de5\u4f5c\u4ee5\u522a\u9664 SA\u3002"}, {"SDM_UPDATE_INVALID", "\u66f4\u65b0\u8acb\u6c42\u7121\u6548\u3002"}, {"SDM_SCREEN_ID_INVALID", "\u87a2\u5e55 ID \u7121\u6548"}, {"SDM_READY", "\u5c31\u7dd2"}, {"SDM_CGI_ERROR", "\u7372\u53d6\u4ee5\u4e0b\u9805\u76ee\u7684 CGI_NAME \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_DEFAULT_ERROR", "\u7372\u53d6\u4ee5\u4e0b\u9805\u76ee\u7684 DEFAULT_VALUE \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_INVALID_TARGET", "\u932f\u8aa4\uff1a\u4f86\u6e90\u6216\u76ee\u6a19\u7fa4\u7d44\u7121\u6548\u3002"}, {"SDM_METADATA_ERROR", "\u7372\u53d6\u4ee5\u4e0b\u9805\u76ee\u7684\u4e2d\u7e7c\u8cc7\u6599\u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_DB_ERROR", "\u5b58\u53d6 SonicWall GMS \u8cc7\u6599\u5eab\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"SDM_NOVPN_ERROR", "\u6b64\u88dd\u7f6e\u4e2d\u6c92\u6709\u555f\u7528 VPN\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NO_TARGET_VPN_ERROR", "\u76ee\u6a19\u4e2d\u6c92\u6709\u555f\u7528 VPN\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NOSAS_ERROR", "\u6b64\u88dd\u7f6e\u4e2d\u6c92\u6709\u5269\u9918\u7684 SA \u53ef\u7528\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NO_TARGET_SAS_ERROR", "\u76ee\u6a19\u4e2d\u6c92\u6709\u5269\u9918\u7684 SA \u53ef\u7528\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NO_UNITS_ERROR", "\u6c92\u6709\u5efa\u7acb\u4efb\u4f55\u5de5\u4f5c\u3002"}, {"SDM_NO_3RDPARTYCERTS_ERROR", "\u672a\u627e\u5230\u6709\u6548\u7684\u5354\u529b\u5ee0\u5546\u672c\u6a5f/CA \u8b49\u66f8\u7d44\u5408\u3002\u8df3\u904e VPN SA \u5230\u88dd\u7f6e "}, {"SDM_DHCP_ERROR", "\u52d5\u614b\u5b9a\u5740\u5728\u4f86\u6e90\u548c\u76ee\u6a19\u88dd\u7f6e\u4e0a\u5747\u5df2\u555f\u7528\uff0c\u56e0\u6b64\u7121\u6cd5\u5efa\u7acb SA\u3002\u8df3\u904e VPN SA \u5efa\u7acb\u3002 "}, {"SDM_NOAES_ERROR", "AES \u5728\u88dd\u7f6e\u4e2d\u4e0d\u53ef\u7528\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NO_TARGET_AES_ERROR", "AES \u5728\u76ee\u6a19\u4e2d\u4e0d\u53ef\u7528\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_DELETE_SUCCESS", "\u522a\u9664\u6210\u529f "}, {"SDM_DELETE_FAILURE", "\u522a\u9664\u5931\u6557 "}, {"SDM_AGENTNAME_INVALID", "\u4ee3\u7406\u540d\u7a31\u4e2d\u7684\u7121\u6548\u5b57\u5143 [<,\\,:,',@,#,*,$]\u3002"}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "\u589e\u5f37\u578b\u4e92\u9023 VPNS SA \u7684\u5de5\u4f5c\u5efa\u7acb\u5931\u6557"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "\u4ee5\u4e0b\u9805\u76ee\u7684\u7fa4\u7d44\u66f4\u65b0\u5931\u6557 "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "\u589e\u5f37\u578b\u4e92\u9023 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "\u6a19\u6e96\u4e92\u9023 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "\u589e\u5f37\u578b\u975e\u4e92\u9023 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "\u6a19\u6e96\u975e\u4e92\u9023 VPN SA"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "\u8df3\u904e\u6b64\u88dd\u7f6e\u7684 SA \u5efa\u7acb\uff0c\u539f\u56e0\u662f\u6b64\u88dd\u7f6e\u4e0a\u7684\u97cc\u9ad4\u7248\u672c\u4e0d\u652f\u63f4\u901a\u9053\u4ecb\u9762\u985e\u578b"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "\u5df2\u6392\u7a0b\u5de5\u4f5c\u5728\u4ee5\u4e0b\u9805\u76ee\u4e0a\u57f7\u884c"}, {"PASSWORD_CHANGED", "SonicWall GMS \u5bc6\u78bc\u8b8a\u66f4\u6210\u529f\u3002"}, {"PASSWORD_NOT_CHANGED_A", "\u6307\u5b9a\u7684\u820a\u5bc6\u78bc\u4e0d\u6b63\u78ba\u3002<BR>"}, {"PASSWORD_NOT_CHANGED_B", "\u5bc6\u78bc\u672a\u8b8a\u66f4\u3002"}, {"PASSWORD_NOT_CHANGED", "\u6307\u5b9a\u7684\u820a\u5bc6\u78bc\u4e0d\u6b63\u78ba\u3002\u5bc6\u78bc\u672a\u8b8a\u66f4\u3002"}, {"LOGS_PASSWD_CHANGED", "\u4f7f\u7528\u8005\u767b\u5165\u5bc6\u78bc\u5df2\u6210\u529f\u8b8a\u66f4 "}, {"LOGS_PASSWD_NOT_CHANGED", "\u7cfb\u7d71\u7121\u6cd5\u9a57\u8b49\u4f7f\u7528\u8005\u4ee5\u8b8a\u66f4\u767b\u5165\u5bc6\u78bc "}, {"LOGS_ADDED_NEW_USER", "\u65b0\u589e\u81f3 SonicWall GMS \u8cc7\u6599\u5eab\u7684\u65b0\u4f7f\u7528\u8005: "}, {"LOGS_ADDED_NEW_USER_TYPE", "\u65b0\u589e\u81f3 SonicWall GMS \u8cc7\u6599\u5eab\u7684\u65b0\u4f7f\u7528\u8005\u985e\u578b: "}, {"LOGS_DELETED_USER", "\u5f9e SonicWall GMS \u8cc7\u6599\u5eab\u4e2d\u522a\u9664\u7684\u4f7f\u7528\u8005\u548c\u76f8\u61c9\u8cc7\u8a0a: "}, {"LOGS_DELETED_GROUP", "\u4ee5\u4e0b\u81ea\u8a02\u7fa4\u7d44\u4ee5\u53ca\u4f7f\u7528\u6b64\u81ea\u8a02\u7fa4\u7d44\u7684\u6240\u6709\u6aa2\u8996\u5df2\u5f9e SonicWall GMS \u8cc7\u6599\u5eab\u4e2d\u522a\u9664: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "\u81ea\u8a02\u5c6c\u6027\u503c ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") \u61c9\u50c5\u5305\u542b\u82f1\u6578\u5b57\u5143"}, {"LOGS_ADD_CUSTOM_GROUP", "The following Custom Group Name / Default Value was added to the system: "}, {"LOGS_MOD_CUSTOM_GROUP", "The following Custom Group Name / Default Value was modified: "}, {"LOGS_DEL_CUSTOM_GROUP", "The following Custom Group was deleted from the system: "}, {"READY", "\u5c31\u7dd2"}, {"NAV_OF", "/ "}, {"NAV_PREVIOUS", "\u4e0a\u4e00\u6b65"}, {"NAV_NEXT", "\u4e0b\u4e00\u6b65"}, {"NAV_DISPLAYING", "\u986f\u793a"}, {"NAV_FIREWALLS", "Firewall"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u66f4\u65b0\u6b0a\u9650\u3002"}, {"ACT_WRONG_FILE_FORMAT", "\u932f\u8aa4\uff1a\u6a94\u6848\u683c\u5f0f\u932f\u8aa4\uff0c\u7121\u6cd5\u65b0\u589e\u4ee3\u78bc\u3002"}, {"AUTH_INVALID_PARAMS", "\u53c3\u6578\u7121\u6548\uff0c\u8acb\u91cd\u8a66"}, {"AUTH_AUTHENTICATE", "\u9a57\u8b49"}, {"AUTH_PERFORM_LOGIN", "\u57f7\u884c\u767b\u5165"}, {"AUTH_RANDOM_TIMEOUT", "\u767b\u5165\u4e82\u6578\u5df2\u903e\u6642"}, {"AUTH_LOGIN_TIMEOUT", "\u767b\u5165\u9801\u9762\u5df2\u903e\u6642\uff0c\u8acb\u91cd\u8a66"}, {"AUTH_LOGIN_FAILURE", "\u767b\u5165\u5931\u6557\uff0c\u8acb\u91cd\u8a66"}, {"AUTH_LOGIN_FAILURE_LOG", "\u767b\u5165\u5931\u6557"}, {"NO_DOMAIN_SPECIFIED", "\u6c92\u6709\u6307\u5b9a\u7528\u65bc\u767b\u5165\u7684\u7db2\u57df\u540d\u7a31"}, {"SPECIFY_DOMAIN", "\u8acb\u6307\u5b9a\u7528\u65bc\u767b\u5165\u7684\u7db2\u57df\u540d\u7a31"}, {"INVALID_IP", "[TW]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "\u7db2\u57df\u7121\u6548\u3002\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u7db2\u57df\u540d\u7a31"}, {"INVALID_ALIAS_MSG", "\u5225\u540d\u7121\u6548\u3002\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u5225\u540d"}, {"REMOTE_SUCCESSFUL_LOGIN", "\u900f\u904e\u4ee5\u4e0b\u4f7f\u7528\u8005\u6210\u529f\u767b\u5165\u81f3\u7cfb\u7d71\uff1a "}, {"REMOTE_FAILED_LOGIN", "\u4ee5\u4e0b\u4f7f\u7528\u8005\u7684\u9060\u7aef\u9a57\u8b49\u5931\u6557\uff1a "}, {"XML_REMOTE_FAILED_LOGIN", "\u4ee5\u4e0b\u4f7f\u7528\u8005\u57fa\u65bc XML \u7684\u9060\u7aef\u9a57\u8b49\u5931\u6557\uff1a "}, {"NEW_USER_ADDED", "\u65b0\u589e\u7684\u4f7f\u7528\u8005\uff1a "}, {"TO_USER_TYPE", "\u4f7f\u7528\u8005\u985e\u578b\uff1a "}, {"CLICK_TO_TRY_AGAIN", "\u6309\u4e00\u4e0b\u6b64\u8655\u4ee5\u91cd\u8a66"}, {"USER_LOCKED_OUT", "\u4f7f\u7528\u8005\u5df2\u9396\u5b9a\uff0c\u8acb\u806f\u7d61\u7ba1\u7406\u54e1\u4ee5\u7372\u53d6\u8a73\u7d30\u8cc7\u6599"}, {"USER_DISABLED", "\u4f7f\u7528\u8005\u5e33\u6236\u5df2\u505c\u7528\uff0c\u8acb\u806f\u7d61\u7ba1\u7406\u54e1\u4ee5\u7372\u53d6\u8a73\u7d30\u8cc7\u6599"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "\u9060\u7aef\u9a57\u8b49\u5931\u6557\u3002\u8acb\u806f\u7d61 GMS \u7ba1\u7406\u54e1\u3002"}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "\u9060\u7aef\u9a57\u8b49\u5931\u6557\u3002\u8acb\u806f\u7d61 GMS \u7ba1\u7406\u54e1\u6216\u91cd\u8a66\u3002"}, {"LDAP_AUTH_FAILED", "\u9060\u7aef\u9a57\u8b49\u5931\u6557"}, {"LDAP_USER_NOT_FOUND", "\u4ee5\u4e0b\u76ee\u9304\u4e2d\u4f7f\u7528\u8005\u672a\u627e\u5230\u6216\u4e0d\u5b58\u5728"}, {"LDAP_INVALID_CREDENTIALS", "\u9060\u7aef\u9a57\u8b49\u5931\u6557\uff1a\u8a8d\u8b49\u7121\u6548"}, {"LDAP_COMMUNICATION_ERROR", "\u7121\u6cd5\u8207\u76ee\u9304\u6216\u547d\u540d\u670d\u52d9\u9032\u884c\u901a\u8a0a"}, {"LDAP_ANONYMOUS_BIND_SET", "\u533f\u540d\u7d81\u5b9a\u8a2d\u5b9a\u70ba\u5141\u8a31\u7528\u65bc\u8a72\u7db2\u57df "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "\u6aa2\u67e5\u9060\u7aef\u4f3a\u670d\u5668\u662f\u5426\u5141\u8a31\u533f\u540d\u7d81\u5b9a\u3002"}, {"LDAP_INVALID_GROUPS_SPECIFIED", "\u6307\u5b9a\u7684\u76ee\u9304\u7fa4\u7d44\u7121\u6548\u3002\u8acb\u806f\u7d61 GMS \u7ba1\u7406\u54e1\u3002"}, {"LDAP_INVALID_GROUP_MEMBER", "\u4f7f\u7528\u8005\u4e26\u975e\u5141\u8a31\u7684\u76ee\u9304\u7fa4\u7d44\u7684\u6210\u54e1\u3002"}, {"RADIUS_UNKNOWN_HOST", "RADIUS \u4f3a\u670d\u5668\u4e3b\u6a5f\u672a\u77e5\u3002"}, {"RADIUS_CONNECTION_TIMEOUT", "\u8207\u9060\u7aef RADIUS \u4f3a\u670d\u5668\u7684\u9023\u63a5\u903e\u6642"}, {"RADIUS_FAILED_LOGIN", "\u9a57\u8b49\u5931\u6557\u3002\u8a8d\u8b49\u7121\u6548\u3002"}, {"RADIUS_EXCEPTION", "\u767c\u751f RADIUS \u4f8b\u5916\u72c0\u6cc1\u3002"}, {"RADIUS_INVALID_GROUP_MEMBER", "\u4f7f\u7528\u8005\u4e26\u975e\u5141\u8a31\u7684 RADIUS \u7fa4\u7d44\u7684\u6210\u54e1\u3002"}, {"PWD_CHANGE_SCREEN", "\u8b8a\u66f4\u5bc6\u78bc\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "\u8b8a\u66f4\u5bc6\u78bc\uff0c\u539f\u56e0\u662f\u5176\u9577\u5ea6\u4e0d\u5728\u5141\u8a31\u7684\u7bc4\u570d\u5167\uff1a7 - 15 \u500b\u5b57\u5143\u3002"}, {"PWD_VALIDATION_FAILURE", "\u8b8a\u66f4\u5bc6\u78bc\uff0c\u539f\u56e0\u662f\u5176\u9577\u5ea6\u4e0d\u80fd\u8d85\u904e 15 \u500b\u5b57\u5143\u3002"}, {"PWD_EXPIRATION", "\u5bc6\u78bc\u9700\u8981\u6bcf {0} \u5929\u8b8a\u66f4\u4e00\u6b21"}, {"PWD_CHANGE_NEXT_LOGIN", "\u900f\u904e\u7ba1\u7406\u54e1\u5f37\u5236\u8b8a\u66f4\u5bc6\u78bc\u3002"}, {"PASSWORD_EXISTS", "[TW]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[TW]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[TW]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "\u7121\u6cd5\u8b80\u53d6\u6388\u6b0a\u6a94\u6848"}, {"CUI_UPGRADE_SUCCESS", "\u5347\u7d1a\u6210\u529f"}, {"CUI_UPGRADE_FAIL", "\u5347\u7d1a\u5931\u6557\uff1a "}, {"CUI_SYNCH_SUCCESS", "\u540c\u6b65\u6210\u529f"}, {"CUI_SYNCH_FAIL", "\u540c\u6b65\u5931\u6557\uff1a "}, {"CUI_PRORATE_SUCCESS", "\u6309\u6bd4\u4f8b\u6307\u6d3e\u8acb\u6c42\u6210\u529f"}, {"CUI_PRORATE_FAIL", "\u6309\u6bd4\u4f8b\u6307\u6d3e\u8acb\u6c42\u5931\u6557\uff1a "}, {"CUI_CHANGE_PW_SUCCESS", "\u6210\u529f\u3002MySonicWall.com \u63a5\u53d7\u4e86\u5bc6\u78bc\u3002"}, {"CUI_CHANGE_PW_FAIL", "\u5931\u6557\u3002MySonicWall.com \u4e0d\u63a5\u53d7\u5bc6\u78bc\uff1a "}, {"CUI_EMAIL_SUCCESS", "\u5df2\u900f\u904e\u96fb\u5b50\u90f5\u4ef6\u5c07\u6280\u8853\u652f\u63f4\u8868\u55ae\u50b3\u9001\u81f3 SonicWall GMS \u652f\u63f4\u4e2d\u5fc3\u3002"}, {"CUI_EMAIL_FAIL", "\u5c07\u6280\u8853\u652f\u63f4\u5831\u544a\u50b3\u9001\u81f3 SonicWall GMS \u652f\u63f4\u4e2d\u5fc3\u6642\u51fa\u73fe\u554f\u984c\u3002<br>\u8acb\u7a0d\u5f8c\u91cd\u8a66\u3002"}, {"CUI_SESSION_TERMINATED", " \u5de5\u4f5c\u968e\u6bb5\u5df2\u6210\u529f\u7d42\u6b62"}, {"CUI_SESSIONS_TERMINATED", "\u5de5\u4f5c\u968e\u6bb5\u5df2\u6210\u529f\u7d42\u6b62\u3002"}, {"CUI_NO_AGENTS", "\u672a\u627e\u5230\u4ee3\u7406\u3002"}, {"CUI_FILTER_ADDED", "\u6210\u529f\u65b0\u589e\u65b0\u7be9\u9078\u5668 "}, {"DIAG_DIAG_REQUEST_A", "\u5c0d\u4ee5\u4e0b\u9805\u76ee\u9032\u884c\u7684\u8a3a\u65b7\u8acb\u6c42 "}, {"DIAG_DIAG_REQUEST_B", "\u5df2\u63d0\u4ea4\u3002"}, {"DIAG_DELETE_SUCCESS", "\u522a\u9664\u6210\u529f\u3002"}, {"DIAG_EMAIL_SUCCESS", "\u96fb\u5b50\u90f5\u4ef6\u6210\u529f\u50b3\u9001\u3002"}, {"DIAG_UNIT_UNKNOWN", "\u300c\u88dd\u7f6e\u540d\u7a31\u672a\u77e5\u300d"}, {"DIAG_UNIT", "\u300c\u88dd\u7f6e "}, {"VPN_DUPLICATE_UFI", "\u66f4\u65b0\u5931\u6557\u3002\u552f\u4e00\u7684\u9632\u706b\u7246\u8b58\u5225\u78bc\u5728 SonicWall GMS \u4e2d\u4e0d\u552f\u4e00\u3002"}, {"NO_LOGS_MESSAGE", "\u672a\u627e\u5230\u8a18\u9304\u3002"}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "\u6c92\u6709\u627e\u5230\u7b26\u5408\u63d0\u4f9b\u7684\u641c\u5c0b\u689d\u4ef6\u7684\u8a18\u9304\u3002"}, {"LOG_START_SEARCH", "\u958b\u59cb\u65b0\u641c\u5c0b"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "\u60a8\u67e5\u8a62\u7684 {0,number,integer} \u5247\u8a18\u9304\u592a\u5927\u3002\u8acb\u9650\u5236\u60a8\u7684\u641c\u5c0b\u689d\u4ef6\u3002"}, {"SQL_EXCEPTION_ERROR_MESSAGE", "\u8cc7\u6599\u5eab\u9023\u63a5\u4e2d\u767c\u751f\u932f\u8aa4\u3002\u8acb\u78ba\u4fdd\u8cc7\u6599\u5eab\u53ef\u7528\u4e26/\u6216\u9650\u5236\u60a8\u7684\u641c\u5c0b\u689d\u4ef6\u3002"}, {"UNKNOWN_EXCEPTION_MESSAGE", "\u57f7\u884c\u641c\u5c0b\u6642\u767c\u751f\u932f\u8aa4\u3002\u8acb\u78ba\u4fdd\u8cc7\u6599\u5eab\u53ef\u7528\u4e26/\u6216\u9650\u5236\u60a8\u7684\u641c\u5c0b\u689d\u4ef6\u3002"}, {"LOG_NEXT", "\u4e0b\u4e00\u6b65"}, {"LOG_PREVIOUS", "\u4e0a\u4e00\u6b65"}, {"LOG_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f"}, {"LOG_OF", "/ "}, {"LOG_OF", "/ "}, {"PREFS_SYNCHRONIZE_STARTED", "\u8207\u555f\u52d5\u7684\u88dd\u7f6e\u540c\u6b65\u8cc7\u8a0a\u6210\u529f\u3002"}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "\u540c\u6b65\u88dd\u7f6e\u8cc7\u8a0a\u5931\u6557\uff0c\u7121\u6cd5\u767b\u5165\u81f3\u88dd\u7f6e\u3002"}, {"MON_NO_PRIVILEGES", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u8db3\u5920\u6b0a\u9650"}, {"MON_SYNC_TASK_CREATED", "\u5efa\u7acb\u540c\u6b65\u5de5\u4f5c\u6210\u529f"}, {"MON_SYNC_TASK_FAIL", "\u5efa\u7acb\u540c\u6b65\u5de5\u4f5c\u5931\u6557"}, {"MON_RENEGOTIATE_TASK_CREATED", "\u5efa\u7acb\u91cd\u65b0\u4ea4\u6d89\u5de5\u4f5c\u6210\u529f"}, {"MON_RENEGOTIATE_FAILED", "\u5efa\u7acb\u91cd\u65b0\u4ea4\u6d89\u5de5\u4f5c\u5931\u6557"}, {"MON_NO_SELECTED", "\u6c92\u6709\u9078\u5b9a\u7528\u65bc\u91cd\u65b0\u4ea4\u6d89\u7684\u901a\u9053"}, {"MON_REFRESH_CREATED", "\u5efa\u7acb\u91cd\u65b0\u6574\u7406\u7d71\u8a08\u5de5\u4f5c\u6210\u529f"}, {"MON_REFRESH_FAIL", "\u5efa\u7acb\u901a\u9053\u7d71\u8a08\u7684\u91cd\u65b0\u6574\u7406\u5de5\u4f5c\u5931\u6557"}, {"MON_NO_SELECTED_REFRESH", "\u6c92\u6709\u9078\u5b9a\u7528\u65bc\u91cd\u65b0\u6574\u7406\u7d71\u8a08\u7684\u901a\u9053"}, {"MON_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f"}, {"MON_UPDATE_FAIL", "\u66f4\u65b0\u5931\u6557"}, {"MON_NO_MONITORING", "\u7121\u6cd5\u76e3\u8996\u901a\u9053\u3002"}, {"MON_NAME", "\u540d\u7a31"}, {"MON_GATEWAY", "\u9598\u9053"}, {"MON_LAST_UPDATED", "\u6700\u5f8c\u66f4\u65b0\u6642\u9593"}, {"MON_DEST_ADDR_RANGE", "\u76ee\u6a19\u4f4d\u5740\u7bc4\u570d"}, {"MON_LOCAL_ADDR_RANGE", "\u672c\u6a5f\u4f4d\u5740\u7bc4\u570d"}, {"MON_NO_TUNNELS_FOUND", "\u672a\u627e\u5230\u901a\u9053\u3002"}, {"MON_TITLE", "VPN \u901a\u9053\u7d71\u8a08"}, {"MON_DESCRIPTION", "\u8aaa\u660e"}, {"MON_VALUE", "\u503c"}, {"MON_CREATE_TIME", "\u5efa\u7acb\u6642\u9593"}, {"MON_VALID_UNTIL", "\u901a\u9053\u6709\u6548\u671f\u81f3"}, {"MON_PACKETS_IN", "\u8f38\u5165\u5c01\u5305\u6578"}, {"MON_PACKETS_OUT", "\u8f38\u51fa\u5c01\u5305\u6578"}, {"MON_BYTES_IN", "\u8f38\u5165\u4f4d\u5143\u7d44\u6578"}, {"MON_BYTES_OUT", "\u8f38\u51fa\u4f4d\u5143\u7d44\u6578"}, {"MON_FRAGMENTS_IN", "\u8f38\u5165\u5df2\u5206\u5272\u5c01\u5305\u6578"}, {"MON_FRAGMENTS_OUT", "\u8f38\u51fa\u5df2\u5206\u5272\u5c01\u5305\u6578"}, {"MON_TUNNEL_ACTIVE", "\u901a\u9053\u8655\u65bc\u6d3b\u52d5\u72c0\u614b"}, {"REG_NO_PERMISSION", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u66f4\u65b0\u6b0a\u9650"}, {"REG_ERROR_RETRIEVING_COUNT", "\u64f7\u53d6\u8a3b\u518a/\u672a\u8a3b\u518a\u88dd\u7f6e\u7684\u8a08\u6578\u6642\u767c\u751f\u932f\u8aa4"}, {"REG_CURRENT", "\u76ee\u524d"}, {"REG_EXPIRED", "\u904e\u671f"}, {"REG_NO_LICENSE", "\u7121\u6388\u6b0a"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "\u97cc\u9ad4\u5f71\u50cf\u7121\u6cd5\u4e0a\u50b3"}, {"TASKS_SUCCESSFUL_DELETION", "\u5de5\u4f5c\u5df2\u5f9e\u8cc7\u6599\u5eab\u6210\u529f\u522a\u9664\u3002"}, {"TASKS_ERROR_DELETION", "\u932f\u8aa4\uff1a\u7121\u6cd5\u522a\u9664\u5de5\u4f5c\u3002"}, {"TASKS_EXECUTION_SET", "\u5de5\u4f5c\u5df2\u6210\u529f\u8a2d\u5b9a\u70ba\u7acb\u5373\u57f7\u884c\u3002"}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "\u57f7\u884c\u4ee5\u4e0b\u5de5\u4f5c\u7684\u672a\u6388\u6b0a\u5617\u8a66"}, {"TASKS_ERROR_EXECUTION", "\u932f\u8aa4\uff1a\u7121\u6cd5\u6392\u7a0b\u57f7\u884c\u7684\u5de5\u4f5c\u3002"}, {"TASK_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u5de5\u4f5c\u5df2\u88ab\u4f7f\u7528\u8005\u522a\u9664 "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "\u522a\u9664\u4ee5\u4e0b\u5de5\u4f5c\u7684\u672a\u6388\u6b0a\u5617\u8a66"}, {"NO_TASKS_MESSAGE", "\u672a\u627e\u5230\u5de5\u4f5c\u3002"}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "\u6c92\u6709\u627e\u5230\u7b26\u5408\u63d0\u4f9b\u7684\u641c\u5c0b\u689d\u4ef6\u7684\u5de5\u4f5c\u3002"}, {"TASKS_RESCHEDULED", "\u5de5\u4f5c\u5df2\u6210\u529f\u91cd\u65b0\u6392\u7a0b\u3002"}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "\u91cd\u65b0\u6392\u7a0b\u4ee5\u4e0b\u5de5\u4f5c\u7684\u672a\u6388\u6b0a\u5617\u8a66"}, {"TASKS_ERROR_RESCHEDULE", "\u932f\u8aa4\uff1a\u7121\u6cd5\u91cd\u65b0\u6392\u7a0b\u5de5\u4f5c\u3002"}, {"IMMEDIATE_STRING", "\u7acb\u5373"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "\u672c\u6a5f"}, {"AGENT_STRING", "\u4ee3\u7406"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "\u4ee5\u4e0b\u5de5\u4f5c\u5df2\u88ab\u4f7f\u7528\u8005\u91cd\u65b0\u6392\u7a0b "}, {"FROM_LOG_MESSAGE", "\u5f9e "}, {"TO_LOG_MESSAGE", "\u5230 "}, {"IMMEDIATE_LOG_MESSAGE", "\u7acb\u5373\u57f7\u884c"}, {"REG_PASSWORD_SUCCESS", "\u6210\u529f\u3002MySonicWall.com \u63a5\u53d7\u4e86\u5bc6\u78bc\u3002\u6309\u4e0b\u66f4\u65b0\u4ee5\u7e7c\u7e8c\u3002"}, {"REG_PASSWORD_FAIL", "\u5931\u6557\u3002MySonicWall.com \u4e0d\u63a5\u53d7\u5bc6\u78bc\uff1a "}, {"LOGIN_MESSAGE", "\u8acb\u767b\u5165"}, {"LOGIN_DEFAULT_MESSAGE", "\u8acb\u4f7f\u7528\u9810\u8a2d\u4f7f\u7528\u8005: 'admin' \u548c\u5bc6\u78bc: 'password' \u767b\u5165"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "\u8acb\u4f7f\u7528\u9810\u8a2d\u4f7f\u7528\u8005: 'admin' \u548c\u5bc6\u78bc: \u8207 /appliance \u76f8\u540c"}, {"LOGIN_DEMO_MESSAGE", "\u8acb\u4f7f\u7528\u4f7f\u7528\u8005: 'demo' \u548c\u5bc6\u78bc: 'password' \u767b\u5165"}, {"SETTINGSVPS_CHANGED", "\u60a8\u7684 Analyzer \u8a2d\u5b9a\u5df2\u66f4\u65b0\u3002"}, {"SETTINGS_CHANGED", "\u60a8\u7684\u8a2d\u5b9a\u66f4\u65b0\u3002"}, {"LOGS_USER_FORCEDOUT", "\u5df2\u5f37\u5236\u4ee5\u4e0b\u4f7f\u7528\u8005\u5f9e\u7cfb\u7d71\u767b\u51fa\uff1a "}, {"SLAVE_STATE_CHANGED_MESSAGE", "\u4ee3\u7406\u5df2\u6210\u529f\u8a2d\u5b9a\u4ee5\u8b8a\u66f4\u5176\u72c0\u614b\u3002"}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "\u5617\u8a66\u5931\u6557\uff1a\u4ee3\u7406\u72c0\u614b\u7121\u6cd5\u8b8a\u66f4\u3002"}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "\u4ee3\u7406\u53c3\u6578\u5df2\u6210\u529f\u66f4\u65b0\u3002"}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "\u4ee3\u7406\u53c3\u6578\u7121\u6cd5\u6210\u529f\u66f4\u65b0\u3002"}, {"SCHEDULER_UP_STATE", "\u57f7\u884c"}, {"SCHEDULER_DOWN_STATE", "\u95dc\u9589"}, {"SCHEDULER_UNDETERMINED_STATE", "\u4e0d\u78ba\u5b9a"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6c92\u6709\u6b0a\u9650\u66f4\u65b0\u4ee3\u7406\u5167\u5bb9\u3002"}, {"SMTPSERVER_INVALID", "SMTP \u4f3a\u670d\u5668\u4f4d\u5740\u7121\u6548\u3002"}, {"APPLIANCE_MANAGE_FAILED", "\u7121\u6cd5\u8b8a\u66f4\u8a2d\u5099\u7684\u7ba1\u7406\u559c\u597d\u8a2d\u5b9a\u3002"}, {"EMPTY_SMTP_PWD", "SMTP \u5bc6\u78bc\u4e0d\u5f97\u7a7a\u767d"}, {"TREE_AGENT_STARTED", "\u4e3b\u8981\u4ee3\u7406\u61c9\u8655\u65bc\u555f\u52d5\u72c0\u614b\u624d\u80fd\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406"}, {"TREE_STANDBY_STARTED", "\u5099\u7528\u4ee3\u7406\u61c9\u8655\u65bc\u555f\u52d5\u72c0\u614b\u624d\u80fd\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406"}, {"TREE_LICENSE_EXCEEDED", "\u60a8\u6c92\u6709\u65b0\u589e\u66f4\u591a\u9032\u884c\u7ba1\u7406\u7684\u88dd\u7f6e\u7684\u6388\u6b0a\u3002"}, {"TREE_IP_EMPTY", "IP \u4e0d\u80fd\u70ba\u7a7a\u3002\u8acb\u63d0\u4f9b\u4e00\u500b\u6709\u6548\u7684 IP \u4f4d\u5740"}, {"TREE_AUTH_FAIL", "\u88dd\u7f6e\u9a57\u8b49\u5931\u6557\uff1b\u8acb\u78ba\u8a8d\u8a2d\u5b9a\u3002"}, {"TREE_NO_RESPONSE", "\u88dd\u7f6e\u7121\u6cd5\u5b58\u53d6\uff1b\u8acb\u78ba\u8a8d\u8a2d\u5b9a\u3002"}, {"TREE_FIREWALL_NOT_LICENSED", "\u88dd\u7f6e\u6c92\u6709 Analyzer \u6388\u6b0a\u3002"}, {"TREE_FIREWALL_STATE_ERROR", "\u7121\u6cd5\u64f7\u53d6\u88dd\u7f6e\u72c0\u614b\u8cc7\u8a0a\u3002\n\u88dd\u7f6e\u7684\u97cc\u9ad4\u53ef\u80fd\u9700\u8981\u9032\u884c\u66f4\u65b0\u3002"}, {"TREE_MODEL_FAIL", "\u7121\u6cd5\u64f7\u53d6\u578b\u865f\u8cc7\u8a0a"}, {"TREE_FIRMWARE_VERSION_FAIL", "\u7121\u6cd5\u64f7\u53d6\u97cc\u9ad4\u7248\u672c"}, {"TREE_UNMATCHED_SERIAL", "\u5e8f\u865f\u4e0d\u76f8\u7b26\u3002"}, {"TREE_TIMEZONE_FAIL", "\u7121\u6cd5\u64f7\u53d6\u6642\u5340"}, {"TREE_UTC_FAIL", "\u8a18\u9304\u8a0a\u606f\u4e26\u975e UTC \u683c\u5f0f\u3002\u8acb\u5c07\u88dd\u7f6e\u7684\u6642\u9593\u6233\u683c\u5f0f\u8b8a\u66f4\u70ba UTC\uff0c\u5426\u5247\u7522\u751f\u7684\u5831\u544a\u5c07\u986f\u793a\u932f\u8aa4\u7684\u6642\u9593"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "\u8acb\u5728\u300c\u8a18\u9304\u300d>ViewPoint \u87a2\u5e55\u4e2d\u555f\u7528\u300c\u555f\u7528 ViewPoint \u8a2d\u5b9a\u300d\u9078\u9805\u3002\u6b64\u8a2d\u5b9a\u5c07\u8b8a\u66f4\u4ee5\u4e0b\u5167\u5bb9\uff1a\n\t1.\u4ee5 UT\u683c\u5f0f\u50b3\u9001 Syslog\n\t2.\u5c07\u300cSyslog \u4e8b\u4ef6\u5197\u9918\u7be9\u9078\u5668\u300d\uff08\u79d2\u6578\uff09\u8a2d\u5b9a\u70ba 0\n\t3.\u5c07\u300cSyslog \u683c\u5f0f\u300d\u8a2d\u5b9a\u70ba\u9810\u8a2d\u503c"}, {"TREE_NO_SCHEDULER", "\u6307\u5b9a\u7684 IP \u4f4d\u5740\u672a\u627e\u5230\u6392\u7a0b\u5668\uff0c\u88dd\u7f6e\u672a\u65b0\u589e"}, {"TREE_GET_PREFS_ERR", "\u64f7\u53d6\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"TREE_FIREWALL_NOT_REGISTERED", "\u6b64\u88dd\u7f6e\u672a\u8a3b\u518a\u3002\u8acb\u5b58\u53d6 MySonicWall.com \u4e26\u8a3b\u518a\u8a72\u88dd\u7f6e\uff0c\u7136\u5f8c\u5c07\u5176\u65b0\u589e\u81f3 Analyzer\u3002"}, {"TREE_BACKEND_COMM_FAILURE", "Analyzer \u7121\u6cd5\u8207 MySonicWall.com \u901a\u8a0a\u4ee5\u9a57\u8b49\u6388\u6b0a\u3002\n\u8acb\u6aa2\u67e5\u60a8\u7684\u7db2\u8def\u9023\u63a5\uff1bAnalyzer \u4f3a\u670d\u5668\u5fc5\u9808\u80fd\u5920\u8207 MySonicWall.com \u901a\u8a0a\u3002 "}, {"SU_DB_SIZE_EMAILBODY1", "\u76ee\u524d\u8cc7\u6599\u5eab\u5927\u5c0f\u5982\u4e0b\uff1a\n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\n\u8a3b\uff1a\u6700\u5927\u8cc7\u6599\u5eab\u5927\u5c0f\u9650\u5236\u70ba 2GB \n\n \n\u4ee5\u4e0b\u8a2d\u5b9a\u8b8a\u66f4\u5c07\u5f71\u97ff\u8cc7\u6599\u5eab\u4f7f\u7528\u60c5\u6cc1\u7684\u7e3d\u9ad4\u898f\u6a21\uff1a\n\t\u6e1b\u5c0f\u300c\u63a7\u5236\u9762\u677f\u300d->\u300c\u5831\u544a\u300d->\u300c\u8a2d\u5b9a\u300d\u87a2\u5e55\u4e2d\u300c\u539f\u59cb\u8cc7\u6599\u5132\u5b58\u5929\u6578\u300d\u7684\u5929\u6578\u8a2d\u5b9a\u3002\n\t\u6e1b\u5c0f\u300c\u63a7\u5236\u9762\u677f\u300d->\u300c\u5831\u544a\u300d->\u300c\u6458\u8981\u5668\u300d\u87a2\u5e55\u4e2d\u300c\u6458\u8981\u8cc7\u6599\u5132\u5b58\u5929\u6578\u300d\u8a2d\u5b9a\u7684\u5929\u6578\u3002"}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\n\u8a3b\uff1a "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "\u6700\u5927\u8cc7\u6599\u5eab\u5927\u5c0f\u9650\u5236\u70ba 2GB \n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\n\u4ee5\u4e0b\u8a2d\u5b9a\u8b8a\u66f4\u5c07\u5f71\u97ff\u8cc7\u6599\u5eab\u4f7f\u7528\u60c5\u6cc1\u7684\u7e3d\u9ad4\u898f\u6a21\uff1a\n\t\u6e1b\u5c0f\u300c\u63a7\u5236\u9762\u677f\u300d->\u300c\u5831\u544a\u300d->\u300c\u8a2d\u5b9a\u300d\u87a2\u5e55\u4e2d\u300c\u539f\u59cb\u8cc7\u6599\u5132\u5b58\u5929\u6578\u300d\u7684\u5929\u6578\u8a2d\u5b9a\u3002\n\t\u6e1b\u5c0f\u300c\u63a7\u5236\u9762\u677f\u300d->\u300c\u5831\u544a\u300d->\u300c\u6458\u8981\u5668\u300d\u87a2\u5e55\u4e2d\u300c\u6458\u8981\u8cc7\u6599\u5132\u5b58\u5929\u6578\u300d\u8a2d\u5b9a\u7684\u5929\u6578\u3002"}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "\u8b66\u544a\uff1a\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "\u8acb\u78ba\u8a8d\u6c92\u6709\u5728\u7dad\u8b77\u5099\u4efd\u8a08\u5283\u4e2d\u8a2d\u5b9a\u8cc7\u6599\u5eab\uff0c\u6216\u73fe\u6709\u8a08\u5283\u7121\u6cd5\u6e05\u9664\u8a18\u9304\u3002\n\u5982\u679c\u6c92\u6709\u5728\u7dad\u8b77\u8a08\u5283\u4e2d\u8a2d\u5b9a\u8cc7\u6599\u5eab\uff0c\u4ea4\u6613\u8a18\u9304\u5c07\u7e7c\u7e8c\u589e\u9577\u4e26\u586b\u6eff\u6574\u500b\u786c\u789f\uff0c \n\u6b64\u6642\u8cc7\u6599\u5eab\u548c GMS \u7cfb\u7d71\u5c07\u7121\u6cd5\u5de5\u4f5c\u3002\u5176\u6b21\uff0c\u5982\u679c\u8cc7\u6599\u5eab\u640d\u6bc0\uff0c\u60a8\u5c07\u7121\u6cd5\u5c07\u8cc7\u6599\u5eab \n\u9084\u539f\u70ba\u4e0a\u4e00\u5df2\u77e5\u5099\u4efd\u3002"}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: \u8cc7\u6599\u5eab\u5065\u5eb7\u6aa2\u67e5"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "\u767b\u5165\u6388\u6b0a\u9a57\u8b49\u5931\u6557\u7684\u88dd\u7f6e\uff0c\u88dd\u7f6e\u5e8f\u865f\u70ba "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", "\u3002\u8acb\u78ba\u4fdd\u6c92\u6709\u5728\u88dd\u7f6e\u4e0a\u672c\u6a5f\u8b8a\u66f4\u767b\u5165\u6240\u9700\u7684\u4efb\u4f55\u8a2d\u5b9a\u3002 \u4f7f\u7528\u300c\u4fee\u6539\u88dd\u7f6e\u300d\u9ad4\u73fe Analyzer \u4e2d\u7684\u8b8a\u66f4", "\u900f\u904e Analyzer \u9032\u884c\u6388\u6b0a\u9a57\u8b49"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "\u900f\u904e Analyzer \u9032\u884c\u6388\u6b0a\u9a57\u8b49"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "\u767b\u5165\u81f3\u88dd\u7f6e "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", "\uff0c\u8a72\u88dd\u7f6e\u6388\u6b0a\u9a57\u8b49\u5931\u6557\u4e26\u4e14\u5df2\u8d85\u904e\u5bec\u9650\u671f\u3002\u8acb\u78ba\u4fdd\u6c92\u6709\u5728\u88dd\u7f6e\u4e0a\u672c\u6a5f\u8b8a\u66f4\u767b\u5165\u6240\u9700\u7684\u4efb\u4f55\u8a2d\u5b9a\u3002 \u4f7f\u7528\u300c\u4fee\u6539\u88dd\u7f6e\u300d\u9ad4\u73fe VPS \u4e2d\u7684\u8b8a\u66f4"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "Analyzer \u6388\u6b0a\u5df2\u904e\u671f\uff01"}, {"SU_LIC_EXPIRED_BODY1", "\u60a8\u7684\u88dd\u7f6e "}, {"SU_LIC_EXPIRED_BODY2", "\u6c92\u6709 Analyzer \u6388\u6b0a\u3002\u8acb\u6aa2\u67e5\u88dd\u7f6e\u4e0a\u7684\u8a2d\u5b9a"}, {"SU_LIC_EXPIRED_SUBJECT", "Analyzer \u6388\u6b0a\u5df2\u904e\u671f\uff01"}, {"LOGVIEW_WRONG_START_DT", "\u958b\u59cb\u65e5\u671f\u683c\u5f0f\u932f\u8aa4\u3002\u65e5\u671f\u5fc5\u9808\u70ba mm/dd/yyyy \u683c\u5f0f\u3002"}, {"LOGVIEW_WRONG_END_DT", "\u7d50\u675f\u65e5\u671f\u683c\u5f0f\u932f\u8aa4\u3002\u65e5\u671f\u5fc5\u9808\u70ba mm/dd/yyyy \u683c\u5f0f\u3002"}, {"LOGVIEW_ENDDT_LESS_STARTDT", "\u7d50\u675f\u65e5\u671f\u5c0f\u65bc\u958b\u59cb\u65e5\u671f\u3002\u8acb\u8f38\u5165\u6709\u6548\u7684\u958b\u59cb\u65e5\u671f\u548c\u7d50\u675f\u65e5\u671f\u3002"}, {"LOGVIEW_MSGS_PERSCRN", "\u6bcf\u87a2\u5e55\u8a0a\u606f\u6578"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "\u60a8\u5373\u5c07\u532f\u51fa {0,number,integer} \u500b\u8a18\u9304\u9805\u76ee\u3002\u662f\u5426\u78ba\u5b9a\u8981\u9019\u6a23\u505a\uff1f \u5982\u679c\u4e0d\u662f\uff0c\u8acb\u53d6\u6d88\u6b64\u5c0d\u8a71\u65b9\u584a\u4e26\u9650\u5236\u641c\u5c0b\u689d\u4ef6\u3002"}, {"LOGVIEW_GOTO_MSG", "\u79fb\u81f3\u8a0a\u606f\u7de8\u865f"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "\u986f\u793a\u6bcf\u87a2\u5e55\u8a0a\u606f\u6578\uff1a"}, {"LOGVIEW_RANGE", "\uff08\u7bc4\u570d\uff1a10-100\uff09"}, {"LOGVIEW_COL_DT", "\u65e5\u671f"}, {"LOGVIEW_COL_MSG", "\u8a0a\u606f"}, {"LOGVIEW_COL_SEV", "\u56b4\u91cd\u6027"}, {"LOGVIEW_COL_USER", "GMS \u4f7f\u7528\u8005"}, {"LOGVIEW_COL_CO", "Change Order"}, {"LOGVIEW_COL_IP", "\u4f7f\u7528\u8005 IP"}, {"LOGVIEW_SEARCH_RESULTS", "\u641c\u5c0b\u7d50\u679c"}, {"LOGVIEW_SEARCH_CRITERIA", "\u641c\u5c0b\u689d\u4ef6"}, {"LOGVIEW_EXPORT_LOGS", "\u532f\u51fa\u8a18\u9304"}, {"LOGVIEW_CLEAR_LOGS", "\u6e05\u9664\u641c\u5c0b"}, {"LOGVIEW_SEARCH_LOGS", "\u958b\u59cb\u641c\u5c0b"}, {"LOGVIEW_MATCH_CASE", "\u5340\u5206\u5927\u5c0f\u5beb"}, {"LOGVIEW_EXACT_PHRASE", "\u7cbe\u78ba\u5b57\u8a5e"}, {"LOGVIEW_ANY_WORD", "\u4efb\u610f\u5b57"}, {"LOGVIEW_ALL_WORDS", "\u6240\u6709\u5b57"}, {"LOGVIEW_MSG", "\u8a0a\u606f\u5305\u542b\uff1a"}, {"LOGVIEW_CO", "Change Order:"}, {"LOGVIEW_TIME", "\u9078\u64c7\u8a18\u9304\u6642\u9593\uff1a\u5f9e\uff1a"}, {"LOGVIEW_TIME_TO", "\u5230\uff1a "}, {"LOGVIEW_NODE_NAME", "SonicWall \u7bc0\u9ede\uff1a"}, {"LOGVIEW_USER", "\u4f7f\u7528\u8005\uff1a "}, {"LOGVIEW_SEV", "\u56b4\u91cd\u6027\uff1a "}, {"LOGVIEW_CALENDAR", "\u884c\u4e8b\u66c6"}, {"LOGVIEW_ALL", "\u6240\u6709\uff08\u8b66\u793a\u3001\u8b66\u544a\u548c Info\uff09"}, {"LOGVIEW_ALERT_WARNING", "\u8b66\u793a\u548c\u8b66\u544a"}, {"LOGVIEW_ALERT", "\u8b66\u793a"}, {"LOGVIEW_STR_FORMAT", "\u641c\u5c0b\u5b57\u4e32\u683c\u5f0f\uff1auser@domain\u3002<br>\u50c5\u9650\u4f7f\u7528\u8005\uff0c\u8f38\u5165 user\u3002<br>\u50c5\u9650\u7db2\u57df\uff0c\u8f38\u5165 @domain\u3002<br><i>\u8a3b\uff1a \u5982\u679c\u4f7f\u7528\u8005\u503c\u5305\u542b @ \u5b57\u5143\uff0c\u5247\u4f7f\u7528\u53e6\u4e00\u500b @ \u7d42\u6b62\u641c\u5c0b\u5b57\u4e32\u3002</i>"}, {"HELPABOUT_VERSION", "\u7248\u672c\uff1a"}, {"HELPABOUT_LIC", "\u6388\u6b0a\u7d66\uff1a"}, {"HELPABOUT_SN", "\u5e8f\u865f\uff1a"}, {"HELPABOUT_DBDRIVER", "\u8cc7\u6599\u5eab\u9a45\u52d5\u7a0b\u5f0f\uff1a"}, {"HELPABOUT_DBVERSION", "\u8cc7\u6599\u5eab\u7248\u672c\uff1a"}, {"HELPABOUT_REPORT_DBVERSION", "\u5831\u544a\u8cc7\u6599\u5eab\u7248\u672c:"}, {"LOGIN_TITLE", "\u767b\u5165"}, {"LOGIN_ISBLANK", "\u70ba\u7a7a\u767d\u3002\u8acb\u586b\u5beb\u4e00\u500b\u503c\u3002"}, {"LOGIN_INVALIDID", "\u6307\u5b9a\u7684\u4f7f\u7528\u8005 ID \u7121\u6548\u3002"}, {"LOGIN_INVALIDID2", "\u4f7f\u7528\u8005 ID \u53ea\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a"}, {"LOGIN_INVALIDID3", "\u82f1\u6578\u5b57\u5143\u3001.\uff08\u53e5\u9ede\uff09\u3001-\uff08\u9023\u5b57\u7b26\uff09\u3001_\uff08\u5e95\u7dda\uff09\u548c @(At)\u3002"}, {"LOGIN_INVALIDID4", "\u8acb\u4f7f\u7528\u5141\u8a31\u7684\u5b57\u5143\u6307\u5b9a\u4f7f\u7528\u8005 ID\u3002"}, {"LOGIN_USERNAME", "\u4f7f\u7528\u8005\u540d\u7a31"}, {"LOGIN_PASSWORD", "\u5bc6\u78bc"}, {"LOGIN_LOGIN", "\u767b\u5165"}, {"LOGIN_DOMAIN", "\u7db2\u57df"}, {"LOGIN_SWITCH_EN_US", "\u5207\u63db\u5230\u82f1\u6587\u754c\u9762"}, {"LOGIN_SWITCH_JA_JP", "\u5207\u63db\u5230\u65e5\u6587\u754c\u9762"}, {"LOGIN_SWITCH_ZH_CN", "\u5207\u63db\u5230\u7c21\u9ad4\u754c\u9762"}, {"LOGIN_SWITCH_ZH_TW", "\u5207\u63db\u5230\u7e41\u9ad4\u754c\u9762"}, {"LOGIN_SWITCH_KO_KR", "\u5207\u63db\u5230\u97d3\u8a9e UI"}, {"LOGIN_SWITCH_PT_BR", "\u5207\u63db\u70ba\u5df4\u897f\u8461\u8404\u7259\u6587 UI"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "\u767b\u51fa"}, {"LOGOUT_VPMSG", "\u60a8\u73fe\u5728\u5df2\u6210\u529f\u5f9e SonicWall Analyzer \u7cfb\u7d71\u4e2d\u767b\u51fa\u3002"}, {"LOGOUT_VPMSG1", "\u82e5\u8981\u555f\u52d5\u65b0\u7684 SonicWall Analyzer \u5de5\u4f5c\u968e\u6bb5\uff0c\u5efa\u8b70\u60a8\u95dc\u9589\u6216\u7d50\u675f\u6b64\u700f\u89bd\u5668&nbsp<br>&nbsp\u7136\u5f8c\u958b\u555f\u8a72\u700f\u89bd\u5668\u7684\u4e00\u500b\u65b0\u57f7\u884c\u500b\u9ad4\u3002"}, {"LOGOUT_GMSMSG", "\u60a8\u73fe\u5728\u5df2\u6210\u529f\u5f9e SonicWall \u5168\u57df\u7ba1\u7406\u7cfb\u7d71\u4e2d\u767b\u51fa\u3002"}, {"LOGOUT_GMSMSG1", "\u82e5\u8981\u555f\u52d5\u65b0\u7684 SonicWall GMS \u5de5\u4f5c\u968e\u6bb5\uff0c\u5efa\u8b70\u60a8\u95dc\u9589\u6216\u7d50\u675f\u6b64\u700f\u89bd\u5668&nbsp<br>&nbsp\u7136\u5f8c\u958b\u555f\u8a72\u700f\u89bd\u5668\u7684\u4e00\u500b\u65b0\u57f7\u884c\u500b\u9ad4\u3002"}, {"SETTINGSUSER_CHANGE", "\u8b8a\u66f4"}, {"SETTINGSUSER_OLD", "\u76ee\u524d"}, {"SETTINGSUSER_PASSWORD", "\u5bc6\u78bc"}, {"SETTINGSUSER_NEW", "\u65b0"}, {"SETTINGSUSER_CONFIRMMSG", "\u78ba\u8a8d\u65b0\u5bc6\u78bc"}, {"SETTINGSUSER_FAILMSG", "\u300c\u5bc6\u78bc\u300d\u548c\u300c\u78ba\u8a8d\u65b0\u5bc6\u78bc\u300d\u9805\u76ee\u4e0d\u76f8\u7b26\u3002"}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "\u5bc6\u78bc\u9577\u5ea6\u5fc5\u9808\u81f3\u5c11\u70ba 7 \u500b\u5b57\u5143\u4e26\u4e14\u5305\u542b\u5b57\u6bcd\u548c/\u6216\u6578\u5b57\u3002"}, {"INVALID_PASSWORD", "\u6307\u5b9a\u7684\u5bc6\u78bc\u7121\u6548\u3002"}, {"PWD_RULES", "\u5bc6\u78bc\u61c9\u57fa\u65bc\u4ee5\u4e0b\u898f\u5247\u5efa\u7acb\uff1a "}, {"VALID_PWD_RULE_FOR_PCI", "    - \u9577\u5ea6\u81f3\u5c11 7 \u500b\u5b57\u5143\u3002"}, {"MAX_PWD_LEN", "    - \u5141\u8a31\u7684\u6700\u5927\u9577\u5ea6\u70ba 15 \u500b\u5b57\u5143\u3002"}, {"PWD_ALPHANUMERIC_CHARS", "    - \u53ef\u5305\u542b\u82f1\u6578\u5b57\u5143\u3002"}, {"PWD_SPCIAL_CHARS", "    - \u53ef\u5305\u542b\u7279\u6b8a\u5b57\u5143\u3002"}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[TW]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[TW]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[TW]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "\u8acb\u6307\u5b9a\u7b26\u5408\u8981\u6c42\u7684\u5bc6\u78bc\u3002"}, {"SETTINGSUSER_MISCSETTINGS", "\u5176\u4ed6\u8a2d\u5b9a"}, {"SETTINGSUSER_TIMEOUTPERIOD", "\u903e\u6642\u671f\u9650\u53ef\u70ba -1 \u6216\u5728 [5..120] \u7bc4\u570d\u5167\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u6578\u5b57\u3002"}, {"SETTINGSUSER_NEVERTIMEOUT", "\u6c38\u4e0d\u903e\u6642"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "\u4e0d\u6d3b\u52d5\u903e\u6642"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "\u88dd\u7f6e\u9078\u64c7\u9762\u677f\uff0c\u986f\u793a\uff1a"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u5716\u793a"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "\u6587\u5b57"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u5716\u793a\u548c\u6587\u5b57\uff08\u9810\u8a2d\u503c\uff09"}, {"MAX_ROWS_PER_SCREEN", "\u6bcf\u87a2\u5e55\u6700\u5927\u5217\u6578\uff1a"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "\u7bc4\u570d\uff1a[10..100]\uff08\u50c5\u9069\u7528\u65bc\u975e\u5831\u544a\u76f8\u95dc\u5206\u9801\u87a2\u5e55\uff09"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "\u6bcf\u87a2\u5e55\u6700\u5927\u5217\u6578\u503c\u8d85\u51fa\u6709\u6548\u7684\u7bc4\u570d\u3002\u8acb\u8f38\u5165\u4ecb\u65bc 10 \u5230 100 \u4e4b\u9593\u7684\u6578\u5b57\uff08\u5305\u542b\u908a\u754c\uff09\u3002"}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "\u6bcf\u87a2\u5e55\u6700\u5927\u5217\u6578\u503c\u4e26\u975e\u6578\u5b57\u3002\u8acb\u8f38\u5165\u4e00\u500b\u6709\u6548\u6578\u5b57\u3002"}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "\u81ea\u52d5\u5132\u5b58\u5100\u8868\u677f\u8a2d\u5b9a\uff1a"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1\uff1a\u81ea\u52d5\u5132\u5b58\u672a\u555f\u7528\u6216\u7bc4\u570d\uff1a[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "\u81ea\u52d5\u5132\u5b58\u5100\u8868\u677f\u8a2d\u5b9a\u53ef\u70ba -1 \u6216\u5728 [1..60] \u7bc4\u570d\u5167\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u6578\u5b57\u3002"}, {"CHANGEPASSWORD_OLD", "\u76ee\u524d\u5bc6\u78bc"}, {"CHANGEPASSWORD_NEW", "\u65b0\u5bc6\u78bc"}, {"CHANGEPASSWORD_CONFIRM", "\u78ba\u8a8d\u65b0\u5bc6\u78bc"}, {"CHANGEPASSWORD_USER", "\u4f7f\u7528\u8005"}, {"CUSTLOGSETTINGS_NOTE1", "\u8a3b\uff1a\u60a8\u53ef\u4ee5\u8f38\u5165\u900f\u904e\u5206\u865f (\";\") \u5206\u9694\u7684\u591a\u500b\u96fb\u5b50\u90f5\u4ef6\u5730\u5740"}, {"CUSTLOGSETTINGS_SECTITLE1", "\u96fb\u5b50\u90f5\u4ef6\u8b66\u793a\u6536\u4ef6\u8005\u6392\u7a0b"}, {"CUSTLOGSETTINGS_WEEKDAY", "\u5de5\u4f5c\u65e5\uff1a"}, {"CUSTLOGSETTINGS_SCHED1", "\u6392\u7a0b 1\uff1a"}, {"CUSTLOGSETTINGS_SCHED2", "\u6392\u7a0b 2\uff1a"}, {"CUSTLOGSETTINGS_SCHED3", "\u6392\u7a0b 3\uff1a"}, {"CUSTLOGSETTINGS_SAT", "\u9031\u516d"}, {"CUSTLOGSETTINGS_SUN", "\u9031\u65e5"}, {"CUSTLOGSETTINGS_WEEKEND", "\u9031\u672b\uff1a"}, {"CUSTLOGSETTINGS_HRS", "\u5c0f\u6642"}, {"CUSTLOGSETTINGS_TO", "\u6536\u4ef6\u8005"}, {"CUSTLOGSETTINGS_ALERTFMT", "\u96fb\u5b50\u90f5\u4ef6\u8b66\u793a\u683c\u5f0f\u559c\u597d\u8a2d\u5b9a"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "\u5305\u542b\u6587\u672c\uff0c\u8272\u5f69\uff0c\u5716\u50cf\u548c\u93c8\u63a5\u3002\u50c5\u80fd\u8207\u96fb\u5b50\u90f5\u4ef6\u8edf\u4ef6\u517c\u5bb9(HTML)."}, {"CUSTLOGSETTINGS_TEXT", "\u7d14\u6587\u5b57"}, {"CUSTLOGSETTINGS_TEXT_DESC", "\u5305\u542b\u7d14\u6587\u5b57\u7684\u6240\u6709\u7d30\u7bc0\uff0c\u517c\u5bb9\u6240\u6709\u7684\u96fb\u5b50\u90f5\u4ef6\u8edf\u4ef6."}, {"CUSTLOGSETTINGS_PAGER", "\u7d14\u6587\u5b57\uff08\u7c21\u55ae\uff09"}, {"CUSTLOGSETTINGS_PAGER_DESC", "\u5305\u542b\u4e00\u500b\u7d14\u6587\u5b57\u7684\u77ed\u6d88\u606f\u3002\u64c7\u7528\u4e8e\u5c0b\u547c\u6a5f\uff0cSMS\uff08\u77ed\u8a0a\u670d\u52d9\uff09\u548c\u985e\u4f3c\u7684\u7a0b\u5f0f."}, {"LOGCONFIG_SECTITLE_1", "\u522a\u9664"}, {"LOGCONFIG_SECTITLE_2", "\u8a18\u9304\u8a0a\u606f"}, {"LOGCONFIG_DELLABEL", "\u522a\u9664\u65e9\u65bc\u4ee5\u4e0b\u6642\u9593\u7684\u8a18\u9304\u8a0a\u606f\uff1a"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u65e5"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u7528\u65bc"}, {"LOGCONFIG_DOMAIN", "\u7db2\u57df"}, {"SESSIONS_NOSESSALERT", "\u6c92\u6709\u8981\u7d50\u675f\u7684\u5de5\u4f5c\u968e\u6bb5\u3002"}, {"SESSIONS_NOSESSSELALERT", "\u8acb\u9078\u64c7\u8981\u7d50\u675f\u7684\u5de5\u4f5c\u968e\u6bb5\u3002"}, {"SESSIONS_RUSUREALERT", "\u662f\u5426\u78ba\u5b9a\u8981\u7d50\u675f\u9078\u5b9a\u7684\u5de5\u4f5c\u968e\u6bb5\uff1f"}, {"SESSIONS_TITLE", "\u76ee\u524d\u5de5\u4f5c\u968e\u6bb5"}, {"SESSIONS_COL1", "\u4f7f\u7528\u8005\u540d\u7a31"}, {"SESSIONS_COL2", "IP \u4f4d\u5740"}, {"SESSIONS_COL3", "\u767b\u5165\u6642\u9593"}, {"SESSIONS_COL4", "\u4e0a\u6b21\u5b58\u53d6\u6642\u9593"}, {"SESSIONS_COL5", "\u7db2\u57df\u540d\u7a31"}, {"SESSIONS_END", "\u7d50\u675f\u9078\u5b9a\u7684\u5de5\u4f5c\u968e\u6bb5"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP \u4f3a\u670d\u5668\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP \u9023\u63a5\u57e0"}, {"LOGINVPSSETTINGS_LABEL2", "\u5bc4\u4ef6\u8005\u96fb\u5b50\u90f5\u4ef6\u4f4d\u5740"}, {"LOGINVPSSETTINGS_LABEL3", "\u7ba1\u7406\u54e1\u96fb\u5b50\u90f5\u4ef6\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL3_5", "\u4f7f\u7528 TLS"}, {"LOGINVPSSETTINGS_LABEL4", "\u4f7f\u7528\u9a57\u8b49"}, {"LOGINVPSSETTINGS_LABEL5", "\u4f7f\u7528\u8005"}, {"LOGINVPSSETTINGS_LABEL6", "\u5bc6\u78bc"}, {"LOGINVPSSETTINGS_NOTE", "\u9644\u8a3b\uff1a\u82e5\u8981\u8b8a\u66f4\u6536\u4ef6\u8005\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\uff0c\u8acb\u4f7f\u7528\u300c\u4e3b\u63a7\u53f0 > \u8b66\u793a > \u57fa\u672c\u300d"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "\u7cfb\u7d71\u5075\u932f\u7d1a\u5225\uff1a"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "\u8a2d\u5b9a\u5075\u932f\u7b49\u7d1a\u53ef\u4ee5\u66f4\u5feb\u901f\u5730\u91dd\u5c0d\u6f5b\u5728\u7684\u61c9\u7528\u7a0b\u5f0f\u554f\u984c\u9032\u884c\u6545\u969c\u6392\u9664\u3002\u900f\u904e\u6b64\u90e8\u7f72\uff0c\u6b64\u64cd\u4f5c\u5c07\u5728\u6240\u6709\u7cfb\u7d71\u4e0a\u5efa\u7acb\u5075\u932f\u8a18\u9304\u6a94\uff0c\u53ef\u80fd\u6703\u5f71\u97ff\u61c9\u7528\u7a0b\u5f0f\u7684\u6548\u80fd\uff0c\u9084\u6703\u7528\u76e1\u78c1\u789f\u7a7a\u9593\u3002\u53ea\u8981\u6f5b\u5728\u7684\u554f\u984c\u7372\u5f97\u4e86\u89e3\u6c7a\uff0c\u60a8\u5c31\u61c9\u8a72\u5c0d\u4e00\u822c\u64cd\u4f5c\u91cd\u8a2d\u70ba<i>\u7121\u5075\u932f</i>\u3002"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "\u8a3b\uff1a "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u61c9\u7576\u57fa\u65bc SonicWall \u6280\u8853\u652f\u63f4\u4e2d\u7684\u6307\u5c0e\u4f86\u8a2d\u5b9a\u5075\u932f\u7b49\u7d1a"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u5075\u932f\u7d1a\u5225\u8d8a\u9ad8\uff0c\u7528\u65bc\u7522\u751f\u5075\u932f\u8cc7\u6599\u7684\u7cfb\u7d71\u8cc7\u6e90\u8d8a\u591a\uff0c\u9032\u800c\u6703\u964d\u4f4e\u6574\u9ad4\u7cfb\u7d71\u6548\u80fd\u3002"}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "\u7acb\u5373\u540c\u6b65\u578b\u865f\u4ee3\u78bc\u8cc7\u8a0a"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\u662f\u5426\u8981\u4f7f\u7528\u65b0\u7684 SMTP \u4f3a\u670d\u5668\u4f4d\u5740\u66f4\u65b0\u6240\u6709\u73fe\u6709\u5df2\u6392\u7a0b\u5831\u544a\u7684 SMTP \u4f3a\u670d\u5668\u4f4d\u5740\uff1f"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "\u7121\u6cd5\u540c\u6b65\u578b\u865f\u4ee3\u78bc\u8cc7\u8a0a\u3002"}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "\u986f\u793a\u6b77\u53f2\uff08Analyzer 7.0 \u4e4b\u524d\uff09\u5831\u544a"}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "\u589e\u5f37\u5bc6\u78bc\u5b89\u5168\u6027"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "\u5f37\u5236\u9032\u884c\u5bc6\u78bc\u8b8a\u66f4\u7684\u5929\u6578"}, {"GENVPSSTATUS_INVALIDIP", "\u4e0d\u5b8c\u6574\u7684\u88dd\u7f6e\u8a8d\u8b49\u6b64\u6642\u53ef\u7528\u65bc\u6210\u529f\u767b\u5165"}, {"GENVPSSTATUS_NODE", "\u7bc0\u9ede\uff1a "}, {"GENVPSSTATUS_INFO", "\u8cc7\u8a0a"}, {"GENVPSSTATUS_SYSLOG", "Syslog \u4f3a\u670d\u5668"}, {"GENVPSSTATUS_IPINFO", "IP \u4f4d\u5740"}, {"GENVPSSTATUS_PORT", "\u9023\u63a5\u57e0"}, {"GENVPSSTATUS_SYNCNOW", "\u540c\u6b65\u8a2d\u5b9a\u548c\u88dd\u7f6e\uff0c\u4ee5\u53ca\u6388\u6b0a\u8cc7\u8a0a\u548c MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "Analyzer \u4f7f\u7528\u5165\u9580"}, {"GENVPSSTATUS_GETSTARTOPEN", "\u5728\u65b0\u8996\u7a97\u4e2d\u958b\u555f\u4f7f\u7528\u5165\u9580\u8aaa\u660e"}, {"GENVPSSTATUS_LOGINTITLE", "\u88dd\u7f6e\u767b\u5165"}, {"GENVPSSTATUS_LOGINHTTP", "\u4f7f\u7528\u4e0d\u5b89\u5168\u767b\u5165 (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "\u4f7f\u7528\u5b89\u5168\u767b\u5165 (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "\u767b\u5165"}, {"GENVPSSTATUS_CATEGORIES", "Syslog \u985e\u5225"}, {"GENVPSSTATUS_REFRESH_MSG", "\u8a3b:\u72c0\u614b\u8cc7\u8a0a\u6bcf 24 \u5c0f\u6642\u66f4\u65b0\u4e00\u6b21\u3002\u82e5\u8981\u91cd\u65b0\u6574\u7406\u8cc7\u8a0a\uff0c\u8acb\u6309\u4e00\u4e0b\u4e0a\u9762\u7684\u9023\u7d50\u3002\u82e5\u8981\u8b8a\u66f4\u9019\u4e9b\u8a2d\u5b9a\uff0c\u60a8\u5fc5\u9808\u767b\u5165\u5230\u8a2d\u5099\u4e26\u624b\u52d5\u5c0d\u5176\u9032\u884c\u66f4\u65b0\u3002"}, {"GENVPSSTATUS_LOG_TYPE", "\u8a18\u9304\u985e\u578b"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "\u7cfb\u7d71\u7dad\u8b77"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "\u7cfb\u7d71\u932f\u8aa4"}, {"GENVPSSTATUS_BLOCKED_WEB", "\u963b\u6b62\u7684\u7db2\u7ad9"}, {"GENVPSSTATUS_BLOCKED_JAVA", "\u963b\u6b62\u7684 Java \u7b49"}, {"GENVPSSTATUS_USER_ACTIVITY", "\u4f7f\u7528\u8005\u6d3b\u52d5"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP \u7d71\u8a08"}, {"GENVPSSTATUS_ATTACKS", "\u653b\u64ca"}, {"GENVPSSTATUS_DROPPED_TCP", "\u4e1f\u68c4\u7684 TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "\u4e1f\u68c4\u7684 UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "\u4e1f\u68c4\u7684 ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "\u7db2\u8def\u5075\u932f"}, {"GENVPSSTATUS_DENIED_LAN_IP", "\u62d2\u7d55\u7684 LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "Analyzer \u6388\u6b0a\u72c0\u614b"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\u4f86\u89e3\u6c7a\\\"\u672a\u6388\u6b0a\\\"\u554f\u984c:<br/>&nbsp;&nbsp;\u6b65\u9a5f 1 - <a href=\"http://www.MySonicWall.com\" target=new>\u6309\u4e00\u4e0b\u6b64\u8655\u5728 MySonicWall.com \u4e0a\u9a57\u8b49\u6216\u555f\u52d5\u6388\u6b0a\u3002</a><br/>&nbsp;&nbsp;\u6b65\u9a5f 2 - \u5982\u679c\u6388\u6b0a\u8655\u65bc\u555f\u52d5\u72c0\u614b\uff0c<a href=\"javascript:synchronizeInfo();\">\u8acb\u6309\u4e00\u4e0b\u6b64\u8655\u540c\u6b65\u6388\u6b0a\u8cc7\u8a0a\u3002</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "\uff08\u5617\u8a66\u5b58\u53d6 MySonicWall.com \u6642\u51fa\u73fe\u901a\u8a0a\u6545\u969c\uff09<br/>&nbsp;&nbsp;\u78ba\u8a8d GMSVP Web \u4f3a\u670d\u5668\u80fd\u5920\u5b58\u53d6 www.MySonicWall.com\u3002"}, {"COMPONENT", "\u8aaa\u660e"}, {"COMPONENT_LC", "\u5143\u4ef6"}, {"FILE_SIZE", "\u6a94\u6848\u5927\u5c0f (KB)"}, {"IP_ADDRESS", "IP \u4f4d\u5740"}, {"CURRENT_VERSION", "\u76ee\u524d\u7248\u672c"}, {"LATEST_VERSION", "\u6700\u65b0\u7248\u672c"}, {"RELEASE_NOTES", "\u767c\u884c\u8aaa\u660e"}, {"LAST_DOWNLOADED", "\u6700\u8fd1\u4e0b\u8f09"}, {"RELEASE_DATE", "\u767c\u884c\u65e5\u671f"}, {"DOWNLD_NEW", "\u4e0b\u8f09\u65b0 "}, {"SOFTWARE_UPDATES", "\u8edf\u9ad4\u66f4\u65b0"}, {"DEL_SEL_COMPS_FROM_LIST", "\u5f9e\u6e05\u55ae\u4e2d\u522a\u9664\u9078\u5b9a\u7684\u5143\u4ef6"}, {"LIC_DELETE_MSG", "\u60a8\u7121\u6cd5\u522a\u9664"}, {"LIC_PATCH_MSG", "\u4ee5\u4e0b\u5143\u4ef6\u7684\u4fee\u88dc\u7a0b\u5f0f\u4e0d\u53ef\u7528\u4e26\u4e14\u4e0d\u6703\u4e0b\u8f09\uff1a"}, {"LIC_NEW_GMS_SW", "\u65b0 GMS \u8edf\u9ad4"}, {"LIC_CONSOLE", "\u4e3b\u63a7\u53f0"}, {"LIC_SELECT_COMPONENT", "\u8acb\u9078\u64c7\u4e00\u500b\u5143\u4ef6\u3002"}, {"CHAP_TESTING", "CHAP \u6e2c\u8a66"}, {"CHAP_RADIUS_TESTING_MSG", "\u8acb\u6ce8\u610f\uff0cCHAP \u9a57\u8b49\u50c5\u8207\u652f\u63f4\u7684 RADIUS \u4f3a\u670d\u5668\u4e00\u8d77\u4f7f\u7528\uff0c\u4e26\u4e14\u5728 \u67d0\u4e9b\u60c5\u6cc1\u4e0b\u5c07\u9700\u8981\u4f3a\u670d\u5668\u8a2d\u5b9a\u70ba\u5132\u5b58\u53ef\u9006\u5bc6\u78bc\u3002"}, {"CHAP_LDAP_TESTING_MSG", "\u8acb\u6ce8\u610f\uff0cCHAP \u9a57\u8b49\u5c07\u50c5\u8207\u652f\u63f4\u900f\u904e LDAP \u64f7\u53d6\u4f7f\u7528\u8005\u5bc6\u78bc\u7684\u4f3a\u670d\u5668\u4e00\u8d77\u4f7f\u7528\uff0c\u4e26\u4e14\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\u5c07\u9700\u8981 LDAP \u4f3a\u670d\u5668\u8a2d\u5b9a\u70ba\u5132\u5b58\u53ef\u9006\u5bc6\u78bc\u3002"}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "\u9084\u8981\u6ce8\u610f\u7684\u662f\uff0cCHAP \u4e0d\u80fd\u8207 Microsoft Active Directory \u6216 Novell eDirectory \u4e00\u8d77\u4f7f\u7528"}, {"PERF_NO_SUMMARIZER", "\u6c92\u6709\u76ee\u524d\u53ef\u7528\u7684\u6458\u8981\u5668\u6548\u80fd\u6307\u6a19\u3002"}, {"PERF_SUMMARIZER_INFO", "\u6458\u8981\u5668\u8cc7\u8a0a"}, {"PERF_SUMMARIZER", "\u6458\u8981\u5668"}, {"PERF_SYSLOG_INFO", "\u8cc7\u6599\u6a94\u6848\u683c\u5f0f"}, {"PERF_SYSLOG_FILE_TYPE", "\u8cc7\u6599\u6a94\u6848\u985e\u578b"}, {"PERF_FILE_STATS", "\u6a94\u6848\u7d71\u8a08"}, {"PERF_OLDEST", "\u6700\u820a"}, {"PERF_PRD_LABEL", "\u8655\u7406\u7684\u6a94\u6848"}, {"PERF_SRC_LABEL", "\u5206\u7d44\u7684\u6a94\u6848"}, {"PERF_UNP_LABEL", "\u672a\u8655\u7406\u7684\u6a94\u6848"}, {"PERF_NMM_LABEL", "\u4e0d\u662f\u6211\u7684\u6a94\u6848"}, {"PERF_IMF_LABEL", "\u611f\u67d3\u7684\u6a94\u6848"}, {"PERF_ZIP_LABEL", "\u5c01\u5b58\u7684\u6a94\u6848"}, {"PERF_PRE_LABEL", "\u7121\u6548\u7684\u8a18\u9304\u6a94"}, {"PERF_UPE_LABEL", "\u932f\u8aa4\u7684\u4e0a\u8f09\u6a94\u6848"}, {"PERF_UPD_LABEL", "\u4e0a\u8f09\u7684\u6a94\u6848"}, {"PERF_UPL_LABEL", "\u4e0a\u8f09\u64f1\u7f6e\u4e2d\u7684\u6a94\u6848"}, {"PERF_RDB_LABEL", "\u5831\u544a\u8cc7\u6599\u5eab"}, {"PERF_OPT_STATE_LABEL", "\u6700\u4f73\u5316\u72c0\u614b"}, {"PERF_OPT_PENDING_LABEL", "\u66ab\u6b62\u7684\u6700\u4f73\u5316"}, {"PERF_OPT_TOTAL_LABEL", "\u672a\u6700\u4f73\u5316\u7e3d\u5929\u6578"}, {"PERF_BKP_LABEL", "\u5099\u4efd\u6a94\u6848"}, {"PERF_FILE_ELEMENT", "\u6a94\u6848 - "}, {"PERF_THREAD_INFO", "\u6458\u8981\u5668\u8655\u7406\u7dd2\u8a73\u7d30\u8cc7\u6599"}, {"PERF_NUM_THREADS", "\u76ee\u524d\u57f7\u884c\u7684\u57f7\u884c\u7dd2"}, {"PERF_SUMMARIZER_IDLE", "\u6458\u8981\u5668\u9592\u7f6e\u3002"}, {"PERF_THREAD", "\u57f7\u884c\u7dd2"}, {"PERF_FIREWALL", "\u88dd\u7f6e"}, {"PERF_FILE", "\u6a94\u6848"}, {"PERF_STATE", "\u72c0\u614b"}, {"PERF_START_TIME", "\u958b\u59cb"}, {"PERF_SUMMARIZER_STATS", "\u6458\u8981\u5668\u7d71\u8a08"}, {"PERF_PAST_24", "\u5728\u904e\u53bb 24 \u5c0f\u6642\u5167\uff08\u81ea\u5f9e "}, {"PERF_PAST_7_DAYS", "\u5728\u904e\u53bb 7 \u5929\u5167\uff08\u81ea\u5f9e "}, {"PERF_PAST_30_DAYS", "\u5728\u904e\u53bb 30 \u5929\u5167\uff08\u81ea\u5f9e "}, {"PERF_NUM_SYSLOGS", "\u4ee5\u4e0b\u9805\u4e2d\u6458\u8981\u7684 Syslogs \u6578 "}, {"PERF_AVERAGE_PER_MINUTE", "\u6bcf\u5206\u9418\u6458\u8981\u7684\u5e73\u5747 Syslog"}, {"PERF_NOT_ACTIVE", "\u904e\u53bb 7 \u5929\u5167\u6c92\u6709\u6458\u8981\u4efb\u4f55\u8cc7\u6599"}, {"PERF_NO_GEN2", "\u6458\u8981\u5668\u6548\u80fd\u6307\u6a19\u50c5\u9069\u7528\u65bc\u5206\u6563\u5f0f\u6458\u8981\u5668\u8a2d\u5b9a"}, {"PERF_MEM_USAGE", "\u6458\u8981\u5668\u8a18\u61b6\u9ad4\u6d88\u8017"}, {"PERF_LAST_RUN", "\u4e0a\u6b21\u57f7\u884c\u6642\u9593"}, {"PERF_NEXT_RUN", "\u4e0b\u6b21\u57f7\u884c\u6642\u9593"}, {"PERF_SUMMARIZER_STATISTICS", "\u904e\u53bb 7 \u5929\u5167\u7684\u6458\u8981\u5668\u72c0\u614b"}, {"PERF_SUMMARIZER_UTILIZATION", "\u6458\u8981\u5668\u4f7f\u7528\u7387"}, {"PERF_TOTAL_RUN_TIME", "\u6bcf\u5929\u7684\u5e73\u5747\u57f7\u884c\u6642\u9593"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "\u4f30\u8a08\u7684\u5bb9\u91cf"}, {"PERF_METRIC_SYSLOG", "(\uff08\u767e\u842c syslog/\u5929\uff09"}, {"PERF_METRIC_XML", "(\uff08XML \u6a94\u6848/\u5929\uff09"}, {"PERF_TOTAL_LOAD", "\u5e73\u5747\u8ca0\u8f09"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "\u6458\u8981\u7684\u5e73\u5747 Syslog\uff08\u767e\u842c/\u5929\uff09"}, {"PERF_TOTAL_FILES_SUMMARIZED", "\u6bcf\u5929\u6458\u8981\u7684\u5e73\u5747 XML \u6a94\u6848"}, {"PERF_NO_DATA_SUMMARIZED", "\u5728\u904e\u53bb\u76847\u5929\uff0c\u6c92\u6709\u6578\u64da\u53ef\u4ee5\u7e3d\u7d50"}, {"PERF_REPORTING_INFO", "\u5831\u544a\u8a73\u7d30\u8cc7\u6599"}, {"PERF_TOP_UNITS", "\u6458\u8981\u5668\u4f7f\u7528\u60c5\u6cc1\u88dd\u7f6e\u6392\u540d"}, {"PERF_UNIT_NAME", "\u88dd\u7f6e"}, {"PERF_REPORTING_DB_SIZE", "\u5831\u544a\u8cc7\u6599\u5eab\u5927\u5c0f"}, {"PERF_BACKUPS_DIR_SIZE", "\u5099\u4efd\u76ee\u9304\u5927\u5c0f"}, {"PERF_SYSLOG_DIR_SIZE", "\u539f\u59cb\u8cc7\u6599\u76ee\u9304\u5927\u5c0f"}, {"PERF_CACHE_SIZE", "\u4f30\u8a08\u7684\u5feb\u53d6\u5927\u5c0f"}, {"PERF_BAD_DIR_SIZE", "\u932f\u8aa4\u8cc7\u6599\u76ee\u9304\u5927\u5c0f"}, {"PERF_PER_SUMMARIZER_INFO", "\u6458\u8981\u5668\u8a73\u7d30\u8cc7\u6599 "}, {"PERF_AVG_UTILIZATION", "\u5e73\u5747\u6458\u8981\u5668\u4f7f\u7528\u7387"}, {"PERF_PEAK_UTILIZATION", "\u5cf0\u503c\u6458\u8981\u5668\u4f7f\u7528\u7387"}, {"NMM_DETAILS", "\u91dd\u5c0d\u8a2d\u5099\u6536\u96c6\u7684\u3001\u4e0d\u4f4d\u65bc\u300c\u5831\u544a\u548c\u7ba1\u7406\u300d\u4e0b\u7684 Syslog"}, {"NMM_SERIALS", "\u6458\u8981\u5668\u7684\u8a2d\u5099\u5e8f\u865f"}, {"NO_NMM_SERIAL", "\u8a2d\u5099\u50b3\u9001\u7684 syslog \u5747\u4f4d\u65bc\u300c\u5831\u544a\u548c\u7ba1\u7406\u300d\u4e0b "}, {"MISCONFIGURED_SERIALS", "\u8aa4\u8a2d\u5b9a\u7684\u8a2d\u5099\u7684\u5e8f\u865f "}, {"NO_MISCONFIGURED_SERIALS", "\u7121\u8aa4\u8a2d\u5b9a\u7684\u8a2d\u5099 "}, {"NMM_MSG_NOTE", "\u8a3b: "}, {"NMM_MSG1", "* \u767b\u5165\u5230\u8a2d\u5099\u4e26\u505c\u7528 syslog"}, {"NMM_MSG2", "* \u5982\u679c\u60a8\u7121\u6b0a\u5b58\u53d6\u8a2d\u5099\uff0c\u8acb\u4f7f\u7528\u9598\u9053\u898f\u5247\u4f86\u5c01\u9396\u5e8f\u5217"}, {"NMM_MSG3", "* \u82e5\u8981\u4fee\u5fa9\u8aa4\u8a2d\u5b9a\u7684\u7cfb\u5217\uff0c\u8acb\u767b\u5165\u5230\u8a2d\u5099\u4e26\u8b8a\u66f4 GMS \u8a2d\u5b9a"}, {"NMM_MSG4", "* \u6b64\u8655\u5217\u51fa\u7684\u5e8f\u5217\u6bcf 12 \u5c0f\u6642\u91cd\u65b0\u6574\u7406\u4e00\u6b21"}, {"PERF_SUMMARIZER_STATUS", "\u72c0\u614b"}, {"PERF_DEPLOYMENT_STATUS", "\u90e8\u7f72\u72c0\u614b"}, {"PERF_MSG_HIGH_CAPACITY", "Summarizer \u4ee5\u6975\u9ad8\u7684\u5bb9\u91cf\u57f7\u884c\u6642\uff0c\u8acb\u91cd\u65b0\u6307\u6d3e\u8a2d\u5099\u3002"}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "\u90e8\u7f72\u4e2d\u7684\u4e00\u500b\uff08\u6216\u591a\u500b\uff09\u6458\u8981\u5668\u5728\u904e\u53bb\u7684 7 \u5929\u4e2d\u5df2\u8d85\u904e\u4e86\u5176\u57f7\u884c\u5bb9\u91cf\u3002\u6aa2\u67e5\u6458\u8981\u5668\u5229\u7528\u7387\u90e8\u5206\u7684\u72c0\u614b\u5217\uff0c\u7136\u5f8c\u9020\u8a2a GMS \u7db2\u7ad9\uff0c\u67e5\u770b\u95dc\u65bc\u5982\u4f55\u7ba1\u7406\u90e8\u7f72\u7684\u66f4\u591a\u8cc7\u8a0a\u3002"}, {"PERF_MSG_REASSIGN_UNITS", "\u8acb\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406\u4e4b\u9593\u7684\u8a2d\u5099\u3002"}, {"PERF_MSG_DISK_LOW", "\u78c1\u789f\u7a7a\u9593\u4e0d\u8db3\uff0c\u8acb\u65b0\u589e\u66f4\u591a\u78c1\u789f\u6216\u589e\u52a0\u78c1\u789f\u914d\u7f6e\u3002"}, {"PERF_MSG_DISK_LOW_RDB", "\u7528\u65bc\u5831\u544a\u8cc7\u6599\u5eab\u7684\u78c1\u789f\u7a7a\u9593\u4e0d\u8db3\uff0c\u8acb\u65b0\u589e\u66f4\u591a\u78c1\u789f\u6216\u589e\u52a0\u78c1\u789f\u914d\u7f6e\u3002"}, {"PERF_MSG_CAPACITY_PLANNING", "\u8acb\u9020\u8a2a <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS \u7db2\u7ad9</a>\u4ee5\u77ad\u89e3\u6709\u95dc\u5982\u4f55\u7ba1\u7406\u60a8\u7684\u90e8\u7f72\u7684\u66f4\u591a\u8cc7\u8a0a\u3002"}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "\u8a3b:\u5e73\u5747\u8ca0\u8f09\u548c\u4f30\u8a08\u7684\u5bb9\u91cf\u662f\u7279\u5b9a\u65bc\u90e8\u7f72\u7684\uff0c\u5176\u5728\u7cfb\u7d71\u4e2d\u53ef\u80fd\u6703\u767c\u751f\u8b8a\u5316\u3002"}, {"PERF_OF", "/"}, {"PERF_ON_DISK", "\u5728\u78c1\u789f\u4e0a"}, {"PERF_OPT_EXPORT_PROGRESS", "\u6b63\u5728\u532f\u51fa"}, {"PERF_OPT_EXPORT_DONE", "\u532f\u51fa\u5b8c\u6210"}, {"PERF_OPT_DELETE_PROGRESS", "\u6b63\u5728\u522a\u9664"}, {"PERF_OPT_DELETE_DONE", "\u522a\u9664\u5b8c\u6210"}, {"PERF_OPT_IMPORT_PROGRESS", "\u6b63\u5728\u532f\u5165"}, {"PERF_OPT_QUEUED_UP", "\u5df2\u6392\u5165\u4f47\u5217"}, {"PERF_OPT_IDLE", "\u9592\u7f6e"}, {"PERF_OPT_CURRENT", "\u76ee\u524d"}, {"PERF_OPT_INFO", "\u6700\u4f73\u5316\u8cc7\u8a0a"}, {"PERF_XML_FILE_INFO", "XML \u6a94\u6848\u8cc7\u8a0a"}, {"PERF_XML_LABEL", "\u672a\u8655\u88e1\u7684 XML \u6a94\u6848"}, {"PERF_XPG_LABEL", "\u8655\u7406\u4e2d\u7684\u6a94\u6848"}, {"PERF_XPD_LABEL", "\u5df2\u5c01\u5b58\u7684\u6a94\u6848"}, {"PERF_XPE_LABEL", "\u7121\u6548\u7684\u6a94\u6848"}, {"ALERT_NO_ALERTS", "\u6b64\u6642\u6c92\u6709\u6b64\u90e8\u5206\u7684\u6d3b\u52d5\u8b66\u793a\u3002"}, {"ALERT_DESCRIPTION", "\u8aaa\u660e"}, {"ALERT_NODE_NAME", "\u88dd\u7f6e\u540d\u7a31"}, {"ALERT_SEVERITY", "\u56b4\u91cd\u6027"}, {"ALERT_LISTING", "\u8b66\u793a\u6e05\u55ae"}, {"CAL_SUN", "\u9031\u65e5"}, {"CAL_MON", "\u9031\u4e00"}, {"CAL_TUE", "\u9031\u4e8c"}, {"CAL_WED", "\u9031\u4e09"}, {"CAL_THU", "\u9031\u56db"}, {"CAL_FRI", "\u9031\u4e94"}, {"CAL_SAT", "\u9031\u516d"}, {"CAL_JAN", "\u4e00\u6708"}, {"CAL_FEB", "\u4e8c\u6708"}, {"CAL_MAR", "\u4e09\u6708"}, {"CAL_APR", "\u56db\u6708"}, {"CAL_MAY", "\u4e94\u6708"}, {"CAL_JUN", "\u516d\u6708"}, {"CAL_JUL", "\u4e03\u6708"}, {"CAL_AUG", "\u516b\u6708"}, {"CAL_SEP", "\u4e5d\u6708"}, {"CAL_OCT", "\u5341\u6708"}, {"CAL_NOV", "\u5341\u4e00\u6708"}, {"CAL_DEC", "\u5341\u4e8c\u6708"}, {Integer.toString(1), "\u6210\u529f\u57f7\u884c\u5de5\u4f5c\uff1a "}, {Integer.toString(0), "\u57f7\u884c\u5de5\u4f5c\u5931\u6557\u3002"}, {Integer.toString(42), "\u6210\u529f\u57f7\u884c\u5de5\u4f5c\uff0c\u50b3\u56de\u8b66\u544a\uff1a "}, {Integer.toString(10), "\u547d\u4ee4\u6210\u529f\u57f7\u884c\u3002"}, {Integer.toString(-12), "\u547d\u4ee4\u57f7\u884c\u90e8\u5206\u6216\u5b8c\u5168\u5931\u6557\u3002"}, {Integer.toString(-57), "\u4f7f\u7528\u8005\u6b0a\u9650\u4e0d\u8db3\u4ee5\u57f7\u884c\u6b64\u64cd\u4f5c\u3002"}, {Integer.toString(-58), "\u6c92\u6709\u8655\u7406\u547d\u4ee4\u7684\u8cc7\u8a0a\u3002"}, {Integer.toString(-59), "\u8a72\u64cd\u4f5c\u7121\u6cd5\u96a8\u6642\u57f7\u884c\u3002"}, {Integer.toString(-56), "\u53ea\u6709\u672c\u6a5f\u7db2\u57df\u7ba1\u7406\u54e1\u7fa4\u7d44\u7684\u4f7f\u7528\u8005\u624d\u6709\u6b0a\u9650\u57f7\u884c\u6b64\u547d\u4ee4\u3002"}, {Integer.toString(2), "\u6210\u529f\u57f7\u884c\u65b0\u97cc\u9ad4\u6aa2\u67e5\uff0c\u4f46\u6c92\u6709\u53ef\u7528\u7684\u65b0\u97cc\u9ad4 "}, {Integer.toString(3), "\u5de5\u4f5c\u7684\u5f8c\u7aef\u64cd\u4f5c\u4ee5\u524d\u5df2\u6210\u529f\u57f7\u884c\uff1a "}, {Integer.toString(4), "\u5de5\u4f5c\u7684\u66f4\u65b0\u8cc7\u6599\u5eab\u64cd\u4f5c\u6210\u529f\uff1a "}, {Integer.toString(5), "\u88dd\u7f6e\u53ef\u7528\u65bc\u5347\u7d1a\u4ee5\u53ca\u8a3b\u518a"}, {Integer.toString(6), "\u514d\u8cbb\u8a66\u7528\u4e0d\u9069\u7528\u65bc\u8a72\u88dd\u7f6e"}, {Integer.toString(7), "\u88dd\u7f6e\u53ef\u7528\u65bc\u5347\u7d1a\u4f46\u4e0d\u53ef\u7528\u65bc\u8a3b\u518a"}, {Integer.toString(8), "\u88dd\u7f6e\u53ef\u7528\u65bc\u8a3b\u518a\u4f46\u4e0d\u53ef\u7528\u65bc\u5347\u7d1a"}, {Integer.toString(-1), "\u88dd\u7f6e\u7684\u67d0\u4e9b\u53c3\u6578\u6c92\u6709\u6b63\u78ba\u8a2d\u5b9a\u3002"}, {Integer.toString(-53), "\u88dd\u7f6e\u4e0d\u652f\u63f4\u591a\u540d\u7ba1\u7406\u54e1\u540c\u6642\u767b\u5165\u3002"}, {Integer.toString(-63), "\u7f3a\u5c11\u767b\u5165\u7684\u88dd\u7f6e\u8a8d\u8b49\u3002"}, {Integer.toString(-69), "\u7b49\u5f85\u7372\u53d6\u76ee\u524d\u767b\u5165 IP \u4f4d\u5740\u3002"}, {Integer.toString(-70), "JVM OOM\uff1a\u8a18\u61b6\u9ad4\u4e0d\u8db3\u7121\u6cd5\u7e7c\u7e8c\uff0c\u5c07\u5728\u4e0b\u6b21\u57f7\u884c\u6642\u91cd\u8a66\u5de5\u4f5c"}, {Integer.toString(-64), "\u7121\u6cd5\u53d6\u5f97\u53d7\u7ba1\u7406\u8a2d\u5099\u7684\u9a57\u8b49\u9801\u9762\u4ee5\u9032\u884c\u767b\u5165\u3002"}, {Integer.toString(-64) + "_TT", "- \u88dd\u7f6e\u5728\u7ba1\u7406\u4f4d\u5740\u4e0d\u53ef\u5b58\u53d6\u3002\n- \u88dd\u7f6e\u4e0d\u652f\u63f4\u4e26\u884c\u767b\u5165\uff0c\n\u78ba\u8a8d\u700f\u89bd\u5668\u662f\u5426\u5df2\u76f4\u63a5\u767b\u5165\u81f3\u88dd\u7f6e\u3002"}, {Integer.toString(-65), "\u767b\u5165\u5f8c\u7121\u56de\u61c9\u3002"}, {Integer.toString(-83), "\u767b\u5165\u5931\u6557\uff0c\u539f\u56e0\u662f\u5e8f\u865f\u4e0d\u76f8\u7b26\u3002"}, {Integer.toString(-83) + "_TT", "- \u65b0\u589e\u88dd\u7f6e\u5230 GMS \u6642\u6307\u5b9a\u7684\u5e8f\u865f\n\u8207\u88dd\u7f6e\u7684\u5e8f\u865f\u4e0d\u76f8\u7b26\u3002"}, {Integer.toString(-84), "\u767b\u5165\u5931\u6557\uff0c\u56e0\u70ba\u6307\u5b9a\u7684\u767b\u5165\u6a21\u5f0f\u7121\u6548\u3002"}, {Integer.toString(-84) + "_TT", "- \u6307\u5b9a\u7684\u767b\u5165\u6a21\u5f0f\u4e0d\u5c6c\u65bc\u5141\u8a31\u6a21\u5f0f\u6e05\u55ae\u3002\n"}, {Integer.toString(-2), "\u88dd\u7f6e\u4f7f\u7528\u8005\u540d\u6216\u5bc6\u78bc\u4e0d\u6b63\u78ba\u3002"}, {Integer.toString(-918), "[TW]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "\u88dd\u7f6e\u4f7f\u7528 SSL \u6191\u8b49\uff0c\u800c\u5176\u5177\u6709\u57fa\u65bc\u5b89\u5168\u7406\u7531\u4e0d\u518d\u652f\u63f4\u7684 MD5 \u7c3d\u7ae0\u3002\u8acb\u91cd\u65b0\u7522\u751f\u6191\u8b49\u4ee5\u7ba1\u7406\u6b64\u88dd\u7f6e\u3002"}, {Integer.toString(-917), "\u88dd\u7f6e\u6c92\u6709\u6388\u6b0a\u53ef\u57f7\u884c\u6b64\u4efb\u52d9\u3002"}, {Integer.toString(-71), "\u88dd\u7f6e\u7684\u5b58\u53d6 url \u7121\u6548\u3002"}, {Integer.toString(-71) + "_TT", "- \u7121\u6cd5\u5f9e\u88dd\u7f6e\u7372\u53d6 IP \u4f4d\u5740\u3002"}, {Integer.toString(-72), "\u8acb\u6c42\u72c0\u614b xml \u5931\u6557\u3002"}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "\u8acb\u6c42\u72c0\u614b xml \u5931\u6557\uff0c\u6c92\u6709\u6536\u5230\u56de\u61c9\u3002"}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "\u8acb\u6c42\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u5931\u6557\u3002"}, {Integer.toString(-950), "[TW]Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "\u8acb\u6c42\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u5931\u6557\uff0c\u6c92\u6709\u6536\u5230\u56de\u61c9\u3002"}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u7121\u6548\u3002"}, {Integer.toString(-76) + "_TT", "- \u6c92\u6709\u6536\u5230\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u3002\n- \u7372\u53d6\u7684\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u53ef\u80fd\u5df2\u640d\u58de\u3002\n- \u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u53ef\u80fd\u4e0d\u5b8c\u6574\u3002"}, {Integer.toString(-77), "\u88dd\u7f6e\u64f7\u53d6\u5931\u6557\u3002"}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "\u6536\u5230\u5fc3\u8df3\u8a0a\u606f\u3002"}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "\u672a\u6536\u5230\u5fc3\u8df3\u8a0a\u606f\u3002"}, {Integer.toString(-78) + "_TT", "- \u672a\u5f9e\u8a2d\u5099\u50b3\u9001\u6d3b\u52d5\u8a0a\u865f\u8a0a\u606f\u3002\n- \u5f9e\u8a2d\u5099\u50b3\u9001\u7684\u6d3b\u52d5\u8a0a\u865f\u8a0a\u606f\u7121\u6cd5\u5230\u9054 GMS\u3002\n- \u672a\u5728 GMS \u9598\u9053\u4e0a\u5efa\u7acb SA\uff08\u901a\u9053\uff09\u3002\n- \u672a\u5728 GMS \u9598\u9053\u4e0a\u5efa\u7acb\u5141\u8a31 Syslog \u7684\u898f\u5247\u3002\n- \u4f8b\u5982\u8a2d\u5099 - \u8acb\u9075\u5faa\u300c\u4e3b\u63a7\u53f0-Web \u670d\u52d9-\u5206\u767c\u7684\u90e8\u7f72\u300d\u4e2d\u300c\u8a3b:\u300d\u90e8\u5206\u4e2d\u6240\u8ff0\u7684\u8aaa\u660e\u3002"}, {Integer.toString(-79), "\u6536\u5230\u7684\u5fc3\u8df3\u8a0a\u606f\u7121\u6cd5\u89e3\u5bc6\u3002"}, {Integer.toString(-79) + "_TT", "- \u65b0\u589e\u88dd\u7f6e\u5230 GMS \u6642\u6307\u5b9a\u7684\u5bc6\u78bc\n\u8207\u88dd\u7f6e\u7684\u5bc6\u78bc\u4e0d\u76f8\u7b26\u3002"}, {Integer.toString(13), "\u6536\u5230 syslog \u8a0a\u606f\u3002"}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "\u672a\u6536\u5230 syslog \u8a0a\u606f\u3002"}, {Integer.toString(-81) + "_TT", "- Syslog \u8a0a\u606f\u4e26\u975e\u4f86\u81ea\u8a2d\u5099\u3002D138- \u5f9e\u8a2d\u5099\u50b3\u9001\u7684 Syslog \u8a0a\u606f\u4e0d\u80fd\u5230\u9054 GMS\u3002\n- \u672a\u5728 GMS \u9598\u9053\u4e0a\u5efa\u7acb SA\uff08\u901a\u9053\uff09\u3002\n- \u672a\u5728 GMS \u9598\u9053\u4e0a\u5efa\u7acb\u5141\u8a31 Syslog \u7684\u898f\u5247\u3002"}, {Integer.toString(-82), "\u6536\u5230\u7684 syslog \u8a0a\u606f\u7121\u6cd5\u89e3\u5bc6\u3002"}, {Integer.toString(-82) + "_TT", "- \u65b0\u589e\u88dd\u7f6e\u5230 GMS \u6642\u6307\u5b9a\u7684\u5bc6\u78bc\n\u8207\u88dd\u7f6e\u7684\u5bc6\u78bc\u4e0d\u76f8\u7b26\u3002"}, {Integer.toString(12), "\u8bbe\u5907\u5df2\u6dfb\u52a0;\u7b49\u5f85\u52a0\u5165GMS."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "\u8bbe\u5907\u5df2\u4fee\u6539;\u7b49\u5f85\u52a0\u5165GMS."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "\u7121\u6cd5\u5b58\u53d6\u88dd\u7f6e\u3002\u88dd\u7f6e\u6216\u7db2\u8def\u7121\u6cd5\u95dc\u9589\u3002"}, {Integer.toString(-4), "\u81f3\u5c11\u4e00\u500b\u88dd\u7f6e\u53c3\u6578\u8a2d\u5b9a\u4e0d\u6b63\u78ba\u3002"}, {Integer.toString(-5), "SonicWall \u8a3b\u518a\u7db2\u7ad9\u7121\u6cd5\u9020\u8a2a\u3002"}, {Integer.toString(-6), "\u5347\u7d1a/\u8a02\u95b1\u7684\u555f\u7528\u4ee3\u78bc\u7121\u6548\u3002"}, {Integer.toString(-7), "\u88dd\u7f6e\u672a\u8a3b\u518a\u3002"}, {Integer.toString(-8), "SonicWall GMS \u8a3b\u518a\u7db2\u7ad9\u5df2\u95dc\u9589\uff0c\u6216\u8005\u7121\u6cd5\u9020\u8a2a\u3002\u8acb\u6aa2\u67e5 SonicWall GMS \u4f3a\u670d\u5668\u7684\u7db2\u969b\u7db2\u8def\u5b58\u53d6\u3002"}, {Integer.toString(-9), "\u6c92\u6709\u53ef\u7528\u65bc\u5347\u7d1a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-10), "\u76ee\u524d\u5617\u8a66\u65b0\u589e\u7684\u8a2d\u5099\u5df2\u5728 SonicWall GMS \u7684\u7ba1\u7406\u4e4b\u4e0b\u3002"}, {Integer.toString(-11), "\u5617\u8a66\u8a2d\u5b9a\u7121\u6548\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-15), "\u5617\u8a66\u5efa\u7acb\u4e0d\u5b58\u5728\u670d\u52d9\u7684\u898f\u5247\u3002"}, {Integer.toString(-16), "\u9055\u53cd SonicWall \u6388\u6b0a\u3002"}, {Integer.toString(-17), "SonicWall GMS \u5167\u90e8\u932f\u8aa4\u3002"}, {Integer.toString(-18), "\u4e0b\u8f09\u5167\u5bb9\u7be9\u9078\u5668\u6e05\u55ae\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-19), "\u5617\u8a66\u522a\u9664\u5b58\u5728\u898f\u5247\u7684\u670d\u52d9\u3002"}, {Integer.toString(-47), "\u7121\u6cd5\u806f\u7d61 AV \u4f3a\u670d\u5668"}, {Integer.toString(-20), "\u5167\u90e8 AV \u932f\u8aa4"}, {Integer.toString(-21), "\u64f1\u7f6e\u4e2d\u7684 AV \u5de5\u4f5c"}, {Integer.toString(-22), "AV \u555f\u7528\u4ee3\u78bc\u7121\u6548\u3002"}, {Integer.toString(-23), "AV \u555f\u7528\u4ee3\u78bc\u5df2\u7d93\u4f7f\u7528\u3002"}, {Integer.toString(-24), "AV \u5bc6\u78bc\u4e0d\u6b63\u78ba\u3002"}, {Integer.toString(-25), "AV \u7e8c\u8a02\u8a08\u6578\u932f\u8aa4\u3002"}, {Integer.toString(-26), "AV \u7e8c\u8a02\u592a\u65e9\u3002"}, {Integer.toString(-27), "\u5617\u8a66\u7ba1\u7406\u6bd4\u5efa\u8b70\u66f4\u820a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-28), "\u81ea\u52d5\u66f4\u65b0\u4f3a\u670d\u5668\u76ee\u524d\u95dc\u9589\u6216\u7121\u6cd5\u5b58\u53d6\u3002"}, {Integer.toString(-85), "\u7ba1\u7406\u7cfb\u7d71\u5099\u4efd\u52d5\u4f5c\u5931\u6557\u3002"}, {Integer.toString(-29), "\u97cc\u9ad4\u7121\u6cd5\u4e0a\u8f09\u5230\u88dd\u7f6e\u3002"}, {Integer.toString(-62), "\u5617\u8a66\u4e0a\u8f09\u5230\u88dd\u7f6e\u7684\u97cc\u9ad4\u7121\u6548\u3002"}, {Integer.toString(-60), "\u97cc\u9ad4\u5347\u7d1a\u7684\u6700\u5927\u6a94\u6848\u5927\u5c0f\u70ba 4MB\u3002"}, {Integer.toString(-31), "\u5c07\u97cc\u9ad4\u5beb\u5165\u5230\u672c\u6a5f\u78c1\u789f\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-30), "\u4e0b\u8f09\u97cc\u9ad4\u6642\u767c\u751f\u932f\u8aa4\u3002\u81ea\u52d5\u66f4\u65b0\u4f3a\u670d\u5668\u76ee\u524d\u4e0d\u53ef\u7528\u6216\u7121\u6cd5\u5b58\u53d6\u3002"}, {Integer.toString(-32), "\u8cc7\u6599\u5eab\u5b58\u53d6\u932f\u8aa4\u3002"}, {Integer.toString(-33), "\u8a2d\u5b9a\u88dd\u7f6e\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-34), "\u9a57\u8b49\u4f7f\u7528\u8005\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-68), "\u7db2\u57df\u672a\u627e\u5230\u6216\u7db2\u57df\u540d\u7a31\u7121\u6548\u3002"}, {Integer.toString(-35), "\u66f4\u65b0 CMP \u5bc6\u78bc\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-36), "\u6c92\u6709\u53ef\u7528\u65bc\u8a3b\u518a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-37), "\u7121\u6cd5\u806f\u7d61\u9632\u6bd2\u4f3a\u670d\u5668\uff0c\u6216\u8005\u9632\u6bd2\u4f3a\u670d\u5668\u5831\u544a\u672a\u77e5\u932f\u8aa4\u3002"}, {Integer.toString(-38), "\u6c92\u6709\u53ef\u7528\u65bc\u8a3b\u518a\u6216\u5347\u7d1a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-39), "\u65b0\u589e\u555f\u7528\u4ee3\u78bc\u5230\u8cc7\u6599\u5eab\u6642\u51fa\u73fe\u554f\u984c\u3002"}, {Integer.toString(-40), "\u522a\u9664\u555f\u7528\u4ee3\u78bc\u6642\u767c\u751f\u932f\u8aa4\u3002\u8cc7\u6599\u5eab\u4e2d\u6c92\u6709\u9019\u6a23\u7684\u555f\u7528\u4ee3\u78bc\u3002"}, {Integer.toString(-41), "\u522a\u9664\u555f\u7528\u4ee3\u78bc\u6642\u767c\u751f\u672a\u77e5\u932f\u8aa4\u3002"}, {Integer.toString(-48), "\u5347\u7d1a\u5931\u6557"}, {Integer.toString(-49), "\u62d2\u7d55\u5b58\u53d6\u4ee5\u57f7\u884c CLI \u547d\u4ee4\u3002"}, {Integer.toString(-42), "\u8cc7\u6599\u5eab\u7121\u6cd5\u6210\u529f\u66f4\u65b0\u3002"}, {Integer.toString(-43), "\u96fb\u5b50\u90f5\u4ef6\u7121\u6cd5\u50b3\u9001\u5230\u4e00\u500b\u6216\u591a\u500b\u5730\u5740\u3002"}, {Integer.toString(-44), "\u7121\u6cd5\u5f9e\u88dd\u7f6e\u64f7\u53d6\u5230\u6280\u8853\u652f\u63f4\u5831\u544a\u3002"}, {Integer.toString(-45), "\u7121\u6cd5\u5f9e\u88dd\u7f6e\u64f7\u53d6\u5230 SPD \u6a94\u6848\u3002"}, {Integer.toString(-46), "\u7121\u6cd5\u5f9e\u88dd\u7f6e\u64f7\u53d6\u5230\u8b49\u66f8\u6a94\u6848\u3002"}, {Integer.toString(-50), "\u7121\u6cd5\u540c\u6b65\u901a\u9053\u72c0\u614b\u76e3\u8996\u8cc7\u8a0a\u3002"}, {Integer.toString(-51), "\u7121\u6cd5\u5f9e\u88dd\u7f6e\u64f7\u53d6\u5230 RCF \u6a94\u6848\u3002"}, {Integer.toString(-52), "\u4f7f\u7528\u8005\u5e33\u6236\u5df2\u505c\u7528\uff1b\u767b\u5165\u5931\u6557\u3002"}, {Integer.toString(-61), "\u4e4b\u524d\u57f7\u884c\u7684\u5de5\u4f5c\u9700\u8981\u91cd\u65b0\u555f\u52d5\uff0c\u5c07\u5728\u4e0b\u4e00\u9593\u9694\u4e2d\u91cd\u8a66\u5de5\u4f5c\u3002"}, {Integer.toString(-229), "\u82e5\u8981\u555f\u7528\u6b64\u670d\u52d9\uff0c\u60a8\u5fc5\u9808\u64c1\u6709\u6709\u6548\u7684\u96fb\u5b50\u90f5\u4ef6\u9632\u8b77\u8a02\u95b1\u3002"}, {Integer.toString(-230), "\u60a8\u7684 Sonic OS \u7248\u672c\u4e0d\u652f\u63f4\u53e2\u96c6\u529f\u80fd (\u591a\u7bc0\u9ede\u8a02\u95b1)\u3002\u8acb\u5347\u7d1a\u6216\u4f7f\u7528\u55ae\u4e00\u7bc0\u9ede\u91d1\u9470\u3002"}, {Integer.toString(-231), "\u60a8\u7121\u6cd5\u6df7\u5408\u555f\u7528\u4e0d\u540c WANOPT \u578b\u865f\u7684\u91d1\u9470\u3002"}, {Integer.toString(-232), "\u60a8\u7684 WANOPT \u578b\u865f\u4e0d\u652f\u63f4\u53e2\u96c6\u529f\u80fd (\u591a\u7bc0\u9ede\u8a02\u95b1)\u3002"}, {Integer.toString(-201), "API \u53c3\u6578\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-202), "\u4f7f\u7528\u8005\u5df2\u767b\u5165\u3002"}, {Integer.toString(-203), "\u6b64\u7248\u672c\u4e2d\u672a\u5be6\u4f5c SonicWall GMS API\u3002"}, {Integer.toString(-204), "\u5de5\u4f5c\u968e\u6bb5\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-205), "\u6b63\u5728\u9000\u51fa SonicWall GMS Shell"}, {Integer.toString(-206), "API \u53c3\u6578\u907a\u5931"}, {Integer.toString(-207), "\u6c92\u6709\u6b64\u985e\u5225\u7684\u5217"}, {Integer.toString(-208), "\u672a\u63d0\u4f9b\u555f\u7528\u4ee3\u78bc"}, {Integer.toString(-209), "\u672a\u6307\u5b9a\u555f\u7528\u985e\u578b"}, {Integer.toString(-210), "IP \u4f4d\u5740\u7121\u6548\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-211), "\u6307\u5b9a\u7684\u9577\u5ea6\u5c0f\u65bc\u6240\u9700\u9577\u5ea6\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-212), "\u5b57\u4e32\u53ea\u80fd\u5305\u542b\u5341\u516d\u9032\u4f4d\u5b57\u5143\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-213), "\u5099\u7528\u6392\u7a0b\u5668\u7684 IP \u4f4d\u5740\u4e0d\u80fd\u8207\u4e3b\u8981\u6392\u7a0b\u5668\u7684\u76f8\u540c\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-214), "\u5728\u6307\u5b9a\u7684 IP \u4f4d\u5740\u672a\u627e\u5230\u6392\u7a0b\u5668\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-215), "\u65b0\u589e\u88dd\u7f6e\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-226), "\u60a8\u6c92\u6709\u6709\u6548\u7684\u6388\u6b0a\u3002"}, {Integer.toString(-225), "\u89e3\u6790\u8f38\u5165 XML \u6642\u767c\u751f\u932f\u8aa4"}, {Integer.toString(-228), "\u5728\u8f38\u5165 XML \u4e2d\u627e\u5230\u4e86\u7121\u6548\u7684\u5167\u5bb9"}, {Integer.toString(-216), "\u5831\u544a\u985e\u578b\u7121\u6548\u6216\u672a\u77e5\u3002\u4e0d\u77e5\u9053\u5831\u544a\u662f\u6bcf\u65e5\u3001\u6bcf\u9031\u9084\u662f\u6bcf\u6708\u5831\u544a"}, {Integer.toString(-217), "\u76ee\u6a19\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u7121\u6548\u3002\u61c9\u63d0\u4f9b\u81f3\u5c11\u4e00\u500b\u6709\u6548\u7684\u76ee\u6a19\u5730\u5740"}, {Integer.toString(-218), "\u4f86\u6e90\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u7121\u6548"}, {Integer.toString(-219), "SMTP \u4f3a\u670d\u5668\u4f4d\u5740\u7121\u6548"}, {Integer.toString(-220), "\u5831\u544a\u6e05\u55ae\u7121\u6548\u3002\u61c9\u63d0\u4f9b\u81f3\u5c11\u4e00\u500b\u6709\u6548\u7684\u5831\u544a ID"}, {Integer.toString(-221), "\u8cc7\u6599\u5eab\u4e2d\u8a3b\u518a\u7684 Analyzer \u6392\u7a0b\u5668 IP \u4f4d\u5740\u7121\u6548"}, {Integer.toString(-222), "\u8cc7\u6599\u5eab\u4e2d\u8a3b\u518a\u7684 Analyzer \u6392\u7a0b\u5668\u9023\u63a5\u57e0\u865f\u78bc\u7121\u6548"}, {Integer.toString(-223), "\u5831\u544a\u65e5\u671f\u7121\u6548\u6216\u672a\u77e5\u3002\u63d0\u4f9b\u7684\u5831\u544a\u65e5\u671f\u61c9\u70ba\u5e74/\u6708/\u65e5\u683c\u5f0f"}, {Integer.toString(-224), "\u63d0\u4f9b\u7684\u6392\u7a0b ID \u7121\u6548"}, {Integer.toString(-502), "zip \u6a94\u6848\u5bc6\u78bc\u4fdd\u8b77\u7684\u5bc6\u78bc\u907a\u5931"}, {Integer.toString(-503), "\u63d0\u4f9b\u7684\u7bc0\u9ede\u7121\u6548\u3002\u61c9\u6307\u5b9a\u5e8f\u865f\uff08\u7528\u65bc\u88dd\u7f6e\u7bc0\u9ede\uff09\u6216\u986f\u793a\u540d\u7a31\uff08\u7528\u65bc\u7fa4\u7d44\u7bc0\u9ede\uff09\u3002"}, {Integer.toString(-10001), "\u767c\u751f\u901a\u8a0a\u932f\u8aa4"}, {Integer.toString(-10002), "\u89e3\u6790\u8f38\u5165 XML \u6642\u767c\u751f\u932f\u8aa4"}, {Integer.toString(-10005), "\u53eb\u7528\u672a\u77e5\u5143\u4ef6"}, {Integer.toString(-10006), "\u53eb\u7528\u672a\u77e5\u7684 AV \u65b9\u6cd5"}, {Integer.toString(-10011), "\u5617\u8a66\u5347\u7d1a\u904e\u671f\u5f8c\u7684 AV\u3002"}, {Integer.toString(-10012), "\u5617\u8a66\u5347\u7d1a\u672a\u8a3b\u518a\u88dd\u7f6e\u7684 AV\u3002"}, {Integer.toString(-10013), "\u5617\u8a66\u7e8c\u8a02\u6bd4\u76ee\u524d\u652f\u63f4\u7bc0\u9ede\u66f4\u5c11\u7684 AV\u3002"}, {Integer.toString(-10014), "\u5617\u8a66\u7e8c\u8a02 AV \u904e\u65e9\u3002"}, {Integer.toString(-10020), "\u8b8a\u66f4 AV \u5bc6\u78bc\u7684\u4e4b\u524d\u5de5\u4f5c\u64f1\u7f6e\u4e2d\u3002"}, {Integer.toString(-10100), "\u8207 McAfee \u5f8c\u7aef\u901a\u8a0a\u6642\u767c\u751f\u932f\u8aa4"}, {Integer.toString(-10101), "McAfee \u7121\u6cd5\u627e\u5230\u6b64\u7db2\u7ad9\u7684\u4efb\u4f55\u8a18\u9304\u3002"}, {Integer.toString(-10102), "McAfee \u7121\u6cd5\u8207\u6b64\u7db2\u7ad9\u7684\u820a\u5bc6\u78bc\u76f8\u7b26\u3002"}, {Integer.toString(-10103), "AV \u7db2\u7ad9\u5df2\u8a3b\u518a\u3002"}, {Integer.toString(-10200), "\u8207 AV \u8cc7\u6599\u5eab\u4f3a\u670d\u5668\u901a\u8a0a\u6642\u767c\u751f\u932f\u8aa4"}, {Integer.toString(-10201), "\u88dd\u7f6e\u5e8f\u865f\u5df2\u8a3b\u518a"}, {Integer.toString(-10202), "\u63d0\u4f9b\u7684\u6388\u6b0a\u91d1\u9470\u5df2\u7d93\u4f7f\u7528"}, {Integer.toString(-10203), "\u5f9e\u672a\u8a3b\u518a\u6b64\u88dd\u7f6e\u7684\u9632\u6bd2"}, {Integer.toString(-10204), "\u63d0\u4f9b\u7684\u591a\u500b\u91d1\u9470\u5fc5\u9808\u6709\u76f8\u540c\u7684\u671f\u9650"}, {Integer.toString(-10205), "\u514d\u8cbb\u8a66\u7528\u91d1\u9470\u4e0d\u5141\u8a31\u7528\u65bc\u5347\u7d1a"}, {Integer.toString(-10206), "\u70ba\u4e00\u500b\u6216\u591a\u500b\u53c3\u6578\u63d0\u4f9b\u4e86\u975e\u6cd5\u503c"}, {Integer.toString(-10210), "\u63d0\u4f9b\u7684\u5e8f\u865f\u7121\u6548"}, {Integer.toString(-10211), "\u63d0\u4f9b\u7684\u6388\u6b0a\u91d1\u9470\u5df2\u7d93\u8a3b\u518a"}, {Integer.toString(-10212), "\u63d0\u4f9b\u7684\u65b0\u5bc6\u78bc\u6709\u7121\u6548\u5b57\u5143\u6216\u9577\u5ea6\u4e26\u975e 6 \u5230 12 \u500b\u5b57\u5143"}, {Integer.toString(-10213), "\u63d0\u4f9b\u7684\u9632\u6bd2\u5bc6\u78bc\u7121\u6548"}, {Integer.toString(-10214), "\u63d0\u4f9b\u7684 OEM \u4ee3\u78bc\u7121\u6548"}, {Integer.toString(-10215), "\u63d0\u4f9b\u7684 WAN IP \u4f4d\u5740\u7121\u6548"}, {Integer.toString(-10220), "\u6b64\u88dd\u7f6e\u4e4b\u524d\u7684\u8acb\u6c42\u4ecd\u64f1\u7f6e\u4e2d"}, {Integer.toString(-10250), "\u88dd\u7f6e\u5df2\u8a3b\u518a AV \u4e26\u9700\u8981\u91cd\u65b0\u555f\u52d5\u3002"}, {Integer.toString(-10251), "\u7531\u65bc\u5bc6\u78bc\u7121\u6548\uff0c\u88dd\u7f6e\u7121\u6cd5\u91cd\u65b0\u555f\u52d5"}, {Integer.toString(-10260), "\u7121\u6cd5\u627e\u5230\u63d0\u4f9b\u7684\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u5e8f\u865f"}, {Integer.toString(-10261), "\u63d0\u4f9b\u7684\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u5e8f\u865f\u7121\u6548"}, {Integer.toString(-10262), "\u88dd\u7f6e\u4e26\u975e\u4efb\u4f55\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6210\u54e1"}, {Integer.toString(-10263), "\u88dd\u7f6e\u5df2\u6709\u6d3b\u52d5\u7684\u9632\u6bd2\u8a02\u95b1\u4e26\u4e14\u7121\u6cd5\u65b0\u589e\u5230\u6388\u6b0a\u5171\u7528\u7fa4\u7d44"}, {Integer.toString(-10264), "\u88dd\u7f6e\u4e26\u975e\u6b64\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6210\u54e1"}, {Integer.toString(-10265), "\u7121\u6cd5\u522a\u9664\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6240\u6709\u8005"}, {Integer.toString(-10266), "\u88dd\u7f6e\u5df2\u7d93\u662f\u53e6\u4e00\u500b\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6210\u54e1"}, {Integer.toString(-10267), "\u63d0\u4f9b\u7684\u65b0\u6388\u6b0a\u8a08\u6578\u8d85\u51fa\u4e86\u53ef\u7528\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6388\u6b0a\u6578"}, {Integer.toString(-10004), "\u9632\u6bd2\u64cd\u4f5c\u7684\u4e00\u500b\u6216\u591a\u500b\u53c3\u6578\u907a\u5931"}, {Integer.toString(-10300), "\u7121\u6cd5\u627e\u5230\u63d0\u4f9b\u7684\u95dc\u65bc\u5168\u9762\u4fdd\u8b77\u5408\u4f5c\u5925\u4f34\u7684\u8cc7\u8a0a"}, {Integer.toString(-10301), "\u63d0\u4f9b\u7684\u5168\u9762\u4fdd\u8b77\u5408\u4f5c\u5925\u4f34\u5bc6\u78bc\u4e0d\u6b63\u78ba"}, {Integer.toString(-10303), "\u63d0\u4f9b\u7684\u9632\u6bd2\u6388\u6b0a\u8a08\u6578\u7121\u6548"}, {Integer.toString(-10304), "\u5617\u8a66\u7ba1\u7406\u6c92\u6709\u6307\u6d3e\u7d66\u5168\u9762\u4fdd\u8b77\u5408\u4f5c\u5925\u4f34\u7684\u88dd\u7f6e"}, {Integer.toString(-20000), "\u8207\u5f8c\u7aef\u8a3b\u518a\u4f3a\u670d\u5668\u901a\u8a0a\u6642\u767c\u751f\u672a\u77e5\u932f\u8aa4\u3002"}, {Integer.toString(-20101), "\u5df2\u70ba\u8a72\u4f7f\u7528\u8005\u8a3b\u518a\u8acb\u6c42\u7684\u806f\u7d61\u3002"}, {Integer.toString(-20102), "\u7121\u6cd5\u70ba\u4f7f\u7528\u8005\u65b0\u589e\u8acb\u6c42\u7684\u806f\u7d61\u3002"}, {Integer.toString(-20106), "\u7121\u6cd5\u4fee\u6539\uff0c\u539f\u56e0\u662f\u672a\u627e\u5230\u4f7f\u7528\u8005\u8cc7\u8a0a\u3002"}, {Integer.toString(-20111), "\u672a\u627e\u5230\u806f\u7d61\u8cc7\u8a0a\u3002"}, {Integer.toString(-20112), "\u7121\u6cd5\u4fee\u6539\u806f\u7d61\u8cc7\u8a0a\u3002"}, {Integer.toString(-20113), "\u7121\u6cd5\u522a\u9664\u806f\u7d61\u8cc7\u8a0a\u3002"}, {Integer.toString(-20116), "\u88dd\u7f6e\u5df2\u8a3b\u518a\u5230\u5176\u4ed6 MySonicWall.com \u5e33\u6236\u3002"}, {Integer.toString(-20117), "\u88dd\u7f6e\u8a3b\u518a\u7cfb\u7d71\u4e2d\u672a\u627e\u5230\u6307\u5b9a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-20118), "\u88dd\u7f6e\u7121\u6cd5\u900f\u904e\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u8a3b\u518a\u3002"}, {Integer.toString(-20119), "\u7121\u6cd5\u64f7\u53d6\u6307\u5b9a\u88dd\u7f6e\u7684\u72c0\u614b\u3002"}, {Integer.toString(-20121), "\u6307\u5b9a\u7684\u88dd\u7f6e\u672a\u8a3b\u518a\u3002"}, {Integer.toString(-20122), "\u6307\u5b9a\u7684\u555f\u7528\u91d1\u9470\u5df2\u4f7f\u7528\u904e\u3002"}, {Integer.toString(-20123), "\u4f7f\u7528\u7684\u555f\u7528\u4ee3\u78bc\u7121\u6548\u3002"}, {Integer.toString(-20124), "\u4f7f\u7528\u7684\u555f\u7528\u4ee3\u78bc/\u88dd\u7f6e\u7d44\u5408\u7121\u6548\u3002"}, {Integer.toString(-20125), "\u900f\u904e\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7684\u5347\u7d1a\u672a\u5b8c\u6210\u3002"}, {Integer.toString(-20126), "\u900f\u904e\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7684\u555f\u7528\u672a\u5b8c\u6210\u3002"}, {Integer.toString(-20131), "\u8a3b\u518a SonicWall GMS \u7cfb\u7d71\u7684\u932f\u8aa4 MAC \u4f4d\u5740\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20132), "SonicWall GMS \u7cfb\u7d71\u672a\u8a3b\u518a\u3002"}, {Integer.toString(-20133), "\u6307\u5b9a\u7684 SonicWall GMS \u5e8f\u865f\u7121\u6548\u3002"}, {Integer.toString(-20134), "\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7121\u6cd5\u64f7\u53d6 SonicWall GMS \u72c0\u614b\u3002"}, {Integer.toString(-20135), "SonicWall GMS \u5df2\u8a3b\u518a\u3002"}, {Integer.toString(-20136), "\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7121\u6cd5\u8a3b\u518a\u60a8\u7684 SonicWall GMS \u7cfb\u7d71\u3002"}, {Integer.toString(-20142), "\u932f\u8aa4\u7684 mac \u4f4d\u5740\u5df2\u8a3b\u518a\u3002"}, {Integer.toString(-20143), "\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7121\u6cd5\u64f7\u53d6 SonicWall GMS \u7684\u53ef\u7528\u5347\u7d1a\u7a0b\u5f0f\u3002"}, {Integer.toString(-20144), "\u6c92\u6709\u6307\u5b9a\u57fa\u672c\u5957\u4ef6\u671f\u9650\u3002"}, {Integer.toString(-20145), "\u8b80\u53d6\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u7684\u57fa\u672c\u5957\u4ef6\u7cfb\u7d71\u8cc7\u8a0a\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20146), "\u6c92\u6709\u53ef\u7528\u65bc\u672c\u7522\u54c1\u7684\u7bc0\u9ede\u5347\u7d1a\u3002"}, {Integer.toString(-20147), "\u60a8\u7684 SonicWall GMS \u5b89\u88dd\u5df2\u6210\u70ba\u4e00\u500b\u96f6\u552e\u7248\u3002"}, {Integer.toString(-20148), "\u88dd\u7f6e\u672a\u8a3b\u518a\u3002"}, {Integer.toString(-20149), "\u5728\u5f8c\u7aef\u8a3b\u518a\u4f3a\u670d\u5668\u4e2d\u64f7\u53d6\u6709\u95dc SonicWall GMS \u7cfb\u7d71\u7684\u8cc7\u8a0a\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20150), "\u6307\u5b9a\u7684 SonicWall GMS \u5e8f\u865f\u6c92\u6709\u8a3b\u518a\u7d66\u4f7f\u7528\u8005\u3002"}, {Integer.toString(-20151), "\u5728\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u63d2\u5165\u5831\u544a\u8cc7\u8a0a\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20152), "SonicWall GMS \u5e8f\u865f\u548c\u4f7f\u7528\u8005\u540d\u7a31\u7d44\u5408\u7121\u6548\u3002"}, {Integer.toString(-20153), "\u5728\u5347\u7d1a SonicWall GMS \u4ee5\u4fbf\u6574\u5408 ViewPoint \u6642\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20154), "\u88dd\u7f6e\u6c92\u6709\u8a3b\u518a\uff0c\u6216\u6307\u5b9a\u7684\u4f7f\u7528\u8005\u540d\u7a31\u7121\u6548\u3002"}, {Integer.toString(-20155), "\u6b64\u670d\u52d9\u7684\u57fa\u672c\u5408\u7d04\u6c92\u6709\u555f\u7528\u6216\u5df2\u904e\u671f\u3002"}, {Integer.toString(-20201), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u7cfb\u7d71\u7684 XML \u8f38\u5165\u7121\u6548\u3002"}, {Integer.toString(-20202), "\u5167\u90e8\u932f\u8aa4\uff1a\u8f38\u5165\u4e2d\u672a\u6307\u5b9a\u4f7f\u7528\u8005\u540d\u7a31\u3002"}, {Integer.toString(-20203), "\u70ba SonicWall GMS \u8a3b\u518a\u7cfb\u7d71\u4ecb\u9762\u6307\u5b9a\u7684\u5bc6\u78bc\u7121\u6548\u3002"}, {Integer.toString(-20204), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u8acb\u6c42\u7684\u65b9\u6cd5\u7121\u6548\u3002"}, {Integer.toString(-20205), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u8acb\u6c42\u7684 XML \u7248\u672c\u7121\u6548\u3002"}, {Integer.toString(-20401), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u767c\u751f\u8cc7\u6599\u5eab\u932f\u8aa4\u3002"}, {Integer.toString(-20402), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u767c\u751f\u767b\u9304\u932f\u8aa4\u3002"}, {Integer.toString(-20403), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u767c\u751f\u5143\u4ef6\u932f\u8aa4\u3002"}, {Integer.toString(-20404), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u767c\u751f\u7a0b\u5e8f\u932f\u8aa4\u3002"}, {Integer.toString(-20140), "\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u672a\u627e\u5230\u6307\u5b9a\u88dd\u7f6e\u7684 PKI \u8cc7\u8a0a\u3002"}, {Integer.toString(-20141), "\u6307\u5b9a\u88dd\u7f6e\u7684 PKI \u670d\u52d9\u672a\u555f\u7528\u3002"}, {Integer.toString(-227), "\u6c92\u6709\u8db3\u5920\u7684\u8a18\u61b6\u9ad4\u7528\u65bc\u6a94\u6848\u4e0a\u8f09\u3002\u8acb\u4e0a\u8f09\u8f03\u5c0f\u7684\u6a94\u6848\u3002"}, {Integer.toString(-66), "\u5617\u8a66\u4e0a\u8f09\u5230\u88dd\u7f6e\u7684\u7c3d\u540d\u6a94\u6848\u7121\u6548\u3002"}, {Integer.toString(-67), "\u7c3d\u540d\u6a94\u6848\u7121\u6cd5\u4e0a\u8f09\u5230\u88dd\u7f6e\u3002\u8acb\u78ba\u8a8d\u6b64\u64cd\u4f5c\u662f\u5426\u9069\u7528\u65bc\u6b64\u578b\u865f/\u7248\u672c\u3002"}, {Integer.toString(-500), "\u5f9e lm2.sonicwall.com \u6536\u5230\u7684\u932f\u8aa4\u3002"}, {Integer.toString(-501), "\u7121\u6cd5\u5b58\u53d6 lm2.sonicwall.com \u7db2\u7ad9\u3002"}, {Integer.toString(-907), "\u4e0d\u652f\u63f4\u88dd\u7f6e\u4e0a\u7684\u97cc\u9ad4\u7248\u672c\u3002"}, {Integer.toString(-901), "\u8a18\u9304 id \u7121\u6548\u6216\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-902), "\u7121\u6cd5\u5957\u7528\u5be6\u9ad4\u5c01\u9589\u8a18\u9304\u3002"}, {Integer.toString(-903), "\u7121\u6cd5\u5957\u7528\u8a18\u9304\u3002"}, {Integer.toString(-904), "\u7bc4\u672c id \u7121\u6548\u6216\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-905), "\u7121\u6cd5\u5957\u7528\u8a18\u9304\u3002"}, {Integer.toString(-906), "\u7121\u6cd5\u5957\u7528\u7bc4\u672c\u3002"}, {Integer.toString(-908), "\u7b49\u5f85\u4f86\u81ea\u6c60\u7684\u9023\u63a5\u903e\u6642\u3002"}, {Integer.toString(-909), "\u7b49\u5f85\u5230\u9060\u7aef\u4e3b\u6a5f\u7684\u9023\u63a5\u903e\u6642\u3002"}, {Integer.toString(-910), "\u6b64\u88dd\u7f6e\u7684\u7d44\u614b\u8a2d\u5b9a\u4e0d\u6b63\u78ba\u3002"}, {Integer.toString(-911), "\u7b49\u5f85\u78ba\u5b9a\u6b64\u88dd\u7f6e\u7684\u9069\u7528\u7d44\u614b\u8a2d\u5b9a\u3002"}, {Integer.toString(-912), "\u7121\u6cd5\u627e\u5230 Web \u670d\u52d9\u4e3b\u6a5f\u3002"}, {Integer.toString(-913), "\u7121\u6cd5\u5efa\u7acb Web \u670d\u52d9\u9023\u63a5\u3002"}, {Integer.toString(-914), "\u900f\u904e Web \u670d\u52d9\u5b58\u53d6\u8cc7\u6599\u6216\u8cc7\u6e90\u6642\u51fa\u73fe\u554f\u984c\u3002"}, {Integer.toString(-915), "\u7121\u6cd5\u9a57\u8b49 Web \u670d\u52d9\u3002"}, {Integer.toString(-800), "\u6b64\u8a2d\u5099\u4e0d\u652f\u63f4\u5c0d GMS \u7684\u5916\u90e8\u6d41\u91cf\u5831\u544a"}, {Integer.toString(-801), "\u6d41\u91cf\u8f49\u5bc4\u7ad9\u9598\u9053\u8a2d\u5b9a\u4e0d\u6b63\u78ba"}, {Integer.toString(-802), "\u6b64\u578b\u865f\u4e0d\u652f\u63f4\u5c0d GMS \u7684\u5916\u90e8\u6d41\u91cf\u5831\u544a"}, {Integer.toString(-803), "\u6b64\u97cc\u9ad4\u7248\u672c\u4e0d\u652f\u63f4\u5c0d GMS \u7684\u5916\u90e8\u6d41\u91cf\u5831\u544a"}, {Integer.toString(-804), "\u6b64\u8a2d\u5099\u7684\u61c9\u7528\u7a0b\u5f0f\u8996\u89ba\u5316\u672a\u7d93\u6388\u6b0a"}, {Integer.toString(-805), "\u53ef\u7528\u7684\u5132\u5b58\u7a7a\u9593\u4e0d\u8db3\uff0c\u7121\u6cd5\u9032\u884c\u6d41\u91cf\u4ee3\u7406\u6307\u6d3e"}, {Integer.toString(-806), "\u53ef\u7528\u7684\u57f7\u884c\u968e\u6bb5\u8a18\u61b6\u9ad4\u4e0d\u8db3\uff0c\u7121\u6cd5\u9032\u884c\u6d41\u91cf\u4ee3\u7406\u6307\u6d3e"}, {Integer.toString(-807), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 1"}, {Integer.toString(-808), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 2"}, {Integer.toString(-809), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 1 \u548c 2"}, {Integer.toString(-810), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 1 \u548c\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {Integer.toString(-811), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 1\u30012 \u548c\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {Integer.toString(-812), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 2 \u548c\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {Integer.toString(-813), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {Integer.toString(-814), "GMS \u4e2d\u7121\u6cd5\u4f7f\u7528\u9598\u9053\u9632\u706b\u7246"}, {Integer.toString(-815), "\u9598\u9053\u9632\u706b\u7246\u7aef\u7684\u901a\u9053\u5efa\u7acb\u5931\u6557"}, {Integer.toString(-816), "\u53d7\u7ba1\u7406\u8a2d\u5099\u7aef\u7684\u901a\u9053\u5efa\u7acb\u5931\u6557"}, {Integer.toString(-817), "\u672a\u91dd\u5c0d\u96f2\u7aef GMS \u7ba1\u7406\u548c\u5831\u544a\u6388\u6b0a\u8a2d\u5099"}, {Integer.toString(-818), "\u53ef\u7528\u7684\u8655\u7406\u6548\u80fd\u4e0d\u8db3\uff0c\u7121\u6cd5\u9032\u884c\u6d41\u91cf\u4ee3\u7406\u6307\u6d3e"}, {Integer.toString(-819), "\u53ef\u7528\u7684\u983b\u5bec\u4e0d\u8db3\uff0c\u7121\u6cd5\u9032\u884c\u6d41\u91cf\u4ee3\u7406\u6307\u6d3e"}, {"EDIT_DOMAIN", "\u7de8\u8f2f\u7db2\u57df"}, {"VIEW_DOMAIN", "\u6aa2\u8996\u7db2\u57df\u8a73\u7d30\u8cc7\u6599"}, {"ADD_DOMAIN", "\u65b0\u589e\u7db2\u57df"}, {"SELECT_TO_DELETE", "\u8acb\u9078\u64c7\u8981\u522a\u9664\u7684\u7db2\u57df/\u9a57\u8b49\u4f3a\u670d\u5668\u3002"}, {"SELECT_AS_TO_DEL", "\u8acb\u9078\u64c7\u8981\u522a\u9664\u7684\u9a57\u8b49\u4f3a\u670d\u5668\u3002"}, {"DELETE_CONFIRMATION", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u7db2\u57df '"}, {"USER_DELETE_CONFIRMATION", "\u6240\u6709\u9a57\u8b49\u4f3a\u670d\u5668\u3001\u4f7f\u7528\u8005\u3001\u4f7f\u7528\u8005\u985e\u578b\u53ca\u5176\u8a2d\u5b9a\u4e5f\u5c07\u88ab\u522a\u9664\u3002"}, {"USER_AS_DELETE_CONFIRMATION", "\u6240\u6709\u4f7f\u7528\u8005\u3001\u4f7f\u7528\u8005\u985e\u578b\u53ca\u5176\u8a2d\u5b9a\u4e5f\u5c07\u88ab\u522a\u9664\u3002"}, {"SURE_WANT_TO_CONTINUE", "\u662f\u5426\u78ba\u5b9a\u8981\u7e7c\u7e8c\uff1f"}, {"MULTIPLE_DELETE_CONFIRMATION", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u4ee5\u4e0b\u7db2\u57df\uff1a"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u4ee5\u4e0b\u9a57\u8b49\u4f3a\u670d\u5668\uff1a"}, {"AND_AS_DELETE_CONFIRMATION", "\u548c\u522a\u9664\u4ee5\u4e0b\u9a57\u8b49\u4f3a\u670d\u5668\uff1a"}, {"WANT_TO_CONTINUE", "\u662f\u5426\u8981\u7e7c\u7e8c\uff1f"}, {"DOMAIN", "\u7db2\u57df"}, {"DOMAINS", "\u7db2\u57df"}, {"SEARCH", "\u641c\u5c0b"}, {"NAME", "\u540d\u7a31"}, {"DOMAIN_TYPE", "\u7db2\u57df\u985e\u578b"}, {"DOMAIN_SETTINGS", "\u7db2\u57df\u8a2d\u5b9a"}, {"ALIAS", "\u5225\u540d"}, {"DISPLAY_DOMAIN", "\u5728\u767b\u5165\u87a2\u5e55\u4e2d\u986f\u793a\u7db2\u57df"}, {"SET_AS_DEFAULT", "\u8a2d\u5b9a\u70ba\u9810\u8a2d\u7db2\u57df"}, {"HOST_NAME", "\u4e3b\u6a5f\u540d\u7a31"}, {"HOST_TYPE", "\u4e3b\u6a5f\u985e\u578b"}, {"EQUALS", "\u7b49\u65bc"}, {"STARTS_WITH", "\u958b\u982d\u70ba"}, {"ENDS_WITH", "\u7d50\u5c3e\u70ba"}, {"CONTAINS", "\u5305\u542b"}, {"LOCAL", "\u672c\u6a5f"}, {"REMOTE", "\u9060\u7aef"}, {"DOMAINS", "\u7db2\u57df"}, {"SSL_USED", "\u4f7f\u7528\u7684 SSL"}, {"CONFIGURE", "\u8a2d\u5b9a"}, {"NO_DOMAIN_FOUND", "\u672a\u627e\u5230\u7db2\u57df"}, {"NO_AS_FOUND", "\u672a\u627e\u5230\u9a57\u8b49\u4f3a\u670d\u5668"}, {"ADD_DOMAIN", "\u65b0\u589e\u7db2\u57df"}, {"DELETE_DOMAINS", "\u522a\u9664\u7db2\u57df/\u9a57\u8b49\u4f3a\u670d\u5668"}, {"DELETE_ASS", "\u522a\u9664\u9a57\u8b49\u4f3a\u670d\u5668"}, {"EQUALS", "\u7b49\u65bc"}, {"STARTS_WITH", "\u958b\u982d\u70ba"}, {"ENDS_WITH", "\u7d50\u5c3e\u70ba"}, {"CONTAINS", "\u5305\u542b"}, {"LOCAL", "\u672c\u6a5f"}, {"REMOTE", "\u9060\u7aef"}, {"REMOTE_DOMAIN", "\u9060\u7aef\u7db2\u57df"}, {"ADMIN_PASSWORD", "\u7ba1\u7406\u54e1\u5bc6\u78bc"}, {"DEFAULT_ADMIN_USER", "\u9810\u8a2d\u7ba1\u7406\u54e1\u4f7f\u7528\u8005"}, {"AUTH_PORT", "\u9a57\u8b49\u9023\u63a5\u57e0"}, {"ACCT_PORT", "\u8a08\u8cbb\u9023\u63a5\u57e0"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "\u57fa\u672c\u8b58\u5225\u540d\u7a31"}, {"SEARCH_FILTER", "\u641c\u5c0b\u7be9\u9078\u5668"}, {"SHARED_SECRET", "\u5171\u7528\u7684\u6a5f\u5bc6"}, {"USE_SSL", "\u4f7f\u7528 SSL"}, {"SSL_PORT", "SSL \u9023\u63a5\u57e0"}, {"ANONYMOUS_LOGIN", "\u533f\u540d\u767b\u5165"}, {"LOGIN_USER_NAME", "\u767b\u5165\u4f7f\u7528\u8005\u8b58\u5225\u540d\u7a31"}, {"DNAME_MSG", "\u8b58\u5225\u540d\u7a31\u7528\u65bc\u5728\u57f7\u884c\u7d81\u5b9a\u6642\u9a57\u8b49\u76ee\u9304\u4f3a\u670d\u5668\u3002\u6b64\u6b04\u4f4d\u7684\u503c\u61c9\u6307\u5b9a\u70ba DN\uff08\u8b58\u5225\u540d\u7a31\uff09\u3002\u4f8b\u5982\uff1a[uid=xyz,ou=People,dc=example,dc=com]\u3001[cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "\u767b\u5165\u5bc6\u78bc"}, {"PROTOCOL_VERSION", "\u901a\u8a0a\u5354\u5b9a\u7248\u672c"}, {"LDAPV2", "LDAP \u7248\u672c 2"}, {"LDAPV3", "LDAP \u7248\u672c 3"}, {"SETTINGS", "\u8a2d\u5b9a"}, {"USER_DIRECTORY_LDAP", "\u4f7f\u7528\u8005\u76ee\u9304 LDAP \u6a21\u5f0f"}, {"LDAP_SCHEMA", "LDAP \u6a21\u5f0f"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "\u5b9a\u7fa9\u7684\u4f7f\u7528\u8005"}, {"USER_OBJECTS", "\u4f7f\u7528\u8005\u7269\u4ef6"}, {"OBJ_CLASS", "\u7269\u4ef6\u985e\u5225"}, {"LOGIN_NAME", "\u767b\u5165\u540d\u7a31\u5c6c\u6027"}, {"FIRST_NAME", "\u540d\u5b57\u5c6c\u6027"}, {"LAST_NAME", "\u59d3\u6c0f\u5c6c\u6027"}, {"EMAIL", "\u96fb\u5b50\u90f5\u4ef6\u5c6c\u6027"}, {"TELEPHONE", "\u96fb\u8a71\u5c6c\u6027"}, {"CON_TIMEOUT", "\u9023\u63a5\u903e\u6642"}, {"SCHEMA", "\u7d50\u69cb\u63cf\u8ff0"}, {"TEST_SETTINGS", "\u6e2c\u8a66\u8a2d\u5b9a"}, {"TEST_RADIUS_SETTINGS", "\u6e2c\u8a66 RADIUS \u8a2d\u5b9a"}, {"TEST_LDAP_MSG", "\u8981\u6e2c\u8a66 LDAP \u8a2d\u5b9a\uff0c\u8acb\u8f38\u5165\u4e00\u500b\u6709\u6548\u7684 LDAP"}, {"TEST_RADIUS_MSG", "\u8981\u6e2c\u8a66 RADIUS \u8a2d\u5b9a\uff0c\u8acb\u8f38\u5165\u4e00\u500b\u6709\u6548\u7684 RADIUS"}, {"TEST_MSG", "\u767b\u5165\u540d\u7a31\u548c\u5bc6\u78bc\uff0c\u7136\u5f8c\u6309\u4e00\u4e0b\u300c\u6e2c\u8a66\u300d\u6309\u9215\u3002\u8acb\u6ce8\u610f\uff0c\u9019\u5c07\u5957\u7528\u5df2\u9032\u884c\u7684\u4efb\u4f55\u8b8a\u66f4\u3002"}, {"USER", "\u4f7f\u7528\u8005"}, {"PWD", "\u5bc6\u78bc"}, {"RUN_CLIENT_TEST", "\u57f7\u884c\u7528\u6236\u7aef\u6e2c\u8a66"}, {"TEST_STATUS", "\u6e2c\u8a66\u72c0\u614b"}, {"RETURNED_USER_ATTRIBUTES", "\u50b3\u56de\u7684\u6e2c\u8a66\u7d50\u679c"}, {"TEST", "\u6e2c\u8a66"}, {"OK", "\u78ba\u5b9a"}, {"CANCEL", "\u53d6\u6d88"}, {"CLOSE", "\u95dc\u9589"}, {"CANT_DELETE_LOCALDOMAIN", "\u7121\u6cd5\u7de8\u8f2f/\u522a\u9664\u672c\u6a5f\u7db2\u57df"}, {"CANT_EDIT", "\u5982\u679c\u53ea\u6709\u4e00\u500b\u7db2\u57df\uff0c\u5247\u7121\u6cd5\u9032\u884c\u7de8\u8f2f"}, {"EMPTY_NAME", "\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_ADMIN_PWD", "\u7ba1\u7406\u54e1\u5bc6\u78bc\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_ADMIN_USER", "\u9810\u8a2d\u7ba1\u7406\u54e1\u4f7f\u7528\u8005\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_AUTH_PORT", "\u9a57\u8b49\u9023\u63a5\u57e0\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_AUTH_PORT", "\u9a57\u8b49\u9023\u63a5\u57e0\u61c9\u70ba\u6b63\u6578"}, {"AUTH_PORT_RANGE", "\u9a57\u8b49\u9023\u63a5\u57e0\u61c9\u5728 0 - 65535 \u7bc4\u570d\u5167"}, {"EMPTY_ACCT_PORT", "\u8a08\u8cbb\u9023\u63a5\u57e0\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_ACCT_PORT", "\u8a08\u8cbb\u9023\u63a5\u57e0\u61c9\u70ba\u6b63\u6578"}, {"EMPTY_BD_NAME", "\u57fa\u672c\u8b58\u5225\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_SEARCH_FILTER", "\u641c\u5c0b\u7be9\u9078\u5668\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_SHRED_SECRET", "\u5171\u7528\u7684\u6a5f\u5bc6\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_SSL_PORT", "SSL \u9023\u63a5\u57e0\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_SSL_PORT", "SSL \u9023\u63a5\u57e0\u61c9\u70ba\u6b63\u6578"}, {"SSL_PORT_RANGE", "SSL \u9023\u63a5\u57e0\u61c9\u5728 0 - 65535 \u7bc4\u570d\u5167"}, {"EMPTY_LOGIN", "\u767b\u5165\u4f7f\u7528\u8005\u8b58\u5225\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_LOGIN_PWD", "\u767b\u5165\u5bc6\u78bc\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_CON_TIMEOUT", "\u9023\u63a5\u903e\u6642\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_CON_TIMEOUT", "\u9023\u63a5\u903e\u6642\u61c9\u70ba\u6b63\u6578"}, {"RECOMMEND_SSL", "\u5f37\u70c8\u5efa\u8b70\u4f7f\u7528 SSL \u8207\u9060\u7aef\u4f3a\u670d\u5668\u9032\u884c\u5b89\u5168\u901a\u8a0a\u3002"}, {"CON_NOT_SECURE", "\u5982\u679c\u6c92\u6709\u4f7f\u7528 SSL\uff0c\u60a8\u7684\u9023\u63a5\u5c07\u4e0d\u5b89\u5168\u3002"}, {"DOMAIN_EXISTS", "\u5df2\u7d93\u5b58\u5728\u5177\u6709\u6b64\u540d\u7a31\u7684\u7db2\u57df"}, {"ALIAS_EXISTS", "\u5df2\u7d93\u5b58\u5728\u5177\u6709\u6b64\u540d\u7a31\u7684\u5225\u540d"}, {"DOMAIN_INVALID", "\u6307\u5b9a\u7684\u7db2\u57df\u540d\u7a31\u7121\u6548\u3002"}, {"DOMAIN_VALID_CHARS", "\u540d\u7a31\u53ea\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a"}, {"DOMAIN_VALID_CHARS_LIST", "\u82f1\u6578\u5b57\u5143\u3001.\uff08\u53e5\u9ede\uff09\u3001-\uff08\u9023\u5b57\u7b26\uff09\u3001_\uff08\u5e95\u7dda\uff09\u548c\u7a7a\u683c\u3002"}, {"SPECIFY_VALID_NAME", "\u8acb\u4f7f\u7528\u5141\u8a31\u7684\u5b57\u5143\u6307\u5b9a\u540d\u7a31\u3002"}, {"DIR_GRP_SETTINGS", "Active Directory \u7fa4\u7d44\u8a2d\u5b9a"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "\u53ea\u5141\u8a31 AD \u7fa4\u7d44\u6210\u54e1"}, {"DIR_GROUPS", "Active Directory \u7fa4\u7d44"}, {"GRP_NAME_INVALID", "\u6307\u5b9a\u7684\u7fa4\u7d44\u540d\u7a31\u7121\u6548\u3002"}, {"GRP_NAME_INVALID_LENGTH", "\u7fa4\u7d44\u540d\u7a31\u4e0d\u80fd\u8d85\u904e 200 \u500b\u5b57\u5143\u3002"}, {"AUTH_SERVER_NAME", "\u9a57\u8b49\u4f3a\u670d\u5668\u540d\u7a31"}, {"ADD_AUTH_SERVER", "\u65b0\u589e\u9a57\u8b49\u4f3a\u670d\u5668"}, {"ADD_AUTHSERVER", "\u65b0\u589e\u9a57\u8b49\u4f3a\u670d\u5668"}, {"EDIT_AUTHSERVER", "\u7de8\u8f2f\u9a57\u8b49\u4f3a\u670d\u5668"}, {"DELETE_DOMAIN", "\u522a\u9664\u8a72\u7db2\u57df"}, {"CANT_DELETE_LOCAL_AS", "\u7121\u6cd5\u7de8\u8f2f/\u522a\u9664\u672c\u6a5f\u9a57\u8b49\u4f3a\u670d\u5668"}, {"CANT_DELETE_ADMIN_AS", "\u7531\u65bc\u8a72\u7db2\u57df\u7684\u9810\u8a2d\u7ba1\u7406\u54e1\u5df2\u91dd\u5c0d\u6b64\u4f3a\u670d\u5668\u9032\u884c\u9a57\u8b49\uff0c\u56e0\u6b64\u7121\u6cd5\u522a\u9664\u6b64\u9a57\u8b49\u4f3a\u670d\u5668\u3002\n\u5c07\u9810\u8a2d\u7ba1\u7406\u54e1\u79fb\u52d5\u5230\u5176\u4ed6\u9a57\u8b49\u4f3a\u670d\u5668\uff0c\u7136\u5f8c\u91cd\u8a66\u3002"}, {"EDIT_AUTH_SERVER", "\u7de8\u8f2f\u6b64\u9a57\u8b49\u4f3a\u670d\u5668"}, {"VIEW_AUTH_SERVER", "\u6aa2\u8996\u9a57\u8b49\u4f3a\u670d\u5668\u8a73\u7d30\u8cc7\u6599"}, {"DELETE_AUTH_SERVER", "\u522a\u9664\u6b64\u9a57\u8b49\u4f3a\u670d\u5668"}, {"AS_INVALID", "\u6307\u5b9a\u7684\u9a57\u8b49\u4f3a\u670d\u5668\u7121\u6548\u3002"}, {"AS_EXISTS", "\u5df2\u7d93\u5b58\u5728\u5177\u6709\u6b64\u540d\u7a31\u7684\u9a57\u8b49\u4f3a\u670d\u5668"}, {"EMPTY_AS_NAME", "\u9a57\u8b49\u4f3a\u670d\u5668\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"AS_NAME_MSG", "\u9a57\u8b49\u4f3a\u670d\u5668\u7684\u540d\u7a31\u5c07\u88ab\u5efa\u7acb\u3002\u6b64\u540d\u7a31\u5c0d\u65bc\u7ba1\u7406\u7db2\u57df\u4e2d\u4e0d\u540c\u7684\u9a57\u8b49\u4f3a\u670d\u5668\u975e\u5e38\u6709\u7528\u3002"}, {"AS_DELETE_CONFIRMATION", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u9a57\u8b49\u4f3a\u670d\u5668 '"}, {"PRI_RADIUS", "\u4e3b\u8981 RADIUS \u4f3a\u670d\u5668"}, {"AUTH_PROTOCOL", "\u9a57\u8b49\u901a\u8a0a\u5354\u5b9a"}, {"RADIUS_TIMEOUT", "RADIUS \u903e\u6642\uff08\u79d2\u6578\uff09"}, {"MAX_RETRIES", "\u6700\u5927\u91cd\u8a66\u6b21\u6578"}, {"BACK_RADIUS", "\u5099\u7528 RADIUS \u4f3a\u670d\u5668"}, {"RADIUS_USER_GROUP", "RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u8a2d\u5b9a"}, {"ALLOW_GROUP_MEMBERS", "\u53ea\u5141\u8a31 RADIUS \u7fa4\u7d44\u6210\u54e1"}, {"USE_SW_VSA", "\u4f7f\u7528 RADIUS \u4f3a\u670d\u5668\u4e0a SonicWall \u4f9b\u61c9\u5546\u7279\u5b9a\u7684\u5c6c\u6027"}, {"USE_FILTER_ID", "\u5728 RADIUS \u4f3a\u670d\u5668\u4e0a\u4f7f\u7528\u7be9\u9078\u5668 ID \u5c6c\u6027"}, {"ALLOW_GROUPS", "\u5141\u8a31\u7684 RADIUS \u7fa4\u7d44"}, {"USER_GROUP", "\u4f7f\u7528\u8005\u7fa4\u7d44"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS \u903e\u6642\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS \u903e\u6642\u61c9\u70ba\u6b63\u6578"}, {"EMPTY_MAX_RETRIES", "\u6700\u5927\u91cd\u8a66\u6b21\u6578\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_MAX_RETRIES", "\u6700\u5927\u91cd\u8a66\u6b21\u6578\u61c9\u70ba\u6b63\u6578"}, {"TEST_USER_NAME", "\u6e2c\u8a66\u4f7f\u7528\u8005\u540d\u7a31\u4e0d\u5f97\u7a7a\u767d\u3002"}, {"TEST_USER_PWD", "\u6e2c\u8a66\u4f7f\u7528\u8005\u5bc6\u78bc\u4e0d\u5f97\u7a7a\u767d\u3002"}, {"DOMAIN_NAME_MSG", "\u7db2\u57df\u7684\u540d\u7a31\u5c07\u88ab\u5efa\u7acb\u3002\u8a72\u540d\u7a31\u5c07\u5728\u767b\u5165\u9801\u9762\u7684\u7db2\u57df\u4e0b\u62c9\u6e05\u55ae\u4e2d\u53ef\u898b\u3002"}, {"DOMAIN_TYPE_MSG", "\u7db2\u57df\u7684\u985e\u578b\uff0c[\u672c\u6a5f] \u6216 [\u9060\u7aef]\u3002\u9700\u8981\u5f9e\u5916\u90e8\u5e73\u53f0\uff08\u5982 LDAP \u6216 AD \u4f3a\u670d\u5668\uff09\u9a57\u8b49\u4f7f\u7528\u8005\u7684\u7db2\u57df\u5c07\u9700\u8981\u5efa\u7acb\u70ba [\u9060\u7aef] \u985e\u578b\u7684\u7db2\u57df\u3002[\u672c\u6a5f] \u985e\u578b\u7684\u7db2\u57df\u5c07\u64c1\u6709 SGMS \u8cc7\u6599\u5eab\u5167\u5b58\u5728\u7684\u4f7f\u7528\u8005\u5e33\u6236\u548c\u9a57\u8b49\u8a73\u7d30\u8cc7\u6599\u3002\u900f\u904e\u5efa\u7acb [\u672c\u6a5f] \u985e\u578b\u7684\u7db2\u57df\uff0c\u60a8\u53ef\u4ee5\u5728 SGMS \u5167\u652f\u63f4\u591a\u500b\u7db2\u57df\u800c\u7121\u9700\u5916\u90e8\u9a57\u8b49\u4ecb\u9762\u3002"}, {"ADMIN_PASSWORD_MSG", "\u5efa\u7acb\u65b0\u7db2\u57df\u985e\u578b [\u672c\u6a5f] \u5f8c\uff0c\u9810\u8a2d\u60c5\u6cc1\u4e0b\u5c07\u5efa\u7acb\u8a72\u7db2\u57df\u7684 [\u7ba1\u7406\u54e1] \u4f7f\u7528\u8005\u3002\u60a8\u9700\u8981\u6307\u5b9a\u7ba1\u7406\u54e1\u4f7f\u7528\u8005\u7684\u5bc6\u78bc\u3002"}, {"ADMIN_USERID_MSG", "\u6307\u5b9a\u9700\u8981\u6210\u70ba\u8a72\u7db2\u57df\u7ba1\u7406\u54e1\u7684\u4f7f\u7528\u8005\u540d\u7a31\u3002\u6b64\u4f7f\u7528\u8005\u540d\u7a31\u61c9\u70ba\u76ee\u9304\u4f3a\u670d\u5668\u4e2d\u8207\u8a72\u7db2\u57df\u95dc\u806f\u7684\u6709\u6548\u4f7f\u7528\u8005\u540d\u7a31\u3002\u5982\u679c\u70ba\u6b64\u6b04\u4f4d\u6307\u5b9a\u540d\u7a31 [\u7ba1\u7406\u54e1]\uff0c\u5247\u4f7f\u7528\u8005 id \u70ba [\u7ba1\u7406\u54e1] \u7684\u4f7f\u7528\u8005\u61c9\u5728\u95dc\u806f\u7684\u76ee\u9304\u4e2d\u5b58\u5728\u4e26\u4e14\u61c9\u64c1\u6709\u7ba1\u7406\u6b0a\u9650\u3002\u4f8b\u5982\uff1ajdoe"}, {"HOST_NAME_MSG", "\u9060\u7aef\u9a57\u8b49\u4f3a\u670d\u5668\u7684\u4e3b\u6a5f\u540d\u7a31\u6216 IP \u4f4d\u5740\u3002\u4f8b\u5982\uff1a\t[mydc.example.com]\u3001[X.X.X.X]\uff08IP \u4f4d\u5740\uff09\u3001[company.com]\u3002\u5982\u679c\u9060\u7aef\u4f3a\u670d\u5668\u662f Windows Active Directory (AD) \u4f3a\u670d\u5668\u4e26\u4e14\u60a8\u6709\u591a\u500b\u7db2\u57df\u9700\u8981\u5f9e AD \u6a39\u7cfb\u4e0b\u9a57\u8b49\u4f7f\u7528\u8005\uff0c\u5247\u6307\u5b9a AD \u6a39\u7cfb\u7684\u5168\u57df\u76ee\u9304\u540d\u7a31\u6216 IP \u4f4d\u5740\u4f5c\u70ba\u4e3b\u6a5f\u540d\u7a31\u3002"}, {"AUTHENTICATION_PORT_MSG", "LDAP \u6216 AD \u4f3a\u670d\u5668\u4e0a\u7684\u9023\u63a5\u57e0\u865f\u78bc\uff0c\u53ef\u5728\u5176\u4e0a\u76e3\u807d\u9a57\u8b49\u8acb\u6c42\u3002\u5982\u679c\u662f LDAP/AD \u4f3a\u670d\u5668\uff0c\u5247\u9810\u8a2d\u503c\u70ba 389\u3002\u5982\u679c\u60a8\u6307\u5b9a\u4e86 AD \u6a39\u7cfb\u7684\u5168\u57df\u76ee\u9304\u540d\u7a31\u6216 IP \u4f4d\u5740\u4f5c\u70ba\u4e3b\u6a5f\u540d\u7a31\uff0c\u5247\u9084\u61c9\u6307\u5b9a\u76f8\u61c9\u7684\u9023\u63a5\u57e0\u865f\u78bc\u3002\u9810\u8a2d\u503c\u70ba 3268\u3002"}, {"HOST_TYPE_MSG", "\u8a72\u503c\u8868\u793a\u9060\u7aef\u9a57\u8b49\u4f3a\u670d\u5668\u7684\u985e\u578b\u662f LDAP \u4f3a\u670d\u5668\u3001Windows Active Directory \u9084\u662f RADIUS \u4f3a\u670d\u5668\u3002"}, {"ALIAS_MSG", "\u5982\u679c\u7db2\u57df\u6c92\u6709\u986f\u793a\uff0c\u53ef\u5728 GMS \u767b\u5165\u87a2\u5e55\u4e2d\u4f7f\u7528\u7db2\u57df\u540d\u7a31\u7e2e\u5beb\u767b\u5165\u3002\u4f8b\u5982\uff1a\u5225\u540d\\\\\u4f7f\u7528\u8005\u540d\u7a31\u3002\u5982\u679c\u7db2\u57df\u540d\u7a31\u7684\u9577\u5ea6\u5c0f\u65bc\u6216\u7b49\u65bc 16 \u500b\u5b57\u5143\uff0c\u5247\u5225\u540d\u81ea\u52d5\u586b\u5beb\u70ba\u7db2\u57df\u540d\u7a31\u3002"}, {"PROTOCOL_VERSION_MSG", "\u9019\u662f\u9060\u7aef LDAP/AD \u4f3a\u670d\u5668\u5728\u5176\u4e0a\u57f7\u884c\u7684 LDAP \u901a\u8a0a\u5354\u5b9a\u7248\u672c\u3002"}, {"BASE_DN_MSG", "\u57fa\u672c\u8b58\u5225\u540d\u7a31\u7528\u65bc\u5340\u5225\u76ee\u9304\u4e2d\u7684\u6839\u9805\u76ee\u8207\u5c07\u51fa\u73fe\u7684\u3001SGMS \u8d77\u59cb\u7684\u641c\u5c0b\u3002\u76ee\u9304\u7684\u57fa\u672c DN\uff08\u4f8b\u5982 example.com\uff09\u61c9\u70ba\u4ee5\u4e0b\u683c\u5f0f\u5beb\u5165\uff1a[dc=example,dc=com]\u3002\u59cb\u7d42\u9700\u8981\u6307\u5b9a\u6700\u9802\u7d1a\u7684\u7bc0\u9ede\u4f5c\u70ba\u76ee\u9304\u6a39\u4e2d\u7684\u57fa\u672c DN\uff0c\u8a72\u7bc0\u9ede\u4e4b\u4e0b\u662f\u60a8\u9810\u671f\u986f\u793a\u70ba\u53ef\u767b\u5165\u5230 SGMS \u7684\u6240\u6709\u4f7f\u7528\u8005\u3002"}, {"USE_SSL_MSG", "\u6307\u5b9a\u662f\u5426\u4f7f\u7528 SSL \u7d81\u5b9a\u5230\u9060\u7aef\u4f3a\u670d\u5668\u3002\u5f37\u70c8\u5efa\u8b70\u4f7f\u7528\u6b64\u9805\u76ee\u3002\u5c0d\u65bc\u6b64\u9805\u76ee\uff0c\u9060\u7aef\u4f3a\u670d\u5668\u7684 CA \u8b49\u66f8\u6216\u7c3d\u540d\u4f3a\u670d\u5668\u8b49\u66f8\u7684 CA \u6839\u8b49\u66f8\u5c07\u5728 SGMS \u7684\u91d1\u9470\u5eab\u4e2d\u986f\u793a\u70ba\u4fe1\u4efb\u7684 CA\u3002"}, {"SSL_PORT_MSG", "\u9060\u7aef\u4f3a\u670d\u5668\u5728\u5176\u4e0a\u76e3\u807d SSL \u7d81\u5b9a\u8acb\u6c42\u7684\u9023\u63a5\u57e0\u865f\u78bc\u3002\u5982\u679c\u662f LDAP/AD \u4f3a\u670d\u5668\uff0c\u5247\u9810\u8a2d\u503c\u70ba 636\u3002\u5982\u679c\u60a8\u6307\u5b9a\u4e86 AD \u6a39\u7cfb\u7684\u5168\u57df\u76ee\u9304\u540d\u7a31\u6216 IP \u4f4d\u5740\u4f5c\u70ba\u4e3b\u6a5f\u540d\u7a31\uff0c\u5247\u9084\u61c9\u6307\u5b9a\u76f8\u61c9\u7684 SSL \u9023\u63a5\u57e0\u865f\u78bc\u3002\u9810\u8a2d\u503c\u70ba 3269\u3002"}, {"ANONYMOUS_LOGIN_MSG", "\uff08\u4e0d\u5efa\u8b70\uff09\u3002\u6307\u5b9a SGMS \u662f\u5426\u61c9\u533f\u540d\u7d81\u5b9a\u5230\u9060\u7aef\u4f3a\u670d\u5668\u3002\u5c0d\u65bc\u6b64\u9805\u76ee\uff0c\u9060\u7aef LDAP/AD \u4f3a\u670d\u5668\u61c9\u5141\u8a31\u533f\u540d\u7d81\u5b9a\u3002\u533f\u540d\u7d81\u5b9a\u61c9\u50c5\u7576\u4e8b\u5148\u4e0d\u77e5\u9053\u670d\u52d9\u5e33\u6236\uff08\u76ee\u9304\u4e2d\u81f3\u5c11\u6709\u4e00\u500b\u6709\u6548\u7684\u4f7f\u7528\u8005\u5e33\u6236\uff09\u6642\u5617\u8a66\u3002\u5f37\u70c8\u5efa\u8b70\u4e0d\u4f7f\u7528\u6b64\u9805\u76ee\u3002"}, {"LOGIN_USER_DN_MSG", "\u8b58\u5225\u540d\u7a31\u7528\u65bc\u5728\u57f7\u884c\u7d81\u5b9a\u6642\u9a57\u8b49\u76ee\u9304\u4f3a\u670d\u5668\u3002\u6b64\u6b04\u4f4d\u7684\u503c\u61c9\u6307\u5b9a\u70ba DN\uff08\u8b58\u5225\u540d\u7a31\uff09\u3002\u4f8b\u5982\uff1a[uid=xyz, ou=People, dc=example, dc=com]\u3001[cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "\u767b\u5165\u4f7f\u7528\u8005 DN \u7684\u5bc6\u78bc\u3002"}, {"CONN_TIMEOUT_MSG", "\u8a72\u503c\uff08\u6beb\u79d2\u6578\uff09\u662f\u9023\u63a5\u903e\u6642\u671f\u9650\u3002\u7d93\u904e\u6b64\u6642\u9593\u9031\u671f\u5f8c\uff0c\u5982\u679c\u672a\u6210\u529f\uff0c\u9060\u7aef\u4f3a\u670d\u5668\u7684\u9023\u63a5\u5617\u8a66\u5c07\u653e\u68c4\u3002"}, {"LDAP_SCHEMA_MSG", "\u95dc\u806f LDAP/AD \u4f3a\u670d\u5668\u7684 LDAP \u6a21\u5f0f\u3002"}, {"OBJ_CLASS_MSG", "\u4f7f\u7528\u8005\u6240\u5c6c\u7684\u5176\u4e2d\u4e00\u500b\u6a19\u6e96\u7269\u4ef6\u985e\u5225\u7684\u540d\u7a31\u3002"}, {"LOGIN_NAME_ATTRIBUTE_MSG", "LDAP/AD \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u4f7f\u7528\u8005 id \u7684\u5c6c\u6027\u540d\u7a31\u3002\u9019\u662f LDAP \u4f3a\u670d\u5668\u4e2d\u7684\u5c6c\u6027\uff0c\u5176\u503c\u5c07\u88ab\u7528\u4f5c SGMS \u767b\u5165\u9801\u9762\u4e2d\u7684\u4f7f\u7528\u8005 id\u3002\u4f8b\u5982\uff1auid\u3001sAMAccountName \u7b49\u3002"}, {"FIRST_NAME_ATTRIBUTE_MSG", "LDAP \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u540d\u5b57\u7684\u5c6c\u6027\u540d\u7a31\u3002\u4f8b\u5982\uff1agivenName\u3002"}, {"LAST_NAME_ATTRIBUTE_MSG", "LDAP \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u59d3\u6c0f\u7684\u5c6c\u6027\u540d\u7a31\u3002\u4f8b\u5982\uff1asn\u3002"}, {"EMAIL_ATTRIBUTE_MSG", "LDAP \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u96fb\u5b50\u90f5\u4ef6 id \u7684\u5c6c\u6027\u540d\u7a31\u3002\u4f8b\u5982\uff1amail\u3002"}, {"TELEPHONE_ATTRIBUTE_MSG", "LDAP \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u96fb\u8a71\u865f\u78bc\u7684\u5c6c\u6027\u540d\u7a31\u3002\u4f8b\u5982\uff1atelephoneNumber\u3002"}, {"TEST_PANE_MSG", "\u60a8\u53ef\u5728\u6b64\u8655\u6e2c\u8a66\u5728\u8a2d\u5b9a\u9762\u677f\u4e2d\u8f38\u5165\u7684\u9a57\u8b49\u4f3a\u670d\u5668 (LDAP/AD/RADIUS) \u8a2d\u5b9a\u3002"}, {"TEST_PANE_USER_MSG", "\u8f38\u5165\u60a8\u5c07\u5728 SGMS \u767b\u5165\u9801\u9762\u4e2d\u8f38\u5165\u7684\u6709\u6548\u4f7f\u7528\u8005\u540d\u7a31\u4ee5\u767b\u5165\u5230 GMS\u3002\u6b64\u4f7f\u7528\u8005\u540d\u7a31\u61c9\u6709\u6548\u4e26\u5728\u8a72\u7db2\u57df\u7684\u95dc\u806f\u76ee\u9304\u4e2d\u51fa\u73fe\u3002\u6b64\u5916\uff0c\u8f38\u5165\u76ee\u9304\u4e2d\u6b64\u4f7f\u7528\u8005\u540d\u7a31\u7684\u5bc6\u78bc\u3002"}, {"EMPTY_DIR_GROUP", "\u76ee\u9304\u7fa4\u7d44\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d\u3002"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "\u6b64\u9078\u9805\u9078\u5b9a\u6642\u53ea\u5141\u8a31\u4f5c\u70ba\u6307\u5b9a Active Directory \u7fa4\u7d44\u6210\u54e1\u7684\u4f7f\u7528\u8005\u767b\u5165\u5230 GMS\u3002\u4f7f\u7528\u6b64\u9078\u9805\uff0c\u9084\u9700\u8981\u5728\u8a2d\u5b9a\u9762\u677f\u4e2d\u5c07\u4e3b\u6a5f\u985e\u578b\u9078\u64c7\u70ba [Active Directory]\u3002"}, {"DIR_GROUPS_MSG", "\u6307\u5b9a AD \u7fa4\u7d44\u540d\u7a31\uff0c\u5176\u6210\u54e1\u61c9\u5141\u8a31\u767b\u5165\u5230 GMS\u3002\u53ef\u4ee5\u6307\u5b9a\u4ee5\u5206\u865f\u5206\u9694\u7684\u591a\u500b AD \u7fa4\u7d44\u3002\u4f8b\u5982\uff1a[GMSUsers]\u3001[ADGroup1;AD group2;GMS Users;Group4]"}, {"RADIUS_HOST_NAME_MSG", "RADIUS \u9a57\u8b49\u4f3a\u670d\u5668\u7684\u4e3b\u6a5f\u540d\u7a31\u6216 IP \u4f4d\u5740\u3002\u4f8b\u5982\uff1a[myradius.example.com]\u3001[X.X.X.X]\uff08IP \u4f4d\u5740\uff09\u3001[company.com]\u3002"}, {"RADIUS_AUTH_PORT_MSG", "RADIUS \u4f3a\u670d\u5668\u4e0a\u7684\u9023\u63a5\u57e0\u865f\u78bc\uff0c\u53ef\u5728\u5176\u4e0a\u76e3\u807d\u9a57\u8b49\u8acb\u6c42\u3002\u9810\u8a2d\u503c\u70ba 1812\u3002"}, {"RADIUS_SHARED_SECRET_MSG", "\u5728 GMS \u548c RADIUS \u4f3a\u670d\u5668\u4e4b\u9593\u5171\u7528\u7684\u6a5f\u5bc6\u3002\u9019\u662f\u4e00\u500b\u53ea\u6709 RADIUS \u4f3a\u670d\u5668\u548c RADIUS \u7528\u6236\u7aef\u77e5\u9053\u7684\u5b57\u4e32\u503c\u3002"}, {"RADIUS_AUTH_PROTOCOL_MSG", "\u5c07\u7528\u65bc\u9a57\u8b49\u7684 RADIUS \u9a57\u8b49\u5354\u5b9a\u3002"}, {"RADIUS_TIMEOUT_MSG", "\u8a72\u503c\uff08\u79d2\u6578\uff09\u8868\u793a\u9023\u63a5\u903e\u6642\u671f\u9650\u3002\u7d93\u904e\u6b64\u6642\u9593\u9031\u671f\u5f8c\uff0c\u5982\u679c\u672a\u6210\u529f\uff0cRADIUS \u4f3a\u670d\u5668\u7684\u9023\u63a5\u5617\u8a66\u5c07\u653e\u68c4\u3002"}, {"RADIUS_MAX_RETRIES_MSG", "\u8a72\u503c\u8868\u793a RADIUS \u4f3a\u670d\u5668\u61c9\u5617\u8a66\u7684\u9a57\u8b49\u6b21\u6578\u3002\u7d93\u904e\u6307\u5b9a\u7684\u5617\u8a66\u6b21\u6578\u5f8c\uff0c\u5982\u679c\u672a\u6210\u529f\uff0c\u9060\u7aef\u4f3a\u670d\u5668\u7684\u9a57\u8b49\u5617\u8a66\u5c07\u653e\u68c4\u3002"}, {"RADIUS_ONLY_GROUP_MSG", "\u6b64\u9078\u9805\u9078\u5b9a\u6642\u53ea\u5141\u8a31\u4f5c\u70ba\u6307\u5b9a RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u6210\u54e1\u7684\u4f7f\u7528\u8005\u767b\u5165\u5230 GMS\u3002"}, {"RADIUS_USE_FILTER_MSG", "\u6b64\u9078\u9805\u9078\u5b9a\u6642\u53ea\u5141\u8a31\u5c07\u7528\u4f5c RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u8b58\u5225\u78bc\u7684 RADIUS \u5c6c\u6027\u300c\u7be9\u9078\u5668 ID\u300d\u7684\u503c\u3002\u8981\u4f7f\u7528\u6b64\u9078\u9805\uff0c\u61c9\u6b63\u78ba\u8a2d\u5b9a RADIUS \u4f3a\u670d\u5668\u4ee5\u50b3\u56de\u6b64\u5c6c\u6027-\u503c\u5c0d\u4ee5\u53ca\u5f9e RADIUS \u4f3a\u670d\u5668\u9a57\u8b49\u7684\u6bcf\u500b\u4f7f\u7528\u8005 id \u7528\u65bc\u767b\u5165\u5230 GMS\u3002"}, {"RADIUS_USE_SW_MSG", "\u9078\u64c7\u6b64\u9078\u9805\u5f8c\uff0c\u6703\u5c07 SonicWall \u4f9b\u61c9\u5546\u7279\u5b9a\u5c6c\u6027 [SonicWall-User-Group \u548c SonicWall-User-Groups] \u7684\u503c\u7528\u4f5c RADIUS \u4f7f\u7528\u8005\u7d44\u8b58\u5225\u9805\u3002\u70ba\u4e86\u80fd\u5920\u4f7f\u7528\u6b64\u9078\u9805\uff0c\u61c9\u6b63\u78ba\u8a2d\u5b9a RADIUS \u4f3a\u670d\u5668\u4ee5\u50b3\u56de SonicWall \u4f9b\u61c9\u5546\u7279\u5b9a\u5c6c\u6027\u503c\u5c0d\u4ee5\u53ca\u5f9e RADIUS \u4f3a\u670d\u5668\u8a8d\u8b49\u7684\u3001\u7528\u65bc\u767b\u5165 GMS \u7684\u4f7f\u7528\u8005 ID\u3002"}, {"RADIUS_ALLOW_GROUPS_MSG", "\u6307\u5b9a RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u540d\u7a31\uff0c\u5176\u6210\u54e1\u61c9\u5141\u8a31\u767b\u5165\u5230 GMS\u3002\u4f8b\u5982\uff0c[GMSUsers]\u3002\u4ee5\u5206\u865f\u5206\u9694\u7684\u5b57\u4e32\u5f62\u5f0f\u53ef\u6307\u5b9a\u591a\u500b RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u3002\u4f8b\u5982\uff1a[RadGroup1;Rad group2;GMS Users;Group4]\u3002"}, {"ADD_AUTH_SERVER_MSG", "\u5982\u679c\u6838\u53d6\uff0c\u65b0\u589e\u7db2\u57df\u6642\u5141\u8a31\u65b0\u589e\u7684\u9a57\u8b49\u4f3a\u670d\u5668\u8a2d\u5b9a\u3002"}, {"PAGE_LABEL", "\u9801\u9762"}, {"MANAGE_PAGE", "\u7ba1\u7406\u9801\u9762"}, {"ADD_COMPONENT", "\u65b0\u589e\u5143\u4ef6"}, {"PAGE_MANAGER", "\u9801\u9762\u7ba1\u7406\u54e1"}, {"ADD_NEW_PAGE", "\u65b0\u589e\u9801\u9762"}, {"DEFAULT_PAGE", "\u9810\u8a2d\u9801\u9762"}, {"PAGE_DETAILS", "\u9801\u9762\u8a73\u7d30\u8cc7\u6599"}, {"PAGE_TITLE", "\u9801\u9762\u6a19\u984c"}, {"COMPONENT_TITLE", "\u5143\u4ef6\u6a19\u984c"}, {"PAGE_LAYOUT", "\u9801\u9762\u7248\u9762\u914d\u7f6e"}, {"ONE_COLUMN_LAYOUT", "1 \u6b04 (100)"}, {"TWO_COLUMN_LAYOUT", "2 \u6b04 (50:50)"}, {"THREE_COLUMN_LAYOUT", "3 \u6b04 (30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 \u6b04 (25:25:25:25)"}, {"ADD", "\u65b0\u589e"}, {"EDIT", "\u7de8\u8f2f"}, {"DELETE", "\u522a\u9664"}, {"ADD_COMPONENT_MANAGER", "\u65b0\u589e\u5143\u4ef6\u7ba1\u7406\u54e1"}, {"TYPE", "\u985e\u578b"}, {"RSS_FEED_DETAILS", "RSS \u6458\u8981\u8a73\u7d30\u8cc7\u6599"}, {"RSS_FEEDS", "RSS \u6458\u8981"}, {"TITLE", "\u6a19\u984c"}, {"ITEMS", "\u986f\u793a\u7684\u9805\u76ee\uff08\u6700\u5927\u503c\uff09"}, {"REFRESH_INTERVAL", "\u91cd\u65b0\u6574\u7406\u9593\u9694"}, {"REFRESH_INTERVAL_MINUTE", "\u5206\u9418\u6578"}, {"EVENT_ALERT_DETAILS", "\u4e8b\u4ef6\u8b66\u793a\u8a73\u7d30\u8cc7\u6599"}, {"ALERT_TYPES", "\u8b66\u793a\u985e\u578b"}, {"REFRESH_INTERVAL_HOUR", "\u5c0f\u6642\u6578"}, {"ALERT_SHOW_TIME_HOURS", "\u986f\u793a\u6700\u8fd1\u4e00\u6bb5\u6642\u9593\u5167\u89f8\u767c\u7684\u8b66\u793a"}, {"APPLICATION_WIDGET_DETAILS", "\u61c9\u7528\u7a0b\u5f0f Widget \u8a73\u7d30\u8cc7\u6599"}, {"WIDGETS", "Widget"}, {"RSS_FEED_TYPE", "RSS \u6458\u8981"}, {"EVENT_ALERT_TYPE", "\u4e8b\u4ef6\u8b66\u793a"}, {"APPLICATION_WIDGET_TYPE", "\u61c9\u7528\u7a0b\u5f0f Widget"}, {"CUSTOM_RSS_FEED", "\u81ea\u8a02 RSS \u6458\u8981"}, {"CUSTOM_RSS_URL", "\u81ea\u8a02 RSS URL"}, {"END_EDIT", "\u7d50\u675f\u7de8\u8f2f"}, {"RSS_URL", "RSS URL"}, {"SAVE", "\u5132\u5b58"}, {"DEFAULT_PAGE", "\u9810\u8a2d\u9801\u9762"}, {"SAVE_LAYOUT_FAIL_MSG", "\u5132\u5b58\u7248\u9762\u914d\u7f6e\u5931\u6557"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "\u5132\u5b58\u63a7\u5236\u5217\u72c0\u614b\u5931\u6557"}, {"ADD_COMPONENT_FAIL_MSG", "\u65b0\u589e\u5143\u4ef6\u5931\u6557"}, {"DELETE_COMPONENT_FAIL_MSG", "\u522a\u9664\u5143\u4ef6\u5931\u6557"}, {"PAGE_ACTION_FAIL_MSG", "\u9801\u9762\u64cd\u4f5c\u5931\u6557"}, {"RSS_FEED_FAIL_MSG", "RSS \u6458\u8981\u64f7\u53d6\u5931\u6557\u3002"}, {"EVENT_ALERT_FAIL_MSG", "GEM \u8b66\u793a\u64f7\u53d6\u5931\u6557\u3002"}, {"APPLICATION_WIDGET_FAIL_MSG", "\u61c9\u7528\u7a0b\u5f0f Widget \u64f7\u53d6\u5931\u6557\u3002"}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "\u6c92\u6709\u70ba\u4ee5\u4e0b\u76ee\u6a19\u8a2d\u5b9a\u7684\u8b66\u793a\uff1aDashboard\u3002"}, {"NO_ALERT_FOUND_MSG", "\u672a\u627e\u5230\u8981\u986f\u793a\u7684\u8b66\u793a\u3002"}, {"CHANGE_DEFAULT_PAGE_MSG", "\u5c07\u6b64\u9801\u9762\u8a2d\u70ba\u9810\u8a2d\u503c\u5c07\u8b8a\u66f4\u4efb\u4f55\u4e4b\u524d\u7684\u9810\u8a2d\u9801\u9762\u8a2d\u5b9a\u3002\u662f\u5426\u78ba\u5b9a\u8981\u7e7c\u7e8c\uff1f"}, {"DELETE_DEFAULT_PAGE_MSG", "\u7121\u6cd5\u522a\u9664\u9810\u8a2d\u9801\u9762\u3002\u9078\u64c7\u4efb\u4f55\u5176\u4ed6\u9801\u9762\u4f5c\u70ba\u9810\u8a2d\u9801\u9762\uff0c\u7136\u5f8c\u518d\u522a\u9664\u6b64\u9801\u9762\u3002"}, {"DELETE_PAGE_AND_COMPONENT_MSG", "\u522a\u9664\u9801\u9762\u5c07\u56e0\u800c\u522a\u9664\u8a72\u9801\u9762\u4e2d\u7684\u6240\u6709\u5143\u4ef6\u3002\u662f\u5426\u78ba\u5b9a\u8981\u522a\u9664\u6b64\u9801\u9762\uff1f"}, {"VALID_URL_MSG", "\u8acb\u8f38\u5165\u4ee5\u4e0b\u683c\u5f0f\u7684 URL\uff1ahttp://www.yourdomain.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "\u662f\u5426\u78ba\u5b9a\u8981\u522a\u9664\u6b64\u5143\u4ef6\uff1f"}, {"NO_COMPONENT_MSG", "\u76ee\u524d\u6c92\u6709\u5728\u9801\u9762\u4e2d\u65b0\u589e\u4efb\u4f55\u5143\u4ef6\u3002"}, {"LOAD_DATA_MSG", "\u6b63\u5728\u8f09\u5165\u8cc7\u6599..."}, {"COMPONENT_EXISTS_MSG", "\u5143\u4ef6\u5df2\u7d93\u5b58\u5728\u3002\u73fe\u6709\u5143\u4ef6\u8a73\u7d30\u8cc7\u6599\uff1a "}, {"REFRESH_INTERVAL_RANGE", "\u91cd\u65b0\u6574\u7406\u9593\u9694\u8d85\u51fa\u7bc4\u570d\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u503c\u3002"}, {"ITEMS_RANGE", "\u9805\u76ee\u6578\u8d85\u51fa\u7bc4\u570d\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u6578\u5b57\u3002"}, {"ALERT_SHOWTIME_RANGE", "\u8b66\u793a\u986f\u793a\u6642\u9593\u8d85\u51fa\u7bc4\u570d\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u503c\u3002"}, {"NO_COMPONENT_SELECTED_ERR", "\uff1a\u5c07\u5143\u4ef6\u65b0\u589e\u5230\u9801\u9762\u4e4b\u524d\uff0c\u8acb\u9078\u64c7\u4e00\u500b\u5143\u4ef6\u3002"}, {"ADDCOMPONENT_ERR_QUOTES", "\u5143\u4ef6\u6a19\u984c\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a\u55ae\u5f15\u865f\u3001\u96d9\u5f15\u865f\u3001\u5192\u865f\u3001\u767e\u5206\u6bd4\u3001\u4e95\u865f\u3001\u554f\u865f\u548c\u76f4\u7acb\u7dda\u7b26\u865f\u3002"}, {"ADDPAGE_ERR_QUOTES", "\u9801\u9762\u6a19\u984c\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a\u55ae\u5f15\u865f\u3001\u96d9\u5f15\u865f\u3001\u5192\u865f\u3001\u767e\u5206\u6bd4\u3001\u4e95\u865f\u3001\u554f\u865f\u548c\u76f4\u7acb\u7dda\u7b26\u865f\u3002"}, {"TIME_PERIOD", "\u6642\u9593\u9031\u671f"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "\u522a\u9664\u9801\u9762\u5c07\u56e0\u800c\u522a\u9664\u8a72\u9801\u9762\u4e2d\u7684\u6240\u6709 Widget\u3002\u662f\u5426\u78ba\u5b9a\u8981\u522a\u9664\u6b64\u9801\u9762\uff1f"}, {"ADDWIDGET_ERR_QUOTES", " Widget \u6a19\u984c\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a\u55ae\u5f15\u865f\u3001\u96d9\u5f15\u865f\u3001\u5192\u865f\u3001\u767e\u5206\u6bd4\u3001\u4e95\u865f\u3001\u554f\u865f\u548c\u76f4\u7acb\u7dda\u7b26\u865f\u3002"}, {"TIME_PERIOD", "\u6642\u9593\u9031\u671f"}, {"COPY_WIDGET_VALIDATION_MSG", "\u8acb\u9078\u64c7\u8981\u8907\u88fd\u7684\u9801\u9762\u3002"}, {"COPY_WIDGET_HEADER", "\u8907\u88fd Widget"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "\u641c\u5c0b\u5b57\u4e32\u4e2d\u6c92\u6709\u9069\u7528\u65bc\u6b64 Widget \u7684\u95dc\u9375\u5b57"}, {"IGNORED_INVALID_SEARCH_FILTER", "\u5ffd\u7565\u7121\u6548\u7684\u641c\u5c0b\u7be9\u9078\u5668\u3002"}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "\u4e00\u500b\u6216\u591a\u500b GMSVP \u57f7\u884c\u500b\u9ad4\u6c92\u6709\u5730\u7406\u4f4d\u7f6e\u3002"}, {"NDA_NG_REPORTING_WIDGET_MSG", "\u5831\u544a\u7121\u6cd5\u7522\u751f."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "\u8b66\u5831\u8a0a\u606f"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u6700\u5f8c\u5831\u544a\u6642\u9593"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "\u8b66\u5831\u985e\u578b"}, {"LOGS_WIDGET_COL_MESSAGE", "\u8a0a\u606f"}, {"LOGS_WIDGET_COL_DATE", "\u65e5\u671f"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "\u7528\u6236\u8a73\u60c5"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "\u4e0a\u6b21\u8a2a\u554f\u6642\u9593"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "\u8aaa\u660e"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "\u9810\u5b9a\u6642\u9593\uff08\u7576\u5730\u6642\u9593\uff09"}, {"DSB_CONFIRM_DELETE_WIDGET", "\u6b64\u64cd\u4f5c\u5c07\u522a\u9664\u8a72 Widget\uff0c\u662f\u5426\u7e7c\u7e8c\uff1f"}, {"DSB_SEARCH_DIALOG_MESG", "\u9019\u4e9b Widget \u8207\u4ee5\u4e0b\u9805\u76ee\u7684\u7d50\u679c\u76f8\u7b26 "}, {"DSB_SEARCH_DIALOG_HEADER", "\u5176\u4ed6\u641c\u5c0b\u7d50\u679c"}, {"DSB_CLEARHISTORY_MESG", "\u662f\u5426\u6e05\u9664\u6240\u6709\u641c\u5c0b\u6b77\u53f2\u8a18\u9304\uff1f"}, {"DSB_CLEARHISTORY_HDR", "\u641c\u5c0b\u6b77\u53f2\u8a18\u9304"}, {"DSB_ADDNEW_WIDGET_LBL", "\u65b0\u589e Widget "}, {"DSB_GENSTTINGS_HDR", "\u4e00\u822c\u8a2d\u5b9a "}, {"DSB_ASSOCPROD_HDR", "\u76f8\u95dc\u7522\u54c1 "}, {"DSB_SUBALERTS_HDR", "\u5305\u62ec\u7684\u5b50\u8b66\u793a "}, {"DSB_WIDGETTITLE_LBL", "\u6a19\u984c\uff1a "}, {"DSB_NOFITEMS_LBL", "\u9805\u76ee\u6578\uff1a "}, {"DSB_REFINT_LBL", "\u91cd\u65b0\u6574\u7406\u9593\u9694\uff1a "}, {"DSB_ALERTSTRIGGERED_LBL", "\u986f\u793a\u6700\u8fd1\u4e00\u6bb5\u6642\u9593\u5167\u89f8\u767c\u7684\u8b66\u793a\uff1a "}, {"DSB_NEWSUBALERTS_LBL", "\u65b0\u7684\u5b50\u8b66\u793a\uff1a "}, {"DSB_CUSTRSSURL_LBL", "\u81ea\u8a02 RSS URL\uff1a "}, {"DSB_WRAPTEXT_LBL", "\u81ea\u52d5\u63db\u5217\uff1a "}, {"DSB_ADDPAGE_HDR", "\u65b0\u589e\u9801\u9762 "}, {"DSB_ADDPAGE_LBL", "\u9801\u9762\u6a19\u984c\uff1a "}, {"DSB_MAPLOCATIONDLG_HDR", "\u65b0\u589e/\u7de8\u8f2f\u4f4d\u7f6e"}, {"DSB_ADDRESS_LBL", "\u5730\u5740\uff1a "}, {"DSB_GEOLOCATION_LBL", "\u5730\u7406\u4f4d\u7f6e\uff1a "}, {"DSB_DELPAGE_LBL", "\u7cfb\u7d71\u7522\u751f\u7684\u9801\u9762\uff0c\u7121\u6cd5\u522a\u9664\u3002"}, {"DSB_DELPAGE_HDR", "\u662f\u5426\u522a\u9664\u9801\u9762\uff1f"}, {"DSB_DELPAGECONFIRM_MSG", "\u662f\u5426\u8981\u522a\u9664\u8a72\u9801\u9762\uff1f"}, {"CZ_YES", "\u662f"}, {"CZ_CERT_ISSUER", "\u8b49\u66f8\u9812\u767c\u8005"}, {"CZ_SUB_DN", "\u4f7f\u7528\u8005\u8b58\u5225\u540d\u7a31"}, {"CZ_CERT_SN", "\u8b49\u66f8\u5e8f\u865f"}, {"CZ_VALID_FROM", "\u6709\u6548\u671f\u81ea"}, {"CZ_EXPIRES_ON", "\u5230\u671f\u65e5"}, {"CZ_STATUS", "\u72c0\u614b"}, {"CZ_REQ_GEN", "\u7522\u751f\u7684\u8acb\u6c42"}, {"CZ_SUB_KEY_ID", "\u4f7f\u7528\u8005\u91d1\u9470\u8b58\u5225\u78bc"}, {"CZ_CRL_STATUS", "CRL \u72c0\u614b"}, {"CZ_CRL_EXPIRES_ON", "CRL \u5230\u671f\u65e5"}, {"CZ_CRL_REQUIRED", "\u9700\u8981 CRL"}, {"CZ_CRL_AUTO_URL", "CRL \u81ea\u52d5\u66f4\u65b0 URL"}, {"CZ_HEADER", "\u8b49\u66f8\u548c\u8b49\u66f8\u8acb\u6c42"}, {"CZ_NAME", "\u540d\u7a31"}, {"CZ_TYPE", "\u985e\u578b"}, {"CZ_VALIDATED", "\u5df2\u9a57\u8b49"}, {"CZ_EXPIRES", "\u5230\u671f"}, {"CZ_DETAILS", "\u8a73\u7d30\u8cc7\u6599"}, {"CZ_CONFIGURE", "\u8a2d\u5b9a"}, {"CZ_DELETE_CERT", "\u522a\u9664\u6b64\u8b49\u66f8"}, {"CZ_CANT_DELETE_CERT", "\u9019\u662f\u4e00\u500b\u7121\u6cd5\u522a\u9664\u7684\u5167\u5efa\u8b49\u66f8"}, {"CZ_EMAIL_CERT", "\u4f7f\u7528\u96fb\u5b50\u90f5\u4ef6\u50b3\u9001\u6b64\u8b49\u66f8"}, {"CZ_CANT_EMAIL_CERT", "\u53ea\u6709\u532f\u5165\u7684\u672c\u6a5f\u8b49\u66f8\u548c\u7c3d\u540d\u8acb\u6c42\u624d\u80fd\u4f7f\u7528\u96fb\u5b50\u90f5\u4ef6\u50b3\u9001"}, {"CZ_IMPORT_CERT_CRL", "\u532f\u5165\u8b49\u66f8\u64a4\u92b7\u6e05\u55ae"}, {"CZ_UPLOAD_SIGNED_CERT", "\u4e0a\u8f09\u7c3d\u540d\u7684\u8b49\u66f8"}, {"CZ_CERT_SEARCH", "\u8b49\u66f8\u641c\u5c0b"}, {"CZ_CERT_SELECTED", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u9a57\u8b49\u8a72\u8b49\u66f8"}, {"CZ_SURE", "\u662f\u5426\u78ba\u5b9a\u8981\u7e7c\u7e8c"}, {"CZ_CERTS_SELECTED", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u4ee5\u4e0b\u8b49\u66f8\u3002"}, {"CZ_PLZ_SELECT", "\u8acb\u9078\u64c7\u8981\u522a\u9664\u7684\u8b49\u66f8\u3002"}, {"CZ_VIEW_STYLE", "\u8b49\u66f8\u6aa2\u8996\u6a23\u5f0f"}, {"CZ_ALL_CERTS", "\u6240\u6709\u8b49\u66f8"}, {"CZ_IMPORT_CERTS", "\u532f\u5165\u7684\u8b49\u66f8\u548c\u8acb\u6c42"}, {"CZ_BUILTIN_CERTS", "\u5167\u5efa\u8b49\u66f8"}, {"CZ_INCLUDE_EXPIRED_CERTS", "\u5305\u62ec\u904e\u671f\u7684\u5167\u5efa\u8b49\u66f8"}, {"CZ_IMPORT", "\u532f\u5165..."}, {"CZ_NEW_REQ", "\u65b0\u7c3d\u540d\u8acb\u6c42..."}, {"CZ_DEL_CERTS", "\u522a\u9664\u8b49\u66f8"}, {"CZ_REQUIRE_CERT", "\u532f\u5165\u9700\u8981\u8b49\u66f8\u540d\u7a31\u3002"}, {"CZ_IMPORT_REQUIRE_FILE", "\u532f\u5165\u9700\u8981\u8b49\u66f8\u6a94\u6848\u3002"}, {"CZ_NO_DOT", "\u8b49\u66f8\u540d\u7a31\u7121\u6548\u3002\u8a72\u540d\u7a31\u4e2d\u4e0d\u5141\u8a31\u4f7f\u7528\u4efb\u4f55\u300c.\u300d\u3002"}, {"CZ_IMPORT_REQUIRE_CMP", "\u532f\u5165\u9700\u8981\u8b49\u66f8\u7ba1\u7406\u5bc6\u78bc\u3002"}, {"CZ_IMPORT_CERT", "\u532f\u5165\u8b49\u66f8"}, {"CZ_IMPORT_LOCAL", "\u5f9e PKCS#12\uff08.p12 \u6216 .pfx\uff09\u7de8\u78bc\u6a94\u6848\u532f\u5165\u672c\u6a5f\u6700\u7d42\u4f7f\u7528\u8005\u8b49\u66f8\u53ca\u79c1\u5bc6\u91d1\u9470"}, {"CZ_IMPORT_CA", "\u5f9e PKCS#7 (.p7b)\u3001PEM (.pem) \u6216 DER\uff08.der \u6216 .cer\uff09\u7de8\u78bc\u6a94\u6848\u532f\u5165 CA \u8b49\u66f8"}, {"CZ_CERT_NAME", "\u8b49\u66f8\u540d\u7a31"}, {"CZ_CMP", "\u8b49\u66f8\u7ba1\u7406\u5bc6\u78bc"}, {"CZ_SEL_FILE", "\u8acb\u9078\u64c7\u8981\u532f\u5165\u7684\u6a94\u6848"}, {"CZ_SPECIFY_FILE", "\u8acb\u6307\u5b9a\u8981\u532f\u5165\u7684\u6a94\u6848"}, {"CZ_UPLOAD_CERT", "\u4e0a\u8f09\u8b49\u66f8"}, {"CZ_UPLOAD_SIGN_CERT", "\u4e0a\u8f09\u7c3d\u540d\u8acb\u6c42\u7684\u5df2\u7c3d\u540d\u8b49\u66f8"}, {"CZ_SEL_UPLOAD_FILE", "\u8acb\u9078\u64c7\u8981\u4e0a\u8f09\u7684\u6a94\u6848"}, {"CZ_FILE_FORMAT", "\u6a94\u6848\u61c9\u70ba PEM (.pem) \u6216 DER\uff08.der \u6216 .cer\uff09\u7de8\u78bc"}, {"CZ_EXPORT_CERT", "\u532f\u51fa\u8b49\u66f8"}, {"CZ_EXPORT_CERT_REQ", "\u532f\u51fa\u8b49\u66f8\u8acb\u6c42"}, {"CZ_CERT_EMAIL_CONTENT", "\u5df2\u7522\u751f PKCS#10 \u8a8d\u8b49\u8acb\u6c42\u4e26\u53ef\u7528\u65bc\u50b3\u9001\u96fb\u5b50\u90f5\u4ef6\u3002\u8acb\u5c07\u6b64\u6a94\u6848\u5132\u5b58\u5230\u672c\u6a5f\u78c1\u789f\u4e0a\uff0c\u7528\u65bc\u63d0\u4ea4\u81f3\u8a3b\u518a\u6216\u8b49\u66f8\u9812\u767c\u6a5f\u69cb\u3002\u8a72\u6a94\u6848\u5c07\u4ee5 PEM \u8b49\u66f8\u8acb\u6c42\u683c\u5f0f\u5132\u5b58\uff0c\u9810\u8a2d\u60c5\u6cc1\u4e0b\u4f5c\u70ba"}, {"CZ_CHANGE_FILE_NAME", "\uff08\u53ef\u5728\u4e0b\u8f09\u6642\u6839\u64da\u9700\u8981\u8b8a\u66f4\u6a94\u6848\u540d\u7a31\uff09\u3002"}, {"CZ_SPECIFY_URL", "\u8acb\u6307\u5b9a\u4e00\u500b CRL URL\u3002"}, {"CZ_SPECIFY_CRL_FILE", "\u8acb\u6307\u5b9a\u8981\u532f\u5165\u7684 CRL \u6a94\u6848"}, {"CZ_INVALID_FILE", "\u9078\u5b9a\u7684\u6a94\u6848\u683c\u5f0f\u7121\u6548\u3002"}, {"CZ_SPECIFY_VALID_LC", "\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u672c\u6a5f\u8b49\u66f8\u6a94\u6848\u3002"}, {"CZ_SPECIFY_VALID_CA", "\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684 CA \u8b49\u66f8\u6a94\u6848\u3002"}, {"CZ_SPECIFY_VALID_CRL", "\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684 CRL \u6a94\u6848\u3002"}, {"CZ_SPECIFY_VALID_SIGNED", "\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u7c3d\u540d\u8b49\u66f8\u6a94\u6848\u3002"}, {"CZ_IMPORT_CRL", "\u532f\u5165 CRL"}, {"CZ_IMPORT_CRL_FULL", "\u532f\u5165\u8b49\u66f8\u64a4\u92b7\u6e05\u55ae"}, {"CZ_IMPORT_CRL_FILE", "\u76f4\u63a5\u5f9e PEM (.pem) \u6216 DER\uff08.der \u6216 .crl\uff09\u7de8\u78bc\u6a94\u6848\u532f\u5165 CRL"}, {"CZ_SEL_CRL_FILE", "\u9078\u64c7\u8981\u532f\u5165\u7684 CRL \u6a94\u6848"}, {"CZ_AUTO_IMPORT_CRL", "\u900f\u904e HTTP \u5b9a\u671f\u81ea\u52d5\u532f\u5165 CRL"}, {"CZ_CRL_LOC", "\u8f38\u5165 CRL \u7684\u4f4d\u7f6e (URL)"}, {"CZ_INVALIDATE_CERTS", "\u5982\u679c CRL \u532f\u5165\u6216\u8655\u7406\u5931\u6557\uff0c\u5247\u8b49\u66f8\u548c\u5b89\u5168\u95dc\u806f\u5931\u6548"}, {"CZ_CMP_REQUIRE", "\u9700\u8981\u8b49\u66f8\u7ba1\u7406\u5bc6\u78bc\u624d\u80fd\u532f\u51fa\u8b49\u66f8"}, {"CZ_CERT_NAME_REQUIRE", "PKCS10 \u7522\u751f\u9700\u8981\u8b49\u66f8\u540d\u7a31\u3002"}, {"CZ_CERT_NAME_IN_USE", "\u8b49\u66f8\u540d\u7a31\u5df2\u7d93\u4f7f\u7528\u3002\u8acb\u9078\u64c7\u53e6\u4e00\u540d\u7a31\u3002"}, {"CZ_SUB_DN_REQUIRE", "PKCS10 \u7522\u751f\u81f3\u5c11\u9700\u8981\u4e00\u500b\u4f7f\u7528\u8005\u540d\u7a31\u5c6c\u6027\u3002"}, {"CZ_CN_TWO_CHARS", "\u570b\u5bb6\u6216\u5730\u5340\u540d\u7a31\u61c9\u70ba\u5169\u500b\u5b57\u5143"}, {"CZ_DOMAIN_INVALID", "\u4f7f\u7528\u8005\u5099\u7528\u540d\u7a31\u4e2d\u7684\u7db2\u57df\u540d\u7a31\u7121\u6548\u3002"}, {"CZ_IP_INVALID", "\u4f7f\u7528\u8005\u5099\u7528\u540d\u7a31\u7684 IP \u4f4d\u5740\u7121\u6548\u3002"}, {"CZ_EMAIL_INVALID", "\u4f7f\u7528\u8005\u5099\u7528\u540d\u7a31\u4e2d\u7684\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u7121\u6548\u3002"}, {"CZ_CERT_REQ", "\u8b49\u66f8\u7c3d\u540d\u8acb\u6c42"}, {"CZ_GEN_CERT_REQ", "\u7522\u751f\u8b49\u66f8\u7c3d\u540d\u8acb\u6c42"}, {"CZ_CERT_ALIAS", "\u8b49\u66f8\u5225\u540d"}, {"CZ_COUNTRY", "\u570b\u5bb6\u6216\u5730\u5340"}, {"CZ_STATE", "\u7701/\u81ea\u6cbb\u5340"}, {"CZ_LOC", "\u7e23\u5e02\u6216\u7e23"}, {"CZ_COMPANY", "\u516c\u53f8\u6216\u7d44\u7e54"}, {"CZ_LOC_CITY", "\u7e23\u5e02\u3001\u5e02\u6216\u7e23"}, {"CZ_DEPT", "\u90e8\u9580"}, {"CZ_GROUP", "\u7fa4\u7d44"}, {"CZ_TEAM", "\u5c0f\u7d44"}, {"CZ_CNAME", "\u516c\u7528\u540d\u7a31"}, {"CZ_SN", "\u5e8f\u865f"}, {"CZ_EMAIL", "\u96fb\u5b50\u90f5\u4ef6\u5730\u5740"}, {"CZ_SUB_ALT_NAME", "\u4f7f\u7528\u8005\u5099\u7528\u540d\u7a31\uff08\u53ef\u9078\uff09"}, {"CZ_DOMAIN_NAME", "\u7db2\u57df\u540d\u7a31"}, {"CZ_IPV4", "IPv4 \u4f4d\u5740"}, {"CZ_SUB_KEY_TYPE", "\u4f7f\u7528\u8005\u91d1\u9470\u985e\u578b"}, {"CZ_SIG_ALGORITHM", "\u7c3d\u7ae0\u6f14\u7b97\u6cd5"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "\u4f7f\u7528\u8005\u91d1\u9470\u5927\u5c0f"}, {"CZ_NO_CERTS", "\u672a\u627e\u5230\u8b49\u66f8"}, {"IMPORT", "\u532f\u5165"}, {"CZ_SCEP_CONFIG", "SCEP \u8a2d\u5b9a"}, {"CZ_CSR_LIST", "CSR \u6e05\u55ae"}, {"CZ_NO_CSR", "\u7121 CSR"}, {"CZ_CHALLENGE_PWD", "\u6311\u6230\u5bc6\u78bc\uff08\u53ef\u9078\uff09"}, {"CZ_CA_URL", "CA URL"}, {"CZ_REQ_COUNT", "\u8acb\u6c42\u8a08\u6578"}, {"CZ_POLL_INTERVAL", "\u8f2a\u8a62\u9593\u9694\uff08\u79d2\uff09"}, {"CZ_POLL_TIME", "\u6700\u5927\u8f2a\u8a62\u6642\u9593\uff08\u79d2\uff09"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA URL \u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"CZ_GEN_CSR", "\u6c92\u6709\u53ef\u7528\u7684 CSR\uff0c\u8acb\u81f3\u5c11\u7522\u751f\u4e00\u500b"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "\u4f86\u81ea\u9078\u5b9a\u7be9\u9078\u5668\u7684\u6240\u6709\u8a2d\u5b9a\u90fd\u5c07\u88ab\u63a8\u9001\u5230\u9078\u5b9a\u7fa4\u7d44\u7bc0\u9ede\u4e0b\u7684\u6240\u6709\u88dd\u7f6e\u3002"}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "\u4f86\u81ea\u9078\u5b9a\u7be9\u9078\u5668\u7684\u6240\u6709\u8a2d\u5b9a\u90fd\u5c07\u5f9e\u9078\u5b9a\u88dd\u7f6e\u7684\u7236\u7bc0\u9ede\u7e7c\u627f\u3002"}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "\u4f86\u81ea\u9078\u5b9a\u7be9\u9078\u5668\u7684\u6240\u6709\u8a2d\u5b9a\u90fd\u5c07\u5f9e\u9078\u5b9a\u7fa4\u7d44\u7bc0\u9ede\u63a8\u9001\u5230\u7236\u7bc0\u9ede\u3002<br>\u8981\u5c07\u8a2d\u5b9a\u5957\u7528\u5230\u7236\u7bc0\u9ede\u4e0b\u7684\u6240\u6709\u88dd\u7f6e\uff08\u9078\u5b9a\u7bc0\u9ede\u53ca\u5176\u5b50\u7bc0\u9ede\u9664\u5916\uff09\uff0c\u8acb\u5728\u300c\u9810\u89bd\u300d\u87a2\u5e55\u4e2d\u9032\u884c\u76f8\u61c9\u7684\u9078\u64c7\u3002"}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "\u4f86\u81ea\u9078\u5b9a\u7be9\u9078\u5668\u7684\u6240\u6709\u8a2d\u5b9a\u90fd\u5c07\u5f9e\u9078\u5b9a\u88dd\u7f6e\u63a8\u9001\u5230\u7236\u7bc0\u9ede\u3002<br>\u8981\u5c07\u8a2d\u5b9a\u5957\u7528\u5230\u7236\u7bc0\u9ede\u4e0b\u7684\u6240\u6709\u88dd\u7f6e\uff08\u9078\u5b9a\u88dd\u7f6e\u9664\u5916\uff09\uff0c\u8acb\u5728\u300c\u9810\u89bd\u300d\u87a2\u5e55\u4e2d\u9032\u884c\u76f8\u61c9\u7684\u9078\u64c7\u3002"}, {"WS_URI_HEADER", "\u516c\u7528 URI"}, {"WS_URI_INSTRUCTIONS", "\u8f38\u5165\u6b64\u90e8\u7f72\u7684\u516c\u7528\u4f3a\u670d\u5668\u540d\u7a31\u3002\u6b64\u540d\u7a31\u5c07\u7528\u65bc\u5b58\u53d6\u6b64\u4f3a\u670d\u5668\u4e0a\u7684 Web \u5b58\u53d6\u4e26\u5c07\u5305\u62ec\u5728\u5d4c\u5165\u5f0f\u4ea4\u53c9\u9023\u7d50\u4e2d\u3002"}, {"WS_URI_NOTE", "\u8a3b\uff1a\u516c\u7528\u4f3a\u670d\u5668\u9023\u63a5\u57e0\u7528\u65bc\u5f9e\u516c\u7528\u7db2\u57df\u5b58\u53d6 GMS Web \u670d\u52d9\u3002\u8981\u4fee\u6539 GMS \u5728\u5176\u4e0a\u57f7\u884c Web \u670d\u52d9\u7684\u9023\u63a5\u57e0\uff0c\u8acb\u5c0e\u89bd\u5230 System Interface/Deployment/Settings"}, {"WS_DEPLOYMENT_HEADER", "GMS \u90e8\u7f72"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "\u9078\u64c7\u8981\u8a2d\u5b9a Web \u670d\u52d9\u7684\u90e8\u7f72\u3002"}, {"WS_DEPLOYMENT_ERROR", "\u6c92\u6709\u76ee\u524d\u6d3b\u52d5\u7684\u5df2\u6388\u6b0a\u90e8\u7f72"}, {"WS_STATUS_HEADER", "Web \u670d\u52d9"}, {"WS_SERVICES_ERROR", "\u6c92\u6709\u627e\u5230\u6b64\u90e8\u7f72\u7684 Web \u670d\u52d9"}, {"WS_DEPLOYMENTS_EMPTY", "\u7121\u6cd5\u7372\u53d6\u90e8\u7f72\u6e05\u55ae\u3002\u8acb\u8a3b\u518a GMSVP \u7684\u6b64\u57f7\u884c\u500b\u9ad4\u3002"}, {"WS_DISTRIBUTED_HEADER", "\u5206\u6563\u5f0f\u57f7\u884c\u500b\u9ad4"}, {"WS_DISTRIBUTED_EMPTY", "\u6c92\u6709\u8a2d\u5b9a\u7528\u65bc\u6b64\u4f3a\u670d\u5668\u7684\u5206\u6563\u5f0f\u57f7\u884c\u500b\u9ad4"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "\u5957\u7528\u7bc4\u672c\uff1a "}, {"HM_APPLY_RECORDING_TASK_DESC", "\u5957\u7528\u8a18\u9304\uff1a "}, {"LM_CONFIRM_DELETE_RULE", "\u662f\u5426\u78ba\u5b9a\u8981\u522a\u9664\u9078\u5b9a\u7684\u898f\u5247\uff1f"}, {"LM_SUCCESS_DELETE_RULE", "\u898f\u5247\u522a\u9664\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_DELETE_RULE", "\u7121\u6cd5\u6210\u529f\u522a\u9664\u9078\u5b9a\u7684\u898f\u5247\u3002"}, {"LM_SUCCESS_UPDATE_RULE", "\u898f\u5247\u66f4\u65b0\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_UPDATE_RULE", "\u7121\u6cd5\u6210\u529f\u66f4\u65b0\u898f\u5247\u3002"}, {"LM_DUPLICATE_STMT_NAME", "\u5177\u6709\u76f8\u540c\u540d\u7a31\u7684\u898f\u5247\u5df2\u7d93\u5b58\u5728\u3002\\n\u8acb\u70ba\u898f\u5247\u8f38\u5165\u4e00\u500b\u552f\u4e00\u7684\u540d\u7a31"}, {"LM_RULE_DESTINATION_EMPTY", "\u76ee\u6a19\u70ba\u7a7a\u767d\u3002\\n\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u9805\u76ee\u3002"}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "\u76ee\u6a19\u4e0d\u80fd\u8d85\u904e 256 \u500b\u5b57\u5143\u3002\\n\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u9805\u76ee\u3002"}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "\u5fc5\u9808\u6307\u5b9a\u9078\u5b9a\u985e\u578b\u7684\u76ee\u6a19\u503c\u3002\\n\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u9805\u76ee\u3002"}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "\u5fc5\u9808\u70ba\u6bcf\u500b\u76ee\u6a19\u6307\u5b9a\u6392\u7a0b\u3002\\n\u8acb\u9078\u64c7\u4e00\u500b\u6709\u6548\u7684\u6392\u7a0b\u6216\u6392\u7a0b\u7fa4\u7d44\u3002"}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "\u6b64\u9801\u9762\u4e2d\u9078\u5b9a\u76ee\u6a19\u7684\u7db2\u57df\u8207\u4e0a\u4e00\u9801\\n\u9078\u5b9a\u56b4\u91cd\u6027\u7684\u7db2\u57df\u4e0d\u76f8\u7b26\u3002\\n\\n\u5f9e\u76f8\u540c\u7684\u7db2\u57df\u5167\u9078\u53d6\u7269\u4ef6\u975e\u5e38\u91cd\u8981\u3002\\n\u5982\u679c\u9078\u5b9a\u7684\u56b4\u91cd\u6027\u4e0d\u6b63\u78ba\uff0c\u8acb\u50b3\u56de\u4e26\u5f9e\u9810\u671f\u7684\u7db2\u57df\u4e2d\u9078\u53d6\u56b4\u91cd\u6027\u3002\\n\u5426\u5247\uff0c\u5f9e\u76f8\u7b26\u56b4\u91cd\u6027\u7684\u7db2\u57df\u4e2d\u9078\u64c7\u4e00\u500b\u76ee\u6a19\u3002"}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "\u6b64\u9801\u9762\u4e2d\u9078\u5b9a\u6392\u7a0b\u7684\u7db2\u57df\u8207\u4e0a\u4e00\u9801\\n\u9078\u5b9a\u56b4\u91cd\u6027\u7684\u7db2\u57df\u4e0d\u76f8\u7b26\u3002\\n\\n\u5f9e\u76f8\u540c\u7684\u7db2\u57df\u5167\u9078\u53d6\u7269\u4ef6\u975e\u5e38\u91cd\u8981\u3002\\n\u5982\u679c\u9078\u5b9a\u7684\u56b4\u91cd\u6027\u4e0d\u6b63\u78ba\uff0c\u8acb\u50b3\u56de\u4e26\u5f9e\u9810\u671f\u7684\u7db2\u57df\u4e2d\u9078\u53d6\u56b4\u91cd\u6027\u3002\\n\u5426\u5247\uff0c\u5f9e\u76f8\u7b26\u56b4\u91cd\u6027\u7684\u7db2\u57df\u4e2d\u9078\u64c7\u4e00\u500b\u6392\u7a0b\u3002"}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "\u7121\u6cd5\u8a2d\u5b9a\u63a7\u5236\u5217\u72c0\u614b\u3002"}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "\u7121\u6cd5\u8a2d\u5b9a\u81ea\u52d5\u6372\u52d5\u72c0\u614b\u3002"}, {"LM_READER_START_SUCCESS", "\u5373\u6642\u76e3\u8996\u8b80\u53d6\u5668\u5df2\u555f\u52d5\u3002"}, {"LM_READER_START_FAILURE", "\u7121\u6cd5\u555f\u52d5\u5373\u6642\u76e3\u8996\u8b80\u53d6\u5668\u3002\u8acb\u6aa2\u67e5\u8a2d\u5b9a\u7d44\u614b\u3002\\n \uff08\u8a3b\uff1a\u6307\u5b9a\u7684\u8f49\u5bc4\u4f4d\u5740\u548c\u9023\u63a5\u57e0\u61c9\u53ef\u5f9e\u4e3b\u63a7\u53f0/Web \u4f3a\u670d\u5668\u9032\u884c\u5b58\u53d6\uff09\u3002"}, {"LM_READER_STOP_SUCCESS", "\u5373\u6642\u76e3\u8996\u8b80\u53d6\u5668\u5df2\u505c\u6b62\u3002"}, {"LM_READER_STOP_FAILURE", "\u7121\u6cd5\u505c\u6b62\u5373\u6642\u76e3\u8996\u8b80\u53d6\u5668\u3002"}, {"LM_EC_DISABLED", "Syslog \u8f49\u5bc4\u76ee\u524d\u5df2\u505c\u7528\u3002<br>Syslog \u5fc5\u9808\u8f49\u5bc4\u5230\u4e8b\u4ef6\u7ba1\u7406\u54e1\u670d\u52d9\u4ee5\u9032\u884c\u76e3\u8996\u3002<br>\u8981\u555f\u7528 Syslog \u8f49\u5bc4\u4ee5\u9032\u884c\u76e3\u8996\uff0c\u8acb\u6309\u4e00\u4e0b\u4e0a\u9762\u63a7\u5236\u5217\u4e2d\u7684\u300c\u8a2d\u5b9a\u300d\u3002"}, {"LM_READER_NO_ALERT_MSG", "\u8b80\u53d6\u5668\u672a\u6536\u5230\u4efb\u4f55\u65b0\u8b66\u793a\u3002<br>\u8a3b\uff1a\u5982\u679c\u554f\u984c\u4ecd\u7136\u5b58\u5728\uff0c\u8acb\u6aa2\u67e5\u76e3\u8996\u5668\u8a2d\u5b9a\u548c\u88dd\u7f6e\u7684 syslog \u8a2d\u5b9a\u3002"}, {"LM_READER_STOPPED_MSG", "\u8b80\u53d6\u5668\u76ee\u524d\u5df2\u505c\u6b62\u3002<br>\u8acb\u900f\u904e\u6309\u4e00\u4e0b\u4e0a\u9762\u63a7\u5236\u5217\u4e2d\u7684\u300c\u555f\u52d5\u300d\u6309\u9215\u555f\u52d5\u8b80\u53d6\u5668\u3002"}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "\u60a8\u7121\u6b0a\u5b58\u53d6\u8a2d\u5099\u3002<br>\u5982\u679c\u60a8\u60f3\u76e3\u8996\u4efb\u4f55\u6b64\u985e\u8a2d\u5099\u8f49\u5bc4\u7684 syslog\uff0c\u8acb\u806f\u7d61\u60a8\u7684\u7ba1\u7406\u54e1\u3002"}, {"LM_READER_ERROR_MSG", "\u9047\u5230\u932f\u8aa4\u3002<br>\u8655\u7406\u5373\u6642\u76e3\u8996\u5668\u8b80\u53d6\u5668\u6536\u96c6\u6642\u767c\u751f\u4f8b\u5916\u72c0\u6cc1\u3002"}, {"LM_READER_SOCKET_ERROR_MSG", "\u9047\u5230\u932f\u8aa4\u3002<br>\u555f\u52d5\u5373\u6642\u76e3\u8996\u5668\u8b80\u53d6\u5668\u6642\u767c\u751f\u4f8b\u5916\u72c0\u6cc1\u3002<br>\u4f8b\u5916\u72c0\u6cc1\u8a73\u7d30\u8cc7\u6599\uff1a "}, {"LM_FAILURE_UPDATE_SETTINGS", "\u7121\u6cd5\u66f4\u65b0\u5373\u6642\u76e3\u8996\u5668\u8a2d\u5b9a\u3002"}, {"LM_SUCCESS_UPDATE_SETTINGS", "\u6210\u529f\u66f4\u65b0\u5373\u6642\u76e3\u8996\u5668\u8a2d\u5b9a\u3002"}, {"LM_WARN_ENABLE_EC", "\u4e8b\u4ef6\u7ba1\u7406\u4f7f\u7528Syslog Collector\u6536\u96c6\u548c\u8f49\u767c\u7684\u65e5\u8a8c\uff08Syslog\uff09\u6765\u76e3\u63a7\u7db2\u7d61\u3002\u9019\u4e9b\u65e5\u8a8c\u6839\u64da\u5b9a\u7fa9\u898f\u5247\u88ab\u767c\u9001\u5230\u5f15\u64ce\u505a\u4e8b\u4ef6\u8655\u7406\u3002\\n\\n\u6ce8\u610f\uff1a\u555f\u7528\u6b64\u9078\u9805\u6703\u628a\u6240\u6709\u4ecesyslog Collector\u6536\u5230\u7684\u65e5\u8a8c\u9001\u5230\u4e00\u500b\u4e2d\u592e\u4e8b\u4ef6\u7ba1\u7406\u670d\u52d9. \u4e3a\u4e86\u8655\u7406\u4e8b\u4ef6\uff0c\u6bcf\u4e00\u500b\u65e5\u8a8c\u901a\u8fc7Syslog Collector\u8907\u88fd\uff0c\u9019\u5c07\u63d0\u9ad8\u6574\u500b\u7db2\u7d61\u7684Syslog\u6d41\u91cf."}, {"LM_STMT_CHANGED_MSG_1", "\u60a8\u5df2\u8b8a\u66f4\u9078\u5b9a\u7684\u898f\u5247"}, {"LM_STMT_CHANGED_MSG_2", "\u3002\\n\u79fb\u81f3\u4e0a\u4e00\u87a2\u5e55\uff08\u300c\u898f\u5247\u6e05\u55ae\u300d\u9801\u9762\uff09\u5c07\u610f\u5473\u8457\u907a\u5931\u60a8\u7684\u8b8a\u66f4\u3002\\n\u6309\u4e00\u4e0b\u300c\u78ba\u5b9a\u300d\u79fb\u81f3\u300c\u898f\u5247\u6e05\u55ae\u300d\u9801\u9762\uff0c\u6216\u6309\u4e00\u4e0b\u300c\u53d6\u6d88\u300d\u4ee5\u7e7c\u7e8c\u7de8\u8f2f\u6b64\u898f\u5247\u3002"}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "\u7121\u6cd5\u66f4\u65b0\u5c0d\u63a5\u72c0\u614b\u3002"}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u66f4\u65b0\u6b0a\u9650\u3002"}, {"LM_DELETE_STMT_EMPTY", "\u8acb\u9078\u64c7\u81f3\u5c11\u4e00\u500b\u898f\u5247\u9032\u884c\u522a\u9664\u3002"}, {"LM_STMT_RULE_EMPTY", "\u6c92\u6709\u9078\u64c7\u898f\u5247\u985e\u578b\u3002\\n\u8acb\u9078\u64c7\u4e00\u500b\u898f\u5247\u985e\u578b\u3002"}, {"LM_STMT_RULE_DUPLICATE", "\u5177\u6709\u76f8\u540c\u898f\u5247\u985e\u578b\u548c\u7de8\u8f2f\u5668\u5c6c\u6027\u7684\u898f\u5247\u5df2\u7d93\u5b58\u5728\u3002\\n\u8acb\u70ba\u6b64\u898f\u5247\u9078\u64c7\u552f\u4e00\u7684\u898f\u5247\u5c6c\u6027\u3002"}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "\u8b80\u53d6\u5668\u7684\u8f49\u5bc4\u9023\u63a5\u57e0\u5df2\u8b8a\u66f4\u3002\\n\u8b80\u53d6\u5668\u53ef\u80fd\u9700\u8981\u5e7e\u79d2\u6642\u9593\u624d\u80fd\u6210\u529f\u91cd\u65b0\u555f\u52d5\u3002"}, {"LM_NO_RULE_EDITABLE", "\u9078\u5b9a\u7fa4\u7d44\u4e2d\u6c92\u6709\u53ef\u7de8\u8f2f\u7684\u898f\u5247\u985e\u578b\u3002\n\u8acb\u9078\u64c7\u5176\u4ed6\u7fa4\u7d44/\u898f\u5247\u985e\u578b\u3002"}, {"LM_DISABLE_STMT_EMPTY", "\u8acb\u9078\u64c7\u81f3\u5c11\u4e00\u500b\u898f\u5247\u7528\u65bc\u555f\u7528/\u505c\u7528\u64cd\u4f5c\u3002"}, {"LM_SUCCESS_DISABLE_RULE", "\u898f\u5247\u555f\u7528/\u505c\u7528\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_DISABLE_RULE", "\u7121\u6cd5\u6210\u529f\u555f\u7528/\u505c\u7528\u9078\u5b9a\u7684\u898f\u5247\u3002"}, {"LM_EDIT_RULE_MSG_1", "\u60a8\u5df2\u9078\u64c7\u7de8\u8f2f\u4ee5\u4e0b\u898f\u5247\uff1a\\n"}, {"LM_EDIT_RULE_MSG_2", "\\n\u9078\u5b9a\u7684\u6e05\u55ae\u5305\u542b\u7121\u6cd5\u7de8\u8f2f\u7684\u6240\u6709\u898f\u5247\u3002\\n\\n\u8acb\u9078\u64c7\u5176\u4ed6\u898f\u5247\u4ee5\u7e7c\u7e8c\u3002"}, {"LM_EDIT_RULE_MSG_3", "\\n\u9078\u5b9a\u6e05\u55ae\u5305\u542b\u7121\u6cd5\u7de8\u8f2f\u7684\u898f\u5247\uff08\u900f\u904e * \u6a19\u8a18\uff09\u3002\\n\\n\u662f\u5426\u8981\u7e7c\u7e8c\u7de8\u8f2f\u5176\u9918\u7684\u898f\u5247\uff1f"}, {"LM_DELETE_RULE_MSG_1", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u4ee5\u4e0b\u898f\u5247\uff1a\\n"}, {"LM_DELETE_RULE_MSG_2", "\\n\u9078\u5b9a\u7684\u6e05\u55ae\u5305\u542b\u7121\u6cd5\u522a\u9664\u7684\u6240\u6709\u898f\u5247\u3002\\n\\n\u8acb\u9078\u64c7\u5176\u4ed6\u898f\u5247\u4ee5\u7e7c\u7e8c\u3002"}, {"LM_DELETE_RULE_MSG_3", "\\n\u9078\u5b9a\u6e05\u55ae\u5305\u542b\u7121\u6cd5\u522a\u9664\u7684\u898f\u5247\uff08\u900f\u904e * \u6a19\u8a18\uff09\u3002\\n\\n\u662f\u5426\u8981\u7e7c\u7e8c\u522a\u9664\u5176\u9918\u7684\u898f\u5247\uff1f"}, {"LM_DELETE_RULE_MSG_4", "\\n\u662f\u5426\u8981\u7e7c\u7e8c\uff1f"}, {"MASKED_LIVEMONITOR_MESSAGE", "\u57fa\u65bc\u5f37\u5236\u7684\u96b1\u79c1\u653f\u7b56\u5c07\u4e0d\u986f\u793a\u8b66\u793a\u8a0a\u606f"}, {"MASKED_ADDITIONAL_INFORMATION", "\u57fa\u65bc\u5f37\u5236\u7684\u96b1\u79c1\u653f\u7b56\u5c07\u4e0d\u986f\u793a\u5176\u4ed6\u8cc7\u8a0a"}, {"DSB_NONENGFW_ALERT_TITLE", "\u97cc\u9ad4\u7248\u672c\u8b66\u793a!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "\u6b64 GMS \u6b63\u5728\u7ba1\u7406\u57f7\u884c\u975e\u82f1\u6587\u97cc\u9ad4\u7684 SonicOS \u8a2d\u5099\u3002"}, {"DSB_NONENGFW_ALERT_MSGPART2", "\u8acb\u6ce8\u610f\uff0c\u5728\u9019\u4e9b\u8a2d\u5099\u4e2d\u4ee5\u975e\u82f1\u6587\u5b9a\u7fa9\u7684\u7269\u4ef6\u548c\u7b56\u7565\u5728 GMS UI \u4e2d\u7684\u986f\u793a\u53ef\u80fd\u4e0d\u6b63\u78ba\u3002\u4fee\u6539\u6b64\u985e\u7269\u4ef6\u548c\u7b56\u7565\u4e26\u5c07\u5176\u63a8\u9001\u81f3\u6b64\u985e\u8a2d\u5099\u53ef\u80fd\u4e0d\u6703\u5c0e\u81f4\u9810\u671f\u7684\u7d50\u679c\u3002"}, {"SYSLOGTAIL_STARTED", "Syslog Reader\uff08\u7528\u65bc\u9032\u884c\u5373\u6642 Syslog \u76e3\u8996\uff09\u5df2\u555f\u52d5\u3002"}, {"SYSLOGTAIL_START_FAILED", "\u7121\u6cd5\u555f\u52d5 Syslog Reader\u3002\u8acb\u6aa2\u67e5 Syslog \u8f49\u5bc4\u8a2d\u5b9a\u3002&nbsp;&nbsp;\uff08\u8a3b:\u61c9\u8a72\u53ef\u4ee5\u5f9e\u4e3b\u63a7\u53f0/Web \u4f3a\u670d\u5668\u5b58\u53d6\u6307\u5b9a\u7684\u8f49\u5bc4\u5730\u5740\u548c\u9023\u63a5\u57e0\uff09\u3002"}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog Reader\uff08\u7528\u65bc\u9032\u884c\u5373\u6642 Syslog \u76e3\u8996\uff09\u5df2\u57f7\u884c\uff1b\u672a\u9032\u884c\u4efb\u4f55\u8b8a\u66f4"}, {"SYSLOGTAIL_STOPPED", "Syslog Reader\uff08\u7528\u65bc\u9032\u884c\u5373\u6642 Syslog \u76e3\u8996\uff09\u5df2\u505c\u6b62\u3002"}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog Reader\uff08\u7528\u65bc\u9032\u884c\u5373\u6642 Syslog \u76e3\u8996\uff09\u5df2\u505c\u6b62\uff1b\u672a\u9032\u884c\u4efb\u4f55\u8b8a\u66f4"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "Reader \u672a\u6536\u5230\u4efb\u4f55\u65b0\u7684 syslog\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "\uff08Reader \u4ecd\u6703\u5617\u8a66\u6536\u96c6 syslog\uff09\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "\uff08\u5982\u679c\u554f\u984c\u4f9d\u7136\u5b58\u5728\uff0c\u8acb\u6aa2\u67e5 Syslog Reader \u8a2d\u5b9a\u548c\u9632\u706b\u7246\u8a2d\u5b9a\uff09\u3002"}, {"SYSLOGTAIL_CONFIG_CHECK", "\u8acb\u6aa2\u67e5 Syslog Reader \u8a2d\u5b9a\u548c\u9632\u706b\u7246\u8a2d\u5b9a\u3002"}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "\u672a\u627e\u5230 syslog\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER", "\u8acb\u5617\u8a66\u4fee\u6539\u7be9\u9078\u5b57\u4e32\u4ee5\u7372\u5f97\u66f4\u597d\u7684\u7d50\u679c\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "\uff08\u8a3b:\u5728\u591a\u500b\u5b57\u4e32\u4e4b\u9593\u4f7f\u7528 <b>AND</b> \u6216 <b>OR</b> \u53ef\u7372\u5f97\u66f4\u597d\u7684\u7d50\u679c\uff09\u3002"}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Syslog Reader \u76ee\u524d\u5df2\u505c\u6b62"}, {"SYSLOGTAIL_START", "\u8acb\u555f\u52d5 Syslog Reader\u3002"}, {"SYSLOGTAIL_ERROR", "\u767c\u751f\u932f\u8aa4\u3002"}, {"SYSLOGTAIL_ERROR_MESSAGE", "\u5728\u8655\u7406 syslog \u6536\u96c6\u6642\u51fa\u73fe\u7570\u5e38\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "\u672a\u555f\u7528 Syslog \u8f49\u5bc4\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "\u8acb\u8a2d\u5b9a Syslog \u8f49\u5bc4\u5730\u5740\u548c\u9023\u63a5\u57e0\uff0c\u4e26\u555f\u52d5 Syslog Reader\u3002"}, {"MASKED_SYSLOG_MESSAGE", "\u57fa\u65bc\u5f37\u5236\u7684\u96b1\u79c1\u653f\u7b56\u5c07\u4e0d\u986f\u793a\u5176\u9918\u7684 syslog \u8a0a\u606f"}, {"EVENT_ALERTS_SEARCH", "\u8b66\u793a\u641c\u5c0b"}, {"EVENT_ALERTS_DELETE", "\u522a\u9664\u8b66\u793a"}, {"EVENT_ALERTS_ENABLE_DISABLE", "\u555f\u7528/\u505c\u7528\u8b66\u793a"}, {"EVENT_ALERTS_ADD", "\u65b0\u589e\u8b66\u793a"}, {"EVENT_ALERTS_HEADER", "\u8b66\u793a"}, {"EVENT_ALERTS_ALERT_NAME", "\u540d\u7a31"}, {"EVENT_ALERTS_ALERT_TYPE", "\u8b66\u793a\u985e\u578b"}, {"EVENT_ALERTS_INTERVAL", "\u9593\u9694"}, {"EVENT_ALERTS_DEST_SCHED", "\u76ee\u6a19/\u6392\u7a0b"}, {"EVENT_ALERTS_ENABLED", "\u5df2\u555f\u7528"}, {"EVENT_ALERTS_DOMAIN", "\u7db2\u57df"}, {"EVENT_ALERTS_CONFIGURE", "\u8a2d\u5b9a"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "\u672a\u627e\u5230\u8b66\u793a"}, {"DTF_ANY", "\u4efb\u4f55\u6642\u9593"}, {"DTF_ADD", "\u65b0\u589e\u8a2d\u5099"}, {"DTF_EXECUTE", "\u57f7\u884c"}, {"DTF_ENABLED", "\u5df2\u555f\u7528"}, {"DTF_SEARCH", "\u9810\u8a2d\u4efb\u52d9\u641c\u5c0b"}, {"DTF_NOT_FOUND", "\u672a\u627e\u5230\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_DT", "\u9810\u8a2d\u4efb\u52d9"}, {"DTF_DESC", "\u8aaa\u660e"}, {"DTF_TOU", "\u8a2d\u5099\u985e\u578b"}, {"DTF_DURING", "\u4efb\u52d9\u5efa\u7acb\u6642\u9593"}, {"DTF_NO_DTS", "\u672a\u9078\u64c7\u4efb\u4f55\u8981\u57f7\u884c\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_EXEC", "\u57f7\u884c\u6b64\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_NO_DISABLE", "\u4e0d\u80fd\u505c\u7528\u6b64\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_NO_EXEC", "\u4e0d\u80fd\u57f7\u884c\u6b64\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_SEL_UNITS", "\u9078\u64c7\u8a2d\u5099"}, {"DTF_EXEC_METHOD", "\u57f7\u884c\u65b9\u6cd5"}, {"DTF_ATLEAST_ONE", "\u81f3\u5c11\u9078\u64c7\u4e00\u500b\u8a2d\u5099\u4f86\u57f7\u884c\u4efb\u52d9\u3002"}, {"DTF_EXEC_ALL", "\u5728\u7cfb\u7d71\u4e2d\u7684\u6240\u6709\u8a2d\u5099\u4e0a\u57f7\u884c\u9810\u8a2d\u4efb\u52d9"}, {"DTF_EXEC_FOLL", "\u5728\u6240\u9078\u7684\u4ee5\u4e0b\u8a2d\u5099\u4e0a\u57f7\u884c\u9810\u8a2d\u4efb\u52d9"}, {"DTF_REAPPLY_1", "\u50c5\u7576\u4e4b\u524d\u672a\u5957\u7528\u6642\u52a0\u4ee5\u57f7\u884c"}, {"DTF_REAPPLY_2", "\u50c5\u4e4b\u524d\u672a\u5957\u7528\u81f3\u6240\u9078\u8a2d\u5099\u7684\u4efb\u52d9\u624d\u6703\u57f7\u884c\u3002"}, {"DTF_REAPPLY_3", "\u8a72\u8a2d\u5099\u5c07\u5ffd\u7565\u5df2\u57f7\u884c\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_EXEC_1", "\u5373\u4f7f\u4e4b\u524d\u5df2\u5957\u7528\u4e5f\u5c07\u57f7\u884c"}, {"DTF_EXEC_2", "\u5373\u4f7f\u4e4b\u524d\u5957\u7528\u4e86\u9078\u5b9a\u7684\u6240\u6709\u4efb\u52d9\uff0c\u4ecd\u6703\u5728\u6240\u9078\u8a2d\u5099\u4e0a\u91cd\u65b0\u57f7\u884c\u9019\u4e9b\u4efb\u52d9\u3002"}, {"DTF_ENABLE_SUCCESS", "\u6210\u529f\u66f4\u65b0\u6240\u9078\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_ENABLE_FAIL", "\u7121\u6cd5\u66f4\u65b0\u6240\u9078\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_SCHEDULE_SUCCESS", "\u6210\u529f\u6392\u5b9a\u8981\u57f7\u884c\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_SCHEDULE_FAIL", "\u7531\u65bc\u6240\u9078\u7684\u4efb\u52d9\u4e0d\u9069\u7528\u6216\u8005\u5df2\u57f7\u884c\uff0c\u56e0\u6b64\u672a\u6392\u5b9a\u4efb\u4f55\u9810\u8a2d\u4efb\u52d9\u3002."}, {"AUTOASSIGN_AGENT_HEADER", "\u4ee3\u7406\u6307\u6d3e\u8a2d\u5b9a"}, {"AUTOASSIGN_AGENT_MSG_1", " \u9700\u8981\u4ee3\u7406\u624d\u80fd\u64c1\u6709\u88dd\u7f6e\u4ee5\u9032\u884c\u7ba1\u7406\u3001\u5831\u544a\u548c\u76e3\u6e2c\u3002\u81ea\u52d5\u6307\u6d3e\u4ee3\u7406\u53ef\u78ba\u4fdd\u88dd\u7f6e\u5747\u8861\u5206\u914d\uff0c\u4ee5\u7372\u5f97\u66f4\u597d\u7684\u8cc7\u6e90\u914d\u7f6e\u3001\u6700\u4f73\u5316\u6548\u80fd\u3001\u9069\u7576\u7684\u5132\u5b58\u7a7a\u9593\u548c\u9ad8\u53ef\u7528\u6027\u3002\u6b64\u529f\u80fd\u53ef\u4f9d\u64da\u5728\u300c\u65b0\u589e\u88dd\u7f6e\u300d\u64cd\u4f5c\u671f\u9593\u9078\u64c7\u7684\u53d7\u7ba1\u7406\u6a21\u5f0f\u555f\u7528\u3002 "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "\u4f7f\u7528\u8005\u53ef\u4ee5\u5f9e<i>\u4fee\u6539\u88dd\u7f6e</i>\u5c0d\u8a71\u65b9\u584a\u4e2d\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406\u3002"}, {"AUTOASSIGN_AGENT_MSG_2", "\u4f7f\u7528\u8005\u53ef\u4ee5\u5f9e<i>\u4fee\u6539\u88dd\u7f6e</i>\u5c0d\u8a71\u65b9\u584a\u6216\u4f7f\u7528<i>\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406</i>\u64cd\u4f5c\u4f86\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406\u3002"}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\u50c5\u9650\u73fe\u6709\u7684\u901a\u9053\u6216 LAN\u3001SSL \u7ba1\u7406\u6a21\u5f0f:\u81ea\u52d5\u6307\u6d3e\u50c5\u9069\u7528\u65bc<i>\u73fe\u6709\u901a\u9053</i>\u548c <i>SSL</i> \u6a21\u5f0f\uff0c\u4f46\u662f\u5c0d\u65bc<i>\u7ba1\u7406\u901a\u9053</i>\uff0c\u624b\u52d5\u6307\u6d3e\u70ba\u5fc5\u9700\u9805\u76ee\u3002"}, {"AUTOASSIGN_AGENT_MSG_ALL", "\u6240\u6709\u7ba1\u7406\u6a21\u5f0f:\u81ea\u52d5\u6307\u6d3e\u9069\u7528\u65bc\u6240\u6709\u6a21\u5f0f\u3002\u5c0d\u65bc<i>\u7ba1\u7406\u901a\u9053</i>\u6a21\u5f0f\uff0c\u5fc5\u9808\u5728\u53d7\u7ba1\u7406\u88dd\u7f6e\u4e0a\u5b8c\u6210\u4ee3\u7406\u8a2d\u5b9a\u3002"}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "\u300c\u81ea\u52d5\u6307\u6d3e\u4ee3\u7406\u300d\u5df2\u7d93\u555f\u7528"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "\u300c\u81ea\u52d5\u6307\u6d3e\u4ee3\u7406\u300d\u5df2\u7d93\u505c\u7528"}, {"AUTOASSIGN_AGENT_ENABLE", "\u81ea\u52d5\u555f\u7528\u6307\u6d3e\u4ee3\u7406"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL \u548c\u4f7f\u7528\u73fe\u6709\u901a\u9053\u6216 LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "\u5168\u90e8"}, {"TEMPLATE_SETTINGS_TITLE", "[TW]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[TW]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration(Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[TW]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[TW]Apply Default Configuration"}, {"CUI_NO_FS", "\u672a\u627e\u5230\u6d41\u91cf\u4f3a\u670d\u5668\u3002"}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "TW The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "TW The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\u662f\u5426\u78ba\u5b9a\u8981\u8b8a\u66f4\u8a2d\u5b9a"}, {"LOGCONFIG_SECTITLE_2", "\u65e5\u8a8c\u8a0a\u606f"}, {"LOGCONFIG_DELLABEL", "\u522a\u9664\u4ee5\u4e0b\u65e5\u671f\u4e4b\u524d\u7684\u8a18\u9304\uff1a"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u5929"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u5c0d\u65bc"}, {"LOGCONFIG_DOMAIN", "\u7db2\u57df"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "\u932f\u8aa4\uff1a\u7121\u6cd5\u66f4\u65b0\u8a2d\u5b9a"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\u662f\u5426\u78ba\u5b9a\u8981\u8b8a\u66f4\u6392\u7a0b\uff1f"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\u662f\u5426\u78ba\u5b9a\u8981\u8b8a\u66f4\u65e5\u8a8c\u6a94\u6848\u8a08\u6578\u7684\u6700\u5927\u6578\uff1f"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "\u5c01\u5b58 "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " \u65e5\u8a8c\u8a0a\u606f"}, {"APPLOG_CONFIG_DELETE_MSG_1", "\u8a18\u9304\u6709\u52a9\u65bc\u8ffd\u8e64\u6b64\u7cfb\u7d71\u4e2d\u7684\u6d3b\u52d5\u3002\u9019\u4e9b\u6d3b\u52d5\u76f4\u63a5\u6216\u9593\u63a5\u8207\u4f7f\u7528\u8005\u8d77\u59cb\u7684\u64cd\u4f5c\u76f8\u95dc\u806f\u6216\u8005\u6839\u64da\u7cfb\u7d71\u8d77\u59cb\u7684\u64cd\u4f5c\u3002\u9019\u4e9b\u8a18\u9304\u5c0d\u65bc\u7a3d\u6838\u7dda\u7d22\u548c\u6cd5\u898f\u9075\u5faa\u76ee\u7684\u4ee5\u53ca\u6545\u969c\u6392\u9664\u7cfb\u7d71\u4f5c\u696d\u5747\u9817\u70ba\u91cd\u8981\u3002"}, {"APPLOG_CONFIG_DELETE_MSG_2", "\u4e0d\u518d\u9700\u8981\u5132\u5b58\u5728\u7cfb\u7d71\u4e2d\u7684\u8a18\u9304\u53ef\u4ee5\u624b\u52d5\u522a\u9664\u3002\u9019\u662f\u4e00\u6b21\u6027\u64cd\u4f5c\uff0c\u5c07\u6839\u64da\u6240\u9078\u7684\u65e5\u671f\u57f7\u884c\u522a\u9664\u3002 "}, {"APPLOG_CONFIG_DELETE_MSG_21", "\u6b64\u756b\u9762\u4e2d\u7684\u522a\u9664\u64cd\u4f5c\u5c07\u53ea\u6e05\u7406\u8207\u8b8a\u66f4\u9806\u5e8f\u4e0d\u76f8\u95dc\u7684\u8a18\u9304\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "\u4e0d\u518d\u9700\u8981\u5132\u5b58\u5230\u7cfb\u7d71\u4e2d\u7684\u8a18\u9304\uff0c\u53ef\u4ee5 CSV/HTML \u683c\u5f0f\u532f\u51fa\u4ee5\u53ca\u5f9e\u8cc7\u6599\u5eab\u5378\u8f09\u3002\u5c01\u5b58\u7a0b\u5e8f\u5c07\u5148\u6309\u7167\"\u5c01\u5b58\u8a18\u9304\u6392\u7a0b\"\u5c01\u5b58\u8cc7\u6599\u5230 <i>\u5c01\u5b58dLogs</i> \u76ee\u9304\uff0c\u7136\u5f8c\u5f9e\u8cc7\u6599\u5eab\u522a\u9664\u8cc7\u6599\u3002 "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "\u5c01\u5b58\u64cd\u4f5c\u5c07\u6703\u51fa\u6240\u6709\u8a18\u9304\uff0c\u5305\u62ec\u8207\u8b8a\u66f4\u9806\u5e8f\u76f8\u95dc\u8005\uff0c\u4f46\u662f\u522a\u9664\u5c07\u6703\u7565\u904e\u6e05\u7406\u8b8a\u66f4\u9806\u5e8f\u76f8\u95dc\u7684\u9805\u76ee\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "\u5099\u8a3b\uff1a\u5c0d\u65bc\u975e\u8996\u7a97\u90e8\u7f72\uff1a\u82e5\u8981\u5378\u8f09\u5c01\u5b58\u8a18\u9304\u6a94\u5230\u672c\u6a5f\u78c1\u789f\u6a5f\uff0c\u8acb\u5c0e\u89bd\u5230\u300c\u8a2d\u5099\u300d >\u300c\u7cfb\u7d71\u300d >\u300c\u6a94\u6848\u7ba1\u7406\u54e1\u300d\u756b\u9762\u3002"}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "\u555f\u7528\u5c01\u5b58"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "\u4fdd\u7559 "}, {"APPLOG_CONFIG_ARCHIVE_For", " \u5c0d\u65bc\uff1a"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "\u8a18\u9304\u8a0a\u606f\u6a94\u6578\u91cf\u4e0a\u9650:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "\u5c01\u5b58\u683c\u5f0f\uff1a"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "\u5c01\u5b58\u8a2d\u5b9a"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "\u65e5\u8a8c\u8a0a\u606f\u66f4\u65b0\u6210\u529f"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "\u5c01\u5b58 GMS \u8a18\u9304\u8a0a\u606f"}, {"WF_SETTINGS_TITLE", "\u8a2d\u5b9a"}, {"WF_SETTINGS_MSG_1", "\u5de5\u4f5c\u6d41\u7a0b\u662f\u76e3\u7763\u4e00\u500b\u6216\u591a\u500b\u8a2d\u5099\u7684\u8a2d\u5b9a\u8b8a\u66f4\u7684\u7cfb\u7d71\u3002\u5b83\u5141\u8a31\u57f7\u884c\u5be9\u67e5\u548c\u63d0\u4f9b\u6240\u5efa\u8b70\u8b8a\u66f4\u7684\u610f\u898b\uff0c\u6307\u6d3e\u6240\u6709\u6b0a\u548c\u63d0\u4f9b\u6b0a\u8cac\u7d66\u6240\u6709\u64cd\u4f5c\uff0c\u4ee5\u53ca\u6240\u6709\u5177\u6709\u5b8c\u6574\u8a18\u9304\u7684\u64cd\u4f5c\u4ee5\u9032\u884c\u7a3d\u6838\u3002\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u7ba1\u7406\u662f\u5de5\u4f5c\u6d41\u7a0b\u7684\u5143\u4ef6\uff0c\u53ef\u6aa2\u8996\u8a2d\u5099\u7684\u8b8a\u66f4\uff0c\u5728\u756b\u9762\u4e0a\u9810\u89bd\u8a2d\u5099\u74b0\u5883\u4e2d\u5167\u5d4c\u7684\u8b8a\u66f4\u3002 "}, {"WF_SETTINGS_MSG_2", "\u5099\u8a3b\uff1a\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u548c\u300c\u6838\u51c6\u300d\u7ba1\u7406\u53ef\u5728\u7db2\u57df\u5c64\u7d1a\u555f\u7528/\u505c\u7528\u3002\u505c\u7528\u300c\u6838\u51c6\u300d\u7ba1\u7406\u7368\u7acb\u65bc\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u7ba1\u7406\uff0c\u4f46\u662f\u505c\u7528\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u7ba1\u7406\u4e5f\u6703\u505c\u7528\u300c\u6838\u51c6\u300d\u7ba1\u7406\u3002"}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "\u5373\u4f7f\u5df2\u555f\u7528\uff0c\u5de5\u4f5c\u6d41\u7a0b\u4e5f\u50c5\u9069\u7528\u65bc\u5df2\u4e3b\u52d5\u91dd\u5c0d\u4ee5\u4e0b\u670d\u52d9\u6388\u6b0a\u7684\u8a2d\u5099: "}, {"WF_SETTINGS_ENABLE_COM", "\u505c\u7528\u8b8a\u66f4\u9806\u5e8f\u7ba1\u7406"}, {"WF_SETTINGS_ENABLE_WF", "\u505c\u7528\u6838\u51c6\u7ba1\u7406"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "\u8b8a\u66f4\u9806\u5e8f\u9810\u8a2d\u6392\u7a0b\u8a2d\u5b9a"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u53ef\u6839\u64da\u4ee5\u4e0b\u8a2d\u5b9a\u6392\u7a0b\u5728\u63d0\u4ea4\u6642\u57f7\u884c\u3002\u6307\u5b9a\u9810\u8a2d\u503c\u5c07\u5728\u5efa\u7acb\u65b0\u7684\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u6642\u81ea\u52d5\u4f7f\u7528\u6240\u9078\u7684\u8a2d\u5b9a\u3002"}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "\u6392\u7a0b: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "\u624b\u52d5\u57f7\u884c"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "\u6838\u51c6\u6642\u5373\u523b"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "\u5728"}, {"WF_CONFIG_DELETE_MSG_1", "\u8a18\u9304\u6709\u52a9\u65bc\u8ffd\u8e64\u6b64\u7cfb\u7d71\u4e2d\u7684\u6d3b\u52d5\u3002\u9019\u4e9b\u6d3b\u52d5\u76f4\u63a5\u6216\u9593\u63a5\u8207\u4f7f\u7528\u8005\u8d77\u59cb\u7684\u64cd\u4f5c\u76f8\u95dc\u806f\u6216\u8005\u6839\u64da\u7cfb\u7d71\u8d77\u59cb\u7684\u64cd\u4f5c\u3002\u9019\u4e9b\u8a18\u9304\u5c0d\u65bc\u7a3d\u6838\u7dda\u7d22\u548c\u6cd5\u898f\u9075\u5faa\u76ee\u7684\u4ee5\u53ca\u6545\u969c\u6392\u9664\u7cfb\u7d71\u4f5c\u696d\u5747\u9817\u70ba\u91cd\u8981\u3002"}, {"WF_CONFIG_DELETE_MSG_2", "\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u4e00\u822c\u5728 "}, {"WF_CONFIG_DELETE_MSG_3", " \u5929\u4ee5\u4e0a\uff0c\u4e0d\u518d\u9700\u8981\u5132\u5b58\u5728\u7cfb\u7d71\u4e2d\u8005\uff0c\u5747\u53ef\u624b\u52d5\u522a\u9664\u3002\u9019\u662f\u4e00\u6b21\u6027\u64cd\u4f5c\uff0c\u5c07\u6839\u64da\u6240\u9078\u7684\u65e5\u671f\u57f7\u884c\u522a\u9664\u3002\u6b64\u756b\u9762\u4e2d\u7684\u522a\u9664\u64cd\u4f5c\u5c07\u53ea\u6e05\u7406\u8207\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u76f8\u95dc\u7684\u8cc7\u6599\u3001\u5de5\u4f5c\u548c\u8a18\u9304\u3002"}, {"APPLOG_CONFIG_DEL_DATA", "\u522a\u9664\u4ee5\u4e0b\u7684\u8cc7\u6599:"}, {"FA_UNIT_STATUS_HEADER", "\u88dd\u7f6e\u8a73\u7d30\u8cc7\u6599"}, {"FA_UNIT_STATUS_SERIAL", "\u5e8f\u865f"}, {"FA_UNIT_STATUS_NODE_NAME", "\u88dd\u7f6e\u540d\u7a31"}, {"FA_UNIT_STATUS_MODEL", "\u6a21\u5f0f"}, {"FA_UNIT_STATUS_FIRMWARE", "\u97cc\u9ad4\u7248\u672c"}, {"FA_UNIT_STATUS_IP", "\u53d7\u7ba1\u7406 IP"}, {"FA_UNIT_STATUS_LICENSE", "\u61c9\u7528\u7a0b\u5f0f\u8996\u89ba\u5316"}, {"FA_GROUP_STATUS_HEADER1", "\u97cc\u9ad4\u8a73\u7d30\u8cc7\u6599"}, {"FA_GROUP_STATUS_HEADER2", "\u6d41\u91cf\u5831\u544a\u6388\u6b0a\u72c0\u614b"}, {"FA_GROUP_STATUS_NO_DATA", "\u6c92\u6709\u53ef\u7528\u7684\u8cc7\u6599"}, {"FA_LICENSE_NOT_AVAILABLE", "\u672a\u6388\u6b0a"}, {"FA_LICENSE_AVAILABLE", "\u5df2\u6388\u6b0a"}, {"FA_LICENSE_FREE_TRAIL", "\u514d\u8cbb\u8a66\u7528"}, {"FA_LICENSE_EXPIRED", "\u5df2\u904e\u671f"}, {"FA_GROUP_FIREWALL_COUNT", "\u7cfb\u7d71\u4e2d\u7684\u9632\u706b\u7246"}, {"FA_FLOW_IP1", "\u6d41\u91cf\u4ee3\u7406 1"}, {"FA_FLOW_IP2", "\u6d41\u91cf\u4ee3\u7406 2"}, {"FA_FLOW_AGENT_STATUS", "\u6d41\u91cf\u4ee3\u7406\u72c0\u614b"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "\u9632\u706b\u7246\u8a2d\u5b9a"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN \u901a\u9053"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "\u9060\u7aef IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "\u8cc7\u6599\u4fdd\u7559 (\u5929\u6578)"}, {"FA_FLOW_FORWARDER_IP", "\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {"FA_FLOWS_COLLECTED", "\u5df2\u6536\u96c6\u7684\u6d41\u91cf"}, {"FA_DISK_ALLOCATED", "\u5df2\u914d\u7f6e\u7684\u78c1\u789f"}, {"FA_DISK_USED", "\u5df2\u4f7f\u7528\u7684\u78c1\u789f"}, {"FA_FLOW_STATUS", "\u72c0\u614b"}, {"FA_NO_AGENT", "\u672a\u6307\u6d3e\u6d41\u91cf\u4ee3\u7406"}, {"FA_MODELSUPPORT", "\u6b64\u578b\u865f\u672a\u555f\u7528\u6d41\u91cf\u5831\u544a"}, {"FA_FIRMWARESUPPORT", "\u6d41\u91cf\u5831\u544a\u4e0d\u9069\u7528\u65bc\u6b64\u7248\u672c"}, {"FA_LICENSESUPPORT", "\u7121\u6cd5\u63d0\u4f9b\u61c9\u7528\u7a0b\u5f0f\u8996\u89ba\u5316\u6388\u6b0a\u8cc7\u8a0a"}, {"FA_HEADING", "\u6d41\u91cf\u4ee3\u7406"}, {"FA_FLOW_AGENT", "\u6d41\u91cf\u4ee3\u7406"}, {"FA_FLOW_HEAD_IP1", "\u6d41\u91cf\u4ee3\u7406 1"}, {"FA_FLOW_HEAD_IP2", "\u6d41\u91cf\u4ee3\u7406 2"}, {"FA_FLOW_HEAD_HDD", "\u786c\u789f (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "\u983b\u5bec (%)"}, {"FA_FLOW_FORWARDER_HEAD", "\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {"FA_FLOW_PAIR", "\u6d41\u91cf\u4ee3\u7406\u914d\u5c0d"}, {"FA_FLOW_HEAD_DISKSIZE", "\u78c1\u789f\u5927\u5c0f"}, {"FA_FLOW_HEAD_GATEWAY", "\u9598\u9053\u9632\u706b\u7246"}, {"FA_FLOW_HEAD_TUNNELS", "\u901a\u9053"}, {"FA_FLOW_HEAD_TENANTS", "\u79df\u7528\u6236"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "\u540d\u7a31"}, {"GF_GATEWAY", "\u9598\u9053"}, {"GF_LAST_UPDATED", "\u6700\u5f8c\u66f4\u65b0"}, {"GF_DEST_ADDRESS_RANGE", "\u76ee\u7684\u5730\u4f4d\u5740\u7bc4\u570d"}, {"GF_LOCAL_ADDRESS_RANGE", "\u672c\u6a5f\u4f4d\u5740\u7bc4\u570d"}, {"FA_STATUS", "\u72c0\u614b"}, {"CLOUDSETTINGS_SECTITLE_1", "\u65b0\u589e\u6d41\u91cf\u4ee3\u7406\u914d\u5c0d"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "\u6d41\u91cf\u4ee3\u7406 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "\u6d41\u91cf\u4ee3\u7406 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "\u8a18\u61b6\u9ad4 (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "\u6d41\u91cf\u8cc7\u6599\u5eab\u5132\u5b58\u7a7a\u9593 (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "\u96f2\u7aef Syslog \u4f3a\u670d\u5668\u8a2d\u5b9a"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "\u555f\u7528\u5c0d Syslog \u4f3a\u670d\u5668\u7684 Syslog \u5831\u544a:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Syslog \u4f3a\u670d\u5668\u7684 IP \u4f4d\u5740:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog \u4f3a\u670d\u5668\u9023\u63a5\u57e0:"}, {"CLOUDSETTINGS_SECTITLE_3", "\u96f2\u7aef\u6d41\u91cf\u4ee3\u7406\u8a2d\u5b9a"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "\u6bcf\u500b\u6d41\u91cf\u4ee3\u7406\u7684\u9632\u706b\u7246\u6578\u91cf:"}, {"CLOUDSETTINGS_SECTITLE_5", "[TW]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[TW]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "SonicPoint \u8cc7\u8a0a"}, {"SP_MANAGEDBY", "\u7ba1\u7406\u8005:"}, {"SP_IPADDR", "IP \u4f4d\u5740"}, {"SP_SUBNET", "\u5b50\u7db2\u8def\u906e\u7f69"}, {"SP_IFACE", "\u4ecb\u9762"}, {"SP_ZONE", "\u5340\u57df"}, {"SP_MODEL", "\u578b\u865f"}, {"SP_ENABLED", "\u5df2\u555f\u7528"}, {"SP_DISABLED", "\u5df2\u505c\u7528"}, {"SP_STATUS", "\u72c0\u614b"}, {"SP_MACADDR", "MAC \u4f4d\u5740"}, {"PM_CONNECTWISE_STATUS", "[TW]Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[TW]Not Available"}, {"TICKET_INFORMATION", "[TW]Connectwise Ticket"}, {"TICKET_DETAILS", "[TW]Details"}, {"CONNECTWISE_NOTE", "[TW]GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}, {Integer.toString(-919), "[TW]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[TW]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[TW]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[TW]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[TW]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[TW]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[TW]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[TW]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[TW]Successfully authenticated with the unit."}, {Integer.toString(-928), "[TW]Authentication with the unit failed."}, {Integer.toString(-929), "[TW]The unit is registered with the backend."}, {Integer.toString(-930), "[TW]The unit is not registered with the backend."}, {Integer.toString(-931), "[TW]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[TW]Heart beats for the unit have been started."}, {Integer.toString(-933), "[TW]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[TW]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[TW]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[TW]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[TW]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[TW]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[TW]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[TW]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[TW]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[TW]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[TW]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[TW]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[TW]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[TW]ZeroTouch feature was disabled for the firewall."}};
+    private static final Object[][] contents = new Object[][]{{"APPLIANCE_NAME", "\u88dd\u7f6e\uff08\u4e00\u53f0\uff09"}, {"APPLIANCE_NAME_PLURAL", "\u88dd\u7f6e\uff08\u591a\u53f0\uff09"}, {"APPLIANCE_DESC", "\u88dd\u7f6e\u8aaa\u660e"}, {"SONICWALL_NAME", "Firewall"}, {"SONICWALL_NAME_PLURAL", "Firewall"}, {"SONICWALL_DESC", "Firewall \u88dd\u7f6e"}, {"SSLVPN_NAME", "SMA"}, {"SSLVPN_NAME_PLURAL", "SMA"}, {"SSLVPN_DESC", "SMA \u88dd\u7f6e"}, {"CDP_NAME", "CDP"}, {"CDP_NAME_PLURAL", "CDP"}, {"CDP_DESC", "CDP \u88dd\u7f6e"}, {"ESV_NAME", "Aventail SMA"}, {"ESV_NAME_PLURAL", "Aventail SMA"}, {"ESV_DESC", "Aventail SMA \u88dd\u7f6e"}, {"ESA_NAME", "ES"}, {"ESA_NAME_PLURAL", "ES"}, {"ESA_DESC", "\u96fb\u5b50\u90f5\u4ef6\u5b89\u5168\u88dd\u7f6e"}, {"OTHERS_NAME", "\u5176\u4ed6"}, {"OTHERS_NAME_PLURAL", "\u5176\u4ed6"}, {"OTHERS_DESC", "\u5176\u4ed6\u88dd\u7f6e"}, {"MINUTE", "\u5206\u9418"}, {"TEST_STRING", "\u9019\u662f\u4e00\u500b\u6e2c\u8a66\u5b57\u4e32 - \u767c\u8ca8\u4e4b\u524d\u79fb\u9664\u6b64\u9805\u76ee"}, {"PROGRESS_ACTION_TIMED", "\u6b64\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u6642\u9593\u624d\u80fd\u5b8c\u6210"}, {"PROGRESS_PLEASE_WAIT", "\u8acb\u7a0d\u5019..."}, {"LOADING_PLEASE_WAIT", "\u52a0\u8f09\u4e2d\uff0c\u8acb\u7a0d\u5019..."}, {"NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u66f4\u65b0\u6b0a\u9650\u3002"}, {"NO_SCREEN_PERMISSIONS_MESSAGE", "\u60a8\u6c92\u6709\u6aa2\u8996\u4efb\u4f55\u756b\u9762\u7684\u6b0a\u9650\uff0c\u8acb\u767b\u51fa\u4e26\u806f\u7d61\u60a8\u7684\u7ba1\u7406\u54e1\u3002"}, {"UPDATE", "\u66f4\u65b0"}, {"RESET", "\u91cd\u8a2d"}, {"NO_PANEL_PERMISSIONS", "[TW]You do not have sufficient privileges for this Panel. Please contact your Administrator."}, {"SYNC_MODELCODES_SUCCESS_MESSAGE", "\u4e0b\u8f09\u578b\u865f\u4ee3\u78bc\u5df2\u6210\u529f"}, {"SYNC_MODELCODES_FAILURE_MESSAGE", "\u4e0b\u8f09\u578b\u865f\u4ee3\u78bc\u6210\u529f\u5df2\u5931\u6557"}, {"TASK_SPOOL_SUCCESS_MESSAGE", "\u5de5\u4f5c\u591a\u5de5\u7de9\u885d\u8655\u7406\u5df2\u6210\u529f\u555f\u52d5\u3002"}, {"NO_UNITS_FOR_UPGRADE_MESSAGE", "\u6545\u969c - \u6c92\u6709\u53ef\u7528\u65bc\u8acb\u6c42\u5347\u7d1a\u7684\u88dd\u7f6e\u3002"}, {"ACTIVATION_CODE_SUCCESSFULLY_ADDED", "\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u6210\u529f\u65b0\u589e - "}, {"ACTIVATION_CODES_SUCCESSFULLY_ADDED", "\u555f\u7528\u4ee3\u78bc\u5df2\u6210\u529f\u65b0\u589e\u3002"}, {"ERROR_ADD_ACTIVATION_CODE", "\u65b0\u589e\u555f\u7528\u4ee3\u78bc\u932f\u8aa4\uff1a\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u7d93\u5b58\u5728 - "}, {"ACTIVATION_CODE_SUCCESSFULLY_DELETED", "\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u6210\u529f\u522a\u9664 - "}, {"ACTIVATION_CODES_SUCCESSFULLY_DELETED", "\u555f\u7528\u4ee3\u78bc\u5df2\u6210\u529f\u522a\u9664\u3002"}, {"ERROR_DELETE_ACTIVATION_CODE", "\u522a\u9664\u555f\u7528\u4ee3\u78bc\u932f\u8aa4\uff1a\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u4e0d\u5b58\u5728 - "}, {"ERROR_CANNOT_DELETE_ACTIVATION_CODE", "\u522a\u9664\u555f\u7528\u4ee3\u78bc\u932f\u8aa4\uff1a\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u7121\u6cd5\u522a\u9664 - "}, {"ACTIVATION_CODE_ADDED_LOG_MESSAGE", "\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u65b0\u589e\u5230\u4e86 SonicWall GMS \u8cc7\u6599\u5eab\u4e2d: "}, {"ACTIVATION_CODE_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u555f\u7528\u4ee3\u78bc\u5df2\u5f9e\u53ef\u7528\u4ee3\u78bc\u6c60\u4e2d\u79fb\u9664\uff1a "}, {"UPDATE_DB_MESSAGE", "\u5df2\u5728 SonicWall GMS \u8cc7\u6599\u5eab\u4e2d\u6210\u529f\u66f4\u65b0\u4e86\u8b8a\u66f4\u3002"}, {"FAILURE_UPDATE_DB_MESSAGE", "\u66f4\u65b0\u5931\u6557: \u672a\u80fd\u5728 SonicWall GMS \u8cc7\u6599\u5eab\u4e2d\u6210\u529f\u66f4\u65b0\u8b8a\u66f4\u3002"}, {"NO_UNITS_FOR_REGISTRATION", "\u6c92\u6709\u8981\u8a3b\u518a\u7684\u88dd\u7f6e"}, {"FREE_TRAIL_NOT_APPLIED", "\u6240\u6709\u88dd\u7f6e\u5747\u672a\u8a3b\u518a\u6216\u5df2\u8a02\u95b1"}, {"AV_FAILURE_MESSAGE", "\u6c92\u6709\u53ef\u7528\u65bc\u5347\u7d1a\u4ee5\u53ca\u8a3b\u518a\u7684\u88dd\u7f6e"}, {"AV_SUCCESS_MESSAGE", "\u5347\u7d1a\u4ee5\u53ca\u8a3b\u518a\u5de5\u4f5c\u5df2\u6210\u529f\u555f\u52d5"}, {"AV_SUCCESS_UPGRADE", "\u5347\u7d1a\u5de5\u4f5c\u5df2\u6210\u529f\u555f\u52d5"}, {"AV_NO_SUCCESS_REG", "\u6c92\u6709\u53ef\u7528\u65bc\u8a3b\u518a\u7684\u88dd\u7f6e"}, {"AV_SUCCESS_REG", "\u8a3b\u518a\u5de5\u4f5c\u5df2\u6210\u529f\u555f\u52d5"}, {"AV_NO_SUCCESS_UPGRADE", "\u6c92\u6709\u53ef\u7528\u65bc\u5347\u7d1a\u7684\u88dd\u7f6e"}, {"TASK_SUCCESS_MESSAGE", "\u5de5\u4f5c\u5df2\u6210\u529f\u555f\u52d5"}, {"TASK_CMP_ERROR", "CMP \u5bc6\u78bc\u53ea\u80fd\u5728\u88dd\u7f6e\u7d1a\u5225\u9032\u884c\u8b8a\u66f4"}, {"TASK_ERROR_MESSAGE", "\u5de5\u4f5c\u672a\u6210\u529f\u555f\u52d5"}, {"SGMS_NO_UNITS_LICENSE_SHARING", "\u6c92\u6709\u53ef\u7528\u65bc\u6388\u6b0a\u5171\u7528\u64cd\u4f5c\u7684\u88dd\u7f6e\u3002"}, {"SGMS_EMAIL_BOTTOM_MSG1", "\u6280\u8853\u652f\u63f4 "}, {"SGMS_EMAIL_BOTTOM_MSG2", "\u7248\u672c "}, {"SGMS_EMAIL_BOTTOM_MSG3", "\u5e8f\u5217\uff1a "}, {"SGMS_EMAIL_BOTTOM_MSG4", "\u4f3a\u670d\u5668\uff1a "}, {"FIRMWARE_DOWNLOADED", "\u97cc\u9ad4\u7684\u65b0\u526f\u672c\u5df2\u4e0b\u8f09\u3002"}, {"SUBSCRIPTION_EXPIRATION_MESSAGE", "\u4ee5\u4e0b\u8a2d\u5099\u7684\u6388\u6b0a\u4e0d\u4e45\u5373\u5c07\u5230\u671f\u3002\n\u8acb\u806f\u7d61 SonicWall \u92b7\u552e\u8cfc\u8cb7\u555f\u7528\u4ee3\u78bc\u4ee5\u7e8c\u8a02\u9019\u4e9b\u8a02\u8cfc\u670d\u52d9\u3002"}, {"SUBSCRIPTION_EXPIRATION_SUBJECT", "\u8a02\u95b1\u904e\u671f\u8cc7\u8a0a\u3002"}, {"NO_SUBSCRIPTION_EXPIRATIONS_FOUND_MESSAGE", "\u672a\u627e\u5230\u904e\u671f\u8cc7\u8a0a\u3002"}, {"VERSION_MESSAGE", "SonicWall GMS \u7248\u672c\u865f: "}, {"NUM_NODES_MESSAGE", "\u6b64 SonicWall GMS \u53ef\u7ba1\u7406\u7684\u7bc0\u9ede\u6578\u91cf: "}, {"PRODUCT_DESCRIPTION_MESSAGE", "GMS \u7522\u54c1\u8aaa\u660e\uff1a "}, {"DATABASE_TYPE_MESSAGE", "\u8cc7\u6599\u5eab\u985e\u578b\uff1a "}, {"MODEL_TYPES_MESSAGE", "\u7bc0\u9ede\u6578\u548c\u578b\u865f\u540d\u7a31\uff1a "}, {"NUM_AGENTS_MESSAGE", "\u7cfb\u7d71\u4e2d\u7684\u4ee3\u7406\u6578\uff1a "}, {"AGENT_IP_MESSAGE", "\u4ee3\u7406\u7684 IP \u4f4d\u5740\uff1a "}, {"UNKNOWN_MESSAGE", "\u672a\u77e5"}, {"MS_DB_MESSAGE", "Microsoft SQL Server"}, {"ORACLE_MESSAGE", "Oracle"}, {"SYBASE_MESSAGE", "Sybase"}, {"INFORMIX_MESSAGE", "Informix"}, {"MYSQL_MESSAGE", "MySQL"}, {"UNKNOWN_DATABASE", "\u672a\u77e5\u8cc7\u6599\u5eab"}, {"PM_INVALID_CHARACTER_IN_UNIT_NAME", "\u88dd\u7f6e\u540d\u7a31\u4e2d\u7684\u7121\u6548\u5b57\u5143 [<,\\,:]\u3002"}, {"PM_NAME_KEYWORD", "\u662f\u4e00\u500b\u95dc\u9375\u5b57\u4e26\u4e14\u4e0d\u80fd\u7528\u65bc\u547d\u540d\u88dd\u7f6e\u3002\u8acb\u4f7f\u7528\u5176\u4ed6\u540d\u7a31"}, {"PM_NAME_EXISTS_A", "\u5df2\u7d93\u5b58\u5728\u540d\u70ba\u300c"}, {"PM_NAME_EXISTS_B", "\u300d\u7684\u88dd\u7f6e "}, {"PM_UNKNOWN", "\u672a\u77e5"}, {"PM_UNKNOWN_UNREGISTERED", "\u672a\u77e5/\u672a\u8a3b\u518a"}, {"PM_UNREGISTERED", "\u672a\u8a3b\u518a"}, {"PM_YES", "\u662f"}, {"PM_NO", "\u5426"}, {"PM_ENABLED", "\u5df2\u555f\u7528"}, {"PM_DISABLED", "\u5df2\u505c\u7528"}, {"PM_NOTAVAILABLE", "\u4e0d\u53ef\u7528"}, {"PM_UNLIMITED", "\u7121\u9650\u5236"}, {"PM_CURRENT", "\u76ee\u524d"}, {"PM_DEFAULT", "\u9810\u8a2d\u503c"}, {"PM_EXPIRED", "\u904e\u671f"}, {"PM_UP", "\u57f7\u884c"}, {"PM_DOWN", "\u95dc\u9589"}, {"PM_NOT_ACQUIRED", "\u672a\u64f7\u53d6"}, {"PM_SINCE", "\u81ea\u5f9e "}, {"PM_NONE", "\u7121"}, {"PM_N_A", "\u4e0d\u53ef\u7528"}, {"PM_NO_LICENSE", "\u7121\u6388\u6b0a"}, {"PM_MODEL", "\u578b\u865f"}, {"PM_SERIAL_NUM", "\u5e8f\u865f"}, {"PM_DOMAIN", "\u7db2\u57df"}, {"PM_NUM_LAN_IPS", "\u5141\u8a31\u7684 LAN IP \u6578"}, {"PM_HA", "\u9ad8\u53ef\u7528\u6027"}, {"PM_DMZ_PORT", "DMZ \u9023\u63a5\u57e0"}, {"PM_NUM_WORKPORTS", "\u5141\u8a31\u7684\u5de5\u4f5c\u9023\u63a5\u57e0 IP \u6578"}, {"PM_HOMEPORT", "\u8d77\u59cb\u9023\u63a5\u57e0"}, {"PM_WLAN_PORT", "WLAN \u9023\u63a5\u57e0"}, {"PM_OPT_PORT", "OPT \u9023\u63a5\u57e0"}, {"PM_CPU", "CPU"}, {"PM_VPN_UPGRADE", "VPN \u5347\u7d1a"}, {"PM_VPN_CLIENTS", "\u5168\u57df VPN \u7528\u6236\u7aef"}, {"PM_IPS", "\u5165\u4fb5\u4fdd\u8b77\u670d\u52d9"}, {"PM_SBX", "Capture Advanced Threat Protection"}, {"PM_GAV", "\u9598\u9053\u9632\u6bd2"}, {"PM_FIRMWARE_VERSION", "\u97cc\u9ad4\u7248\u672c"}, {"PM_REGISTRATION_CODE", "\u8a3b\u518a\u78bc"}, {"PM_CFS_SUB", "\u5167\u5bb9\u7be9\u9078\u5668\u6e05\u55ae/\u670d\u52d9"}, {"PM_PKI_SUB", "PKI"}, {"PM_AV_SUB", "\u9632\u6bd2"}, {"PM_WARRANTY", "\u5ef6\u9577\u4fdd\u56fa"}, {"PM_SW_STATUS", "\u72c0\u614b"}, {"PM_SW_MANAGEDINSTANCE", "\u6309\u57f7\u884c\u500b\u9ad4\u7ba1\u7406"}, {"PM_TASKS_PENDING", "\u64f1\u7f6e\u4e2d\u7684\u5de5\u4f5c"}, {"PM_LAST_LOG", "\u6700\u5f8c\u4e00\u500b\u8a18\u9304\u9805\u76ee"}, {"PM_SAS_CONFIG_INFO", "SA \u8a2d\u5b9a\u8cc7\u8a0a"}, {"PM_SAS_DEFINED", "\u5b9a\u7fa9\u7684 SA"}, {"PM_SAS_ENABLED", "\u555f\u7528\u7684 SA"}, {"PM_SAS_AVAILABLE", "\u53ef\u7528\u7684 SA"}, {"PM_SAS_REMAINING", "\u5269\u9918\u7684 SA"}, {"PM_SAS_INTERCONNECTED", "\u4e92\u9023\u7684 SA"}, {"PM_AGENT_ASSIGNED", "\u6307\u6d3e\u7684\u4ee3\u7406"}, {"PM_PRIMARY_AGENT", "\u4e3b\u8981\u4ee3\u7406"}, {"PM_STANDBY_AGENT", "\u5099\u7528\u4ee3\u7406"}, {"PM_TUNNEL_MGMT", "\u7ba1\u7406\u6a21\u5f0f"}, {"PM_FW_ADDED_TO_GMS", "\u8a2d\u5099\u88ab\u65b0\u589e\u81f3 SonicWall GMS \u7684\u6642\u9593"}, {"PM_FW_UP_SINCE", "\u88dd\u7f6e\u57f7\u884c\u6642\uff0c\u81ea"}, {"PM_FW_DOWN_SINCE", "\u88dd\u7f6e\u95dc\u9589\u6642\uff0c\u81ea"}, {"PM_SW_IP", "SonicWall IP"}, {"PM_TIME_ZONE", "\u6642\u5340"}, {"PM_SW_IN_SYSTEM", "\u5728\u7cfb\u7d71\u4e2d"}, {"PM_SW_IN_DMZ", "\u5728 DMZ \u4e2d"}, {"PM_SW_IN_GROUP", "\u5728\u7fa4\u7d44\u4e2d"}, {"PM_SW_UNREGISTERED", "\u672a\u8a3b\u518a"}, {"PM_SW_VPN_UPGRADE", "\u900f\u904e VPN \u5347\u7d1a"}, {"PM_SW_VPN_CLIENT", "\u900f\u904e\u5168\u57df VPN \u7528\u6236\u7aef\u5347\u7d1a"}, {"PM_SW_MSSP", "\u652f\u63f4 MSSP"}, {"PM_CFL_SUBSCRIPTION", "\u5167\u5bb9\u7be9\u9078\u5668\u6e05\u55ae/\u670d\u52d9"}, {"PM_PKI_SUBSCRIPTION", "PKI"}, {"PM_AV_SUBSCRIPTION", "\u9632\u6bd2"}, {"PM_HGMS_SUBSCRIPTION", "\u96f2\u7aef\u670d\u52d9"}, {"PM_SUPPORT_SUBSCRIPTION", "\u652f\u63f4 "}, {"PM_EXTENDED_WARRANTY", "\u5ef6\u9577\u4fdd\u56fa"}, {"PM_UNITS_DOWN", "\u95dc\u9589\u7684 SonicWall"}, {"PM_PENDING_TASKS", "\u64f1\u7f6e\u4e2d\u5de5\u4f5c\u7684 SonicWall"}, {"PM_MANAGED_WITH_TUNNEL", "\u4f7f\u7528\u7ba1\u7406\u901a\u9053\u7ba1\u7406\u7684 SonicWall"}, {"PM_TASK_SPOOLED", "\u5de5\u4f5c\u5df2\u591a\u5de5\u7de9\u885d\u8655\u7406\u4ee5\u8b8a\u66f4\u4e3b\u6a5f\u540d\u7a31\u3002"}, {"PM_RAVLIN_MODEL", "Ravlin \u578b\u865f"}, {"PM_LAN_MAC_SERIAL", "LAN MAC/\u5e8f\u865f"}, {"PM_WAN_MAC", "WAN MAC"}, {"PM_FIRMWARE_VERSION", "\u97cc\u9ad4\u7248\u672c"}, {"PM_HW_VERSION", "\u786c\u9ad4\u7248\u672c"}, {"PM_ROM_VERSION", "ROM \u7248\u672c"}, {"PM_SECURITY_ID", "\u5b89\u5168 ID"}, {"PM_RAVLIN_STATUS", "Ravlin \u72c0\u614b"}, {"PM_TASKS_PENDING", "\u64f1\u7f6e\u4e2d\u7684\u5de5\u4f5c"}, {"PM_AGENT_ASSIGNED", "\u6307\u6d3e\u7684\u4ee3\u7406"}, {"PM_RAVLINS_IN_NODE", "\u7bc0\u9ede\u4e2d\u7684 Ravlin"}, {"PM_RAVLINS_DOWN", "\u95dc\u9589\u7684 Ravlin"}, {"PM_RAVLINS_PENDING_TASKS", "\u64f1\u7f6e\u4e2d\u5de5\u4f5c\u7684 Ravlin"}, {"PM_FIX_UNIT_ERROR", "\u4fee\u5fa9\u88dd\u7f6e\u6642\u767c\u751f\u932f\u8aa4 "}, {"PM_MOD_UNIT_EXISTS", "\u4fee\u6539\u7684\u88dd\u7f6e\u5df2\u7d93\u5b58\u5728\uff0c\u5e8f\u865f\u70ba"}, {"PM_MOD_UNIT_NAME_EXISTS_A", "\u5df2\u7d93\u5b58\u5728\u540d\u70ba"}, {"PM_MOD_UNIT_NAME_EXISTS_B", "\u7684\u4fee\u6539\u7684\u88dd\u7f6e "}, {"PM_ADD_ERR_PRIVILEGES", "\u932f\u8aa4\uff1a\u60a8\u6c92\u6709\u8db3\u5920\u7684\u6b0a\u9650\u65b0\u589e\u88dd\u7f6e\u3002"}, {"PM_UNIT_EXISTS", "\u88dd\u7f6e\u5df2\u7d93\u5b58\u5728\uff0c\u5e8f\u865f\u70ba"}, {"PM_UNIT_NAME_EXISTS_A", "\u7db2\u57df\u4e2d\u5df2\u7d93\u5b58\u5728\u540d\u70ba"}, {"PM_UNIT_NAME_EXISTS_B", "\u7684\u88dd\u7f6e "}, {"PM_ADD_UNIT_ERR", "\u5c07\u8a2d\u5099\u65b0\u589e\u81f3 SonicWall \u8cc7\u6599\u5eab\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_1", "\u8acb\u8f38\u5165\u4e00\u500b\u6709\u6548\u7684\u5e8f\u865f\u3002\n\u5e8f\u865f\u9577\u5ea6\u61c9\u70ba "}, {"PM_ADD_UNIT_ERR_SERIAL_LENGTH_2", "\u500b\u5b57\u5143\u3002"}, {"PM_ADD_UNIT_ERR_SERIAL_FORMAT", "\u5e8f\u865f\u61c9\u50c5\u5305\u542b\u5341\u516d\u9032\u4f4d\u5b57\u5143\u3002"}, {"PM_GET_PREFS_ERR", "\u64f7\u53d6\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"PM_ADD_UNIT_LIC_UNAVAILABLE_ERR", "\u672a\u91dd\u5c0d\u96f2\u7aef\u670d\u52d9\u6388\u6b0a\u88dd\u7f6e\u3002\n\u8acb\u5148\u5f9e MySonicWall.com \u6388\u6b0a\u4ee5\u4e0b\u4efb\u4e00\u670d\u52d9\uff0c\u518d\u5c07\u88dd\u7f6e\u65b0\u589e\u81f3 "}, {"PM_ADD_UNIT_LIC_CHECK_ERR", " \u7121\u6cd5\u53d6\u5f97\u6b64\u88dd\u7f6e\u7684\u6388\u6b0a\u8cc7\u8a0a\u3002\n\u8acb\u7a0d\u5f8c\u518d\u8a66\u3002"}, {"PM_ADD_UNIT_LIC_CHECK_FAILURE", " \u7121\u6cd5\u8207 MySonicWall.com \u901a\u8a0a\u4ee5\u78ba\u8a8d\u6b64\u88dd\u7f6e\u7684\u6388\u6b0a\u3002\n\u8acb\u7a0d\u5f8c\u518d\u8a66\u3002"}, {"PM_LICENSED", "\u5df2\u6388\u6b0a"}, {"PM_NOT_LICENSED", "\u672a\u6388\u6b0a"}, {"PM_IS_MSSP", "MSSP \u88dd\u7f6e"}, {"PM_SYSLOG_FORMAT", "Syslog \u683c\u5f0f"}, {"PM_STATUS_MSG_ONLY", "\u50c5\u72c0\u614b\u8a0a\u606f"}, {"PM_SYSLOG_IN_UTC", "UTC \u4e2d\u7684\u8a18\u9304"}, {"PM_VIEWPOINT_MODE", "Analyzer \u6a21\u5f0f\u5df2\u555f\u7528"}, {"PM_NAME_RESOLUTION", "\u540d\u7a31\u89e3\u6790\u6a21\u5f0f"}, {"PM_ACCESS_MODE", "\u5b58\u53d6\u6a21\u5f0f"}, {"PM_DNS", "DNS"}, {"PM_NETBIOS", "NetBios"}, {"PM_DNSNETBIOS", "\u5148 DNS \u5f8c NetBios"}, {"PM_WEBTRENDS", "WebTrends"}, {"PM_GEN_VP_LICENSE", "WebTrends"}, {"VM_PATCH_DETECTED_MSG1", "\u5df2\u5075\u6e2c\u5230\u53ef\u7528\u7684\u65b0\u8edf\u9ad4\u66f4\u65b0"}, {"VM_PATCH_DETECTED_MSG2", "\u900f\u904e\u96fb\u5b50\u90f5\u4ef6\u50b3\u9001\u7ba1\u7406\u54e1\u65b0\u8edf\u9ad4\u66f4\u65b0\u8cc7\u8a0a\u6642\u767c\u751f\u932f\u8aa4\u3002SMTP \u6216\u7ba1\u7406\u54e1\u96fb\u5b50\u90f5\u4ef6\u672a\u8a2d\u5b9a\u3002"}, {"VM_PATCH_DETECTED_MSG3", "\u53ef\u7528\u7684\u8edf\u9ad4\u66f4\u65b0\n\n"}, {"VM_NEW", "\u65b0 "}, {"VM_PATCH_DETECTED_MSG4", "\u6709\u95dc\u767c\u884c\u8aaa\u660e\u548c\u4e0b\u8f09\u8cc7\u8a0a\uff0c\u8acb\u767b\u5165\u81f3 <a href=https://www.mysonicwall.com>MySonicWall.com</a> \u5e33\u6236"}, {"VM_SCREEN", "\u87a2\u5e55\u3002"}, {"VM_PATCH_DETECTED_MSG5", "\u5143\u4ef6\u4fee\u88dc\u7a0b\u5f0f\u66f4\u65b0\u6aa2\u67e5\u6210\u529f\u3002\u5df2\u627e\u5230\u65b0\u5143\u4ef6\u66f4\u65b0\u3002\u96fb\u5b50\u90f5\u4ef6\u5df2\u50b3\u9001\u7d66\u7ba1\u7406\u54e1\u3002"}, {"VM_PATCH_DETECTED_MSG6", "\u7121\u6cd5\u4e0b\u8f09\u4fee\u88dc\u7a0b\u5f0f\u66f4\u65b0 "}, {"VM_FOR", "\u7528\u65bc "}, {"VM_ON", "\u4e0a "}, {"VM_PATCH_DETECTED_MSG7", "\u5143\u4ef6\u4fee\u88dc\u7a0b\u5f0f\u4e0b\u8f09\u5df2\u4e2d\u6b62\u3002\u4fee\u88dc\u7a0b\u5f0f\u6a94\u6848\u5df2\u7d93\u5b58\u5728\uff1a "}, {"VM_PATCH_DETECTED_MSG8", "\u5143\u4ef6\u4fee\u88dc\u7a0b\u5f0f\u4e0b\u8f09\u6210\u529f\uff1a "}, {"VM_PATCH_DETECTED_MSG9", "\u5c07\u4fee\u88dc\u7a0b\u5f0f\u6a94\u6848 "}, {"VM_PATCH_DETECTED_MSG10", "\u5beb\u5165\u81f3\u78c1\u789f\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"SDM_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f\u3002"}, {"SDM_UPDATE_FAILURE", "\u66f4\u65b0\u5931\u6557\u3002"}, {"SDM_UPDATE_SPECIAL_FAILURE", "\u7121\u6cd5\u5efa\u7acb\u5de5\u4f5c\u4ee5\u522a\u9664 SA\u3002"}, {"SDM_UPDATE_INVALID", "\u66f4\u65b0\u8acb\u6c42\u7121\u6548\u3002"}, {"SDM_SCREEN_ID_INVALID", "\u87a2\u5e55 ID \u7121\u6548"}, {"SDM_READY", "\u5c31\u7dd2"}, {"SDM_CGI_ERROR", "\u7372\u53d6\u4ee5\u4e0b\u9805\u76ee\u7684 CGI_NAME \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_DEFAULT_ERROR", "\u7372\u53d6\u4ee5\u4e0b\u9805\u76ee\u7684 DEFAULT_VALUE \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_INVALID_TARGET", "\u932f\u8aa4\uff1a\u4f86\u6e90\u6216\u76ee\u6a19\u7fa4\u7d44\u7121\u6548\u3002"}, {"SDM_METADATA_ERROR", "\u7372\u53d6\u4ee5\u4e0b\u9805\u76ee\u7684\u4e2d\u7e7c\u8cc7\u6599\u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_DB_ERROR", "\u5b58\u53d6 SonicWall GMS \u8cc7\u6599\u5eab\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"SDM_NOVPN_ERROR", "\u6b64\u88dd\u7f6e\u4e2d\u6c92\u6709\u555f\u7528 VPN\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NO_TARGET_VPN_ERROR", "\u76ee\u6a19\u4e2d\u6c92\u6709\u555f\u7528 VPN\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NOSAS_ERROR", "\u6b64\u88dd\u7f6e\u4e2d\u6c92\u6709\u5269\u9918\u7684 SA \u53ef\u7528\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NO_TARGET_SAS_ERROR", "\u76ee\u6a19\u4e2d\u6c92\u6709\u5269\u9918\u7684 SA \u53ef\u7528\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NO_UNITS_ERROR", "\u6c92\u6709\u5efa\u7acb\u4efb\u4f55\u5de5\u4f5c\u3002"}, {"SDM_NO_3RDPARTYCERTS_ERROR", "\u672a\u627e\u5230\u6709\u6548\u7684\u5354\u529b\u5ee0\u5546\u672c\u6a5f/CA \u8b49\u66f8\u7d44\u5408\u3002\u8df3\u904e VPN SA \u5230\u88dd\u7f6e "}, {"SDM_DHCP_ERROR", "\u52d5\u614b\u5b9a\u5740\u5728\u4f86\u6e90\u548c\u76ee\u6a19\u88dd\u7f6e\u4e0a\u5747\u5df2\u555f\u7528\uff0c\u56e0\u6b64\u7121\u6cd5\u5efa\u7acb SA\u3002\u8df3\u904e VPN SA \u5efa\u7acb\u3002 "}, {"SDM_NOAES_ERROR", "AES \u5728\u88dd\u7f6e\u4e2d\u4e0d\u53ef\u7528\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_NO_TARGET_AES_ERROR", "AES \u5728\u76ee\u6a19\u4e2d\u4e0d\u53ef\u7528\u3002\u5efa\u7acb\u5230\u4ee5\u4e0b\u88dd\u7f6e\u7684 VPN \u6642\u767c\u751f\u932f\u8aa4 "}, {"SDM_DELETE_SUCCESS", "\u522a\u9664\u6210\u529f "}, {"SDM_DELETE_FAILURE", "\u522a\u9664\u5931\u6557 "}, {"SDM_AGENTNAME_INVALID", "\u4ee3\u7406\u540d\u7a31\u4e2d\u7684\u7121\u6548\u5b57\u5143 [<,\\,:,',@,#,*,$]\u3002"}, {"SDM_VPN_INH_ENH_IC_SA_TASK_FAILURE", "\u589e\u5f37\u578b\u4e92\u9023 VPNS SA \u7684\u5de5\u4f5c\u5efa\u7acb\u5931\u6557"}, {"SDM_VPN_INH_GRP_UPDATE_FAILED", "\u4ee5\u4e0b\u9805\u76ee\u7684\u7fa4\u7d44\u66f4\u65b0\u5931\u6557 "}, {"SDM_VPN_INH_GRP_UPDATE_ENH_INC_FAILURE", "\u589e\u5f37\u578b\u4e92\u9023 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_INC_FAILURE", "\u6a19\u6e96\u4e92\u9023 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_ENH_NON_INC_FAILURE", "\u589e\u5f37\u578b\u975e\u4e92\u9023 VPN SA"}, {"SDM_VPN_INH_GRP_UPDATE_STD_NON_INC_FAILURE", "\u6a19\u6e96\u975e\u4e92\u9023 VPN SA"}, {"SDM_VPN_UNIT_NO_TUNNEL_INTERFACE_SUPPORTED", "\u8df3\u904e\u6b64\u88dd\u7f6e\u7684 SA \u5efa\u7acb\uff0c\u539f\u56e0\u662f\u6b64\u88dd\u7f6e\u4e0a\u7684\u97cc\u9ad4\u7248\u672c\u4e0d\u652f\u63f4\u901a\u9053\u4ecb\u9762\u985e\u578b"}, {"TASK_SET_FOR_EXECUTION_LOG_MESSAGE", "\u5df2\u6392\u7a0b\u5de5\u4f5c\u5728\u4ee5\u4e0b\u9805\u76ee\u4e0a\u57f7\u884c"}, {"PASSWORD_CHANGED", "SonicWall GMS \u5bc6\u78bc\u8b8a\u66f4\u6210\u529f\u3002"}, {"PASSWORD_NOT_CHANGED_A", "\u6307\u5b9a\u7684\u820a\u5bc6\u78bc\u4e0d\u6b63\u78ba\u3002<BR>"}, {"PASSWORD_NOT_CHANGED_B", "\u5bc6\u78bc\u672a\u8b8a\u66f4\u3002"}, {"PASSWORD_NOT_CHANGED", "\u6307\u5b9a\u7684\u820a\u5bc6\u78bc\u4e0d\u6b63\u78ba\u3002\u5bc6\u78bc\u672a\u8b8a\u66f4\u3002"}, {"LOGS_PASSWD_CHANGED", "\u4f7f\u7528\u8005\u767b\u5165\u5bc6\u78bc\u5df2\u6210\u529f\u8b8a\u66f4 "}, {"LOGS_PASSWD_NOT_CHANGED", "\u7cfb\u7d71\u7121\u6cd5\u9a57\u8b49\u4f7f\u7528\u8005\u4ee5\u8b8a\u66f4\u767b\u5165\u5bc6\u78bc "}, {"LOGS_ADDED_NEW_USER", "\u65b0\u589e\u81f3 SonicWall GMS \u8cc7\u6599\u5eab\u7684\u65b0\u4f7f\u7528\u8005: "}, {"LOGS_ADDED_NEW_USER_TYPE", "\u65b0\u589e\u81f3 SonicWall GMS \u8cc7\u6599\u5eab\u7684\u65b0\u4f7f\u7528\u8005\u985e\u578b: "}, {"LOGS_DELETED_USER", "\u5f9e SonicWall GMS \u8cc7\u6599\u5eab\u4e2d\u522a\u9664\u7684\u4f7f\u7528\u8005\u548c\u76f8\u61c9\u8cc7\u8a0a: "}, {"LOGS_DELETED_GROUP", "\u4ee5\u4e0b\u81ea\u8a02\u7fa4\u7d44\u4ee5\u53ca\u4f7f\u7528\u6b64\u81ea\u8a02\u7fa4\u7d44\u7684\u6240\u6709\u6aa2\u8996\u5df2\u5f9e SonicWall GMS \u8cc7\u6599\u5eab\u4e2d\u522a\u9664: "}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG1", "\u81ea\u8a02\u5c6c\u6027\u503c ("}, {"INVALID_CUSTOM_ATTRIBUTE_VALUE_MSG2", ") \u61c9\u50c5\u5305\u542b\u82f1\u6578\u5b57\u5143"}, {"LOGS_ADD_CUSTOM_GROUP", "The following Custom Group Name / Default Value was added to the system: "}, {"LOGS_MOD_CUSTOM_GROUP", "The following Custom Group Name / Default Value was modified: "}, {"LOGS_DEL_CUSTOM_GROUP", "The following Custom Group was deleted from the system: "}, {"READY", "\u5c31\u7dd2"}, {"NAV_OF", "/ "}, {"NAV_PREVIOUS", "\u4e0a\u4e00\u6b65"}, {"NAV_NEXT", "\u4e0b\u4e00\u6b65"}, {"NAV_DISPLAYING", "\u986f\u793a"}, {"NAV_FIREWALLS", "Firewall"}, {"ACT_NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u66f4\u65b0\u6b0a\u9650\u3002"}, {"ACT_WRONG_FILE_FORMAT", "\u932f\u8aa4\uff1a\u6a94\u6848\u683c\u5f0f\u932f\u8aa4\uff0c\u7121\u6cd5\u65b0\u589e\u4ee3\u78bc\u3002"}, {"AUTH_INVALID_PARAMS", "\u53c3\u6578\u7121\u6548\uff0c\u8acb\u91cd\u8a66"}, {"AUTH_AUTHENTICATE", "\u9a57\u8b49"}, {"AUTH_PERFORM_LOGIN", "\u57f7\u884c\u767b\u5165"}, {"AUTH_RANDOM_TIMEOUT", "\u767b\u5165\u4e82\u6578\u5df2\u903e\u6642"}, {"AUTH_LOGIN_TIMEOUT", "\u767b\u5165\u9801\u9762\u5df2\u903e\u6642\uff0c\u8acb\u91cd\u8a66"}, {"AUTH_LOGIN_FAILURE", "\u767b\u5165\u5931\u6557\uff0c\u8acb\u91cd\u8a66"}, {"AUTH_LOGIN_FAILURE_LOG", "\u767b\u5165\u5931\u6557"}, {"NO_DOMAIN_SPECIFIED", "\u6c92\u6709\u6307\u5b9a\u7528\u65bc\u767b\u5165\u7684\u7db2\u57df\u540d\u7a31"}, {"SPECIFY_DOMAIN", "\u8acb\u6307\u5b9a\u7528\u65bc\u767b\u5165\u7684\u7db2\u57df\u540d\u7a31"}, {"INVALID_IP", "[TW]Invalid hostname or IP address, contact administrator for details"}, {"INVALID_DOMAIN_MSG", "\u7db2\u57df\u7121\u6548\u3002\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u7db2\u57df\u540d\u7a31"}, {"INVALID_ALIAS_MSG", "\u5225\u540d\u7121\u6548\u3002\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u5225\u540d"}, {"REMOTE_SUCCESSFUL_LOGIN", "\u900f\u904e\u4ee5\u4e0b\u4f7f\u7528\u8005\u6210\u529f\u767b\u5165\u81f3\u7cfb\u7d71\uff1a "}, {"TWOFA_FAILED_LOGIN_MSG", "[TW]Invalid Authentication Code. Please enter valid Authentication code. (Make sure that your mobile time is synced to your network time.) "}, {"TWOFA_EMERGENCY_CODE_RESET_MSG", "[TW]EMERGENCY Code Used, 2FA RESET for user : "}, {"REMOTE_FAILED_LOGIN", "\u4ee5\u4e0b\u4f7f\u7528\u8005\u7684\u9060\u7aef\u9a57\u8b49\u5931\u6557\uff1a "}, {"XML_REMOTE_FAILED_LOGIN", "\u4ee5\u4e0b\u4f7f\u7528\u8005\u57fa\u65bc XML \u7684\u9060\u7aef\u9a57\u8b49\u5931\u6557\uff1a "}, {"NEW_USER_ADDED", "\u65b0\u589e\u7684\u4f7f\u7528\u8005\uff1a "}, {"TO_USER_TYPE", "\u4f7f\u7528\u8005\u985e\u578b\uff1a "}, {"CLICK_TO_TRY_AGAIN", "\u6309\u4e00\u4e0b\u6b64\u8655\u4ee5\u91cd\u8a66"}, {"USER_LOCKED_OUT", "\u4f7f\u7528\u8005\u5df2\u9396\u5b9a\uff0c\u8acb\u806f\u7d61\u7ba1\u7406\u54e1\u4ee5\u7372\u53d6\u8a73\u7d30\u8cc7\u6599"}, {"USER_DISABLED", "\u4f7f\u7528\u8005\u5e33\u6236\u5df2\u505c\u7528\uff0c\u8acb\u806f\u7d61\u7ba1\u7406\u54e1\u4ee5\u7372\u53d6\u8a73\u7d30\u8cc7\u6599"}, {"LDAP_LOGIN_FAILED_CONTACT_ADMIN", "\u9060\u7aef\u9a57\u8b49\u5931\u6557\u3002\u8acb\u806f\u7d61 GMS \u7ba1\u7406\u54e1\u3002"}, {"LDAP_LOGIN_FAILED_TRY_AGAIN", "\u9060\u7aef\u9a57\u8b49\u5931\u6557\u3002\u8acb\u806f\u7d61 GMS \u7ba1\u7406\u54e1\u6216\u91cd\u8a66\u3002"}, {"LDAP_AUTH_FAILED", "\u9060\u7aef\u9a57\u8b49\u5931\u6557"}, {"LDAP_USER_NOT_FOUND", "\u4ee5\u4e0b\u76ee\u9304\u4e2d\u4f7f\u7528\u8005\u672a\u627e\u5230\u6216\u4e0d\u5b58\u5728"}, {"LDAP_INVALID_CREDENTIALS", "\u9060\u7aef\u9a57\u8b49\u5931\u6557\uff1a\u8a8d\u8b49\u7121\u6548"}, {"LDAP_COMMUNICATION_ERROR", "\u7121\u6cd5\u8207\u76ee\u9304\u6216\u547d\u540d\u670d\u52d9\u9032\u884c\u901a\u8a0a"}, {"LDAP_ANONYMOUS_BIND_SET", "\u533f\u540d\u7d81\u5b9a\u8a2d\u5b9a\u70ba\u5141\u8a31\u7528\u65bc\u8a72\u7db2\u57df "}, {"LDAP_CHECK_ANONBIND_AT_SERVER", "\u6aa2\u67e5\u9060\u7aef\u4f3a\u670d\u5668\u662f\u5426\u5141\u8a31\u533f\u540d\u7d81\u5b9a\u3002"}, {"LDAP_INVALID_GROUPS_SPECIFIED", "\u6307\u5b9a\u7684\u76ee\u9304\u7fa4\u7d44\u7121\u6548\u3002\u8acb\u806f\u7d61 GMS \u7ba1\u7406\u54e1\u3002"}, {"LDAP_INVALID_GROUP_MEMBER", "\u4f7f\u7528\u8005\u4e26\u975e\u5141\u8a31\u7684\u76ee\u9304\u7fa4\u7d44\u7684\u6210\u54e1\u3002"}, {"RADIUS_UNKNOWN_HOST", "RADIUS \u4f3a\u670d\u5668\u4e3b\u6a5f\u672a\u77e5\u3002"}, {"RADIUS_CONNECTION_TIMEOUT", "\u8207\u9060\u7aef RADIUS \u4f3a\u670d\u5668\u7684\u9023\u63a5\u903e\u6642"}, {"RADIUS_FAILED_LOGIN", "\u9a57\u8b49\u5931\u6557\u3002\u8a8d\u8b49\u7121\u6548\u3002"}, {"RADIUS_EXCEPTION", "\u767c\u751f RADIUS \u4f8b\u5916\u72c0\u6cc1\u3002"}, {"RADIUS_INVALID_GROUP_MEMBER", "\u4f7f\u7528\u8005\u4e26\u975e\u5141\u8a31\u7684 RADIUS \u7fa4\u7d44\u7684\u6210\u54e1\u3002"}, {"PWD_CHANGE_SCREEN", "\u8b8a\u66f4\u5bc6\u78bc\u3002"}, {"PWD_VALIDATION_FAILURE_FOR_PCI", "\u8b8a\u66f4\u5bc6\u78bc\uff0c\u539f\u56e0\u662f\u5176\u9577\u5ea6\u4e0d\u5728\u5141\u8a31\u7684\u7bc4\u570d\u5167\uff1a7 - 15 \u500b\u5b57\u5143\u3002"}, {"PWD_VALIDATION_FAILURE", "\u8b8a\u66f4\u5bc6\u78bc\uff0c\u539f\u56e0\u662f\u5176\u9577\u5ea6\u4e0d\u80fd\u8d85\u904e 15 \u500b\u5b57\u5143\u3002"}, {"PWD_EXPIRATION", "\u5bc6\u78bc\u9700\u8981\u6bcf {0} \u5929\u8b8a\u66f4\u4e00\u6b21"}, {"PWD_CHANGE_NEXT_LOGIN", "\u900f\u904e\u7ba1\u7406\u54e1\u5f37\u5236\u8b8a\u66f4\u5bc6\u78bc\u3002"}, {"PASSWORD_EXISTS", "[TW]Cannot repeat any of the last five passwords."}, {"PWD_VALIDATION_FAILURE_FOR_CHARS", "[TW]Change Password as it does not contain characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_VALIDATION_FAILURE_FOR_USERPWD", "[TW]Change Password as the password must not be the same as the User."}, {"CUI_LICENSE_READ_FAILURE", "\u7121\u6cd5\u8b80\u53d6\u6388\u6b0a\u6a94\u6848"}, {"CUI_UPGRADE_SUCCESS", "\u5347\u7d1a\u6210\u529f"}, {"CUI_UPGRADE_FAIL", "\u5347\u7d1a\u5931\u6557\uff1a "}, {"CUI_SYNCH_SUCCESS", "\u540c\u6b65\u6210\u529f"}, {"CUI_SYNCH_FAIL", "\u540c\u6b65\u5931\u6557\uff1a "}, {"CUI_PRORATE_SUCCESS", "\u6309\u6bd4\u4f8b\u6307\u6d3e\u8acb\u6c42\u6210\u529f"}, {"CUI_PRORATE_FAIL", "\u6309\u6bd4\u4f8b\u6307\u6d3e\u8acb\u6c42\u5931\u6557\uff1a "}, {"CUI_CHANGE_PW_SUCCESS", "\u6210\u529f\u3002MySonicWall.com \u63a5\u53d7\u4e86\u5bc6\u78bc\u3002"}, {"CUI_CHANGE_PW_FAIL", "\u5931\u6557\u3002MySonicWall.com \u4e0d\u63a5\u53d7\u5bc6\u78bc\uff1a "}, {"CUI_EMAIL_SUCCESS", "\u5df2\u900f\u904e\u96fb\u5b50\u90f5\u4ef6\u5c07\u6280\u8853\u652f\u63f4\u8868\u55ae\u50b3\u9001\u81f3 SonicWall GMS \u652f\u63f4\u4e2d\u5fc3\u3002"}, {"CUI_EMAIL_FAIL", "\u5c07\u6280\u8853\u652f\u63f4\u5831\u544a\u50b3\u9001\u81f3 SonicWall GMS \u652f\u63f4\u4e2d\u5fc3\u6642\u51fa\u73fe\u554f\u984c\u3002<br>\u8acb\u7a0d\u5f8c\u91cd\u8a66\u3002"}, {"CUI_SESSION_TERMINATED", " \u5de5\u4f5c\u968e\u6bb5\u5df2\u6210\u529f\u7d42\u6b62"}, {"CUI_SESSIONS_TERMINATED", "\u5de5\u4f5c\u968e\u6bb5\u5df2\u6210\u529f\u7d42\u6b62\u3002"}, {"CUI_NO_AGENTS", "\u672a\u627e\u5230\u4ee3\u7406\u3002"}, {"CUI_FILTER_ADDED", "\u6210\u529f\u65b0\u589e\u65b0\u7be9\u9078\u5668 "}, {"DIAG_DIAG_REQUEST_A", "\u5c0d\u4ee5\u4e0b\u9805\u76ee\u9032\u884c\u7684\u8a3a\u65b7\u8acb\u6c42 "}, {"DIAG_DIAG_REQUEST_B", "\u5df2\u63d0\u4ea4\u3002"}, {"DIAG_DELETE_SUCCESS", "\u522a\u9664\u6210\u529f\u3002"}, {"DIAG_EMAIL_SUCCESS", "\u96fb\u5b50\u90f5\u4ef6\u6210\u529f\u50b3\u9001\u3002"}, {"DIAG_UNIT_UNKNOWN", "\u300c\u88dd\u7f6e\u540d\u7a31\u672a\u77e5\u300d"}, {"DIAG_UNIT", "\u300c\u88dd\u7f6e "}, {"VPN_DUPLICATE_UFI", "\u66f4\u65b0\u5931\u6557\u3002\u552f\u4e00\u7684\u9632\u706b\u7246\u8b58\u5225\u78bc\u5728 SonicWall GMS \u4e2d\u4e0d\u552f\u4e00\u3002"}, {"NO_LOGS_MESSAGE", "\u672a\u627e\u5230\u8a18\u9304\u3002"}, {"NO_LOGS_FOR_SEARCH_CRITERIA_MESSAGE", "\u6c92\u6709\u627e\u5230\u7b26\u5408\u63d0\u4f9b\u7684\u641c\u5c0b\u689d\u4ef6\u7684\u8a18\u9304\u3002"}, {"LOG_START_SEARCH", "\u958b\u59cb\u65b0\u641c\u5c0b"}, {"RESULTSET_CAUSED_OUTOFMEMORY_MESSAGE", "\u60a8\u67e5\u8a62\u7684 {0,number,integer} \u5247\u8a18\u9304\u592a\u5927\u3002\u8acb\u9650\u5236\u60a8\u7684\u641c\u5c0b\u689d\u4ef6\u3002"}, {"SQL_EXCEPTION_ERROR_MESSAGE", "\u8cc7\u6599\u5eab\u9023\u63a5\u4e2d\u767c\u751f\u932f\u8aa4\u3002\u8acb\u78ba\u4fdd\u8cc7\u6599\u5eab\u53ef\u7528\u4e26/\u6216\u9650\u5236\u60a8\u7684\u641c\u5c0b\u689d\u4ef6\u3002"}, {"UNKNOWN_EXCEPTION_MESSAGE", "\u57f7\u884c\u641c\u5c0b\u6642\u767c\u751f\u932f\u8aa4\u3002\u8acb\u78ba\u4fdd\u8cc7\u6599\u5eab\u53ef\u7528\u4e26/\u6216\u9650\u5236\u60a8\u7684\u641c\u5c0b\u689d\u4ef6\u3002"}, {"LOG_NEXT", "\u4e0b\u4e00\u6b65"}, {"LOG_PREVIOUS", "\u4e0a\u4e00\u6b65"}, {"LOG_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f"}, {"LOG_OF", "/ "}, {"LOG_OF", "/ "}, {"PREFS_SYNCHRONIZE_STARTED", "\u8207\u555f\u52d5\u7684\u88dd\u7f6e\u540c\u6b65\u8cc7\u8a0a\u6210\u529f\u3002"}, {"PREFS_SYNCHRONIZE_FAIL_LOGIN", "\u540c\u6b65\u88dd\u7f6e\u8cc7\u8a0a\u5931\u6557\uff0c\u7121\u6cd5\u767b\u5165\u81f3\u88dd\u7f6e\u3002"}, {"MON_NO_PRIVILEGES", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u8db3\u5920\u6b0a\u9650"}, {"MON_SYNC_TASK_CREATED", "\u5efa\u7acb\u540c\u6b65\u5de5\u4f5c\u6210\u529f"}, {"MON_SYNC_TASK_FAIL", "\u5efa\u7acb\u540c\u6b65\u5de5\u4f5c\u5931\u6557"}, {"MON_RENEGOTIATE_TASK_CREATED", "\u5efa\u7acb\u91cd\u65b0\u4ea4\u6d89\u5de5\u4f5c\u6210\u529f"}, {"MON_RENEGOTIATE_FAILED", "\u5efa\u7acb\u91cd\u65b0\u4ea4\u6d89\u5de5\u4f5c\u5931\u6557"}, {"MON_NO_SELECTED", "\u6c92\u6709\u9078\u5b9a\u7528\u65bc\u91cd\u65b0\u4ea4\u6d89\u7684\u901a\u9053"}, {"MON_REFRESH_CREATED", "\u5efa\u7acb\u91cd\u65b0\u6574\u7406\u7d71\u8a08\u5de5\u4f5c\u6210\u529f"}, {"MON_REFRESH_FAIL", "\u5efa\u7acb\u901a\u9053\u7d71\u8a08\u7684\u91cd\u65b0\u6574\u7406\u5de5\u4f5c\u5931\u6557"}, {"MON_NO_SELECTED_REFRESH", "\u6c92\u6709\u9078\u5b9a\u7528\u65bc\u91cd\u65b0\u6574\u7406\u7d71\u8a08\u7684\u901a\u9053"}, {"MON_UPDATE_SUCCESS", "\u66f4\u65b0\u6210\u529f"}, {"MON_UPDATE_FAIL", "\u66f4\u65b0\u5931\u6557"}, {"MON_NO_MONITORING", "\u7121\u6cd5\u76e3\u8996\u901a\u9053\u3002"}, {"MON_NAME", "\u540d\u7a31"}, {"MON_GATEWAY", "\u9598\u9053"}, {"MON_LAST_UPDATED", "\u6700\u5f8c\u66f4\u65b0\u6642\u9593"}, {"MON_DEST_ADDR_RANGE", "\u76ee\u6a19\u4f4d\u5740\u7bc4\u570d"}, {"MON_LOCAL_ADDR_RANGE", "\u672c\u6a5f\u4f4d\u5740\u7bc4\u570d"}, {"MON_NO_TUNNELS_FOUND", "\u672a\u627e\u5230\u901a\u9053\u3002"}, {"MON_TITLE", "VPN \u901a\u9053\u7d71\u8a08"}, {"MON_DESCRIPTION", "\u8aaa\u660e"}, {"MON_VALUE", "\u503c"}, {"MON_CREATE_TIME", "\u5efa\u7acb\u6642\u9593"}, {"MON_VALID_UNTIL", "\u901a\u9053\u6709\u6548\u671f\u81f3"}, {"MON_PACKETS_IN", "\u8f38\u5165\u5c01\u5305\u6578"}, {"MON_PACKETS_OUT", "\u8f38\u51fa\u5c01\u5305\u6578"}, {"MON_BYTES_IN", "\u8f38\u5165\u4f4d\u5143\u7d44\u6578"}, {"MON_BYTES_OUT", "\u8f38\u51fa\u4f4d\u5143\u7d44\u6578"}, {"MON_FRAGMENTS_IN", "\u8f38\u5165\u5df2\u5206\u5272\u5c01\u5305\u6578"}, {"MON_FRAGMENTS_OUT", "\u8f38\u51fa\u5df2\u5206\u5272\u5c01\u5305\u6578"}, {"MON_TUNNEL_ACTIVE", "\u901a\u9053\u8655\u65bc\u6d3b\u52d5\u72c0\u614b"}, {"REG_NO_PERMISSION", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u66f4\u65b0\u6b0a\u9650"}, {"REG_ERROR_RETRIEVING_COUNT", "\u64f7\u53d6\u8a3b\u518a/\u672a\u8a3b\u518a\u88dd\u7f6e\u7684\u8a08\u6578\u6642\u767c\u751f\u932f\u8aa4"}, {"REG_CURRENT", "\u76ee\u524d"}, {"REG_EXPIRED", "\u904e\u671f"}, {"REG_NO_LICENSE", "\u7121\u6388\u6b0a"}, {"FIRMWARE_UPLOAD_FAILED_MESSAGE", "\u97cc\u9ad4\u5f71\u50cf\u7121\u6cd5\u4e0a\u50b3"}, {"TASKS_SUCCESSFUL_DELETION", "\u5de5\u4f5c\u5df2\u5f9e\u8cc7\u6599\u5eab\u6210\u529f\u522a\u9664\u3002"}, {"TASKS_ERROR_DELETION", "\u932f\u8aa4\uff1a\u7121\u6cd5\u522a\u9664\u5de5\u4f5c\u3002"}, {"TASKS_EXECUTION_SET", "\u5de5\u4f5c\u5df2\u6210\u529f\u8a2d\u5b9a\u70ba\u7acb\u5373\u57f7\u884c\u3002"}, {"TASK_UNAUTHORIZED_EXECUTE_LOG_MESSAGE", "\u57f7\u884c\u4ee5\u4e0b\u5de5\u4f5c\u7684\u672a\u6388\u6b0a\u5617\u8a66"}, {"TASKS_ERROR_EXECUTION", "\u932f\u8aa4\uff1a\u7121\u6cd5\u6392\u7a0b\u57f7\u884c\u7684\u5de5\u4f5c\u3002"}, {"TASK_DELETED_LOG_MESSAGE", "\u4ee5\u4e0b\u5de5\u4f5c\u5df2\u88ab\u4f7f\u7528\u8005\u522a\u9664 "}, {"TASK_UNAUTHORIZED_DELETE_LOG_MESSAGE", "\u522a\u9664\u4ee5\u4e0b\u5de5\u4f5c\u7684\u672a\u6388\u6b0a\u5617\u8a66"}, {"NO_TASKS_MESSAGE", "\u672a\u627e\u5230\u5de5\u4f5c\u3002"}, {"NO_TASKS_FOR_SEARCH_CRITERIA_MESSAGE", "\u6c92\u6709\u627e\u5230\u7b26\u5408\u63d0\u4f9b\u7684\u641c\u5c0b\u689d\u4ef6\u7684\u5de5\u4f5c\u3002"}, {"TASKS_RESCHEDULED", "\u5de5\u4f5c\u5df2\u6210\u529f\u91cd\u65b0\u6392\u7a0b\u3002"}, {"TASK_UNAUTHORIZED_RESCHEDULE_LOG_MESSAGE", "\u91cd\u65b0\u6392\u7a0b\u4ee5\u4e0b\u5de5\u4f5c\u7684\u672a\u6388\u6b0a\u5617\u8a66"}, {"TASKS_ERROR_RESCHEDULE", "\u932f\u8aa4\uff1a\u7121\u6cd5\u91cd\u65b0\u6392\u7a0b\u5de5\u4f5c\u3002"}, {"IMMEDIATE_STRING", "\u7acb\u5373"}, {"UTC_STRING", "UTC"}, {"LOCAL_STRING", "\u672c\u6a5f"}, {"AGENT_STRING", "\u4ee3\u7406"}, {"TASK_RESCHEDULED_LOG_MESSAGE", "\u4ee5\u4e0b\u5de5\u4f5c\u5df2\u88ab\u4f7f\u7528\u8005\u91cd\u65b0\u6392\u7a0b "}, {"FROM_LOG_MESSAGE", "\u5f9e "}, {"TO_LOG_MESSAGE", "\u5230 "}, {"IMMEDIATE_LOG_MESSAGE", "\u7acb\u5373\u57f7\u884c"}, {"REG_PASSWORD_SUCCESS", "\u6210\u529f\u3002MySonicWall.com \u63a5\u53d7\u4e86\u5bc6\u78bc\u3002\u6309\u4e0b\u66f4\u65b0\u4ee5\u7e7c\u7e8c\u3002"}, {"REG_PASSWORD_FAIL", "\u5931\u6557\u3002MySonicWall.com \u4e0d\u63a5\u53d7\u5bc6\u78bc\uff1a "}, {"LOGIN_MESSAGE", "\u8acb\u767b\u5165"}, {"LOGIN_DEFAULT_MESSAGE", "\u8acb\u4f7f\u7528\u9810\u8a2d\u4f7f\u7528\u8005: 'admin' \u548c\u5bc6\u78bc: 'password' \u767b\u5165"}, {"LOGIN_DEFAULT_DEFINSTALL_MESSAGE", "\u8acb\u4f7f\u7528\u9810\u8a2d\u4f7f\u7528\u8005: 'admin' \u548c\u5bc6\u78bc: \u8207 /appliance \u76f8\u540c"}, {"LOGIN_DEMO_MESSAGE", "\u8acb\u4f7f\u7528\u4f7f\u7528\u8005: 'demo' \u548c\u5bc6\u78bc: 'password' \u767b\u5165"}, {"SETTINGSVPS_CHANGED", "\u60a8\u7684 Analyzer \u8a2d\u5b9a\u5df2\u66f4\u65b0\u3002"}, {"SETTINGS_CHANGED", "\u60a8\u7684\u8a2d\u5b9a\u66f4\u65b0\u3002"}, {"LOGS_USER_FORCEDOUT", "\u5df2\u5f37\u5236\u4ee5\u4e0b\u4f7f\u7528\u8005\u5f9e\u7cfb\u7d71\u767b\u51fa\uff1a "}, {"SLAVE_STATE_CHANGED_MESSAGE", "\u4ee3\u7406\u5df2\u6210\u529f\u8a2d\u5b9a\u4ee5\u8b8a\u66f4\u5176\u72c0\u614b\u3002"}, {"SLAVE_STATE_CHANGE_UNSUCCESSFUL_MESSAGE", "\u5617\u8a66\u5931\u6557\uff1a\u4ee3\u7406\u72c0\u614b\u7121\u6cd5\u8b8a\u66f4\u3002"}, {"SLAVE_PARAMETERS_UPDATED_MESSAGE", "\u4ee3\u7406\u53c3\u6578\u5df2\u6210\u529f\u66f4\u65b0\u3002"}, {"SLAVE_PARAMETERS_UPDATE_UNSUCCESSFUL_MESSAGE", "\u4ee3\u7406\u53c3\u6578\u7121\u6cd5\u6210\u529f\u66f4\u65b0\u3002"}, {"SCHEDULER_UP_STATE", "\u57f7\u884c"}, {"SCHEDULER_DOWN_STATE", "\u95dc\u9589"}, {"SCHEDULER_UNDETERMINED_STATE", "\u4e0d\u78ba\u5b9a"}, {"SLAVE_NO_UPDATE_PERMISSIONS_MESSAGE", "\u60a8\u6c92\u6709\u6b0a\u9650\u66f4\u65b0\u4ee3\u7406\u5167\u5bb9\u3002"}, {"SMTPSERVER_INVALID", "SMTP \u4f3a\u670d\u5668\u4f4d\u5740\u7121\u6548\u3002"}, {"APPLIANCE_MANAGE_FAILED", "\u7121\u6cd5\u8b8a\u66f4\u8a2d\u5099\u7684\u7ba1\u7406\u559c\u597d\u8a2d\u5b9a\u3002"}, {"EMPTY_SMTP_PWD", "SMTP \u5bc6\u78bc\u4e0d\u5f97\u7a7a\u767d"}, {"TREE_AGENT_STARTED", "\u4e3b\u8981\u4ee3\u7406\u61c9\u8655\u65bc\u555f\u52d5\u72c0\u614b\u624d\u80fd\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406"}, {"TREE_STANDBY_STARTED", "\u5099\u7528\u4ee3\u7406\u61c9\u8655\u65bc\u555f\u52d5\u72c0\u614b\u624d\u80fd\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406"}, {"TREE_LICENSE_EXCEEDED", "\u60a8\u6c92\u6709\u65b0\u589e\u66f4\u591a\u9032\u884c\u7ba1\u7406\u7684\u88dd\u7f6e\u7684\u6388\u6b0a\u3002"}, {"TREE_IP_EMPTY", "IP \u4e0d\u80fd\u70ba\u7a7a\u3002\u8acb\u63d0\u4f9b\u4e00\u500b\u6709\u6548\u7684 IP \u4f4d\u5740"}, {"TREE_AUTH_FAIL", "\u88dd\u7f6e\u9a57\u8b49\u5931\u6557\uff1b\u8acb\u78ba\u8a8d\u8a2d\u5b9a\u3002"}, {"TREE_NO_RESPONSE", "\u88dd\u7f6e\u7121\u6cd5\u5b58\u53d6\uff1b\u8acb\u78ba\u8a8d\u8a2d\u5b9a\u3002"}, {"TREE_FIREWALL_NOT_LICENSED", "\u88dd\u7f6e\u6c92\u6709 Analyzer \u6388\u6b0a\u3002"}, {"TREE_FIREWALL_STATE_ERROR", "\u7121\u6cd5\u64f7\u53d6\u88dd\u7f6e\u72c0\u614b\u8cc7\u8a0a\u3002\n\u88dd\u7f6e\u7684\u97cc\u9ad4\u53ef\u80fd\u9700\u8981\u9032\u884c\u66f4\u65b0\u3002"}, {"TREE_MODEL_FAIL", "\u7121\u6cd5\u64f7\u53d6\u578b\u865f\u8cc7\u8a0a"}, {"TREE_FIRMWARE_VERSION_FAIL", "\u7121\u6cd5\u64f7\u53d6\u97cc\u9ad4\u7248\u672c"}, {"TREE_UNMATCHED_SERIAL", "\u5e8f\u865f\u4e0d\u76f8\u7b26\u3002"}, {"TREE_TIMEZONE_FAIL", "\u7121\u6cd5\u64f7\u53d6\u6642\u5340"}, {"TREE_UTC_FAIL", "\u8a18\u9304\u8a0a\u606f\u4e26\u975e UTC \u683c\u5f0f\u3002\u8acb\u5c07\u88dd\u7f6e\u7684\u6642\u9593\u6233\u683c\u5f0f\u8b8a\u66f4\u70ba UTC\uff0c\u5426\u5247\u7522\u751f\u7684\u5831\u544a\u5c07\u986f\u793a\u932f\u8aa4\u7684\u6642\u9593"}, {"TREE_DISABLE_VP_SETTINGS_UTC_FAIL", "\u8acb\u5728\u300c\u8a18\u9304\u300d>ViewPoint \u87a2\u5e55\u4e2d\u555f\u7528\u300c\u555f\u7528 ViewPoint \u8a2d\u5b9a\u300d\u9078\u9805\u3002\u6b64\u8a2d\u5b9a\u5c07\u8b8a\u66f4\u4ee5\u4e0b\u5167\u5bb9\uff1a\n\t1.\u4ee5 UT\u683c\u5f0f\u50b3\u9001 Syslog\n\t2.\u5c07\u300cSyslog \u4e8b\u4ef6\u5197\u9918\u7be9\u9078\u5668\u300d\uff08\u79d2\u6578\uff09\u8a2d\u5b9a\u70ba 0\n\t3.\u5c07\u300cSyslog \u683c\u5f0f\u300d\u8a2d\u5b9a\u70ba\u9810\u8a2d\u503c"}, {"TREE_NO_SCHEDULER", "\u6307\u5b9a\u7684 IP \u4f4d\u5740\u672a\u627e\u5230\u6392\u7a0b\u5668\uff0c\u88dd\u7f6e\u672a\u65b0\u589e"}, {"TREE_GET_PREFS_ERR", "\u64f7\u53d6\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {"TREE_FIREWALL_NOT_REGISTERED", "\u6b64\u88dd\u7f6e\u672a\u8a3b\u518a\u3002\u8acb\u5b58\u53d6 MySonicWall.com \u4e26\u8a3b\u518a\u8a72\u88dd\u7f6e\uff0c\u7136\u5f8c\u5c07\u5176\u65b0\u589e\u81f3 Analyzer\u3002"}, {"TREE_BACKEND_COMM_FAILURE", "Analyzer \u7121\u6cd5\u8207 MySonicWall.com \u901a\u8a0a\u4ee5\u9a57\u8b49\u6388\u6b0a\u3002\n\u8acb\u6aa2\u67e5\u60a8\u7684\u7db2\u8def\u9023\u63a5\uff1bAnalyzer \u4f3a\u670d\u5668\u5fc5\u9808\u80fd\u5920\u8207 MySonicWall.com \u901a\u8a0a\u3002 "}, {"SU_DB_SIZE_EMAILBODY1", "\u76ee\u524d\u8cc7\u6599\u5eab\u5927\u5c0f\u5982\u4e0b\uff1a\n\n"}, {"SU_DB_SIZE_EMAILBODY2", "\n\u8a3b\uff1a\u6700\u5927\u8cc7\u6599\u5eab\u5927\u5c0f\u9650\u5236\u70ba 2GB \n\n \n\u4ee5\u4e0b\u8a2d\u5b9a\u8b8a\u66f4\u5c07\u5f71\u97ff\u8cc7\u6599\u5eab\u4f7f\u7528\u60c5\u6cc1\u7684\u7e3d\u9ad4\u898f\u6a21\uff1a\n\t\u6e1b\u5c0f\u300c\u63a7\u5236\u9762\u677f\u300d->\u300c\u5831\u544a\u300d->\u300c\u8a2d\u5b9a\u300d\u87a2\u5e55\u4e2d\u300c\u539f\u59cb\u8cc7\u6599\u5132\u5b58\u5929\u6578\u300d\u7684\u5929\u6578\u8a2d\u5b9a\u3002\n\t\u6e1b\u5c0f\u300c\u63a7\u5236\u9762\u677f\u300d->\u300c\u5831\u544a\u300d->\u300c\u6458\u8981\u5668\u300d\u87a2\u5e55\u4e2d\u300c\u6458\u8981\u8cc7\u6599\u5132\u5b58\u5929\u6578\u300d\u8a2d\u5b9a\u7684\u5929\u6578\u3002"}, {"SU_DB_SIZE_EMAILBODY_NOTE", "\n\u8a3b\uff1a "}, {"SU_DB_SIZE_EMAILBODY_VPSMSDE", "\u6700\u5927\u8cc7\u6599\u5eab\u5927\u5c0f\u9650\u5236\u70ba 2GB \n\n"}, {"SU_DB_SIZE_EMAILBODY_GEN", "\n\u4ee5\u4e0b\u8a2d\u5b9a\u8b8a\u66f4\u5c07\u5f71\u97ff\u8cc7\u6599\u5eab\u4f7f\u7528\u60c5\u6cc1\u7684\u7e3d\u9ad4\u898f\u6a21\uff1a\n\t\u6e1b\u5c0f\u300c\u63a7\u5236\u9762\u677f\u300d->\u300c\u5831\u544a\u300d->\u300c\u8a2d\u5b9a\u300d\u87a2\u5e55\u4e2d\u300c\u539f\u59cb\u8cc7\u6599\u5132\u5b58\u5929\u6578\u300d\u7684\u5929\u6578\u8a2d\u5b9a\u3002\n\t\u6e1b\u5c0f\u300c\u63a7\u5236\u9762\u677f\u300d->\u300c\u5831\u544a\u300d->\u300c\u6458\u8981\u5668\u300d\u87a2\u5e55\u4e2d\u300c\u6458\u8981\u8cc7\u6599\u5132\u5b58\u5929\u6578\u300d\u8a2d\u5b9a\u7684\u5929\u6578\u3002"}, {"SU_DB_LOG_SIZE_EMAILBODY_WARNING", "\u8b66\u544a\uff1a\n"}, {"SU_DB_LOG_SIZE_EMAILBODY_GEN", "\u8acb\u78ba\u8a8d\u6c92\u6709\u5728\u7dad\u8b77\u5099\u4efd\u8a08\u5283\u4e2d\u8a2d\u5b9a\u8cc7\u6599\u5eab\uff0c\u6216\u73fe\u6709\u8a08\u5283\u7121\u6cd5\u6e05\u9664\u8a18\u9304\u3002\n\u5982\u679c\u6c92\u6709\u5728\u7dad\u8b77\u8a08\u5283\u4e2d\u8a2d\u5b9a\u8cc7\u6599\u5eab\uff0c\u4ea4\u6613\u8a18\u9304\u5c07\u7e7c\u7e8c\u589e\u9577\u4e26\u586b\u6eff\u6574\u500b\u786c\u789f\uff0c \n\u6b64\u6642\u8cc7\u6599\u5eab\u548c GMS \u7cfb\u7d71\u5c07\u7121\u6cd5\u5de5\u4f5c\u3002\u5176\u6b21\uff0c\u5982\u679c\u8cc7\u6599\u5eab\u640d\u6bc0\uff0c\u60a8\u5c07\u7121\u6cd5\u5c07\u8cc7\u6599\u5eab \n\u9084\u539f\u70ba\u4e0a\u4e00\u5df2\u77e5\u5099\u4efd\u3002"}, {"SU_DB_SIZE_EMAILSUBJECT", "SonicWall Analyzer: \u8cc7\u6599\u5eab\u5065\u5eb7\u6aa2\u67e5"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY1", "\u767b\u5165\u6388\u6b0a\u9a57\u8b49\u5931\u6557\u7684\u88dd\u7f6e\uff0c\u88dd\u7f6e\u5e8f\u865f\u70ba "}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_BODY2", "\u3002\u8acb\u78ba\u4fdd\u6c92\u6709\u5728\u88dd\u7f6e\u4e0a\u672c\u6a5f\u8b8a\u66f4\u767b\u5165\u6240\u9700\u7684\u4efb\u4f55\u8a2d\u5b9a\u3002 \u4f7f\u7528\u300c\u4fee\u6539\u88dd\u7f6e\u300d\u9ad4\u73fe Analyzer \u4e2d\u7684\u8b8a\u66f4", "\u900f\u904e Analyzer \u9032\u884c\u6388\u6b0a\u9a57\u8b49"}, {"SU_LIC_VALIDATION_LOGIN_FAILURE_SUBJECT", "\u900f\u904e Analyzer \u9032\u884c\u6388\u6b0a\u9a57\u8b49"}, {"SU_LIC_VALIDATION_FAILURE_BODY1", "\u767b\u5165\u81f3\u88dd\u7f6e "}, {"SU_LIC_VALIDATION_FAILURE_BODY2", "\uff0c\u8a72\u88dd\u7f6e\u6388\u6b0a\u9a57\u8b49\u5931\u6557\u4e26\u4e14\u5df2\u8d85\u904e\u5bec\u9650\u671f\u3002\u8acb\u78ba\u4fdd\u6c92\u6709\u5728\u88dd\u7f6e\u4e0a\u672c\u6a5f\u8b8a\u66f4\u767b\u5165\u6240\u9700\u7684\u4efb\u4f55\u8a2d\u5b9a\u3002 \u4f7f\u7528\u300c\u4fee\u6539\u88dd\u7f6e\u300d\u9ad4\u73fe VPS \u4e2d\u7684\u8b8a\u66f4"}, {"SU_LIC_VALIDATION_FAILURE_SUBJECT", "Analyzer \u6388\u6b0a\u5df2\u904e\u671f\uff01"}, {"SU_LIC_EXPIRED_BODY1", "\u60a8\u7684\u88dd\u7f6e "}, {"SU_LIC_EXPIRED_BODY2", "\u6c92\u6709 Analyzer \u6388\u6b0a\u3002\u8acb\u6aa2\u67e5\u88dd\u7f6e\u4e0a\u7684\u8a2d\u5b9a"}, {"SU_LIC_EXPIRED_SUBJECT", "Analyzer \u6388\u6b0a\u5df2\u904e\u671f\uff01"}, {"LOGVIEW_WRONG_START_DT", "\u958b\u59cb\u65e5\u671f\u683c\u5f0f\u932f\u8aa4\u3002\u65e5\u671f\u5fc5\u9808\u70ba mm/dd/yyyy \u683c\u5f0f\u3002"}, {"LOGVIEW_WRONG_END_DT", "\u7d50\u675f\u65e5\u671f\u683c\u5f0f\u932f\u8aa4\u3002\u65e5\u671f\u5fc5\u9808\u70ba mm/dd/yyyy \u683c\u5f0f\u3002"}, {"LOGVIEW_ENDDT_LESS_STARTDT", "\u7d50\u675f\u65e5\u671f\u5c0f\u65bc\u958b\u59cb\u65e5\u671f\u3002\u8acb\u8f38\u5165\u6709\u6548\u7684\u958b\u59cb\u65e5\u671f\u548c\u7d50\u675f\u65e5\u671f\u3002"}, {"LOGVIEW_MSGS_PERSCRN", "\u6bcf\u87a2\u5e55\u8a0a\u606f\u6578"}, {"LOGVIEW_EXPORT_CONFIRM_MSG", "\u60a8\u5373\u5c07\u532f\u51fa {0,number,integer} \u500b\u8a18\u9304\u9805\u76ee\u3002\u662f\u5426\u78ba\u5b9a\u8981\u9019\u6a23\u505a\uff1f \u5982\u679c\u4e0d\u662f\uff0c\u8acb\u53d6\u6d88\u6b64\u5c0d\u8a71\u65b9\u584a\u4e26\u9650\u5236\u641c\u5c0b\u689d\u4ef6\u3002"}, {"LOGVIEW_GOTO_MSG", "\u79fb\u81f3\u8a0a\u606f\u7de8\u865f"}, {"LOGVIEW_SHOW_MSGS_PERSCRN", "\u986f\u793a\u6bcf\u87a2\u5e55\u8a0a\u606f\u6578\uff1a"}, {"LOGVIEW_RANGE", "\uff08\u7bc4\u570d\uff1a10-100\uff09"}, {"LOGVIEW_COL_DT", "\u65e5\u671f"}, {"LOGVIEW_COL_MSG", "\u8a0a\u606f"}, {"LOGVIEW_COL_SEV", "\u56b4\u91cd\u6027"}, {"LOGVIEW_COL_USER", "GMS \u4f7f\u7528\u8005"}, {"LOGVIEW_COL_CO", "Change Order"}, {"LOGVIEW_COL_IP", "\u4f7f\u7528\u8005 IP"}, {"LOGVIEW_SEARCH_RESULTS", "\u641c\u5c0b\u7d50\u679c"}, {"LOGVIEW_SEARCH_CRITERIA", "\u641c\u5c0b\u689d\u4ef6"}, {"LOGVIEW_EXPORT_LOGS", "\u532f\u51fa\u8a18\u9304"}, {"LOGVIEW_CLEAR_LOGS", "\u6e05\u9664\u641c\u5c0b"}, {"LOGVIEW_SEARCH_LOGS", "\u958b\u59cb\u641c\u5c0b"}, {"LOGVIEW_MATCH_CASE", "\u5340\u5206\u5927\u5c0f\u5beb"}, {"LOGVIEW_EXACT_PHRASE", "\u7cbe\u78ba\u5b57\u8a5e"}, {"LOGVIEW_ANY_WORD", "\u4efb\u610f\u5b57"}, {"LOGVIEW_ALL_WORDS", "\u6240\u6709\u5b57"}, {"LOGVIEW_MSG", "\u8a0a\u606f\u5305\u542b\uff1a"}, {"LOGVIEW_CO", "Change Order:"}, {"LOGVIEW_TIME", "\u9078\u64c7\u8a18\u9304\u6642\u9593\uff1a\u5f9e\uff1a"}, {"LOGVIEW_TIME_TO", "\u5230\uff1a "}, {"LOGVIEW_NODE_NAME", "SonicWall \u7bc0\u9ede\uff1a"}, {"LOGVIEW_USER", "\u4f7f\u7528\u8005\uff1a "}, {"LOGVIEW_SEV", "\u56b4\u91cd\u6027\uff1a "}, {"LOGVIEW_CALENDAR", "\u884c\u4e8b\u66c6"}, {"LOGVIEW_ALL", "\u6240\u6709\uff08\u8b66\u793a\u3001\u8b66\u544a\u548c Info\uff09"}, {"LOGVIEW_ALERT_WARNING", "\u8b66\u793a\u548c\u8b66\u544a"}, {"LOGVIEW_ALERT", "\u8b66\u793a"}, {"LOGVIEW_STR_FORMAT", "\u641c\u5c0b\u5b57\u4e32\u683c\u5f0f\uff1auser@domain\u3002<br>\u50c5\u9650\u4f7f\u7528\u8005\uff0c\u8f38\u5165 user\u3002<br>\u50c5\u9650\u7db2\u57df\uff0c\u8f38\u5165 @domain\u3002<br><i>\u8a3b\uff1a \u5982\u679c\u4f7f\u7528\u8005\u503c\u5305\u542b @ \u5b57\u5143\uff0c\u5247\u4f7f\u7528\u53e6\u4e00\u500b @ \u7d42\u6b62\u641c\u5c0b\u5b57\u4e32\u3002</i>"}, {"HELPABOUT_VERSION", "\u7248\u672c\uff1a"}, {"HELPABOUT_LIC", "\u6388\u6b0a\u7d66\uff1a"}, {"HELPABOUT_SN", "\u5e8f\u865f\uff1a"}, {"HELPABOUT_DBDRIVER", "\u8cc7\u6599\u5eab\u9a45\u52d5\u7a0b\u5f0f\uff1a"}, {"HELPABOUT_DBVERSION", "\u8cc7\u6599\u5eab\u7248\u672c\uff1a"}, {"HELPABOUT_REPORT_DBVERSION", "\u5831\u544a\u8cc7\u6599\u5eab\u7248\u672c:"}, {"LOGIN_TITLE", "\u767b\u5165"}, {"LOGIN_ISBLANK", "\u70ba\u7a7a\u767d\u3002\u8acb\u586b\u5beb\u4e00\u500b\u503c\u3002"}, {"LOGIN_INVALIDID", "\u6307\u5b9a\u7684\u4f7f\u7528\u8005 ID \u7121\u6548\u3002"}, {"LOGIN_INVALIDID2", "\u4f7f\u7528\u8005 ID \u53ea\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a"}, {"LOGIN_INVALIDID3", "\u82f1\u6578\u5b57\u5143\u3001.\uff08\u53e5\u9ede\uff09\u3001-\uff08\u9023\u5b57\u7b26\uff09\u3001_\uff08\u5e95\u7dda\uff09\u548c @(At)\u3002"}, {"LOGIN_INVALIDID4", "\u8acb\u4f7f\u7528\u5141\u8a31\u7684\u5b57\u5143\u6307\u5b9a\u4f7f\u7528\u8005 ID\u3002"}, {"LOGIN_USERNAME", "\u4f7f\u7528\u8005\u540d\u7a31"}, {"LOGIN_PASSWORD", "\u5bc6\u78bc"}, {"LOGIN_LOGIN", "\u767b\u5165"}, {"LOGIN_DOMAIN", "\u7db2\u57df"}, {"LOGIN_SWITCH_EN_US", "\u5207\u63db\u5230\u82f1\u6587\u754c\u9762"}, {"LOGIN_SWITCH_JA_JP", "\u5207\u63db\u5230\u65e5\u6587\u754c\u9762"}, {"LOGIN_SWITCH_ZH_CN", "\u5207\u63db\u5230\u7c21\u9ad4\u754c\u9762"}, {"LOGIN_SWITCH_ZH_TW", "\u5207\u63db\u5230\u7e41\u9ad4\u754c\u9762"}, {"LOGIN_SWITCH_KO_KR", "\u5207\u63db\u5230\u97d3\u8a9e UI"}, {"LOGIN_SWITCH_PT_BR", "\u5207\u63db\u70ba\u5df4\u897f\u8461\u8404\u7259\u6587 UI"}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}, {"LOGOUT_TITLE", "\u767b\u51fa"}, {"LOGOUT_VPMSG", "\u60a8\u73fe\u5728\u5df2\u6210\u529f\u5f9e SonicWall Analyzer \u7cfb\u7d71\u4e2d\u767b\u51fa\u3002"}, {"LOGOUT_VPMSG1", "\u82e5\u8981\u555f\u52d5\u65b0\u7684 SonicWall Analyzer \u5de5\u4f5c\u968e\u6bb5\uff0c\u5efa\u8b70\u60a8\u95dc\u9589\u6216\u7d50\u675f\u6b64\u700f\u89bd\u5668&nbsp<br>&nbsp\u7136\u5f8c\u958b\u555f\u8a72\u700f\u89bd\u5668\u7684\u4e00\u500b\u65b0\u57f7\u884c\u500b\u9ad4\u3002"}, {"LOGOUT_GMSMSG", "\u60a8\u73fe\u5728\u5df2\u6210\u529f\u5f9e SonicWall \u5168\u57df\u7ba1\u7406\u7cfb\u7d71\u4e2d\u767b\u51fa\u3002"}, {"LOGOUT_GMSMSG1", "\u82e5\u8981\u555f\u52d5\u65b0\u7684 SonicWall GMS \u5de5\u4f5c\u968e\u6bb5\uff0c\u5efa\u8b70\u60a8\u95dc\u9589\u6216\u7d50\u675f\u6b64\u700f\u89bd\u5668&nbsp<br>&nbsp\u7136\u5f8c\u958b\u555f\u8a72\u700f\u89bd\u5668\u7684\u4e00\u500b\u65b0\u57f7\u884c\u500b\u9ad4\u3002"}, {"SETTINGSUSER_CHANGE", "\u8b8a\u66f4"}, {"SETTINGSUSER_OLD", "\u76ee\u524d"}, {"SETTINGSUSER_PASSWORD", "\u5bc6\u78bc"}, {"SETTINGSUSER_NEW", "\u65b0"}, {"SETTINGSUSER_CONFIRMMSG", "\u78ba\u8a8d\u65b0\u5bc6\u78bc"}, {"SETTINGSUSER_FAILMSG", "\u300c\u5bc6\u78bc\u300d\u548c\u300c\u78ba\u8a8d\u65b0\u5bc6\u78bc\u300d\u9805\u76ee\u4e0d\u76f8\u7b26\u3002"}, {"SETTINGSUSER_PASSWORD_ALPHANUMERIC_MSG", "\u5bc6\u78bc\u9577\u5ea6\u5fc5\u9808\u81f3\u5c11\u70ba 7 \u500b\u5b57\u5143\u4e26\u4e14\u5305\u542b\u5b57\u6bcd\u548c/\u6216\u6578\u5b57\u3002"}, {"INVALID_PASSWORD", "\u6307\u5b9a\u7684\u5bc6\u78bc\u7121\u6548\u3002"}, {"PWD_RULES", "\u5bc6\u78bc\u61c9\u57fa\u65bc\u4ee5\u4e0b\u898f\u5247\u5efa\u7acb\uff1a "}, {"VALID_PWD_RULE_FOR_PCI", "    - \u9577\u5ea6\u81f3\u5c11 7 \u500b\u5b57\u5143\u3002"}, {"MAX_PWD_LEN", "    - \u5141\u8a31\u7684\u6700\u5927\u9577\u5ea6\u70ba 15 \u500b\u5b57\u5143\u3002"}, {"PWD_ALPHANUMERIC_CHARS", "    - \u53ef\u5305\u542b\u82f1\u6578\u5b57\u5143\u3002"}, {"PWD_SPCIAL_CHARS", "    - \u53ef\u5305\u542b\u7279\u6b8a\u5b57\u5143\u3002"}, {"PWD_ALPHANUMERICSYMBOL_CHARS", "[TW]    - Must include characters from at least two (2) of these groupings: alpha, numeric, and special characters."}, {"PWD_USERID_SIMILAR", "[TW]    - Passwords must not be the same as the User."}, {"PREV_PWD_SEQUENCE", "[TW]    - New passwords must not contain a sequence of three (3) or more characters from the previous password."}, {"PWD_MEETS_REQS", "\u8acb\u6307\u5b9a\u7b26\u5408\u8981\u6c42\u7684\u5bc6\u78bc\u3002"}, {"SETTINGSUSER_MISCSETTINGS", "\u5176\u4ed6\u8a2d\u5b9a"}, {"SETTINGSUSER_TIMEOUTPERIOD", "\u903e\u6642\u671f\u9650\u53ef\u70ba -1 \u6216\u5728 [5..120] \u7bc4\u570d\u5167\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u6578\u5b57\u3002"}, {"SETTINGSUSER_NEVERTIMEOUT", "\u6c38\u4e0d\u903e\u6642"}, {"SETTINGSUSER_INACTIVITYTIMEOUT", "\u4e0d\u6d3b\u52d5\u903e\u6642"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW", "\u88dd\u7f6e\u9078\u64c7\u9762\u677f\uff0c\u986f\u793a\uff1a"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONS", "\u5716\u793a"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_TEXT", "\u6587\u5b57"}, {"SETTINGSUSER_APPSELSETTINGS_SHOW_ICONSANDTEXT", "\u5716\u793a\u548c\u6587\u5b57\uff08\u9810\u8a2d\u503c\uff09"}, {"MAX_ROWS_PER_SCREEN", "\u6bcf\u87a2\u5e55\u6700\u5927\u5217\u6578\uff1a"}, {"MAX_ROWS_PER_SCREEN_COMMENT", "\u7bc4\u570d\uff1a[10..100]\uff08\u50c5\u9069\u7528\u65bc\u975e\u5831\u544a\u76f8\u95dc\u5206\u9801\u87a2\u5e55\uff09"}, {"MAX_ROWS_PER_SCREEN_INVALID_RANGE_ALERT_MSG", "\u6bcf\u87a2\u5e55\u6700\u5927\u5217\u6578\u503c\u8d85\u51fa\u6709\u6548\u7684\u7bc4\u570d\u3002\u8acb\u8f38\u5165\u4ecb\u65bc 10 \u5230 100 \u4e4b\u9593\u7684\u6578\u5b57\uff08\u5305\u542b\u908a\u754c\uff09\u3002"}, {"MAX_ROWS_PER_SCREEN_NAN_ALERT_MSG", "\u6bcf\u87a2\u5e55\u6700\u5927\u5217\u6578\u503c\u4e26\u975e\u6578\u5b57\u3002\u8acb\u8f38\u5165\u4e00\u500b\u6709\u6548\u6578\u5b57\u3002"}, {"AUTO_SAVE_DASHBOARD_SETTINGS", "\u81ea\u52d5\u5132\u5b58\u5100\u8868\u677f\u8a2d\u5b9a\uff1a"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_COMMENT", "-1\uff1a\u81ea\u52d5\u5132\u5b58\u672a\u555f\u7528\u6216\u7bc4\u570d\uff1a[1..60]"}, {"AUTO_SAVE_DASHBOARD_SETTINGS_MESSAGE", "\u81ea\u52d5\u5132\u5b58\u5100\u8868\u677f\u8a2d\u5b9a\u53ef\u70ba -1 \u6216\u5728 [1..60] \u7bc4\u570d\u5167\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u6578\u5b57\u3002"}, {"CHANGEPASSWORD_OLD", "\u76ee\u524d\u5bc6\u78bc"}, {"CHANGEPASSWORD_NEW", "\u65b0\u5bc6\u78bc"}, {"CHANGEPASSWORD_CONFIRM", "\u78ba\u8a8d\u65b0\u5bc6\u78bc"}, {"CHANGEPASSWORD_USER", "\u4f7f\u7528\u8005"}, {"CUSTLOGSETTINGS_NOTE1", "\u8a3b\uff1a\u60a8\u53ef\u4ee5\u8f38\u5165\u900f\u904e\u5206\u865f (\";\") \u5206\u9694\u7684\u591a\u500b\u96fb\u5b50\u90f5\u4ef6\u5730\u5740"}, {"CUSTLOGSETTINGS_SECTITLE1", "\u96fb\u5b50\u90f5\u4ef6\u8b66\u793a\u6536\u4ef6\u8005\u6392\u7a0b"}, {"CUSTLOGSETTINGS_WEEKDAY", "\u5de5\u4f5c\u65e5\uff1a"}, {"CUSTLOGSETTINGS_SCHED1", "\u6392\u7a0b 1\uff1a"}, {"CUSTLOGSETTINGS_SCHED2", "\u6392\u7a0b 2\uff1a"}, {"CUSTLOGSETTINGS_SCHED3", "\u6392\u7a0b 3\uff1a"}, {"CUSTLOGSETTINGS_SAT", "\u9031\u516d"}, {"CUSTLOGSETTINGS_SUN", "\u9031\u65e5"}, {"CUSTLOGSETTINGS_WEEKEND", "\u9031\u672b\uff1a"}, {"CUSTLOGSETTINGS_HRS", "\u5c0f\u6642"}, {"CUSTLOGSETTINGS_TO", "\u6536\u4ef6\u8005"}, {"CUSTLOGSETTINGS_ALERTFMT", "\u96fb\u5b50\u90f5\u4ef6\u8b66\u793a\u683c\u5f0f\u559c\u597d\u8a2d\u5b9a"}, {"CUSTLOGSETTINGS_HTML", "HTML"}, {"CUSTLOGSETTINGS_HTML_DESC", "\u5305\u542b\u6587\u672c\uff0c\u8272\u5f69\uff0c\u5716\u50cf\u548c\u93c8\u63a5\u3002\u50c5\u80fd\u8207\u96fb\u5b50\u90f5\u4ef6\u8edf\u4ef6\u517c\u5bb9(HTML)."}, {"CUSTLOGSETTINGS_TEXT", "\u7d14\u6587\u5b57"}, {"CUSTLOGSETTINGS_TEXT_DESC", "\u5305\u542b\u7d14\u6587\u5b57\u7684\u6240\u6709\u7d30\u7bc0\uff0c\u517c\u5bb9\u6240\u6709\u7684\u96fb\u5b50\u90f5\u4ef6\u8edf\u4ef6."}, {"CUSTLOGSETTINGS_PAGER", "\u7d14\u6587\u5b57\uff08\u7c21\u55ae\uff09"}, {"CUSTLOGSETTINGS_PAGER_DESC", "\u5305\u542b\u4e00\u500b\u7d14\u6587\u5b57\u7684\u77ed\u6d88\u606f\u3002\u64c7\u7528\u4e8e\u5c0b\u547c\u6a5f\uff0cSMS\uff08\u77ed\u8a0a\u670d\u52d9\uff09\u548c\u985e\u4f3c\u7684\u7a0b\u5f0f."}, {"LOGCONFIG_SECTITLE_1", "\u522a\u9664"}, {"LOGCONFIG_SECTITLE_2", "\u8a18\u9304\u8a0a\u606f"}, {"LOGCONFIG_DELLABEL", "\u522a\u9664\u65e9\u65bc\u4ee5\u4e0b\u6642\u9593\u7684\u8a18\u9304\u8a0a\u606f\uff1a"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u65e5"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u7528\u65bc"}, {"LOGCONFIG_DOMAIN", "\u7db2\u57df"}, {"SESSIONS_NOSESSALERT", "\u6c92\u6709\u8981\u7d50\u675f\u7684\u5de5\u4f5c\u968e\u6bb5\u3002"}, {"SESSIONS_NOSESSSELALERT", "\u8acb\u9078\u64c7\u8981\u7d50\u675f\u7684\u5de5\u4f5c\u968e\u6bb5\u3002"}, {"SESSIONS_RUSUREALERT", "\u662f\u5426\u78ba\u5b9a\u8981\u7d50\u675f\u9078\u5b9a\u7684\u5de5\u4f5c\u968e\u6bb5\uff1f"}, {"SESSIONS_TITLE", "\u76ee\u524d\u5de5\u4f5c\u968e\u6bb5"}, {"SESSIONS_COL1", "\u4f7f\u7528\u8005\u540d\u7a31"}, {"SESSIONS_COL2", "IP \u4f4d\u5740"}, {"SESSIONS_COL3", "\u767b\u5165\u6642\u9593"}, {"SESSIONS_COL4", "\u4e0a\u6b21\u5b58\u53d6\u6642\u9593"}, {"SESSIONS_COL5", "\u7db2\u57df\u540d\u7a31"}, {"SESSIONS_END", "\u7d50\u675f\u9078\u5b9a\u7684\u5de5\u4f5c\u968e\u6bb5"}, {"LOGINVPSSETTINGS_LABEL1", "SMTP \u4f3a\u670d\u5668\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL11", "SMTP \u9023\u63a5\u57e0"}, {"LOGINVPSSETTINGS_LABEL2", "\u5bc4\u4ef6\u8005\u96fb\u5b50\u90f5\u4ef6\u4f4d\u5740"}, {"LOGINVPSSETTINGS_LABEL3", "\u7ba1\u7406\u54e1\u96fb\u5b50\u90f5\u4ef6\u5730\u5740"}, {"LOGINVPSSETTINGS_LABEL3_5", "\u4f7f\u7528 TLS"}, {"LOGINVPSSETTINGS_LABEL4", "\u4f7f\u7528\u9a57\u8b49"}, {"LOGINVPSSETTINGS_LABEL5", "\u4f7f\u7528\u8005"}, {"LOGINVPSSETTINGS_LABEL6", "\u5bc6\u78bc"}, {"LOGINVPSSETTINGS_NOTE", "\u9644\u8a3b\uff1a\u82e5\u8981\u8b8a\u66f4\u6536\u4ef6\u8005\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\uff0c\u8acb\u4f7f\u7528\u300c\u4e3b\u63a7\u53f0 > \u8b66\u793a > \u57fa\u672c\u300d"}, {"LOGINVPSSETTINGS_DEBUGLEVEL", "\u7cfb\u7d71\u5075\u932f\u7d1a\u5225\uff1a"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE1", "\u8a2d\u5b9a\u5075\u932f\u7b49\u7d1a\u53ef\u4ee5\u66f4\u5feb\u901f\u5730\u91dd\u5c0d\u6f5b\u5728\u7684\u61c9\u7528\u7a0b\u5f0f\u554f\u984c\u9032\u884c\u6545\u969c\u6392\u9664\u3002\u900f\u904e\u6b64\u90e8\u7f72\uff0c\u6b64\u64cd\u4f5c\u5c07\u5728\u6240\u6709\u7cfb\u7d71\u4e0a\u5efa\u7acb\u5075\u932f\u8a18\u9304\u6a94\uff0c\u53ef\u80fd\u6703\u5f71\u97ff\u61c9\u7528\u7a0b\u5f0f\u7684\u6548\u80fd\uff0c\u9084\u6703\u7528\u76e1\u78c1\u789f\u7a7a\u9593\u3002\u53ea\u8981\u6f5b\u5728\u7684\u554f\u984c\u7372\u5f97\u4e86\u89e3\u6c7a\uff0c\u60a8\u5c31\u61c9\u8a72\u5c0d\u4e00\u822c\u64cd\u4f5c\u91cd\u8a2d\u70ba<i>\u7121\u5075\u932f</i>\u3002"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE2", "\u8a3b\uff1a "}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE3", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u61c9\u7576\u57fa\u65bc SonicWall \u6280\u8853\u652f\u63f4\u4e2d\u7684\u6307\u5c0e\u4f86\u8a2d\u5b9a\u5075\u932f\u7b49\u7d1a"}, {"LOGINVPSSETTINGS_DEBUGLEVEL_NOTE4", "&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;\u5075\u932f\u7d1a\u5225\u8d8a\u9ad8\uff0c\u7528\u65bc\u7522\u751f\u5075\u932f\u8cc7\u6599\u7684\u7cfb\u7d71\u8cc7\u6e90\u8d8a\u591a\uff0c\u9032\u800c\u6703\u964d\u4f4e\u6574\u9ad4\u7cfb\u7d71\u6548\u80fd\u3002"}, {"LOGINVPSSETTINGS_SYNCMODELCODESINFONOW", "\u7acb\u5373\u540c\u6b65\u578b\u865f\u4ee3\u78bc\u8cc7\u8a0a"}, {"LOGINVPSSETTINGS_SMTP_QUESTION", "\u662f\u5426\u8981\u4f7f\u7528\u65b0\u7684 SMTP \u4f3a\u670d\u5668\u4f4d\u5740\u66f4\u65b0\u6240\u6709\u73fe\u6709\u5df2\u6392\u7a0b\u5831\u544a\u7684 SMTP \u4f3a\u670d\u5668\u4f4d\u5740\uff1f"}, {"LOGINVPSSETTINGS_SYNCMODELCODES_FAILURE", "\u7121\u6cd5\u540c\u6b65\u578b\u865f\u4ee3\u78bc\u8cc7\u8a0a\u3002"}, {"LOGINVPSSETTINGS_ENABLE_LEGACY_REPORTS", "\u986f\u793a\u6b77\u53f2\uff08Analyzer 7.0 \u4e4b\u524d\uff09\u5831\u544a"}, {"LOGINVPSSETTINGS_ENFORCE_PASSWORD_SECURITY", "\u589e\u5f37\u5bc6\u78bc\u5b89\u5168\u6027"}, {"LOGINVPSSETTINGS_NDAYS_PASSWORD", "\u5f37\u5236\u9032\u884c\u5bc6\u78bc\u8b8a\u66f4\u7684\u5929\u6578"}, {"GENVPSSTATUS_INVALIDIP", "\u4e0d\u5b8c\u6574\u7684\u88dd\u7f6e\u8a8d\u8b49\u6b64\u6642\u53ef\u7528\u65bc\u6210\u529f\u767b\u5165"}, {"GENVPSSTATUS_NODE", "\u7bc0\u9ede\uff1a "}, {"GENVPSSTATUS_INFO", "\u8cc7\u8a0a"}, {"GENVPSSTATUS_SYSLOG", "Syslog \u4f3a\u670d\u5668"}, {"GENVPSSTATUS_IPINFO", "IP \u4f4d\u5740"}, {"GENVPSSTATUS_PORT", "\u9023\u63a5\u57e0"}, {"GENVPSSTATUS_SYNCNOW", "\u540c\u6b65\u8a2d\u5b9a\u548c\u88dd\u7f6e\uff0c\u4ee5\u53ca\u6388\u6b0a\u8cc7\u8a0a\u548c MySonicWall.com"}, {"GENVPSSTATUS_GETSTARTED", "Analyzer \u4f7f\u7528\u5165\u9580"}, {"GENVPSSTATUS_GETSTARTOPEN", "\u5728\u65b0\u8996\u7a97\u4e2d\u958b\u555f\u4f7f\u7528\u5165\u9580\u8aaa\u660e"}, {"GENVPSSTATUS_LOGINTITLE", "\u88dd\u7f6e\u767b\u5165"}, {"GENVPSSTATUS_LOGINHTTP", "\u4f7f\u7528\u4e0d\u5b89\u5168\u767b\u5165 (HTTP)"}, {"GENVPSSTATUS_LOGINHTTPS", "\u4f7f\u7528\u5b89\u5168\u767b\u5165 (HTTPS)"}, {"GENVPSSTATUS_ACCESSHTTPS", "HTTPS"}, {"GENVPSSTATUS_ACCESSHTTP", "HTTP"}, {"GENVPSSTATUS_LOGIN", "\u767b\u5165"}, {"GENVPSSTATUS_CATEGORIES", "Syslog \u985e\u5225"}, {"GENVPSSTATUS_REFRESH_MSG", "\u8a3b:\u72c0\u614b\u8cc7\u8a0a\u6bcf 24 \u5c0f\u6642\u66f4\u65b0\u4e00\u6b21\u3002\u82e5\u8981\u91cd\u65b0\u6574\u7406\u8cc7\u8a0a\uff0c\u8acb\u6309\u4e00\u4e0b\u4e0a\u9762\u7684\u9023\u7d50\u3002\u82e5\u8981\u8b8a\u66f4\u9019\u4e9b\u8a2d\u5b9a\uff0c\u60a8\u5fc5\u9808\u767b\u5165\u5230\u8a2d\u5099\u4e26\u624b\u52d5\u5c0d\u5176\u9032\u884c\u66f4\u65b0\u3002"}, {"GENVPSSTATUS_LOG_TYPE", "\u8a18\u9304\u985e\u578b"}, {"GENVPSSTATUS_SYSTEM_MAINTENANCE", "\u7cfb\u7d71\u7dad\u8b77"}, {"GENVPSSTATUS_SYSTEM_ERRORS", "\u7cfb\u7d71\u932f\u8aa4"}, {"GENVPSSTATUS_BLOCKED_WEB", "\u963b\u6b62\u7684\u7db2\u7ad9"}, {"GENVPSSTATUS_BLOCKED_JAVA", "\u963b\u6b62\u7684 Java \u7b49"}, {"GENVPSSTATUS_USER_ACTIVITY", "\u4f7f\u7528\u8005\u6d3b\u52d5"}, {"GENVPSSTATUS_VPN_TCP_STATS", "VPN TCP \u7d71\u8a08"}, {"GENVPSSTATUS_ATTACKS", "\u653b\u64ca"}, {"GENVPSSTATUS_DROPPED_TCP", "\u4e1f\u68c4\u7684 TCP"}, {"GENVPSSTATUS_DROPPED_UDP", "\u4e1f\u68c4\u7684 UDP"}, {"GENVPSSTATUS_DROPPED_ICMP", "\u4e1f\u68c4\u7684 ICMP"}, {"GENVPSSTATUS_NETWORK_DEBUG", "\u7db2\u8def\u5075\u932f"}, {"GENVPSSTATUS_DENIED_LAN_IP", "\u62d2\u7d55\u7684 LAN IP"}, {"GENVPSSTATUS_LICENSE_STATUS", "Analyzer \u6388\u6b0a\u72c0\u614b"}, {"GENVPSSTATUS_LICENSE_MESSAGE", "<br/>&nbsp;&nbsp;\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\u4f86\u89e3\u6c7a\\\"\u672a\u6388\u6b0a\\\"\u554f\u984c:<br/>&nbsp;&nbsp;\u6b65\u9a5f 1 - <a href=\"http://www.MySonicWall.com\" target=new>\u6309\u4e00\u4e0b\u6b64\u8655\u5728 MySonicWall.com \u4e0a\u9a57\u8b49\u6216\u555f\u52d5\u6388\u6b0a\u3002</a><br/>&nbsp;&nbsp;\u6b65\u9a5f 2 - \u5982\u679c\u6388\u6b0a\u8655\u65bc\u555f\u52d5\u72c0\u614b\uff0c<a href=\"javascript:synchronizeInfo();\">\u8acb\u6309\u4e00\u4e0b\u6b64\u8655\u540c\u6b65\u6388\u6b0a\u8cc7\u8a0a\u3002</a>"}, {"GENVPSSTATUS_COMMUNICATION_FAILURE", "\uff08\u5617\u8a66\u5b58\u53d6 MySonicWall.com \u6642\u51fa\u73fe\u901a\u8a0a\u6545\u969c\uff09<br/>&nbsp;&nbsp;\u78ba\u8a8d GMSVP Web \u4f3a\u670d\u5668\u80fd\u5920\u5b58\u53d6 www.MySonicWall.com\u3002"}, {"COMPONENT", "\u8aaa\u660e"}, {"COMPONENT_LC", "\u5143\u4ef6"}, {"FILE_SIZE", "\u6a94\u6848\u5927\u5c0f (KB)"}, {"IP_ADDRESS", "IP \u4f4d\u5740"}, {"CURRENT_VERSION", "\u76ee\u524d\u7248\u672c"}, {"LATEST_VERSION", "\u6700\u65b0\u7248\u672c"}, {"RELEASE_NOTES", "\u767c\u884c\u8aaa\u660e"}, {"LAST_DOWNLOADED", "\u6700\u8fd1\u4e0b\u8f09"}, {"RELEASE_DATE", "\u767c\u884c\u65e5\u671f"}, {"DOWNLD_NEW", "\u4e0b\u8f09\u65b0 "}, {"SOFTWARE_UPDATES", "\u8edf\u9ad4\u66f4\u65b0"}, {"DEL_SEL_COMPS_FROM_LIST", "\u5f9e\u6e05\u55ae\u4e2d\u522a\u9664\u9078\u5b9a\u7684\u5143\u4ef6"}, {"LIC_DELETE_MSG", "\u60a8\u7121\u6cd5\u522a\u9664"}, {"LIC_PATCH_MSG", "\u4ee5\u4e0b\u5143\u4ef6\u7684\u4fee\u88dc\u7a0b\u5f0f\u4e0d\u53ef\u7528\u4e26\u4e14\u4e0d\u6703\u4e0b\u8f09\uff1a"}, {"LIC_NEW_GMS_SW", "\u65b0 GMS \u8edf\u9ad4"}, {"LIC_CONSOLE", "\u4e3b\u63a7\u53f0"}, {"LIC_SELECT_COMPONENT", "\u8acb\u9078\u64c7\u4e00\u500b\u5143\u4ef6\u3002"}, {"CHAP_TESTING", "CHAP \u6e2c\u8a66"}, {"CHAP_RADIUS_TESTING_MSG", "\u8acb\u6ce8\u610f\uff0cCHAP \u9a57\u8b49\u50c5\u8207\u652f\u63f4\u7684 RADIUS \u4f3a\u670d\u5668\u4e00\u8d77\u4f7f\u7528\uff0c\u4e26\u4e14\u5728 \u67d0\u4e9b\u60c5\u6cc1\u4e0b\u5c07\u9700\u8981\u4f3a\u670d\u5668\u8a2d\u5b9a\u70ba\u5132\u5b58\u53ef\u9006\u5bc6\u78bc\u3002"}, {"CHAP_LDAP_TESTING_MSG", "\u8acb\u6ce8\u610f\uff0cCHAP \u9a57\u8b49\u5c07\u50c5\u8207\u652f\u63f4\u900f\u904e LDAP \u64f7\u53d6\u4f7f\u7528\u8005\u5bc6\u78bc\u7684\u4f3a\u670d\u5668\u4e00\u8d77\u4f7f\u7528\uff0c\u4e26\u4e14\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\u5c07\u9700\u8981 LDAP \u4f3a\u670d\u5668\u8a2d\u5b9a\u70ba\u5132\u5b58\u53ef\u9006\u5bc6\u78bc\u3002"}, {"CHAP_LDAP_TESTING_MSG_FOOTER", "\u9084\u8981\u6ce8\u610f\u7684\u662f\uff0cCHAP \u4e0d\u80fd\u8207 Microsoft Active Directory \u6216 Novell eDirectory \u4e00\u8d77\u4f7f\u7528"}, {"PERF_NO_SUMMARIZER", "\u6c92\u6709\u76ee\u524d\u53ef\u7528\u7684\u6458\u8981\u5668\u6548\u80fd\u6307\u6a19\u3002"}, {"PERF_SUMMARIZER_INFO", "\u6458\u8981\u5668\u8cc7\u8a0a"}, {"PERF_SUMMARIZER", "\u6458\u8981\u5668"}, {"PERF_SYSLOG_INFO", "\u8cc7\u6599\u6a94\u6848\u683c\u5f0f"}, {"PERF_SYSLOG_FILE_TYPE", "\u8cc7\u6599\u6a94\u6848\u985e\u578b"}, {"PERF_FILE_STATS", "\u6a94\u6848\u7d71\u8a08"}, {"PERF_OLDEST", "\u6700\u820a"}, {"PERF_PRD_LABEL", "\u8655\u7406\u7684\u6a94\u6848"}, {"PERF_SRC_LABEL", "\u5206\u7d44\u7684\u6a94\u6848"}, {"PERF_UNP_LABEL", "\u672a\u8655\u7406\u7684\u6a94\u6848"}, {"PERF_NMM_LABEL", "\u4e0d\u662f\u6211\u7684\u6a94\u6848"}, {"PERF_IMF_LABEL", "\u611f\u67d3\u7684\u6a94\u6848"}, {"PERF_ZIP_LABEL", "\u5c01\u5b58\u7684\u6a94\u6848"}, {"PERF_PRE_LABEL", "\u7121\u6548\u7684\u8a18\u9304\u6a94"}, {"PERF_UPE_LABEL", "\u932f\u8aa4\u7684\u4e0a\u8f09\u6a94\u6848"}, {"PERF_UPD_LABEL", "\u4e0a\u8f09\u7684\u6a94\u6848"}, {"PERF_UPL_LABEL", "\u4e0a\u8f09\u64f1\u7f6e\u4e2d\u7684\u6a94\u6848"}, {"PERF_RDB_LABEL", "\u5831\u544a\u8cc7\u6599\u5eab"}, {"PERF_OPT_STATE_LABEL", "\u6700\u4f73\u5316\u72c0\u614b"}, {"PERF_OPT_PENDING_LABEL", "\u66ab\u6b62\u7684\u6700\u4f73\u5316"}, {"PERF_OPT_TOTAL_LABEL", "\u672a\u6700\u4f73\u5316\u7e3d\u5929\u6578"}, {"PERF_BKP_LABEL", "\u5099\u4efd\u6a94\u6848"}, {"PERF_FILE_ELEMENT", "\u6a94\u6848 - "}, {"PERF_THREAD_INFO", "\u6458\u8981\u5668\u8655\u7406\u7dd2\u8a73\u7d30\u8cc7\u6599"}, {"PERF_NUM_THREADS", "\u76ee\u524d\u57f7\u884c\u7684\u57f7\u884c\u7dd2"}, {"PERF_SUMMARIZER_IDLE", "\u6458\u8981\u5668\u9592\u7f6e\u3002"}, {"PERF_THREAD", "\u57f7\u884c\u7dd2"}, {"PERF_FIREWALL", "\u88dd\u7f6e"}, {"PERF_FILE", "\u6a94\u6848"}, {"PERF_STATE", "\u72c0\u614b"}, {"PERF_START_TIME", "\u958b\u59cb"}, {"PERF_SUMMARIZER_STATS", "\u6458\u8981\u5668\u7d71\u8a08"}, {"PERF_PAST_24", "\u5728\u904e\u53bb 24 \u5c0f\u6642\u5167\uff08\u81ea\u5f9e "}, {"PERF_PAST_7_DAYS", "\u5728\u904e\u53bb 7 \u5929\u5167\uff08\u81ea\u5f9e "}, {"PERF_PAST_30_DAYS", "\u5728\u904e\u53bb 30 \u5929\u5167\uff08\u81ea\u5f9e "}, {"PERF_NUM_SYSLOGS", "\u4ee5\u4e0b\u9805\u4e2d\u6458\u8981\u7684 Syslogs \u6578 "}, {"PERF_AVERAGE_PER_MINUTE", "\u6bcf\u5206\u9418\u6458\u8981\u7684\u5e73\u5747 Syslog"}, {"PERF_NOT_ACTIVE", "\u904e\u53bb 7 \u5929\u5167\u6c92\u6709\u6458\u8981\u4efb\u4f55\u8cc7\u6599"}, {"PERF_NO_GEN2", "\u6458\u8981\u5668\u6548\u80fd\u6307\u6a19\u50c5\u9069\u7528\u65bc\u5206\u6563\u5f0f\u6458\u8981\u5668\u8a2d\u5b9a"}, {"PERF_MEM_USAGE", "\u6458\u8981\u5668\u8a18\u61b6\u9ad4\u6d88\u8017"}, {"PERF_LAST_RUN", "\u4e0a\u6b21\u57f7\u884c\u6642\u9593"}, {"PERF_NEXT_RUN", "\u4e0b\u6b21\u57f7\u884c\u6642\u9593"}, {"PERF_SUMMARIZER_STATISTICS", "\u904e\u53bb 7 \u5929\u5167\u7684\u6458\u8981\u5668\u72c0\u614b"}, {"PERF_SUMMARIZER_UTILIZATION", "\u6458\u8981\u5668\u4f7f\u7528\u7387"}, {"PERF_TOTAL_RUN_TIME", "\u6bcf\u5929\u7684\u5e73\u5747\u57f7\u884c\u6642\u9593"}, {"PERF_ESTIMATED_TOTAL_CAPACITY", "\u4f30\u8a08\u7684\u5bb9\u91cf"}, {"PERF_METRIC_SYSLOG", "(\uff08\u767e\u842c syslog/\u5929\uff09"}, {"PERF_METRIC_XML", "(\uff08XML \u6a94\u6848/\u5929\uff09"}, {"PERF_TOTAL_LOAD", "\u5e73\u5747\u8ca0\u8f09"}, {"PERF_TOTAL_SYSLOGS_SUMMARIZED", "\u6458\u8981\u7684\u5e73\u5747 Syslog\uff08\u767e\u842c/\u5929\uff09"}, {"PERF_TOTAL_FILES_SUMMARIZED", "\u6bcf\u5929\u6458\u8981\u7684\u5e73\u5747 XML \u6a94\u6848"}, {"PERF_NO_DATA_SUMMARIZED", "\u5728\u904e\u53bb\u76847\u5929\uff0c\u6c92\u6709\u6578\u64da\u53ef\u4ee5\u7e3d\u7d50"}, {"PERF_REPORTING_INFO", "\u5831\u544a\u8a73\u7d30\u8cc7\u6599"}, {"PERF_TOP_UNITS", "\u6458\u8981\u5668\u4f7f\u7528\u60c5\u6cc1\u88dd\u7f6e\u6392\u540d"}, {"PERF_UNIT_NAME", "\u88dd\u7f6e"}, {"PERF_REPORTING_DB_SIZE", "\u5831\u544a\u8cc7\u6599\u5eab\u5927\u5c0f"}, {"PERF_BACKUPS_DIR_SIZE", "\u5099\u4efd\u76ee\u9304\u5927\u5c0f"}, {"PERF_SYSLOG_DIR_SIZE", "\u539f\u59cb\u8cc7\u6599\u76ee\u9304\u5927\u5c0f"}, {"PERF_CACHE_SIZE", "\u4f30\u8a08\u7684\u5feb\u53d6\u5927\u5c0f"}, {"PERF_BAD_DIR_SIZE", "\u932f\u8aa4\u8cc7\u6599\u76ee\u9304\u5927\u5c0f"}, {"PERF_PER_SUMMARIZER_INFO", "\u6458\u8981\u5668\u8a73\u7d30\u8cc7\u6599 "}, {"PERF_AVG_UTILIZATION", "\u5e73\u5747\u6458\u8981\u5668\u4f7f\u7528\u7387"}, {"PERF_PEAK_UTILIZATION", "\u5cf0\u503c\u6458\u8981\u5668\u4f7f\u7528\u7387"}, {"NMM_DETAILS", "\u91dd\u5c0d\u8a2d\u5099\u6536\u96c6\u7684\u3001\u4e0d\u4f4d\u65bc\u300c\u5831\u544a\u548c\u7ba1\u7406\u300d\u4e0b\u7684 Syslog"}, {"NMM_SERIALS", "\u6458\u8981\u5668\u7684\u8a2d\u5099\u5e8f\u865f"}, {"NO_NMM_SERIAL", "\u8a2d\u5099\u50b3\u9001\u7684 syslog \u5747\u4f4d\u65bc\u300c\u5831\u544a\u548c\u7ba1\u7406\u300d\u4e0b "}, {"MISCONFIGURED_SERIALS", "\u8aa4\u8a2d\u5b9a\u7684\u8a2d\u5099\u7684\u5e8f\u865f "}, {"NO_MISCONFIGURED_SERIALS", "\u7121\u8aa4\u8a2d\u5b9a\u7684\u8a2d\u5099 "}, {"NMM_MSG_NOTE", "\u8a3b: "}, {"NMM_MSG1", "* \u767b\u5165\u5230\u8a2d\u5099\u4e26\u505c\u7528 syslog"}, {"NMM_MSG2", "* \u5982\u679c\u60a8\u7121\u6b0a\u5b58\u53d6\u8a2d\u5099\uff0c\u8acb\u4f7f\u7528\u9598\u9053\u898f\u5247\u4f86\u5c01\u9396\u5e8f\u5217"}, {"NMM_MSG3", "* \u82e5\u8981\u4fee\u5fa9\u8aa4\u8a2d\u5b9a\u7684\u7cfb\u5217\uff0c\u8acb\u767b\u5165\u5230\u8a2d\u5099\u4e26\u8b8a\u66f4 GMS \u8a2d\u5b9a"}, {"NMM_MSG4", "* \u6b64\u8655\u5217\u51fa\u7684\u5e8f\u5217\u6bcf 12 \u5c0f\u6642\u91cd\u65b0\u6574\u7406\u4e00\u6b21"}, {"PERF_SUMMARIZER_STATUS", "\u72c0\u614b"}, {"PERF_DEPLOYMENT_STATUS", "\u90e8\u7f72\u72c0\u614b"}, {"PERF_MSG_HIGH_CAPACITY", "Summarizer \u4ee5\u6975\u9ad8\u7684\u5bb9\u91cf\u57f7\u884c\u6642\uff0c\u8acb\u91cd\u65b0\u6307\u6d3e\u8a2d\u5099\u3002"}, {"PERF_MSG_HIGH_CAPACITY_AGENT", "\u90e8\u7f72\u4e2d\u7684\u4e00\u500b\uff08\u6216\u591a\u500b\uff09\u6458\u8981\u5668\u5728\u904e\u53bb\u7684 7 \u5929\u4e2d\u5df2\u8d85\u904e\u4e86\u5176\u57f7\u884c\u5bb9\u91cf\u3002\u6aa2\u67e5\u6458\u8981\u5668\u5229\u7528\u7387\u90e8\u5206\u7684\u72c0\u614b\u5217\uff0c\u7136\u5f8c\u9020\u8a2a GMS \u7db2\u7ad9\uff0c\u67e5\u770b\u95dc\u65bc\u5982\u4f55\u7ba1\u7406\u90e8\u7f72\u7684\u66f4\u591a\u8cc7\u8a0a\u3002"}, {"PERF_MSG_REASSIGN_UNITS", "\u8acb\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406\u4e4b\u9593\u7684\u8a2d\u5099\u3002"}, {"PERF_MSG_DISK_LOW", "\u78c1\u789f\u7a7a\u9593\u4e0d\u8db3\uff0c\u8acb\u65b0\u589e\u66f4\u591a\u78c1\u789f\u6216\u589e\u52a0\u78c1\u789f\u914d\u7f6e\u3002"}, {"PERF_MSG_DISK_LOW_RDB", "\u7528\u65bc\u5831\u544a\u8cc7\u6599\u5eab\u7684\u78c1\u789f\u7a7a\u9593\u4e0d\u8db3\uff0c\u8acb\u65b0\u589e\u66f4\u591a\u78c1\u789f\u6216\u589e\u52a0\u78c1\u789f\u914d\u7f6e\u3002"}, {"PERF_MSG_CAPACITY_PLANNING", "\u8acb\u9020\u8a2a <a href='http://www.sonicwall.com/us/products/GMS_Software.html#tab=gmsCapCalc' target='_blank'>GMS \u7db2\u7ad9</a>\u4ee5\u77ad\u89e3\u6709\u95dc\u5982\u4f55\u7ba1\u7406\u60a8\u7684\u90e8\u7f72\u7684\u66f4\u591a\u8cc7\u8a0a\u3002"}, {"PERF_MSG_CAPACITY_PLANNING_NOTE", "\u8a3b:\u5e73\u5747\u8ca0\u8f09\u548c\u4f30\u8a08\u7684\u5bb9\u91cf\u662f\u7279\u5b9a\u65bc\u90e8\u7f72\u7684\uff0c\u5176\u5728\u7cfb\u7d71\u4e2d\u53ef\u80fd\u6703\u767c\u751f\u8b8a\u5316\u3002"}, {"PERF_OF", "/"}, {"PERF_ON_DISK", "\u5728\u78c1\u789f\u4e0a"}, {"PERF_OPT_EXPORT_PROGRESS", "\u6b63\u5728\u532f\u51fa"}, {"PERF_OPT_EXPORT_DONE", "\u532f\u51fa\u5b8c\u6210"}, {"PERF_OPT_DELETE_PROGRESS", "\u6b63\u5728\u522a\u9664"}, {"PERF_OPT_DELETE_DONE", "\u522a\u9664\u5b8c\u6210"}, {"PERF_OPT_IMPORT_PROGRESS", "\u6b63\u5728\u532f\u5165"}, {"PERF_OPT_QUEUED_UP", "\u5df2\u6392\u5165\u4f47\u5217"}, {"PERF_OPT_IDLE", "\u9592\u7f6e"}, {"PERF_OPT_CURRENT", "\u76ee\u524d"}, {"PERF_OPT_INFO", "\u6700\u4f73\u5316\u8cc7\u8a0a"}, {"PERF_XML_FILE_INFO", "XML \u6a94\u6848\u8cc7\u8a0a"}, {"PERF_XML_LABEL", "\u672a\u8655\u88e1\u7684 XML \u6a94\u6848"}, {"PERF_XPG_LABEL", "\u8655\u7406\u4e2d\u7684\u6a94\u6848"}, {"PERF_XPD_LABEL", "\u5df2\u5c01\u5b58\u7684\u6a94\u6848"}, {"PERF_XPE_LABEL", "\u7121\u6548\u7684\u6a94\u6848"}, {"ALERT_NO_ALERTS", "\u6b64\u6642\u6c92\u6709\u6b64\u90e8\u5206\u7684\u6d3b\u52d5\u8b66\u793a\u3002"}, {"ALERT_DESCRIPTION", "\u8aaa\u660e"}, {"ALERT_NODE_NAME", "\u88dd\u7f6e\u540d\u7a31"}, {"ALERT_SEVERITY", "\u56b4\u91cd\u6027"}, {"ALERT_LISTING", "\u8b66\u793a\u6e05\u55ae"}, {"CAL_SUN", "\u9031\u65e5"}, {"CAL_MON", "\u9031\u4e00"}, {"CAL_TUE", "\u9031\u4e8c"}, {"CAL_WED", "\u9031\u4e09"}, {"CAL_THU", "\u9031\u56db"}, {"CAL_FRI", "\u9031\u4e94"}, {"CAL_SAT", "\u9031\u516d"}, {"CAL_JAN", "\u4e00\u6708"}, {"CAL_FEB", "\u4e8c\u6708"}, {"CAL_MAR", "\u4e09\u6708"}, {"CAL_APR", "\u56db\u6708"}, {"CAL_MAY", "\u4e94\u6708"}, {"CAL_JUN", "\u516d\u6708"}, {"CAL_JUL", "\u4e03\u6708"}, {"CAL_AUG", "\u516b\u6708"}, {"CAL_SEP", "\u4e5d\u6708"}, {"CAL_OCT", "\u5341\u6708"}, {"CAL_NOV", "\u5341\u4e00\u6708"}, {"CAL_DEC", "\u5341\u4e8c\u6708"}, {Integer.toString(1), "\u6210\u529f\u57f7\u884c\u5de5\u4f5c\uff1a "}, {Integer.toString(0), "\u57f7\u884c\u5de5\u4f5c\u5931\u6557\u3002"}, {Integer.toString(42), "\u6210\u529f\u57f7\u884c\u5de5\u4f5c\uff0c\u50b3\u56de\u8b66\u544a\uff1a "}, {Integer.toString(10), "\u547d\u4ee4\u6210\u529f\u57f7\u884c\u3002"}, {Integer.toString(-12), "\u547d\u4ee4\u57f7\u884c\u90e8\u5206\u6216\u5b8c\u5168\u5931\u6557\u3002"}, {Integer.toString(-57), "\u4f7f\u7528\u8005\u6b0a\u9650\u4e0d\u8db3\u4ee5\u57f7\u884c\u6b64\u64cd\u4f5c\u3002"}, {Integer.toString(-58), "\u6c92\u6709\u8655\u7406\u547d\u4ee4\u7684\u8cc7\u8a0a\u3002"}, {Integer.toString(-59), "\u8a72\u64cd\u4f5c\u7121\u6cd5\u96a8\u6642\u57f7\u884c\u3002"}, {Integer.toString(-56), "\u53ea\u6709\u672c\u6a5f\u7db2\u57df\u7ba1\u7406\u54e1\u7fa4\u7d44\u7684\u4f7f\u7528\u8005\u624d\u6709\u6b0a\u9650\u57f7\u884c\u6b64\u547d\u4ee4\u3002"}, {Integer.toString(2), "\u6210\u529f\u57f7\u884c\u65b0\u97cc\u9ad4\u6aa2\u67e5\uff0c\u4f46\u6c92\u6709\u53ef\u7528\u7684\u65b0\u97cc\u9ad4 "}, {Integer.toString(3), "\u5de5\u4f5c\u7684\u5f8c\u7aef\u64cd\u4f5c\u4ee5\u524d\u5df2\u6210\u529f\u57f7\u884c\uff1a "}, {Integer.toString(4), "\u5de5\u4f5c\u7684\u66f4\u65b0\u8cc7\u6599\u5eab\u64cd\u4f5c\u6210\u529f\uff1a "}, {Integer.toString(5), "\u88dd\u7f6e\u53ef\u7528\u65bc\u5347\u7d1a\u4ee5\u53ca\u8a3b\u518a"}, {Integer.toString(6), "\u514d\u8cbb\u8a66\u7528\u4e0d\u9069\u7528\u65bc\u8a72\u88dd\u7f6e"}, {Integer.toString(7), "\u88dd\u7f6e\u53ef\u7528\u65bc\u5347\u7d1a\u4f46\u4e0d\u53ef\u7528\u65bc\u8a3b\u518a"}, {Integer.toString(8), "\u88dd\u7f6e\u53ef\u7528\u65bc\u8a3b\u518a\u4f46\u4e0d\u53ef\u7528\u65bc\u5347\u7d1a"}, {Integer.toString(-1), "\u88dd\u7f6e\u7684\u67d0\u4e9b\u53c3\u6578\u6c92\u6709\u6b63\u78ba\u8a2d\u5b9a\u3002"}, {Integer.toString(-53), "\u88dd\u7f6e\u4e0d\u652f\u63f4\u591a\u540d\u7ba1\u7406\u54e1\u540c\u6642\u767b\u5165\u3002"}, {Integer.toString(-63), "\u7f3a\u5c11\u767b\u5165\u7684\u88dd\u7f6e\u8a8d\u8b49\u3002"}, {Integer.toString(-69), "\u7b49\u5f85\u7372\u53d6\u76ee\u524d\u767b\u5165 IP \u4f4d\u5740\u3002"}, {Integer.toString(-70), "JVM OOM\uff1a\u8a18\u61b6\u9ad4\u4e0d\u8db3\u7121\u6cd5\u7e7c\u7e8c\uff0c\u5c07\u5728\u4e0b\u6b21\u57f7\u884c\u6642\u91cd\u8a66\u5de5\u4f5c"}, {Integer.toString(-64), "\u7121\u6cd5\u53d6\u5f97\u53d7\u7ba1\u7406\u8a2d\u5099\u7684\u9a57\u8b49\u9801\u9762\u4ee5\u9032\u884c\u767b\u5165\u3002"}, {Integer.toString(-64) + "_TT", "- \u88dd\u7f6e\u5728\u7ba1\u7406\u4f4d\u5740\u4e0d\u53ef\u5b58\u53d6\u3002\n- \u88dd\u7f6e\u4e0d\u652f\u63f4\u4e26\u884c\u767b\u5165\uff0c\n\u78ba\u8a8d\u700f\u89bd\u5668\u662f\u5426\u5df2\u76f4\u63a5\u767b\u5165\u81f3\u88dd\u7f6e\u3002"}, {Integer.toString(-65), "\u767b\u5165\u5f8c\u7121\u56de\u61c9\u3002"}, {Integer.toString(-83), "\u767b\u5165\u5931\u6557\uff0c\u539f\u56e0\u662f\u5e8f\u865f\u4e0d\u76f8\u7b26\u3002"}, {Integer.toString(-83) + "_TT", "- \u65b0\u589e\u88dd\u7f6e\u5230 GMS \u6642\u6307\u5b9a\u7684\u5e8f\u865f\n\u8207\u88dd\u7f6e\u7684\u5e8f\u865f\u4e0d\u76f8\u7b26\u3002"}, {Integer.toString(-84), "\u767b\u5165\u5931\u6557\uff0c\u56e0\u70ba\u6307\u5b9a\u7684\u767b\u5165\u6a21\u5f0f\u7121\u6548\u3002"}, {Integer.toString(-84) + "_TT", "- \u6307\u5b9a\u7684\u767b\u5165\u6a21\u5f0f\u4e0d\u5c6c\u65bc\u5141\u8a31\u6a21\u5f0f\u6e05\u55ae\u3002\n"}, {Integer.toString(-2), "\u88dd\u7f6e\u4f7f\u7528\u8005\u540d\u6216\u5bc6\u78bc\u4e0d\u6b63\u78ba\u3002"}, {Integer.toString(-918), "[TW]The unit is not connected to the ZeroTouch Agent."}, {Integer.toString(-916), "\u88dd\u7f6e\u4f7f\u7528 SSL \u6191\u8b49\uff0c\u800c\u5176\u5177\u6709\u57fa\u65bc\u5b89\u5168\u7406\u7531\u4e0d\u518d\u652f\u63f4\u7684 MD5 \u7c3d\u7ae0\u3002\u8acb\u91cd\u65b0\u7522\u751f\u6191\u8b49\u4ee5\u7ba1\u7406\u6b64\u88dd\u7f6e\u3002"}, {Integer.toString(-917), "\u88dd\u7f6e\u6c92\u6709\u6388\u6b0a\u53ef\u57f7\u884c\u6b64\u4efb\u52d9\u3002"}, {Integer.toString(-71), "\u88dd\u7f6e\u7684\u5b58\u53d6 url \u7121\u6548\u3002"}, {Integer.toString(-71) + "_TT", "- \u7121\u6cd5\u5f9e\u88dd\u7f6e\u7372\u53d6 IP \u4f4d\u5740\u3002"}, {Integer.toString(-72), "\u8acb\u6c42\u72c0\u614b xml \u5931\u6557\u3002"}, {Integer.toString(-72) + "_TT", ""}, {Integer.toString(-73), "\u8acb\u6c42\u72c0\u614b xml \u5931\u6557\uff0c\u6c92\u6709\u6536\u5230\u56de\u61c9\u3002"}, {Integer.toString(-73) + "_TT", ""}, {Integer.toString(-74), "\u8acb\u6c42\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u5931\u6557\u3002"}, {Integer.toString(-950), "[TW]Gen7 Firewall is in Policy Mode and cannot be acquired."}, {Integer.toString(-74) + "_TT", ""}, {Integer.toString(-75), "\u8acb\u6c42\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u5931\u6557\uff0c\u6c92\u6709\u6536\u5230\u56de\u61c9\u3002"}, {Integer.toString(-75) + "_TT", ""}, {Integer.toString(-76), "\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u7121\u6548\u3002"}, {Integer.toString(-76) + "_TT", "- \u6c92\u6709\u6536\u5230\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u3002\n- \u7372\u53d6\u7684\u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u53ef\u80fd\u5df2\u640d\u58de\u3002\n- \u559c\u597d\u8a2d\u5b9a\u6a94\u6848\u53ef\u80fd\u4e0d\u5b8c\u6574\u3002"}, {Integer.toString(-77), "\u88dd\u7f6e\u64f7\u53d6\u5931\u6557\u3002"}, {Integer.toString(-77) + "_TT", ""}, {Integer.toString(11), "\u6536\u5230\u5fc3\u8df3\u8a0a\u606f\u3002"}, {Integer.toString(11) + "_TT", ""}, {Integer.toString(-78), "\u672a\u6536\u5230\u5fc3\u8df3\u8a0a\u606f\u3002"}, {Integer.toString(-78) + "_TT", "- \u672a\u5f9e\u8a2d\u5099\u50b3\u9001\u6d3b\u52d5\u8a0a\u865f\u8a0a\u606f\u3002\n- \u5f9e\u8a2d\u5099\u50b3\u9001\u7684\u6d3b\u52d5\u8a0a\u865f\u8a0a\u606f\u7121\u6cd5\u5230\u9054 GMS\u3002\n- \u672a\u5728 GMS \u9598\u9053\u4e0a\u5efa\u7acb SA\uff08\u901a\u9053\uff09\u3002\n- \u672a\u5728 GMS \u9598\u9053\u4e0a\u5efa\u7acb\u5141\u8a31 Syslog \u7684\u898f\u5247\u3002\n- \u4f8b\u5982\u8a2d\u5099 - \u8acb\u9075\u5faa\u300c\u4e3b\u63a7\u53f0-Web \u670d\u52d9-\u5206\u767c\u7684\u90e8\u7f72\u300d\u4e2d\u300c\u8a3b:\u300d\u90e8\u5206\u4e2d\u6240\u8ff0\u7684\u8aaa\u660e\u3002"}, {Integer.toString(-79), "\u6536\u5230\u7684\u5fc3\u8df3\u8a0a\u606f\u7121\u6cd5\u89e3\u5bc6\u3002"}, {Integer.toString(-79) + "_TT", "- \u65b0\u589e\u88dd\u7f6e\u5230 GMS \u6642\u6307\u5b9a\u7684\u5bc6\u78bc\n\u8207\u88dd\u7f6e\u7684\u5bc6\u78bc\u4e0d\u76f8\u7b26\u3002"}, {Integer.toString(13), "\u6536\u5230 syslog \u8a0a\u606f\u3002"}, {Integer.toString(13) + "_TT", ""}, {Integer.toString(-81), "\u672a\u6536\u5230 syslog \u8a0a\u606f\u3002"}, {Integer.toString(-81) + "_TT", "- Syslog \u8a0a\u606f\u4e26\u975e\u4f86\u81ea\u8a2d\u5099\u3002D138- \u5f9e\u8a2d\u5099\u50b3\u9001\u7684 Syslog \u8a0a\u606f\u4e0d\u80fd\u5230\u9054 GMS\u3002\n- \u672a\u5728 GMS \u9598\u9053\u4e0a\u5efa\u7acb SA\uff08\u901a\u9053\uff09\u3002\n- \u672a\u5728 GMS \u9598\u9053\u4e0a\u5efa\u7acb\u5141\u8a31 Syslog \u7684\u898f\u5247\u3002"}, {Integer.toString(-82), "\u6536\u5230\u7684 syslog \u8a0a\u606f\u7121\u6cd5\u89e3\u5bc6\u3002"}, {Integer.toString(-82) + "_TT", "- \u65b0\u589e\u88dd\u7f6e\u5230 GMS \u6642\u6307\u5b9a\u7684\u5bc6\u78bc\n\u8207\u88dd\u7f6e\u7684\u5bc6\u78bc\u4e0d\u76f8\u7b26\u3002"}, {Integer.toString(12), "\u8bbe\u5907\u5df2\u6dfb\u52a0;\u7b49\u5f85\u52a0\u5165GMS."}, {Integer.toString(12) + "_TT", ""}, {Integer.toString(14), "\u8bbe\u5907\u5df2\u4fee\u6539;\u7b49\u5f85\u52a0\u5165GMS."}, {Integer.toString(14) + "_TT", ""}, {Integer.toString(-3), "\u7121\u6cd5\u5b58\u53d6\u88dd\u7f6e\u3002\u88dd\u7f6e\u6216\u7db2\u8def\u7121\u6cd5\u95dc\u9589\u3002"}, {Integer.toString(-4), "\u81f3\u5c11\u4e00\u500b\u88dd\u7f6e\u53c3\u6578\u8a2d\u5b9a\u4e0d\u6b63\u78ba\u3002"}, {Integer.toString(-5), "SonicWall \u8a3b\u518a\u7db2\u7ad9\u7121\u6cd5\u9020\u8a2a\u3002"}, {Integer.toString(-6), "\u5347\u7d1a/\u8a02\u95b1\u7684\u555f\u7528\u4ee3\u78bc\u7121\u6548\u3002"}, {Integer.toString(-7), "\u88dd\u7f6e\u672a\u8a3b\u518a\u3002"}, {Integer.toString(-8), "SonicWall GMS \u8a3b\u518a\u7db2\u7ad9\u5df2\u95dc\u9589\uff0c\u6216\u8005\u7121\u6cd5\u9020\u8a2a\u3002\u8acb\u6aa2\u67e5 SonicWall GMS \u4f3a\u670d\u5668\u7684\u7db2\u969b\u7db2\u8def\u5b58\u53d6\u3002"}, {Integer.toString(-9), "\u6c92\u6709\u53ef\u7528\u65bc\u5347\u7d1a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-10), "\u76ee\u524d\u5617\u8a66\u65b0\u589e\u7684\u8a2d\u5099\u5df2\u5728 SonicWall GMS \u7684\u7ba1\u7406\u4e4b\u4e0b\u3002"}, {Integer.toString(-11), "\u5617\u8a66\u8a2d\u5b9a\u7121\u6548\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-15), "\u5617\u8a66\u5efa\u7acb\u4e0d\u5b58\u5728\u670d\u52d9\u7684\u898f\u5247\u3002"}, {Integer.toString(-16), "\u9055\u53cd SonicWall \u6388\u6b0a\u3002"}, {Integer.toString(-17), "SonicWall GMS \u5167\u90e8\u932f\u8aa4\u3002"}, {Integer.toString(-18), "\u4e0b\u8f09\u5167\u5bb9\u7be9\u9078\u5668\u6e05\u55ae\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-19), "\u5617\u8a66\u522a\u9664\u5b58\u5728\u898f\u5247\u7684\u670d\u52d9\u3002"}, {Integer.toString(-47), "\u7121\u6cd5\u806f\u7d61 AV \u4f3a\u670d\u5668"}, {Integer.toString(-20), "\u5167\u90e8 AV \u932f\u8aa4"}, {Integer.toString(-21), "\u64f1\u7f6e\u4e2d\u7684 AV \u5de5\u4f5c"}, {Integer.toString(-22), "AV \u555f\u7528\u4ee3\u78bc\u7121\u6548\u3002"}, {Integer.toString(-23), "AV \u555f\u7528\u4ee3\u78bc\u5df2\u7d93\u4f7f\u7528\u3002"}, {Integer.toString(-24), "AV \u5bc6\u78bc\u4e0d\u6b63\u78ba\u3002"}, {Integer.toString(-25), "AV \u7e8c\u8a02\u8a08\u6578\u932f\u8aa4\u3002"}, {Integer.toString(-26), "AV \u7e8c\u8a02\u592a\u65e9\u3002"}, {Integer.toString(-27), "\u5617\u8a66\u7ba1\u7406\u6bd4\u5efa\u8b70\u66f4\u820a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-28), "\u81ea\u52d5\u66f4\u65b0\u4f3a\u670d\u5668\u76ee\u524d\u95dc\u9589\u6216\u7121\u6cd5\u5b58\u53d6\u3002"}, {Integer.toString(-85), "\u7ba1\u7406\u7cfb\u7d71\u5099\u4efd\u52d5\u4f5c\u5931\u6557\u3002"}, {Integer.toString(-29), "\u97cc\u9ad4\u7121\u6cd5\u4e0a\u8f09\u5230\u88dd\u7f6e\u3002"}, {Integer.toString(-62), "\u5617\u8a66\u4e0a\u8f09\u5230\u88dd\u7f6e\u7684\u97cc\u9ad4\u7121\u6548\u3002"}, {Integer.toString(-60), "\u97cc\u9ad4\u5347\u7d1a\u7684\u6700\u5927\u6a94\u6848\u5927\u5c0f\u70ba 4MB\u3002"}, {Integer.toString(-31), "\u5c07\u97cc\u9ad4\u5beb\u5165\u5230\u672c\u6a5f\u78c1\u789f\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-30), "\u4e0b\u8f09\u97cc\u9ad4\u6642\u767c\u751f\u932f\u8aa4\u3002\u81ea\u52d5\u66f4\u65b0\u4f3a\u670d\u5668\u76ee\u524d\u4e0d\u53ef\u7528\u6216\u7121\u6cd5\u5b58\u53d6\u3002"}, {Integer.toString(-32), "\u8cc7\u6599\u5eab\u5b58\u53d6\u932f\u8aa4\u3002"}, {Integer.toString(-33), "\u8a2d\u5b9a\u88dd\u7f6e\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-34), "\u9a57\u8b49\u4f7f\u7528\u8005\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-68), "\u7db2\u57df\u672a\u627e\u5230\u6216\u7db2\u57df\u540d\u7a31\u7121\u6548\u3002"}, {Integer.toString(-35), "\u66f4\u65b0 CMP \u5bc6\u78bc\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-36), "\u6c92\u6709\u53ef\u7528\u65bc\u8a3b\u518a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-37), "\u7121\u6cd5\u806f\u7d61\u9632\u6bd2\u4f3a\u670d\u5668\uff0c\u6216\u8005\u9632\u6bd2\u4f3a\u670d\u5668\u5831\u544a\u672a\u77e5\u932f\u8aa4\u3002"}, {Integer.toString(-38), "\u6c92\u6709\u53ef\u7528\u65bc\u8a3b\u518a\u6216\u5347\u7d1a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-39), "\u65b0\u589e\u555f\u7528\u4ee3\u78bc\u5230\u8cc7\u6599\u5eab\u6642\u51fa\u73fe\u554f\u984c\u3002"}, {Integer.toString(-40), "\u522a\u9664\u555f\u7528\u4ee3\u78bc\u6642\u767c\u751f\u932f\u8aa4\u3002\u8cc7\u6599\u5eab\u4e2d\u6c92\u6709\u9019\u6a23\u7684\u555f\u7528\u4ee3\u78bc\u3002"}, {Integer.toString(-41), "\u522a\u9664\u555f\u7528\u4ee3\u78bc\u6642\u767c\u751f\u672a\u77e5\u932f\u8aa4\u3002"}, {Integer.toString(-48), "\u5347\u7d1a\u5931\u6557"}, {Integer.toString(-49), "\u62d2\u7d55\u5b58\u53d6\u4ee5\u57f7\u884c CLI \u547d\u4ee4\u3002"}, {Integer.toString(-42), "\u8cc7\u6599\u5eab\u7121\u6cd5\u6210\u529f\u66f4\u65b0\u3002"}, {Integer.toString(-43), "\u96fb\u5b50\u90f5\u4ef6\u7121\u6cd5\u50b3\u9001\u5230\u4e00\u500b\u6216\u591a\u500b\u5730\u5740\u3002"}, {Integer.toString(-44), "\u7121\u6cd5\u5f9e\u88dd\u7f6e\u64f7\u53d6\u5230\u6280\u8853\u652f\u63f4\u5831\u544a\u3002"}, {Integer.toString(-45), "\u7121\u6cd5\u5f9e\u88dd\u7f6e\u64f7\u53d6\u5230 SPD \u6a94\u6848\u3002"}, {Integer.toString(-46), "\u7121\u6cd5\u5f9e\u88dd\u7f6e\u64f7\u53d6\u5230\u8b49\u66f8\u6a94\u6848\u3002"}, {Integer.toString(-50), "\u7121\u6cd5\u540c\u6b65\u901a\u9053\u72c0\u614b\u76e3\u8996\u8cc7\u8a0a\u3002"}, {Integer.toString(-51), "\u7121\u6cd5\u5f9e\u88dd\u7f6e\u64f7\u53d6\u5230 RCF \u6a94\u6848\u3002"}, {Integer.toString(-52), "\u4f7f\u7528\u8005\u5e33\u6236\u5df2\u505c\u7528\uff1b\u767b\u5165\u5931\u6557\u3002"}, {Integer.toString(-61), "\u4e4b\u524d\u57f7\u884c\u7684\u5de5\u4f5c\u9700\u8981\u91cd\u65b0\u555f\u52d5\uff0c\u5c07\u5728\u4e0b\u4e00\u9593\u9694\u4e2d\u91cd\u8a66\u5de5\u4f5c\u3002"}, {Integer.toString(-229), "\u82e5\u8981\u555f\u7528\u6b64\u670d\u52d9\uff0c\u60a8\u5fc5\u9808\u64c1\u6709\u6709\u6548\u7684\u96fb\u5b50\u90f5\u4ef6\u9632\u8b77\u8a02\u95b1\u3002"}, {Integer.toString(-230), "\u60a8\u7684 Sonic OS \u7248\u672c\u4e0d\u652f\u63f4\u53e2\u96c6\u529f\u80fd (\u591a\u7bc0\u9ede\u8a02\u95b1)\u3002\u8acb\u5347\u7d1a\u6216\u4f7f\u7528\u55ae\u4e00\u7bc0\u9ede\u91d1\u9470\u3002"}, {Integer.toString(-231), "\u60a8\u7121\u6cd5\u6df7\u5408\u555f\u7528\u4e0d\u540c WANOPT \u578b\u865f\u7684\u91d1\u9470\u3002"}, {Integer.toString(-232), "\u60a8\u7684 WANOPT \u578b\u865f\u4e0d\u652f\u63f4\u53e2\u96c6\u529f\u80fd (\u591a\u7bc0\u9ede\u8a02\u95b1)\u3002"}, {Integer.toString(-201), "API \u53c3\u6578\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-202), "\u4f7f\u7528\u8005\u5df2\u767b\u5165\u3002"}, {Integer.toString(-203), "\u6b64\u7248\u672c\u4e2d\u672a\u5be6\u4f5c SonicWall GMS API\u3002"}, {Integer.toString(-204), "\u5de5\u4f5c\u968e\u6bb5\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-205), "\u6b63\u5728\u9000\u51fa SonicWall GMS Shell"}, {Integer.toString(-206), "API \u53c3\u6578\u907a\u5931"}, {Integer.toString(-207), "\u6c92\u6709\u6b64\u985e\u5225\u7684\u5217"}, {Integer.toString(-208), "\u672a\u63d0\u4f9b\u555f\u7528\u4ee3\u78bc"}, {Integer.toString(-209), "\u672a\u6307\u5b9a\u555f\u7528\u985e\u578b"}, {Integer.toString(-210), "IP \u4f4d\u5740\u7121\u6548\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-211), "\u6307\u5b9a\u7684\u9577\u5ea6\u5c0f\u65bc\u6240\u9700\u9577\u5ea6\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-212), "\u5b57\u4e32\u53ea\u80fd\u5305\u542b\u5341\u516d\u9032\u4f4d\u5b57\u5143\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-213), "\u5099\u7528\u6392\u7a0b\u5668\u7684 IP \u4f4d\u5740\u4e0d\u80fd\u8207\u4e3b\u8981\u6392\u7a0b\u5668\u7684\u76f8\u540c\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-214), "\u5728\u6307\u5b9a\u7684 IP \u4f4d\u5740\u672a\u627e\u5230\u6392\u7a0b\u5668\uff1b\u88dd\u7f6e\u672a\u65b0\u589e\u3002"}, {Integer.toString(-215), "\u65b0\u589e\u88dd\u7f6e\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-226), "\u60a8\u6c92\u6709\u6709\u6548\u7684\u6388\u6b0a\u3002"}, {Integer.toString(-225), "\u89e3\u6790\u8f38\u5165 XML \u6642\u767c\u751f\u932f\u8aa4"}, {Integer.toString(-228), "\u5728\u8f38\u5165 XML \u4e2d\u627e\u5230\u4e86\u7121\u6548\u7684\u5167\u5bb9"}, {Integer.toString(-216), "\u5831\u544a\u985e\u578b\u7121\u6548\u6216\u672a\u77e5\u3002\u4e0d\u77e5\u9053\u5831\u544a\u662f\u6bcf\u65e5\u3001\u6bcf\u9031\u9084\u662f\u6bcf\u6708\u5831\u544a"}, {Integer.toString(-217), "\u76ee\u6a19\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u7121\u6548\u3002\u61c9\u63d0\u4f9b\u81f3\u5c11\u4e00\u500b\u6709\u6548\u7684\u76ee\u6a19\u5730\u5740"}, {Integer.toString(-218), "\u4f86\u6e90\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u7121\u6548"}, {Integer.toString(-219), "SMTP \u4f3a\u670d\u5668\u4f4d\u5740\u7121\u6548"}, {Integer.toString(-220), "\u5831\u544a\u6e05\u55ae\u7121\u6548\u3002\u61c9\u63d0\u4f9b\u81f3\u5c11\u4e00\u500b\u6709\u6548\u7684\u5831\u544a ID"}, {Integer.toString(-221), "\u8cc7\u6599\u5eab\u4e2d\u8a3b\u518a\u7684 Analyzer \u6392\u7a0b\u5668 IP \u4f4d\u5740\u7121\u6548"}, {Integer.toString(-222), "\u8cc7\u6599\u5eab\u4e2d\u8a3b\u518a\u7684 Analyzer \u6392\u7a0b\u5668\u9023\u63a5\u57e0\u865f\u78bc\u7121\u6548"}, {Integer.toString(-223), "\u5831\u544a\u65e5\u671f\u7121\u6548\u6216\u672a\u77e5\u3002\u63d0\u4f9b\u7684\u5831\u544a\u65e5\u671f\u61c9\u70ba\u5e74/\u6708/\u65e5\u683c\u5f0f"}, {Integer.toString(-224), "\u63d0\u4f9b\u7684\u6392\u7a0b ID \u7121\u6548"}, {Integer.toString(-502), "zip \u6a94\u6848\u5bc6\u78bc\u4fdd\u8b77\u7684\u5bc6\u78bc\u907a\u5931"}, {Integer.toString(-503), "\u63d0\u4f9b\u7684\u7bc0\u9ede\u7121\u6548\u3002\u61c9\u6307\u5b9a\u5e8f\u865f\uff08\u7528\u65bc\u88dd\u7f6e\u7bc0\u9ede\uff09\u6216\u986f\u793a\u540d\u7a31\uff08\u7528\u65bc\u7fa4\u7d44\u7bc0\u9ede\uff09\u3002"}, {Integer.toString(-10001), "\u767c\u751f\u901a\u8a0a\u932f\u8aa4"}, {Integer.toString(-10002), "\u89e3\u6790\u8f38\u5165 XML \u6642\u767c\u751f\u932f\u8aa4"}, {Integer.toString(-10005), "\u53eb\u7528\u672a\u77e5\u5143\u4ef6"}, {Integer.toString(-10006), "\u53eb\u7528\u672a\u77e5\u7684 AV \u65b9\u6cd5"}, {Integer.toString(-10011), "\u5617\u8a66\u5347\u7d1a\u904e\u671f\u5f8c\u7684 AV\u3002"}, {Integer.toString(-10012), "\u5617\u8a66\u5347\u7d1a\u672a\u8a3b\u518a\u88dd\u7f6e\u7684 AV\u3002"}, {Integer.toString(-10013), "\u5617\u8a66\u7e8c\u8a02\u6bd4\u76ee\u524d\u652f\u63f4\u7bc0\u9ede\u66f4\u5c11\u7684 AV\u3002"}, {Integer.toString(-10014), "\u5617\u8a66\u7e8c\u8a02 AV \u904e\u65e9\u3002"}, {Integer.toString(-10020), "\u8b8a\u66f4 AV \u5bc6\u78bc\u7684\u4e4b\u524d\u5de5\u4f5c\u64f1\u7f6e\u4e2d\u3002"}, {Integer.toString(-10100), "\u8207 McAfee \u5f8c\u7aef\u901a\u8a0a\u6642\u767c\u751f\u932f\u8aa4"}, {Integer.toString(-10101), "McAfee \u7121\u6cd5\u627e\u5230\u6b64\u7db2\u7ad9\u7684\u4efb\u4f55\u8a18\u9304\u3002"}, {Integer.toString(-10102), "McAfee \u7121\u6cd5\u8207\u6b64\u7db2\u7ad9\u7684\u820a\u5bc6\u78bc\u76f8\u7b26\u3002"}, {Integer.toString(-10103), "AV \u7db2\u7ad9\u5df2\u8a3b\u518a\u3002"}, {Integer.toString(-10200), "\u8207 AV \u8cc7\u6599\u5eab\u4f3a\u670d\u5668\u901a\u8a0a\u6642\u767c\u751f\u932f\u8aa4"}, {Integer.toString(-10201), "\u88dd\u7f6e\u5e8f\u865f\u5df2\u8a3b\u518a"}, {Integer.toString(-10202), "\u63d0\u4f9b\u7684\u6388\u6b0a\u91d1\u9470\u5df2\u7d93\u4f7f\u7528"}, {Integer.toString(-10203), "\u5f9e\u672a\u8a3b\u518a\u6b64\u88dd\u7f6e\u7684\u9632\u6bd2"}, {Integer.toString(-10204), "\u63d0\u4f9b\u7684\u591a\u500b\u91d1\u9470\u5fc5\u9808\u6709\u76f8\u540c\u7684\u671f\u9650"}, {Integer.toString(-10205), "\u514d\u8cbb\u8a66\u7528\u91d1\u9470\u4e0d\u5141\u8a31\u7528\u65bc\u5347\u7d1a"}, {Integer.toString(-10206), "\u70ba\u4e00\u500b\u6216\u591a\u500b\u53c3\u6578\u63d0\u4f9b\u4e86\u975e\u6cd5\u503c"}, {Integer.toString(-10210), "\u63d0\u4f9b\u7684\u5e8f\u865f\u7121\u6548"}, {Integer.toString(-10211), "\u63d0\u4f9b\u7684\u6388\u6b0a\u91d1\u9470\u5df2\u7d93\u8a3b\u518a"}, {Integer.toString(-10212), "\u63d0\u4f9b\u7684\u65b0\u5bc6\u78bc\u6709\u7121\u6548\u5b57\u5143\u6216\u9577\u5ea6\u4e26\u975e 6 \u5230 12 \u500b\u5b57\u5143"}, {Integer.toString(-10213), "\u63d0\u4f9b\u7684\u9632\u6bd2\u5bc6\u78bc\u7121\u6548"}, {Integer.toString(-10214), "\u63d0\u4f9b\u7684 OEM \u4ee3\u78bc\u7121\u6548"}, {Integer.toString(-10215), "\u63d0\u4f9b\u7684 WAN IP \u4f4d\u5740\u7121\u6548"}, {Integer.toString(-10220), "\u6b64\u88dd\u7f6e\u4e4b\u524d\u7684\u8acb\u6c42\u4ecd\u64f1\u7f6e\u4e2d"}, {Integer.toString(-10250), "\u88dd\u7f6e\u5df2\u8a3b\u518a AV \u4e26\u9700\u8981\u91cd\u65b0\u555f\u52d5\u3002"}, {Integer.toString(-10251), "\u7531\u65bc\u5bc6\u78bc\u7121\u6548\uff0c\u88dd\u7f6e\u7121\u6cd5\u91cd\u65b0\u555f\u52d5"}, {Integer.toString(-10260), "\u7121\u6cd5\u627e\u5230\u63d0\u4f9b\u7684\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u5e8f\u865f"}, {Integer.toString(-10261), "\u63d0\u4f9b\u7684\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u5e8f\u865f\u7121\u6548"}, {Integer.toString(-10262), "\u88dd\u7f6e\u4e26\u975e\u4efb\u4f55\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6210\u54e1"}, {Integer.toString(-10263), "\u88dd\u7f6e\u5df2\u6709\u6d3b\u52d5\u7684\u9632\u6bd2\u8a02\u95b1\u4e26\u4e14\u7121\u6cd5\u65b0\u589e\u5230\u6388\u6b0a\u5171\u7528\u7fa4\u7d44"}, {Integer.toString(-10264), "\u88dd\u7f6e\u4e26\u975e\u6b64\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6210\u54e1"}, {Integer.toString(-10265), "\u7121\u6cd5\u522a\u9664\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6240\u6709\u8005"}, {Integer.toString(-10266), "\u88dd\u7f6e\u5df2\u7d93\u662f\u53e6\u4e00\u500b\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6210\u54e1"}, {Integer.toString(-10267), "\u63d0\u4f9b\u7684\u65b0\u6388\u6b0a\u8a08\u6578\u8d85\u51fa\u4e86\u53ef\u7528\u6388\u6b0a\u5171\u7528\u7fa4\u7d44\u7684\u6388\u6b0a\u6578"}, {Integer.toString(-10004), "\u9632\u6bd2\u64cd\u4f5c\u7684\u4e00\u500b\u6216\u591a\u500b\u53c3\u6578\u907a\u5931"}, {Integer.toString(-10300), "\u7121\u6cd5\u627e\u5230\u63d0\u4f9b\u7684\u95dc\u65bc\u5168\u9762\u4fdd\u8b77\u5408\u4f5c\u5925\u4f34\u7684\u8cc7\u8a0a"}, {Integer.toString(-10301), "\u63d0\u4f9b\u7684\u5168\u9762\u4fdd\u8b77\u5408\u4f5c\u5925\u4f34\u5bc6\u78bc\u4e0d\u6b63\u78ba"}, {Integer.toString(-10303), "\u63d0\u4f9b\u7684\u9632\u6bd2\u6388\u6b0a\u8a08\u6578\u7121\u6548"}, {Integer.toString(-10304), "\u5617\u8a66\u7ba1\u7406\u6c92\u6709\u6307\u6d3e\u7d66\u5168\u9762\u4fdd\u8b77\u5408\u4f5c\u5925\u4f34\u7684\u88dd\u7f6e"}, {Integer.toString(-20000), "\u8207\u5f8c\u7aef\u8a3b\u518a\u4f3a\u670d\u5668\u901a\u8a0a\u6642\u767c\u751f\u672a\u77e5\u932f\u8aa4\u3002"}, {Integer.toString(-20101), "\u5df2\u70ba\u8a72\u4f7f\u7528\u8005\u8a3b\u518a\u8acb\u6c42\u7684\u806f\u7d61\u3002"}, {Integer.toString(-20102), "\u7121\u6cd5\u70ba\u4f7f\u7528\u8005\u65b0\u589e\u8acb\u6c42\u7684\u806f\u7d61\u3002"}, {Integer.toString(-20106), "\u7121\u6cd5\u4fee\u6539\uff0c\u539f\u56e0\u662f\u672a\u627e\u5230\u4f7f\u7528\u8005\u8cc7\u8a0a\u3002"}, {Integer.toString(-20111), "\u672a\u627e\u5230\u806f\u7d61\u8cc7\u8a0a\u3002"}, {Integer.toString(-20112), "\u7121\u6cd5\u4fee\u6539\u806f\u7d61\u8cc7\u8a0a\u3002"}, {Integer.toString(-20113), "\u7121\u6cd5\u522a\u9664\u806f\u7d61\u8cc7\u8a0a\u3002"}, {Integer.toString(-20116), "\u88dd\u7f6e\u5df2\u8a3b\u518a\u5230\u5176\u4ed6 MySonicWall.com \u5e33\u6236\u3002"}, {Integer.toString(-20117), "\u88dd\u7f6e\u8a3b\u518a\u7cfb\u7d71\u4e2d\u672a\u627e\u5230\u6307\u5b9a\u7684\u88dd\u7f6e\u3002"}, {Integer.toString(-20118), "\u88dd\u7f6e\u7121\u6cd5\u900f\u904e\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u8a3b\u518a\u3002"}, {Integer.toString(-20119), "\u7121\u6cd5\u64f7\u53d6\u6307\u5b9a\u88dd\u7f6e\u7684\u72c0\u614b\u3002"}, {Integer.toString(-20121), "\u6307\u5b9a\u7684\u88dd\u7f6e\u672a\u8a3b\u518a\u3002"}, {Integer.toString(-20122), "\u6307\u5b9a\u7684\u555f\u7528\u91d1\u9470\u5df2\u4f7f\u7528\u904e\u3002"}, {Integer.toString(-20123), "\u4f7f\u7528\u7684\u555f\u7528\u4ee3\u78bc\u7121\u6548\u3002"}, {Integer.toString(-20124), "\u4f7f\u7528\u7684\u555f\u7528\u4ee3\u78bc/\u88dd\u7f6e\u7d44\u5408\u7121\u6548\u3002"}, {Integer.toString(-20125), "\u900f\u904e\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7684\u5347\u7d1a\u672a\u5b8c\u6210\u3002"}, {Integer.toString(-20126), "\u900f\u904e\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7684\u555f\u7528\u672a\u5b8c\u6210\u3002"}, {Integer.toString(-20131), "\u8a3b\u518a SonicWall GMS \u7cfb\u7d71\u7684\u932f\u8aa4 MAC \u4f4d\u5740\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20132), "SonicWall GMS \u7cfb\u7d71\u672a\u8a3b\u518a\u3002"}, {Integer.toString(-20133), "\u6307\u5b9a\u7684 SonicWall GMS \u5e8f\u865f\u7121\u6548\u3002"}, {Integer.toString(-20134), "\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7121\u6cd5\u64f7\u53d6 SonicWall GMS \u72c0\u614b\u3002"}, {Integer.toString(-20135), "SonicWall GMS \u5df2\u8a3b\u518a\u3002"}, {Integer.toString(-20136), "\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7121\u6cd5\u8a3b\u518a\u60a8\u7684 SonicWall GMS \u7cfb\u7d71\u3002"}, {Integer.toString(-20142), "\u932f\u8aa4\u7684 mac \u4f4d\u5740\u5df2\u8a3b\u518a\u3002"}, {Integer.toString(-20143), "\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u7121\u6cd5\u64f7\u53d6 SonicWall GMS \u7684\u53ef\u7528\u5347\u7d1a\u7a0b\u5f0f\u3002"}, {Integer.toString(-20144), "\u6c92\u6709\u6307\u5b9a\u57fa\u672c\u5957\u4ef6\u671f\u9650\u3002"}, {Integer.toString(-20145), "\u8b80\u53d6\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u7684\u57fa\u672c\u5957\u4ef6\u7cfb\u7d71\u8cc7\u8a0a\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20146), "\u6c92\u6709\u53ef\u7528\u65bc\u672c\u7522\u54c1\u7684\u7bc0\u9ede\u5347\u7d1a\u3002"}, {Integer.toString(-20147), "\u60a8\u7684 SonicWall GMS \u5b89\u88dd\u5df2\u6210\u70ba\u4e00\u500b\u96f6\u552e\u7248\u3002"}, {Integer.toString(-20148), "\u88dd\u7f6e\u672a\u8a3b\u518a\u3002"}, {Integer.toString(-20149), "\u5728\u5f8c\u7aef\u8a3b\u518a\u4f3a\u670d\u5668\u4e2d\u64f7\u53d6\u6709\u95dc SonicWall GMS \u7cfb\u7d71\u7684\u8cc7\u8a0a\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20150), "\u6307\u5b9a\u7684 SonicWall GMS \u5e8f\u865f\u6c92\u6709\u8a3b\u518a\u7d66\u4f7f\u7528\u8005\u3002"}, {Integer.toString(-20151), "\u5728\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u63d2\u5165\u5831\u544a\u8cc7\u8a0a\u6642\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20152), "SonicWall GMS \u5e8f\u865f\u548c\u4f7f\u7528\u8005\u540d\u7a31\u7d44\u5408\u7121\u6548\u3002"}, {Integer.toString(-20153), "\u5728\u5347\u7d1a SonicWall GMS \u4ee5\u4fbf\u6574\u5408 ViewPoint \u6642\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u767c\u751f\u932f\u8aa4\u3002"}, {Integer.toString(-20154), "\u88dd\u7f6e\u6c92\u6709\u8a3b\u518a\uff0c\u6216\u6307\u5b9a\u7684\u4f7f\u7528\u8005\u540d\u7a31\u7121\u6548\u3002"}, {Integer.toString(-20155), "\u6b64\u670d\u52d9\u7684\u57fa\u672c\u5408\u7d04\u6c92\u6709\u555f\u7528\u6216\u5df2\u904e\u671f\u3002"}, {Integer.toString(-20201), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u7cfb\u7d71\u7684 XML \u8f38\u5165\u7121\u6548\u3002"}, {Integer.toString(-20202), "\u5167\u90e8\u932f\u8aa4\uff1a\u8f38\u5165\u4e2d\u672a\u6307\u5b9a\u4f7f\u7528\u8005\u540d\u7a31\u3002"}, {Integer.toString(-20203), "\u70ba SonicWall GMS \u8a3b\u518a\u7cfb\u7d71\u4ecb\u9762\u6307\u5b9a\u7684\u5bc6\u78bc\u7121\u6548\u3002"}, {Integer.toString(-20204), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u8acb\u6c42\u7684\u65b9\u6cd5\u7121\u6548\u3002"}, {Integer.toString(-20205), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u8acb\u6c42\u7684 XML \u7248\u672c\u7121\u6548\u3002"}, {Integer.toString(-20401), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u767c\u751f\u8cc7\u6599\u5eab\u932f\u8aa4\u3002"}, {Integer.toString(-20402), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u767c\u751f\u767b\u9304\u932f\u8aa4\u3002"}, {Integer.toString(-20403), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u767c\u751f\u5143\u4ef6\u932f\u8aa4\u3002"}, {Integer.toString(-20404), "\u5167\u90e8\u932f\u8aa4\uff1a\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u767c\u751f\u7a0b\u5e8f\u932f\u8aa4\u3002"}, {Integer.toString(-20140), "\u5f8c\u7aef\u8a3b\u518a\u7cfb\u7d71\u4e2d\u672a\u627e\u5230\u6307\u5b9a\u88dd\u7f6e\u7684 PKI \u8cc7\u8a0a\u3002"}, {Integer.toString(-20141), "\u6307\u5b9a\u88dd\u7f6e\u7684 PKI \u670d\u52d9\u672a\u555f\u7528\u3002"}, {Integer.toString(-227), "\u6c92\u6709\u8db3\u5920\u7684\u8a18\u61b6\u9ad4\u7528\u65bc\u6a94\u6848\u4e0a\u8f09\u3002\u8acb\u4e0a\u8f09\u8f03\u5c0f\u7684\u6a94\u6848\u3002"}, {Integer.toString(-66), "\u5617\u8a66\u4e0a\u8f09\u5230\u88dd\u7f6e\u7684\u7c3d\u540d\u6a94\u6848\u7121\u6548\u3002"}, {Integer.toString(-67), "\u7c3d\u540d\u6a94\u6848\u7121\u6cd5\u4e0a\u8f09\u5230\u88dd\u7f6e\u3002\u8acb\u78ba\u8a8d\u6b64\u64cd\u4f5c\u662f\u5426\u9069\u7528\u65bc\u6b64\u578b\u865f/\u7248\u672c\u3002"}, {Integer.toString(-500), "\u5f9e lm2.sonicwall.com \u6536\u5230\u7684\u932f\u8aa4\u3002"}, {Integer.toString(-501), "\u7121\u6cd5\u5b58\u53d6 lm2.sonicwall.com \u7db2\u7ad9\u3002"}, {Integer.toString(-907), "\u4e0d\u652f\u63f4\u88dd\u7f6e\u4e0a\u7684\u97cc\u9ad4\u7248\u672c\u3002"}, {Integer.toString(-901), "\u8a18\u9304 id \u7121\u6548\u6216\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-902), "\u7121\u6cd5\u5957\u7528\u5be6\u9ad4\u5c01\u9589\u8a18\u9304\u3002"}, {Integer.toString(-903), "\u7121\u6cd5\u5957\u7528\u8a18\u9304\u3002"}, {Integer.toString(-904), "\u7bc4\u672c id \u7121\u6548\u6216\u4e0d\u5b58\u5728\u3002"}, {Integer.toString(-905), "\u7121\u6cd5\u5957\u7528\u8a18\u9304\u3002"}, {Integer.toString(-906), "\u7121\u6cd5\u5957\u7528\u7bc4\u672c\u3002"}, {Integer.toString(-908), "\u7b49\u5f85\u4f86\u81ea\u6c60\u7684\u9023\u63a5\u903e\u6642\u3002"}, {Integer.toString(-909), "\u7b49\u5f85\u5230\u9060\u7aef\u4e3b\u6a5f\u7684\u9023\u63a5\u903e\u6642\u3002"}, {Integer.toString(-910), "\u6b64\u88dd\u7f6e\u7684\u7d44\u614b\u8a2d\u5b9a\u4e0d\u6b63\u78ba\u3002"}, {Integer.toString(-911), "\u7b49\u5f85\u78ba\u5b9a\u6b64\u88dd\u7f6e\u7684\u9069\u7528\u7d44\u614b\u8a2d\u5b9a\u3002"}, {Integer.toString(-912), "\u7121\u6cd5\u627e\u5230 Web \u670d\u52d9\u4e3b\u6a5f\u3002"}, {Integer.toString(-913), "\u7121\u6cd5\u5efa\u7acb Web \u670d\u52d9\u9023\u63a5\u3002"}, {Integer.toString(-914), "\u900f\u904e Web \u670d\u52d9\u5b58\u53d6\u8cc7\u6599\u6216\u8cc7\u6e90\u6642\u51fa\u73fe\u554f\u984c\u3002"}, {Integer.toString(-915), "\u7121\u6cd5\u9a57\u8b49 Web \u670d\u52d9\u3002"}, {Integer.toString(-800), "\u6b64\u8a2d\u5099\u4e0d\u652f\u63f4\u5c0d GMS \u7684\u5916\u90e8\u6d41\u91cf\u5831\u544a"}, {Integer.toString(-801), "\u6d41\u91cf\u8f49\u5bc4\u7ad9\u9598\u9053\u8a2d\u5b9a\u4e0d\u6b63\u78ba"}, {Integer.toString(-802), "\u6b64\u578b\u865f\u4e0d\u652f\u63f4\u5c0d GMS \u7684\u5916\u90e8\u6d41\u91cf\u5831\u544a"}, {Integer.toString(-803), "\u6b64\u97cc\u9ad4\u7248\u672c\u4e0d\u652f\u63f4\u5c0d GMS \u7684\u5916\u90e8\u6d41\u91cf\u5831\u544a"}, {Integer.toString(-804), "\u6b64\u8a2d\u5099\u7684\u61c9\u7528\u7a0b\u5f0f\u8996\u89ba\u5316\u672a\u7d93\u6388\u6b0a"}, {Integer.toString(-805), "\u53ef\u7528\u7684\u5132\u5b58\u7a7a\u9593\u4e0d\u8db3\uff0c\u7121\u6cd5\u9032\u884c\u6d41\u91cf\u4ee3\u7406\u6307\u6d3e"}, {Integer.toString(-806), "\u53ef\u7528\u7684\u57f7\u884c\u968e\u6bb5\u8a18\u61b6\u9ad4\u4e0d\u8db3\uff0c\u7121\u6cd5\u9032\u884c\u6d41\u91cf\u4ee3\u7406\u6307\u6d3e"}, {Integer.toString(-807), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 1"}, {Integer.toString(-808), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 2"}, {Integer.toString(-809), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 1 \u548c 2"}, {Integer.toString(-810), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 1 \u548c\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {Integer.toString(-811), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 1\u30012 \u548c\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {Integer.toString(-812), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u4ee3\u7406 2 \u548c\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {Integer.toString(-813), "\u7121\u6cd5\u8a3b\u518a\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {Integer.toString(-814), "GMS \u4e2d\u7121\u6cd5\u4f7f\u7528\u9598\u9053\u9632\u706b\u7246"}, {Integer.toString(-815), "\u9598\u9053\u9632\u706b\u7246\u7aef\u7684\u901a\u9053\u5efa\u7acb\u5931\u6557"}, {Integer.toString(-816), "\u53d7\u7ba1\u7406\u8a2d\u5099\u7aef\u7684\u901a\u9053\u5efa\u7acb\u5931\u6557"}, {Integer.toString(-817), "\u672a\u91dd\u5c0d\u96f2\u7aef GMS \u7ba1\u7406\u548c\u5831\u544a\u6388\u6b0a\u8a2d\u5099"}, {Integer.toString(-818), "\u53ef\u7528\u7684\u8655\u7406\u6548\u80fd\u4e0d\u8db3\uff0c\u7121\u6cd5\u9032\u884c\u6d41\u91cf\u4ee3\u7406\u6307\u6d3e"}, {Integer.toString(-819), "\u53ef\u7528\u7684\u983b\u5bec\u4e0d\u8db3\uff0c\u7121\u6cd5\u9032\u884c\u6d41\u91cf\u4ee3\u7406\u6307\u6d3e"}, {"EDIT_DOMAIN", "\u7de8\u8f2f\u7db2\u57df"}, {"VIEW_DOMAIN", "\u6aa2\u8996\u7db2\u57df\u8a73\u7d30\u8cc7\u6599"}, {"ADD_DOMAIN", "\u65b0\u589e\u7db2\u57df"}, {"SELECT_TO_DELETE", "\u8acb\u9078\u64c7\u8981\u522a\u9664\u7684\u7db2\u57df/\u9a57\u8b49\u4f3a\u670d\u5668\u3002"}, {"SELECT_AS_TO_DEL", "\u8acb\u9078\u64c7\u8981\u522a\u9664\u7684\u9a57\u8b49\u4f3a\u670d\u5668\u3002"}, {"DELETE_CONFIRMATION", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u7db2\u57df '"}, {"USER_DELETE_CONFIRMATION", "\u6240\u6709\u9a57\u8b49\u4f3a\u670d\u5668\u3001\u4f7f\u7528\u8005\u3001\u4f7f\u7528\u8005\u985e\u578b\u53ca\u5176\u8a2d\u5b9a\u4e5f\u5c07\u88ab\u522a\u9664\u3002"}, {"USER_AS_DELETE_CONFIRMATION", "\u6240\u6709\u4f7f\u7528\u8005\u3001\u4f7f\u7528\u8005\u985e\u578b\u53ca\u5176\u8a2d\u5b9a\u4e5f\u5c07\u88ab\u522a\u9664\u3002"}, {"SURE_WANT_TO_CONTINUE", "\u662f\u5426\u78ba\u5b9a\u8981\u7e7c\u7e8c\uff1f"}, {"MULTIPLE_DELETE_CONFIRMATION", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u4ee5\u4e0b\u7db2\u57df\uff1a"}, {"MULTIPLE_AS_DELETE_CONFIRMATION", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u4ee5\u4e0b\u9a57\u8b49\u4f3a\u670d\u5668\uff1a"}, {"AND_AS_DELETE_CONFIRMATION", "\u548c\u522a\u9664\u4ee5\u4e0b\u9a57\u8b49\u4f3a\u670d\u5668\uff1a"}, {"WANT_TO_CONTINUE", "\u662f\u5426\u8981\u7e7c\u7e8c\uff1f"}, {"DOMAIN", "\u7db2\u57df"}, {"DOMAINS", "\u7db2\u57df"}, {"SEARCH", "\u641c\u5c0b"}, {"NAME", "\u540d\u7a31"}, {"DOMAIN_TYPE", "\u7db2\u57df\u985e\u578b"}, {"DOMAIN_SETTINGS", "\u7db2\u57df\u8a2d\u5b9a"}, {"ALIAS", "\u5225\u540d"}, {"DISPLAY_DOMAIN", "\u5728\u767b\u5165\u87a2\u5e55\u4e2d\u986f\u793a\u7db2\u57df"}, {"SET_AS_DEFAULT", "\u8a2d\u5b9a\u70ba\u9810\u8a2d\u7db2\u57df"}, {"HOST_NAME", "\u4e3b\u6a5f\u540d\u7a31"}, {"HOST_TYPE", "\u4e3b\u6a5f\u985e\u578b"}, {"EQUALS", "\u7b49\u65bc"}, {"STARTS_WITH", "\u958b\u982d\u70ba"}, {"ENDS_WITH", "\u7d50\u5c3e\u70ba"}, {"CONTAINS", "\u5305\u542b"}, {"LOCAL", "\u672c\u6a5f"}, {"REMOTE", "\u9060\u7aef"}, {"DOMAINS", "\u7db2\u57df"}, {"SSL_USED", "\u4f7f\u7528\u7684 SSL"}, {"CONFIGURE", "\u8a2d\u5b9a"}, {"NO_DOMAIN_FOUND", "\u672a\u627e\u5230\u7db2\u57df"}, {"NO_AS_FOUND", "\u672a\u627e\u5230\u9a57\u8b49\u4f3a\u670d\u5668"}, {"ADD_DOMAIN", "\u65b0\u589e\u7db2\u57df"}, {"DELETE_DOMAINS", "\u522a\u9664\u7db2\u57df/\u9a57\u8b49\u4f3a\u670d\u5668"}, {"DELETE_ASS", "\u522a\u9664\u9a57\u8b49\u4f3a\u670d\u5668"}, {"EQUALS", "\u7b49\u65bc"}, {"STARTS_WITH", "\u958b\u982d\u70ba"}, {"ENDS_WITH", "\u7d50\u5c3e\u70ba"}, {"CONTAINS", "\u5305\u542b"}, {"LOCAL", "\u672c\u6a5f"}, {"REMOTE", "\u9060\u7aef"}, {"REMOTE_DOMAIN", "\u9060\u7aef\u7db2\u57df"}, {"ADMIN_PASSWORD", "\u7ba1\u7406\u54e1\u5bc6\u78bc"}, {"DEFAULT_ADMIN_USER", "\u9810\u8a2d\u7ba1\u7406\u54e1\u4f7f\u7528\u8005"}, {"AUTH_PORT", "\u9a57\u8b49\u9023\u63a5\u57e0"}, {"ACCT_PORT", "\u8a08\u8cbb\u9023\u63a5\u57e0"}, {"LDAP", "LDAP"}, {"AD", "Active Directory"}, {"RADIUS", "RADIUS"}, {"BASE_DN", "\u57fa\u672c\u8b58\u5225\u540d\u7a31"}, {"SEARCH_FILTER", "\u641c\u5c0b\u7be9\u9078\u5668"}, {"SHARED_SECRET", "\u5171\u7528\u7684\u6a5f\u5bc6"}, {"USE_SSL", "\u4f7f\u7528 SSL"}, {"SSL_PORT", "SSL \u9023\u63a5\u57e0"}, {"ANONYMOUS_LOGIN", "\u533f\u540d\u767b\u5165"}, {"LOGIN_USER_NAME", "\u767b\u5165\u4f7f\u7528\u8005\u8b58\u5225\u540d\u7a31"}, {"DNAME_MSG", "\u8b58\u5225\u540d\u7a31\u7528\u65bc\u5728\u57f7\u884c\u7d81\u5b9a\u6642\u9a57\u8b49\u76ee\u9304\u4f3a\u670d\u5668\u3002\u6b64\u6b04\u4f4d\u7684\u503c\u61c9\u6307\u5b9a\u70ba DN\uff08\u8b58\u5225\u540d\u7a31\uff09\u3002\u4f8b\u5982\uff1a[uid=xyz,ou=People,dc=example,dc=com]\u3001[cn=jdoe,cn=users,dc=sv,dc=company,dc=com]"}, {"LOGIN_PWD", "\u767b\u5165\u5bc6\u78bc"}, {"PROTOCOL_VERSION", "\u901a\u8a0a\u5354\u5b9a\u7248\u672c"}, {"LDAPV2", "LDAP \u7248\u672c 2"}, {"LDAPV3", "LDAP \u7248\u672c 3"}, {"SETTINGS", "\u8a2d\u5b9a"}, {"USER_DIRECTORY_LDAP", "\u4f7f\u7528\u8005\u76ee\u9304 LDAP \u6a21\u5f0f"}, {"LDAP_SCHEMA", "LDAP \u6a21\u5f0f"}, {"MSAD", "Microsoft Active Directory"}, {"RFC2798", "RFC2798 InetOrgPerson"}, {"NOVELL", "Novell eDirectory"}, {"USER_DEFINED", "\u5b9a\u7fa9\u7684\u4f7f\u7528\u8005"}, {"USER_OBJECTS", "\u4f7f\u7528\u8005\u7269\u4ef6"}, {"OBJ_CLASS", "\u7269\u4ef6\u985e\u5225"}, {"LOGIN_NAME", "\u767b\u5165\u540d\u7a31\u5c6c\u6027"}, {"FIRST_NAME", "\u540d\u5b57\u5c6c\u6027"}, {"LAST_NAME", "\u59d3\u6c0f\u5c6c\u6027"}, {"EMAIL", "\u96fb\u5b50\u90f5\u4ef6\u5c6c\u6027"}, {"TELEPHONE", "\u96fb\u8a71\u5c6c\u6027"}, {"CON_TIMEOUT", "\u9023\u63a5\u903e\u6642"}, {"SCHEMA", "\u7d50\u69cb\u63cf\u8ff0"}, {"TEST_SETTINGS", "\u6e2c\u8a66\u8a2d\u5b9a"}, {"TEST_RADIUS_SETTINGS", "\u6e2c\u8a66 RADIUS \u8a2d\u5b9a"}, {"TEST_LDAP_MSG", "\u8981\u6e2c\u8a66 LDAP \u8a2d\u5b9a\uff0c\u8acb\u8f38\u5165\u4e00\u500b\u6709\u6548\u7684 LDAP"}, {"TEST_RADIUS_MSG", "\u8981\u6e2c\u8a66 RADIUS \u8a2d\u5b9a\uff0c\u8acb\u8f38\u5165\u4e00\u500b\u6709\u6548\u7684 RADIUS"}, {"TEST_MSG", "\u767b\u5165\u540d\u7a31\u548c\u5bc6\u78bc\uff0c\u7136\u5f8c\u6309\u4e00\u4e0b\u300c\u6e2c\u8a66\u300d\u6309\u9215\u3002\u8acb\u6ce8\u610f\uff0c\u9019\u5c07\u5957\u7528\u5df2\u9032\u884c\u7684\u4efb\u4f55\u8b8a\u66f4\u3002"}, {"USER", "\u4f7f\u7528\u8005"}, {"PWD", "\u5bc6\u78bc"}, {"RUN_CLIENT_TEST", "\u57f7\u884c\u7528\u6236\u7aef\u6e2c\u8a66"}, {"TEST_STATUS", "\u6e2c\u8a66\u72c0\u614b"}, {"RETURNED_USER_ATTRIBUTES", "\u50b3\u56de\u7684\u6e2c\u8a66\u7d50\u679c"}, {"TEST", "\u6e2c\u8a66"}, {"OK", "\u78ba\u5b9a"}, {"CANCEL", "\u53d6\u6d88"}, {"CLOSE", "\u95dc\u9589"}, {"CANT_DELETE_LOCALDOMAIN", "\u7121\u6cd5\u7de8\u8f2f/\u522a\u9664\u672c\u6a5f\u7db2\u57df"}, {"CANT_EDIT", "\u5982\u679c\u53ea\u6709\u4e00\u500b\u7db2\u57df\uff0c\u5247\u7121\u6cd5\u9032\u884c\u7de8\u8f2f"}, {"EMPTY_NAME", "\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_ADMIN_PWD", "\u7ba1\u7406\u54e1\u5bc6\u78bc\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_ADMIN_USER", "\u9810\u8a2d\u7ba1\u7406\u54e1\u4f7f\u7528\u8005\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_AUTH_PORT", "\u9a57\u8b49\u9023\u63a5\u57e0\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_AUTH_PORT", "\u9a57\u8b49\u9023\u63a5\u57e0\u61c9\u70ba\u6b63\u6578"}, {"AUTH_PORT_RANGE", "\u9a57\u8b49\u9023\u63a5\u57e0\u61c9\u5728 0 - 65535 \u7bc4\u570d\u5167"}, {"EMPTY_ACCT_PORT", "\u8a08\u8cbb\u9023\u63a5\u57e0\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_ACCT_PORT", "\u8a08\u8cbb\u9023\u63a5\u57e0\u61c9\u70ba\u6b63\u6578"}, {"EMPTY_BD_NAME", "\u57fa\u672c\u8b58\u5225\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_SEARCH_FILTER", "\u641c\u5c0b\u7be9\u9078\u5668\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_SHRED_SECRET", "\u5171\u7528\u7684\u6a5f\u5bc6\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_SSL_PORT", "SSL \u9023\u63a5\u57e0\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_SSL_PORT", "SSL \u9023\u63a5\u57e0\u61c9\u70ba\u6b63\u6578"}, {"SSL_PORT_RANGE", "SSL \u9023\u63a5\u57e0\u61c9\u5728 0 - 65535 \u7bc4\u570d\u5167"}, {"EMPTY_LOGIN", "\u767b\u5165\u4f7f\u7528\u8005\u8b58\u5225\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_LOGIN_PWD", "\u767b\u5165\u5bc6\u78bc\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"EMPTY_CON_TIMEOUT", "\u9023\u63a5\u903e\u6642\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_CON_TIMEOUT", "\u9023\u63a5\u903e\u6642\u61c9\u70ba\u6b63\u6578"}, {"RECOMMEND_SSL", "\u5f37\u70c8\u5efa\u8b70\u4f7f\u7528 SSL \u8207\u9060\u7aef\u4f3a\u670d\u5668\u9032\u884c\u5b89\u5168\u901a\u8a0a\u3002"}, {"CON_NOT_SECURE", "\u5982\u679c\u6c92\u6709\u4f7f\u7528 SSL\uff0c\u60a8\u7684\u9023\u63a5\u5c07\u4e0d\u5b89\u5168\u3002"}, {"DOMAIN_EXISTS", "\u5df2\u7d93\u5b58\u5728\u5177\u6709\u6b64\u540d\u7a31\u7684\u7db2\u57df"}, {"ALIAS_EXISTS", "\u5df2\u7d93\u5b58\u5728\u5177\u6709\u6b64\u540d\u7a31\u7684\u5225\u540d"}, {"DOMAIN_INVALID", "\u6307\u5b9a\u7684\u7db2\u57df\u540d\u7a31\u7121\u6548\u3002"}, {"DOMAIN_VALID_CHARS", "\u540d\u7a31\u53ea\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a"}, {"DOMAIN_VALID_CHARS_LIST", "\u82f1\u6578\u5b57\u5143\u3001.\uff08\u53e5\u9ede\uff09\u3001-\uff08\u9023\u5b57\u7b26\uff09\u3001_\uff08\u5e95\u7dda\uff09\u548c\u7a7a\u683c\u3002"}, {"SPECIFY_VALID_NAME", "\u8acb\u4f7f\u7528\u5141\u8a31\u7684\u5b57\u5143\u6307\u5b9a\u540d\u7a31\u3002"}, {"DIR_GRP_SETTINGS", "Active Directory \u7fa4\u7d44\u8a2d\u5b9a"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS", "\u53ea\u5141\u8a31 AD \u7fa4\u7d44\u6210\u54e1"}, {"DIR_GROUPS", "Active Directory \u7fa4\u7d44"}, {"GRP_NAME_INVALID", "\u6307\u5b9a\u7684\u7fa4\u7d44\u540d\u7a31\u7121\u6548\u3002"}, {"GRP_NAME_INVALID_LENGTH", "\u7fa4\u7d44\u540d\u7a31\u4e0d\u80fd\u8d85\u904e 200 \u500b\u5b57\u5143\u3002"}, {"AUTH_SERVER_NAME", "\u9a57\u8b49\u4f3a\u670d\u5668\u540d\u7a31"}, {"ADD_AUTH_SERVER", "\u65b0\u589e\u9a57\u8b49\u4f3a\u670d\u5668"}, {"ADD_AUTHSERVER", "\u65b0\u589e\u9a57\u8b49\u4f3a\u670d\u5668"}, {"EDIT_AUTHSERVER", "\u7de8\u8f2f\u9a57\u8b49\u4f3a\u670d\u5668"}, {"DELETE_DOMAIN", "\u522a\u9664\u8a72\u7db2\u57df"}, {"CANT_DELETE_LOCAL_AS", "\u7121\u6cd5\u7de8\u8f2f/\u522a\u9664\u672c\u6a5f\u9a57\u8b49\u4f3a\u670d\u5668"}, {"CANT_DELETE_ADMIN_AS", "\u7531\u65bc\u8a72\u7db2\u57df\u7684\u9810\u8a2d\u7ba1\u7406\u54e1\u5df2\u91dd\u5c0d\u6b64\u4f3a\u670d\u5668\u9032\u884c\u9a57\u8b49\uff0c\u56e0\u6b64\u7121\u6cd5\u522a\u9664\u6b64\u9a57\u8b49\u4f3a\u670d\u5668\u3002\n\u5c07\u9810\u8a2d\u7ba1\u7406\u54e1\u79fb\u52d5\u5230\u5176\u4ed6\u9a57\u8b49\u4f3a\u670d\u5668\uff0c\u7136\u5f8c\u91cd\u8a66\u3002"}, {"EDIT_AUTH_SERVER", "\u7de8\u8f2f\u6b64\u9a57\u8b49\u4f3a\u670d\u5668"}, {"VIEW_AUTH_SERVER", "\u6aa2\u8996\u9a57\u8b49\u4f3a\u670d\u5668\u8a73\u7d30\u8cc7\u6599"}, {"DELETE_AUTH_SERVER", "\u522a\u9664\u6b64\u9a57\u8b49\u4f3a\u670d\u5668"}, {"AS_INVALID", "\u6307\u5b9a\u7684\u9a57\u8b49\u4f3a\u670d\u5668\u7121\u6548\u3002"}, {"AS_EXISTS", "\u5df2\u7d93\u5b58\u5728\u5177\u6709\u6b64\u540d\u7a31\u7684\u9a57\u8b49\u4f3a\u670d\u5668"}, {"EMPTY_AS_NAME", "\u9a57\u8b49\u4f3a\u670d\u5668\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"AS_NAME_MSG", "\u9a57\u8b49\u4f3a\u670d\u5668\u7684\u540d\u7a31\u5c07\u88ab\u5efa\u7acb\u3002\u6b64\u540d\u7a31\u5c0d\u65bc\u7ba1\u7406\u7db2\u57df\u4e2d\u4e0d\u540c\u7684\u9a57\u8b49\u4f3a\u670d\u5668\u975e\u5e38\u6709\u7528\u3002"}, {"AS_DELETE_CONFIRMATION", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u9a57\u8b49\u4f3a\u670d\u5668 '"}, {"PRI_RADIUS", "\u4e3b\u8981 RADIUS \u4f3a\u670d\u5668"}, {"AUTH_PROTOCOL", "\u9a57\u8b49\u901a\u8a0a\u5354\u5b9a"}, {"RADIUS_TIMEOUT", "RADIUS \u903e\u6642\uff08\u79d2\u6578\uff09"}, {"MAX_RETRIES", "\u6700\u5927\u91cd\u8a66\u6b21\u6578"}, {"BACK_RADIUS", "\u5099\u7528 RADIUS \u4f3a\u670d\u5668"}, {"RADIUS_USER_GROUP", "RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u8a2d\u5b9a"}, {"ALLOW_GROUP_MEMBERS", "\u53ea\u5141\u8a31 RADIUS \u7fa4\u7d44\u6210\u54e1"}, {"USE_SW_VSA", "\u4f7f\u7528 RADIUS \u4f3a\u670d\u5668\u4e0a SonicWall \u4f9b\u61c9\u5546\u7279\u5b9a\u7684\u5c6c\u6027"}, {"USE_FILTER_ID", "\u5728 RADIUS \u4f3a\u670d\u5668\u4e0a\u4f7f\u7528\u7be9\u9078\u5668 ID \u5c6c\u6027"}, {"ALLOW_GROUPS", "\u5141\u8a31\u7684 RADIUS \u7fa4\u7d44"}, {"USER_GROUP", "\u4f7f\u7528\u8005\u7fa4\u7d44"}, {"PAP", "PAP"}, {"CHAP", "CHAP"}, {"MSCHAP", "MSCHAP"}, {"MSCHAPV2", "MSCHAPv2"}, {"EMPTY_RADIUS_TIMEOUT", "RADIUS \u903e\u6642\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_RADIUS_TIMEOUT", "RADIUS \u903e\u6642\u61c9\u70ba\u6b63\u6578"}, {"EMPTY_MAX_RETRIES", "\u6700\u5927\u91cd\u8a66\u6b21\u6578\u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"POSITIVE_MAX_RETRIES", "\u6700\u5927\u91cd\u8a66\u6b21\u6578\u61c9\u70ba\u6b63\u6578"}, {"TEST_USER_NAME", "\u6e2c\u8a66\u4f7f\u7528\u8005\u540d\u7a31\u4e0d\u5f97\u7a7a\u767d\u3002"}, {"TEST_USER_PWD", "\u6e2c\u8a66\u4f7f\u7528\u8005\u5bc6\u78bc\u4e0d\u5f97\u7a7a\u767d\u3002"}, {"DOMAIN_NAME_MSG", "\u7db2\u57df\u7684\u540d\u7a31\u5c07\u88ab\u5efa\u7acb\u3002\u8a72\u540d\u7a31\u5c07\u5728\u767b\u5165\u9801\u9762\u7684\u7db2\u57df\u4e0b\u62c9\u6e05\u55ae\u4e2d\u53ef\u898b\u3002"}, {"DOMAIN_TYPE_MSG", "\u7db2\u57df\u7684\u985e\u578b\uff0c[\u672c\u6a5f] \u6216 [\u9060\u7aef]\u3002\u9700\u8981\u5f9e\u5916\u90e8\u5e73\u53f0\uff08\u5982 LDAP \u6216 AD \u4f3a\u670d\u5668\uff09\u9a57\u8b49\u4f7f\u7528\u8005\u7684\u7db2\u57df\u5c07\u9700\u8981\u5efa\u7acb\u70ba [\u9060\u7aef] \u985e\u578b\u7684\u7db2\u57df\u3002[\u672c\u6a5f] \u985e\u578b\u7684\u7db2\u57df\u5c07\u64c1\u6709 SGMS \u8cc7\u6599\u5eab\u5167\u5b58\u5728\u7684\u4f7f\u7528\u8005\u5e33\u6236\u548c\u9a57\u8b49\u8a73\u7d30\u8cc7\u6599\u3002\u900f\u904e\u5efa\u7acb [\u672c\u6a5f] \u985e\u578b\u7684\u7db2\u57df\uff0c\u60a8\u53ef\u4ee5\u5728 SGMS \u5167\u652f\u63f4\u591a\u500b\u7db2\u57df\u800c\u7121\u9700\u5916\u90e8\u9a57\u8b49\u4ecb\u9762\u3002"}, {"ADMIN_PASSWORD_MSG", "\u5efa\u7acb\u65b0\u7db2\u57df\u985e\u578b [\u672c\u6a5f] \u5f8c\uff0c\u9810\u8a2d\u60c5\u6cc1\u4e0b\u5c07\u5efa\u7acb\u8a72\u7db2\u57df\u7684 [\u7ba1\u7406\u54e1] \u4f7f\u7528\u8005\u3002\u60a8\u9700\u8981\u6307\u5b9a\u7ba1\u7406\u54e1\u4f7f\u7528\u8005\u7684\u5bc6\u78bc\u3002"}, {"ADMIN_USERID_MSG", "\u6307\u5b9a\u9700\u8981\u6210\u70ba\u8a72\u7db2\u57df\u7ba1\u7406\u54e1\u7684\u4f7f\u7528\u8005\u540d\u7a31\u3002\u6b64\u4f7f\u7528\u8005\u540d\u7a31\u61c9\u70ba\u76ee\u9304\u4f3a\u670d\u5668\u4e2d\u8207\u8a72\u7db2\u57df\u95dc\u806f\u7684\u6709\u6548\u4f7f\u7528\u8005\u540d\u7a31\u3002\u5982\u679c\u70ba\u6b64\u6b04\u4f4d\u6307\u5b9a\u540d\u7a31 [\u7ba1\u7406\u54e1]\uff0c\u5247\u4f7f\u7528\u8005 id \u70ba [\u7ba1\u7406\u54e1] \u7684\u4f7f\u7528\u8005\u61c9\u5728\u95dc\u806f\u7684\u76ee\u9304\u4e2d\u5b58\u5728\u4e26\u4e14\u61c9\u64c1\u6709\u7ba1\u7406\u6b0a\u9650\u3002\u4f8b\u5982\uff1ajdoe"}, {"HOST_NAME_MSG", "\u9060\u7aef\u9a57\u8b49\u4f3a\u670d\u5668\u7684\u4e3b\u6a5f\u540d\u7a31\u6216 IP \u4f4d\u5740\u3002\u4f8b\u5982\uff1a\t[mydc.example.com]\u3001[X.X.X.X]\uff08IP \u4f4d\u5740\uff09\u3001[company.com]\u3002\u5982\u679c\u9060\u7aef\u4f3a\u670d\u5668\u662f Windows Active Directory (AD) \u4f3a\u670d\u5668\u4e26\u4e14\u60a8\u6709\u591a\u500b\u7db2\u57df\u9700\u8981\u5f9e AD \u6a39\u7cfb\u4e0b\u9a57\u8b49\u4f7f\u7528\u8005\uff0c\u5247\u6307\u5b9a AD \u6a39\u7cfb\u7684\u5168\u57df\u76ee\u9304\u540d\u7a31\u6216 IP \u4f4d\u5740\u4f5c\u70ba\u4e3b\u6a5f\u540d\u7a31\u3002"}, {"AUTHENTICATION_PORT_MSG", "LDAP \u6216 AD \u4f3a\u670d\u5668\u4e0a\u7684\u9023\u63a5\u57e0\u865f\u78bc\uff0c\u53ef\u5728\u5176\u4e0a\u76e3\u807d\u9a57\u8b49\u8acb\u6c42\u3002\u5982\u679c\u662f LDAP/AD \u4f3a\u670d\u5668\uff0c\u5247\u9810\u8a2d\u503c\u70ba 389\u3002\u5982\u679c\u60a8\u6307\u5b9a\u4e86 AD \u6a39\u7cfb\u7684\u5168\u57df\u76ee\u9304\u540d\u7a31\u6216 IP \u4f4d\u5740\u4f5c\u70ba\u4e3b\u6a5f\u540d\u7a31\uff0c\u5247\u9084\u61c9\u6307\u5b9a\u76f8\u61c9\u7684\u9023\u63a5\u57e0\u865f\u78bc\u3002\u9810\u8a2d\u503c\u70ba 3268\u3002"}, {"HOST_TYPE_MSG", "\u8a72\u503c\u8868\u793a\u9060\u7aef\u9a57\u8b49\u4f3a\u670d\u5668\u7684\u985e\u578b\u662f LDAP \u4f3a\u670d\u5668\u3001Windows Active Directory \u9084\u662f RADIUS \u4f3a\u670d\u5668\u3002"}, {"ALIAS_MSG", "\u5982\u679c\u7db2\u57df\u6c92\u6709\u986f\u793a\uff0c\u53ef\u5728 GMS \u767b\u5165\u87a2\u5e55\u4e2d\u4f7f\u7528\u7db2\u57df\u540d\u7a31\u7e2e\u5beb\u767b\u5165\u3002\u4f8b\u5982\uff1a\u5225\u540d\\\\\u4f7f\u7528\u8005\u540d\u7a31\u3002\u5982\u679c\u7db2\u57df\u540d\u7a31\u7684\u9577\u5ea6\u5c0f\u65bc\u6216\u7b49\u65bc 16 \u500b\u5b57\u5143\uff0c\u5247\u5225\u540d\u81ea\u52d5\u586b\u5beb\u70ba\u7db2\u57df\u540d\u7a31\u3002"}, {"PROTOCOL_VERSION_MSG", "\u9019\u662f\u9060\u7aef LDAP/AD \u4f3a\u670d\u5668\u5728\u5176\u4e0a\u57f7\u884c\u7684 LDAP \u901a\u8a0a\u5354\u5b9a\u7248\u672c\u3002"}, {"BASE_DN_MSG", "\u57fa\u672c\u8b58\u5225\u540d\u7a31\u7528\u65bc\u5340\u5225\u76ee\u9304\u4e2d\u7684\u6839\u9805\u76ee\u8207\u5c07\u51fa\u73fe\u7684\u3001SGMS \u8d77\u59cb\u7684\u641c\u5c0b\u3002\u76ee\u9304\u7684\u57fa\u672c DN\uff08\u4f8b\u5982 example.com\uff09\u61c9\u70ba\u4ee5\u4e0b\u683c\u5f0f\u5beb\u5165\uff1a[dc=example,dc=com]\u3002\u59cb\u7d42\u9700\u8981\u6307\u5b9a\u6700\u9802\u7d1a\u7684\u7bc0\u9ede\u4f5c\u70ba\u76ee\u9304\u6a39\u4e2d\u7684\u57fa\u672c DN\uff0c\u8a72\u7bc0\u9ede\u4e4b\u4e0b\u662f\u60a8\u9810\u671f\u986f\u793a\u70ba\u53ef\u767b\u5165\u5230 SGMS \u7684\u6240\u6709\u4f7f\u7528\u8005\u3002"}, {"USE_SSL_MSG", "\u6307\u5b9a\u662f\u5426\u4f7f\u7528 SSL \u7d81\u5b9a\u5230\u9060\u7aef\u4f3a\u670d\u5668\u3002\u5f37\u70c8\u5efa\u8b70\u4f7f\u7528\u6b64\u9805\u76ee\u3002\u5c0d\u65bc\u6b64\u9805\u76ee\uff0c\u9060\u7aef\u4f3a\u670d\u5668\u7684 CA \u8b49\u66f8\u6216\u7c3d\u540d\u4f3a\u670d\u5668\u8b49\u66f8\u7684 CA \u6839\u8b49\u66f8\u5c07\u5728 SGMS \u7684\u91d1\u9470\u5eab\u4e2d\u986f\u793a\u70ba\u4fe1\u4efb\u7684 CA\u3002"}, {"SSL_PORT_MSG", "\u9060\u7aef\u4f3a\u670d\u5668\u5728\u5176\u4e0a\u76e3\u807d SSL \u7d81\u5b9a\u8acb\u6c42\u7684\u9023\u63a5\u57e0\u865f\u78bc\u3002\u5982\u679c\u662f LDAP/AD \u4f3a\u670d\u5668\uff0c\u5247\u9810\u8a2d\u503c\u70ba 636\u3002\u5982\u679c\u60a8\u6307\u5b9a\u4e86 AD \u6a39\u7cfb\u7684\u5168\u57df\u76ee\u9304\u540d\u7a31\u6216 IP \u4f4d\u5740\u4f5c\u70ba\u4e3b\u6a5f\u540d\u7a31\uff0c\u5247\u9084\u61c9\u6307\u5b9a\u76f8\u61c9\u7684 SSL \u9023\u63a5\u57e0\u865f\u78bc\u3002\u9810\u8a2d\u503c\u70ba 3269\u3002"}, {"ANONYMOUS_LOGIN_MSG", "\uff08\u4e0d\u5efa\u8b70\uff09\u3002\u6307\u5b9a SGMS \u662f\u5426\u61c9\u533f\u540d\u7d81\u5b9a\u5230\u9060\u7aef\u4f3a\u670d\u5668\u3002\u5c0d\u65bc\u6b64\u9805\u76ee\uff0c\u9060\u7aef LDAP/AD \u4f3a\u670d\u5668\u61c9\u5141\u8a31\u533f\u540d\u7d81\u5b9a\u3002\u533f\u540d\u7d81\u5b9a\u61c9\u50c5\u7576\u4e8b\u5148\u4e0d\u77e5\u9053\u670d\u52d9\u5e33\u6236\uff08\u76ee\u9304\u4e2d\u81f3\u5c11\u6709\u4e00\u500b\u6709\u6548\u7684\u4f7f\u7528\u8005\u5e33\u6236\uff09\u6642\u5617\u8a66\u3002\u5f37\u70c8\u5efa\u8b70\u4e0d\u4f7f\u7528\u6b64\u9805\u76ee\u3002"}, {"LOGIN_USER_DN_MSG", "\u8b58\u5225\u540d\u7a31\u7528\u65bc\u5728\u57f7\u884c\u7d81\u5b9a\u6642\u9a57\u8b49\u76ee\u9304\u4f3a\u670d\u5668\u3002\u6b64\u6b04\u4f4d\u7684\u503c\u61c9\u6307\u5b9a\u70ba DN\uff08\u8b58\u5225\u540d\u7a31\uff09\u3002\u4f8b\u5982\uff1a[uid=xyz, ou=People, dc=example, dc=com]\u3001[cn=jdoe, cn=users, dc=sv, dc=company, dc=com]"}, {"LOGIN_USER_PASSWORD_MSG", "\u767b\u5165\u4f7f\u7528\u8005 DN \u7684\u5bc6\u78bc\u3002"}, {"CONN_TIMEOUT_MSG", "\u8a72\u503c\uff08\u6beb\u79d2\u6578\uff09\u662f\u9023\u63a5\u903e\u6642\u671f\u9650\u3002\u7d93\u904e\u6b64\u6642\u9593\u9031\u671f\u5f8c\uff0c\u5982\u679c\u672a\u6210\u529f\uff0c\u9060\u7aef\u4f3a\u670d\u5668\u7684\u9023\u63a5\u5617\u8a66\u5c07\u653e\u68c4\u3002"}, {"LDAP_SCHEMA_MSG", "\u95dc\u806f LDAP/AD \u4f3a\u670d\u5668\u7684 LDAP \u6a21\u5f0f\u3002"}, {"OBJ_CLASS_MSG", "\u4f7f\u7528\u8005\u6240\u5c6c\u7684\u5176\u4e2d\u4e00\u500b\u6a19\u6e96\u7269\u4ef6\u985e\u5225\u7684\u540d\u7a31\u3002"}, {"LOGIN_NAME_ATTRIBUTE_MSG", "LDAP/AD \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u4f7f\u7528\u8005 id \u7684\u5c6c\u6027\u540d\u7a31\u3002\u9019\u662f LDAP \u4f3a\u670d\u5668\u4e2d\u7684\u5c6c\u6027\uff0c\u5176\u503c\u5c07\u88ab\u7528\u4f5c SGMS \u767b\u5165\u9801\u9762\u4e2d\u7684\u4f7f\u7528\u8005 id\u3002\u4f8b\u5982\uff1auid\u3001sAMAccountName \u7b49\u3002"}, {"FIRST_NAME_ATTRIBUTE_MSG", "LDAP \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u540d\u5b57\u7684\u5c6c\u6027\u540d\u7a31\u3002\u4f8b\u5982\uff1agivenName\u3002"}, {"LAST_NAME_ATTRIBUTE_MSG", "LDAP \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u59d3\u6c0f\u7684\u5c6c\u6027\u540d\u7a31\u3002\u4f8b\u5982\uff1asn\u3002"}, {"EMAIL_ATTRIBUTE_MSG", "LDAP \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u96fb\u5b50\u90f5\u4ef6 id \u7684\u5c6c\u6027\u540d\u7a31\u3002\u4f8b\u5982\uff1amail\u3002"}, {"TELEPHONE_ATTRIBUTE_MSG", "LDAP \u4f3a\u670d\u5668\u4e2d\u8868\u793a\u96fb\u8a71\u865f\u78bc\u7684\u5c6c\u6027\u540d\u7a31\u3002\u4f8b\u5982\uff1atelephoneNumber\u3002"}, {"TEST_PANE_MSG", "\u60a8\u53ef\u5728\u6b64\u8655\u6e2c\u8a66\u5728\u8a2d\u5b9a\u9762\u677f\u4e2d\u8f38\u5165\u7684\u9a57\u8b49\u4f3a\u670d\u5668 (LDAP/AD/RADIUS) \u8a2d\u5b9a\u3002"}, {"TEST_PANE_USER_MSG", "\u8f38\u5165\u60a8\u5c07\u5728 SGMS \u767b\u5165\u9801\u9762\u4e2d\u8f38\u5165\u7684\u6709\u6548\u4f7f\u7528\u8005\u540d\u7a31\u4ee5\u767b\u5165\u5230 GMS\u3002\u6b64\u4f7f\u7528\u8005\u540d\u7a31\u61c9\u6709\u6548\u4e26\u5728\u8a72\u7db2\u57df\u7684\u95dc\u806f\u76ee\u9304\u4e2d\u51fa\u73fe\u3002\u6b64\u5916\uff0c\u8f38\u5165\u76ee\u9304\u4e2d\u6b64\u4f7f\u7528\u8005\u540d\u7a31\u7684\u5bc6\u78bc\u3002"}, {"EMPTY_DIR_GROUP", "\u76ee\u9304\u7fa4\u7d44\u540d\u7a31\u4e0d\u80fd\u70ba\u7a7a\u767d\u3002"}, {"ALLOW_ONLY_DIR_GRP_MEMBERS_MSG", "\u6b64\u9078\u9805\u9078\u5b9a\u6642\u53ea\u5141\u8a31\u4f5c\u70ba\u6307\u5b9a Active Directory \u7fa4\u7d44\u6210\u54e1\u7684\u4f7f\u7528\u8005\u767b\u5165\u5230 GMS\u3002\u4f7f\u7528\u6b64\u9078\u9805\uff0c\u9084\u9700\u8981\u5728\u8a2d\u5b9a\u9762\u677f\u4e2d\u5c07\u4e3b\u6a5f\u985e\u578b\u9078\u64c7\u70ba [Active Directory]\u3002"}, {"DIR_GROUPS_MSG", "\u6307\u5b9a AD \u7fa4\u7d44\u540d\u7a31\uff0c\u5176\u6210\u54e1\u61c9\u5141\u8a31\u767b\u5165\u5230 GMS\u3002\u53ef\u4ee5\u6307\u5b9a\u4ee5\u5206\u865f\u5206\u9694\u7684\u591a\u500b AD \u7fa4\u7d44\u3002\u4f8b\u5982\uff1a[GMSUsers]\u3001[ADGroup1;AD group2;GMS Users;Group4]"}, {"RADIUS_HOST_NAME_MSG", "RADIUS \u9a57\u8b49\u4f3a\u670d\u5668\u7684\u4e3b\u6a5f\u540d\u7a31\u6216 IP \u4f4d\u5740\u3002\u4f8b\u5982\uff1a[myradius.example.com]\u3001[X.X.X.X]\uff08IP \u4f4d\u5740\uff09\u3001[company.com]\u3002"}, {"RADIUS_AUTH_PORT_MSG", "RADIUS \u4f3a\u670d\u5668\u4e0a\u7684\u9023\u63a5\u57e0\u865f\u78bc\uff0c\u53ef\u5728\u5176\u4e0a\u76e3\u807d\u9a57\u8b49\u8acb\u6c42\u3002\u9810\u8a2d\u503c\u70ba 1812\u3002"}, {"RADIUS_SHARED_SECRET_MSG", "\u5728 GMS \u548c RADIUS \u4f3a\u670d\u5668\u4e4b\u9593\u5171\u7528\u7684\u6a5f\u5bc6\u3002\u9019\u662f\u4e00\u500b\u53ea\u6709 RADIUS \u4f3a\u670d\u5668\u548c RADIUS \u7528\u6236\u7aef\u77e5\u9053\u7684\u5b57\u4e32\u503c\u3002"}, {"RADIUS_AUTH_PROTOCOL_MSG", "\u5c07\u7528\u65bc\u9a57\u8b49\u7684 RADIUS \u9a57\u8b49\u5354\u5b9a\u3002"}, {"RADIUS_TIMEOUT_MSG", "\u8a72\u503c\uff08\u79d2\u6578\uff09\u8868\u793a\u9023\u63a5\u903e\u6642\u671f\u9650\u3002\u7d93\u904e\u6b64\u6642\u9593\u9031\u671f\u5f8c\uff0c\u5982\u679c\u672a\u6210\u529f\uff0cRADIUS \u4f3a\u670d\u5668\u7684\u9023\u63a5\u5617\u8a66\u5c07\u653e\u68c4\u3002"}, {"RADIUS_MAX_RETRIES_MSG", "\u8a72\u503c\u8868\u793a RADIUS \u4f3a\u670d\u5668\u61c9\u5617\u8a66\u7684\u9a57\u8b49\u6b21\u6578\u3002\u7d93\u904e\u6307\u5b9a\u7684\u5617\u8a66\u6b21\u6578\u5f8c\uff0c\u5982\u679c\u672a\u6210\u529f\uff0c\u9060\u7aef\u4f3a\u670d\u5668\u7684\u9a57\u8b49\u5617\u8a66\u5c07\u653e\u68c4\u3002"}, {"RADIUS_ONLY_GROUP_MSG", "\u6b64\u9078\u9805\u9078\u5b9a\u6642\u53ea\u5141\u8a31\u4f5c\u70ba\u6307\u5b9a RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u6210\u54e1\u7684\u4f7f\u7528\u8005\u767b\u5165\u5230 GMS\u3002"}, {"RADIUS_USE_FILTER_MSG", "\u6b64\u9078\u9805\u9078\u5b9a\u6642\u53ea\u5141\u8a31\u5c07\u7528\u4f5c RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u8b58\u5225\u78bc\u7684 RADIUS \u5c6c\u6027\u300c\u7be9\u9078\u5668 ID\u300d\u7684\u503c\u3002\u8981\u4f7f\u7528\u6b64\u9078\u9805\uff0c\u61c9\u6b63\u78ba\u8a2d\u5b9a RADIUS \u4f3a\u670d\u5668\u4ee5\u50b3\u56de\u6b64\u5c6c\u6027-\u503c\u5c0d\u4ee5\u53ca\u5f9e RADIUS \u4f3a\u670d\u5668\u9a57\u8b49\u7684\u6bcf\u500b\u4f7f\u7528\u8005 id \u7528\u65bc\u767b\u5165\u5230 GMS\u3002"}, {"RADIUS_USE_SW_MSG", "\u9078\u64c7\u6b64\u9078\u9805\u5f8c\uff0c\u6703\u5c07 SonicWall \u4f9b\u61c9\u5546\u7279\u5b9a\u5c6c\u6027 [SonicWall-User-Group \u548c SonicWall-User-Groups] \u7684\u503c\u7528\u4f5c RADIUS \u4f7f\u7528\u8005\u7d44\u8b58\u5225\u9805\u3002\u70ba\u4e86\u80fd\u5920\u4f7f\u7528\u6b64\u9078\u9805\uff0c\u61c9\u6b63\u78ba\u8a2d\u5b9a RADIUS \u4f3a\u670d\u5668\u4ee5\u50b3\u56de SonicWall \u4f9b\u61c9\u5546\u7279\u5b9a\u5c6c\u6027\u503c\u5c0d\u4ee5\u53ca\u5f9e RADIUS \u4f3a\u670d\u5668\u8a8d\u8b49\u7684\u3001\u7528\u65bc\u767b\u5165 GMS \u7684\u4f7f\u7528\u8005 ID\u3002"}, {"RADIUS_ALLOW_GROUPS_MSG", "\u6307\u5b9a RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u540d\u7a31\uff0c\u5176\u6210\u54e1\u61c9\u5141\u8a31\u767b\u5165\u5230 GMS\u3002\u4f8b\u5982\uff0c[GMSUsers]\u3002\u4ee5\u5206\u865f\u5206\u9694\u7684\u5b57\u4e32\u5f62\u5f0f\u53ef\u6307\u5b9a\u591a\u500b RADIUS \u4f7f\u7528\u8005\u7fa4\u7d44\u3002\u4f8b\u5982\uff1a[RadGroup1;Rad group2;GMS Users;Group4]\u3002"}, {"ADD_AUTH_SERVER_MSG", "\u5982\u679c\u6838\u53d6\uff0c\u65b0\u589e\u7db2\u57df\u6642\u5141\u8a31\u65b0\u589e\u7684\u9a57\u8b49\u4f3a\u670d\u5668\u8a2d\u5b9a\u3002"}, {"PAGE_LABEL", "\u9801\u9762"}, {"MANAGE_PAGE", "\u7ba1\u7406\u9801\u9762"}, {"ADD_COMPONENT", "\u65b0\u589e\u5143\u4ef6"}, {"PAGE_MANAGER", "\u9801\u9762\u7ba1\u7406\u54e1"}, {"ADD_NEW_PAGE", "\u65b0\u589e\u9801\u9762"}, {"DEFAULT_PAGE", "\u9810\u8a2d\u9801\u9762"}, {"PAGE_DETAILS", "\u9801\u9762\u8a73\u7d30\u8cc7\u6599"}, {"PAGE_TITLE", "\u9801\u9762\u6a19\u984c"}, {"COMPONENT_TITLE", "\u5143\u4ef6\u6a19\u984c"}, {"PAGE_LAYOUT", "\u9801\u9762\u7248\u9762\u914d\u7f6e"}, {"ONE_COLUMN_LAYOUT", "1 \u6b04 (100)"}, {"TWO_COLUMN_LAYOUT", "2 \u6b04 (50:50)"}, {"THREE_COLUMN_LAYOUT", "3 \u6b04 (30:40:30)"}, {"FOUR_COLUMN_LAYOUT", "4 \u6b04 (25:25:25:25)"}, {"ADD", "\u65b0\u589e"}, {"EDIT", "\u7de8\u8f2f"}, {"DELETE", "\u522a\u9664"}, {"ADD_COMPONENT_MANAGER", "\u65b0\u589e\u5143\u4ef6\u7ba1\u7406\u54e1"}, {"TYPE", "\u985e\u578b"}, {"RSS_FEED_DETAILS", "RSS \u6458\u8981\u8a73\u7d30\u8cc7\u6599"}, {"RSS_FEEDS", "RSS \u6458\u8981"}, {"TITLE", "\u6a19\u984c"}, {"ITEMS", "\u986f\u793a\u7684\u9805\u76ee\uff08\u6700\u5927\u503c\uff09"}, {"REFRESH_INTERVAL", "\u91cd\u65b0\u6574\u7406\u9593\u9694"}, {"REFRESH_INTERVAL_MINUTE", "\u5206\u9418\u6578"}, {"EVENT_ALERT_DETAILS", "\u4e8b\u4ef6\u8b66\u793a\u8a73\u7d30\u8cc7\u6599"}, {"ALERT_TYPES", "\u8b66\u793a\u985e\u578b"}, {"REFRESH_INTERVAL_HOUR", "\u5c0f\u6642\u6578"}, {"ALERT_SHOW_TIME_HOURS", "\u986f\u793a\u6700\u8fd1\u4e00\u6bb5\u6642\u9593\u5167\u89f8\u767c\u7684\u8b66\u793a"}, {"APPLICATION_WIDGET_DETAILS", "\u61c9\u7528\u7a0b\u5f0f Widget \u8a73\u7d30\u8cc7\u6599"}, {"WIDGETS", "Widget"}, {"RSS_FEED_TYPE", "RSS \u6458\u8981"}, {"EVENT_ALERT_TYPE", "\u4e8b\u4ef6\u8b66\u793a"}, {"APPLICATION_WIDGET_TYPE", "\u61c9\u7528\u7a0b\u5f0f Widget"}, {"CUSTOM_RSS_FEED", "\u81ea\u8a02 RSS \u6458\u8981"}, {"CUSTOM_RSS_URL", "\u81ea\u8a02 RSS URL"}, {"END_EDIT", "\u7d50\u675f\u7de8\u8f2f"}, {"RSS_URL", "RSS URL"}, {"SAVE", "\u5132\u5b58"}, {"DEFAULT_PAGE", "\u9810\u8a2d\u9801\u9762"}, {"SAVE_LAYOUT_FAIL_MSG", "\u5132\u5b58\u7248\u9762\u914d\u7f6e\u5931\u6557"}, {"SAVE_DASHBOARD_CONTROL_BAR_FAIL_MSG", "\u5132\u5b58\u63a7\u5236\u5217\u72c0\u614b\u5931\u6557"}, {"ADD_COMPONENT_FAIL_MSG", "\u65b0\u589e\u5143\u4ef6\u5931\u6557"}, {"DELETE_COMPONENT_FAIL_MSG", "\u522a\u9664\u5143\u4ef6\u5931\u6557"}, {"PAGE_ACTION_FAIL_MSG", "\u9801\u9762\u64cd\u4f5c\u5931\u6557"}, {"RSS_FEED_FAIL_MSG", "RSS \u6458\u8981\u64f7\u53d6\u5931\u6557\u3002"}, {"EVENT_ALERT_FAIL_MSG", "GEM \u8b66\u793a\u64f7\u53d6\u5931\u6557\u3002"}, {"APPLICATION_WIDGET_FAIL_MSG", "\u61c9\u7528\u7a0b\u5f0f Widget \u64f7\u53d6\u5931\u6557\u3002"}, {"NO_DASHBOARD_ALERT_CONFIGURE_MSG", "\u6c92\u6709\u70ba\u4ee5\u4e0b\u76ee\u6a19\u8a2d\u5b9a\u7684\u8b66\u793a\uff1aDashboard\u3002"}, {"NO_ALERT_FOUND_MSG", "\u672a\u627e\u5230\u8981\u986f\u793a\u7684\u8b66\u793a\u3002"}, {"CHANGE_DEFAULT_PAGE_MSG", "\u5c07\u6b64\u9801\u9762\u8a2d\u70ba\u9810\u8a2d\u503c\u5c07\u8b8a\u66f4\u4efb\u4f55\u4e4b\u524d\u7684\u9810\u8a2d\u9801\u9762\u8a2d\u5b9a\u3002\u662f\u5426\u78ba\u5b9a\u8981\u7e7c\u7e8c\uff1f"}, {"DELETE_DEFAULT_PAGE_MSG", "\u7121\u6cd5\u522a\u9664\u9810\u8a2d\u9801\u9762\u3002\u9078\u64c7\u4efb\u4f55\u5176\u4ed6\u9801\u9762\u4f5c\u70ba\u9810\u8a2d\u9801\u9762\uff0c\u7136\u5f8c\u518d\u522a\u9664\u6b64\u9801\u9762\u3002"}, {"DELETE_PAGE_AND_COMPONENT_MSG", "\u522a\u9664\u9801\u9762\u5c07\u56e0\u800c\u522a\u9664\u8a72\u9801\u9762\u4e2d\u7684\u6240\u6709\u5143\u4ef6\u3002\u662f\u5426\u78ba\u5b9a\u8981\u522a\u9664\u6b64\u9801\u9762\uff1f"}, {"VALID_URL_MSG", "\u8acb\u8f38\u5165\u4ee5\u4e0b\u683c\u5f0f\u7684 URL\uff1ahttp://www.yourdomain.com"}, {"CONFIRM_DELETE_COMPONENT_MSG", "\u662f\u5426\u78ba\u5b9a\u8981\u522a\u9664\u6b64\u5143\u4ef6\uff1f"}, {"NO_COMPONENT_MSG", "\u76ee\u524d\u6c92\u6709\u5728\u9801\u9762\u4e2d\u65b0\u589e\u4efb\u4f55\u5143\u4ef6\u3002"}, {"LOAD_DATA_MSG", "\u6b63\u5728\u8f09\u5165\u8cc7\u6599..."}, {"COMPONENT_EXISTS_MSG", "\u5143\u4ef6\u5df2\u7d93\u5b58\u5728\u3002\u73fe\u6709\u5143\u4ef6\u8a73\u7d30\u8cc7\u6599\uff1a "}, {"REFRESH_INTERVAL_RANGE", "\u91cd\u65b0\u6574\u7406\u9593\u9694\u8d85\u51fa\u7bc4\u570d\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u503c\u3002"}, {"ITEMS_RANGE", "\u9805\u76ee\u6578\u8d85\u51fa\u7bc4\u570d\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u6578\u5b57\u3002"}, {"ALERT_SHOWTIME_RANGE", "\u8b66\u793a\u986f\u793a\u6642\u9593\u8d85\u51fa\u7bc4\u570d\u3002\u8acb\u586b\u5beb\u4e00\u500b\u6709\u6548\u7684\u503c\u3002"}, {"NO_COMPONENT_SELECTED_ERR", "\uff1a\u5c07\u5143\u4ef6\u65b0\u589e\u5230\u9801\u9762\u4e4b\u524d\uff0c\u8acb\u9078\u64c7\u4e00\u500b\u5143\u4ef6\u3002"}, {"ADDCOMPONENT_ERR_QUOTES", "\u5143\u4ef6\u6a19\u984c\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a\u55ae\u5f15\u865f\u3001\u96d9\u5f15\u865f\u3001\u5192\u865f\u3001\u767e\u5206\u6bd4\u3001\u4e95\u865f\u3001\u554f\u865f\u548c\u76f4\u7acb\u7dda\u7b26\u865f\u3002"}, {"ADDPAGE_ERR_QUOTES", "\u9801\u9762\u6a19\u984c\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a\u55ae\u5f15\u865f\u3001\u96d9\u5f15\u865f\u3001\u5192\u865f\u3001\u767e\u5206\u6bd4\u3001\u4e95\u865f\u3001\u554f\u865f\u548c\u76f4\u7acb\u7dda\u7b26\u865f\u3002"}, {"TIME_PERIOD", "\u6642\u9593\u9031\u671f"}, {"DELETE_PAGE_AND_WIDGETS_MSG", "\u522a\u9664\u9801\u9762\u5c07\u56e0\u800c\u522a\u9664\u8a72\u9801\u9762\u4e2d\u7684\u6240\u6709 Widget\u3002\u662f\u5426\u78ba\u5b9a\u8981\u522a\u9664\u6b64\u9801\u9762\uff1f"}, {"ADDWIDGET_ERR_QUOTES", " Widget \u6a19\u984c\u4e0d\u80fd\u5305\u542b\u4ee5\u4e0b\u5b57\u5143\uff1a\u55ae\u5f15\u865f\u3001\u96d9\u5f15\u865f\u3001\u5192\u865f\u3001\u767e\u5206\u6bd4\u3001\u4e95\u865f\u3001\u554f\u865f\u548c\u76f4\u7acb\u7dda\u7b26\u865f\u3002"}, {"TIME_PERIOD", "\u6642\u9593\u9031\u671f"}, {"COPY_WIDGET_VALIDATION_MSG", "\u8acb\u9078\u64c7\u8981\u8907\u88fd\u7684\u9801\u9762\u3002"}, {"COPY_WIDGET_HEADER", "\u8907\u88fd Widget"}, {"NO_APPLICABLE_SEARCH_KEYWORD_FOR_WIDGET", "\u641c\u5c0b\u5b57\u4e32\u4e2d\u6c92\u6709\u9069\u7528\u65bc\u6b64 Widget \u7684\u95dc\u9375\u5b57"}, {"IGNORED_INVALID_SEARCH_FILTER", "\u5ffd\u7565\u7121\u6548\u7684\u641c\u5c0b\u7be9\u9078\u5668\u3002"}, {"GMSVPINSTANCE_WITH_UNKNOWN_GEOLOCATION", "\u4e00\u500b\u6216\u591a\u500b GMSVP \u57f7\u884c\u500b\u9ad4\u6c92\u6709\u5730\u7406\u4f4d\u7f6e\u3002"}, {"NDA_NG_REPORTING_WIDGET_MSG", "\u5831\u544a\u7121\u6cd5\u7522\u751f."}, {"ALERTS_WIDGET_COL_ALERT_MESSAGE", "\u8b66\u5831\u8a0a\u606f"}, {"ALERTS_WIDGET_COL_LAST_REPORTED_TIME", "\u6700\u5f8c\u5831\u544a\u6642\u9593"}, {"ALERTS_WIDGET_COL_ALERT_TYPE", "\u8b66\u5831\u985e\u578b"}, {"LOGS_WIDGET_COL_MESSAGE", "\u8a0a\u606f"}, {"LOGS_WIDGET_COL_DATE", "\u65e5\u671f"}, {"LOGS_WIDGET_COL_SONICWALL", "SonicWall"}, {"SESSIONS_WIDGET_COL_USER_DETAILS", "\u7528\u6236\u8a73\u60c5"}, {"SESSIONS_WIDGET_COL_LAST_ACCESS_TIME", "\u4e0a\u6b21\u8a2a\u554f\u6642\u9593"}, {"TASKS_WIDGET_COL_SONICWALL", "SonicWall"}, {"TASKS_WIDGET_COL_DESCRIPTION", "\u8aaa\u660e"}, {"TASKS_WIDGET_COL_SCHEDULED_TIME", "\u9810\u5b9a\u6642\u9593\uff08\u7576\u5730\u6642\u9593\uff09"}, {"DSB_CONFIRM_DELETE_WIDGET", "\u6b64\u64cd\u4f5c\u5c07\u522a\u9664\u8a72 Widget\uff0c\u662f\u5426\u7e7c\u7e8c\uff1f"}, {"DSB_SEARCH_DIALOG_MESG", "\u9019\u4e9b Widget \u8207\u4ee5\u4e0b\u9805\u76ee\u7684\u7d50\u679c\u76f8\u7b26 "}, {"DSB_SEARCH_DIALOG_HEADER", "\u5176\u4ed6\u641c\u5c0b\u7d50\u679c"}, {"DSB_CLEARHISTORY_MESG", "\u662f\u5426\u6e05\u9664\u6240\u6709\u641c\u5c0b\u6b77\u53f2\u8a18\u9304\uff1f"}, {"DSB_CLEARHISTORY_HDR", "\u641c\u5c0b\u6b77\u53f2\u8a18\u9304"}, {"DSB_ADDNEW_WIDGET_LBL", "\u65b0\u589e Widget "}, {"DSB_GENSTTINGS_HDR", "\u4e00\u822c\u8a2d\u5b9a "}, {"DSB_ASSOCPROD_HDR", "\u76f8\u95dc\u7522\u54c1 "}, {"DSB_SUBALERTS_HDR", "\u5305\u62ec\u7684\u5b50\u8b66\u793a "}, {"DSB_WIDGETTITLE_LBL", "\u6a19\u984c\uff1a "}, {"DSB_NOFITEMS_LBL", "\u9805\u76ee\u6578\uff1a "}, {"DSB_REFINT_LBL", "\u91cd\u65b0\u6574\u7406\u9593\u9694\uff1a "}, {"DSB_ALERTSTRIGGERED_LBL", "\u986f\u793a\u6700\u8fd1\u4e00\u6bb5\u6642\u9593\u5167\u89f8\u767c\u7684\u8b66\u793a\uff1a "}, {"DSB_NEWSUBALERTS_LBL", "\u65b0\u7684\u5b50\u8b66\u793a\uff1a "}, {"DSB_CUSTRSSURL_LBL", "\u81ea\u8a02 RSS URL\uff1a "}, {"DSB_WRAPTEXT_LBL", "\u81ea\u52d5\u63db\u5217\uff1a "}, {"DSB_ADDPAGE_HDR", "\u65b0\u589e\u9801\u9762 "}, {"DSB_ADDPAGE_LBL", "\u9801\u9762\u6a19\u984c\uff1a "}, {"DSB_MAPLOCATIONDLG_HDR", "\u65b0\u589e/\u7de8\u8f2f\u4f4d\u7f6e"}, {"DSB_ADDRESS_LBL", "\u5730\u5740\uff1a "}, {"DSB_GEOLOCATION_LBL", "\u5730\u7406\u4f4d\u7f6e\uff1a "}, {"DSB_DELPAGE_LBL", "\u7cfb\u7d71\u7522\u751f\u7684\u9801\u9762\uff0c\u7121\u6cd5\u522a\u9664\u3002"}, {"DSB_DELPAGE_HDR", "\u662f\u5426\u522a\u9664\u9801\u9762\uff1f"}, {"DSB_DELPAGECONFIRM_MSG", "\u662f\u5426\u8981\u522a\u9664\u8a72\u9801\u9762\uff1f"}, {"CZ_YES", "\u662f"}, {"CZ_CERT_ISSUER", "\u8b49\u66f8\u9812\u767c\u8005"}, {"CZ_SUB_DN", "\u4f7f\u7528\u8005\u8b58\u5225\u540d\u7a31"}, {"CZ_CERT_SN", "\u8b49\u66f8\u5e8f\u865f"}, {"CZ_VALID_FROM", "\u6709\u6548\u671f\u81ea"}, {"CZ_EXPIRES_ON", "\u5230\u671f\u65e5"}, {"CZ_STATUS", "\u72c0\u614b"}, {"CZ_REQ_GEN", "\u7522\u751f\u7684\u8acb\u6c42"}, {"CZ_SUB_KEY_ID", "\u4f7f\u7528\u8005\u91d1\u9470\u8b58\u5225\u78bc"}, {"CZ_CRL_STATUS", "CRL \u72c0\u614b"}, {"CZ_CRL_EXPIRES_ON", "CRL \u5230\u671f\u65e5"}, {"CZ_CRL_REQUIRED", "\u9700\u8981 CRL"}, {"CZ_CRL_AUTO_URL", "CRL \u81ea\u52d5\u66f4\u65b0 URL"}, {"CZ_HEADER", "\u8b49\u66f8\u548c\u8b49\u66f8\u8acb\u6c42"}, {"CZ_NAME", "\u540d\u7a31"}, {"CZ_TYPE", "\u985e\u578b"}, {"CZ_VALIDATED", "\u5df2\u9a57\u8b49"}, {"CZ_EXPIRES", "\u5230\u671f"}, {"CZ_DETAILS", "\u8a73\u7d30\u8cc7\u6599"}, {"CZ_CONFIGURE", "\u8a2d\u5b9a"}, {"CZ_DELETE_CERT", "\u522a\u9664\u6b64\u8b49\u66f8"}, {"CZ_CANT_DELETE_CERT", "\u9019\u662f\u4e00\u500b\u7121\u6cd5\u522a\u9664\u7684\u5167\u5efa\u8b49\u66f8"}, {"CZ_EMAIL_CERT", "\u4f7f\u7528\u96fb\u5b50\u90f5\u4ef6\u50b3\u9001\u6b64\u8b49\u66f8"}, {"CZ_CANT_EMAIL_CERT", "\u53ea\u6709\u532f\u5165\u7684\u672c\u6a5f\u8b49\u66f8\u548c\u7c3d\u540d\u8acb\u6c42\u624d\u80fd\u4f7f\u7528\u96fb\u5b50\u90f5\u4ef6\u50b3\u9001"}, {"CZ_IMPORT_CERT_CRL", "\u532f\u5165\u8b49\u66f8\u64a4\u92b7\u6e05\u55ae"}, {"CZ_UPLOAD_SIGNED_CERT", "\u4e0a\u8f09\u7c3d\u540d\u7684\u8b49\u66f8"}, {"CZ_CERT_SEARCH", "\u8b49\u66f8\u641c\u5c0b"}, {"CZ_CERT_SELECTED", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u9a57\u8b49\u8a72\u8b49\u66f8"}, {"CZ_SURE", "\u662f\u5426\u78ba\u5b9a\u8981\u7e7c\u7e8c"}, {"CZ_CERTS_SELECTED", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u4ee5\u4e0b\u8b49\u66f8\u3002"}, {"CZ_PLZ_SELECT", "\u8acb\u9078\u64c7\u8981\u522a\u9664\u7684\u8b49\u66f8\u3002"}, {"CZ_VIEW_STYLE", "\u8b49\u66f8\u6aa2\u8996\u6a23\u5f0f"}, {"CZ_ALL_CERTS", "\u6240\u6709\u8b49\u66f8"}, {"CZ_IMPORT_CERTS", "\u532f\u5165\u7684\u8b49\u66f8\u548c\u8acb\u6c42"}, {"CZ_BUILTIN_CERTS", "\u5167\u5efa\u8b49\u66f8"}, {"CZ_INCLUDE_EXPIRED_CERTS", "\u5305\u62ec\u904e\u671f\u7684\u5167\u5efa\u8b49\u66f8"}, {"CZ_IMPORT", "\u532f\u5165..."}, {"CZ_NEW_REQ", "\u65b0\u7c3d\u540d\u8acb\u6c42..."}, {"CZ_DEL_CERTS", "\u522a\u9664\u8b49\u66f8"}, {"CZ_REQUIRE_CERT", "\u532f\u5165\u9700\u8981\u8b49\u66f8\u540d\u7a31\u3002"}, {"CZ_IMPORT_REQUIRE_FILE", "\u532f\u5165\u9700\u8981\u8b49\u66f8\u6a94\u6848\u3002"}, {"CZ_NO_DOT", "\u8b49\u66f8\u540d\u7a31\u7121\u6548\u3002\u8a72\u540d\u7a31\u4e2d\u4e0d\u5141\u8a31\u4f7f\u7528\u4efb\u4f55\u300c.\u300d\u3002"}, {"CZ_IMPORT_REQUIRE_CMP", "\u532f\u5165\u9700\u8981\u8b49\u66f8\u7ba1\u7406\u5bc6\u78bc\u3002"}, {"CZ_IMPORT_CERT", "\u532f\u5165\u8b49\u66f8"}, {"CZ_IMPORT_LOCAL", "\u5f9e PKCS#12\uff08.p12 \u6216 .pfx\uff09\u7de8\u78bc\u6a94\u6848\u532f\u5165\u672c\u6a5f\u6700\u7d42\u4f7f\u7528\u8005\u8b49\u66f8\u53ca\u79c1\u5bc6\u91d1\u9470"}, {"CZ_IMPORT_CA", "\u5f9e PKCS#7 (.p7b)\u3001PEM (.pem) \u6216 DER\uff08.der \u6216 .cer\uff09\u7de8\u78bc\u6a94\u6848\u532f\u5165 CA \u8b49\u66f8"}, {"CZ_CERT_NAME", "\u8b49\u66f8\u540d\u7a31"}, {"CZ_CMP", "\u8b49\u66f8\u7ba1\u7406\u5bc6\u78bc"}, {"CZ_SEL_FILE", "\u8acb\u9078\u64c7\u8981\u532f\u5165\u7684\u6a94\u6848"}, {"CZ_SPECIFY_FILE", "\u8acb\u6307\u5b9a\u8981\u532f\u5165\u7684\u6a94\u6848"}, {"CZ_UPLOAD_CERT", "\u4e0a\u8f09\u8b49\u66f8"}, {"CZ_UPLOAD_SIGN_CERT", "\u4e0a\u8f09\u7c3d\u540d\u8acb\u6c42\u7684\u5df2\u7c3d\u540d\u8b49\u66f8"}, {"CZ_SEL_UPLOAD_FILE", "\u8acb\u9078\u64c7\u8981\u4e0a\u8f09\u7684\u6a94\u6848"}, {"CZ_FILE_FORMAT", "\u6a94\u6848\u61c9\u70ba PEM (.pem) \u6216 DER\uff08.der \u6216 .cer\uff09\u7de8\u78bc"}, {"CZ_EXPORT_CERT", "\u532f\u51fa\u8b49\u66f8"}, {"CZ_EXPORT_CERT_REQ", "\u532f\u51fa\u8b49\u66f8\u8acb\u6c42"}, {"CZ_CERT_EMAIL_CONTENT", "\u5df2\u7522\u751f PKCS#10 \u8a8d\u8b49\u8acb\u6c42\u4e26\u53ef\u7528\u65bc\u50b3\u9001\u96fb\u5b50\u90f5\u4ef6\u3002\u8acb\u5c07\u6b64\u6a94\u6848\u5132\u5b58\u5230\u672c\u6a5f\u78c1\u789f\u4e0a\uff0c\u7528\u65bc\u63d0\u4ea4\u81f3\u8a3b\u518a\u6216\u8b49\u66f8\u9812\u767c\u6a5f\u69cb\u3002\u8a72\u6a94\u6848\u5c07\u4ee5 PEM \u8b49\u66f8\u8acb\u6c42\u683c\u5f0f\u5132\u5b58\uff0c\u9810\u8a2d\u60c5\u6cc1\u4e0b\u4f5c\u70ba"}, {"CZ_CHANGE_FILE_NAME", "\uff08\u53ef\u5728\u4e0b\u8f09\u6642\u6839\u64da\u9700\u8981\u8b8a\u66f4\u6a94\u6848\u540d\u7a31\uff09\u3002"}, {"CZ_SPECIFY_URL", "\u8acb\u6307\u5b9a\u4e00\u500b CRL URL\u3002"}, {"CZ_SPECIFY_CRL_FILE", "\u8acb\u6307\u5b9a\u8981\u532f\u5165\u7684 CRL \u6a94\u6848"}, {"CZ_INVALID_FILE", "\u9078\u5b9a\u7684\u6a94\u6848\u683c\u5f0f\u7121\u6548\u3002"}, {"CZ_SPECIFY_VALID_LC", "\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u672c\u6a5f\u8b49\u66f8\u6a94\u6848\u3002"}, {"CZ_SPECIFY_VALID_CA", "\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684 CA \u8b49\u66f8\u6a94\u6848\u3002"}, {"CZ_SPECIFY_VALID_CRL", "\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684 CRL \u6a94\u6848\u3002"}, {"CZ_SPECIFY_VALID_SIGNED", "\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u7c3d\u540d\u8b49\u66f8\u6a94\u6848\u3002"}, {"CZ_IMPORT_CRL", "\u532f\u5165 CRL"}, {"CZ_IMPORT_CRL_FULL", "\u532f\u5165\u8b49\u66f8\u64a4\u92b7\u6e05\u55ae"}, {"CZ_IMPORT_CRL_FILE", "\u76f4\u63a5\u5f9e PEM (.pem) \u6216 DER\uff08.der \u6216 .crl\uff09\u7de8\u78bc\u6a94\u6848\u532f\u5165 CRL"}, {"CZ_SEL_CRL_FILE", "\u9078\u64c7\u8981\u532f\u5165\u7684 CRL \u6a94\u6848"}, {"CZ_AUTO_IMPORT_CRL", "\u900f\u904e HTTP \u5b9a\u671f\u81ea\u52d5\u532f\u5165 CRL"}, {"CZ_CRL_LOC", "\u8f38\u5165 CRL \u7684\u4f4d\u7f6e (URL)"}, {"CZ_INVALIDATE_CERTS", "\u5982\u679c CRL \u532f\u5165\u6216\u8655\u7406\u5931\u6557\uff0c\u5247\u8b49\u66f8\u548c\u5b89\u5168\u95dc\u806f\u5931\u6548"}, {"CZ_CMP_REQUIRE", "\u9700\u8981\u8b49\u66f8\u7ba1\u7406\u5bc6\u78bc\u624d\u80fd\u532f\u51fa\u8b49\u66f8"}, {"CZ_CERT_NAME_REQUIRE", "PKCS10 \u7522\u751f\u9700\u8981\u8b49\u66f8\u540d\u7a31\u3002"}, {"CZ_CERT_NAME_IN_USE", "\u8b49\u66f8\u540d\u7a31\u5df2\u7d93\u4f7f\u7528\u3002\u8acb\u9078\u64c7\u53e6\u4e00\u540d\u7a31\u3002"}, {"CZ_SUB_DN_REQUIRE", "PKCS10 \u7522\u751f\u81f3\u5c11\u9700\u8981\u4e00\u500b\u4f7f\u7528\u8005\u540d\u7a31\u5c6c\u6027\u3002"}, {"CZ_CN_TWO_CHARS", "\u570b\u5bb6\u6216\u5730\u5340\u540d\u7a31\u61c9\u70ba\u5169\u500b\u5b57\u5143"}, {"CZ_DOMAIN_INVALID", "\u4f7f\u7528\u8005\u5099\u7528\u540d\u7a31\u4e2d\u7684\u7db2\u57df\u540d\u7a31\u7121\u6548\u3002"}, {"CZ_IP_INVALID", "\u4f7f\u7528\u8005\u5099\u7528\u540d\u7a31\u7684 IP \u4f4d\u5740\u7121\u6548\u3002"}, {"CZ_EMAIL_INVALID", "\u4f7f\u7528\u8005\u5099\u7528\u540d\u7a31\u4e2d\u7684\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u7121\u6548\u3002"}, {"CZ_CERT_REQ", "\u8b49\u66f8\u7c3d\u540d\u8acb\u6c42"}, {"CZ_GEN_CERT_REQ", "\u7522\u751f\u8b49\u66f8\u7c3d\u540d\u8acb\u6c42"}, {"CZ_CERT_ALIAS", "\u8b49\u66f8\u5225\u540d"}, {"CZ_COUNTRY", "\u570b\u5bb6\u6216\u5730\u5340"}, {"CZ_STATE", "\u7701/\u81ea\u6cbb\u5340"}, {"CZ_LOC", "\u7e23\u5e02\u6216\u7e23"}, {"CZ_COMPANY", "\u516c\u53f8\u6216\u7d44\u7e54"}, {"CZ_LOC_CITY", "\u7e23\u5e02\u3001\u5e02\u6216\u7e23"}, {"CZ_DEPT", "\u90e8\u9580"}, {"CZ_GROUP", "\u7fa4\u7d44"}, {"CZ_TEAM", "\u5c0f\u7d44"}, {"CZ_CNAME", "\u516c\u7528\u540d\u7a31"}, {"CZ_SN", "\u5e8f\u865f"}, {"CZ_EMAIL", "\u96fb\u5b50\u90f5\u4ef6\u5730\u5740"}, {"CZ_SUB_ALT_NAME", "\u4f7f\u7528\u8005\u5099\u7528\u540d\u7a31\uff08\u53ef\u9078\uff09"}, {"CZ_DOMAIN_NAME", "\u7db2\u57df\u540d\u7a31"}, {"CZ_IPV4", "IPv4 \u4f4d\u5740"}, {"CZ_SUB_KEY_TYPE", "\u4f7f\u7528\u8005\u91d1\u9470\u985e\u578b"}, {"CZ_SIG_ALGORITHM", "\u7c3d\u7ae0\u6f14\u7b97\u6cd5"}, {"CZ_MD5", "MD5"}, {"CZ_SHA1", "SHA1"}, {"CZ_SHA256", "SHA256"}, {"CZ_SHA384", "SHA384"}, {"CZ_SHA512", "SHA512"}, {"CZ_RSA", "RSA"}, {"CZ_ECDSA", "ECDSA"}, {"CZ_SUB_KEY_SIZE", "\u4f7f\u7528\u8005\u91d1\u9470\u5927\u5c0f"}, {"CZ_NO_CERTS", "\u672a\u627e\u5230\u8b49\u66f8"}, {"IMPORT", "\u532f\u5165"}, {"CZ_SCEP_CONFIG", "SCEP \u8a2d\u5b9a"}, {"CZ_CSR_LIST", "CSR \u6e05\u55ae"}, {"CZ_NO_CSR", "\u7121 CSR"}, {"CZ_CHALLENGE_PWD", "\u6311\u6230\u5bc6\u78bc\uff08\u53ef\u9078\uff09"}, {"CZ_CA_URL", "CA URL"}, {"CZ_REQ_COUNT", "\u8acb\u6c42\u8a08\u6578"}, {"CZ_POLL_INTERVAL", "\u8f2a\u8a62\u9593\u9694\uff08\u79d2\uff09"}, {"CZ_POLL_TIME", "\u6700\u5927\u8f2a\u8a62\u6642\u9593\uff08\u79d2\uff09"}, {"CZ_SCEP", "SCEP"}, {"CZ_EMPTY_CA_URL", "CA URL \u4e0d\u80fd\u70ba\u7a7a\u767d"}, {"CZ_GEN_CSR", "\u6c92\u6709\u53ef\u7528\u7684 CSR\uff0c\u8acb\u81f3\u5c11\u7522\u751f\u4e00\u500b"}, {"TOOLS_FW_INH_GROUP_NODE_DESC", "\u4f86\u81ea\u9078\u5b9a\u7be9\u9078\u5668\u7684\u6240\u6709\u8a2d\u5b9a\u90fd\u5c07\u88ab\u63a8\u9001\u5230\u9078\u5b9a\u7fa4\u7d44\u7bc0\u9ede\u4e0b\u7684\u6240\u6709\u88dd\u7f6e\u3002"}, {"TOOLS_FW_INH_UNIT_NODE_DESC", "\u4f86\u81ea\u9078\u5b9a\u7be9\u9078\u5668\u7684\u6240\u6709\u8a2d\u5b9a\u90fd\u5c07\u5f9e\u9078\u5b9a\u88dd\u7f6e\u7684\u7236\u7bc0\u9ede\u7e7c\u627f\u3002"}, {"TOOLS_REV_INH_GROUP_NODE_DESC", "\u4f86\u81ea\u9078\u5b9a\u7be9\u9078\u5668\u7684\u6240\u6709\u8a2d\u5b9a\u90fd\u5c07\u5f9e\u9078\u5b9a\u7fa4\u7d44\u7bc0\u9ede\u63a8\u9001\u5230\u7236\u7bc0\u9ede\u3002<br>\u8981\u5c07\u8a2d\u5b9a\u5957\u7528\u5230\u7236\u7bc0\u9ede\u4e0b\u7684\u6240\u6709\u88dd\u7f6e\uff08\u9078\u5b9a\u7bc0\u9ede\u53ca\u5176\u5b50\u7bc0\u9ede\u9664\u5916\uff09\uff0c\u8acb\u5728\u300c\u9810\u89bd\u300d\u87a2\u5e55\u4e2d\u9032\u884c\u76f8\u61c9\u7684\u9078\u64c7\u3002"}, {"TOOLS_REV_INH_UNIT_NODE_DESC", "\u4f86\u81ea\u9078\u5b9a\u7be9\u9078\u5668\u7684\u6240\u6709\u8a2d\u5b9a\u90fd\u5c07\u5f9e\u9078\u5b9a\u88dd\u7f6e\u63a8\u9001\u5230\u7236\u7bc0\u9ede\u3002<br>\u8981\u5c07\u8a2d\u5b9a\u5957\u7528\u5230\u7236\u7bc0\u9ede\u4e0b\u7684\u6240\u6709\u88dd\u7f6e\uff08\u9078\u5b9a\u88dd\u7f6e\u9664\u5916\uff09\uff0c\u8acb\u5728\u300c\u9810\u89bd\u300d\u87a2\u5e55\u4e2d\u9032\u884c\u76f8\u61c9\u7684\u9078\u64c7\u3002"}, {"WS_URI_HEADER", "\u516c\u7528 URI"}, {"WS_URI_INSTRUCTIONS", "\u8f38\u5165\u6b64\u90e8\u7f72\u7684\u516c\u7528\u4f3a\u670d\u5668\u540d\u7a31\u3002\u6b64\u540d\u7a31\u5c07\u7528\u65bc\u5b58\u53d6\u6b64\u4f3a\u670d\u5668\u4e0a\u7684 Web \u5b58\u53d6\u4e26\u5c07\u5305\u62ec\u5728\u5d4c\u5165\u5f0f\u4ea4\u53c9\u9023\u7d50\u4e2d\u3002"}, {"WS_URI_NOTE", "\u8a3b\uff1a\u516c\u7528\u4f3a\u670d\u5668\u9023\u63a5\u57e0\u7528\u65bc\u5f9e\u516c\u7528\u7db2\u57df\u5b58\u53d6 GMS Web \u670d\u52d9\u3002\u8981\u4fee\u6539 GMS \u5728\u5176\u4e0a\u57f7\u884c Web \u670d\u52d9\u7684\u9023\u63a5\u57e0\uff0c\u8acb\u5c0e\u89bd\u5230 System Interface/Deployment/Settings"}, {"WS_DEPLOYMENT_HEADER", "GMS \u90e8\u7f72"}, {"WS_DEPLOYMENT_INSTRUCTIONS", "\u9078\u64c7\u8981\u8a2d\u5b9a Web \u670d\u52d9\u7684\u90e8\u7f72\u3002"}, {"WS_DEPLOYMENT_ERROR", "\u6c92\u6709\u76ee\u524d\u6d3b\u52d5\u7684\u5df2\u6388\u6b0a\u90e8\u7f72"}, {"WS_STATUS_HEADER", "Web \u670d\u52d9"}, {"WS_SERVICES_ERROR", "\u6c92\u6709\u627e\u5230\u6b64\u90e8\u7f72\u7684 Web \u670d\u52d9"}, {"WS_DEPLOYMENTS_EMPTY", "\u7121\u6cd5\u7372\u53d6\u90e8\u7f72\u6e05\u55ae\u3002\u8acb\u8a3b\u518a GMSVP \u7684\u6b64\u57f7\u884c\u500b\u9ad4\u3002"}, {"WS_DISTRIBUTED_HEADER", "\u5206\u6563\u5f0f\u57f7\u884c\u500b\u9ad4"}, {"WS_DISTRIBUTED_EMPTY", "\u6c92\u6709\u8a2d\u5b9a\u7528\u65bc\u6b64\u4f3a\u670d\u5668\u7684\u5206\u6563\u5f0f\u57f7\u884c\u500b\u9ad4"}, {"HM_APPLY_TEMPLATE_TASK_DESC", "\u5957\u7528\u7bc4\u672c\uff1a "}, {"HM_APPLY_RECORDING_TASK_DESC", "\u5957\u7528\u8a18\u9304\uff1a "}, {"LM_CONFIRM_DELETE_RULE", "\u662f\u5426\u78ba\u5b9a\u8981\u522a\u9664\u9078\u5b9a\u7684\u898f\u5247\uff1f"}, {"LM_SUCCESS_DELETE_RULE", "\u898f\u5247\u522a\u9664\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_DELETE_RULE", "\u7121\u6cd5\u6210\u529f\u522a\u9664\u9078\u5b9a\u7684\u898f\u5247\u3002"}, {"LM_SUCCESS_UPDATE_RULE", "\u898f\u5247\u66f4\u65b0\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_UPDATE_RULE", "\u7121\u6cd5\u6210\u529f\u66f4\u65b0\u898f\u5247\u3002"}, {"LM_DUPLICATE_STMT_NAME", "\u5177\u6709\u76f8\u540c\u540d\u7a31\u7684\u898f\u5247\u5df2\u7d93\u5b58\u5728\u3002\\n\u8acb\u70ba\u898f\u5247\u8f38\u5165\u4e00\u500b\u552f\u4e00\u7684\u540d\u7a31"}, {"LM_RULE_DESTINATION_EMPTY", "\u76ee\u6a19\u70ba\u7a7a\u767d\u3002\\n\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u9805\u76ee\u3002"}, {"LM_RULE_DESTINATION_LENGTH_INVALID", "\u76ee\u6a19\u4e0d\u80fd\u8d85\u904e 256 \u500b\u5b57\u5143\u3002\\n\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u9805\u76ee\u3002"}, {"LM_RULE_DESTINATION_SELECTION_EMPTY", "\u5fc5\u9808\u6307\u5b9a\u9078\u5b9a\u985e\u578b\u7684\u76ee\u6a19\u503c\u3002\\n\u8acb\u6307\u5b9a\u4e00\u500b\u6709\u6548\u7684\u9805\u76ee\u3002"}, {"LM_RULE_SCHEDULE_SELECTION_EMPTY", "\u5fc5\u9808\u70ba\u6bcf\u500b\u76ee\u6a19\u6307\u5b9a\u6392\u7a0b\u3002\\n\u8acb\u9078\u64c7\u4e00\u500b\u6709\u6548\u7684\u6392\u7a0b\u6216\u6392\u7a0b\u7fa4\u7d44\u3002"}, {"LM_RULE_SEVERITY_DESTINATION_DOMAIN_MISMATCH", "\u6b64\u9801\u9762\u4e2d\u9078\u5b9a\u76ee\u6a19\u7684\u7db2\u57df\u8207\u4e0a\u4e00\u9801\\n\u9078\u5b9a\u56b4\u91cd\u6027\u7684\u7db2\u57df\u4e0d\u76f8\u7b26\u3002\\n\\n\u5f9e\u76f8\u540c\u7684\u7db2\u57df\u5167\u9078\u53d6\u7269\u4ef6\u975e\u5e38\u91cd\u8981\u3002\\n\u5982\u679c\u9078\u5b9a\u7684\u56b4\u91cd\u6027\u4e0d\u6b63\u78ba\uff0c\u8acb\u50b3\u56de\u4e26\u5f9e\u9810\u671f\u7684\u7db2\u57df\u4e2d\u9078\u53d6\u56b4\u91cd\u6027\u3002\\n\u5426\u5247\uff0c\u5f9e\u76f8\u7b26\u56b4\u91cd\u6027\u7684\u7db2\u57df\u4e2d\u9078\u64c7\u4e00\u500b\u76ee\u6a19\u3002"}, {"LM_RULE_SEVERITY_SCHEDULE_DOMAIN_MISMATCH", "\u6b64\u9801\u9762\u4e2d\u9078\u5b9a\u6392\u7a0b\u7684\u7db2\u57df\u8207\u4e0a\u4e00\u9801\\n\u9078\u5b9a\u56b4\u91cd\u6027\u7684\u7db2\u57df\u4e0d\u76f8\u7b26\u3002\\n\\n\u5f9e\u76f8\u540c\u7684\u7db2\u57df\u5167\u9078\u53d6\u7269\u4ef6\u975e\u5e38\u91cd\u8981\u3002\\n\u5982\u679c\u9078\u5b9a\u7684\u56b4\u91cd\u6027\u4e0d\u6b63\u78ba\uff0c\u8acb\u50b3\u56de\u4e26\u5f9e\u9810\u671f\u7684\u7db2\u57df\u4e2d\u9078\u53d6\u56b4\u91cd\u6027\u3002\\n\u5426\u5247\uff0c\u5f9e\u76f8\u7b26\u56b4\u91cd\u6027\u7684\u7db2\u57df\u4e2d\u9078\u64c7\u4e00\u500b\u6392\u7a0b\u3002"}, {"LM_UPDATE_CONTROL_BAR_FAILURE_MSG", "\u7121\u6cd5\u8a2d\u5b9a\u63a7\u5236\u5217\u72c0\u614b\u3002"}, {"LM_UPDATE_AUTO_SCROLL_FAILURE_MSG", "\u7121\u6cd5\u8a2d\u5b9a\u81ea\u52d5\u6372\u52d5\u72c0\u614b\u3002"}, {"LM_READER_START_SUCCESS", "\u5373\u6642\u76e3\u8996\u8b80\u53d6\u5668\u5df2\u555f\u52d5\u3002"}, {"LM_READER_START_FAILURE", "\u7121\u6cd5\u555f\u52d5\u5373\u6642\u76e3\u8996\u8b80\u53d6\u5668\u3002\u8acb\u6aa2\u67e5\u8a2d\u5b9a\u7d44\u614b\u3002\\n \uff08\u8a3b\uff1a\u6307\u5b9a\u7684\u8f49\u5bc4\u4f4d\u5740\u548c\u9023\u63a5\u57e0\u61c9\u53ef\u5f9e\u4e3b\u63a7\u53f0/Web \u4f3a\u670d\u5668\u9032\u884c\u5b58\u53d6\uff09\u3002"}, {"LM_READER_STOP_SUCCESS", "\u5373\u6642\u76e3\u8996\u8b80\u53d6\u5668\u5df2\u505c\u6b62\u3002"}, {"LM_READER_STOP_FAILURE", "\u7121\u6cd5\u505c\u6b62\u5373\u6642\u76e3\u8996\u8b80\u53d6\u5668\u3002"}, {"LM_EC_DISABLED", "Syslog \u8f49\u5bc4\u76ee\u524d\u5df2\u505c\u7528\u3002<br>Syslog \u5fc5\u9808\u8f49\u5bc4\u5230\u4e8b\u4ef6\u7ba1\u7406\u54e1\u670d\u52d9\u4ee5\u9032\u884c\u76e3\u8996\u3002<br>\u8981\u555f\u7528 Syslog \u8f49\u5bc4\u4ee5\u9032\u884c\u76e3\u8996\uff0c\u8acb\u6309\u4e00\u4e0b\u4e0a\u9762\u63a7\u5236\u5217\u4e2d\u7684\u300c\u8a2d\u5b9a\u300d\u3002"}, {"LM_READER_NO_ALERT_MSG", "\u8b80\u53d6\u5668\u672a\u6536\u5230\u4efb\u4f55\u65b0\u8b66\u793a\u3002<br>\u8a3b\uff1a\u5982\u679c\u554f\u984c\u4ecd\u7136\u5b58\u5728\uff0c\u8acb\u6aa2\u67e5\u76e3\u8996\u5668\u8a2d\u5b9a\u548c\u88dd\u7f6e\u7684 syslog \u8a2d\u5b9a\u3002"}, {"LM_READER_STOPPED_MSG", "\u8b80\u53d6\u5668\u76ee\u524d\u5df2\u505c\u6b62\u3002<br>\u8acb\u900f\u904e\u6309\u4e00\u4e0b\u4e0a\u9762\u63a7\u5236\u5217\u4e2d\u7684\u300c\u555f\u52d5\u300d\u6309\u9215\u555f\u52d5\u8b80\u53d6\u5668\u3002"}, {"LM_UNITS_NOT_ACCESSIBLE_MSG", "\u60a8\u7121\u6b0a\u5b58\u53d6\u8a2d\u5099\u3002<br>\u5982\u679c\u60a8\u60f3\u76e3\u8996\u4efb\u4f55\u6b64\u985e\u8a2d\u5099\u8f49\u5bc4\u7684 syslog\uff0c\u8acb\u806f\u7d61\u60a8\u7684\u7ba1\u7406\u54e1\u3002"}, {"LM_READER_ERROR_MSG", "\u9047\u5230\u932f\u8aa4\u3002<br>\u8655\u7406\u5373\u6642\u76e3\u8996\u5668\u8b80\u53d6\u5668\u6536\u96c6\u6642\u767c\u751f\u4f8b\u5916\u72c0\u6cc1\u3002"}, {"LM_READER_SOCKET_ERROR_MSG", "\u9047\u5230\u932f\u8aa4\u3002<br>\u555f\u52d5\u5373\u6642\u76e3\u8996\u5668\u8b80\u53d6\u5668\u6642\u767c\u751f\u4f8b\u5916\u72c0\u6cc1\u3002<br>\u4f8b\u5916\u72c0\u6cc1\u8a73\u7d30\u8cc7\u6599\uff1a "}, {"LM_FAILURE_UPDATE_SETTINGS", "\u7121\u6cd5\u66f4\u65b0\u5373\u6642\u76e3\u8996\u5668\u8a2d\u5b9a\u3002"}, {"LM_SUCCESS_UPDATE_SETTINGS", "\u6210\u529f\u66f4\u65b0\u5373\u6642\u76e3\u8996\u5668\u8a2d\u5b9a\u3002"}, {"LM_WARN_ENABLE_EC", "\u4e8b\u4ef6\u7ba1\u7406\u4f7f\u7528Syslog Collector\u6536\u96c6\u548c\u8f49\u767c\u7684\u65e5\u8a8c\uff08Syslog\uff09\u6765\u76e3\u63a7\u7db2\u7d61\u3002\u9019\u4e9b\u65e5\u8a8c\u6839\u64da\u5b9a\u7fa9\u898f\u5247\u88ab\u767c\u9001\u5230\u5f15\u64ce\u505a\u4e8b\u4ef6\u8655\u7406\u3002\\n\\n\u6ce8\u610f\uff1a\u555f\u7528\u6b64\u9078\u9805\u6703\u628a\u6240\u6709\u4ecesyslog Collector\u6536\u5230\u7684\u65e5\u8a8c\u9001\u5230\u4e00\u500b\u4e2d\u592e\u4e8b\u4ef6\u7ba1\u7406\u670d\u52d9. \u4e3a\u4e86\u8655\u7406\u4e8b\u4ef6\uff0c\u6bcf\u4e00\u500b\u65e5\u8a8c\u901a\u8fc7Syslog Collector\u8907\u88fd\uff0c\u9019\u5c07\u63d0\u9ad8\u6574\u500b\u7db2\u7d61\u7684Syslog\u6d41\u91cf."}, {"LM_STMT_CHANGED_MSG_1", "\u60a8\u5df2\u8b8a\u66f4\u9078\u5b9a\u7684\u898f\u5247"}, {"LM_STMT_CHANGED_MSG_2", "\u3002\\n\u79fb\u81f3\u4e0a\u4e00\u87a2\u5e55\uff08\u300c\u898f\u5247\u6e05\u55ae\u300d\u9801\u9762\uff09\u5c07\u610f\u5473\u8457\u907a\u5931\u60a8\u7684\u8b8a\u66f4\u3002\\n\u6309\u4e00\u4e0b\u300c\u78ba\u5b9a\u300d\u79fb\u81f3\u300c\u898f\u5247\u6e05\u55ae\u300d\u9801\u9762\uff0c\u6216\u6309\u4e00\u4e0b\u300c\u53d6\u6d88\u300d\u4ee5\u7e7c\u7e8c\u7de8\u8f2f\u6b64\u898f\u5247\u3002"}, {"LM_DOCKING_STATUS_UPDATE_FAILURE", "\u7121\u6cd5\u66f4\u65b0\u5c0d\u63a5\u72c0\u614b\u3002"}, {"LM_PRIVILEGE_VIOLATION_MESSAGE", "\u60a8\u6c92\u6709\u6b64\u87a2\u5e55\u7684\u66f4\u65b0\u6b0a\u9650\u3002"}, {"LM_DELETE_STMT_EMPTY", "\u8acb\u9078\u64c7\u81f3\u5c11\u4e00\u500b\u898f\u5247\u9032\u884c\u522a\u9664\u3002"}, {"LM_STMT_RULE_EMPTY", "\u6c92\u6709\u9078\u64c7\u898f\u5247\u985e\u578b\u3002\\n\u8acb\u9078\u64c7\u4e00\u500b\u898f\u5247\u985e\u578b\u3002"}, {"LM_STMT_RULE_DUPLICATE", "\u5177\u6709\u76f8\u540c\u898f\u5247\u985e\u578b\u548c\u7de8\u8f2f\u5668\u5c6c\u6027\u7684\u898f\u5247\u5df2\u7d93\u5b58\u5728\u3002\\n\u8acb\u70ba\u6b64\u898f\u5247\u9078\u64c7\u552f\u4e00\u7684\u898f\u5247\u5c6c\u6027\u3002"}, {"LM_CONFIG_SETTINGS_CHANGE_MSG", "\u8b80\u53d6\u5668\u7684\u8f49\u5bc4\u9023\u63a5\u57e0\u5df2\u8b8a\u66f4\u3002\\n\u8b80\u53d6\u5668\u53ef\u80fd\u9700\u8981\u5e7e\u79d2\u6642\u9593\u624d\u80fd\u6210\u529f\u91cd\u65b0\u555f\u52d5\u3002"}, {"LM_NO_RULE_EDITABLE", "\u9078\u5b9a\u7fa4\u7d44\u4e2d\u6c92\u6709\u53ef\u7de8\u8f2f\u7684\u898f\u5247\u985e\u578b\u3002\n\u8acb\u9078\u64c7\u5176\u4ed6\u7fa4\u7d44/\u898f\u5247\u985e\u578b\u3002"}, {"LM_DISABLE_STMT_EMPTY", "\u8acb\u9078\u64c7\u81f3\u5c11\u4e00\u500b\u898f\u5247\u7528\u65bc\u555f\u7528/\u505c\u7528\u64cd\u4f5c\u3002"}, {"LM_SUCCESS_DISABLE_RULE", "\u898f\u5247\u555f\u7528/\u505c\u7528\u64cd\u4f5c\u6210\u529f\u3002"}, {"LM_FAILURE_DISABLE_RULE", "\u7121\u6cd5\u6210\u529f\u555f\u7528/\u505c\u7528\u9078\u5b9a\u7684\u898f\u5247\u3002"}, {"LM_EDIT_RULE_MSG_1", "\u60a8\u5df2\u9078\u64c7\u7de8\u8f2f\u4ee5\u4e0b\u898f\u5247\uff1a\\n"}, {"LM_EDIT_RULE_MSG_2", "\\n\u9078\u5b9a\u7684\u6e05\u55ae\u5305\u542b\u7121\u6cd5\u7de8\u8f2f\u7684\u6240\u6709\u898f\u5247\u3002\\n\\n\u8acb\u9078\u64c7\u5176\u4ed6\u898f\u5247\u4ee5\u7e7c\u7e8c\u3002"}, {"LM_EDIT_RULE_MSG_3", "\\n\u9078\u5b9a\u6e05\u55ae\u5305\u542b\u7121\u6cd5\u7de8\u8f2f\u7684\u898f\u5247\uff08\u900f\u904e * \u6a19\u8a18\uff09\u3002\\n\\n\u662f\u5426\u8981\u7e7c\u7e8c\u7de8\u8f2f\u5176\u9918\u7684\u898f\u5247\uff1f"}, {"LM_DELETE_RULE_MSG_1", "\u60a8\u5df2\u9078\u64c7\u522a\u9664\u4ee5\u4e0b\u898f\u5247\uff1a\\n"}, {"LM_DELETE_RULE_MSG_2", "\\n\u9078\u5b9a\u7684\u6e05\u55ae\u5305\u542b\u7121\u6cd5\u522a\u9664\u7684\u6240\u6709\u898f\u5247\u3002\\n\\n\u8acb\u9078\u64c7\u5176\u4ed6\u898f\u5247\u4ee5\u7e7c\u7e8c\u3002"}, {"LM_DELETE_RULE_MSG_3", "\\n\u9078\u5b9a\u6e05\u55ae\u5305\u542b\u7121\u6cd5\u522a\u9664\u7684\u898f\u5247\uff08\u900f\u904e * \u6a19\u8a18\uff09\u3002\\n\\n\u662f\u5426\u8981\u7e7c\u7e8c\u522a\u9664\u5176\u9918\u7684\u898f\u5247\uff1f"}, {"LM_DELETE_RULE_MSG_4", "\\n\u662f\u5426\u8981\u7e7c\u7e8c\uff1f"}, {"MASKED_LIVEMONITOR_MESSAGE", "\u57fa\u65bc\u5f37\u5236\u7684\u96b1\u79c1\u653f\u7b56\u5c07\u4e0d\u986f\u793a\u8b66\u793a\u8a0a\u606f"}, {"MASKED_ADDITIONAL_INFORMATION", "\u57fa\u65bc\u5f37\u5236\u7684\u96b1\u79c1\u653f\u7b56\u5c07\u4e0d\u986f\u793a\u5176\u4ed6\u8cc7\u8a0a"}, {"DSB_NONENGFW_ALERT_TITLE", "\u97cc\u9ad4\u7248\u672c\u8b66\u793a!"}, {"DSB_NONENGFW_ALERT_MSGPART1", "\u6b64 GMS \u6b63\u5728\u7ba1\u7406\u57f7\u884c\u975e\u82f1\u6587\u97cc\u9ad4\u7684 SonicOS \u8a2d\u5099\u3002"}, {"DSB_NONENGFW_ALERT_MSGPART2", "\u8acb\u6ce8\u610f\uff0c\u5728\u9019\u4e9b\u8a2d\u5099\u4e2d\u4ee5\u975e\u82f1\u6587\u5b9a\u7fa9\u7684\u7269\u4ef6\u548c\u7b56\u7565\u5728 GMS UI \u4e2d\u7684\u986f\u793a\u53ef\u80fd\u4e0d\u6b63\u78ba\u3002\u4fee\u6539\u6b64\u985e\u7269\u4ef6\u548c\u7b56\u7565\u4e26\u5c07\u5176\u63a8\u9001\u81f3\u6b64\u985e\u8a2d\u5099\u53ef\u80fd\u4e0d\u6703\u5c0e\u81f4\u9810\u671f\u7684\u7d50\u679c\u3002"}, {"SYSLOGTAIL_STARTED", "Syslog Reader\uff08\u7528\u65bc\u9032\u884c\u5373\u6642 Syslog \u76e3\u8996\uff09\u5df2\u555f\u52d5\u3002"}, {"SYSLOGTAIL_START_FAILED", "\u7121\u6cd5\u555f\u52d5 Syslog Reader\u3002\u8acb\u6aa2\u67e5 Syslog \u8f49\u5bc4\u8a2d\u5b9a\u3002&nbsp;&nbsp;\uff08\u8a3b:\u61c9\u8a72\u53ef\u4ee5\u5f9e\u4e3b\u63a7\u53f0/Web \u4f3a\u670d\u5668\u5b58\u53d6\u6307\u5b9a\u7684\u8f49\u5bc4\u5730\u5740\u548c\u9023\u63a5\u57e0\uff09\u3002"}, {"SYSLOGTAIL_ALREADY_RUNNING", "Syslog Reader\uff08\u7528\u65bc\u9032\u884c\u5373\u6642 Syslog \u76e3\u8996\uff09\u5df2\u57f7\u884c\uff1b\u672a\u9032\u884c\u4efb\u4f55\u8b8a\u66f4"}, {"SYSLOGTAIL_STOPPED", "Syslog Reader\uff08\u7528\u65bc\u9032\u884c\u5373\u6642 Syslog \u76e3\u8996\uff09\u5df2\u505c\u6b62\u3002"}, {"SYSLOGTAIL_ALREADY_STOPPED", "Syslog Reader\uff08\u7528\u65bc\u9032\u884c\u5373\u6642 Syslog \u76e3\u8996\uff09\u5df2\u505c\u6b62\uff1b\u672a\u9032\u884c\u4efb\u4f55\u8b8a\u66f4"}, {"SYSLOGTAIL_NO_NEW_SYSLOG1", "Reader \u672a\u6536\u5230\u4efb\u4f55\u65b0\u7684 syslog\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG2", "\uff08Reader \u4ecd\u6703\u5617\u8a66\u6536\u96c6 syslog\uff09\u3002"}, {"SYSLOGTAIL_NO_NEW_SYSLOG3", "\uff08\u5982\u679c\u554f\u984c\u4f9d\u7136\u5b58\u5728\uff0c\u8acb\u6aa2\u67e5 Syslog Reader \u8a2d\u5b9a\u548c\u9632\u706b\u7246\u8a2d\u5b9a\uff09\u3002"}, {"SYSLOGTAIL_CONFIG_CHECK", "\u8acb\u6aa2\u67e5 Syslog Reader \u8a2d\u5b9a\u548c\u9632\u706b\u7246\u8a2d\u5b9a\u3002"}, {"SYSLOGTAIL_NO_SYSLOG_FOUND", "\u672a\u627e\u5230 syslog\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER", "\u8acb\u5617\u8a66\u4fee\u6539\u7be9\u9078\u5b57\u4e32\u4ee5\u7372\u5f97\u66f4\u597d\u7684\u7d50\u679c\u3002"}, {"SYSLOGTAIL_MODIFY_FILTER_NOTE", "\uff08\u8a3b:\u5728\u591a\u500b\u5b57\u4e32\u4e4b\u9593\u4f7f\u7528 <b>AND</b> \u6216 <b>OR</b> \u53ef\u7372\u5f97\u66f4\u597d\u7684\u7d50\u679c\uff09\u3002"}, {"SYSLOGTAIL_CURRENTLY_STOPPED", "Syslog Reader \u76ee\u524d\u5df2\u505c\u6b62"}, {"SYSLOGTAIL_START", "\u8acb\u555f\u52d5 Syslog Reader\u3002"}, {"SYSLOGTAIL_ERROR", "\u767c\u751f\u932f\u8aa4\u3002"}, {"SYSLOGTAIL_ERROR_MESSAGE", "\u5728\u8655\u7406 syslog \u6536\u96c6\u6642\u51fa\u73fe\u7570\u5e38\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "\u672a\u555f\u7528 Syslog \u8f49\u5bc4\u3002"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "\u8acb\u8a2d\u5b9a Syslog \u8f49\u5bc4\u5730\u5740\u548c\u9023\u63a5\u57e0\uff0c\u4e26\u555f\u52d5 Syslog Reader\u3002"}, {"MASKED_SYSLOG_MESSAGE", "\u57fa\u65bc\u5f37\u5236\u7684\u96b1\u79c1\u653f\u7b56\u5c07\u4e0d\u986f\u793a\u5176\u9918\u7684 syslog \u8a0a\u606f"}, {"EVENT_ALERTS_SEARCH", "\u8b66\u793a\u641c\u5c0b"}, {"EVENT_ALERTS_DELETE", "\u522a\u9664\u8b66\u793a"}, {"EVENT_ALERTS_ENABLE_DISABLE", "\u555f\u7528/\u505c\u7528\u8b66\u793a"}, {"EVENT_ALERTS_ADD", "\u65b0\u589e\u8b66\u793a"}, {"EVENT_ALERTS_HEADER", "\u8b66\u793a"}, {"EVENT_ALERTS_ALERT_NAME", "\u540d\u7a31"}, {"EVENT_ALERTS_ALERT_TYPE", "\u8b66\u793a\u985e\u578b"}, {"EVENT_ALERTS_INTERVAL", "\u9593\u9694"}, {"EVENT_ALERTS_DEST_SCHED", "\u76ee\u6a19/\u6392\u7a0b"}, {"EVENT_ALERTS_ENABLED", "\u5df2\u555f\u7528"}, {"EVENT_ALERTS_DOMAIN", "\u7db2\u57df"}, {"EVENT_ALERTS_CONFIGURE", "\u8a2d\u5b9a"}, {"EVENT_ALERTS_NO_ALERTS_FOUND", "\u672a\u627e\u5230\u8b66\u793a"}, {"DTF_ANY", "\u4efb\u4f55\u6642\u9593"}, {"DTF_ADD", "\u65b0\u589e\u8a2d\u5099"}, {"DTF_EXECUTE", "\u57f7\u884c"}, {"DTF_ENABLED", "\u5df2\u555f\u7528"}, {"DTF_SEARCH", "\u9810\u8a2d\u4efb\u52d9\u641c\u5c0b"}, {"DTF_NOT_FOUND", "\u672a\u627e\u5230\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_DT", "\u9810\u8a2d\u4efb\u52d9"}, {"DTF_DESC", "\u8aaa\u660e"}, {"DTF_TOU", "\u8a2d\u5099\u985e\u578b"}, {"DTF_DURING", "\u4efb\u52d9\u5efa\u7acb\u6642\u9593"}, {"DTF_NO_DTS", "\u672a\u9078\u64c7\u4efb\u4f55\u8981\u57f7\u884c\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_EXEC", "\u57f7\u884c\u6b64\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_NO_DISABLE", "\u4e0d\u80fd\u505c\u7528\u6b64\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_NO_EXEC", "\u4e0d\u80fd\u57f7\u884c\u6b64\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_SEL_UNITS", "\u9078\u64c7\u8a2d\u5099"}, {"DTF_EXEC_METHOD", "\u57f7\u884c\u65b9\u6cd5"}, {"DTF_ATLEAST_ONE", "\u81f3\u5c11\u9078\u64c7\u4e00\u500b\u8a2d\u5099\u4f86\u57f7\u884c\u4efb\u52d9\u3002"}, {"DTF_EXEC_ALL", "\u5728\u7cfb\u7d71\u4e2d\u7684\u6240\u6709\u8a2d\u5099\u4e0a\u57f7\u884c\u9810\u8a2d\u4efb\u52d9"}, {"DTF_EXEC_FOLL", "\u5728\u6240\u9078\u7684\u4ee5\u4e0b\u8a2d\u5099\u4e0a\u57f7\u884c\u9810\u8a2d\u4efb\u52d9"}, {"DTF_REAPPLY_1", "\u50c5\u7576\u4e4b\u524d\u672a\u5957\u7528\u6642\u52a0\u4ee5\u57f7\u884c"}, {"DTF_REAPPLY_2", "\u50c5\u4e4b\u524d\u672a\u5957\u7528\u81f3\u6240\u9078\u8a2d\u5099\u7684\u4efb\u52d9\u624d\u6703\u57f7\u884c\u3002"}, {"DTF_REAPPLY_3", "\u8a72\u8a2d\u5099\u5c07\u5ffd\u7565\u5df2\u57f7\u884c\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_EXEC_1", "\u5373\u4f7f\u4e4b\u524d\u5df2\u5957\u7528\u4e5f\u5c07\u57f7\u884c"}, {"DTF_EXEC_2", "\u5373\u4f7f\u4e4b\u524d\u5957\u7528\u4e86\u9078\u5b9a\u7684\u6240\u6709\u4efb\u52d9\uff0c\u4ecd\u6703\u5728\u6240\u9078\u8a2d\u5099\u4e0a\u91cd\u65b0\u57f7\u884c\u9019\u4e9b\u4efb\u52d9\u3002"}, {"DTF_ENABLE_SUCCESS", "\u6210\u529f\u66f4\u65b0\u6240\u9078\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_ENABLE_FAIL", "\u7121\u6cd5\u66f4\u65b0\u6240\u9078\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_SCHEDULE_SUCCESS", "\u6210\u529f\u6392\u5b9a\u8981\u57f7\u884c\u7684\u9810\u8a2d\u4efb\u52d9\u3002"}, {"DTF_SCHEDULE_FAIL", "\u7531\u65bc\u6240\u9078\u7684\u4efb\u52d9\u4e0d\u9069\u7528\u6216\u8005\u5df2\u57f7\u884c\uff0c\u56e0\u6b64\u672a\u6392\u5b9a\u4efb\u4f55\u9810\u8a2d\u4efb\u52d9\u3002."}, {"AUTOASSIGN_AGENT_HEADER", "\u4ee3\u7406\u6307\u6d3e\u8a2d\u5b9a"}, {"AUTOASSIGN_AGENT_MSG_1", " \u9700\u8981\u4ee3\u7406\u624d\u80fd\u64c1\u6709\u88dd\u7f6e\u4ee5\u9032\u884c\u7ba1\u7406\u3001\u5831\u544a\u548c\u76e3\u6e2c\u3002\u81ea\u52d5\u6307\u6d3e\u4ee3\u7406\u53ef\u78ba\u4fdd\u88dd\u7f6e\u5747\u8861\u5206\u914d\uff0c\u4ee5\u7372\u5f97\u66f4\u597d\u7684\u8cc7\u6e90\u914d\u7f6e\u3001\u6700\u4f73\u5316\u6548\u80fd\u3001\u9069\u7576\u7684\u5132\u5b58\u7a7a\u9593\u548c\u9ad8\u53ef\u7528\u6027\u3002\u6b64\u529f\u80fd\u53ef\u4f9d\u64da\u5728\u300c\u65b0\u589e\u88dd\u7f6e\u300d\u64cd\u4f5c\u671f\u9593\u9078\u64c7\u7684\u53d7\u7ba1\u7406\u6a21\u5f0f\u555f\u7528\u3002 "}, {"AUTOASSIGN_AGENT_MSG_2_HOSTED", "\u4f7f\u7528\u8005\u53ef\u4ee5\u5f9e<i>\u4fee\u6539\u88dd\u7f6e</i>\u5c0d\u8a71\u65b9\u584a\u4e2d\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406\u3002"}, {"AUTOASSIGN_AGENT_MSG_2", "\u4f7f\u7528\u8005\u53ef\u4ee5\u5f9e<i>\u4fee\u6539\u88dd\u7f6e</i>\u5c0d\u8a71\u65b9\u584a\u6216\u4f7f\u7528<i>\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406</i>\u64cd\u4f5c\u4f86\u91cd\u65b0\u6307\u6d3e\u4ee3\u7406\u3002"}, {"AUTOASSIGN_AGENT_MSG_EXSTTUNNELSSL", "\u50c5\u9650\u73fe\u6709\u7684\u901a\u9053\u6216 LAN\u3001SSL \u7ba1\u7406\u6a21\u5f0f:\u81ea\u52d5\u6307\u6d3e\u50c5\u9069\u7528\u65bc<i>\u73fe\u6709\u901a\u9053</i>\u548c <i>SSL</i> \u6a21\u5f0f\uff0c\u4f46\u662f\u5c0d\u65bc<i>\u7ba1\u7406\u901a\u9053</i>\uff0c\u624b\u52d5\u6307\u6d3e\u70ba\u5fc5\u9700\u9805\u76ee\u3002"}, {"AUTOASSIGN_AGENT_MSG_ALL", "\u6240\u6709\u7ba1\u7406\u6a21\u5f0f:\u81ea\u52d5\u6307\u6d3e\u9069\u7528\u65bc\u6240\u6709\u6a21\u5f0f\u3002\u5c0d\u65bc<i>\u7ba1\u7406\u901a\u9053</i>\u6a21\u5f0f\uff0c\u5fc5\u9808\u5728\u53d7\u7ba1\u7406\u88dd\u7f6e\u4e0a\u5b8c\u6210\u4ee3\u7406\u8a2d\u5b9a\u3002"}, {"AUTOASSIGN_AGENT_ENABLE_MESSAGE", "\u300c\u81ea\u52d5\u6307\u6d3e\u4ee3\u7406\u300d\u5df2\u7d93\u555f\u7528"}, {"AUTOASSIGN_AGENT_DISABLE_MESSAGE", "\u300c\u81ea\u52d5\u6307\u6d3e\u4ee3\u7406\u300d\u5df2\u7d93\u505c\u7528"}, {"AUTOASSIGN_AGENT_ENABLE", "\u81ea\u52d5\u555f\u7528\u6307\u6d3e\u4ee3\u7406"}, {"AUTOASSIGN_AGENT_ENABLE_EXSTTUNNELSSL", "SSL \u548c\u4f7f\u7528\u73fe\u6709\u901a\u9053\u6216 LAN"}, {"AUTOASSIGN_AGENT_ENABLE_ALL", "\u5168\u90e8"}, {"TEMPLATE_SETTINGS_TITLE", "[TW]Settings"}, {"TEMPLATE_SETTINGS_MSG_1", "[TW]Configuration allows the Admin to create/configure automatic operations on newly added devices even before they become available in GMS. If and when the unit connects and as soon as the Unit is acquired, GMS will push the defined operations in the Configuration(Default or Custom) onto the unit."}, {"TEMPLATE_SETTINGS_MSG_2", "[TW]Note: Default Configuration will be applied on units where no Configurations have been assigned, if Apply Default Configuration is checked."}, {"TEMPLATE_ENABLE_DT", "[TW]Apply Default Configuration"}, {"CUI_NO_FS", "\u672a\u627e\u5230\u6d41\u91cf\u4f3a\u670d\u5668\u3002"}, {"FLOWAUTOASSIGN_AGENT_DISABLE_MESSAGE", "TW The Flow Agent Auto assignment has been disabled"}, {"FLOWAUTOASSIGN_AGENT_ENABLE_MESSAGE", "TW The Flow Agent Auto assignment has been enabled"}, {"APPLOGCONFIG_MSG_LOG_MONTH", "\u662f\u5426\u78ba\u5b9a\u8981\u8b8a\u66f4\u8a2d\u5b9a"}, {"LOGCONFIG_SECTITLE_2", "\u65e5\u8a8c\u8a0a\u606f"}, {"LOGCONFIG_DELLABEL", "\u522a\u9664\u4ee5\u4e0b\u65e5\u671f\u4e4b\u524d\u7684\u8a18\u9304\uff1a"}, {"LOGCONFIG_MONTH", "\u6708"}, {"LOGCONFIG_DAY", "\u5929"}, {"LOGCONFIG_YEAR", "\u5e74"}, {"LOGCONFIG_FORLABEL", "\u5c0d\u65bc"}, {"LOGCONFIG_DOMAIN", "\u7db2\u57df"}, {"APPLOGCONFIG_DATA_AVAILABLE_DATE_FAILED", "\u932f\u8aa4\uff1a\u7121\u6cd5\u66f4\u65b0\u8a2d\u5b9a"}, {"APPLOGCONFIG_SETTINGS_DELETEALERT", "\u662f\u5426\u78ba\u5b9a\u8981\u8b8a\u66f4\u6392\u7a0b\uff1f"}, {"APPLOGCONFIG_LOG_FILE_COUNT", "\u662f\u5426\u78ba\u5b9a\u8981\u8b8a\u66f4\u65e5\u8a8c\u6a94\u6848\u8a08\u6578\u7684\u6700\u5927\u6578\uff1f"}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE", "\u5c01\u5b58 "}, {"APPLOG_CONFIG_ARCHIVE_SECTION_TITLE2", " \u65e5\u8a8c\u8a0a\u606f"}, {"APPLOG_CONFIG_DELETE_MSG_1", "\u8a18\u9304\u6709\u52a9\u65bc\u8ffd\u8e64\u6b64\u7cfb\u7d71\u4e2d\u7684\u6d3b\u52d5\u3002\u9019\u4e9b\u6d3b\u52d5\u76f4\u63a5\u6216\u9593\u63a5\u8207\u4f7f\u7528\u8005\u8d77\u59cb\u7684\u64cd\u4f5c\u76f8\u95dc\u806f\u6216\u8005\u6839\u64da\u7cfb\u7d71\u8d77\u59cb\u7684\u64cd\u4f5c\u3002\u9019\u4e9b\u8a18\u9304\u5c0d\u65bc\u7a3d\u6838\u7dda\u7d22\u548c\u6cd5\u898f\u9075\u5faa\u76ee\u7684\u4ee5\u53ca\u6545\u969c\u6392\u9664\u7cfb\u7d71\u4f5c\u696d\u5747\u9817\u70ba\u91cd\u8981\u3002"}, {"APPLOG_CONFIG_DELETE_MSG_2", "\u4e0d\u518d\u9700\u8981\u5132\u5b58\u5728\u7cfb\u7d71\u4e2d\u7684\u8a18\u9304\u53ef\u4ee5\u624b\u52d5\u522a\u9664\u3002\u9019\u662f\u4e00\u6b21\u6027\u64cd\u4f5c\uff0c\u5c07\u6839\u64da\u6240\u9078\u7684\u65e5\u671f\u57f7\u884c\u522a\u9664\u3002 "}, {"APPLOG_CONFIG_DELETE_MSG_21", "\u6b64\u756b\u9762\u4e2d\u7684\u522a\u9664\u64cd\u4f5c\u5c07\u53ea\u6e05\u7406\u8207\u8b8a\u66f4\u9806\u5e8f\u4e0d\u76f8\u95dc\u7684\u8a18\u9304\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_1", "\u4e0d\u518d\u9700\u8981\u5132\u5b58\u5230\u7cfb\u7d71\u4e2d\u7684\u8a18\u9304\uff0c\u53ef\u4ee5 CSV/HTML \u683c\u5f0f\u532f\u51fa\u4ee5\u53ca\u5f9e\u8cc7\u6599\u5eab\u5378\u8f09\u3002\u5c01\u5b58\u7a0b\u5e8f\u5c07\u5148\u6309\u7167\"\u5c01\u5b58\u8a18\u9304\u6392\u7a0b\"\u5c01\u5b58\u8cc7\u6599\u5230 <i>\u5c01\u5b58dLogs</i> \u76ee\u9304\uff0c\u7136\u5f8c\u5f9e\u8cc7\u6599\u5eab\u522a\u9664\u8cc7\u6599\u3002 "}, {"APPLOG_CONFIG_ARCHIVE_MSG_11", "\u5c01\u5b58\u64cd\u4f5c\u5c07\u6703\u51fa\u6240\u6709\u8a18\u9304\uff0c\u5305\u62ec\u8207\u8b8a\u66f4\u9806\u5e8f\u76f8\u95dc\u8005\uff0c\u4f46\u662f\u522a\u9664\u5c07\u6703\u7565\u904e\u6e05\u7406\u8b8a\u66f4\u9806\u5e8f\u76f8\u95dc\u7684\u9805\u76ee\u3002"}, {"APPLOG_CONFIG_ARCHIVE_MSG_2", "\u5099\u8a3b\uff1a\u5c0d\u65bc\u975e\u8996\u7a97\u90e8\u7f72\uff1a\u82e5\u8981\u5378\u8f09\u5c01\u5b58\u8a18\u9304\u6a94\u5230\u672c\u6a5f\u78c1\u789f\u6a5f\uff0c\u8acb\u5c0e\u89bd\u5230\u300c\u8a2d\u5099\u300d >\u300c\u7cfb\u7d71\u300d >\u300c\u6a94\u6848\u7ba1\u7406\u54e1\u300d\u756b\u9762\u3002"}, {"APPLOG_CONFIG_ARCHIVE_ENABLE", "\u555f\u7528\u5c01\u5b58"}, {"APPLOG_CONFIG_ARCHIVE_KEEP", "\u4fdd\u7559 "}, {"APPLOG_CONFIG_ARCHIVE_For", " \u5c0d\u65bc\uff1a"}, {"APPLOG_CONFIG_MAX_NUM_LOGS", "\u8a18\u9304\u8a0a\u606f\u6a94\u6578\u91cf\u4e0a\u9650:"}, {"APPLOG_CONFIG_ARCHIVE_FORMAT", "\u5c01\u5b58\u683c\u5f0f\uff1a"}, {"APPLOG_CONFIG_UPDATE_SUCCESS", "\u5c01\u5b58\u8a2d\u5b9a"}, {"APPLOG_CONFIG_UPDATE_SUCCESS_2", "\u65e5\u8a8c\u8a0a\u606f\u66f4\u65b0\u6210\u529f"}, {"APPLOG_CONFIG_ARCHIVE_MSGS", "\u5c01\u5b58 GMS \u8a18\u9304\u8a0a\u606f"}, {"WF_SETTINGS_TITLE", "\u8a2d\u5b9a"}, {"WF_SETTINGS_MSG_1", "\u5de5\u4f5c\u6d41\u7a0b\u662f\u76e3\u7763\u4e00\u500b\u6216\u591a\u500b\u8a2d\u5099\u7684\u8a2d\u5b9a\u8b8a\u66f4\u7684\u7cfb\u7d71\u3002\u5b83\u5141\u8a31\u57f7\u884c\u5be9\u67e5\u548c\u63d0\u4f9b\u6240\u5efa\u8b70\u8b8a\u66f4\u7684\u610f\u898b\uff0c\u6307\u6d3e\u6240\u6709\u6b0a\u548c\u63d0\u4f9b\u6b0a\u8cac\u7d66\u6240\u6709\u64cd\u4f5c\uff0c\u4ee5\u53ca\u6240\u6709\u5177\u6709\u5b8c\u6574\u8a18\u9304\u7684\u64cd\u4f5c\u4ee5\u9032\u884c\u7a3d\u6838\u3002\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u7ba1\u7406\u662f\u5de5\u4f5c\u6d41\u7a0b\u7684\u5143\u4ef6\uff0c\u53ef\u6aa2\u8996\u8a2d\u5099\u7684\u8b8a\u66f4\uff0c\u5728\u756b\u9762\u4e0a\u9810\u89bd\u8a2d\u5099\u74b0\u5883\u4e2d\u5167\u5d4c\u7684\u8b8a\u66f4\u3002 "}, {"WF_SETTINGS_MSG_2", "\u5099\u8a3b\uff1a\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u548c\u300c\u6838\u51c6\u300d\u7ba1\u7406\u53ef\u5728\u7db2\u57df\u5c64\u7d1a\u555f\u7528/\u505c\u7528\u3002\u505c\u7528\u300c\u6838\u51c6\u300d\u7ba1\u7406\u7368\u7acb\u65bc\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u7ba1\u7406\uff0c\u4f46\u662f\u505c\u7528\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u7ba1\u7406\u4e5f\u6703\u505c\u7528\u300c\u6838\u51c6\u300d\u7ba1\u7406\u3002"}, {"WF_SETTINGS_CLOUD_LIC_NOTE", "\u5373\u4f7f\u5df2\u555f\u7528\uff0c\u5de5\u4f5c\u6d41\u7a0b\u4e5f\u50c5\u9069\u7528\u65bc\u5df2\u4e3b\u52d5\u91dd\u5c0d\u4ee5\u4e0b\u670d\u52d9\u6388\u6b0a\u7684\u8a2d\u5099: "}, {"WF_SETTINGS_ENABLE_COM", "\u505c\u7528\u8b8a\u66f4\u9806\u5e8f\u7ba1\u7406"}, {"WF_SETTINGS_ENABLE_WF", "\u505c\u7528\u6838\u51c6\u7ba1\u7406"}, {"WF_CO_DEFSCHEDSETTINGS_TITLE", "\u8b8a\u66f4\u9806\u5e8f\u9810\u8a2d\u6392\u7a0b\u8a2d\u5b9a"}, {"WF_CO_DEFSCHEDSETTINGS_MSG", "\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u53ef\u6839\u64da\u4ee5\u4e0b\u8a2d\u5b9a\u6392\u7a0b\u5728\u63d0\u4ea4\u6642\u57f7\u884c\u3002\u6307\u5b9a\u9810\u8a2d\u503c\u5c07\u5728\u5efa\u7acb\u65b0\u7684\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u6642\u81ea\u52d5\u4f7f\u7528\u6240\u9078\u7684\u8a2d\u5b9a\u3002"}, {"WF_CO_DEFSCHEDSETTINGS_SCHEDULE", "\u6392\u7a0b: "}, {"WF_CO_DEFSCHEDSETTINGS_EXECMAN", "\u624b\u52d5\u57f7\u884c"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONAPP", "\u6838\u51c6\u6642\u5373\u523b"}, {"WF_CO_DEFSCHEDSETTINGS_EXECONSCHED", "\u5728"}, {"WF_CONFIG_DELETE_MSG_1", "\u8a18\u9304\u6709\u52a9\u65bc\u8ffd\u8e64\u6b64\u7cfb\u7d71\u4e2d\u7684\u6d3b\u52d5\u3002\u9019\u4e9b\u6d3b\u52d5\u76f4\u63a5\u6216\u9593\u63a5\u8207\u4f7f\u7528\u8005\u8d77\u59cb\u7684\u64cd\u4f5c\u76f8\u95dc\u806f\u6216\u8005\u6839\u64da\u7cfb\u7d71\u8d77\u59cb\u7684\u64cd\u4f5c\u3002\u9019\u4e9b\u8a18\u9304\u5c0d\u65bc\u7a3d\u6838\u7dda\u7d22\u548c\u6cd5\u898f\u9075\u5faa\u76ee\u7684\u4ee5\u53ca\u6545\u969c\u6392\u9664\u7cfb\u7d71\u4f5c\u696d\u5747\u9817\u70ba\u91cd\u8981\u3002"}, {"WF_CONFIG_DELETE_MSG_2", "\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u4e00\u822c\u5728 "}, {"WF_CONFIG_DELETE_MSG_3", " \u5929\u4ee5\u4e0a\uff0c\u4e0d\u518d\u9700\u8981\u5132\u5b58\u5728\u7cfb\u7d71\u4e2d\u8005\uff0c\u5747\u53ef\u624b\u52d5\u522a\u9664\u3002\u9019\u662f\u4e00\u6b21\u6027\u64cd\u4f5c\uff0c\u5c07\u6839\u64da\u6240\u9078\u7684\u65e5\u671f\u57f7\u884c\u522a\u9664\u3002\u6b64\u756b\u9762\u4e2d\u7684\u522a\u9664\u64cd\u4f5c\u5c07\u53ea\u6e05\u7406\u8207\u300c\u8b8a\u66f4\u9806\u5e8f\u300d\u76f8\u95dc\u7684\u8cc7\u6599\u3001\u5de5\u4f5c\u548c\u8a18\u9304\u3002"}, {"APPLOG_CONFIG_DEL_DATA", "\u522a\u9664\u4ee5\u4e0b\u7684\u8cc7\u6599:"}, {"FA_UNIT_STATUS_HEADER", "\u88dd\u7f6e\u8a73\u7d30\u8cc7\u6599"}, {"FA_UNIT_STATUS_SERIAL", "\u5e8f\u865f"}, {"FA_UNIT_STATUS_NODE_NAME", "\u88dd\u7f6e\u540d\u7a31"}, {"FA_UNIT_STATUS_MODEL", "\u6a21\u5f0f"}, {"FA_UNIT_STATUS_FIRMWARE", "\u97cc\u9ad4\u7248\u672c"}, {"FA_UNIT_STATUS_IP", "\u53d7\u7ba1\u7406 IP"}, {"FA_UNIT_STATUS_LICENSE", "\u61c9\u7528\u7a0b\u5f0f\u8996\u89ba\u5316"}, {"FA_GROUP_STATUS_HEADER1", "\u97cc\u9ad4\u8a73\u7d30\u8cc7\u6599"}, {"FA_GROUP_STATUS_HEADER2", "\u6d41\u91cf\u5831\u544a\u6388\u6b0a\u72c0\u614b"}, {"FA_GROUP_STATUS_NO_DATA", "\u6c92\u6709\u53ef\u7528\u7684\u8cc7\u6599"}, {"FA_LICENSE_NOT_AVAILABLE", "\u672a\u6388\u6b0a"}, {"FA_LICENSE_AVAILABLE", "\u5df2\u6388\u6b0a"}, {"FA_LICENSE_FREE_TRAIL", "\u514d\u8cbb\u8a66\u7528"}, {"FA_LICENSE_EXPIRED", "\u5df2\u904e\u671f"}, {"FA_GROUP_FIREWALL_COUNT", "\u7cfb\u7d71\u4e2d\u7684\u9632\u706b\u7246"}, {"FA_FLOW_IP1", "\u6d41\u91cf\u4ee3\u7406 1"}, {"FA_FLOW_IP2", "\u6d41\u91cf\u4ee3\u7406 2"}, {"FA_FLOW_AGENT_STATUS", "\u6d41\u91cf\u4ee3\u7406\u72c0\u614b"}, {"FA_FLOW_AGENT_FW_CONFIGURED", "\u9632\u706b\u7246\u8a2d\u5b9a"}, {"FA_FLOW_AGENT_FW_VPN_TUNNEL", "VPN \u901a\u9053"}, {"FA_FLOW_AGENT_FW_LOCAL_LAN_IP", "\u9060\u7aef IP"}, {"FA_REPORTING_SUBSCRIPTION_DAYS", "\u8cc7\u6599\u4fdd\u7559 (\u5929\u6578)"}, {"FA_FLOW_FORWARDER_IP", "\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {"FA_FLOWS_COLLECTED", "\u5df2\u6536\u96c6\u7684\u6d41\u91cf"}, {"FA_DISK_ALLOCATED", "\u5df2\u914d\u7f6e\u7684\u78c1\u789f"}, {"FA_DISK_USED", "\u5df2\u4f7f\u7528\u7684\u78c1\u789f"}, {"FA_FLOW_STATUS", "\u72c0\u614b"}, {"FA_NO_AGENT", "\u672a\u6307\u6d3e\u6d41\u91cf\u4ee3\u7406"}, {"FA_MODELSUPPORT", "\u6b64\u578b\u865f\u672a\u555f\u7528\u6d41\u91cf\u5831\u544a"}, {"FA_FIRMWARESUPPORT", "\u6d41\u91cf\u5831\u544a\u4e0d\u9069\u7528\u65bc\u6b64\u7248\u672c"}, {"FA_LICENSESUPPORT", "\u7121\u6cd5\u63d0\u4f9b\u61c9\u7528\u7a0b\u5f0f\u8996\u89ba\u5316\u6388\u6b0a\u8cc7\u8a0a"}, {"FA_HEADING", "\u6d41\u91cf\u4ee3\u7406"}, {"FA_FLOW_AGENT", "\u6d41\u91cf\u4ee3\u7406"}, {"FA_FLOW_HEAD_IP1", "\u6d41\u91cf\u4ee3\u7406 1"}, {"FA_FLOW_HEAD_IP2", "\u6d41\u91cf\u4ee3\u7406 2"}, {"FA_FLOW_HEAD_HDD", "\u786c\u789f (%)"}, {"FA_FLOW_HEAD_RAM", "RAM (%)"}, {"FA_FLOW_HEAD_CPU", "CPU (%)"}, {"FA_FLOW_HEAD_BW", "\u983b\u5bec (%)"}, {"FA_FLOW_FORWARDER_HEAD", "\u6d41\u91cf\u8f49\u5bc4\u7ad9"}, {"FA_FLOW_PAIR", "\u6d41\u91cf\u4ee3\u7406\u914d\u5c0d"}, {"FA_FLOW_HEAD_DISKSIZE", "\u78c1\u789f\u5927\u5c0f"}, {"FA_FLOW_HEAD_GATEWAY", "\u9598\u9053\u9632\u706b\u7246"}, {"FA_FLOW_HEAD_TUNNELS", "\u901a\u9053"}, {"FA_FLOW_HEAD_TENANTS", "\u79df\u7528\u6236"}, {"FA_UNIT_STATUS_ID", "#"}, {"GF_SA_NAME", "\u540d\u7a31"}, {"GF_GATEWAY", "\u9598\u9053"}, {"GF_LAST_UPDATED", "\u6700\u5f8c\u66f4\u65b0"}, {"GF_DEST_ADDRESS_RANGE", "\u76ee\u7684\u5730\u4f4d\u5740\u7bc4\u570d"}, {"GF_LOCAL_ADDRESS_RANGE", "\u672c\u6a5f\u4f4d\u5740\u7bc4\u570d"}, {"FA_STATUS", "\u72c0\u614b"}, {"CLOUDSETTINGS_SECTITLE_1", "\u65b0\u589e\u6d41\u91cf\u4ee3\u7406\u914d\u5c0d"}, {"CLOUDSETTINGS_ADDFLOWAGENT_1", "\u6d41\u91cf\u4ee3\u7406 1:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_2", "\u6d41\u91cf\u4ee3\u7406 2:"}, {"CLOUDSETTINGS_ADDFLOWAGENT_RAM", "\u8a18\u61b6\u9ad4 (GB):"}, {"CLOUDSETTINGS_ADDFLOWAGENT_HARDDISK", "\u6d41\u91cf\u8cc7\u6599\u5eab\u5132\u5b58\u7a7a\u9593 (GB):"}, {"CLOUDSETTINGS_SECTITLE_2", "\u96f2\u7aef Syslog \u4f3a\u670d\u5668\u8a2d\u5b9a"}, {"CLOUDSETTINGS_ENABLE_SYSLOG", "\u555f\u7528\u5c0d Syslog \u4f3a\u670d\u5668\u7684 Syslog \u5831\u544a:"}, {"CLOUDSETTINGS_SYSLOG_IP", "Syslog \u4f3a\u670d\u5668\u7684 IP \u4f4d\u5740:"}, {"CLOUDSETTINGS_SYSLOG_PORT", "Syslog \u4f3a\u670d\u5668\u9023\u63a5\u57e0:"}, {"CLOUDSETTINGS_SECTITLE_3", "\u96f2\u7aef\u6d41\u91cf\u4ee3\u7406\u8a2d\u5b9a"}, {"CLOUDSETTINGS_NUM_FIREWALLS_SUPPORTED", "\u6bcf\u500b\u6d41\u91cf\u4ee3\u7406\u7684\u9632\u706b\u7246\u6578\u91cf:"}, {"CLOUDSETTINGS_SECTITLE_5", "[TW]Cloud SWARM Server Settings"}, {"CLOUDSETTINGS_SWARM_SERVER_IP", "[TW]SWARM Server IP Address:"}, {"STATUS_SUB_UNIT", "SonicPoint Node"}, {"SP_INFO", "SonicPoint \u8cc7\u8a0a"}, {"SP_MANAGEDBY", "\u7ba1\u7406\u8005:"}, {"SP_IPADDR", "IP \u4f4d\u5740"}, {"SP_SUBNET", "\u5b50\u7db2\u8def\u906e\u7f69"}, {"SP_IFACE", "\u4ecb\u9762"}, {"SP_ZONE", "\u5340\u57df"}, {"SP_MODEL", "\u578b\u865f"}, {"SP_ENABLED", "\u5df2\u555f\u7528"}, {"SP_DISABLED", "\u5df2\u505c\u7528"}, {"SP_STATUS", "\u72c0\u614b"}, {"SP_MACADDR", "MAC \u4f4d\u5740"}, {"PM_CONNECTWISE_STATUS", "[TW]Connectwise Manage"}, {"PM_CONNECTWISE_NA", "[TW]Not Available"}, {"TICKET_INFORMATION", "[TW]Connectwise Ticket"}, {"TICKET_DETAILS", "[TW]Details"}, {"CONNECTWISE_NOTE", "[TW]GMS integration with ConnectWise Manage platform provides an ability to sync basic firewall details into ConnectWise platform. It provides an ability to create automated service tickets for alerts in ConnectWise Manage platform.Connectwise Integration is supported for API version 3.0."}, {Integer.toString(-919), "[TW]Waiting for the unit to respond to authentication phase1 call."}, {Integer.toString(-920), "[TW]Unit responded to the authentication phase1 call."}, {Integer.toString(-921), "[TW]Authentication phase1 with the unit failed."}, {Integer.toString(-922), "[TW]Authentication phase1 with the unit is a success."}, {Integer.toString(-923), "[TW]Waiting for the unit to respond to authentication phase2 call."}, {Integer.toString(-924), "[TW]Unit responded to the authentication phase2 call."}, {Integer.toString(-925), "[TW]Authentication phase2 with the unit failed."}, {Integer.toString(-926), "[TW]Authentication phase2 with the unit is a success."}, {Integer.toString(-927), "[TW]Successfully authenticated with the unit."}, {Integer.toString(-928), "[TW]Authentication with the unit failed."}, {Integer.toString(-929), "[TW]The unit is registered with the backend."}, {Integer.toString(-930), "[TW]The unit is not registered with the backend."}, {Integer.toString(-931), "[TW]Successfully validated the unit serial with backend."}, {Integer.toString(-932), "[TW]Heart beats for the unit have been started."}, {Integer.toString(-933), "[TW]Successfully set a session Id between ZeroTouch agent and firewall."}, {Integer.toString(-934), "[TW]Failed to set a session Id to the unit."}, {Integer.toString(-935), "[TW]The unit is not yet ready to be acquired."}, {Integer.toString(-936), "[TW]The unit has just connected wtih the ZeroTouch agent."}, {Integer.toString(-937), "[TW]Firewall request is invalid. It is missing firewall serial."}, {Integer.toString(-938), "[TW]Retrieving keyset for the unit failed."}, {Integer.toString(-939), "[TW]Successfully retreived keyset for the unit."}, {Integer.toString(-940), "[TW]Failed to push the keyset to the unit."}, {Integer.toString(-941), "[TW]Successfully pushed the keyset to the unit."}, {Integer.toString(-944), "[TW]Successfully retrieved ZeroTouch key from the backend."}, {Integer.toString(-945), "[TW]Failed to retrieve ZeroTouch key for the firewall."}, {Integer.toString(-946), "[TW]Received an invalid ZeroTouch key for the firewall."}, {Integer.toString(-947), "[TW]ZeroTouch feaure was enabled for the firewall."}, {Integer.toString(-948), "[TW]ZeroTouch feature was disabled for the firewall."}};
 
     @Override
     public Object[][] getContents() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/SGMSUtil.java decompiled-9.3.9330/com/sonicwall/sgms/util/SGMSUtil.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/SGMSUtil.java	2023-09-08 15:13:13.218771793 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/SGMSUtil.java	2023-09-08 15:14:40.180270157 -0700
@@ -81,6 +81,7 @@
 import com.sonicwall.sgms.util.prdb.PRDB;
 import com.sonicwall.viewpoint.bean.ReportTimeZones;
 import com.sonicwall.viewpoint.scheduledreport.service.BaseEmailPackage;
+import com.sonicwall.ws.util.HashUtil;
 import com.sun.net.ssl.internal.ssl.Provider;
 import flex.messaging.io.ArrayCollection;
 import flex.messaging.io.amf.ASObject;
@@ -6632,5 +6633,31 @@
         }
         return value;
     }
+
+    public static String createSecurityCode(String serial) {
+        long ts = System.currentTimeMillis() / 1000L;
+        long mod = ts % 60L;
+        if (mod > 50L) {
+            try {
+                Thread.sleep(60L - mod + 2L);
+            }
+            catch (InterruptedException interruptedException) {
+                // empty catch block
+            }
+            ts = System.currentTimeMillis() / 1000L;
+            mod = ts % 60L;
+        }
+        long tsPerSecond = ts - mod;
+        String enc = AESUtil.encrypt(String.valueOf(tsPerSecond));
+        return HashUtil.SHA(serial + enc);
+    }
+
+    public static String getSecurityCode(String serial) {
+        long ts = System.currentTimeMillis() / 1000L;
+        long mod = ts % 60L;
+        long tsPerSecond = ts - mod;
+        String enc = AESUtil.encrypt(String.valueOf(tsPerSecond));
+        return HashUtil.SHA(serial + enc);
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/TEAV.java decompiled-9.3.9330/com/sonicwall/sgms/util/TEAV.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/TEAV.java	2023-09-08 15:13:13.324775894 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/TEAV.java	2023-09-08 15:14:40.288135489 -0700
@@ -3,29 +3,61 @@
  */
 package com.sonicwall.sgms.util;
 
+import com.sonicwall.sgms.util.AESUtil;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import java.math.BigInteger;
+import java.text.SimpleDateFormat;
+import java.util.Random;
+import java.util.TimeZone;
+
+public class TEAV
+extends KeyStotreUtil {
+    private static int[] _key;
+    private static byte[] _keyBytes;
+    private static int _padding;
+    protected static final char[] hex;
+    protected static final char[] nonHex;
+    protected static final char[] localNonHex;
 
-public class TEAV {
-    private int[] _key;
-    private byte[] _keyBytes;
-    private int _padding;
-    protected static final char[] hex = new char[]{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
-
-    public static void main(String[] args) {
-        String src = "hello world!";
-        if (args != null && args.length >= 1 && args[0] != null) {
-            src = args[0];
-        }
-        System.out.println("input = [" + src + "]");
-        String encoded = TEAV.encryptText(src);
-        System.out.println("Encrypted: " + encoded);
-        System.out.println("Decrypted: [" + TEAV.decryptText(encoded) + "]");
-        System.exit(0);
+    public static String encryptText(String input) {
+        String encString = AESUtil.encryptLocal(input);
+        if (encString != null) {
+            encString = TEAV.randomChar(localNonHex) + TEAV.toHexString(encString.getBytes());
+            return encString;
+        }
+        return TEAV.encryptTextInHex(input);
     }
 
-    public static String encryptText(String input) {
-        String keyString = "6751289138240981ac56d88f43abb87";
-        byte[] key = new BigInteger(keyString, 16).toByteArray();
+    public static String encryptTextInHex(String input) {
+        String encString = AESUtil.encrypt(input);
+        encString = TEAV.randomChar(nonHex) + TEAV.toHexString(encString.getBytes());
+        return encString;
+    }
+
+    public static String decryptText(String input) {
+        int encType = TEAV.encType(input.charAt(0));
+        if (encType > 0) {
+            String encString = TEAV.fromHexString(input.substring(1, input.length()));
+            return encType == 1 ? AESUtil.decrypt(encString) : AESUtil.decryptLocal(encString);
+        }
+        return TEAV.decryptTextTEA(input);
+    }
+
+    private static int encType(char i) {
+        for (char c : localNonHex) {
+            if (i != c) continue;
+            return 2;
+        }
+        for (char c : nonHex) {
+            if (i != c) continue;
+            return 1;
+        }
+        return 0;
+    }
+
+    @Deprecated
+    public static String encryptTextTEA(String input) {
+        byte[] key = new BigInteger(KeyStotreUtil.getValueFromKeystore("gms_encryption_secret"), 16).toByteArray();
         TEAV t = new TEAV(key);
         String src = "M" + input + "M";
         src = t.padPlaintext(src);
@@ -34,9 +66,9 @@
         return t.binToHex(enc);
     }
 
-    public static String decryptText(String input) {
-        String keyString = "6751289138240981ac56d88f43abb87";
-        byte[] key = new BigInteger(keyString, 16).toByteArray();
+    @Deprecated
+    public static String decryptTextTEA(String input) {
+        byte[] key = new BigInteger(KeyStotreUtil.getValueFromKeystore("gms_encryption_secret"), 16).toByteArray();
         TEAV t = new TEAV(key);
         int[] enc2 = t.hexToBin(input);
         byte[] dec = t.decode(enc2);
@@ -44,29 +76,29 @@
         return decoded.substring(1, decoded.length() - 1);
     }
 
-    public TEAV(byte[] key) {
+    private TEAV(byte[] key) {
         int klen = key.length;
-        this._key = new int[4];
+        _key = new int[4];
         if (klen != 16) {
-            throw new ArrayIndexOutOfBoundsException(this.getClass().getName() + ": Key is not 16 bytes");
+            throw new ArrayIndexOutOfBoundsException(this.getClass().getName() + ": Key is not 16 bytes instead it is " + klen);
         }
         int i = 0;
         int j = 0;
         while (j < klen) {
-            this._key[i] = key[j] << 24 | (key[j + 1] & 0xFF) << 16 | (key[j + 2] & 0xFF) << 8 | key[j + 3] & 0xFF;
+            TEAV._key[i] = key[j] << 24 | (key[j + 1] & 0xFF) << 16 | (key[j + 2] & 0xFF) << 8 | key[j + 3] & 0xFF;
             j += 4;
             ++i;
         }
-        this._keyBytes = key;
+        _keyBytes = key;
     }
 
     public TEAV(int[] key) {
-        this._key = key;
+        _key = key;
     }
 
     public String toString() {
         String tea = this.getClass().getName();
-        tea = tea + ": Tiny Encryption Algorithm (TEA)  key: " + this.getHex(this._keyBytes);
+        tea = tea + ": Tiny Encryption Algorithm (TEA)  key: " + this.getHex(_keyBytes);
         return tea;
     }
 
@@ -77,7 +109,7 @@
         int delta = -1640531527;
         int n = 32;
         while (n-- > 0) {
-            z += ((y += (z << 4 ^ z >>> 5) + (z ^ sum) + this._key[sum & 3]) << 4 ^ y >>> 5) + (y ^ (sum += delta)) + this._key[sum >>> 11 & 3];
+            z += ((y += (z << 4 ^ z >>> 5) + (z ^ sum) + _key[sum & 3]) << 4 ^ y >>> 5) + (y ^ (sum += delta)) + _key[sum >>> 11 & 3];
         }
         int[] w = new int[]{y, z};
         return w;
@@ -90,7 +122,7 @@
         int delta = -1640531527;
         int n = 32;
         while (n-- > 0) {
-            y -= ((z -= (y << 4 ^ y >>> 5) + (y ^ sum) + this._key[sum >>> 11 & 3]) << 4 ^ z >>> 5) + (z ^ (sum -= delta)) + this._key[sum & 3];
+            y -= ((z -= (y << 4 ^ y >>> 5) + (y ^ sum) + _key[sum >>> 11 & 3]) << 4 ^ z >>> 5) + (z ^ (sum -= delta)) + _key[sum & 3];
         }
         int[] w = new int[]{y, z};
         return w;
@@ -99,10 +131,10 @@
     public int[] encode(byte[] b, int count) {
         int bLen = count;
         byte[] bp = b;
-        this._padding = bLen % 8;
-        if (this._padding != 0) {
-            this._padding = 8 - bLen % 8;
-            bp = new byte[bLen + this._padding];
+        _padding = bLen % 8;
+        if (_padding != 0) {
+            _padding = 8 - bLen % 8;
+            bp = new byte[bLen + _padding];
             System.arraycopy(b, 0, bp, 0, bLen);
             bLen = bp.length;
         }
@@ -124,7 +156,7 @@
     }
 
     public int padding() {
-        return this._padding;
+        return _padding;
     }
 
     public byte[] decode(byte[] b, int count) {
@@ -320,5 +352,34 @@
     public String padPlaintext(String str) {
         return this.padPlaintext(str, ' ');
     }
+
+    private static char randomChar(char[] charArray) {
+        int rnd = new Random().nextInt(charArray.length);
+        return charArray[rnd];
+    }
+
+    public static String toHexString(byte[] input) {
+        StringBuilder str = new StringBuilder();
+        for (int i = 0; i < input.length; ++i) {
+            str.append(String.format("%X", input[i]));
+        }
+        return str.toString();
+    }
+
+    public static String fromHexString(String hex) {
+        StringBuilder str = new StringBuilder();
+        for (int i = 0; i < hex.length(); i += 2) {
+            str.append((char)Integer.parseInt(hex.substring(i, i + 2), 16));
+        }
+        return str.toString();
+    }
+
+    static {
+        df = new SimpleDateFormat("MMYYYYddHHmm");
+        df.setTimeZone(TimeZone.getTimeZone("IST"));
+        hex = new char[]{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
+        nonHex = new char[]{'S', 'O', 'N', 'I', 'W', 'L', 'G', 'M', 'V', 'P', 'H', 'R', 'T'};
+        localNonHex = new char[]{'X', 'Z', 'Y'};
+    }
 }
 
Only in decompiled-9.3.9330/com/sonicwall/sgms/util: TwoFactAuthUtil.java
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/util/ZipUtilities.java decompiled-9.3.9330/com/sonicwall/sgms/util/ZipUtilities.java
--- decompiled-9.3.9320/com/sonicwall/sgms/util/ZipUtilities.java	2023-09-08 15:13:13.225772063 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/util/ZipUtilities.java	2023-09-08 15:14:40.187261428 -0700
@@ -3,6 +3,7 @@
  */
 package com.sonicwall.sgms.util;
 
+import com.sonicwall.appliance.logging.LogUtil;
 import com.sonicwall.sgms.util.SGMSUtil;
 import java.io.DataInputStream;
 import java.io.File;
@@ -14,6 +15,8 @@
 import java.util.ArrayList;
 import java.util.Enumeration;
 import java.util.Vector;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipException;
 import java.util.zip.ZipFile;
@@ -166,6 +169,10 @@
                 while ((entry = in.getNextEntry()) != null) {
                     int len;
                     String outFilename = entry.getName();
+                    boolean dirTraversalCheck = ZipUtilities.directoryTraversalCheck(outFilename);
+                    if (!dirTraversalCheck) {
+                        throw new Exception("Zip file contains directory traversal " + outFilename);
+                    }
                     File file = new File(outputDir + File.separator + outFilename);
                     if (entry.isDirectory()) {
                         if (file.exists()) continue;
@@ -196,5 +203,14 @@
         }
         return filesExtracted;
     }
+
+    public static boolean directoryTraversalCheck(String fileName) {
+        boolean directoyCheck = false;
+        Pattern pattern = Pattern.compile("\\.\\./|/\\.\\.|\\.{2}|\\.\\.\\\\|\\\\");
+        Matcher matcher = pattern.matcher(fileName);
+        directoyCheck = !matcher.find();
+        LogUtil.debugOut((Object)("ApplianceUtil.directoryTravarsalCheck(): directoyCheck: " + directoyCheck), 2);
+        return directoyCheck;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/workflow/task/PerformTaskBuilder.java decompiled-9.3.9330/com/sonicwall/sgms/workflow/task/PerformTaskBuilder.java
--- decompiled-9.3.9320/com/sonicwall/sgms/workflow/task/PerformTaskBuilder.java	2023-09-08 15:13:14.191809436 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/workflow/task/PerformTaskBuilder.java	2023-09-08 15:14:41.154054410 -0700
@@ -126,6 +126,11 @@
                 String screenID2;
                 String session_id;
                 String fwdyndatatype;
+                block254: {
+                    block253: {
+                        block252: {
+                            block251: {
+                                block250: {
                 block249: {
                     block248: {
                         block247: {
@@ -1788,7 +1793,7 @@
                     set_param_values[5] = sesssuffix;
                     break block161;
                 }
-                if (fwdyndatatype.equalsIgnoreCase("SNWLSwitchStatusInfo")) {
+                                    if (!fwdyndatatype.equalsIgnoreCase("SNWLSwitchStatusInfo")) break block250;
                     set_param_names = new String[3];
                     set_param_values = new String[3];
                     set_param_names[0] = "action";
@@ -1798,7 +1803,8 @@
                     set_param_names[2] = "dataowner";
                     set_param_values[2] = screenID2;
                     break block161;
-                } else if ("FetchSwitchDynMacAddressesInfo".equalsIgnoreCase(fwdyndatatype) || "FetchSwitchStatisticsInfo".equalsIgnoreCase(fwdyndatatype)) {
+                                }
+                                if (!"FetchSwitchDynMacAddressesInfo".equalsIgnoreCase(fwdyndatatype) && !"FetchSwitchStatisticsInfo".equalsIgnoreCase(fwdyndatatype)) break block251;
                     String switchID = req.getParameter("switchID");
                     set_param_names = new String[4];
                     set_param_values = new String[4];
@@ -1811,6 +1817,63 @@
                     set_param_names[3] = "switchId";
                     set_param_values[3] = switchID;
                     break block161;
+                            }
+                            if (!"connection-status".equalsIgnoreCase(fwdyndatatype)) break block252;
+                            set_param_names = new String[3];
+                            set_param_values = new String[3];
+                            set_param_names[0] = "action";
+                            set_param_values[0] = fwdyndatatype;
+                            set_param_names[1] = "sessionid";
+                            set_param_values[1] = session_id;
+                            set_param_names[2] = "dataowner";
+                            set_param_values[2] = screenID2;
+                            break block161;
+                        }
+                        if (!"storageState".equalsIgnoreCase(fwdyndatatype)) break block253;
+                        set_param_names = new String[3];
+                        set_param_values = new String[3];
+                        set_param_names[0] = "action";
+                        set_param_values[0] = fwdyndatatype;
+                        set_param_names[1] = "sessionid";
+                        set_param_values[1] = session_id;
+                        set_param_names[2] = "dataowner";
+                        set_param_values[2] = screenID2;
+                        break block161;
+                    }
+                    if (!"getScanningHistory".equalsIgnoreCase(fwdyndatatype)) break block254;
+                    String postData = req.getParameter("postData");
+                    set_param_names = new String[4];
+                    set_param_values = new String[4];
+                    set_param_names[0] = "action";
+                    set_param_values[0] = fwdyndatatype;
+                    set_param_names[1] = "sessionid";
+                    set_param_values[1] = session_id;
+                    set_param_names[2] = "dataowner";
+                    set_param_values[2] = screenID2;
+                    set_param_names[3] = "postData";
+                    set_param_values[3] = postData;
+                    break block161;
+                }
+                if ("getRFAnalysisView".equalsIgnoreCase(fwdyndatatype) || "getWWanStatus".equalsIgnoreCase(fwdyndatatype) || "getWlanSonicWaveBle".equals(fwdyndatatype) || "getSpUsbModemStatus".equals(fwdyndatatype) || "getGuestUserStatus".equals(fwdyndatatype)) {
+                    set_param_names = new String[3];
+                    set_param_values = new String[3];
+                    set_param_names[0] = "action";
+                    set_param_values[0] = fwdyndatatype;
+                    set_param_names[1] = "sessionid";
+                    set_param_values[1] = session_id;
+                    set_param_names[2] = "dataowner";
+                    set_param_values[2] = screenID2;
+                    break block161;
+                } else if ("getSwitchDiagnostics".equalsIgnoreCase(fwdyndatatype)) {
+                    set_param_names = new String[3];
+                    set_param_values = new String[3];
+                    set_param_names[0] = "action";
+                    set_param_values[0] = fwdyndatatype;
+                    set_param_names[1] = "sessionid";
+                    set_param_values[1] = session_id;
+                    set_param_names[2] = "dataowner";
+                    set_param_values[2] = screenID2;
+                    break block161;
                 } else {
                     req.setAttribute("messagetype", 100);
                     if ("10883".equals(screenID2)) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/sgms/workflow/task/UpdateObjectTaskBuilder.java decompiled-9.3.9330/com/sonicwall/sgms/workflow/task/UpdateObjectTaskBuilder.java
--- decompiled-9.3.9320/com/sonicwall/sgms/workflow/task/UpdateObjectTaskBuilder.java	2023-09-08 15:13:14.192809475 -0700
+++ decompiled-9.3.9330/com/sonicwall/sgms/workflow/task/UpdateObjectTaskBuilder.java	2023-09-08 15:14:41.156051916 -0700
@@ -38,6 +38,7 @@
 import java.sql.SQLException;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Base64;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -512,7 +513,7 @@
                         }
                     }
                 } else {
-                    pName = req.getParameter(currentServletPName);
+                    pName = inheritSubAction && screen_id.equals("9000") ? new String(Base64.getDecoder().decode(req.getParameter(currentServletPName)), "UTF-8") : req.getParameter(currentServletPName);
                 }
                 st = new TokenizeWithNulls(pName, sep, "");
                 paramCounter = 0;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/bean/I18nBundle_en_US.java decompiled-9.3.9330/com/sonicwall/viewpoint/bean/I18nBundle_en_US.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/bean/I18nBundle_en_US.java	2023-09-08 15:13:15.450987026 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/bean/I18nBundle_en_US.java	2023-09-08 15:14:42.239699007 -0700
@@ -7,7 +7,7 @@
 
 public class I18nBundle_en_US
 extends ListResourceBundle {
-    private static final Object[][] contents = new Object[][]{{"OK", "OK"}, {"YES", "yes"}, {"NO", "no"}, {"TO", " to "}, {"FROM", " from "}, {"FOR", " for "}, {"AS_OF", " as of "}, {"NONE", " none "}, {"CANCEL", "Cancel"}, {"UNKNOWN", "Unknown"}, {"USAGE", "Usage"}, {"OTHER", "Other"}, {"SDM_READY", "Ready"}, {"NAV_OF", " of "}, {"NAV_PREVIOUS", "Previous"}, {"NAV_NEXT", "Next"}, {"NAV_DISPLAYING", "Displaying"}, {"NAV_FIREWALLS", "Firewall(s)"}, {"REPORT_DETAILED_HEADER", "records are shown as detailed information"}, {"OF_THE_MONTH", "of the Month"}, {"BANDWIDTH_M_BY_HR", "Bandwidth MBytes by Hour of Day"}, {"BANDWIDTH_TITLE", "SonicWall Analyzer 2 - Bandwidth - Bandwidth Summary"}, {"BANDWIDTH_SUM_FOR", "Bandwidth Summary for "}, {"BANDWIDTH_SUM_STR", "Bandwidth Summary"}, {"BANDWIDTH_MB_TRANS", "MBytes"}, {"BANDWIDTH_MB", "MBytes"}, {"MBYTES_TRANS", "MBytes"}, {"KBYTES_TRANS", "KBytes"}, {"ELAPSED_TIME", "Elapsed Time"}, {"UP_TIME", "Up Time"}, {"DOWN_TIME", "Down Time"}, {"TIMEZONE_MSG", "Report produced for timezone: "}, {"REPORTS_BASED_ON_MSG", "Reports generated based on data summarized on: "}, {"REPORT_GENERATED_IN_MSG", "Report generated in: "}, {"ABBREV_SECONDS", "secs."}, {"BANDWIDTH_TIMEZONE", "Report produced for timezone"}, {"FULLURL_DISABLED_NOTE", "Full URL option is currently DISABLED. <br>&nbsp;&nbsp;&nbsp; (To enable this option, please go to the Console Panel->Reports->Summarizer screen)."}, {"CAL_SUN", "Sun"}, {"CAL_MON", "Mon"}, {"CAL_TUE", "Tue"}, {"CAL_WED", "Wed"}, {"CAL_THU", "Thu"}, {"CAL_FRI", "Fri"}, {"CAL_SAT", "Sat"}, {"CAL_JAN", "January"}, {"CAL_FEB", "February"}, {"CAL_MAR", "March"}, {"CAL_APR", "April"}, {"CAL_MAY", "May"}, {"CAL_JUN", "June"}, {"CAL_JUL", "July"}, {"CAL_AUG", "August"}, {"CAL_SEP", "September"}, {"CAL_OCT", "October"}, {"CAL_NOV", "November"}, {"CAL_DEC", "December"}, {"SUMM_NO_DATA", "No data available."}, {"SUMM_SUMMARIZED", "No Data Available."}, {"SUMM_NO_DATA_GROUP_LEVEL", "No Data Available for one or more appliance(s)."}, {"SUMM_NOT_SUMMARIZED", "Raw data exists for the firewall(s), however it has not been summarized (Go to Console Panel->Reports->Summarizer and click on [Summarize Now] button in Reports Data Summarization Interval section "}, {"SUMM_SUMMARIZER_RUNNING", "Report cannot be displayed at this time because Summarizer is currently running."}, {"SUMM_NO_RAW_DATA", "No raw data has been received from the firewall(s).  Check firewall and syslog settings."}, {"REP_TYPE_NOT_SUPPORTED", "This report is supported only for the SonicOS Enhanced type of firmware. Check documentation for a list of supported firmware versions."}, {"REP_NOT_SUPPORTED", "This report is not supported."}, {"REP_TYPE_NOT_SUPPORTED_FOR_CFA", "This report is not supported for the Content Filter Appliance."}, {"NO_UNITS_IN_GROUP", "There are no firewalls under management in this group."}, {"SUMM_UNKNOWN", "An unknown error has occurred while generating the report."}, {"SUMM_DISABLED", "Summarization has been disabled for this report."}, {"SUMM_DISABLED_SCHED", "Summarization has been disabled for one or more reports."}, {"SUMM_SYSLOG_SERVER", "Syslog servers may not have been enabled on the appliance, or Syslog messages are not reaching the server."}, {"SUMM_STATUS_ONLY", " The appliance is configured to only send status messages."}, {"SUMM_APPLIANCE_DOWN", " The appliance is down."}, {"SUMM_APPLIANCE_PROVISONED", " The appliance is in provisioned state."}, {"SUMM_APPLIANCE_CHECKSTATUS", "  For more information "}, {"SUMM_LAST_SUMMARIZATION", " Last summarization happened @ "}, {"SUMM_FIREWALL_NOT_LICENSED", "Appliance not licensed for Analyzer."}, {"SUMM_FIREWALL_NOT_REGISTERED", "This appliance has not been registered. Please visit MySonicWall.com and register the appliance before adding it to Analyzer."}, {"SUMM_BACKEND_COMM_FAILURE", "Analyzer is unable to communicate with MySonicWall.com to verify the license.\nPlease check your network connection; the Analyzer server must be able to communicate with MySonicWall.com. "}, {"LOGVIEWER_SETTINGS_TITLE", "Data Storage Configuration"}, {"LOGVIEWER_SETTINGS_NOTE", "Limiting the number of days to store will increase the overall performance of your Analyzer system<br>&nbsp;&nbsp;&nbsp;and limits the size of the Database"}, {"LOGVIEWER_SETTINGS_NOTE_NO_LIMIT", "Limiting the number of days to store will increase the overall performance of your GMS system<br>&nbsp;&nbsp;&nbsp;and limits the size of the Database"}, {"LOGVIEWER_SETTINGS_LABEL_NOTE", "Note:"}, {"LOGVIEWER_SETTINGS_LABEL_DELETION_TIME", "Deletion of data occurs everyday at: "}, {"LOGVIEWER_SETTINGS_NOTE_DELETION_TIME", "To change the scheduled deletion time, please go to the Console Panel->Reports->Summarizer screen <br>&nbsp;&nbsp;&nbsp;(Delete Data Daily At settings)."}, {"LOGVIEWER_SETTINGS_STORAGE", "Days To Store Raw Syslog Databases: "}, {"LOGVIEWER_SETTINGS_VALIDATIONALERT1", "Days To Store Raw Data"}, {"LOGVIEWER_SETTINGS_VALIDATIONALERT2", "Days To Store Raw Data must be at least 3 or 'All' string. Please re-enter the value."}, {"LOGVIEWER_SETTINGS_LIMIT_NOTE", "Limiting the number of appliances for which the Log Viewer is enabled will increase the overall performance of<br>&nbsp;&nbsp;&nbsp; your Analyzer system and limit the size of the Database."}, {"LOGVIEWER_SETTINGS_LIMIT_NOTE1", "Limiting the number of appliances for which the Log Viewer is enabled will increase the overall performance of<br>&nbsp;&nbsp;&nbsp; your GMS system and limit the size of the Database."}, {"LOGVIEWER_SETTINGS_VALIDATIONALERT3", "Limit must be a numeric value. Please re-enter value"}, {"LOGVIEWER_SETTINGS_STORAGE_RAW_FILES", "Days To Store Raw Data Files: "}, {"LOGVIEWER_SETTINGS_VALIDATIONALERT4", "Days To Store Raw Syslog Files must be at least 3 or 'All' string. Please re-enter the value."}, {"LOGVIEWER_SETTINGS_STATUSMSG1", "The amount of days to retain raw syslog data will be changed."}, {"LOGVIEWER_SETTINGS_STATUSMSG2_1", "This operation would retain raw data corresponding to the last "}, {"LOGVIEWER_SETTINGS_STATUSMSG2_2", " days only. Syslog data older than "}, {"LOGVIEWER_SETTINGS_STATUSMSG2_3", " days will be deleted if the value you entered is lower than before."}, {"LOGVIEWER_SETTINGS_STATUSMSG3", "This operation would retain all the syslog data in the database. Depending on the amount of syslog data that your Server collects, the harddisk on the database server could get filled up eventually."}, {"LOGVIEWER_SETTINGS_STATUSMSGCONF", "Are you sure you want to change this setting?"}, {"LOGVIEWER_SETTINGS_STATUSMSG4", "The amount of days to retain raw syslog files will be changed."}, {"LOGVIEWER_SETTINGS_STATUSMSG5_1", "This operation would retain raw syslog files corresponding to the last "}, {"LOGVIEWER_SETTINGS_STATUSMSG5_2", " days only. Raw syslog files older than "}, {"LOGVIEWER_SETTINGS_STATUSMSG6", "This operation would retain all the syslogs on disk. Depending on the amount of syslogs that your Server collects, the harddisk on the database server could get filled up eventually."}, {"LOGVIEWER_SEARCHRESULT_TITLE", "Log Search Results for "}, {"LOGVIEWER_SEARCH_STARTDT", "Start Date:"}, {"LOGVIEWER_SEARCH_STARTTM", "Start Time:"}, {"LOGVIEWER_SEARCH_ENDDT", "End Date:"}, {"LOGVIEWER_SEARCH_ENDTM", "End Time:"}, {"LOGVIEWER_SEARCH_MESSAGECATEGORY", "Message Category:"}, {"LOGVIEWER_SEARCH_SOURCEIP", "Source IP:"}, {"LOGVIEWER_SEARCH_SOURCEIP_USER", "Source IP/User:"}, {"LOGVIEWER_SEARCH_USER", "User:"}, {"LOGVIEWER_SEARCH_DESTIP_HOSTNAME", "Destination IP/Hostname:"}, {"LOGVIEWER_SEARCH_SOURCEPORT", "Source Port:"}, {"LOGVIEWER_SEARCH_DESTPORT", "Destination Port:"}, {"LOGVIEWER_SEARCH_MESSAGE1", "Message Text:"}, {"LOGVIEWER_SEARCH_MESSAGE2", "(blank for all)"}, {"LOGVIEWER_SEARCH_MATCHCASE", "Match case:"}, {"LOGVIEWER_SEARCH_RESULTSPERPAGE", "Results Per Page:"}, {"LOGVIEWER_SEARCH_GENERATE_REPORT", "Generate Report"}, {"LOGVIEWER_SEARCH_NOTE", "Note: Specifying date, time, IP address, and Message Category will result in faster report generation."}, {"LOGVIEWER_SEARCH_TITLE", "Select Search Criteria"}, {"LOGVIEWER_SEARCH_UNKNOWN", "Unknown error searching logs."}, {"LOGVIEWER_SEARCH_TOO_MANY", "Too many results were found; please be more specific."}, {"LOGVIEWER_SEARCH_LOG_VWR_SETTINGS", "Log Viewer Settings"}, {"LOGVIEWER_SEARCH_ENABLE_LOG_VIEW", "Enable Log Viewer"}, {"LOGVIEWER_SEARCH_SCREEN_NOT_AVAILABLE", "This screen is not supported."}, {"LOGVIEWER_SEARCH_LOG_SEARCH_AS_OF", "Log search results as of: "}, {"LOG_VIEW_LIMIT_REACHED_MSG", "The maximum limit of appliances for which the Log Viewer can be enabled has been reached.<p>To check which appliances have the Log Viewer enabled, please change the view to LogViewer View.<p>To change the Log Viewer appliance limit, navigate to Console->Reports->Settings"}, {"LOG_VIEW_LIMIT_REACHED_MSG_VP", "The maximum limit of appliances for which the Log Viewer can be enabled has been reached.<p>To change the Log Viewer appliance limit, navigate to Console->Reports->Settings"}, {"LOGVIEWER_APPLIANCE_TZ", "Appliance Timezone:"}, {"DB_MAINTENANCE_BACKUP_SCHEDULE_TITLE", "Database Backup Schedule"}, {"DB_MAINTENANCE_BACKUP_SETTINGS", "Database Backup Settings"}, {"DB_MAINTENANCE_IMM_BACKUP", "Immediate Database Backup"}, {"DB_MAINTENANCE_BACKUP_TYPE", "Database Backup Type:"}, {"DB_MAINTENANCE_BACKUP_SCHEDULE", "Database Backup Schedule:"}, {"DB_MAINTENANCE_BACKUP_FOLDER", "Backup files to directory [installDir]:"}, {"DB_MAINTENANCE_BACKUP_ZIP", "Zip files"}, {"DB_MAINTENANCE_BACKUP_TYPE_BASIC", "Current data"}, {"DB_MAINTENANCE_BACKUP_TYPE_RAW", "Archived and Raw syslog data"}, {"DB_MAINTENANCE_BACKUP_TYPE_COMP", "Complete data"}, {"DB_MAINTENANCE_BACKUP_DAYS_LIMIT", "Number of backups to store:"}, {"DB_MAINTENANCE_BACKUP_DAYS_LIMIT_NOTE", "Note: The number of backup files to store determines how many database backups will be retained in the backup directory. The maximum value is 3."}, {"DB_MAINTENANCE_BACKUP_DIR_CHANGE_NOTE", "Database backup files will not be deleted if the backup directory is changed."}, {"DB_MAINTENANCE_BACKUP_DAYS_MAX_LIMIT_MESSAGE", "The number of backup files to store is not within the allowed limits"}, {"DB_MAINTENANCE_BACKUP_IMM", "Backup database now:"}, {"DB_MAINTENANCE_RESTORE", "Database Restore"}, {"DB_MAINTENANCE_RESTORE_NOTE", "No backup files available in the backup directory"}, {"DB_MAINTENANCE_BACKUP_NOTE", "Note: The backup method selected will impact the time taken for the backup operation to run and the size of the backup files.<br>The different backup options are:<br>1. Current data: Backs up the appliance information and reports data.<br>2. Archived and Raw syslog data: Backs up all the archived and raw syslog data.<br>3. Complete data: Backs up all the data. Slowest since it does a complete backup."}, {"DB_MAINTENANCE_SCHEDULE_CONF_MSG", "Are you sure you want to change the database backup task schedule?"}, {"DB_MAINTENANCE_BACKUP_MSG", "Are you sure you want to change the database settings?"}, {"DB_MAINTENANCE_BACKUP_IMM_CONF_MSG", "Are you sure you want to backup the database now?"}, {"DB_MAINTENANCE_RESTORE_CONF_MSG", "Are you sure you want to restore the database to the selected file?"}, {"DB_MAINTENANCE_BACKUP_IMM_SUCCESS_MSG", "Database has been scheduled for immediate backup."}, {"DB_MAINTENANCE_RESTORE_SUCCESS_MSG", "Database restoration has started."}, {"DB_MAINTENANCE_RESTORE_INCOMPATIBLE", "The file specified is not compatible with this release."}, {"DB_MAINTENANCE_STATS_NOTE", "Run Time"}, {"DB_MAINTENANCE_HDR_FILENAME", "Filename"}, {"DB_MAINTENANCE_HDR_TYPE", "Type"}, {"DB_MAINTENANCE_HDR_DATE", "Date"}, {"DB_MAINTENANCE_HDR_PRODUCT", "Product"}, {"DB_MAINTENANCE_HDR_VERSION", "Version"}, {"DB_MAINTENANCE_HDR_SIZE", "Size"}, {"DB_MAINTENANCE_STATS_BACKUP_RUN", "Last Backup Run"}, {"DB_MAINTENANCE_STATS_RESTORE_RUN", "Last Restore Run"}, {"DB_MAINTENANCE_STATS_DB_SIZE", "Database size: "}, {"DB_MAINTENANCE_STATS_RESTORE_FILE_SIZE", "Restore file size: "}, {"DB_MAINTENANCE_BTN_SCHED", "Update Backup Schedule"}, {"DB_MAINTENANCE_BTN_SETTINGS", "Update Backup Settings"}, {"DB_MAINTENANCE_BTN_IMM", "Backup Database Immediately"}, {"DB_MAINTENANCE_BTN_RESTORE", "Restore Database"}, {"DB_MAINTENANCE_SCHEDULES_NOTE", "Note: A default schedule has been selected for database backup. Schedules can be configured from the Console->Events->Schedule screen."}, {"DB_MAINTENANCE_RESTORE_NOTE2", "Note: The database will go off line for the restore process. The restore process may take some time depending on the size of the database. The metrics below indicate how much time might be taken. You can view the status of the restore from the Console->Log screen once the restore is complete."}, {"REALTIMEVIEWER_SYSLOG_CURRENT_STATUS", "Current Status"}, {"REALTIMEVIEWER_SYSLOG_SYS_READER_CONFG", "Syslog Reader Configuration"}, {"REALTIMEVIEWER_SYSLOG_ENABLE_SYSLOG_FORWARDING", "Enable Syslog Forwarding"}, {"REALTIMEVIEWER_SYSLOG_ENABLE_SYSLOG_FORWARDING_ALERT", "Syslog Viewer uses syslogs forwarded from the Syslog Collector for viewing.\\n\\nNote: Enabling this option will forward syslogs received by all Syslog Collector services\\nin a deployment to the Web Server. This will increase the syslog traffic across the network,\\nsince every message is cloned by the Syslog Collector for event handling."}, {"REALTIMEVIEWER_SYSLOG_IP_ADDRESS_COLON", "IP Address:"}, {"REALTIMEVIEWER_SYSLOG_ENABLE_PORT_COLON", "Port:"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_ENABLED_IP_ADDR_COLON", "Syslog forwarding is enabled (IP Address:"}, {"REALTIMEVIEWER_SYSLOG_SYS_READER_CURRENTLY", "Syslog Reader is currently "}, {"REALTIMEVIEWER_SYSLOG_SHOW_SYS_VIEWER_WINDOW", "Show Syslog Viewer Window"}, {"REALTIMEVIEWER_SYSLOG_NOT", "NOT "}, {"REALTIMEVIEWER_SYSLOG_RUNNING", "running."}, {"REALTIMEVIEWER_SYSLOG_PLEASE_START_SYS_READER", "Please start the Syslog Reader."}, {"REALTIMEVIEWER_SYSLOG_PRIVILEGE_MSG", "If you do not have sufficient privileges, please contact the administrator)."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Syslog Forwarding is not enabled."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Please configure the Syslog Forwarding address and port, and start the Syslog Reader."}, {"REALTIMEVIEWER_SYSLOG_IP_ADDR_SPECS_NOTIFICATION", "The IP Address specified should be the Console/Web Server IP address."}, {"REALTIMEVIEWER_SYSLOG_RECOMMENTED_PORT_NUMBER", "(Recommended value for port is 21007)."}, {"REALTIMEVIEWER_SYSLOG_TIME_TO_UPDATE_MSG", "It may take a few minutes for the system to update the new configuration."}, {"REALTIMEVIEWER_SYSLOG_START_SYS_READER", "Start Syslog Reader"}, {"REALTIMEVIEWER_SYSLOG_STOP_SYS_READER", "Stop Syslog Reader"}, {"REALTIMEVIEWER_SYSLOG_NUM_OF_MSGS", "Number Of Messages:"}, {"REALTIMEVIEWER_SYSLOG_REFRESH_TIME_COLON", "Refresh Time:"}, {"REALTIMEVIEWER_SYSLOG_SECONDS", "seconds"}, {"REALTIMEVIEWER_SYSLOG_FILTER_COLON", "Filter:"}, {"REALTIMEVIEWER_SYSLOG_NAVIGATE_ALERT", "Please disable Syslog Forwarding before navigating away from this screen."}, {"REALTIMEVIEWER_SYSLOG_START_ALERT1", "Are you sure you want to start the Syslog Reader now?"}, {"REALTIMEVIEWER_SYSLOG_START_ALERT2", "(Note: If the configuration was just changed,"}, {"REALTIMEVIEWER_SYSLOG_START_ALERT3", "the Syslog Reader may not start successfully"}, {"REALTIMEVIEWER_SYSLOG_START_ALERT4", "since it takes a few minutes for the system to update "}, {"REALTIMEVIEWER_SYSLOG_START_ALERT5", "the configuration)."}, {"REALTIMEVIEWER_SYSLOG_STOP_ALERT1", "Stopping the Syslog Reader will no longer allow you to "}, {"REALTIMEVIEWER_SYSLOG_STOP_ALERT2", "view the syslog in real time."}, {"REALTIMEVIEWER_SYSLOG_STOP_ALERT3", "Are you sure you want to stop the Syslog Reader now?"}, {"REALTIMEVIEWER_SYSLOG_CHANGE_ALERT1", "Are you sure you want to change the Syslog Reader Configuration?"}, {"REALTIMEVIEWER_SYSLOG_CHANGE_ALERT2", "(Note: The Syslog Reader will be stopped. "}, {"REALTIMEVIEWER_SYSLOG_CHANGE_ALERT3", "You can restart the Syslog Reader from this screen"}, {"REALTIMEVIEWER_SYSLOG_CHANGE_ALERT4", "after the configuration has been successfully updated.)"}, {"REALTIMEVIEWER_SYSLOG_DOCK", "Dock"}, {"REALTIMEVIEWER_SYSLOG_CLEAR_BUFFER_WARNING", "This action would clear the existing Syslog Buffer. Do you want to continue?"}, {"REALTIMEVIEWER_SYSLOG_TIP_MESSAGE1", "Use filters to display only relevant syslog packets. Two Examples: "}, {"REALTIMEVIEWER_SYSLOG_TIP_MESSAGE2", "1. <font color=blue>sn=004011121122 AND m=537</font> "}, {"REALTIMEVIEWER_SYSLOG_TIP_MESSAGE3", "2. <font color=red>c=128 OR m=181 OR proto=udp/ntp</font>"}, {"REALTIMEVIEWER_SYSLOG_START_TAILING", "Start Tailing"}, {"REALTIMEVIEWER_SYSLOG_PAUSE", "Pause"}, {"SETTINGS_INTERFACE_SELECT", "Select Interfaces"}, {"SETTINGS_INTERFACE_SOURCE", "Source"}, {"SETTINGS_INTERFACE_DESTINATION", "Destination"}, {"SETTINGS_INTERFACE_DIRECTION", "Bi-directional"}, {"SETTINGS_INTERFACE_GENERATE", "Generate Report"}, {"SETTINGS_INTERFACE_CLOSE", "Close"}, {"SETTINGS_INTERFACE_ALERT1", "Both Source and Destination Interfaces are same"}, {"SETTINGS_TITLE", "Report Settings"}, {"SETTINGS_DATE_TITLE", "Select Report Date"}, {"SETTINGS_DATE_TITLE1", "Analyzer Date Selector"}, {"SETTINGS_DATERANGE_TITLE", "Analyzer Date Range Selector"}, {"SETTINGS_TITLE1", "Report Display Settings"}, {"SETTINGS_VIEW", "Display Type"}, {"SETTINGS_USERS", "Number of Users"}, {"SETTINGS_ALL_WARNING_MESSAGE1", "Are you sure you want to select the option All?"}, {"SETTINGS_ALL_WARNING_MESSAGE2", "The report could take longer to load with this option."}, {"SETTINGS_SITES_PER_USER", "Number of Sites per User"}, {"SETTINGS_USERS_PER_SITE", "Number of Users Per Site"}, {"SETTINGS_ATTACK_CATEGORIES", "Number of Attack Categories"}, {"SETTINGS_SITES", "Number of Sites"}, {"SETTINGS_SELECT_USERS", "Select Users (comma separated)"}, {"SETTINGS_SELECT_SITES", "Select Site (comma separated)"}, {"SETTINGS_SELECT_DATERANGE", "Select date range"}, {"SETTINGS_SELECT_DATERANGE_ALERT", "Start Date should be less than End Date"}, {"SETTINGS_SELECT_DATERANGE_CONFIRMATION1", "Are you sure you want to select this date range?"}, {"SETTINGS_SELECT_DATERANGE_CONFIRMATION2", "The report could take longer to load with larger date ranges."}, {"SETTINGS_SELECT_ENDDT", "End Date"}, {"SETTINGS_SELECT_STARTDT", "Start Date"}, {"SETTINGS_SELECT_DATERANGE_ALERT1", "Error setting date range."}, {"SETTINGS_ITEMS", "Number of Items"}, {"SETTINGS_ENTRIES", "Entries Per Item"}, {"SETTINGS_SELECT_HOUR", "Select Hour (Begin:End)"}, {"SETTINGS_OR", "OR"}, {"SETTINGS_SELECT_LAST_NOTE", "(Note: Last Summarized report date is the top-most date under the Start or End Date range tables.)"}, {"SETTINGS_SELECT_LAST_STR_1", "Select last "}, {"SETTINGS_SELECT_LAST_STR_2", " days before last summarization"}, {"SETTINGS_WHOLE_NAME_IP", "Whole Name/IP"}, {"GEN1_SUPPORT_ONLY", "This screen is not available for systems configured with Distributed Summarizer."}, {"DISTRIBUTED_SUPPORT_ONLY", "This screen only available for systems configured with Distributed Summarizer."}, {"FIREWALL_NOT_LICENCED_FOR_VIEWPOINT", "This appliance is not licensed for Analyzer Reporting"}, {"FIREWALL_NOT_LICENCED_FOR_VIEWPOINT_GROUP", "At least one appliance is not licensed for Analyzer Reporting"}, {"REPORT_DATE_ALERT", "Error setting date."}, {"FIREWALL_NOT_LICENCED_LINK", "Click here to go to the General->Status page and look under \"Not Licensed\" section for steps to resolve the issue"}, {"NUM_PACKETS", "Number of Packets"}, {"OF", " of "}, {"ATTACK_TITLE", "Attempted Attacks"}, {"ATTACK_ERROR_STR", "Summary of Exceptions"}, {"ATTACK_EVENTS", "Attack Events"}, {"ATTACK_BY_DAY", "Attacks by Day"}, {"ATTACK_BY_CATEGORY", "Attacks by Category for "}, {"ATTACK_NUM_OF", "Number of Attack Events"}, {"ATTACK_CATEGORIES", "Attack Categories"}, {"ATTACK_TOP_FROM", "Top Attacks"}, {"ATTACK_TOP_CATS", "Top Attack Categories"}, {"ATTACK_BY_ATTEMPTS", "Top Attack Categories"}, {"ATTACK_NUM_ATTACKS", "Number of Attacks"}, {"ATTACK_DROP_BY_GROUP", "Dropped Packets by Group"}, {"ATTACK_DROP_BY_HOUR", "Dropped Packets by Hour of Day"}, {"ATTACK_DROP_TITLE", "Dropped Packets & Exceptions"}, {"ATTACK_DROP_PACKETS", "Dropped Packets"}, {"ATTACK_DROP_PNE_OT", "Dropped Packets & Exceptions Over Time"}, {"ATTACK_SUM_FOR", "Attack Summary for "}, {"ATTACK_SUM_STR", "Attack Summary"}, {"ATTACK_BY_GROUP", "Attacks by Group"}, {"ATTACK_BY_HOUR", "Attacks by Hour of Day"}, {"ATTACK_ERROR_TITLE", "Summary of Exceptions"}, {"INTRUSIONS_DETECTED_FROM", "Intrusions Detected"}, {"INTRUSION_EVENTS", "Intrusion Events"}, {"INTRUSION_EVENTS_BYDAY", "Intrusion Events by Day"}, {"INTRUSION_EVENTS_BYGROUP", "Intrusion Events by Group"}, {"TOP_INTRUSION_EVENTS_Y1TITLE", "Number of Intrusion Events"}, {"TOP_INTRUSION_FOOTER", "Summary of Intrusions by Category"}, {"INTRUSION_SUM_FOR", "Intrusion Summary for "}, {"INTRUSION_SUM_STR", "Intrusion Summary"}, {"INTRUSION_TOP_CATS", "Top Intrusion Categories"}, {"INTRUSION_TOP_CATS_BY_ATTEMPTS", "Top Intrusion Categories"}, {"APPLICATION_ACCESSES_DETECTED_FROM", "Application Accesses Detected"}, {"APPLICATION_ACCESS_EVENTS", "Application Access Events"}, {"APPLICATION_ACCESS_EVENTS_BYDAY", "Application Access Events by Day"}, {"APPLICATION_ACCESS_EVENTS_BYGROUP", "Application Access Events by Group"}, {"TOP_APPLICATION_ACCESS_EVENTS_Y1TITLE", "Number of Application Access Events"}, {"TOP_APPLICATION_ACCESS_FOOTER", "Top Application Accesses"}, {"APPLICATION_ACCESS_SUM_FOR", "Application Access Summary for "}, {"APPLICATION_ACCESS_SUM_STR", "Application Access Summary"}, {"APPLICATION_ACCESS_TOP_CATS", "Top Application Access Categories"}, {"APPLICATION_ACCESS_TOP_CATS_BY_ATTEMPTS", "Top Application Access Categories"}, {"UP_DOWN_STATUS_FOR", "Firewall Up Status Summary for "}, {"UP_DOWN_STATUS_STR", "Firewall Up Status Summary"}, {"UP_DOWN_STATUS_FROM", "Firewall Up Status Summary from "}, {"UP_DOWN_STATUS", "Firewall Up Status"}, {"UP_DOWN_STATUS_BY_GROUP", "Up Status by Group"}, {"UP_DOWN_STATUS_BY_DAY", "Up Status by Day"}, {"UP_DOWN_STATUS_BY_HOUR", "Up Status by Hour of Day"}, {"SCHED_UP_DOWN_STATUS_SUMMARY", "Up Status Summary"}, {"DOWN_STATUS_FOR", "Firewall Down Status Summary for "}, {"DOWN_STATUS_STR", "Firewall Down Status Summary"}, {"DOWN_STATUS_FROM", "Firewall Down Status Summary from "}, {"DOWN_STATUS", "Firewall Down Status"}, {"DOWN_STATUS_BY_GROUP", "Down Status by Group"}, {"DOWN_STATUS_BY_DAY", "Down Status by Day"}, {"DOWN_STATUS_BY_HOUR", "Down Status by Hour of Day"}, {"SCHED_DOWN_STATUS_SUMMARY", "Down Status Summary"}, {"BLOCKED_USERS_BY_SITE", "Filtered Users By Site"}, {"TOP_USERS_BY_SITE", "Top Web Users By Site"}, {"VIRUSATTACK_SUM_FOR", "Virus Attack Summary for "}, {"VIRUSATTACK_SUM_STR", "Virus Attack Summary"}, {"VIRUSATTACK_ATTEMPTS", "Virus Attack Attempts"}, {"TOP_VIRUSES_BY_ATTEMPTS", "Top Viruses by Attack Attempts"}, {"NUM_VIRUS_ATTACKS", "Number of Virus Attacks"}, {"TOP_VIRUSES", "Top Viruses"}, {"TOP_VIRUS_ATTACKS", "Virus Attacks By User"}, {"VIRUSATTACK_SUM", "Virus Attack Summary "}, {"VIRUSATTACK_BY_GROUP", "Virus Attacks by Group"}, {"VIRUSATTACK_BY_DAY", "Virus Attacks by Day"}, {"VIRUSATTACK_BY_HOUR", "Virus Attacks by Hour of Day"}, {"VIRUSATTACK_TITLE", "Attempted Virus Attacks "}, {"SPYWARE_SUM", "Spyware Attempts Summary "}, {"NUM_SPYWARE_ATTEMPTS", "Number of Spyware Attempts"}, {"SPYWARE_BY_DAY", "Spyware Attempts by Day"}, {"SPYWARE_SUM_FOR", "Spyware Attempts Summary for "}, {"SPYWARE_SUM_STR", "Spyware Attempts Summary"}, {"SPYWARE_ATTEMPTS", "Spyware Attempts"}, {"SPYWARE_BY_GROUP", "Spyware Attempts by Group"}, {"SPYWARE_BY_HOUR", "Spyware Attempts by Hour of Day"}, {"SPYWARE_TOP_CATEGORY", "Top Spyware Categories"}, {"SPYWARE_BY_CATEGORY", "Spyware Attempts By Category"}, {"SPYWARE_BY_CATEGORY_FOR", "Spyware Attempts By Category for "}, {"SCHED_VPS_TITLE", "SonicWall Analyzer Reports"}, {"SCHED_GMS_TITLE", "SonicWall GMS Reports"}, {"REPORTS_STR", "Reports"}, {"SCHED_UNIT_REPORT_TITLE", "Scheduled report for SonicWall appliance "}, {"SCHED_GROUP_REPORT_TITLE", "Scheduled Report for SonicWall Group: "}, {"SCHED_ATTACK_OVERTIME", "Summary of Attacks Over Time from "}, {"SCHED_ATTACK_OVERTIME_YTITLE", "Attacks"}, {"SCHED_ATTACK_BY_CATEGORY_TITLE2", "Summary of Attacks by Category for "}, {"SCHED_ATTACK_BY_CATEGORY_TITLE3", "Scheduled Report for SonicWall Group: "}, {"SCHED_ATTACK_BY_CATEGORY_TITLE4", "Attacks By Category Over Time from "}, {"SCHED_ATTACK_EXCEPTIONS_TITLE", "Summary of Exceptions for "}, {"SCHED_ATTACK_EXCEPTIONS_STR", "Summary of Exceptions"}, {"SCHED_ATTACK_EXCEPTIONS_TITLE1", "Summary of Exceptions Over Time from "}, {"SCHED_ATTACK_EXCEPTIONS_OVERTIME_FOOTER1", "Errors & Exceptions by Group"}, {"SCHED_ATTACK_EXCEPTIONS_OVERTIME_FOOTER2", "Errors & Exceptions by Day"}, {"SUM_ATTACK_BY_CATEGORY_STR", "Summary of Attacks by Category"}, {"SUM_INTRUSIONS_BY_CAT_STR", "Summary of Intrusions by Category"}, {"SUM_INTRUSIONS_BY_CAT_STR_FOR", "Summary of Intrusions by Category for "}, {"SUM_TOP_MAIL_STR", "Top Users of Mail"}, {"SUM_TOP_VPN_STR", "Top VPN Policies"}, {"SUM_TOP_FILTERED_STR", "Top Filtered Sites"}, {"SUM_TOP_FILTERED_USERS_STR", "Top Filtered Users"}, {"SUM_TOP_FILTERED_WEB_SITE_CATEGORIES_STR", "Top Filtered Web Categories"}, {"SUM_TOP_WEB_SITES_STR", "Web Usage Top Sites"}, {"SUM_TOP_WEB_USERS_STR", "Top Users of Web"}, {"SUM_TOP_CATEGORIES_WEB_SITES_STR", "Top Categories of Web Sites"}, {"SUM_APPLICATION_ACCESSES_BY_CAT_STR", "Summary of Application Accesses by Category"}, {"SUM_APPLICATION_ACCESSES_BY_CAT_STR_FOR", "Summary of Application Accesses by Category for "}, {"TOP_WEB_USERS_HITS_STR", "Top Web Users by Hits"}, {"TOP_HITS_BY_SITES_STR", "Hits by Web Sites"}, {"SCHED_ATTACK_BY_CATEGORY_STR", "Attacks By Category Over Time"}, {"SCHED_INTRUSIONS_BY_CATEGORY_STR", "Intrusions By Category Over Time"}, {"SCHED_BANDWIDTH_USERS_OVERTIME_STR", "Bandwidth Top Users Over Time"}, {"SCHED_FTP_USERS_OVERTIME_STR", "FTP By Users Over Time"}, {"SCHED_MAIL_USER_OVERTIME_STR", "Top Users of Mail Over Time"}, {"SCHED_VPN_USER_OVERTIME_STR", "Top Users of VPN Over Time"}, {"SCHED_TOP_POLICY_OVERTIME_STR", "Top VPN Policies Over Time"}, {"SCHED_FILTER_SITES_OVERTIME_STR", "Top Filtered Sites Over Time"}, {"SCHED_FILTER_USERS_OVERTIME_STR", "Top Filtered Users Over Time"}, {"SCHED_WEBUSAGE_TOPSITES_OVERTIME_STR", "Web Usage Top Sites Over Time"}, {"SCHED_WEBUSAGE_TOPUSERS_OVERTIME_STR", "Web Usage Top Users Over Time"}, {"SCHED_APPLICATION_ACCESSES_BY_CATEGORY_STR", "Application Accesses By Category Over Time"}, {"SCHED_ATTACK_OVERTIME_STR", "Summary of Attacks Over Time"}, {"SCHED_ATTACK_EXCEPTIONS_STR", "Summary of Exceptions Over Time"}, {"SCHED_INTRUSIONS_OVERTIME_STR", "Summary of Intrusions Over Time"}, {"SCHED_BW_OVERTIME_STR", "Bandwidth Over Time"}, {"SCHED_FTP_OVERTIME_STR", "FTP Usage Over Time"}, {"SCHED_MAIL_OVERTIME_STR", "Mail Usage Over Time"}, {"SCHED_VPN_OVERTIME_STR", "VPN Usage Over Time"}, {"SCHED_FILTERED_OVERTIME_STR", "Filtered Web Sites Over Time"}, {"SCHED_WEBUSAGE_OVERTIME_STR", "Web Usage Over Time"}, {"SCHED_STATUS_OVERTIME_STR", "Up Status Over Time"}, {"SCHED_APPLICATION_ACCESSES_OVERTIME_STR", "Summary of Application Accesses Over Time"}, {"SCHED_DOWN_STATUS_OVERTIME_STR", "Down Status Over Time"}, {"SCHED_BANDWIDTH_OVERTIME_TITLE", "Bandwidth Over Time from "}, {"SCHED_BANDWIDTH_USERS_OVERTIME_TITLE", "Bandwidth Top Users Over Time from "}, {"SCHED_BANDWIDTH_TOP_USERS", "Top Users of Bandwidth from "}, {"SCHED_BANDWIDTH_TOP_USERS_FOR", "Top Users of Bandwidth for "}, {"SCHED_FTP_OVERTIME_TITLE", "FTP Usage Over Time from "}, {"SCHED_FTP_SUMMARY_TITLE", "Summary of FTP Usage for "}, {"SCHED_FTP_SUMMARY_STR", "Summary of FTP Usage"}, {"SCHED_FTP_SUMMARY_FOOTER1", "FTP MBytes by Group"}, {"SCHED_FTP_SUMMARY_FOOTER2", "FTP MBytes by Hour of Day"}, {"SCHED_FTP_USERS_OVERTIME_TITLE", "Top Users of FTP Over Time from "}, {"SCHED_AUTH_ADMIN_TITLE", "Authenticated Admin Logins for "}, {"SCHED_AUTH_FAILED_TITLE", "Failed Logins for "}, {"SCHED_AUTH_USER_TITLE", "Authenticated User Logins for "}, {"SCHED_AUTH_ADMIN_LOGIN", "Authenticated Admin Logins"}, {"SCHED_AUTH_FAILED_LOGIN", "Failed Logins"}, {"SCHED_AUTH_USER_LOGIN", "Authenticated User Logins"}, {"SCHED_MAIL_OVERTIME_TITLE", "Mail Usage Over Time from "}, {"SCHED_MAIL_SUMMARY_TITLE", "Mail Usage Summary for "}, {"SCHED_MAIL_SUMMARY_STR", "Mail Usage Summary"}, {"SCHED_MAIL_USER_TITLE", "Top Users of Mail for "}, {"SCHED_MAIL_USER_OVERTIME_TITLE", "Top Users of Mail Over Time from "}, {"SHCED_SERVICES_SUMMARY_TITLE", "Summary of Services"}, {"SCHED_SERVICES_SUMMARY_FOR", "Summary of Services for "}, {"SERVICES_SUMMARY_BYVPN_TITLE", "Summary of Services Over VPN"}, {"SCHED_SERVICES_SUMMARY_BYVPN_FOR", "Summary of Services Over VPN for "}, {"SCHED_VPN_OVERTIME_TITLE", "VPN Bandwidth Over Time from "}, {"SCHED_VPN_OVERTIME_FOOTER1", "Total VPN in MBytes by Group"}, {"SCHED_VPN_OVERTIME_FOOTER2", "Total VPN in MBytes by Day"}, {"SCHED_VPN_SUMMARY_TITLE", "VPN Usage Summary for "}, {"SCHED_VPN_SUMMARY_STR", "VPN Usage Summary"}, {"SCHED_VPN_USER_OVERTIME_TITLE", "Top Users of VPN Over Time from "}, {"SCHED_VPN_USER_OVERTIME_YTITLE", "Top VPN Users"}, {"SCHED_VPN_USER_OVERTIME_FOOTER", "Top Users of VPN by MBytes"}, {"SCHED_VPN_USES_YTITLE", "Top Users of VPN"}, {"SCHED_VPN_USER_TITLE_FOR", "Top Users of VPN for "}, {"SCHED_VPN_TOP_POLICIES_TITLE_FOR", "Top Policies of VPN for "}, {"SCHED_FILTER_OVERTIME_TITLE", "Filtered Web Sites Over Time from "}, {"SCHED_FILTER_OVERTIME_FOOTER", "Filtered Site Attempts by Group"}, {"SCHED_FILTER_BYUSER_TITLE", "Filtered Sites by User for "}, {"SCHED_FILTER_BYUSER_OVERTIME_TITLE", "Filtered Sites By User Over Time from "}, {"SCHED_FILTER_BYUSER_OVERTIME_STR", "Filtered Sites By User Over Time"}, {"SCHED_FILTER_SITES_OVERTIME_TITLE", "Filtered Top Sites Over Time from "}, {"SCHED_FILTER_SUMMARY_TITLE", "Summary of Filtered Web Sites for "}, {"SCHED_FILTER_TOPSITES_TITLE", "Top Filtered Sites for "}, {"SCHED_FILTER_TOPUSERS_TITLE", "Top Filtered Users for "}, {"SCHED_FILTER_TOPUSERS_OVERTIME_TITLE", "Top Filtered Users Over Time from "}, {"SCHED_WEBUSAGE_OVERTIME_TITLE", "Web Usage Over Time from "}, {"SCHED_WEBUSAGE_OVERTIME_FOOTER", "Web Usage in MBytes by Group"}, {"SCHED_WEBUSAGE_SITESBYUSER_TITLE", "Top Web Sites By User"}, {"SCHED_WEBUSAGE_SITESBYUSER_OVERTIME_TITLE", "Web Usage Sites By User Over Time from "}, {"SCHED_WEBUSAGE_SITESBYUSER_OVERTIME_STR", "Web Usage Sites By User Over Time"}, {"SCHED_WEBUSAGE_TOPSITES_OVERTIME_TITLE", "Web Usage Top Sites Over Time from "}, {"SCHED_WEBUSAGE_SUMMARY_TITLE", "Summary of Web Usage for "}, {"SCHED_WEBUSAGE_SUMMARY_STR", "Summary of Web Usage"}, {"SCHED_WEBUSAGE_SUMMARY_YTITLE", "MBytes"}, {"SCHED_WEBUSAGE_TOPSITES_TITLE", "Web Usage Top Sites By User for "}, {"SCHED_WEBUSAGE_TOPUSERS_OVERTIME_TITLE", "Web Usage Top Users Over Time from "}, {"SCHED_VIRUSATTACKS_OVERTIME", "Virus Attacks Over Time"}, {"SCHED_VIRUSATTACKS_OVERTIME_FROM", "Virus Attacks Over Time from "}, {"SCHED_TOP_VIRUSES_BY_ATTEMPTS_FROM", "Top Viruses by Attack Attempts from "}, {"SCHED_VIRUSATTACK_SUMMARY", "Virus Attack Summary"}, {"SCHED_SPYWARE_OVERTIME", "Spyware Attempts Over Time"}, {"SCHED_SPYWARE_OVERTIME_FROM", "Spyware Attempts Over Time from "}, {"SCHED_SPYWARE_SUMMARY", "Spyware Attempts Summary"}, {"SCHED_SPYWARE_BY_CAT_OVERTIME", "Spyware Attempts By Category Over Time"}, {"SCHED_SINGLE_MAIL_SUMMARY_TITLE", "Summary of Mail Usage for "}, {"SCHED_SINGLE_FILTER_SITES_SUMMARY_TITLE", "Summary of Filtered Web Sites for "}, {"SCHED_SINGLE_FILTER_SITES_SUMMARY_STR", "Summary of Filtered Web Sites"}, {"SCHED_SINGLE_FTP_TITLE", "FTP MBytes Transferred by Group"}, {"SCHED_SINGLE_MAIL_TITLE", "Mail Transferred in MBytes by Group"}, {"SCHED_SINGLE_FILTER_TITLE", "Filtered Sites Attempts by Day"}, {"SCHED_SINGLE_FILTER_TOPSITES_TITLE", "Top Filtered Sites for "}, {"SCHED_SINGLE_FILTER_TOPUSERS_TITLE", "Top Users of Web Filter for "}, {"SCHED_SINGLE_WEBUSAGE_TOPSITES_TITLE", "Web Usage Top Sites for "}, {"SCHED_SINGLE_WEB_SITE_CATEGORIES", "Top Web Site Categories for "}, {"SCHED_SINGLE_WEB_TOPCATEGORIES_OVERTIME_TITLE", "Web Usage Top Sites By Categories Over Time from "}, {"SCHED_SINGLE_ATTACKS_BYCATEGORY_OVERTIME_TITLE", "Attacks By Categories Over Time from "}, {"SCHED_SINGLE_FTP_TOPUSERS_OVERTIME_TITLE", "FTP Usage Top Users Over Time from "}, {"SCHED_SINGLE_MAIL_TOPUSERS_OVERTIME_TITLE", "Mail Usage Top Users Over Time from "}, {"SCHED_SINGLE_VPN_TOPUSERS_OVERTIME_TITLE", "VPN Top Users Over Time from "}, {"SCHED_SINGLE_VPN_TOPPOLICIES_OVERTIME_TITLE", "VPN Top Policies Over Time from "}, {"SCHED_SINGLE_VPN_TOPPOLICIES_BY_MBYTES_TITLE", "Top VPN Policies by MBytes "}, {"SCHED_SINGLE_FILTER_TOPSITES_OVERTIME_TITLE", "Web Filter Top Sites Over Time from "}, {"SCHED_SINGLE_FILTER_TOPUSERS_OVERTIME_TITLE", "Web Filter Top Users Over Time from "}, {"SCHED_SINGLE_FILTER_TOPCATEGORIES_OVERTIME_TITLE", "Web Filter Top Sites By Categories Over Time from "}, {"SCHED_SINGLE_WEBUSAGE_TOPUSERS_OVERTIME_TITLE", "Web Usage Top Users Over Time from "}, {"SCHED_SINGLE_FILTER_SITESBYUSER_OVERTIME_TITLE", "Web Filter Sites By User Over Time from "}, {"SCHED_SINGLE_WEBUSAGE_SITESBYUSER_OVERTIME_TITLE", "Web Usage Sites By User Over Time from "}, {"SCHED_SINGLE_FILTER_SITESBYUSER_TITLE", "Filtered Web Sites by User for "}, {"SCHED_SINGLE_TOP_VIRUSES_BY_ATTEMPTS_TITLE", "Top Viruses by Attack Attempts for "}, {"SCHED_SINGLE_TOP_VIRUS_ATTACKS_TITLE", "Top Viruses by Attack Attempts for "}, {"AUTHADMIN_TITLE", "Authenticated Admin Logins"}, {"AUTHFAILED_TITLE", "Failed Logins"}, {"AUTHUSER_TITLE", "Authenticated User Logins"}, {"BANDWIDTH_USAGE_FROM", "Bandwidth Usage"}, {"BANDWIDTH_MB_BY_DAY", "Total Bandwidth in MBytes by Day"}, {"BANDWIDTH_MB_BY_GROUP", "Total Bandwidth in MBytes by Group"}, {"BANDWIDTH_SELECTED_USERS", "Top Selected User(s) of Bandwidth "}, {"BANDWIDTH_TOP_USERS", "Top Users of Bandwidth"}, {"BANDWIDTH_SEL_USER_LABEL", "Selected Bandwidth User(s)"}, {"BANDWIDTH_SEL_USER_BY_MB", "Selected User(s) of Bandwidth by MBytes"}, {"BANDWIDTH_TOP_USER_LABEL", "Top Bandwidth Users"}, {"BANDWIDTH_TOP_USER_LABEL2", "Top Users of Bandwidth"}, {"BANDWIDTH_TOP_USER_BY_MB", "Top Users of Bandwidth by MBytes"}, {"BANDWIDTH_TOP_SEL_FROM", "Top Selected User(s) of Bandwidth from "}, {"BANDWIDTH_TOP_USERS_FROM", "Top Users of Bandwidth from "}, {"FTP_FROM", "FTP Activity"}, {"FTP_MB_BY_DAY", "FTP MBytes Transferred by Day"}, {"FTP_USAGE_FOR", "Summary of FTP Usage for "}, {"FTP_USAGE_STR", "Summary of FTP Usage"}, {"FTP_MB_FOR_GROUP", "FTP MBytes For Group"}, {"FTP_MB_BY_HOUR", "FTP MBytes by Hour of Day"}, {"FTP_TOP_SEL_USERS_FOR", "Top Selected FTP Sites By User "}, {"FTP_TOP_USERS_FOR", "Top Users of FTP"}, {"FTP_TOP_USERS_FOR2", "Top Users of FTP for "}, {"FTP_TOP_SEL_USER_BY_MB", "Top Selected FTP User(s) by MBytes"}, {"FTP_TOP_USER_BY", "Top FTP Users by MBytes"}, {"FTP_TOP_SEL_USER_FROM", "Top Selected User(s) of FTP from "}, {"FTP_TOP_USERS_FROM", "Top Users of FTP from "}, {"FTP_TOP_SEL_USER", "Top Selected FTP User(s)"}, {"FTP_TOP_USERS", "Top FTP Users"}, {"FTP_TOP_USERS_FOOTER", "Top Users of FTP by MBytes"}, {"MAIL_USAGE_FOR", "Summary of Mail Usage for "}, {"MAIL_USAGE_STR", "Summary of Mail Usage"}, {"MAIL_USAGE_BY_GROUP", "Mail Usage by Group"}, {"MAIL_USAGE_BY_HOUR", "Mail Usage by Hour of Day"}, {"MAIL_TOP_SEL_FOR", "Top Selected Mail User(s) "}, {"MAIL_TOP_USERS_FOR", "Top Users of Mail"}, {"MAIL_TOP_SEL_USERS", "Top Selected Mail User(s)"}, {"MAIL_TOP_SEL_BY_EVENTS", "Top Selected Mail User(s) by Events"}, {"MAIL_TOP_USERS", "Top Users of Mail"}, {"MAIL_TOP_USERS_BY_EVENTS", "Top Mail Users by Events"}, {"MAIL_USAGE_FROM", "Mail Usage"}, {"MAIL_IN_MB_BY_DAY", "Mail Transferred in MBytes by Day"}, {"MAIL_TOP_SEL_FROM", "Top Selected User(s) of Mail from "}, {"MAIL_TOP_USERS_FROM", "Top Users of Mail from "}, {"MAIL_TOP_SEL_BY_MB", "Top Selected User(s) of Mail by MBytes"}, {"MAIL_TOP_BY_MB", "Top Users of Mail by MBytes"}, {"SERVICE_SUM_FOR", "Services Summary for "}, {"SERVICE_SUM_FOOTER_INMB", "Service MBytes by Hour of the day"}, {"SERVICE_SUM_FOOTER_INEVENTS", "Service Events by Hour of the day"}, {"SERVICE_SUM_YTITLE_INEVENTS", "Service Events"}, {"VPN_SUM_FOR", "VPN Usage Summary for "}, {"VPN_SUM_STR", "VPN Usage Summary"}, {"VPN_MB_BY_GROUP", "VPN MBytes by Group"}, {"VPN_MB_BY_HOUR", "VPN MBytes by Hour of Day"}, {"VPN_TOP_SEL_FOR", "Top Selected User(s) of VPN "}, {"VPN_TOP_USERS_FOR", "Top Users of VPN"}, {"VPN_TOP_SEL_BY_MB", "Top Selected VPN User(s) by MBytes"}, {"VPN_TOP_USERS_BY_MB", "Top VPN Users by MBytes"}, {"VPN_ACTIVITY_FROM", "VPN Activity"}, {"VPN_MB_BY_DAY", "VPN Usage in MBytes by Day"}, {"VPN_TOP_USERS_FROM", "Top Users of VPN from "}, {"VPN_TOP_SEL", "Top Selected VPN User(s)"}, {"VPN_TOP_USERS", "Top VPN Users"}, {"VPN_TOP_POLICIES_TITLE", "Top VPN Policies"}, {"VPN_TOP_POLICIES_Y1TITLE", "Top VPN Policies by MBytes"}, {"VPN_TOP_POLICIES_FOOTER", "Top VPN Policies by MBytes"}, {"VPN_BYPOLICY_HOURLY_TITLE", "Top VPN Policies By Hour"}, {"FILTER_SUM_FOR", "Summary of Filtered Web Sites for "}, {"FILTER_SUM_STR", "Summary of Filtered Web Sites"}, {"FILTER_SUM_ATTEMPTS", "Attempts"}, {"FILTER_BY_GROUP", "Filtered Sites Attempts by Group"}, {"FILTER_BY_HOUR", "Filtered Sites Attempts by Hour of Day"}, {"FILTER_BY_SEL_FOR", "Top Filtered Web Sites By Selected User(s)"}, {"FILTER_BY_SEL_SITE_FOR_TITLE", "Top Filtered Sites By Site"}, {"FILTER_BY_USER_FOR", "Filtered Web Sites by User"}, {"FILTER_SEL_USER", "Selected Filtered User(s)"}, {"FILTER_TOP_USER", "Top Users of Web Filter"}, {"FILTER_TOP_SITES_FOR", "Top Filtered Sites"}, {"FILTER_NUM_ATTEMPTS", "Number of Attempts"}, {"FILTER_ATTEMPTS_BY_NUM", "Filtered Web Sites"}, {"FILTER_SITES_BY_SEL_USER", "Top Filtered Sites By Selected User(s) "}, {"FILTER_SITES_BY_USER", "Filtered Web Sites by User"}, {"FILTER_ACTIVITY_FROM", "Web Filter Activity"}, {"FILTER_BLOCKED_ATTEMPTS", "Filtered Attempts"}, {"FILTER_ATTEMPTS_BY_DAY", "Filtered Site Attempts by Day"}, {"FILTER_SITES_BY_USER_FROM", "Filtered Web Sites by User"}, {"FILTER_SITES_FROM", "Top Filtered Web Sites from "}, {"FILTER_TOP_SITES", "Top Filtered Sites"}, {"FILTER_TOP_BY_ATTEMPTS", "Top Filtered Sites"}, {"FILTER_SEL_FROM", "Top Filtered Web User(s) "}, {"FILTER_USERS_FROM", "Top Filtered Web Users"}, {"FILTER_TOP_SEL_USERS", "Top Selected Filtered Web User(s)"}, {"FILTER_SEL_BY_ATTEMPTS", "Top Selected Filtered User(s) of Web"}, {"FILTER_TOP_WEB_USERS", "Top Filtered Web Users"}, {"FILTER_TOP_WEB_BY_ATTEMPTS", "Top Filtered Users of Web"}, {"FILTER_SUM_FILTERED_SITES_BY_CAT_FOR", "Top Web Site Categories"}, {"FILTER_TOP_WEB_SITE_CATEGORIES", "Top Filtered Web Site Categories"}, {"INTRUSION_TOP_TITLE", "Summary of Intrusions by Category"}, {"INTRUSION_BY_GROUP", "Intrusions by Group"}, {"INTRUSION_BY_HOUR", "Intrusions by Hour of Day"}, {"NUM_INTRUSIONS", "Number of Intrusions"}, {"APPLICATION_ACCESS_TOP_TITLE", "Top Application Accesses"}, {"APPLICATION_ACCESS_BY_GROUP", "Application Accesses by Group"}, {"APPLICATION_ACCESS_BY_HOUR", "Application Accesses by Hour of Day"}, {"NUM_APPLICATION_ACCESSES", "Number of Application Accesses"}, {"WEB_SUM_FOR", "Summary of Web Usage for "}, {"WEB_SUM_STR", "Summary of Web Usage"}, {"WEB_MB_BY_GROUP", "Bandwidth MBytes by Group"}, {"WEB_MB_BY_HOUR", "Bandwidth MBytes by Hour of Day"}, {"WEB_SITES_FOR", "Web Usage Top Sites"}, {"WEB_SITES_BY_MB", "Top Web Sites by MBytes"}, {"WEB_USERS_SEL_FOR", "Top Selected User(s) of Web "}, {"WEB_USERS_FOR", "Top Users of Web for "}, {"WEB_USERS_SEL_BY_MB", "Top Selected Web User(s) by MBytes"}, {"WEB_USERS_BY_MB", "Top Web Users by MBytes"}, {"WEB_SITE_BY_SEL_FOR", "Top Visited Web Sites By Selected User(s) for "}, {"WEB_SITE_BY_SITE_FOR_TITLE", "Top Visited Web Sites By Site"}, {"WEB_SITE_BY_SEL_SITE_FOR_TITLE", "Top Visited Web Sites By Selected Site(s) for "}, {"WEB_SITE_BY_USER_FOR", "Web Usage Top Sites By User"}, {"WEB_ACTIVITY_FROM", "Web Activity"}, {"WEB_MB_BY_DAY", "Web Usage in MBytes by Day"}, {"WEB_SITES_FROM", "Top Web Sites from "}, {"WEB_SITES", "Top Web Sites"}, {"WEB_USERS_SEL_FROM", "Top Selected Web User(s) from "}, {"WEB_USERS_FROM", "Top Web Users"}, {"WEB_SEL_USERS", "Top Selected Web User(s)"}, {"WEB_USERS", "Top Web Users"}, {"WEB_SITES_SEL_FROM", "Top Sites by Selected User(s) "}, {"WEB_SITES_BY_USER_FROM", "Top Sites by User from "}, {"WEB_USAGE_SUM_WEB_USG_BY_CAT_FOR", "Top Visited Web Sites By Category"}, {"WEB_SITE_BY_CATEGORY_FOR", "Top Visited Web Sites By Category for "}, {"WEB_SITE_BY_CATEGORY", "Top Visited Web Sites By Category"}, {"WEB_SITE_CATEGORIES", "Top Web Site Categories"}, {"CHART_AND_TABLE", "Chart and Table"}, {"TABLE", "Table Only"}, {"SUCCESSFULLY_UPDATED", "Successfully updated: "}, {"PARAMETERS_UPDATED_SUCCESSFULLY", "Parameters updated successfully."}, {"PARAMETERS_COULD_NOT_BE_UPDATED", "One or more parameters could not be updated."}, {"WEB_SERVER_CONFIG_INFO_UPDATED_SUCCESSFULLY", "Web Server configuration information has been updated successfully."}, {"TOP_SITES", "Top Sites"}, {"TOP_USERS", "Top Users"}, {"TOP_SITES_PER_USER", "Top Sites per User"}, {"DAYS_TO_STORE_SUMM_DATA", "Days to store summarized data was successfully changed to: "}, {"SUMMARIZE_NOW", "Summarizer service was successfully requested to summarize immediately"}, {"SUMMARIZE_NOW_FAILED", "Summarizer service could not be contacted successfully for immediate summarization"}, {"UPLOAD_RAW_NOW", "Summarizer service was successfully requested to upload raw syslog files immediately"}, {"UPLOAD_NOW_FAILED", "Summarizer service could not be contacted successfully for immediate raw syslog upload"}, {"SUMMARIZE_NOW_FOR_DATERANGE", "Summarizer service was successfully requested to summarize from "}, {"SUMMARIZE_NOW_FOR_DATERANGE_FAILED", "Summarizer service could not be contacted successfully for summarization from "}, {"SUMMARIZE_UPDATE_NEXT_SUMMARY_TIME", "Next summary time for the summarizer has been set successfully"}, {"SUMMARIZE_UPDATE_NEXT_SUMMARY_TIME_FAILED", "Error: Could not update the next summary time"}, {"SUMMARIZE_UPDATE_DATA_AVAILABLE_DATE", "The summary availability timestamp value has been updated successfully"}, {"SUMMARIZE_UPDATE_DATA_AVAILABLE_DATE_FAILED", "Error: Could not update the last summarized until value"}, {"SUMMARIZE_DELETE_DATA_AVAILABLE_DATE", "The date for deleting summary data has been updated successfully"}, {"SUMMARIZE_DELETE_DATA_AVAILABLE_DATE_FAILED", "Error: Could not update the summary delete date"}, {"SUMMARIZE_UPDATE_EMAIL_ARCHIVE_TIME", "Next email/archive time has been updated successfully"}, {"SUMMARIZE_UPDATE_EMAIL_ARCHIVE_TIME_FAILED", "Error: Could not update the next email/archive time"}, {"SETTINGS_UPDATED_SUCCESSFULLY", "Settings updated successfully."}, {"SETTINGS_UPDATE_FAILURE", "Failed to update settings."}, {"SETTINGS_LOGO_DELETED_SUCCESSFULLY", "Logo Deleted successfully."}, {"SETTINGS_LOGO_DELETION_FAILED", "Failed to delete Logo."}, {"OPTIMIZE_NOW", "Summarizer service was successfully requested to optimize immediately"}, {"OPTIMIZE_NOW_FAILED", "Summarizer service could not be contacted successfully for immediate optimization"}, {"MONTH_TO_STORE_UPDATE", "Months to Store Syslog Data successfully updated to: "}, {"MONTH_TO_STORE_ONE_YEAR", " 1 Year For"}, {"MONTH_TO_STORE_ONE_YEARS", " 2 Years For"}, {"TIME_BETWEEN", "Time between summaries (hh:mm) successfully updated to: "}, {"TIME_TO_DELETE", "Delete syslog data successfully updated to: "}, {"MONTHLY_SCHED_REPORTS", "Monthly reports timestamp has been changed successfully"}, {"MONTHLY_SCHED_REPORTS_FAILED", "Error: Could not update the Monthly reports timestamp"}, {"SCHEDULE_REPORT_NOW", "Selected Schedules set successfully for immediate processing"}, {"SCHEDULE_REPORT_NOW_FAILED", "Could not process the schedule. Please try again"}, {"SCHEDULE_UPDATED", "Schedule updated successfully"}, {"SCHEDULE_DELETED", "One or more schedules were deleted successfully"}, {"SCHEDULE_DISABLED", "Schedule disabled successfully"}, {"SCHEDULE_ENABLED", "Schedule enabled successfully"}, {"SCHEDULE_DELETE_FAILED", "Could not delete the schedule"}, {"SCHEDULE_DISABLE_FAILED", "Could not disable the schedule"}, {"SCHEDULE_ENABLE_FAILED", "Could not enable the schedule"}, {"SCHEDULE_ADDED", "The new schedule was added successfully to the database"}, {"SCHEDULE_PROCESS_ERR", "Could not process the schedule. Please check if Analyzer Scheduler service is running."}, {"SCHEDULE_RESEND_ERR", "Re-send reports action failed."}, {"SCHEDULE_RESEND", "The selected schedule(s) have been set successfully to be resent."}, {"SCHEDULE_PROCESSING_EXCEPTION", "Could not process the schedule. Please try again"}, {"SCHEDULE_UPDATE_WEEKLY_REPORTS", "Weekly reports timestamp has been changed successfully"}, {"SCHEDULE_UPDATE_WEEKLY_REPORTS_FAILED", "Error: Could not update the Weekly reports timestamp"}, {"INCOMPLETE_ACTION", "Could not complete the action"}, {"COST_PER_MBYTE_BANDWIDTH_DATA", "Cost Per MByte Bandwidth data was successfully changed to: "}, {"SCHEDULE_PROP", "Schedule Properties"}, {"SCHEDULE_PROP_SCHEDID", "Schedule ID"}, {"SCHEDULE_PROP_SCHEDTYP", "Schedule Type"}, {"SCHEDULE_PROP_NAME", "Name"}, {"SCHEDULE_PROP_TYPE", "Type"}, {"SCHEDULE_PROP_NODE", "Node"}, {"SCHEDULE_PROP_DESCRIPTION", "Description"}, {"SCHEDULE_PROP_REPORTS_LIST", "Reports To Be Emailed"}, {"SCHEDULE_PROP_DEST_ADDRESS", "Destination Email Address"}, {"SCHEDULE_PROP_SMTP", "SMTP Server"}, {"SCHEDULE_PROP_SUBJLINE", "Email Subject"}, {"SCHEDULE_PROP_SUBJ", "Message "}, {"SCHEDULE_PROP_INLINE", "Send Reports Inline"}, {"SCHEDULE_PROP_DOCFORMAT", "Document Format"}, {"SCHEDULE_PROP_ARCHIVE", "Reports To Be Archived"}, {"SCHEDULE_PROP_ARCHIVEFOLDER", "Archive Folder"}, {"SCHEDULE_PROP_TEMPLATEFOLDER", "Template Folder"}, {"SCHEDULE_PROP_SINGLEFILE", "Include All Reports in a Single File"}, {"SCHEDULE_PROP_ZIP", "Zip Reports"}, {"SCHEDULE_PROP_REPORTCONTENT", "Chart And Table"}, {"SCHEDULE_PROP_REPORTTABLE", "Table Only"}, {"SCHEDULE_PROP_DISPLAY", "Display Type"}, {"SCHEDULE_PROP_CHARTTYPE", "Chart Type"}, {"SCHEDULE_PROP_NUMSITES", "Number Of Top Sites"}, {"SCHEDULE_PROP_NUMUSERS", "Number Of Top Users"}, {"SCHEDULE_PROP_NUMITEMS", "Number Of Top Items"}, {"SCHEDULE_PROP_NUMPERITEM", "Number Of Entries Per Item"}, {"SCHEDULE_PROP_SITELIST", "Sites List"}, {"SCHEDULE_PROP_USERLIST", "Users List"}, {"SCHEDULE_PROP_WHOLENAME", "Enable Whole Name/IP"}, {"SCHEDULE_PROP_HOURS", "Hours"}, {"SCHEDULE_PROP_REPORTLIST", "List of Reports"}, {"SCHEDULE_PROP_GENERALCAT", "General"}, {"SCHEDULE_PROP_CATEGORYCAT", "Category"}, {"SCHEDULE_PROP_FORMATCAT", "Formats and Settings"}, {"SCHEDULE_PROP_LOGOFILE", "Logo File:"}, {"SCHEDULE_PROP_LOGOFILENAME", "Current Logo:"}, {"SCHEDULE_PROP_COVERPAGE", "Cover Page"}, {"SCHEDULE_PROP_SUMMARYPAGE", "Summary Report Page"}, {"SCHEDULE_PROP_DETAILPAGE", "Detailed Report Page"}, {"SCHEDULE_PROP_CONFIGOPTIONS", "Configure Filters/Options"}, {"SCHEDULE_PROP_NOTE", "(Note: You can set filters and display options to be applied for reports in this schedule here)."}, {"SCHEDULE_PROP_TITLE", "Title:"}, {"SCHEDULE_PROP_SUBTITLE", "Subtitle:"}, {"SCHEDULE_PROP_DESCRIPTION", "Description:"}, {"SCHEDULE_PROP_FOREGROUND", "Foreground Color:"}, {"SCHEDULE_PROP_BACKGROUND", "Background Color:"}, {"SCHEDULE_PROP_SUMM_REPORTNAME", "Report Name"}, {"SCHEDULE_PROP_SUMM_CONFIGURATION", "Configuration"}, {"SCHEDULE_PROP_SUMM_ORDER", "Order"}, {"SCHEDULE_PROP_SUMM_DELETE", "Delete"}, {"SCHEDULE_PROP_PROFILE_OPTIONS", "Profile Options:"}, {"SCHEDULE_PROP_PROFILE_EXISTING", "Select an existing profile"}, {"SCHEDULE_PROP_PROFILE_NEW", "Create a new profile"}, {"SCHEDULE_PROP_PROFILE_NAME", "Profile Name:"}, {"SCHEDULE_PROP_PROFILE_NEWNAME", "New Profile Name:"}, {"SCHEDULE_PROP_CREATEDON", "Created on:"}, {"SCHEDULE_PROP_PDFINGEN1", "Gen1 mode is not supported"}, {"SORTBY_PDF_HITS", "Hits/Connections/Events"}, {"SERVICE_ADD_FAILED_1", "Cannot add service for summarization: "}, {"SERVICE_ADD_FAILED_2", "already exists"}, {"SERVICE_DUPLICATE_ADD_FAILED_1", "Add Service failed for "}, {"SERVICE_DUPLICATE_ADD_FAILED_2", "; duplicate port detected"}, {"SERVICE_DELETED_FROM_SUMMARIZATION", "Deleted Service for Summarization: "}, {"SERVICE_ADDED_FOR_SUMMARIZATION", "Added Service for Summarization: "}, {"VP_ALT_SETTINGS", "Configure Report Display Settings"}, {"VP_ALT_PRINT_REPORT", "Print Report"}, {"VP_ALT_PREVIOUS_DAY", "Show Report For Previous Day"}, {"VP_ALT_NEXT_DAY", "Show Report For Next Day"}, {"VP_ALT_PREVIOUS_WEEK", "Show Report For Previous 7 Days"}, {"VP_ALT_NEXT_WEEK", "Show Report For Next 7 Days"}, {"MONITOR_BNWDTH_TITLE", "SonicWall Analyzer - Bandwidth Monitor"}, {"MONITOR_BNWDTH_SECTIONTITLE", "Bandwidth Monitor"}, {"MONITOR_SVC_TITLE", "SonicWall Analyzer - Services Monitor"}, {"MONITOR_SVC_SECTIONTITLE", "Services Monitor"}, {"USERREPORT_SETTINGS_SITEFILTER", "Web Sites Filter"}, {"USERREPORT_SETTINGS_USERFILTER", "Web Users Filter"}, {"USERREPORT_SETTINGS_NOENTRIES", "No entries found to delete."}, {"USERREPORT_SETTINGS_NOSELECTION", "No entries selected for deletion."}, {"USERREPORT_SETTINGS_ALLWARNING_1", "Selecting the All/2000 Option could delay the loading of the reports."}, {"USERREPORT_SETTINGS_ALLWARNING_2", "Are you sure you want to select this option?"}, {"USERREPORT_SETTINGS_ENDLTSTARTALERT", "End Hour must be greater than the Start Hour."}, {"USERREPORT_SETTINGS_SECTITLE1", "Default Display Type"}, {"USERREPORT_SETTINGS_CHARTANDTABLE", "Chart and Table"}, {"USERREPORT_SETTINGS_TABLEONLY", "Table Only"}, {"USERREPORT_SETTINGS_SECTITLE2", "Default Chart Type"}, {"USERREPORT_SETTINGS_SUMMARYOTCHARTS", "Summary/Over Time Charts:"}, {"USERREPORT_SETTINGS_USRCHARTS", "User Based Charts:"}, {"USERREPORT_SETTINGS_SECTITLE3", "Number Of Items"}, {"USERREPORT_SETTINGS_NUMTOPSITE", "Number Of Top Sites:"}, {"USERREPORT_SETTINGS_NUMTOPUSRS", "Number Of Top Users:"}, {"USERREPORT_SETTINGS_NUMOFBY", "Number Of Sites By User/Users By Site:"}, {"USERREPORT_SETTINGS_FORNON", "(Default: &nbsp;&nbsp;For Non Sites/Users)"}, {"USERREPORT_SETTINGS_NUMOFITEMS", "Number Of Items:"}, {"USERREPORT_SETTINGS_NUMOFENTRIESPERITEM", "Number Of Entries Per Item:"}, {"USERREPORT_SETTINGS_SECTITLE4", "Inclusion Filter Parameters"}, {"USERREPORT_SETTINGS_SITELIST", "Site List:"}, {"USERREPORT_SETTINGS_USRLIST", "User List:"}, {"USERREPORT_SETTINGS_COMMASEP", "(comma separated)"}, {"USERREPORT_SETTINGS_HOURS", "Hours:"}, {"USERREPORT_SETTINGS_START", "Start"}, {"USERREPORT_SETTINGS_END", "End"}, {"USERREPORT_SETTINGS_INCLUSION_NOTE", "(Note: Site, User List and Hours settings are applicable only for the By Site and By Hour <br> reports respectively). Source and Destination Interface settings are for Bandwidth<br>Usage reports only."}, {"USERREPORT_SETTINGS_INCLUSION_NOTE_FOR_GEN2", "(Note: Site and User List settings are applicable only for the By Site and By User <br> reports respectively). Source and Destination Interface settings are for Bandwidth<br>Usage reports only."}, {"USERREPORT_SETTINGS_SECTITLE5", "Web Site Exclusion Filter"}, {"USERREPORT_SETTINGS_NOTE", "Web Usage Reports will not contain references to the web sites specified below"}, {"USERREPORT_SETTINGS_SELECTALL", "Select All"}, {"USERREPORT_SETTINGS_COLTITLE", "Web Sites Filter"}, {"USERREPORT_SETTINGS_SECTITLE6", "Web User Exclusion Filter"}, {"USERREPORT_SETTINGS_WEBUSER_NOTE", "Web Usage Reports will not contain references to the web users specified below"}, {"USERREPORT_SETTINGS_WEBUSER_COLTITLE", "Web Users Filter"}, {"USERREPORT_SETTINGS_ADD", "Add"}, {"USERREPORT_SETTINGS_DEL", "Delete"}, {"USERREPORT_SETTINGS_ROWSPERSCREEN", "Rows Per Screen"}, {"USERREPORT_SETTINGS_WHOLENAMEIP", "Whole Name/IP"}, {"USERREPORT_SETTINGS_CONFIRM_MSG", "Are you sure you want to submit these settings?"}, {"USERREPORT_SETTINGS_NOTE_MSG", "Note: Selecting larger values could impact the report generation performance."}, {"USERREPORT_SETTINGS_SRCINTERFACE", "Source Interface"}, {"USERREPORT_SETTINGS_DSTINTERFACE", "Destination Interface"}, {"USERREPORT_SETTINGS_BIDIRECTIONAL", "Bi-directional"}, {"SYSLOG_FILTER_EDIT_ADMIN", "Only Super Admin can Add or Edit the filter"}, {"SYSLOG_FILTER_DELETE_ADMIN", "Only Super Admin can delete the filter"}, {"SYSLOG_FILTER_DELETE", "Are you sure you want to delete filter"}, {"SYSLOG_FILTER_NOSELECTION", "No entries selected for deletion."}, {"SYSLOG_FILTER_DELETE_MULTIPLE_1", "You are about to delete the following Filters:\\n Syslog Field Name, Filter Value\\n"}, {"SYSLOG_FILTER_DELETE_MULTIPLE_2", "\\nDo you want to continue?"}, {"SYSLOG_FILTER_TITLE", "Syslog Exclusion Filter"}, {"SYSLOG_FILTER_FIELD", "Syslog Field Name cannot be blank.\\nPlease specify a valid name."}, {"SYSLOG_FILTER_FIELD_LENGTH", "Syslog Field Name cannot exceed 50 characters.\\nPlease specify a valid name."}, {"SYSLOG_FILTER_FIELD_VALUE", "Syslog Filter Value cannot be blank.\\nPlease specify a valid Value."}, {"SYSLOG_FILTER_EXISTS", "A Filter with this Field name and Value already exists.\\nPlease specify unique values."}, {"SYSLOG_FILTER_NOT_FOUND", "No filters configured"}, {"SYSLOG_FILTER_NOTE_MSG1", "* The Syslog Exclusion Filter applies only to the syslogs uploaded to the reporting database."}, {"SYSLOG_FILTER_NOTE_MSG1_PART", "  All syslogs continue to be stored in the file system without any filtering."}, {"SYSLOG_FILTER_NOTE_MSG2", "* Exclusion Filter Settings will be picked up by the Summarizer every:"}, {"SYSLOG_FILTER_NOTE_MSG3", "* To add/modify a Syslog Exclusion Filter at unit level, please navigate to Firewall/SRA > Unit Level > Reports > Filter Settings."}, {"SYSLOG_FILTER_NOTE_MSG4", "* Only Super Admin has access to edit, add and delete filter."}, {"SYSLOG_FILTER_NOTE_MSG5", "* Filter m=1391 will be disabled if Console > Reports > Summarizer > Packet Data Viewer feature is enabled."}, {"SYSLOG_FILTER_HOURS", "hour(s):"}, {"SYSLOG_FILTER_MINS", "min(s)."}, {"SYSLOG_FILTER_QUOTES", "Quotes not allowed.\\n Please try again."}, {"SYSLOG_FILTER_NAME_VALIDATION", "Syslog Field Name cannot have just the special character.\\n Please enter valid Syslog Field Name."}, {"SYSLOG_FILTER_FIELD_VALUE_VALIDATION", "Syslog Filter Value cannot have just the special character.\\n Please enter valid Syslog Filter Value."}, {"SYSLOG_FILTER_FIELD_NAME", "Syslog Field Name"}, {"SYSLOG_FILTER_FIELD_OPERATOR", "Operator"}, {"SYSLOG_FILTER_VALUE", "Syslog Filter Value"}, {"SYSLOG_FILTER_LEVEL", "Level"}, {"SYSLOG_FILTER_CONFIGURE", "Configure"}, {"SYSLOG_FILTER_COMMENT", "Comment"}, {"SYSLOG_FILTER_USERID", "GMS User"}, {"SYSLOG_APPLIANCE_TYPE", "Appliance Type"}, {"SYSLOG_FILTER_ADD", "Add"}, {"SYSLOG_FILTER_DELETE", "Delete"}, {"SYSLOG_FILTER_RESET", "Reset"}, {"SYSLOG_FILTER_EDIT", "Edit Filter"}, {"SYSLOG_FILTER_DISABLE", "Enable/Disable"}, {"SYSLOG_FILTER_DISABLE_NOSELECTION", "No entries selected."}, {"SYSLOG_FILTER_DISABLE_MULTIPLE_1", "You are about to enable/disable the following Filters:\\n Syslog Field Name, Filter Value\\n"}, {"SYSLOG_FILTER_DISABLE_MULTIPLE_2", "\\nDo you want to continue?"}, {"SYSLOG_FILTER_DEFAULT_SELECTION", "Default filters cannot be deleted."}, {"SYSLOG_FILTER_CONNECTION_OPENED", "Connection Opened. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_INTERFACE_STATISTICS_REPORT", "Interface Statistics Report. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_UDP_PACKET_DROPPED", "UDP packet dropped. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_DNS_PACKET_ALLOWED", "DNS packet allowed. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_DELETING_FROM_MULTICAST_POLICY", "Deleting from Multicast policy list, VPN SPI. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_UDP_DNS", "UDP DNS traffic. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_UDP_TRAFFIC", "UDP traffic. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_NAT_MAPPING", "NAT Mapping. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_ICMP_PACKET", "ICMP packet allowed. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_MESSAGE_PRIORITY", "Message priority, 7=debug. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_TCP_CONNECTION_DROPPED", "TCP connection dropped. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_WEB_MANAGEMENT_REQUEST", "Web management request allowed. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_ICMP_PACKET_DROPPED_POLICY", "ICMP packet dropped due to policy. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_INITIATOR", "IKE Initiator: Start Quick Mode. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_INVALID_ID_INFO", "Received notify: INVALID_ID_INFO. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_WEB_ACCESS_REQUEST_DROPPED", "Web access request dropped. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_RESPONDER_RCVD_QUICK_MODE_REQUEST", "IKE Responder: Received Quick Mode Request. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_RESPONSER_IPSEC_PROPOSAL_NO_MATCH", "IKE Responder: IPsec proposal does not match. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_RESPONSER_PEER_LOCAL_NETWORK", "IKE Responder: Peer local network does not match VPN policys Destination Network. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_INITIATOR_REMOTE_PARTY_TIMEOUT", "IKE Initiator: Remote party timeout - Retransmitting IKE request. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_RCVD_NOTIFY_NO_PROPOSAL_CHOSEN", "Received notify. NO_PROPOSAL_CHOSEN. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_RESPONDER_IKE_PROPOSAL_NO_MATCH", "IKE Responder: IKE proposal does not match. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_PACKET_DATA", "Packet Data. Source for the system filters is taken from Log Event Reference Guides"}, {"SCHED_CONFIGURE_TITLE", "SonicWall Analyzer - Set Email/Archive Time"}, {"SCHED_CONFIGURE_NEXTSCHEDTIME", "Next Schedule Time"}, {"SCHED_CONFIGURE_NEXTSCHEDTIME2_1", "Are you sure you want to change the next email/archive time?"}, {"SCHED_CONFIGURE_NEXTSCHEDTIME2_2", "The scheduled interval would also change accordingly based on this time."}, {"SCHED_CONFIGURE_LASTSENTTIME", "Weekly Report Last Sent"}, {"SCHED_CONFIGURE_LASTSENTTIME2", "Are you sure you want to change the weekly report last sent timestamp?"}, {"SCHED_CONFIGURE_LASTMONTHLYSENTTIME", "Monthly Report Last Sent"}, {"SCHED_CONFIGURE_LASTMONTHLYSENTTIME2", "Are you sure you want to change the monthly report last sent timestamp?"}, {"SCHED_CONFIGURE_UPDCONFIRM_1", "Are you sure you want to change the web server configuration?"}, {"SCHED_CONFIGURE_UPDCONFIRM_2", "Changing these parameters could affect the Scheduled Reports Email/Archive functionality."}, {"SCHED_CONFIGURE_WEEKLYUPDCONFIRM", "Are you sure you want to change the day of the week the weekly reports are emailed/archived?"}, {"SCHED_CONFIGURE_MONTHLYUPDCONFIRM", "Are you sure you want to change the day of the month the monthly reports are emailed/archived?"}, {"SCHED_CONFIGURE_LOGOUPDCONFIRM", "Are you sure you want to replace the current Logo File ?"}, {"SCHED_CONFIGURE_LOGO_DELETE_CONFIRM", "Are you sure you want to delete the Logo ?"}, {"SCHED_CONFIGURE_TITLE2", "Email/Archive Time Settings "}, {"SCHED_CONFIGURE_TITLE3", "Next Scheduled Email/Archive Time (mm/dd/yyyy hh:min)"}, {"SCHED_CONFIGURE_TITLE4", "Send Weekly Reports Every"}, {"SCHED_CONFIGURE_TITLE5", "Send Monthly Reports Every"}, {"SCHED_CONFIGURE_WEBSERVERTITLE", "Email/Archive Configuration - Web Server Details "}, {"SCHED_CONFIGURE_WEBSERVERNOTE", "Following is the web server configuration information used by the Email/Archive component."}, {"SCHED_CONFIGURE_NOTE", "Note:"}, {"SCHED_CONFIGURE_NOTE1", "* Weekly reports are generated for Monday-Sunday of the week, and Monthly Reports are generated for the 1-30/31 of the month."}, {"SCHED_CONFIGURE_NOTE2", "* Next Attempated Email/Archive Time: "}, {"SCHED_CONFIGURE_OPTIMIZATION_MSG_1", "Optimization run from"}, {"SCHED_CONFIGURE_OPTIMIZATION_MSG_2", " to "}, {"SCHED_CONFIGURE_OPTIMIZATION_MSG_3", " set Next Scheduled Email/Archive Time accordingly"}, {"SCHED_CONFIGURE_UPDNOTE", "Note: These fields cannot be modified and are updated automatically according to the web server settings."}, {"SCHED_CONFIGURE_SERVERADDRESS", "Web Server Address: "}, {"SCHED_CONFIGURE_SERVERPROTOCOL", "Web Server Protocol: "}, {"SCHED_CONFIGURE_SERVERPORT", "Web Server Port:"}, {"SCHED_CONFIGURE_XML_DAYSTOSTORE", "Days to store XML reports:"}, {"SCHED_CONFIGURE_XMLREPORTTITLE", "Days to Store Archived/Published reports"}, {"SCHED_CONFIGURE_LOGOSETTINGSTITLE", "Logo Settings "}, {"SCHED_CONFIGURE_CURRENT_LOGO", "Logo currently in use"}, {"SCHED_CONFIGURE_SORTBYSETTINGSTITLE", "Sort By Settings In PDF Reports "}, {"SCHED_CONFIGURE_STORAGE", "Storage Configuration"}, {"SCHED_CONFIGURE_USRDAYS_TO_STORE", "USR - Days to Store"}, {"SCHED_USERINF_TITLE", "SonicWall Analyzer Reports - Set Parameters"}, {"SCHED_USERINF_NAME", "Name "}, {"SCHED_USERINF_EMAIL", "Email"}, {"SCHED_USERINF_DESCRIPTION", "Description "}, {"SCHED_USERINF_TAGALERT", "field cannot contain HTML tag."}, {"SCHED_USERINF_CATEGORYALERT", "At least one of the categories has to be chosen - EMail/Archive"}, {"SCHED_USERINF_SMTPALERT", "Please provide the SMTP server IP Address"}, {"SCHED_USERINF_PASSWDALERT_1", "Password protection can be enabled only for zip files."}, {"SCHED_USERINF_PASSWDALERT_2", "Please enable the zip option."}, {"SCHED_USERINF_PASSWDALERT2", "Please provide a valid password for password protection."}, {"SCHED_USERINF_ARCHALERT_1", "Archiving is not enabled, but an archive folder is specified."}, {"SCHED_USERINF_ARCHALERT_2", "Do you want to enable archiving?"}, {"SCHED_USERINF_INLINEALERT_1", "Inline Option for email has been selected."}, {"SCHED_USERINF_INLINEALERT_2", "This option is available only for single reports."}, {"SCHED_USERINF_INLINEALERT_3", "Do you want to include all reports in a single file?"}, {"SCHED_USERINF_INLINEMAXALERT_1", "Note: Only a maximum of 8 reports are allowed for the Inline option."}, {"SCHED_USERINF_INLINEMAXALERT_2", "Please remove additional reports from the selection."}, {"SCHED_USERINF_RPTSELECTIONALERT", "Please select at least one report to be emailed or archived"}, {"SCHED_USERINF_EMAILADDRALERT", "Source Email Address"}, {"SCHED_USERINF_DESTEMAILADDRALERT", "Destination Email Address"}, {"SCHED_USERINF_REPORTNAMEALERT", "The report name cannot be empty"}, {"SCHED_USERINF_INLINEALERT1", "Inline Option is disabled, do you want to disable the Single Report Option?"}, {"SCHED_USERINF_CONFTITLE", "Scheduled Report Configuration"}, {"SCHED_USERINF_SINGLETITLE", "Single Day EMail Report Configuration"}, {"SCHED_USERINF_SMTPSERVER", "SMTP Server: "}, {"SCHED_USERINF_SUBJLINE", "Email Subject: "}, {"SCHED_USERINF_DESTEMAILADDR", "Destination Email Addresses (semicolon separated):"}, {"SCHED_USERINF_SRCEMAILADDR", "Source Email Address: "}, {"SCHED_USERINF_EMAILODY", "Email Body: "}, {"SCHED_USERINF_INLINE", "Send Reports Inline"}, {"SCHED_USERINF_DEFLTNOTE", "(By default, reports are sent as attachments. Only single reports can be sent inline.)"}, {"SCHED_USERINF_ARCHIVE", "Archive"}, {"SCHED_USERINF_DIR", "Save Directory: "}, {"SCHED_USERINF_DIRINFO", "(If path is invalid, default path is [gmsvp directory]/Viewpoint/reports.)"}, {"SCHED_USERINF_XMLFMT", "Generate Reports in XML Format"}, {"SCHED_USERINF_CREATESINGLERPT", "Include all data in a single report"}, {"SCHED_USERINF_ZIPFMT", "Zip Reports into a single file"}, {"SCHED_USERINF_ZIPPASSWD", "Password Protect the Zip File"}, {"SCHED_USERINF_PASSWD", "Password: "}, {"SCHED_USERINF_TEMPLATEDIR", "Template Folder Name: <br>(For custom reports)"}, {"SCHED_USERINF_TEMPLATEDIRNOTE", "(Requires only the folder name and not the complete path.)"}, {"SCHED_USERINF_FILTER", "User/Server Filter"}, {"SCHED_USERINF_FILTER_NOTE", "(Filter to be applied to user-based reports, a comma separated list of hosts.)"}, {"SCHED_USERINF_FILTER_NOTE2", "(User-based reports for this schedule will contain only the users specified in this filter list.)"}, {"SCHED_USERINF_FILTER_OPTIONS", "Configure Filters/Options"}, {"SCHED_USERINF_RPTLIST", "Report List"}, {"SCHED_USERINF_SELECTALL", "Select All"}, {"SCHED_USERINF_PROFILEALERT", "Please provide a name for the new profile"}, {"SCHED_USERINF_COVER_TITLE_ALERT", "Please provide the title for the cover page"}, {"SCHED_USERINF_MULTITITLE", "Multiple Day EMail Report Configuration"}, {"SCHED_USERINF_DAILY", "Daily"}, {"SCHED_USERINF_WEEKLY", "Weekly"}, {"SCHED_USERINF_MONTHLY", "Monthly"}, {"SCHED_USERINF_TYPE", "Report Type"}, {"SCHED_USERINF_FORMAT", "Report Format"}, {"SCHED_SUMMARY_MSGSPERSCRN", "Messages Per Screen"}, {"SCHED_SUMMARY_SELECTALERT", "Please select at least one scheduled report to be emailed."}, {"SCHED_SUMMARY_DELALERT", "Are you sure you want to delete the selected schedule(s) ?"}, {"SCHED_SUMMARY_DISABLEALERT", "Are you sure you want to disable the selected schedule(s) ?"}, {"SCHED_SUMMARY_ENABLEALERT", "Are you sure you want to enable the selected schedule(s) ?"}, {"SCHED_SUMMARY_DELSELECTALERT", "Please select at least one scheduled report to be deleted."}, {"SCHED_SUMMARY_DISABLESELECTALERT", "Please select at least one scheduled report to be disabled."}, {"SCHED_SUMMARY_ENABLESELECTALERT", "Please select at least one scheduled report to be enabled."}, {"SCHED_SUMMARY_SECTITLE1", "Add Additional Scheduled Reports"}, {"SCHED_SUMMARY_ADD", "Add Scheduled Report"}, {"SCHED_SUMMARY_ADDDAILY", "Add Daily Scheduled Report"}, {"SCHED_SUMMARY_ADDMULTIDAY", "Add Multi-Day Scheduled Report"}, {"SCHED_SUMMARY_SECTITLE2", "Summary of Scheduled Reports"}, {"SCHED_SUMMARY_SELECTALL", "Select All Scheduled Reports"}, {"SCHED_SUMMARY_DELALL", "Delete Selected Scheduled Reports"}, {"SCHED_SUMMARY_DISABLESELECTEDRPTS", "Disable Selected Scheduled Reports"}, {"SCHED_SUMMARY_ENABLESELECTEDRPTS", "Enable Selected Scheduled Reports"}, {"SCHED_SUMMARY_ENABLED", "Enabled"}, {"SCHED_SUMMARY_RPTNAME", "Report Name"}, {"SCHED_SUMMARY_RPTTYPE", "Report Type"}, {"SCHED_SUMMARY_EMAIL", "Email"}, {"SCHED_SUMMARY_ARCHIVE", "Archive"}, {"SCHED_SUMMARY_ZIP", "Zip"}, {"SCHED_SUMMARY_SINGLEFILE", "Single file"}, {"SCHED_SUMMARY_DOCFMT", "Document Format"}, {"SCHED_SUMMARY_TOEMAIL", "To Email Address"}, {"SCHED_SUMMARY_SMTP", "SMTP Server"}, {"SCHED_SUMMARY_FROMEMAIL", "From Email Address"}, {"SCHED_SUMMARY_SUBJ", "Subject"}, {"SCHED_SUMMARY_MSG", "Message"}, {"SCHED_SUMMARY_ARCHDIR", "Archive Folder"}, {"SCHED_SUMMARY_RPTS", "Reports"}, {"SCHED_SUMMARY_UNRECOGNIZEDSCR", "Unrecognized Report"}, {"SCHED_REPORT_LIST_SELECTALL", "Select All"}, {"CONFIGSUMMARIZER_SETTINGS_TITLE", "Report Types to be Summarized"}, {"CONFIGSUMMARIZER_SETTINGS_SELWARNING_1", "No reports are selected for summarization."}, {"CONFIGSUMMARIZER_SETTINGS_SELWARNING_2", "Analyzer summarizer will not run for all units under this node."}, {"CONFIGSUMMARIZER_SETTINGS_SELWARNING_3", "Are you sure you want to continue?"}, {"CONFIGSUMMARIZER_SETTINGS_NOTE", "Note: "}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_1", "Summarizer settings for appliance(s) "}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_2", " differ between unit and group level. The settings at the unit level will override the settings at the Group level."}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_3", "Sync appliance(s) to group level settings"}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_4", "Sync group to appliance level settings"}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_5", " more appliances"}, {"SUMMARIZER_SETTINGS_TITLE", "SonicWall Analyzer - Scheduled Reports - Set Data Storage Parameters"}, {"SUMMARIZER_SETTINGS_INTERVALALERT", "Are you sure you want to change the time interval?"}, {"SUMMARIZER_SETTINGS_INTERVALERROR", "Summarizer interval cannot be 0 hrs 0 mins."}, {"SUMMARIZER_SETTINGS_DELETEALERT", "Are you sure you want to change the syslog deletion time?"}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_1", "The amount of days to retain summarized report data will be changed."}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_2", "This operation would retain summary data corresponding to the last "}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_3", " days only."}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_4", "Summarized report data older than "}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_5", " days will be deleted if the value you entered is"}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_6", "lower than before."}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_7", "Are you sure you want to change this setting?"}, {"SUMMARIZER_SETTINGS_POSITIVEALERT", "Only positive integers and 'All' string accepted,please re-enter value"}, {"SUMMARIZER_SETTINGS_STORAGEEALERT_1", "This operation would retain all the summarized report data in the database."}, {"SUMMARIZER_SETTINGS_STORAGEEALERT_2", "The hard disk on the database server could get filled up eventually."}, {"SUMMARIZER_SETTINGS_VPSTORAGEEALERT_1", "This operation would retain all the summarized report data in the database."}, {"SUMMARIZER_SETTINGS_VPSTORAGEEALERT_2", "The MSDE database ( has a limitation of 2GB ) used by Analyzer"}, {"SUMMARIZER_SETTINGS_VPSTORAGEEALERT_3", "could get filled up eventually."}, {"SUMMARIZER_SETTINGS_UPLOADNOWALERT", "Are you sure you want to upload the raw syslog files now?"}, {"SUMMARIZER_SETTINGS_UPLOADNOWTRAILALERT", "Note: This is a one time file upload and will not affect the scheduled uploads."}, {"SUMMARIZER_SETTINGS_NOENDDTALERT_1", "Are you sure you want to summarize the data from "}, {"SUMMARIZER_SETTINGS_NOENDDTALERT_2", " till Now?"}, {"SUMMARIZER_SETTINGS_NOENDDTALERT_3", "If not, please specify an End date for the summarization date range."}, {"SUMMARIZER_SETTINGS_CHANGEALERT", "Are you sure you want to change the report settings?"}, {"SUMMARIZER_SETTINGS_CONSOLIDATIONALERT", "NOTE: Changes to Web Event Consolidation only apply to new reporting \\n data and will have no affect on existing report data."}, {"SUMMARIZER_SETTINGS_ISENABLEDALERT_1", "Are you sure you want to "}, {"SUMMARIZER_SETTINGS_ISENABLEDALERT_2", " Distributed Summarizer?"}, {"SUMMARIZER_SETTINGS_ENABLE_DISTSUMMARIZER", "Are you sure you want to enable Distributed Summarizer?"}, {"SUMMARIZER_SETTINGS_DISABLE_DISTSUMMARIZER", "Are you sure you want to disable Distributed Summarizer?"}, {"SUMMARIZER_SETTINGS_NOCHANGE", "No changes were made"}, {"SUMMARIZER_SETTINGS_NEXTSUMZTIME", "Next Scheduled Summary Time"}, {"SUMMARIZER_SETTINGS_NEXTSUMMRYALERT_1", "Are you sure you want to change the next summary time?"}, {"SUMMARIZER_SETTINGS_NEXTSUMMRYALERT_2", "The scheduled interval would also change accordingly "}, {"SUMMARIZER_SETTINGS_NEXTSUMMRYALERT_3", "based on this time."}, {"SUMMARIZER_SETTINGS_GEN1ONLYALERT", "Last Summarized Time can only be updated for Generation 1 Summarizer"}, {"SUMMARIZER_SETTINGS_LASTSUMMALERT", "Last Summary Time"}, {"SUMMARIZER_SETTINGS_LASTSUMMALERT2", "Are you sure you want to change the last summary available timestamp value?"}, {"SUMMARIZER_SETTINGS_DELALERT", "Delete Summary Date"}, {"SUMMARIZER_SETTINGS_DELALERT2_1", "Are you sure you want to delete summary data for "}, {"SUMMARIZER_SETTINGS_DELALERT2_2", "?"}, {"SUMMARIZER_SETTINGS_COSTALERT", "Cost Per MByte Bandwidth Use"}, {"SUMMARIZER_SETTINGS_SECTITLE1", "Summarizer Settings"}, {"SUMMARIZER_SETTINGS_DISTSUMMRZR", "Enable Distributed Summarizer"}, {"SUMMARIZER_SETTINGS_TABLE_EMPTY", "Summarizer table is Empty"}, {"SUMMARIZER_SETTINGS_SUMMARIZER_AT", "Summarizer at"}, {"SUMMARIZER_SETTINGS_UPLOAD_NOW", "Upload Raw Syslog Data Immediately:"}, {"SUMMARIZER_SETTINGS_UPLOAD_NOW_BTN", "Upload Files Now"}, {"SUMMARIZER_SETTINGS_SECTITLE3", "Reports Summarization Data for Top Usage"}, {"SUMMARIZER_SETTINGS_NUMOFTOPSITES", "Number Of Top Sites :"}, {"SUMMARIZER_SETTINGS_NUMOFTOPUSERS", "Number Of Top Users :"}, {"SUMMARIZER_SETTINGS_NUMOFTOPSITESPERUSERS", "Number Of Top Sites Per User :"}, {"SUMMARIZER_SETTINGS_ENABLEHOMEPORT", "Enable HomePort Syslog Reporting"}, {"SUMMARIZER_SETTINGS_SECTITLE4", "Summarizer Settings for Data Usage Reports"}, {"SUMMARIZER_SETTINGS_CURRTYPE", "Type Of Currency: "}, {"SUMMARIZER_SETTINGS_COSTPERMB", "Cost Per Mega Byte Data Use: "}, {"SUMMARIZER_SETTINGS_SECTITLE5", "Data Deletion And Storage Configuration"}, {"SUMMARIZER_SETTINGS_DAYSTOSTORE", "Days To Store Summarized Data:"}, {"SUMMARIZER_SETTINGS_DELETEAT", "Delete Data Every: "}, {"SUMMARIZER_SETTINGS_DELETEFOR", "Delete Summarized Data For (mm/dd/yyyy):"}, {"SUMMARIZER_SETTINGS_DELETENOTE", "Changes to \"Data Deletion Schedule\" and \"Data Storage Configuration\" will take effect after the current run."}, {"SUMMARIZER_SETTINGS_DELETENOTE1", "Report data older than Current month + Number of month to keep (Keep Reporting Data for:) will be deleted."}, {"SUMMARIZER_SETTINGS_DELETENOTE2", "It is recommended that the Data Deletion Schedule be configured to run after the data has been backed up."}, {"SUMMARIZER_SETTINGS_DELETENOTE2PART2", "Navigate to Appliance > System > Backup/Restore to review current backup schedule."}, {"SUMMARIZER_SETTINGS_SECTITLE6", "Summarized Reports Data Available"}, {"SUMMARIZER_SETTINGS_SEC5NOTE", "Following is the time the Summarizer completed its last run. You can change the settings appropriately to re-summarize data for any required days."}, {"SUMMARIZER_SETTINGS_DATAASOF", "Summarized Reports Available As Of <br> (mm/dd/yyyy hh:min)  :"}, {"SUMMARIZER_SETTINGS_FORDTRANGE", "Summarize for a date range <br> (mm/dd/yyyy) :"}, {"SUMMARIZER_SETTINGS_FULLURL", "Enable Full URL Reporting"}, {"SUMMARIZER_SETTINGS_FULLURL_NOTE", "Note: Enabling the Full URL Reporting feature could affect the performance of the system."}, {"SUMMARIZER_SETTINGS_WEB_EVENT_CONSOLIDATION", "Enable Web Event Consolidation"}, {"SUMMARIZER_SETTINGS_WEB_EVENT_CONSOLIDATION_FOOTER", "Web Event Consolidation is enabled."}, {"SUMMARIZER_SETTINGS_ENABLE_CATEGORY_RECONCILE", "Resolve \"Not Rated\" categories using message comparison"}, {"SUMMARIZER_SETTINGS_SECTITLE6", "Host Name Resolution Settings"}, {"SUMMARIZER_SETTINGS_RDNS_ENABLE", " Resolve Destination Host Names"}, {"SUMMARIZER_SETTINGS_RDNS_INTERVAL", " Periodic Crawling Interval"}, {"SUMMARIZER_SETTINGS_RDNS_PRIVATEIP", "Resolve Source Host Names"}, {"SUMMARIZER_SETTINGS_SUMMZ_REPS", " Report Summarization?"}, {"SUMMARIZER_SETTINGS_ENABLE_SUMMZREPS", "Are you sure you want to enable Report Summarization?"}, {"SUMMARIZER_SETTINGS_DISABLE_SUMMZREPS", "Are you sure you want to disable Report Summarization?"}, {"SUMMARIZER_SETTINGS_SUMMZ_REPS_TITLE", "Enable Report Summarization"}, {"SUMMARIZER_SETTINGS_HNR_NOTE", "Enabling the Host Name Resolution feature will affect the overall performance of the system and with a more direct impact on the Summarizer module. Setting the Periodic Crawling interval to less than the Summarizer interval will affect the summarizer performance."}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE", "Months to Store Report Data for: "}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_2", " is: "}, {"SUMMARIZER_SETTINGS_MONTHALERT", "Are you sure you want to change the summarizer settings?"}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_RAW", "Months to Store Raw Syslog Data for: "}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_1", "Keep Raw Syslog Data Files for: "}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_2", "Keep Reporting Data for: "}, {"SUMMARIZER_SETTINGS_SECTITLE7", "Data Deletion Schedule"}, {"SUMMARIZER_SETTINGS_SECTITLE8", "Data Storage Configuration"}, {"SUMMARIZER_SETTINGS_UNIT", "months"}, {"SUMMARIZER_DATA_CONFIGURATION_SETTINGS_MSG", "Settings for Data Storage Configuration Updated Successfully."}, {"SUMMARIZER_UPGRADED_FROM", "Delete GMS 6.0 Reporting Data Immediately:"}, {"SUMMARIZER_UPGRADED_FROMALERT", "Are you sure you want to delete GMS 6.0 Reporting data?"}, {"SUMMARIZER_UPGRADED_FROMMSG", "GMS 6.0 Reporting Data deleted successfully"}, {"SUMMARIZER_UPGRADED_FROM_ERRMSG", "Failed to delete GMS 6.0 Reporting Data"}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_3", "Keep Application Table Data for: "}, {"SUMMARIZER_SETTINGS_APP_TABLE_MONTHALERT", "Are you sure you want to change the application table settings?"}, {"SUMMARIZER_SETTINGS_SECTITLE9", "Private IP Hostname Resolution Configuration"}, {"SUMMARIZER_SETTINGS_LOOKUP_ENABLE", "Enable Reverse Hostname Resolution"}, {"SUMMARIZER_SETTINGS_LOOKUP_THREAD_COUNT", "Lookup thread count"}, {"SUMMARIZER_SETTINGS_LOOKUP_THREAD_COUNT_HELP", "Number of threads that will be processing the resolution."}, {"SUMMARIZER_SETTINGS_TIME_DIFF", "Scan every"}, {"SUMMARIZER_SETTINGS_TIME_DIFF_HELP", "Time intervals at which the lookup is triggered."}, {"SUMMARIZER_SETTINGS_CACHE_TIMEOUT", "Refresh Resolved Hostname Cache every"}, {"SUMMARIZER_SETTINGS_CACHE_TIMEOUT_HELP", "Time duration for which the hostname is cached to a particular IP."}, {"SUMMARIZER_SETTINGS_HOSTNAME_ALERT", "Enabling lookup increases time taken to process syslogs, look in note for details.Are you sure you want to change lookup setting?"}, {"SUMMARIZER_SETTINGS_HOURS", "Hours"}, {"SUMMARIZER_SETTINGS_MINUTES", "minutes"}, {"SUMMARIZER_SETTINGS_LOOKUP_NOTE_POWER", "Enabling Private IP hostname lookup will increase the time taken to process syslogs. All syslogs which need resolution will be processed separately in parallel to normal syslog processing. This might slow down summarizer and increase memory and  consume more CPU cycle. Also the memory and CPU will also be impacted further by changing the default configurations of Lookup thread count, Scan every, Refresh Resolved Hostname Cache every."}, {"SUMMARIZER_SETTINGS_LOOKUP_NOTE_DELAY", "Any changes to the Hostname Resolution Configuration will take effect during the next summarizer run."}, {"SUMMARIZER_HOSTNAME_CONFIGURATION_SETTINGS_MSG", "Settings for Hostname Resolution Configuration Updated Successfully."}, {"SYSLOG_COLLECTOR_UPDATE_SUCCESSFUL", "Settings for minimum disk space updated successfully. "}, {"SYSLOG_COLLECTOR_MINIMUM_DISK_SPACE_LABEL", "Minimum Disk Space Configuration"}, {"SYSLOG_COLLECTOR_NOTE_PART_1", "Syslog Collector will have to be restarted for the changes to "}, {"SYSLOG_COLLECTOR_NOTE_PART_2", " to take effect."}, {"SYSLOG_COLLECTOR_NOTE_PART_3", " If the free disk space falls below this value, Syslog Collector will stop listening for syslogs."}, {"SYSLOG_COLLECTOR_CONFIRM_CHANGE", "Are you sure want to update the disk threshold values?"}, {"SYSLOG_COLLECTOR_CONFIRM_CHANGE_DEFAULT", "Default selection will check for the minimum 5GB Avaliable disk Space for Syslogs to process. Are you sure want to update the disk threshold values?"}, {"SYSLOG_COLLECTOR_MINIMUM_PERCENTAGE_DESCRIPTION", "Minimum % of disk space that should be free for Syslog Collector to consume syslogs:"}, {"SYSLOG_COLLECTOR_MINIMUM_DISKSPACE_NOTE", "Setting the Minimum Disk Space percentage to 'Default' will set it to 5GB minimum disk space required."}, {"SYSLOG_PER_FILE_NOTE", "Changes to \"Syslog Data File Size Configuration\" reflects number of syslog messages per \".src\" file in syslogs directory."}, {"SUMMARIZER_SETTINGS_SECTITLE10", "Syslogs sent by Appliances that are not under Reporting and Management"}, {"SUMMARIZER_SETTINGS_ENABLE_NMM", "Store Syslogs"}, {"SUMMARIZER_SETTINGS_ENABLE_NMM_ALERT", "Are you sure you want to enable Syslog collection from Appliances that are not under Reporting and Management?"}, {"SUMMARIZER_NMM_CONFIGURATION_SETTINGS_MSG", "Settings for Syslog collection Updated Successfully."}, {"SUMMARIZER_SYSLOGPERFILE_HEADER", "Syslog Data File Size Configuration"}, {"SUMMARIZER_SYSLOGPERFILE_LABEL", "Number of syslog messages per file"}, {"SUMMARIZER_SYSLOGPERFILE_ALERT", "Are you sure you want to set syslog messages per file value to "}, {"SUMMARIZER_SYSLOGPERFILE_BLANK_ALERT", "Number of syslog messages per file value cannot be blank"}, {"SUMMARIZER_SYSLOGPERFILE_INVALID_ALERT", "Invalid value for Number of syslog messages. Please enter a Integer value between $ and #."}, {"GEN_SETTINGS_TITLE1", "Report Settings/Options"}, {"GEN_SETTINGS_SORT", "Enable Sort Option on Report Tables"}, {"GEN_SETTINGS_SORT_MSG", "Report Sort Option changed successfully."}, {"GEN_SETTINGS_HOST_RESOLUTION_MSG", "Enable Host Name Resolution on Reports"}, {"GEN_SETTINGS_UPLOADRAWSYSLOG", "Enable Raw Syslog Data Upload"}, {"GEN_SETTINGS_UPLOADRAWSYSLOG_SUCCESS", "Raw Syslog Data Upload configuration changed successfully."}, {"GEN_SETTINGS_UPLOADRAWSYSLOG_FAILED", "Error: Could not update Raw Syslog Data Upload configuration."}, {"GEN_SETTINGS_LOGVIEWER_TITLE", "Log Viewer Settings"}, {"GEN_SETTINGS_NUM_DEVICES", "Maximum number of appliances on which Log Viewer can be enabled: "}, {"GEN_SETTINGS_NUM_DEVICES_MSG", "Log Viewer appliance limit changed successfully."}, {"REPORTS_TASKS_TITLE1", "Summary"}, {"REPORTS_TASKS_TOTALSCHED", "Schedules in the system:"}, {"REPORTS_TASKS_NEXTSCHEDTIME", "Next Scheduled Email/Archive Time:"}, {"REPORTS_TASKS_LASTWKLYSCHED", "Weekly Schedules Last Attempted:"}, {"REPORTS_TASKS_NEXTWKLYSCHED", "Next Weekly Reports Time:"}, {"REPORTS_TASKS_LASTMONTHLYSCHED", "Monthly Schedules Last Attempted:"}, {"REPORTS_TASKS_NEXTMONTHLYSCHED", "Next Monthly Reports Time:"}, {"REPORTS_TASKS_TITLE2", "Search Criteria"}, {"REPORTS_TASKS_SCHEDTYPE", "Schedule Type:"}, {"REPORTS_TASKS_DAILYSCHEDS", "Daily Schedules"}, {"REPORTS_TASKS_WEEKLYSCHEDS", "Weekly Schedules"}, {"REPORTS_TASKS_MONTHLYSCHEDS", "Monthly Schedules"}, {"REPORTS_TASKS_ALL", "All"}, {"REPORTS_TASKS_STATUS", "Status:"}, {"REPORTS_TASKS_FAIL", "Fail"}, {"REPORTS_TASKS_INPROGRESS", "In Progress"}, {"REPORTS_TASKS_SUCCESS", "Success"}, {"REPORTS_TASKS_INQ", "In Queue"}, {"REPORTS_TASKS_PARTFAIL", "Partial Failure"}, {"REPORTS_TASKS_NODE", "Appliance Node:"}, {"REPORTS_TASKS_OWNER", "Owner:"}, {"REPORTS_TASKS_NAMECONTAINS", "Name contains:"}, {"REPORTS_TASKS_ERRORCONTAINS", "Error contains:"}, {"REPORTS_TASKS_CONDITION", "Use condition:"}, {"REPORTS_TASKS_AND", "AND"}, {"REPORTS_TASKS_OR", "OR"}, {"REPORTS_TASKS_MATCHCASE", "Match case:"}, {"REPORTS_TASKS_STARTSEARCH", "Start Search"}, {"REPORTS_TASKS_CLRSEARCH", "Clear Search"}, {"REPORTS_TASKS_TITLE3", "Search Results"}, {"REPORTS_TASKS_SCHEDSPERSCRN", "Show Schedules Per Screen:"}, {"REPORTS_TASKS_RANGE", "(Range: 10-100)"}, {"REPORTS_TASKS_GOTONSCHED", "Go To Schedule Number:"}, {"REPORTS_TASKS_SELECTDISPLAYEDONLY_1", "Select Only the"}, {"REPORTS_TASKS_SELECTDISPLAYEDONLY_2", "Schedules Displayed Above"}, {"REPORTS_TASKS_SELECTALL", "Select All Schedules"}, {"REPORTS_TASKS_EMAILNOW", "E-Mail/Archive the selected schedules now"}, {"REPORTS_TASKS_EMAILNOWNOTE", "(Note: This is a one time event and will not affect the Scheduled E-Mail/Archive time.)"}, {"REPORTS_TASKS_DELSELECTEDSCHEDS", "Delete the selected schedules"}, {"REPORTS_TASKS_RESENDSELECTEDSCHEDS", "Re-send the selected schedules for dates (mm/dd/yyyy):"}, {"REPORTS_TASKS_START", " Report Date:"}, {"REPORTS_TASKS_END", " End Date:"}, {"REPORTS_TASKS_START_DESC", " Report date to generate reports for.  Used as beginning date for Weekly and Monthly reports."}, {"REPORTS_TASKS_END_DESC", " Applies to Weekly and Monthly reports. If omitted, end of week or month will be assumed."}, {"REPORTS_TASKS_CALENDAR", "Calendar"}, {"REPORTS_TASKS_RESENDNOTE_1", "(Note:"}, {"REPORTS_TASKS_RESENDNOTE_2", "* This is a one time event and will not affect the Scheduled E-Mail/Archive time."}, {"REPORTS_TASKS_RESENDNOTE_3", "* Only one set of reports will be sent for the specified date/date range. End Date is optional.)"}, {"REPORTS_TASKS_COLID", "ID"}, {"REPORTS_TASKS_COLNAME", "Name"}, {"REPORTS_TASKS_COLTYPE", "Type"}, {"REPORTS_TASKS_COLNODE", "Unit/Group/Device(s)"}, {"REPORTS_TASKS_COLLASTRUN", "Last Run (Local)"}, {"REPORTS_TASKS_COLSTATUS", "Status"}, {"REPORTS_TASKS_COLLASTRUNTYPE", "Last Run Type"}, {"REPORTS_TASKS_COLLASTERROR", "Last Error"}, {"REPORTS_TASKS_COLOWNER", "Owner"}, {"REPORTS_TASKS_ALERT_NOSTDATE", "No Start Date specified. Please specify a start date."}, {"REPORTS_TASKS_ALERT_WRONGSTFORMAT", "Wrong start date format. Date has to be in the form mm/dd/yyyy."}, {"REPORTS_TASKS_ALERT_WRONGSTDATE", "Wrong start date. Please input a valid date of the form mm/dd/yyyy."}, {"REPORTS_TASKS_ALERT_WRONGENDFORMAT", "Wrong end date format. Date has to be in the form mm/dd/yyyy."}, {"REPORTS_TASKS_ALERT_WRONGENDDATE", "Wrong end date. Please input a valid date of the form mm/dd/yyyy."}, {"REPORTS_TASKS_ALERT_DATESORDER", "End date lesser than start date. Please input valid start and end dates."}, {"REPORTS_TASKS_ALERT_SETTOTAL1", "Note: This would select all the "}, {"REPORTS_TASKS_ALERT_SETTOTAL2", " pending tasks."}, {"REPORTS_TASKS_ALERT_CHECKSELNOTE", "Note: This would undo the selection of all the pending schedules selected on the other screens!"}, {"REPORTS_TASKS_ALERT_EMAIL", "You must select at least one schedule for emailing/archiving."}, {"REPORTS_TASKS_ALERT_DEL1", "Are you sure you want to delete the selected schedule(s)?"}, {"REPORTS_TASKS_ALERT_DEL2", "You must select at least one schedule for deletion."}, {"REPORTS_TASKS_ALERT_RESEND1", "Your current view of schedules includes schedules of different types (Daily, Weekly and Monthly)."}, {"REPORTS_TASKS_ALERT_RESEND2", "Are you sure you want to re-send the selected Schedule(s) with the specified date(s)?"}, {"REPORTS_TASKS_ALERT_RESEND3", "You must select at least one schedule to be sent again."}, {"REPORTS_TASKS_SCHEDULED_NUMBER", "Go to Schedule Number"}, {"REPORTS_TABLE_OF_CONTENTS", "Table Of Contents"}, {"JUMP_TO_NODE_TITLE", "Select View to Switch to"}, {"JUMP_TO_NODE_NOTE", "The schedule you have selected is for a group which is not present in the current view. Please select the view you want to switch to from the list below or click Cancel to remain on the same page."}, {"REPORTS_MGMT_REPORT_DATA_MANAGEMENT_TITLE", "Report Data Management Settings"}, {"REPORTS_MGMT_ENABLE_DATA_ARCHIVE", "Enable Data Archive"}, {"REPORTS_MGMT_NEXT_SCHED_ARCHIVE_TIME", "Next Scheduled Archive Time"}, {"REPORTS_MGMT_NUM_OF_DAYS_TO_ARCHIVE", "Number of Days To Archive"}, {"REPORTS_MGMT_ARCHIVE_DATA_IMMEDIATELY", "Archive Data Immediately"}, {"REPORTS_MGMT_LAST_ARCHIVE_TIME", "Last Archive Time"}, {"REPORTS_MGMT_NEXT_ARCHIVE_ALERT", "Are you sure you want to change the next data archive schedule?"}, {"REPORTS_MGMT_ENABLE_DATA_ARCHIVE", "Enable Data Archive"}, {"REPORTS_MGMT_ENABLE_DATA_ARCHIVE_ALERT", "Are you sure you want to enable Data Archive?"}, {"REPORTS_MGMT_DISABLE_DATA_ARCHIVE_ALERT", "Are you sure you want to disable Data Archive?"}, {"REPORTS_MGMT_SUCCESS_ENABLE_DATA_ARCHIVE", "Successfully enabled Data Archive."}, {"REPORTS_MGMT_SUCCESS_DISABLE_DATA_ARCHIVE", "Successfully disabled Data Archive."}, {"REPORTS_MGMT_NEXT_ARCHIVE_TIME_UPDATE", "Next Scheduled Archive Time has been updated successfully."}, {"REPORTS_MGMT_NEXT_ARCHIVE_TIME_FAILURE", "Failed to update next data archive time since data archive is disabled."}, {"REPORTS_MGMT_NUM_DAYS_TO_ARCHIVE", "Number of days to archive setting updated successfully."}, {"REPORTS_MGMT_ARCHIVE_NOW_ALERT", "Are you sure you want to archive data immediately?"}, {"REPORTS_MGMT_ARCHIVE_NOW_UPDATE", "Successfully updated to run Data Archiver now."}, {"REPORTS_MGMT_UPDATE_FAILURE", "Failed to update since Data Archive is disabled."}, {"REPORTS_MGMT_NOCHANGE", "No changes were made"}, {"REPORTS_MGMT_ARCHIVE_IN_PROGRESS", "Data Archive is currently in progress"}, {"REPORTS_MGMT_LAST_ARCHIVE_STATS", "Last Archive Stats (Number of days archived : Time taken(hr.min)) - >"}, {"REPORTS_MGMT_DATA_ARCHIVED_AS_OF", "Report Data Archived as of"}, {"REPORTS_MGMT_ENABLE_SAVE_DATA_ARCHV_TRAN_LOG_ALERT", "Are you sure you want to enable to save data-archive transaction logs?"}, {"REPORTS_MGMT_DISABLE_SAVE_DATA_ARCHV_TRAN_LOG_ALERT", "Are you sure you want to disable to save data-archive transaction logs?"}, {"REPORTS_MGMT_SAVE_DATA_ARCHIVE_TRAN_LOG", "Save Data Archive Transaction Logs"}, {"REPORTS_MGMT_SAVE_DATA_ARCHIVE_TRAN_LOG_NOTE", "Note: This feature is available only on MS SQL database."}, {"REPORTS_MGMT_SUCCESS_SET_DATA_ARCHV_TRAN_LOG", "Successfully enabled to save data-archive transaction logs."}, {"REPORTS_MGMT_SUCCESS_RESET_DATA_ARCHV_TRAN_LOG", "Successfully disabled to save data-archive transaction logs."}, {"REPORTS_MGMT_ARCHIVE_SCHED_ALERT", "This action may affect the database maintenance jobs."}, {"DB_MAINTAINANCE_JOBS_SCHEDULE_NOTE1", "Database maintenance jobs should be run after the completion of \"Next Scheduled Archive Time\" and \"Delete Data Daily At\" scheduled runs. See documentation for details."}, {"REPORTS_MGMT_ENABLE_ARCHIVE_ALERT", "This action will create a separate database for archival of older reporting data. During migration of data from SGMSDB database to the archived database, database performance could be affected. Please see the Administrator\u2019s Guide for a full understanding of this feature and for any additional fine tuning of the servers that would be required on your part."}, {"REPORTS_MGMT_UPDATE_NUM_DAYS_TO_ARCHIVE_ALERT", "Recommended 1 through 10 - Larger the number will impact overall performance and duration of each Archive Run."}, {"DASHBOARD_REPORTS_SUMMARY_TITLE", "Dashboard Summary"}, {"DASHBOARD_REPORTS_SUMMARY", "Summary"}, {"DASHBOARD_REPORTS_NO_INFO", "No information."}, {"DASHBOARD_REPORTS_ALERTS_WARNINGS", "Alerts/Warnings"}, {"DASHBOARD_REPORTS", "Dashboard"}, {"DASHBOARD_REPORTS_SETTINGS_TITLE", "Dashboard Report Settings"}, {"DASHBOARD_REPORTS_SETTINGS_SUMMARY_LIST", "Summary/Statistics List"}, {"DASHBOARD_REPORTS_SETTINGS_ALERT_LIST", "Alerts List"}, {"DASHBOARD_REPORTS_SETTINGS_THRESHOLD", "Threshold"}, {"DASHBOARD_REPORTS_SETTINGS_REPORTS_LIST", "Reports List"}, {"DASHBOARD_REPORTS_SETTINGS_RESET_TO_DEFAULTS", "Reset To Defaults"}, {"DASHBOARD_REPORTS_SETTINGS_DELETE", "Delete"}, {"DASHBOARD_REPORTS_SETTINGS_RESET_WARNING1", "This action will reset all the settings to default values"}, {"DASHBOARD_REPORTS_SETTINGS_RESET_WARNING2", "Are you sure you want to proceed?"}, {"DASHBOARD_REPORTS_SETTINGS_RESET_WARNING2", "Are you sure you want to proceed?"}, {"DASHBOARD_REPORTS_SETTINGS_DELETE_WARNING1", "Cannot delete last item!"}, {"DASHBOARD_REPORTS_SETTINGS_DELETE_WARNING2", "There should be at least one item in the "}, {"DASHBOARD_REPORTS_SETTINGS_SELECT_WARNING1", "You can only select up to "}, {"DASHBOARD_REPORTS_SETTINGS_SELECT_WARNING2", " items."}, {"DASHBOARD_REPORTS_SETTINGS_ENTER_THRESHOLD", "Please enter a threshold value for the alert."}, {"DASHBOARD_REPORTS_SETTINGS_ITEM_IN_LIST", "This item is already in the list."}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_1", "Note:"}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_2", "Instance Units added to \"Central GMS\" will need to follow the steps outlined below to complete the configuration:"}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_3", "1.  Pre-requisites"}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_4", "Syslogs from Instance unit should reach \"Central GMS\" for the unit acquisition to be completed. See Unit acquisition section in Admin guide."}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_5", "2. Please perform the following steps:"}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_6", "   Step 1: Check the box \"Send Heartbeat Status Messages Only\" on GMS settings page."}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_7", "   Step 2: Check the box \"Enable SNMP\". Click on the \"Configure\" button and supply the parameters for SNMP or keep the defaults for general configuration. "}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_8", "3. Do not change the Reporting Syslog settings."}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_9", "4. In the event the password for the appliance is changed, the change should be made in Central GMS and Remote Analyzer by using \"Modify Unit\" option in Tree Control."}, {"CONFIRM_CHANGE_SETTING", "Are you sure you want to change this setting?"}, {"DISPLAYING_RECORDS", "Displaying records"}, {"DOT", "."}, {"CLEAR_SCREEN", "Clear Screen"}, {"CLOSE_WINDOW", "Close Window"}, {"REPORT_GEN_SETTINGS", "Reports generated for the following settings"}, {"REPORT_USER", "User"}, {"REPORT_CHART_TYPE", "Chart Type"}, {"REPORT_DISPLAY_TYPE", "Display Type"}, {"REPORT_TOP_SITES", "Top Sites"}, {"REPORT_TOP_USERS", "Top Users"}, {"REPORT_SITES_PER_USER", "Sites Per User"}, {"REPORT_ITEMS", "Items"}, {"REPORT_ENTRIES_PER_ITEM", "Entries Per Item"}, {"REPORT_SITE_FILTER", "Site Filter"}, {"REPORT_USER_FILTER", "User Filter"}, {"REPORT_SRC_INTERFACE", "Source Interface"}, {"REPORT_DST_INTERFACE", "Destination Interface"}, {"REPORT_BIDIRECTIONAL", "Bi-directional"}, {"REPORT_IP_SEARCH", "Whole IP Search Enabled"}, {"REPORT_HOURS", "Hours"}, {"REPORT_PAGE_LOADING", "Page Loading..."}, {"REPORT_GENERATING", "Report Generation in Progress"}, {"REPORT_PROCESSING_REQUEST", "Processing Request"}, {"REPORT_CHART_AND_TABLE", "Chart & Table"}, {"REPORT_TABLE_ONLY", "Table Only"}, {"REPORT_RESOURCE_SUMMARY", "Resource Summary"}, {"REPORT_RESOURCE_TOP_USERS", "Top Users of Resources"}, {"REPORT_SSLVPN_STATUS_SUMMARY", "Status Summary"}, {"REPORT_SSLVPN_STATUS_OVERTIME", "Status Over Time"}, {"REPORT_SSLVPN_DOWN_STATUS_SUMMARY", "Down Status Summary"}, {"REPORT_SSLVPN_DOWN_STATUS_OVERTIME", "Down Status Over Time"}, {"REPORT_SSLVPN_BANDWIDTH_SUMMARY", "Bandwidth Summary"}, {"REPORT_SSLVPN_BANDWIDTH_TOPUSER", "Bandwidth Top User"}, {"REPORT_SSLVPN_BANDWIDTH_OVERTIME", "Bandwidth Over Time"}, {"REPORT_SSLVPN_BANDWIDTH_TOPUSEROT", "Bandwidth Top User Over Time"}, {"REPORT_SSLVPN_RESOURCE_SUMMARY", "Resource Summary"}, {"REPORT_SSLVPN_USERLOGIN", "User Login"}, {"REPORT_SSLVPN_USERLOGOUT", "User Logout"}, {"REPORT_SSLVPN_USERTIMEOUT", "User Timeout"}, {"REPORT_SSLVPN_FAILED_LOGIN", "Failed Login"}, {"REPORT_SSLVPN_RESOURCE_DETAIL", "Resource Detail"}, {"REPORT_SSLVPN_USER_DETAIL", "User Detail"}, {"REPORT_SSLVPN_WAF_SUMMARY", "Web Application Firewall Summary"}, {"REPORT_SSLVPN_WAF_DETAIL", "Web Application Firewall Detail"}, {"REPORT_SSLVPN_TOP_THREATS", "Top Threats of Web Application Firewall"}, {"REPORT_SSLVPN_THREAT_DETAIL", "Threat Detail"}, {"REPORT_SSLVPN_TOP_APPLICATIONS", "Top Applications of Web Application Firewall"}, {"REPORT_SSLVPN_TOP_USERS", "Top Users of Web Application Firewall"}, {"REPORT_SSLVPN_TOP_APPLICATIONS_DETAIL", "Application Detail"}, {"REPORT_SSLVPN_WAF_OVERTIME", "Web Application Firewall Over Time"}, {"REPORT_SSLVPN_OFFLOADED_CONN_SUMMARY", "Offloaded Connections Summary"}, {"REPORT_SSLVPN_OFFLOADED_CONN_TOP_APPLICATIONS", "Offloaded Connection Top Applications"}, {"REPORT_SSLVPN_OFFLOADED_CONN_TOP_USERS", "Offloaded Connection Top Users"}, {"REPORT_SSLVPN_OFFLOADED_CONN_OVERTIME", "Offloaded Connections Over Time"}, {"THREAD_START", "Thread starting up"}, {"THREAD_IDLE", "Thread is idle"}, {"THREAD_LOAD_RAW", "Loading raw syslogs"}, {"THREAD_UPDOWNSUMMARY", "Performing UP-DOWN summary"}, {"THREAD_START_SUMMARIZING", "Starting summarization"}, {"THREAD_SUMMARIZING", "Summarizing file"}, {"THREAD_POST_SUMMARY", "Performing post summarization activities"}, {"THREAD_INSPECT_INFECT", "Inspecting file for infection"}, {"THREAD_SUMMARY_FINISHED", "Finished with summarization"}, {"THREAD_DEADLOCKED", "Deadlocked"}, {"THREAD_PARSING", "Parsing syslogs"}, {"TREECONTROL_SHOW", "Show TreeControl Panel"}, {"TREECONTROL_HIDE", "Hide TreeControl Panel"}, {"MIME10_CHARSET", "utf8"}, {"NEXT_TXT", "Next"}, {"PREV_TXT", "Previous"}, {"LAST_TXT", "Last"}, {"FIRST_TXT", "First"}, {"CHART_BAR_3DDEPTH", "8"}, {"CHART_BAR_3DROTATION", "15"}, {"CHART_BAR_3DELEVATION", "20"}, {"CHART_BAR_WIDTH", "550"}, {"CHART_BAR_HEIGHT", "250"}, {"CHART_PIE_3DDEPTH", "10"}, {"CHART_PIE_3DROTATION", "45"}, {"CHART_PIE_3DELEVATION", "45"}, {"CHART_PIE_WIDTH", "550"}, {"CHART_PIE_HEIGHT", "250"}, {"CHART_PLOT_WIDTH", "550"}, {"CHART_PLOT_HEIGHT", "250"}, {"CHART_AREA_WIDTH", "550"}, {"CHART_AREA_HEIGHT", "250"}, {"HOUR", "Hour"}, {"DATE", "Date"}, {"TIME", "Time"}, {"TOTAL", "TOTAL"}, {"USER_NAME", "User Name"}, {"NODE_NAME", "Node Name"}, {"RESOURCE_NAME", "Resource Name"}, {"UP_TIME_MINUTES", "Up Time (Mins.)"}, {"UP_TIME_HOURS", "Up Time (Hours)"}, {"DOWN_TIME_HOURS", "Down Time (Hours)"}, {"DOWN_TIME_MINUTES", "Down Time (Mins.)"}, {"CONNECTIONS", "Connections"}, {"SOURCE_HOST", "Source Host"}, {"DESTINATION_HOST", "Destination Host"}, {"DURATION", "Duration"}, {"AUTHENTICATION_TYPE", "Type"}, {"POLICY_NAME", "Policy Name"}, {"CATEGORY_NAME", "Category Name"}, {"APPLN_NAME", "Application Name"}, {"HOST_NAME", "Host Name"}, {"BYTES", "Bytes"}, {"TYPE", "Action Type"}, {"CATEGORY_NAME", "Category"}, {"SIGNATUR_NAME", "Signature"}, {"CLASSIFICATION_NAME", "Classification"}, {"SEVERITY_TYPE", "Severity"}, {"URI_NAME", "URI"}, {"AGENT_NAME", "Agent"}, {"APPLICATION_IP", "Application IP"}, {"THREAT_COUNT", "Threats"}, {"PEAK_CONNECTIONS", "Peak Connections per second"}, {"PEAK_THROUGHPUT", "Peak Throughput (Mbps)"}, {"AVG_CONNECTIONS", "Avg Connections per second"}, {"AVG_THROUGHPUT", "Avg Throughput (Mbps)"}, {"DETECTIONS", "Detections"}, {"PREVENTIONS", "Preventions"}, {"SUMMARIZER_SETTINGS_DOWN_STATUS_SUMMARY_OVERTIME_DESC", "Summary of down-time over specified time period."}, {"SUMMARIZER_SETTINGS_WEB_USAGE_BY_USER_TIME_SITE_DESC", "Amount of HTTP bandwidth used by a user over time for each site."}, {"SUMMARIZER_SETTINGS_APP_ACCESS_TITLE", "Application Access reports"}, {"SUMMARIZER_SETTINGS_APP_ACCESS_DESC", "Provides application access event reports."}, {"SUMMARIZER_DOWN_SETTINGS_OVERTIME_TITLE", "Down Summary, Over Time"}, {"SUMMARIZER_SETTINGS_BY_USER_TIME_SITE_TITLE", "By User, By Users Over Time, By Site"}, {"SUMMARIZER_SETTINGS_APPFW_TITLE", "Application Firewall reports"}, {"SUMMARIZER_SETTINGS_APPFW_DESC", "Provides Application Firewall reports"}, {"SUMMARIZER_SETTINGS_APPFW_SUMMARY_TITLE", "Summary"}, {"SUMMARIZER_SETTINGS_APPFW_SUMMARY_DESC", "Application Firewall Summary"}, {"SUMMARIZER_SETTINGS_APPFW_OVERTIME_TITLE", "Over Time"}, {"SUMMARIZER_SETTINGS_APPFW_OVERTIME_DESC", "Application Firewall Over Time"}, {"SUMMARIZER_SETTINGS_APPFW_TOPREPORTS_TITLE", "Top Applications, Top Users, Top Policies"}, {"SUMMARIZER_SETTINGS_APPFW_TOPREPORTS_DESC", "Application Firewall Top reports"}, {"PDF_SERVICES_SUMMARY_TITLE", "Services Summary"}, {"PDF_SERVICES_SUMMARY_DESC", "Service reports provide information on the amount of data transmitted through selected SonicWall appliance by each service. Service reports are useful for revealing inappropriate usage of bandwidth and can help determine network policies. For example, if there is a large spike of bandwidth usage, a network administrator can determine whether this is caused by regular Web access, an attempted Denial of Service (DoS) attack, or a variety of other services."}, {"PDF_BANDWIDTH_SUMMARY_TITLE", "Bandwidth Summary"}, {"PDF_BANDWIDTH_SUMMARY_DESC", "Bandwidth reports display the amount of data transferred through one or more selected SonicWall appliances. Bandwidth reports are an ideal starting point for viewing overall bandwidth usage.  You can view bandwidth usage view by the hour, day or over a period of days. Additionally, you can view the top users of your bandwidth."}, {"PDF_VPN_SUMMARY_TITLE", "VPN Summary"}, {"PDF_VPN_SUMMARY_DESC", "VPN Usage reports provide information on the amount of VPN usage that occurs through the selected SonicWall appliance(s). VPN Usage reports can be used to view VPN usage by the hour, day, or over a period of days. Additionally, you can view the top users of their VPN tunnels. If a large amount of VPN traffic occurs, a company may need to increase their Internet connection, add WAN optimization equipment, or reconfigure the VPN network for site-to-site tunnels to efficiently route traffic."}, {"PDF_WEB_SUMMARY_TITLE", "Web Usage Summary"}, {"PDF_WEB_SUMMARY_DESC", "The Web Usage Summary report contains information on the amount of HTTP bandwidth handled by a SonicWall device during each hour of the specified day. Web usage reports can be used to view Web bandwidth usage by the hour, day, or over a period of days. You can monitor the top users of Web bandwidth and most viewed/visited sites for their company.  These types of reports help you gauge the productivity of your employees."}, {"PDF_WEBFILTER_SUMMARY_TITLE", "Web Filter Summary"}, {"PDF_WEBFILTER_SUMMARY_DESC", "The Web Filter Summary Report contains information on the number of times users attempted to access blocked sites on a particular day through selected SonicWall appliance(s). These reports include Web sites blocked by the Content Filter List or service, customized keyword filtering, and domain name filtering services.  Additionally, you can view the users that most frequently attempt to access blocked sites and the most popular blocked sites."}, {"PDF_FTP_SUMMARY_TITLE", "FTP Summary"}, {"PDF_FTP_SUMMARY_DESC", "FTP usage reports provide information on the amount of FTP usage that occurs through the selected SonicWall appliance(s). FTP usage reports can be used to view FTP bandwidth usage by the hour, day, or over a period of days. Additionally, administrators can view the top users of FTP bandwidth. If a large amount of FTP traffic occurs during peak times, you may need to get more bandwidth or upgrade your network equipment."}, {"PDF_MAIL_SUMMARY_TITLE", "Mail Usage Summary"}, {"PDF_MAIL_SUMMARY_DESC", "Mail usage reports provide information on the amount of mail usage that occurs through the selected SonicWall appliance(s). Mail usage reports can be used to view mail bandwidth usage by the hour, day, or even over a period of days.  This report allows you to view the top users of mail bandwidth.  Mail usage reports include SMTP, POP3, and IMAP traffic.  General bandwidth reports do not always provide a complete picture of network bandwidth usage."}, {"PDF_ATTACK_SUMMARY_TITLE", "Attack Summary"}, {"PDF_ATTACK_SUMMARY_DESC", "Attack report shows the number of attacks that were directed at or through the selected SonicWall appliance(s). These include denial of service, intrusions, probes, and all other malicious activity on the LAN or DMZ.  As with any network deployment, SonicWall recommends taking a multi-layer approach to network security.  Through the aid of Attack Summary Reports, you can see evidence of the attacks that have been thwarted using SonicWall appliances."}, {"PDF_VIRUSATTACK_SUMMARY_TITLE", "Virus Attack Summary"}, {"PDF_VIRUSATTACK_SUMMARY_DESC", "Virus Attack report shows the number of virus attacks that were directed at or through the selected SonicWall appliance(s).  Similar to the attack summary report, the Virus Attack report illustrates the effectiveness of the SonicWall appliance to capture virus attacks before they penetrate your company\u2019s network."}, {"PDF_SPYWARE_SUMMARY_TITLE", "Spyware Attempts Summary"}, {"PDF_SPYWARE_SUMMARY_DESC", "The Anti-Spyware Summary report contains information on the number of spyware attempts made on your system through real-time scans.  Spyware protection blocks attacks delivered through auto-installed ActiveX components, scans and logs threats through your network, and stops existing spyware programs from communicating in the background."}, {"PDF_INTRUSION_SUMMARY_TITLE", "Intrusion Summary"}, {"PDF_INTRUSION_SUMMARY_DESC", "The Intrusion Prevention Service (IPS) reports show the number of attempted intrusions that occurred during the specified time period.  These reports provide further evidence of SonicWall\u2019s deep packet inspection signature technology."}, {"PDF_STATUS_SUMMARY_TITLE", "Status Summary"}, {"PDF_STATUS_SUMMARY_DESC", "Status reports display the number of hours that one or more SonicWall appliances were online and functional during the specified time period. From this information, an administrator can find trouble spots within their network. For example, this report could reveal a SonicWall appliance that is having network connectivity issues caused by either the internal network or by the ISP."}, {"PDF_APPFW_SUMMARY_TITLE", "Application Firewall Summary"}, {"PDF_APPFW_SUMMARY_DESC", "Application Firewall reports display the amount of application firewall data transferred."}, {"PDF_ECM_SUMMARY_TITLE", "ECAV Summary"}, {"PDF_ECM_SUMMARY_DESC", "Summary report of all the detections grouped by the ECAV clients."}, {"PDF_BANDWIDTH_OVERTIME_TITLE", "Bandwidth Over Time"}, {"PDF_BANDWIDTH_OVERTIME_DESC", "Bandwidth reports display the amount of data transferred through one or more selected SonicWall appliances. Bandwidth reports are an ideal starting point for viewing overall bandwidth usage.  You can view bandwidth usage view by the hour, day or over a period of days. Additionally, you can view the top users of your bandwidth."}, {"PDF_VPN_OVERTIME_TITLE", "VPN Over Time"}, {"PDF_VPN_OVERTIME_DESC", "VPN Usage reports provide information on the amount of VPN usage that occurs through the selected SonicWall appliance(s). VPN Usage reports can be used to view VPN usage by the hour, day, or over a period of days. Additionally, you can view the top users of their VPN tunnels. If a large amount of VPN traffic occurs, a company may need to increase their Internet connection, add WAN optimization equipment, or reconfigure the VPN network for site-to-site tunnels to efficiently route traffic."}, {"PDF_WEB_OVERTIME_TITLE", "Web Usage Over Time"}, {"PDF_WEB_OVERTIME_DESC", "The Web Usage Summary report contains information on the amount of HTTP bandwidth handled by a SonicWall device during each hour of the specified day. Web usage reports can be used to view Web bandwidth usage by the hour, day, or over a period of days. You can monitor the top users of Web bandwidth and most viewed/visited sites for their company.  These types of reports help you gauge the productivity of your employees."}, {"PDF_WEBFILTER_OVERTIME_TITLE", "Web Filter Over Time"}, {"PDF_WEBFILTER_OVERTIME_DESC", "The Web Filter Summary Report contains information on the number of times users attempted to access blocked sites on a particular day through selected SonicWall appliance(s). These reports include Web sites blocked by the Content Filter List or service, customized keyword filtering, and domain name filtering services.  Additionally, you can view the users that most frequently attempt to access blocked sites and the most popular blocked sites."}, {"PDF_FTP_OVERTIME_TITLE", "FTP Over Time"}, {"PDF_FTP_OVERTIME_DESC", "FTP usage reports provide information on the amount of FTP usage that occurs through the selected SonicWall appliance(s). FTP usage reports can be used to view FTP bandwidth usage by the hour, day, or over a period of days. Additionally, administrators can view the top users of FTP bandwidth. If a large amount of FTP traffic occurs during peak times, you may need to get more bandwidth or upgrade your network equipment."}, {"PDF_MAIL_OVERTIME_TITLE", "Mail Usage Over Time"}, {"PDF_MAIL_OVERTIME_DESC", "Mail usage reports provide information on the amount of mail usage that occurs through the selected SonicWall appliance(s). Mail usage reports can be used to view mail bandwidth usage by the hour, day, or even over a period of days.  This report allows you to view the top users of mail bandwidth.  Mail usage reports include SMTP, POP3, and IMAP traffic.  General bandwidth reports do not always provide a complete picture of network bandwidth usage."}, {"PDF_ATTACK_OVERTIME_TITLE", "Attack Over Time"}, {"PDF_ATTACK_OVERTIME_DESC", "Attack report shows the number of attacks that were directed at or through the selected SonicWall appliance(s). These include denial of service, intrusions, probes, and all other malicious activity on the LAN or DMZ.  As with any network deployment, SonicWall recommends taking a multi-layer approach to network security.  Through the aid of Attack Summary Reports, you can see evidence of the attacks that have been thwarted using SonicWall appliances."}, {"PDF_VIRUSATTACK_OVERTIME_TITLE", "Virus Attack Over Time"}, {"PDF_VIRUSATTACK_OVERTIME_DESC", "Virus Attack report shows the number of virus attacks that were directed at or through the selected SonicWall appliance(s).  Similar to the attack summary report, the Virus Attack report illustrates the effectiveness of the SonicWall appliance to capture virus attacks before they penetrate your company\u2019s network."}, {"PDF_SPYWARE_OVERTIME_TITLE", "Spyware Attempts Over Time"}, {"PDF_SPYWARE_OVERTIME_DESC", "The Anti-Spyware Summary report contains information on the number of spyware attempts made on your system through real-time scans.  Spyware protection blocks attacks delivered through auto-installed ActiveX components, scans and logs threats through your network, and stops existing spyware programs from communicating in the background."}, {"PDF_INTRUSION_OVERTIME_TITLE", "Intrusion Over Time"}, {"PDF_INTRUSION_OVERTIME_DESC", "The Intrusion Prevention Service (IPS) reports show the number of attempted intrusions that occurred during the specified time period.  These reports provide further evidence of SonicWall\u2019s deep packet inspection signature technology."}, {"PDF_STATUS_OVERTIME_TITLE", "Status Over Time"}, {"PDF_STATUS_OVERTIME_DESC", "Status reports display the number of hours that one or more SonicWall appliances were online and functional during the specified time period. From this information, an administrator can find trouble spots within their network. For example, this report could reveal a SonicWall appliance that is having network connectivity issues caused by either the internal network or by the ISP."}, {"PDF_APPFW_OVERTIME_TITLE", "Application Firewall Summary"}, {"PDF_APPFW_OVERTIME_DESC", "Application Firewall reports display the amount of application firewall data transferred."}, {"PDF_ECM_OVERTIME_TITLE", "ECAV Summary"}, {"PDF_ECM_OVERTIME_DESC", "Summary report of all the detections grouped by the ECAV clients."}, {"PDF_SSLVPN_STATUS_SUMMARY_TITLE", "Status Summary"}, {"PDF_SSLVPN_STATUS_SUMMARY_DESC", "Status reports display the number of hours that one or more SonicWall appliances were online and functional during the specified time period. From this information, an administrator can find trouble spots within their network. For example, this report could reveal a SonicWall appliance that is having network connectivity issues caused by either the internal network or by the ISP."}, {"PDF_SSLVPN_BANDWIDTH_SUMMARY_TITLE", "Bandwidth Summary"}, {"PDF_SSLVPN_BANDWIDTH_SUMMARY_DESC", "Bandwidth reports display the amount of data transferred through one or more selected SonicWall appliances. Bandwidth reports are an ideal starting point for viewing overall bandwidth usage.  You can view bandwidth usage view by the hour, day or over a period of days. Additionally, you can view the top users of your bandwidth."}, {"PDF_SSLVPN_RESOURCE_SUMMARY_TITLE", "Resource Summary"}, {"PDF_SSLVPN_RESOURCE_SUMMARY_DESC", "Resources are the granular components of a trusted network that can be accessed using your SonicWall SSL-VPN. The Resources Summary report contains the number of connections made to remote services such as FTP, HTTP, RDP, SSH, and SonicWall NetExtender."}, {"PDF_SSLVPN_STATUS_OVERTIME_TITLE", "Status Over Time"}, {"PDF_SSLVPN_STATUS_OVERTIME_DESC", "Status reports display the number of hours that one or more SonicWall appliances were online and functional during the specified time period. From this information, an administrator can find trouble spots within their network. For example, this report could reveal a SonicWall appliance that is having network connectivity issues caused by either the internal network or by the ISP."}, {"PDF_SSLVPN_BANDWIDTH_OVERTIME_TITLE", "Bandwidth Over Time"}, {"PDF_SSLVPN_BANDWIDTH_OVERTIME_DESC", "Bandwidth reports display the amount of data transferred through one or more selected SonicWall appliances. Bandwidth reports are an ideal starting point for viewing overall bandwidth usage.  You can view bandwidth usage view by the hour, day or over a period of days. Additionally, you can view the top users of your bandwidth."}, {"PDF_CDP_STATUS_SUMMARY_TITLE", "Capacity Summary"}, {"PDF_CDP_STATUS_SUMMARY_DESC", "Capacity reports gives a capacity status overview of one or more CDP appliances."}, {"PDF_CDP_TOPAGENT_SUMMARY_TITLE", "Top Agent Summary"}, {"PDF_CDP_TOPAGENT_SUMMARY_DESC", "Top agent summary reports display the top backup agents of a specific CDP appliance."}, {"PDF_CDP_TOPFILETYPE_SUMMARY_TITLE", "Top File Extensions"}, {"PDF_CDP_TOPFILETYPE_SUMMARY_DESC", "Top file extensions reports display the top backup file extensions of a specific CDP appliance."}, {"PDF_CDP_STATUS_OVERTIME_TITLE", "Capacity Over Time"}, {"PDF_CDP_STATUS_OVERTIME_DESC", "Capacity Over Time reports gives a capacity status overview of one or more CDP appliances."}, {"GR_BUILDER_TITLE", "Custom Report"}, {"GR_BUILDER_SECTION_TITLE", "Template Section"}, {"GR_BUILDER_LABEL__FAVORITE", "Template"}, {"GR_BUILDER_LABEL__OPTION", "-- Load a Template --"}, {"GR_BUILDER_LABEL__NOOPT", "No Template Available"}, {"GR_BUILDER_TITLE__FILTER", "Report Layout"}, {"GR_BUILDER_LABEL__USER", "User"}, {"GR_BUILDER_LABEL__DOMAIN", "Domain"}, {"GR_BUILDER_LABEL__CATEGORY", "Category"}, {"GR_REPORT_SECTION_TITLE", "Report Section"}, {"GR_FIELD_LABEL__TIME", "Date/Time"}, {"GR_FIELD_LABEL__USER", "User"}, {"GR_FIELD_LABEL__SRCIP", "Source IP"}, {"GR_FIELD_LABEL__SRCPORT", "Source Port"}, {"GR_FIELD_LABEL__SRCINT", "Source Interface"}, {"GR_FIELD_LABEL__SRCDNS", "Source DNS"}, {"GR_FIELD_LABEL__DSTIP", "Destination IP"}, {"GR_FIELD_LABEL__DSTPORT", "Destination Port"}, {"GR_FIELD_LABEL__DSTINT", "Destination Interface"}, {"GR_FIELD_LABEL__DSTDNS", "Destination DNS"}, {"GR_FIELD_LABEL__DSTNAME", "Domain"}, {"GR_FIELD_LABEL__PROTO", "Protocol"}, {"GR_FIELD_LABEL__SENT", "Transmitted Traffic"}, {"GR_FIELD_LABEL__RCVD", "Received Traffic"}, {"GR_FIELD_LABEL__TOTAL", "Total Traffic"}, {"GR_FIELD_LABEL__CATEGORY", "Category"}, {"GR_FIELD_LABEL__ARG", "Full URL"}, {"APP_FW_SUMMARY", "Application Firewall Usage Summary"}, {"APP_FW_OVERTIME", "Application Firewall Usage Over Time"}, {"APP_FW_TOP_USERS", "Top Users"}, {"APP_FW_TOP_APPLNS", "Top Applications"}, {"APP_FW_TOP_POLICES", "Top Policies"}, {"APP_FW_TOP_CATEGORIES", "Top Categories"}, {"APP_FW_APPLN_DETAIL", "Application detail"}, {"APP_FW_USER_DETAIL", "User detail"}, {"APP_FW_POLICY_DETAIL", "Policy detail"}, {"SCHED_APP_FW_TOP_USERS", "Application Firewall Top Users"}, {"SCHED_APP_FW_TOP_APPLNS", "Application Firewall Top Applications"}, {"SCHED_APP_FW_TOP_POLICES", "Application Firewall Top Policies"}, {"SCHED_APP_FW_TOP_CATEGORIES", "Application Firewall Top Categories"}, {"ECM_SUMMARY", "Enforced Client Anti-Virus Summary"}, {"ECM_OVERTIME", "Enforced Client Anti-Virus Over Time"}, {"ECM_TOP_HAZARDS", "Enforced Client Anti-Virus Top Detections"}, {"ECM_TOP_AGENTS_FOR_HAZARD", "Enforced Client Anti-Virus Top Hosts For Detection"}, {"ECM_DETAIL", "Enforced Client Anti-Virus Host Details"}, {"ECM_EXCEPTIONS", "Enforced Client Anti-Virus Exception List For Firewall"}, {"ECM_AGENT_SUMMARY", "Enforced Client Anti-Virus Host Summary"}, {"ECM_OUT_OF_DATE_HOSTS", "Enforced Client Anti-Virus Out-of-Date Hosts"}, {"ECM_TOTAL_REPORTING_HOSTS", "Total Reporting Hosts"}, {"ECM_AGENT_NAME", "Hostname"}, {"ECM_AGENT_GUID", "Host GUID"}, {"ECM_LAST_UPD", "DAT Update Time"}, {"ECM_DAT_TIMESTAMP", "DAT Timestamp"}, {"ECM_OS", "OS"}, {"ECM_OS_BITS", "OS Bits"}, {"ECM_E_VER", "ECAV Version"}, {"ECM_FW", "Firewall(s)"}, {"ECM_TOTAL", "Detections"}, {"ECM_NUM_DETECTIONS", "Number Of Detections"}, {"ECM_TOTAL_DETECTIONS", "Total Number Of Detections"}, {"ECM_OOD_HOSTS", "Out-of-Date Hosts"}, {"ECM_TOTAL_OOD_HOSTS", "Total Out-of-Date Hosts"}, {"ECM_HAZARD_NAME", "Detection"}, {"ECM_USERS", "Users"}, {"ECM_REPORT_TIME", "Report Time"}, {"ECM_LAST_REPORTED_TIME", "Last Reported"}, {"ECM_UPD_SDK_VER", "Updater SDK Ver."}, {"ECM_SDK_MSI_VER", "MSI SDK Ver."}, {"ECM_POLICY_NAME", "Policy"}, {"EPRS_STATUS_INFORMATION", "ECAV Status Information"}, {"EPRS_DASHBOARD_MAIN_TITLE", "ECAV Dashboard"}, {"EPRS_INFECTED_CLIENTS_FW", "Infected Hosts behind Firewall(s)"}, {"EPRS_TOTAL_CLIENTS_FW", "ECAV Hosts behind Firewall(s)"}, {"EPRS_OOD_CLIENTS_FW", "Out of Date Hosts behind Firewall(s)"}, {"EPRS_TOP_DETECTIONS_FW", "Top Detections"}, {"ECM_CLIENT_NAME", "Host Name"}, {"ECM_THREAT_NAME", "Threat Name"}, {"ECM_AGENT_BLOCKED", "(Blocked)"}, {"CDP_STATUS_SUMMARY", "Capacity Summary"}, {"CDP_STATUS_OVERTIME", "Capacity Over Time"}, {"CDP_GROUP_SUMMARY", "Group Summary"}, {"CDP_APPL_SUMMARY", "Appliance Summary"}, {"CDP_TOP_FILETYPE_SUMMARY", "Top Backup File Extensions"}, {"CDP_TOP_AGENT_SUMMARY", "Top Backup Agents"}, {"CDP_DETAILS", "Backup Details"}, {"CDP_APPL_NAME", "Appliance Name"}, {"CDP_BACKUP_SIZE", "Backup Size"}, {"CDP_REVSIZE", "Revision Size"}, {"CDP_SIZEONDISK", "Size on Disk"}, {"CDP_BACKUP_COUNT", "Backup File Count"}, {"CDP_USED_CAPACITY", "Used Capacity"}, {"CDP_FREE_CAPACITY", "Free Capacity"}, {"CDP_FREE_PERCENTAGE", "Free Percentage"}, {"CDP_TOTAL_CAPACITY", "Total Capacity"}, {"CDP_AGENT_NAME", "Agent Name"}, {"CDP_USED_QUOTA", "Used Quota"}, {"CDP_QUOTA", "Total Quota"}, {"CDP_FREE_QUOTA", "Free Quota"}, {"CDP_POLICY_NAME", "Policy Name"}, {"CDP_FILE_TYPE", "File Extension"}, {"CDP_DTIME", "Date/Time"}, {"CDP_FOLDER", "Folder Name"}, {"CDP_FNAME", "File Name"}, {"CDP_FSIZE", "File Size"}, {"CDP_OPERATION", "Operation"}, {"SUMMARIZER_SETTINGS_ECM_TITLE", "ECAV Reports"}, {"SUMMARIZER_SETTINGS_ECM_DESC", "Provides Enforced Client Anti-Virus reports"}, {"SUMMARIZER_SETTINGS_ECM_SUMMARY_TITLE", "Summary"}, {"SUMMARIZER_SETTINGS_ECM_SUMMARY_DESC", "ECAV detections summary"}, {"SUMMARIZER_SETTINGS_ECM_OVERTIME_TITLE", "Over Time"}, {"SUMMARIZER_SETTINGS_ECM_OVERTIME_DESC", "ECAV detections over time"}, {"SUMMARIZER_SETTINGS_ECM_TOPHAZARDS_TITLE", "Top Detections"}, {"SUMMARIZER_SETTINGS_ECM_TOPHAZARDS_DESC", "ECAV top detected hazards"}, {"SUMMARIZER_SETTINGS_ECM_EXCEPTIONS_TITLE", "Out Of Date Hosts"}, {"SUMMARIZER_SETTINGS_ECM_EXCEPTIONS_DESC", "ECAV Out of Date Hosts"}, {"SUMMARIZER_SETTINGS_ECM_SUMMARY_OT_TITLE", "Summary, Over Time, Out of Date"}, {"SUMMARIZER_SETTINGS_ECM_SUMMARY_OT_DESC", "ECAV detections summary, over specified time period, Out of Date Hosts"}, {"NAV_PANEL_REPORTS", "Legacy"}, {"NAV_PANEL_POLICIES", "Manage"}, {"NAV_PANEL_NG_REPORTS", "Reports"}, {"NAV_PANEL_FLOW_REPORTS", "Flows"}, {"NAV_PANEL_CONSOLE", "Console"}, {"NAV_PANEL_MONITOR", "Monitor"}, {"REPORT", "Reports"}, {"CONTENTS", "Contents"}, {"TOTAL", "Total:"}, {"MANAGE_USER_REPORTS_TITLE", "Manage Custom Reports"}, {"DELETE_UPDATE_USER_REPORTS", "Delete Custom Reports"}, {"COLUMN_REPORT_NAME", "Custom Reports"}, {"COLUMN_DELETE", "Delete"}, {"DELETE_SEL_REPORTS_BTN", "Delete Selected Reports"}, {"DELETE_SELECTED_CONFIRM", "Note: Deleting reports might disable some scheduled tasks and change template contents. Are you sure you want to delete these reports?"}, {"DELETE_SINGLE_CONFIRM", "Note: Deleting reports might disable some scheduled tasks and change template contents. Are you sure you want to delete this report? "}, {"SELECT_ATLEAST_ONE_REPORT", "Please select atleast one Custom Report to delete."}, {"NO_USER_REPORTS", "No Custom Reports Found"}, {"FLOW_ACTIVITY_CONFIGURATION_TITLE", "Flow Activity Configuration"}, {"FLOW_ACTIVITY_STEP1_TITLE", "Step 1 - No Flow Server Agent is detected"}, {"FLOW_ACTIVITY_STEP1_PART1", "An Agent with \"Flow Server\" role is required to generate Flow Activity reports. Please follow the detailed instructions in the GMS Admin guide"}, {"FLOW_ACTIVITY_STEP1_PART1_PART", "on how to add a Flow Server"}, {"FLOW_ACTIVITY_STEP1_PART2", "Click on \"Next\" for instructions on how to configure GMS Flow Server and Flow Activity configuration on Firewall"}, {"FLOW_ACTIVITY_STEP2_TITLE", "Step 2 - Configure the firewall for Flow Activity Reporting"}, {"FLOW_ACTIVITY_STEP2_PART1", "Select the Flow Server agent from the list below for the firewall to send the Flows"}, {"FLOW_ACTIVITY_STEP2_PART2", "Use the Flow Server agent ip selected from the above step and follow the detailed instructions in the GMS Admin guide on how to configure the firewall for"}, {"FLOW_ACTIVITY_STEP2_PART2_PART", "Flow Activity Reporting"}, {"FLOW_ACTIVITY_STEP2_PART3", "Click on \"Next\" to complete the configuration"}, {"FLOW_ACTIVITY_STEP2_VISUALIZATION_EXPIRED", "Application Visualization is not enabled on this Firewall."}, {"FLOW_ACTIVITY_STEP2_NOFLOWAGENT", "No Flow Server Agent is detected in the GMS deployment."}, {"FLOW_ACTIVITY_STEP2_NOFLOWAGENTASSIGNED", "Flow Agent is not assigned."}, {"FLOW_ACTIVITY_VISUALIZATION", "App Visualization is not licensed on this appliance"}, {"FLOW_ACTIVITY_LEVEL", "Global View is not supported"}, {"FLOW_SERVER_SUMMARY", "Summary"}, {"FLOW_SERVER_NUMBER_INSTALLED", "Number of Flow Agents Installed:"}, {"FLOW_SERVER_NUMBER_UP", "Number of Flow Agents Up:"}, {"FLOW_SERVER_CONFIGURATION", "Flow Agent"}, {"FLOW_SERVER_ASSIGNMENT_SETTINGS", "Flow Agent Assignment Settings"}, {"FLOW_SERVER_IP", "Flow Agent IP:"}, {"FLOW_SERVER_LOCAL_TIME", "Local Time on Flow Agent:"}, {"FLOW_SERVER_LOCAL_TIME_BROWSER", "Local Time in Browser:"}, {"FLOW_SERVER_CURRENT_STATE", "Current State:"}, {"FLOW_SERVER_APPLIANCES_MANAGED", "Appliances managed by this Flow Agent"}, {"FLOW_SERVER_NONE", "None"}, {"PUBLIC_HOSTNAME_RESOLVE_HEADER", "Public IP Hostname Resolution Configuration"}, {"PUBLIC_HOSTNAME_RESOLVE_ENABLE_LABEL", "Enable Public IP Host-name Resolution :"}, {"PUBLIC_HOSTNAME_RESOLVE_TIMEOUT_LABEL", "Time out value for Resolution :"}, {"PUBLIC_HOSTNAME_RESOLVE_UPDATE_WARNING", "Are you sure you want to change Public IP Resolve configuration?"}, {"SUMMARIZER_SETTINGS_MILLISECONDS", "milliseconds"}, {"USR_TIMEOUT_CONFIG_HEADER", "USR Timeout Configuration"}, {"USR_TIMEOUT_CONFIG_LABEL", "Time out Value:"}, {"USR_COVER_LOGO_INVALID", "The logo image file selected for upload is corrupted or doesn\u2019t meet the requirements. Please check the image and try again"}, {"USR_REPORT_GENERATED_FOR", "Report Generated For"}, {"PACKET_CAPTURE_CONFIG_HEADER_LABEL", "Packet Data Viewer Configuration"}, {"PACKET_CAPTURE_CONFIG_LABEL", "Enable Packet Data Viewer:"}, {"PACKET_CAPTURE_UPDATE_WARNING", "Are you sure you want to update Packet Data Viewer settings?"}, {"PACKET_CAPTURE_NOTE", "Console->Reports->Syslog Filter (m=1391) will be disabled if the Packet Data Viewer is enabled. Exclusion Filter Settings will be picked up by the Summarizer every: 00 hour(s):15 min(s). This functionality will apply only to syslogs that are uploaded to the database after the summarizer settings are refreshed."}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}};
+    private static final Object[][] contents = new Object[][]{{"OK", "OK"}, {"YES", "yes"}, {"NO", "no"}, {"TO", " to "}, {"FROM", " from "}, {"FOR", " for "}, {"AS_OF", " as of "}, {"NONE", " none "}, {"CANCEL", "Cancel"}, {"UNKNOWN", "Unknown"}, {"USAGE", "Usage"}, {"OTHER", "Other"}, {"SDM_READY", "Ready"}, {"NAV_OF", " of "}, {"NAV_PREVIOUS", "Previous"}, {"NAV_NEXT", "Next"}, {"NAV_DISPLAYING", "Displaying"}, {"NAV_FIREWALLS", "Firewall(s)"}, {"REPORT_DETAILED_HEADER", "records are shown as detailed information"}, {"OF_THE_MONTH", "of the Month"}, {"BANDWIDTH_M_BY_HR", "Bandwidth MBytes by Hour of Day"}, {"BANDWIDTH_TITLE", "SonicWall Analyzer 2 - Bandwidth - Bandwidth Summary"}, {"BANDWIDTH_SUM_FOR", "Bandwidth Summary for "}, {"BANDWIDTH_SUM_STR", "Bandwidth Summary"}, {"BANDWIDTH_MB_TRANS", "MBytes"}, {"BANDWIDTH_MB", "MBytes"}, {"MBYTES_TRANS", "MBytes"}, {"KBYTES_TRANS", "KBytes"}, {"ELAPSED_TIME", "Elapsed Time"}, {"UP_TIME", "Up Time"}, {"DOWN_TIME", "Down Time"}, {"TIMEZONE_MSG", "Report produced for timezone: "}, {"REPORTS_BASED_ON_MSG", "Reports generated based on data summarized on: "}, {"REPORT_GENERATED_IN_MSG", "Report generated in: "}, {"ABBREV_SECONDS", "secs."}, {"BANDWIDTH_TIMEZONE", "Report produced for timezone"}, {"FULLURL_DISABLED_NOTE", "Full URL option is currently DISABLED. <br>&nbsp;&nbsp;&nbsp; (To enable this option, please go to the Console Panel->Reports->Summarizer screen)."}, {"CAL_SUN", "Sun"}, {"CAL_MON", "Mon"}, {"CAL_TUE", "Tue"}, {"CAL_WED", "Wed"}, {"CAL_THU", "Thu"}, {"CAL_FRI", "Fri"}, {"CAL_SAT", "Sat"}, {"CAL_JAN", "January"}, {"CAL_FEB", "February"}, {"CAL_MAR", "March"}, {"CAL_APR", "April"}, {"CAL_MAY", "May"}, {"CAL_JUN", "June"}, {"CAL_JUL", "July"}, {"CAL_AUG", "August"}, {"CAL_SEP", "September"}, {"CAL_OCT", "October"}, {"CAL_NOV", "November"}, {"CAL_DEC", "December"}, {"SUMM_NO_DATA", "No data available."}, {"SUMM_SUMMARIZED", "No Data Available."}, {"SUMM_NO_DATA_GROUP_LEVEL", "No Data Available for one or more appliance(s)."}, {"SUMM_NOT_SUMMARIZED", "Raw data exists for the firewall(s), however it has not been summarized (Go to Console Panel->Reports->Summarizer and click on [Summarize Now] button in Reports Data Summarization Interval section "}, {"SUMM_SUMMARIZER_RUNNING", "Report cannot be displayed at this time because Summarizer is currently running."}, {"SUMM_NO_RAW_DATA", "No raw data has been received from the firewall(s).  Check firewall and syslog settings."}, {"REP_TYPE_NOT_SUPPORTED", "This report is supported only for the SonicOS Enhanced type of firmware. Check documentation for a list of supported firmware versions."}, {"REP_NOT_SUPPORTED", "This report is not supported."}, {"REP_TYPE_NOT_SUPPORTED_FOR_CFA", "This report is not supported for the Content Filter Appliance."}, {"NO_UNITS_IN_GROUP", "There are no firewalls under management in this group."}, {"SUMM_UNKNOWN", "An unknown error has occurred while generating the report."}, {"SUMM_DISABLED", "Summarization has been disabled for this report."}, {"SUMM_DISABLED_SCHED", "Summarization has been disabled for one or more reports."}, {"SUMM_SYSLOG_SERVER", "Syslog servers may not have been enabled on the appliance, or Syslog messages are not reaching the server."}, {"SUMM_STATUS_ONLY", " The appliance is configured to only send status messages."}, {"SUMM_APPLIANCE_DOWN", " The appliance is down."}, {"SUMM_APPLIANCE_PROVISONED", " The appliance is in provisioned state."}, {"SUMM_APPLIANCE_CHECKSTATUS", "  For more information "}, {"SUMM_LAST_SUMMARIZATION", " Last summarization happened @ "}, {"SUMM_FIREWALL_NOT_LICENSED", "Appliance not licensed for Analyzer."}, {"SUMM_FIREWALL_NOT_REGISTERED", "This appliance has not been registered. Please visit MySonicWall.com and register the appliance before adding it to Analyzer."}, {"SUMM_BACKEND_COMM_FAILURE", "Analyzer is unable to communicate with MySonicWall.com to verify the license.\nPlease check your network connection; the Analyzer server must be able to communicate with MySonicWall.com. "}, {"LOGVIEWER_SETTINGS_TITLE", "Data Storage Configuration"}, {"LOGVIEWER_SETTINGS_NOTE", "Limiting the number of days to store will increase the overall performance of your Analyzer system<br>&nbsp;&nbsp;&nbsp;and limits the size of the Database"}, {"LOGVIEWER_SETTINGS_NOTE_NO_LIMIT", "Limiting the number of days to store will increase the overall performance of your GMS system<br>&nbsp;&nbsp;&nbsp;and limits the size of the Database"}, {"LOGVIEWER_SETTINGS_LABEL_NOTE", "Note:"}, {"LOGVIEWER_SETTINGS_LABEL_DELETION_TIME", "Deletion of data occurs everyday at: "}, {"LOGVIEWER_SETTINGS_NOTE_DELETION_TIME", "To change the scheduled deletion time, please go to the Console Panel->Reports->Summarizer screen <br>&nbsp;&nbsp;&nbsp;(Delete Data Daily At settings)."}, {"LOGVIEWER_SETTINGS_STORAGE", "Days To Store Raw Syslog Databases: "}, {"LOGVIEWER_SETTINGS_VALIDATIONALERT1", "Days To Store Raw Data"}, {"LOGVIEWER_SETTINGS_VALIDATIONALERT2", "Days To Store Raw Data must be at least 3 or 'All' string. Please re-enter the value."}, {"LOGVIEWER_SETTINGS_LIMIT_NOTE", "Limiting the number of appliances for which the Log Viewer is enabled will increase the overall performance of<br>&nbsp;&nbsp;&nbsp; your Analyzer system and limit the size of the Database."}, {"LOGVIEWER_SETTINGS_LIMIT_NOTE1", "Limiting the number of appliances for which the Log Viewer is enabled will increase the overall performance of<br>&nbsp;&nbsp;&nbsp; your GMS system and limit the size of the Database."}, {"LOGVIEWER_SETTINGS_VALIDATIONALERT3", "Limit must be a numeric value. Please re-enter value"}, {"LOGVIEWER_SETTINGS_STORAGE_RAW_FILES", "Days To Store Raw Data Files: "}, {"LOGVIEWER_SETTINGS_VALIDATIONALERT4", "Days To Store Raw Syslog Files must be at least 3 or 'All' string. Please re-enter the value."}, {"LOGVIEWER_SETTINGS_STATUSMSG1", "The amount of days to retain raw syslog data will be changed."}, {"LOGVIEWER_SETTINGS_STATUSMSG2_1", "This operation would retain raw data corresponding to the last "}, {"LOGVIEWER_SETTINGS_STATUSMSG2_2", " days only. Syslog data older than "}, {"LOGVIEWER_SETTINGS_STATUSMSG2_3", " days will be deleted if the value you entered is lower than before."}, {"LOGVIEWER_SETTINGS_STATUSMSG3", "This operation would retain all the syslog data in the database. Depending on the amount of syslog data that your Server collects, the harddisk on the database server could get filled up eventually."}, {"LOGVIEWER_SETTINGS_STATUSMSGCONF", "Are you sure you want to change this setting?"}, {"LOGVIEWER_SETTINGS_STATUSMSG4", "The amount of days to retain raw syslog files will be changed."}, {"LOGVIEWER_SETTINGS_STATUSMSG5_1", "This operation would retain raw syslog files corresponding to the last "}, {"LOGVIEWER_SETTINGS_STATUSMSG5_2", " days only. Raw syslog files older than "}, {"LOGVIEWER_SETTINGS_STATUSMSG6", "This operation would retain all the syslogs on disk. Depending on the amount of syslogs that your Server collects, the harddisk on the database server could get filled up eventually."}, {"LOGVIEWER_SEARCHRESULT_TITLE", "Log Search Results for "}, {"LOGVIEWER_SEARCH_STARTDT", "Start Date:"}, {"LOGVIEWER_SEARCH_STARTTM", "Start Time:"}, {"LOGVIEWER_SEARCH_ENDDT", "End Date:"}, {"LOGVIEWER_SEARCH_ENDTM", "End Time:"}, {"LOGVIEWER_SEARCH_MESSAGECATEGORY", "Message Category:"}, {"LOGVIEWER_SEARCH_SOURCEIP", "Source IP:"}, {"LOGVIEWER_SEARCH_SOURCEIP_USER", "Source IP/User:"}, {"LOGVIEWER_SEARCH_USER", "User:"}, {"LOGVIEWER_SEARCH_DESTIP_HOSTNAME", "Destination IP/Hostname:"}, {"LOGVIEWER_SEARCH_SOURCEPORT", "Source Port:"}, {"LOGVIEWER_SEARCH_DESTPORT", "Destination Port:"}, {"LOGVIEWER_SEARCH_MESSAGE1", "Message Text:"}, {"LOGVIEWER_SEARCH_MESSAGE2", "(blank for all)"}, {"LOGVIEWER_SEARCH_MATCHCASE", "Match case:"}, {"LOGVIEWER_SEARCH_RESULTSPERPAGE", "Results Per Page:"}, {"LOGVIEWER_SEARCH_GENERATE_REPORT", "Generate Report"}, {"LOGVIEWER_SEARCH_NOTE", "Note: Specifying date, time, IP address, and Message Category will result in faster report generation."}, {"LOGVIEWER_SEARCH_TITLE", "Select Search Criteria"}, {"LOGVIEWER_SEARCH_UNKNOWN", "Unknown error searching logs."}, {"LOGVIEWER_SEARCH_TOO_MANY", "Too many results were found; please be more specific."}, {"LOGVIEWER_SEARCH_LOG_VWR_SETTINGS", "Log Viewer Settings"}, {"LOGVIEWER_SEARCH_ENABLE_LOG_VIEW", "Enable Log Viewer"}, {"LOGVIEWER_SEARCH_SCREEN_NOT_AVAILABLE", "This screen is not supported."}, {"LOGVIEWER_SEARCH_LOG_SEARCH_AS_OF", "Log search results as of: "}, {"LOG_VIEW_LIMIT_REACHED_MSG", "The maximum limit of appliances for which the Log Viewer can be enabled has been reached.<p>To check which appliances have the Log Viewer enabled, please change the view to LogViewer View.<p>To change the Log Viewer appliance limit, navigate to Console->Reports->Settings"}, {"LOG_VIEW_LIMIT_REACHED_MSG_VP", "The maximum limit of appliances for which the Log Viewer can be enabled has been reached.<p>To change the Log Viewer appliance limit, navigate to Console->Reports->Settings"}, {"LOGVIEWER_APPLIANCE_TZ", "Appliance Timezone:"}, {"DB_MAINTENANCE_BACKUP_SCHEDULE_TITLE", "Database Backup Schedule"}, {"DB_MAINTENANCE_BACKUP_SETTINGS", "Database Backup Settings"}, {"DB_MAINTENANCE_IMM_BACKUP", "Immediate Database Backup"}, {"DB_MAINTENANCE_BACKUP_TYPE", "Database Backup Type:"}, {"DB_MAINTENANCE_BACKUP_SCHEDULE", "Database Backup Schedule:"}, {"DB_MAINTENANCE_BACKUP_FOLDER", "Backup files to directory [installDir]:"}, {"DB_MAINTENANCE_BACKUP_ZIP", "Zip files"}, {"DB_MAINTENANCE_BACKUP_TYPE_BASIC", "Current data"}, {"DB_MAINTENANCE_BACKUP_TYPE_RAW", "Archived and Raw syslog data"}, {"DB_MAINTENANCE_BACKUP_TYPE_COMP", "Complete data"}, {"DB_MAINTENANCE_BACKUP_DAYS_LIMIT", "Number of backups to store:"}, {"DB_MAINTENANCE_BACKUP_DAYS_LIMIT_NOTE", "Note: The number of backup files to store determines how many database backups will be retained in the backup directory. The maximum value is 3."}, {"DB_MAINTENANCE_BACKUP_DIR_CHANGE_NOTE", "Database backup files will not be deleted if the backup directory is changed."}, {"DB_MAINTENANCE_BACKUP_DAYS_MAX_LIMIT_MESSAGE", "The number of backup files to store is not within the allowed limits"}, {"DB_MAINTENANCE_BACKUP_IMM", "Backup database now:"}, {"DB_MAINTENANCE_RESTORE", "Database Restore"}, {"DB_MAINTENANCE_RESTORE_NOTE", "No backup files available in the backup directory"}, {"DB_MAINTENANCE_BACKUP_NOTE", "Note: The backup method selected will impact the time taken for the backup operation to run and the size of the backup files.<br>The different backup options are:<br>1. Current data: Backs up the appliance information and reports data.<br>2. Archived and Raw syslog data: Backs up all the archived and raw syslog data.<br>3. Complete data: Backs up all the data. Slowest since it does a complete backup."}, {"DB_MAINTENANCE_SCHEDULE_CONF_MSG", "Are you sure you want to change the database backup task schedule?"}, {"DB_MAINTENANCE_BACKUP_MSG", "Are you sure you want to change the database settings?"}, {"DB_MAINTENANCE_BACKUP_IMM_CONF_MSG", "Are you sure you want to backup the database now?"}, {"DB_MAINTENANCE_RESTORE_CONF_MSG", "Are you sure you want to restore the database to the selected file?"}, {"DB_MAINTENANCE_BACKUP_IMM_SUCCESS_MSG", "Database has been scheduled for immediate backup."}, {"DB_MAINTENANCE_RESTORE_SUCCESS_MSG", "Database restoration has started."}, {"DB_MAINTENANCE_RESTORE_INCOMPATIBLE", "The file specified is not compatible with this release."}, {"DB_MAINTENANCE_STATS_NOTE", "Run Time"}, {"DB_MAINTENANCE_HDR_FILENAME", "Filename"}, {"DB_MAINTENANCE_HDR_TYPE", "Type"}, {"DB_MAINTENANCE_HDR_DATE", "Date"}, {"DB_MAINTENANCE_HDR_PRODUCT", "Product"}, {"DB_MAINTENANCE_HDR_VERSION", "Version"}, {"DB_MAINTENANCE_HDR_SIZE", "Size"}, {"DB_MAINTENANCE_STATS_BACKUP_RUN", "Last Backup Run"}, {"DB_MAINTENANCE_STATS_RESTORE_RUN", "Last Restore Run"}, {"DB_MAINTENANCE_STATS_DB_SIZE", "Database size: "}, {"DB_MAINTENANCE_STATS_RESTORE_FILE_SIZE", "Restore file size: "}, {"DB_MAINTENANCE_BTN_SCHED", "Update Backup Schedule"}, {"DB_MAINTENANCE_BTN_SETTINGS", "Update Backup Settings"}, {"DB_MAINTENANCE_BTN_IMM", "Backup Database Immediately"}, {"DB_MAINTENANCE_BTN_RESTORE", "Restore Database"}, {"DB_MAINTENANCE_SCHEDULES_NOTE", "Note: A default schedule has been selected for database backup. Schedules can be configured from the Console->Events->Schedule screen."}, {"DB_MAINTENANCE_RESTORE_NOTE2", "Note: The database will go off line for the restore process. The restore process may take some time depending on the size of the database. The metrics below indicate how much time might be taken. You can view the status of the restore from the Console->Log screen once the restore is complete."}, {"REALTIMEVIEWER_SYSLOG_CURRENT_STATUS", "Current Status"}, {"REALTIMEVIEWER_SYSLOG_SYS_READER_CONFG", "Syslog Reader Configuration"}, {"REALTIMEVIEWER_SYSLOG_ENABLE_SYSLOG_FORWARDING", "Enable Syslog Forwarding"}, {"REALTIMEVIEWER_SYSLOG_ENABLE_SYSLOG_FORWARDING_ALERT", "Syslog Viewer uses syslogs forwarded from the Syslog Collector for viewing.\\n\\nNote: Enabling this option will forward syslogs received by all Syslog Collector services\\nin a deployment to the Web Server. This will increase the syslog traffic across the network,\\nsince every message is cloned by the Syslog Collector for event handling."}, {"REALTIMEVIEWER_SYSLOG_IP_ADDRESS_COLON", "IP Address:"}, {"REALTIMEVIEWER_SYSLOG_ENABLE_PORT_COLON", "Port:"}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_ENABLED_IP_ADDR_COLON", "Syslog forwarding is enabled (IP Address:"}, {"REALTIMEVIEWER_SYSLOG_SYS_READER_CURRENTLY", "Syslog Reader is currently "}, {"REALTIMEVIEWER_SYSLOG_SHOW_SYS_VIEWER_WINDOW", "Show Syslog Viewer Window"}, {"REALTIMEVIEWER_SYSLOG_NOT", "NOT "}, {"REALTIMEVIEWER_SYSLOG_RUNNING", "running."}, {"REALTIMEVIEWER_SYSLOG_PLEASE_START_SYS_READER", "Please start the Syslog Reader."}, {"REALTIMEVIEWER_SYSLOG_PRIVILEGE_MSG", "If you do not have sufficient privileges, please contact the administrator)."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_NOT_ENABLED", "Syslog Forwarding is not enabled."}, {"REALTIMEVIEWER_SYSLOG_SYS_FORWARDING_CONFG_MSG", "Please configure the Syslog Forwarding address and port, and start the Syslog Reader."}, {"REALTIMEVIEWER_SYSLOG_IP_ADDR_SPECS_NOTIFICATION", "The IP Address specified should be the Console/Web Server IP address."}, {"REALTIMEVIEWER_SYSLOG_RECOMMENTED_PORT_NUMBER", "(Recommended value for port is 21007)."}, {"REALTIMEVIEWER_SYSLOG_TIME_TO_UPDATE_MSG", "It may take a few minutes for the system to update the new configuration."}, {"REALTIMEVIEWER_SYSLOG_START_SYS_READER", "Start Syslog Reader"}, {"REALTIMEVIEWER_SYSLOG_STOP_SYS_READER", "Stop Syslog Reader"}, {"REALTIMEVIEWER_SYSLOG_NUM_OF_MSGS", "Number Of Messages:"}, {"REALTIMEVIEWER_SYSLOG_REFRESH_TIME_COLON", "Refresh Time:"}, {"REALTIMEVIEWER_SYSLOG_SECONDS", "seconds"}, {"REALTIMEVIEWER_SYSLOG_FILTER_COLON", "Filter:"}, {"REALTIMEVIEWER_SYSLOG_NAVIGATE_ALERT", "Please disable Syslog Forwarding before navigating away from this screen."}, {"REALTIMEVIEWER_SYSLOG_START_ALERT1", "Are you sure you want to start the Syslog Reader now?"}, {"REALTIMEVIEWER_SYSLOG_START_ALERT2", "(Note: If the configuration was just changed,"}, {"REALTIMEVIEWER_SYSLOG_START_ALERT3", "the Syslog Reader may not start successfully"}, {"REALTIMEVIEWER_SYSLOG_START_ALERT4", "since it takes a few minutes for the system to update "}, {"REALTIMEVIEWER_SYSLOG_START_ALERT5", "the configuration)."}, {"REALTIMEVIEWER_SYSLOG_STOP_ALERT1", "Stopping the Syslog Reader will no longer allow you to "}, {"REALTIMEVIEWER_SYSLOG_STOP_ALERT2", "view the syslog in real time."}, {"REALTIMEVIEWER_SYSLOG_STOP_ALERT3", "Are you sure you want to stop the Syslog Reader now?"}, {"REALTIMEVIEWER_SYSLOG_CHANGE_ALERT1", "Are you sure you want to change the Syslog Reader Configuration?"}, {"REALTIMEVIEWER_SYSLOG_CHANGE_ALERT2", "(Note: The Syslog Reader will be stopped. "}, {"REALTIMEVIEWER_SYSLOG_CHANGE_ALERT3", "You can restart the Syslog Reader from this screen"}, {"REALTIMEVIEWER_SYSLOG_CHANGE_ALERT4", "after the configuration has been successfully updated.)"}, {"REALTIMEVIEWER_SYSLOG_DOCK", "Dock"}, {"REALTIMEVIEWER_SYSLOG_CLEAR_BUFFER_WARNING", "This action would clear the existing Syslog Buffer. Do you want to continue?"}, {"REALTIMEVIEWER_SYSLOG_TIP_MESSAGE1", "Use filters to display only relevant syslog packets. Two Examples: "}, {"REALTIMEVIEWER_SYSLOG_TIP_MESSAGE2", "1. <font color=blue>sn=004011121122 AND m=537</font> "}, {"REALTIMEVIEWER_SYSLOG_TIP_MESSAGE3", "2. <font color=red>c=128 OR m=181 OR proto=udp/ntp</font>"}, {"REALTIMEVIEWER_SYSLOG_START_TAILING", "Start Tailing"}, {"REALTIMEVIEWER_SYSLOG_PAUSE", "Pause"}, {"SETTINGS_INTERFACE_SELECT", "Select Interfaces"}, {"SETTINGS_INTERFACE_SOURCE", "Source"}, {"SETTINGS_INTERFACE_DESTINATION", "Destination"}, {"SETTINGS_INTERFACE_DIRECTION", "Bi-directional"}, {"SETTINGS_INTERFACE_GENERATE", "Generate Report"}, {"SETTINGS_INTERFACE_CLOSE", "Close"}, {"SETTINGS_INTERFACE_ALERT1", "Both Source and Destination Interfaces are same"}, {"SETTINGS_TITLE", "Report Settings"}, {"SETTINGS_DATE_TITLE", "Select Report Date"}, {"SETTINGS_DATE_TITLE1", "Analyzer Date Selector"}, {"SETTINGS_DATERANGE_TITLE", "Analyzer Date Range Selector"}, {"SETTINGS_TITLE1", "Report Display Settings"}, {"SETTINGS_VIEW", "Display Type"}, {"SETTINGS_USERS", "Number of Users"}, {"SETTINGS_ALL_WARNING_MESSAGE1", "Are you sure you want to select the option All?"}, {"SETTINGS_ALL_WARNING_MESSAGE2", "The report could take longer to load with this option."}, {"SETTINGS_SITES_PER_USER", "Number of Sites per User"}, {"SETTINGS_USERS_PER_SITE", "Number of Users Per Site"}, {"SETTINGS_ATTACK_CATEGORIES", "Number of Attack Categories"}, {"SETTINGS_SITES", "Number of Sites"}, {"SETTINGS_SELECT_USERS", "Select Users (comma separated)"}, {"SETTINGS_SELECT_SITES", "Select Site (comma separated)"}, {"SETTINGS_SELECT_DATERANGE", "Select date range"}, {"SETTINGS_SELECT_DATERANGE_ALERT", "Start Date should be less than End Date"}, {"SETTINGS_SELECT_DATERANGE_CONFIRMATION1", "Are you sure you want to select this date range?"}, {"SETTINGS_SELECT_DATERANGE_CONFIRMATION2", "The report could take longer to load with larger date ranges."}, {"SETTINGS_SELECT_ENDDT", "End Date"}, {"SETTINGS_SELECT_STARTDT", "Start Date"}, {"SETTINGS_SELECT_DATERANGE_ALERT1", "Error setting date range."}, {"SETTINGS_ITEMS", "Number of Items"}, {"SETTINGS_ENTRIES", "Entries Per Item"}, {"SETTINGS_SELECT_HOUR", "Select Hour (Begin:End)"}, {"SETTINGS_OR", "OR"}, {"SETTINGS_SELECT_LAST_NOTE", "(Note: Last Summarized report date is the top-most date under the Start or End Date range tables.)"}, {"SETTINGS_SELECT_LAST_STR_1", "Select last "}, {"SETTINGS_SELECT_LAST_STR_2", " days before last summarization"}, {"SETTINGS_WHOLE_NAME_IP", "Whole Name/IP"}, {"GEN1_SUPPORT_ONLY", "This screen is not available for systems configured with Distributed Summarizer."}, {"DISTRIBUTED_SUPPORT_ONLY", "This screen only available for systems configured with Distributed Summarizer."}, {"FIREWALL_NOT_LICENCED_FOR_VIEWPOINT", "This appliance is not licensed for Analyzer Reporting"}, {"FIREWALL_NOT_LICENCED_FOR_VIEWPOINT_GROUP", "At least one appliance is not licensed for Analyzer Reporting"}, {"REPORT_DATE_ALERT", "Error setting date."}, {"FIREWALL_NOT_LICENCED_LINK", "Click here to go to the General->Status page and look under \"Not Licensed\" section for steps to resolve the issue"}, {"NUM_PACKETS", "Number of Packets"}, {"OF", " of "}, {"ATTACK_TITLE", "Attempted Attacks"}, {"ATTACK_ERROR_STR", "Summary of Exceptions"}, {"ATTACK_EVENTS", "Attack Events"}, {"ATTACK_BY_DAY", "Attacks by Day"}, {"ATTACK_BY_CATEGORY", "Attacks by Category for "}, {"ATTACK_NUM_OF", "Number of Attack Events"}, {"ATTACK_CATEGORIES", "Attack Categories"}, {"ATTACK_TOP_FROM", "Top Attacks"}, {"ATTACK_TOP_CATS", "Top Attack Categories"}, {"ATTACK_BY_ATTEMPTS", "Top Attack Categories"}, {"ATTACK_NUM_ATTACKS", "Number of Attacks"}, {"ATTACK_DROP_BY_GROUP", "Dropped Packets by Group"}, {"ATTACK_DROP_BY_HOUR", "Dropped Packets by Hour of Day"}, {"ATTACK_DROP_TITLE", "Dropped Packets & Exceptions"}, {"ATTACK_DROP_PACKETS", "Dropped Packets"}, {"ATTACK_DROP_PNE_OT", "Dropped Packets & Exceptions Over Time"}, {"ATTACK_SUM_FOR", "Attack Summary for "}, {"ATTACK_SUM_STR", "Attack Summary"}, {"ATTACK_BY_GROUP", "Attacks by Group"}, {"ATTACK_BY_HOUR", "Attacks by Hour of Day"}, {"ATTACK_ERROR_TITLE", "Summary of Exceptions"}, {"INTRUSIONS_DETECTED_FROM", "Intrusions Detected"}, {"INTRUSION_EVENTS", "Intrusion Events"}, {"INTRUSION_EVENTS_BYDAY", "Intrusion Events by Day"}, {"INTRUSION_EVENTS_BYGROUP", "Intrusion Events by Group"}, {"TOP_INTRUSION_EVENTS_Y1TITLE", "Number of Intrusion Events"}, {"TOP_INTRUSION_FOOTER", "Summary of Intrusions by Category"}, {"INTRUSION_SUM_FOR", "Intrusion Summary for "}, {"INTRUSION_SUM_STR", "Intrusion Summary"}, {"INTRUSION_TOP_CATS", "Top Intrusion Categories"}, {"INTRUSION_TOP_CATS_BY_ATTEMPTS", "Top Intrusion Categories"}, {"APPLICATION_ACCESSES_DETECTED_FROM", "Application Accesses Detected"}, {"APPLICATION_ACCESS_EVENTS", "Application Access Events"}, {"APPLICATION_ACCESS_EVENTS_BYDAY", "Application Access Events by Day"}, {"APPLICATION_ACCESS_EVENTS_BYGROUP", "Application Access Events by Group"}, {"TOP_APPLICATION_ACCESS_EVENTS_Y1TITLE", "Number of Application Access Events"}, {"TOP_APPLICATION_ACCESS_FOOTER", "Top Application Accesses"}, {"APPLICATION_ACCESS_SUM_FOR", "Application Access Summary for "}, {"APPLICATION_ACCESS_SUM_STR", "Application Access Summary"}, {"APPLICATION_ACCESS_TOP_CATS", "Top Application Access Categories"}, {"APPLICATION_ACCESS_TOP_CATS_BY_ATTEMPTS", "Top Application Access Categories"}, {"UP_DOWN_STATUS_FOR", "Firewall Up Status Summary for "}, {"UP_DOWN_STATUS_STR", "Firewall Up Status Summary"}, {"UP_DOWN_STATUS_FROM", "Firewall Up Status Summary from "}, {"UP_DOWN_STATUS", "Firewall Up Status"}, {"UP_DOWN_STATUS_BY_GROUP", "Up Status by Group"}, {"UP_DOWN_STATUS_BY_DAY", "Up Status by Day"}, {"UP_DOWN_STATUS_BY_HOUR", "Up Status by Hour of Day"}, {"SCHED_UP_DOWN_STATUS_SUMMARY", "Up Status Summary"}, {"DOWN_STATUS_FOR", "Firewall Down Status Summary for "}, {"DOWN_STATUS_STR", "Firewall Down Status Summary"}, {"DOWN_STATUS_FROM", "Firewall Down Status Summary from "}, {"DOWN_STATUS", "Firewall Down Status"}, {"DOWN_STATUS_BY_GROUP", "Down Status by Group"}, {"DOWN_STATUS_BY_DAY", "Down Status by Day"}, {"DOWN_STATUS_BY_HOUR", "Down Status by Hour of Day"}, {"SCHED_DOWN_STATUS_SUMMARY", "Down Status Summary"}, {"BLOCKED_USERS_BY_SITE", "Filtered Users By Site"}, {"TOP_USERS_BY_SITE", "Top Web Users By Site"}, {"VIRUSATTACK_SUM_FOR", "Virus Attack Summary for "}, {"VIRUSATTACK_SUM_STR", "Virus Attack Summary"}, {"VIRUSATTACK_ATTEMPTS", "Virus Attack Attempts"}, {"TOP_VIRUSES_BY_ATTEMPTS", "Top Viruses by Attack Attempts"}, {"NUM_VIRUS_ATTACKS", "Number of Virus Attacks"}, {"TOP_VIRUSES", "Top Viruses"}, {"TOP_VIRUS_ATTACKS", "Virus Attacks By User"}, {"VIRUSATTACK_SUM", "Virus Attack Summary "}, {"VIRUSATTACK_BY_GROUP", "Virus Attacks by Group"}, {"VIRUSATTACK_BY_DAY", "Virus Attacks by Day"}, {"VIRUSATTACK_BY_HOUR", "Virus Attacks by Hour of Day"}, {"VIRUSATTACK_TITLE", "Attempted Virus Attacks "}, {"SPYWARE_SUM", "Spyware Attempts Summary "}, {"NUM_SPYWARE_ATTEMPTS", "Number of Spyware Attempts"}, {"SPYWARE_BY_DAY", "Spyware Attempts by Day"}, {"SPYWARE_SUM_FOR", "Spyware Attempts Summary for "}, {"SPYWARE_SUM_STR", "Spyware Attempts Summary"}, {"SPYWARE_ATTEMPTS", "Spyware Attempts"}, {"SPYWARE_BY_GROUP", "Spyware Attempts by Group"}, {"SPYWARE_BY_HOUR", "Spyware Attempts by Hour of Day"}, {"SPYWARE_TOP_CATEGORY", "Top Spyware Categories"}, {"SPYWARE_BY_CATEGORY", "Spyware Attempts By Category"}, {"SPYWARE_BY_CATEGORY_FOR", "Spyware Attempts By Category for "}, {"SCHED_VPS_TITLE", "SonicWall Analyzer Reports"}, {"SCHED_GMS_TITLE", "SonicWall GMS Reports"}, {"REPORTS_STR", "Reports"}, {"SCHED_UNIT_REPORT_TITLE", "Scheduled report for SonicWall appliance "}, {"SCHED_GROUP_REPORT_TITLE", "Scheduled Report for SonicWall Group: "}, {"SCHED_ATTACK_OVERTIME", "Summary of Attacks Over Time from "}, {"SCHED_ATTACK_OVERTIME_YTITLE", "Attacks"}, {"SCHED_ATTACK_BY_CATEGORY_TITLE2", "Summary of Attacks by Category for "}, {"SCHED_ATTACK_BY_CATEGORY_TITLE3", "Scheduled Report for SonicWall Group: "}, {"SCHED_ATTACK_BY_CATEGORY_TITLE4", "Attacks By Category Over Time from "}, {"SCHED_ATTACK_EXCEPTIONS_TITLE", "Summary of Exceptions for "}, {"SCHED_ATTACK_EXCEPTIONS_STR", "Summary of Exceptions"}, {"SCHED_ATTACK_EXCEPTIONS_TITLE1", "Summary of Exceptions Over Time from "}, {"SCHED_ATTACK_EXCEPTIONS_OVERTIME_FOOTER1", "Errors & Exceptions by Group"}, {"SCHED_ATTACK_EXCEPTIONS_OVERTIME_FOOTER2", "Errors & Exceptions by Day"}, {"SUM_ATTACK_BY_CATEGORY_STR", "Summary of Attacks by Category"}, {"SUM_INTRUSIONS_BY_CAT_STR", "Summary of Intrusions by Category"}, {"SUM_INTRUSIONS_BY_CAT_STR_FOR", "Summary of Intrusions by Category for "}, {"SUM_TOP_MAIL_STR", "Top Users of Mail"}, {"SUM_TOP_VPN_STR", "Top VPN Policies"}, {"SUM_TOP_FILTERED_STR", "Top Filtered Sites"}, {"SUM_TOP_FILTERED_USERS_STR", "Top Filtered Users"}, {"SUM_TOP_FILTERED_WEB_SITE_CATEGORIES_STR", "Top Filtered Web Categories"}, {"SUM_TOP_WEB_SITES_STR", "Web Usage Top Sites"}, {"SUM_TOP_WEB_USERS_STR", "Top Users of Web"}, {"SUM_TOP_CATEGORIES_WEB_SITES_STR", "Top Categories of Web Sites"}, {"SUM_APPLICATION_ACCESSES_BY_CAT_STR", "Summary of Application Accesses by Category"}, {"SUM_APPLICATION_ACCESSES_BY_CAT_STR_FOR", "Summary of Application Accesses by Category for "}, {"TOP_WEB_USERS_HITS_STR", "Top Web Users by Hits"}, {"TOP_HITS_BY_SITES_STR", "Hits by Web Sites"}, {"SCHED_ATTACK_BY_CATEGORY_STR", "Attacks By Category Over Time"}, {"SCHED_INTRUSIONS_BY_CATEGORY_STR", "Intrusions By Category Over Time"}, {"SCHED_BANDWIDTH_USERS_OVERTIME_STR", "Bandwidth Top Users Over Time"}, {"SCHED_FTP_USERS_OVERTIME_STR", "FTP By Users Over Time"}, {"SCHED_MAIL_USER_OVERTIME_STR", "Top Users of Mail Over Time"}, {"SCHED_VPN_USER_OVERTIME_STR", "Top Users of VPN Over Time"}, {"SCHED_TOP_POLICY_OVERTIME_STR", "Top VPN Policies Over Time"}, {"SCHED_FILTER_SITES_OVERTIME_STR", "Top Filtered Sites Over Time"}, {"SCHED_FILTER_USERS_OVERTIME_STR", "Top Filtered Users Over Time"}, {"SCHED_WEBUSAGE_TOPSITES_OVERTIME_STR", "Web Usage Top Sites Over Time"}, {"SCHED_WEBUSAGE_TOPUSERS_OVERTIME_STR", "Web Usage Top Users Over Time"}, {"SCHED_APPLICATION_ACCESSES_BY_CATEGORY_STR", "Application Accesses By Category Over Time"}, {"SCHED_ATTACK_OVERTIME_STR", "Summary of Attacks Over Time"}, {"SCHED_ATTACK_EXCEPTIONS_STR", "Summary of Exceptions Over Time"}, {"SCHED_INTRUSIONS_OVERTIME_STR", "Summary of Intrusions Over Time"}, {"SCHED_BW_OVERTIME_STR", "Bandwidth Over Time"}, {"SCHED_FTP_OVERTIME_STR", "FTP Usage Over Time"}, {"SCHED_MAIL_OVERTIME_STR", "Mail Usage Over Time"}, {"SCHED_VPN_OVERTIME_STR", "VPN Usage Over Time"}, {"SCHED_FILTERED_OVERTIME_STR", "Filtered Web Sites Over Time"}, {"SCHED_WEBUSAGE_OVERTIME_STR", "Web Usage Over Time"}, {"SCHED_STATUS_OVERTIME_STR", "Up Status Over Time"}, {"SCHED_APPLICATION_ACCESSES_OVERTIME_STR", "Summary of Application Accesses Over Time"}, {"SCHED_DOWN_STATUS_OVERTIME_STR", "Down Status Over Time"}, {"SCHED_BANDWIDTH_OVERTIME_TITLE", "Bandwidth Over Time from "}, {"SCHED_BANDWIDTH_USERS_OVERTIME_TITLE", "Bandwidth Top Users Over Time from "}, {"SCHED_BANDWIDTH_TOP_USERS", "Top Users of Bandwidth from "}, {"SCHED_BANDWIDTH_TOP_USERS_FOR", "Top Users of Bandwidth for "}, {"SCHED_FTP_OVERTIME_TITLE", "FTP Usage Over Time from "}, {"SCHED_FTP_SUMMARY_TITLE", "Summary of FTP Usage for "}, {"SCHED_FTP_SUMMARY_STR", "Summary of FTP Usage"}, {"SCHED_FTP_SUMMARY_FOOTER1", "FTP MBytes by Group"}, {"SCHED_FTP_SUMMARY_FOOTER2", "FTP MBytes by Hour of Day"}, {"SCHED_FTP_USERS_OVERTIME_TITLE", "Top Users of FTP Over Time from "}, {"SCHED_AUTH_ADMIN_TITLE", "Authenticated Admin Logins for "}, {"SCHED_AUTH_FAILED_TITLE", "Failed Logins for "}, {"SCHED_AUTH_USER_TITLE", "Authenticated User Logins for "}, {"SCHED_AUTH_ADMIN_LOGIN", "Authenticated Admin Logins"}, {"SCHED_AUTH_FAILED_LOGIN", "Failed Logins"}, {"SCHED_AUTH_USER_LOGIN", "Authenticated User Logins"}, {"SCHED_MAIL_OVERTIME_TITLE", "Mail Usage Over Time from "}, {"SCHED_MAIL_SUMMARY_TITLE", "Mail Usage Summary for "}, {"SCHED_MAIL_SUMMARY_STR", "Mail Usage Summary"}, {"SCHED_MAIL_USER_TITLE", "Top Users of Mail for "}, {"SCHED_MAIL_USER_OVERTIME_TITLE", "Top Users of Mail Over Time from "}, {"SHCED_SERVICES_SUMMARY_TITLE", "Summary of Services"}, {"SCHED_SERVICES_SUMMARY_FOR", "Summary of Services for "}, {"SERVICES_SUMMARY_BYVPN_TITLE", "Summary of Services Over VPN"}, {"SCHED_SERVICES_SUMMARY_BYVPN_FOR", "Summary of Services Over VPN for "}, {"SCHED_VPN_OVERTIME_TITLE", "VPN Bandwidth Over Time from "}, {"SCHED_VPN_OVERTIME_FOOTER1", "Total VPN in MBytes by Group"}, {"SCHED_VPN_OVERTIME_FOOTER2", "Total VPN in MBytes by Day"}, {"SCHED_VPN_SUMMARY_TITLE", "VPN Usage Summary for "}, {"SCHED_VPN_SUMMARY_STR", "VPN Usage Summary"}, {"SCHED_VPN_USER_OVERTIME_TITLE", "Top Users of VPN Over Time from "}, {"SCHED_VPN_USER_OVERTIME_YTITLE", "Top VPN Users"}, {"SCHED_VPN_USER_OVERTIME_FOOTER", "Top Users of VPN by MBytes"}, {"SCHED_VPN_USES_YTITLE", "Top Users of VPN"}, {"SCHED_VPN_USER_TITLE_FOR", "Top Users of VPN for "}, {"SCHED_VPN_TOP_POLICIES_TITLE_FOR", "Top Policies of VPN for "}, {"SCHED_FILTER_OVERTIME_TITLE", "Filtered Web Sites Over Time from "}, {"SCHED_FILTER_OVERTIME_FOOTER", "Filtered Site Attempts by Group"}, {"SCHED_FILTER_BYUSER_TITLE", "Filtered Sites by User for "}, {"SCHED_FILTER_BYUSER_OVERTIME_TITLE", "Filtered Sites By User Over Time from "}, {"SCHED_FILTER_BYUSER_OVERTIME_STR", "Filtered Sites By User Over Time"}, {"SCHED_FILTER_SITES_OVERTIME_TITLE", "Filtered Top Sites Over Time from "}, {"SCHED_FILTER_SUMMARY_TITLE", "Summary of Filtered Web Sites for "}, {"SCHED_FILTER_TOPSITES_TITLE", "Top Filtered Sites for "}, {"SCHED_FILTER_TOPUSERS_TITLE", "Top Filtered Users for "}, {"SCHED_FILTER_TOPUSERS_OVERTIME_TITLE", "Top Filtered Users Over Time from "}, {"SCHED_WEBUSAGE_OVERTIME_TITLE", "Web Usage Over Time from "}, {"SCHED_WEBUSAGE_OVERTIME_FOOTER", "Web Usage in MBytes by Group"}, {"SCHED_WEBUSAGE_SITESBYUSER_TITLE", "Top Web Sites By User"}, {"SCHED_WEBUSAGE_SITESBYUSER_OVERTIME_TITLE", "Web Usage Sites By User Over Time from "}, {"SCHED_WEBUSAGE_SITESBYUSER_OVERTIME_STR", "Web Usage Sites By User Over Time"}, {"SCHED_WEBUSAGE_TOPSITES_OVERTIME_TITLE", "Web Usage Top Sites Over Time from "}, {"SCHED_WEBUSAGE_SUMMARY_TITLE", "Summary of Web Usage for "}, {"SCHED_WEBUSAGE_SUMMARY_STR", "Summary of Web Usage"}, {"SCHED_WEBUSAGE_SUMMARY_YTITLE", "MBytes"}, {"SCHED_WEBUSAGE_TOPSITES_TITLE", "Web Usage Top Sites By User for "}, {"SCHED_WEBUSAGE_TOPUSERS_OVERTIME_TITLE", "Web Usage Top Users Over Time from "}, {"SCHED_VIRUSATTACKS_OVERTIME", "Virus Attacks Over Time"}, {"SCHED_VIRUSATTACKS_OVERTIME_FROM", "Virus Attacks Over Time from "}, {"SCHED_TOP_VIRUSES_BY_ATTEMPTS_FROM", "Top Viruses by Attack Attempts from "}, {"SCHED_VIRUSATTACK_SUMMARY", "Virus Attack Summary"}, {"SCHED_SPYWARE_OVERTIME", "Spyware Attempts Over Time"}, {"SCHED_SPYWARE_OVERTIME_FROM", "Spyware Attempts Over Time from "}, {"SCHED_SPYWARE_SUMMARY", "Spyware Attempts Summary"}, {"SCHED_SPYWARE_BY_CAT_OVERTIME", "Spyware Attempts By Category Over Time"}, {"SCHED_SINGLE_MAIL_SUMMARY_TITLE", "Summary of Mail Usage for "}, {"SCHED_SINGLE_FILTER_SITES_SUMMARY_TITLE", "Summary of Filtered Web Sites for "}, {"SCHED_SINGLE_FILTER_SITES_SUMMARY_STR", "Summary of Filtered Web Sites"}, {"SCHED_SINGLE_FTP_TITLE", "FTP MBytes Transferred by Group"}, {"SCHED_SINGLE_MAIL_TITLE", "Mail Transferred in MBytes by Group"}, {"SCHED_SINGLE_FILTER_TITLE", "Filtered Sites Attempts by Day"}, {"SCHED_SINGLE_FILTER_TOPSITES_TITLE", "Top Filtered Sites for "}, {"SCHED_SINGLE_FILTER_TOPUSERS_TITLE", "Top Users of Web Filter for "}, {"SCHED_SINGLE_WEBUSAGE_TOPSITES_TITLE", "Web Usage Top Sites for "}, {"SCHED_SINGLE_WEB_SITE_CATEGORIES", "Top Web Site Categories for "}, {"SCHED_SINGLE_WEB_TOPCATEGORIES_OVERTIME_TITLE", "Web Usage Top Sites By Categories Over Time from "}, {"SCHED_SINGLE_ATTACKS_BYCATEGORY_OVERTIME_TITLE", "Attacks By Categories Over Time from "}, {"SCHED_SINGLE_FTP_TOPUSERS_OVERTIME_TITLE", "FTP Usage Top Users Over Time from "}, {"SCHED_SINGLE_MAIL_TOPUSERS_OVERTIME_TITLE", "Mail Usage Top Users Over Time from "}, {"SCHED_SINGLE_VPN_TOPUSERS_OVERTIME_TITLE", "VPN Top Users Over Time from "}, {"SCHED_SINGLE_VPN_TOPPOLICIES_OVERTIME_TITLE", "VPN Top Policies Over Time from "}, {"SCHED_SINGLE_VPN_TOPPOLICIES_BY_MBYTES_TITLE", "Top VPN Policies by MBytes "}, {"SCHED_SINGLE_FILTER_TOPSITES_OVERTIME_TITLE", "Web Filter Top Sites Over Time from "}, {"SCHED_SINGLE_FILTER_TOPUSERS_OVERTIME_TITLE", "Web Filter Top Users Over Time from "}, {"SCHED_SINGLE_FILTER_TOPCATEGORIES_OVERTIME_TITLE", "Web Filter Top Sites By Categories Over Time from "}, {"SCHED_SINGLE_WEBUSAGE_TOPUSERS_OVERTIME_TITLE", "Web Usage Top Users Over Time from "}, {"SCHED_SINGLE_FILTER_SITESBYUSER_OVERTIME_TITLE", "Web Filter Sites By User Over Time from "}, {"SCHED_SINGLE_WEBUSAGE_SITESBYUSER_OVERTIME_TITLE", "Web Usage Sites By User Over Time from "}, {"SCHED_SINGLE_FILTER_SITESBYUSER_TITLE", "Filtered Web Sites by User for "}, {"SCHED_SINGLE_TOP_VIRUSES_BY_ATTEMPTS_TITLE", "Top Viruses by Attack Attempts for "}, {"SCHED_SINGLE_TOP_VIRUS_ATTACKS_TITLE", "Top Viruses by Attack Attempts for "}, {"AUTHADMIN_TITLE", "Authenticated Admin Logins"}, {"AUTHFAILED_TITLE", "Failed Logins"}, {"AUTHUSER_TITLE", "Authenticated User Logins"}, {"BANDWIDTH_USAGE_FROM", "Bandwidth Usage"}, {"BANDWIDTH_MB_BY_DAY", "Total Bandwidth in MBytes by Day"}, {"BANDWIDTH_MB_BY_GROUP", "Total Bandwidth in MBytes by Group"}, {"BANDWIDTH_SELECTED_USERS", "Top Selected User(s) of Bandwidth "}, {"BANDWIDTH_TOP_USERS", "Top Users of Bandwidth"}, {"BANDWIDTH_SEL_USER_LABEL", "Selected Bandwidth User(s)"}, {"BANDWIDTH_SEL_USER_BY_MB", "Selected User(s) of Bandwidth by MBytes"}, {"BANDWIDTH_TOP_USER_LABEL", "Top Bandwidth Users"}, {"BANDWIDTH_TOP_USER_LABEL2", "Top Users of Bandwidth"}, {"BANDWIDTH_TOP_USER_BY_MB", "Top Users of Bandwidth by MBytes"}, {"BANDWIDTH_TOP_SEL_FROM", "Top Selected User(s) of Bandwidth from "}, {"BANDWIDTH_TOP_USERS_FROM", "Top Users of Bandwidth from "}, {"FTP_FROM", "FTP Activity"}, {"FTP_MB_BY_DAY", "FTP MBytes Transferred by Day"}, {"FTP_USAGE_FOR", "Summary of FTP Usage for "}, {"FTP_USAGE_STR", "Summary of FTP Usage"}, {"FTP_MB_FOR_GROUP", "FTP MBytes For Group"}, {"FTP_MB_BY_HOUR", "FTP MBytes by Hour of Day"}, {"FTP_TOP_SEL_USERS_FOR", "Top Selected FTP Sites By User "}, {"FTP_TOP_USERS_FOR", "Top Users of FTP"}, {"FTP_TOP_USERS_FOR2", "Top Users of FTP for "}, {"FTP_TOP_SEL_USER_BY_MB", "Top Selected FTP User(s) by MBytes"}, {"FTP_TOP_USER_BY", "Top FTP Users by MBytes"}, {"FTP_TOP_SEL_USER_FROM", "Top Selected User(s) of FTP from "}, {"FTP_TOP_USERS_FROM", "Top Users of FTP from "}, {"FTP_TOP_SEL_USER", "Top Selected FTP User(s)"}, {"FTP_TOP_USERS", "Top FTP Users"}, {"FTP_TOP_USERS_FOOTER", "Top Users of FTP by MBytes"}, {"MAIL_USAGE_FOR", "Summary of Mail Usage for "}, {"MAIL_USAGE_STR", "Summary of Mail Usage"}, {"MAIL_USAGE_BY_GROUP", "Mail Usage by Group"}, {"MAIL_USAGE_BY_HOUR", "Mail Usage by Hour of Day"}, {"MAIL_TOP_SEL_FOR", "Top Selected Mail User(s) "}, {"MAIL_TOP_USERS_FOR", "Top Users of Mail"}, {"MAIL_TOP_SEL_USERS", "Top Selected Mail User(s)"}, {"MAIL_TOP_SEL_BY_EVENTS", "Top Selected Mail User(s) by Events"}, {"MAIL_TOP_USERS", "Top Users of Mail"}, {"MAIL_TOP_USERS_BY_EVENTS", "Top Mail Users by Events"}, {"MAIL_USAGE_FROM", "Mail Usage"}, {"MAIL_IN_MB_BY_DAY", "Mail Transferred in MBytes by Day"}, {"MAIL_TOP_SEL_FROM", "Top Selected User(s) of Mail from "}, {"MAIL_TOP_USERS_FROM", "Top Users of Mail from "}, {"MAIL_TOP_SEL_BY_MB", "Top Selected User(s) of Mail by MBytes"}, {"MAIL_TOP_BY_MB", "Top Users of Mail by MBytes"}, {"SERVICE_SUM_FOR", "Services Summary for "}, {"SERVICE_SUM_FOOTER_INMB", "Service MBytes by Hour of the day"}, {"SERVICE_SUM_FOOTER_INEVENTS", "Service Events by Hour of the day"}, {"SERVICE_SUM_YTITLE_INEVENTS", "Service Events"}, {"VPN_SUM_FOR", "VPN Usage Summary for "}, {"VPN_SUM_STR", "VPN Usage Summary"}, {"VPN_MB_BY_GROUP", "VPN MBytes by Group"}, {"VPN_MB_BY_HOUR", "VPN MBytes by Hour of Day"}, {"VPN_TOP_SEL_FOR", "Top Selected User(s) of VPN "}, {"VPN_TOP_USERS_FOR", "Top Users of VPN"}, {"VPN_TOP_SEL_BY_MB", "Top Selected VPN User(s) by MBytes"}, {"VPN_TOP_USERS_BY_MB", "Top VPN Users by MBytes"}, {"VPN_ACTIVITY_FROM", "VPN Activity"}, {"VPN_MB_BY_DAY", "VPN Usage in MBytes by Day"}, {"VPN_TOP_USERS_FROM", "Top Users of VPN from "}, {"VPN_TOP_SEL", "Top Selected VPN User(s)"}, {"VPN_TOP_USERS", "Top VPN Users"}, {"VPN_TOP_POLICIES_TITLE", "Top VPN Policies"}, {"VPN_TOP_POLICIES_Y1TITLE", "Top VPN Policies by MBytes"}, {"VPN_TOP_POLICIES_FOOTER", "Top VPN Policies by MBytes"}, {"VPN_BYPOLICY_HOURLY_TITLE", "Top VPN Policies By Hour"}, {"FILTER_SUM_FOR", "Summary of Filtered Web Sites for "}, {"FILTER_SUM_STR", "Summary of Filtered Web Sites"}, {"FILTER_SUM_ATTEMPTS", "Attempts"}, {"FILTER_BY_GROUP", "Filtered Sites Attempts by Group"}, {"FILTER_BY_HOUR", "Filtered Sites Attempts by Hour of Day"}, {"FILTER_BY_SEL_FOR", "Top Filtered Web Sites By Selected User(s)"}, {"FILTER_BY_SEL_SITE_FOR_TITLE", "Top Filtered Sites By Site"}, {"FILTER_BY_USER_FOR", "Filtered Web Sites by User"}, {"FILTER_SEL_USER", "Selected Filtered User(s)"}, {"FILTER_TOP_USER", "Top Users of Web Filter"}, {"FILTER_TOP_SITES_FOR", "Top Filtered Sites"}, {"FILTER_NUM_ATTEMPTS", "Number of Attempts"}, {"FILTER_ATTEMPTS_BY_NUM", "Filtered Web Sites"}, {"FILTER_SITES_BY_SEL_USER", "Top Filtered Sites By Selected User(s) "}, {"FILTER_SITES_BY_USER", "Filtered Web Sites by User"}, {"FILTER_ACTIVITY_FROM", "Web Filter Activity"}, {"FILTER_BLOCKED_ATTEMPTS", "Filtered Attempts"}, {"FILTER_ATTEMPTS_BY_DAY", "Filtered Site Attempts by Day"}, {"FILTER_SITES_BY_USER_FROM", "Filtered Web Sites by User"}, {"FILTER_SITES_FROM", "Top Filtered Web Sites from "}, {"FILTER_TOP_SITES", "Top Filtered Sites"}, {"FILTER_TOP_BY_ATTEMPTS", "Top Filtered Sites"}, {"FILTER_SEL_FROM", "Top Filtered Web User(s) "}, {"FILTER_USERS_FROM", "Top Filtered Web Users"}, {"FILTER_TOP_SEL_USERS", "Top Selected Filtered Web User(s)"}, {"FILTER_SEL_BY_ATTEMPTS", "Top Selected Filtered User(s) of Web"}, {"FILTER_TOP_WEB_USERS", "Top Filtered Web Users"}, {"FILTER_TOP_WEB_BY_ATTEMPTS", "Top Filtered Users of Web"}, {"FILTER_SUM_FILTERED_SITES_BY_CAT_FOR", "Top Web Site Categories"}, {"FILTER_TOP_WEB_SITE_CATEGORIES", "Top Filtered Web Site Categories"}, {"INTRUSION_TOP_TITLE", "Summary of Intrusions by Category"}, {"INTRUSION_BY_GROUP", "Intrusions by Group"}, {"INTRUSION_BY_HOUR", "Intrusions by Hour of Day"}, {"NUM_INTRUSIONS", "Number of Intrusions"}, {"APPLICATION_ACCESS_TOP_TITLE", "Top Application Accesses"}, {"APPLICATION_ACCESS_BY_GROUP", "Application Accesses by Group"}, {"APPLICATION_ACCESS_BY_HOUR", "Application Accesses by Hour of Day"}, {"NUM_APPLICATION_ACCESSES", "Number of Application Accesses"}, {"WEB_SUM_FOR", "Summary of Web Usage for "}, {"WEB_SUM_STR", "Summary of Web Usage"}, {"WEB_MB_BY_GROUP", "Bandwidth MBytes by Group"}, {"WEB_MB_BY_HOUR", "Bandwidth MBytes by Hour of Day"}, {"WEB_SITES_FOR", "Web Usage Top Sites"}, {"WEB_SITES_BY_MB", "Top Web Sites by MBytes"}, {"WEB_USERS_SEL_FOR", "Top Selected User(s) of Web "}, {"WEB_USERS_FOR", "Top Users of Web for "}, {"WEB_USERS_SEL_BY_MB", "Top Selected Web User(s) by MBytes"}, {"WEB_USERS_BY_MB", "Top Web Users by MBytes"}, {"WEB_SITE_BY_SEL_FOR", "Top Visited Web Sites By Selected User(s) for "}, {"WEB_SITE_BY_SITE_FOR_TITLE", "Top Visited Web Sites By Site"}, {"WEB_SITE_BY_SEL_SITE_FOR_TITLE", "Top Visited Web Sites By Selected Site(s) for "}, {"WEB_SITE_BY_USER_FOR", "Web Usage Top Sites By User"}, {"WEB_ACTIVITY_FROM", "Web Activity"}, {"WEB_MB_BY_DAY", "Web Usage in MBytes by Day"}, {"WEB_SITES_FROM", "Top Web Sites from "}, {"WEB_SITES", "Top Web Sites"}, {"WEB_USERS_SEL_FROM", "Top Selected Web User(s) from "}, {"WEB_USERS_FROM", "Top Web Users"}, {"WEB_SEL_USERS", "Top Selected Web User(s)"}, {"WEB_USERS", "Top Web Users"}, {"WEB_SITES_SEL_FROM", "Top Sites by Selected User(s) "}, {"WEB_SITES_BY_USER_FROM", "Top Sites by User from "}, {"WEB_USAGE_SUM_WEB_USG_BY_CAT_FOR", "Top Visited Web Sites By Category"}, {"WEB_SITE_BY_CATEGORY_FOR", "Top Visited Web Sites By Category for "}, {"WEB_SITE_BY_CATEGORY", "Top Visited Web Sites By Category"}, {"WEB_SITE_CATEGORIES", "Top Web Site Categories"}, {"CHART_AND_TABLE", "Chart and Table"}, {"TABLE", "Table Only"}, {"SUCCESSFULLY_UPDATED", "Successfully updated: "}, {"PARAMETERS_UPDATED_SUCCESSFULLY", "Parameters updated successfully."}, {"PARAMETERS_COULD_NOT_BE_UPDATED", "One or more parameters could not be updated."}, {"WEB_SERVER_CONFIG_INFO_UPDATED_SUCCESSFULLY", "Web Server configuration information has been updated successfully."}, {"TOP_SITES", "Top Sites"}, {"TOP_USERS", "Top Users"}, {"TOP_SITES_PER_USER", "Top Sites per User"}, {"DAYS_TO_STORE_SUMM_DATA", "Days to store summarized data was successfully changed to: "}, {"SUMMARIZE_NOW", "Summarizer service was successfully requested to summarize immediately"}, {"SUMMARIZE_NOW_FAILED", "Summarizer service could not be contacted successfully for immediate summarization"}, {"UPLOAD_RAW_NOW", "Summarizer service was successfully requested to upload raw syslog files immediately"}, {"UPLOAD_NOW_FAILED", "Summarizer service could not be contacted successfully for immediate raw syslog upload"}, {"SUMMARIZE_NOW_FOR_DATERANGE", "Summarizer service was successfully requested to summarize from "}, {"SUMMARIZE_NOW_FOR_DATERANGE_FAILED", "Summarizer service could not be contacted successfully for summarization from "}, {"SUMMARIZE_UPDATE_NEXT_SUMMARY_TIME", "Next summary time for the summarizer has been set successfully"}, {"SUMMARIZE_UPDATE_NEXT_SUMMARY_TIME_FAILED", "Error: Could not update the next summary time"}, {"SUMMARIZE_UPDATE_DATA_AVAILABLE_DATE", "The summary availability timestamp value has been updated successfully"}, {"SUMMARIZE_UPDATE_DATA_AVAILABLE_DATE_FAILED", "Error: Could not update the last summarized until value"}, {"SUMMARIZE_DELETE_DATA_AVAILABLE_DATE", "The date for deleting summary data has been updated successfully"}, {"SUMMARIZE_DELETE_DATA_AVAILABLE_DATE_FAILED", "Error: Could not update the summary delete date"}, {"SUMMARIZE_UPDATE_EMAIL_ARCHIVE_TIME", "Next email/archive time has been updated successfully"}, {"SUMMARIZE_UPDATE_EMAIL_ARCHIVE_TIME_FAILED", "Error: Could not update the next email/archive time"}, {"SETTINGS_UPDATED_SUCCESSFULLY", "Settings updated successfully."}, {"SETTINGS_UPDATE_FAILURE", "Failed to update settings."}, {"SETTINGS_LOGO_DELETED_SUCCESSFULLY", "Logo Deleted successfully."}, {"SETTINGS_LOGO_DELETION_FAILED", "Failed to delete Logo."}, {"OPTIMIZE_NOW", "Summarizer service was successfully requested to optimize immediately"}, {"OPTIMIZE_NOW_FAILED", "Summarizer service could not be contacted successfully for immediate optimization"}, {"MONTH_TO_STORE_UPDATE", "Months to Store Syslog Data successfully updated to: "}, {"MONTH_TO_STORE_ONE_YEAR", " 1 Year For"}, {"MONTH_TO_STORE_ONE_YEARS", " 2 Years For"}, {"TIME_BETWEEN", "Time between summaries (hh:mm) successfully updated to: "}, {"TIME_TO_DELETE", "Delete syslog data successfully updated to: "}, {"MONTHLY_SCHED_REPORTS", "Monthly reports timestamp has been changed successfully"}, {"MONTHLY_SCHED_REPORTS_FAILED", "Error: Could not update the Monthly reports timestamp"}, {"SCHEDULE_REPORT_NOW", "Selected Schedules set successfully for immediate processing"}, {"SCHEDULE_REPORT_NOW_FAILED", "Could not process the schedule. Please try again"}, {"SCHEDULE_UPDATED", "Schedule updated successfully"}, {"SCHEDULE_DELETED", "One or more schedules were deleted successfully"}, {"SCHEDULE_DISABLED", "Schedule disabled successfully"}, {"SCHEDULE_ENABLED", "Schedule enabled successfully"}, {"SCHEDULE_DELETE_FAILED", "Could not delete the schedule"}, {"SCHEDULE_DISABLE_FAILED", "Could not disable the schedule"}, {"SCHEDULE_ENABLE_FAILED", "Could not enable the schedule"}, {"SCHEDULE_ADDED", "The new schedule was added successfully to the database"}, {"SCHEDULE_PROCESS_ERR", "Could not process the schedule. Please check if Analyzer Scheduler service is running."}, {"SCHEDULE_RESEND_ERR", "Re-send reports action failed."}, {"SCHEDULE_RESEND", "The selected schedule(s) have been set successfully to be resent."}, {"SCHEDULE_PROCESSING_EXCEPTION", "Could not process the schedule. Please try again"}, {"SCHEDULE_UPDATE_WEEKLY_REPORTS", "Weekly reports timestamp has been changed successfully"}, {"SCHEDULE_UPDATE_WEEKLY_REPORTS_FAILED", "Error: Could not update the Weekly reports timestamp"}, {"INCOMPLETE_ACTION", "Could not complete the action"}, {"COST_PER_MBYTE_BANDWIDTH_DATA", "Cost Per MByte Bandwidth data was successfully changed to: "}, {"SCHEDULE_PROP", "Schedule Properties"}, {"SCHEDULE_PROP_SCHEDID", "Schedule ID"}, {"SCHEDULE_PROP_SCHEDTYP", "Schedule Type"}, {"SCHEDULE_PROP_NAME", "Name"}, {"SCHEDULE_PROP_TYPE", "Type"}, {"SCHEDULE_PROP_NODE", "Node"}, {"SCHEDULE_PROP_DESCRIPTION", "Description"}, {"SCHEDULE_PROP_REPORTS_LIST", "Reports To Be Emailed"}, {"SCHEDULE_PROP_DEST_ADDRESS", "Destination Email Address"}, {"SCHEDULE_PROP_SMTP", "SMTP Server"}, {"SCHEDULE_PROP_SUBJLINE", "Email Subject"}, {"SCHEDULE_PROP_SUBJ", "Message "}, {"SCHEDULE_PROP_INLINE", "Send Reports Inline"}, {"SCHEDULE_PROP_DOCFORMAT", "Document Format"}, {"SCHEDULE_PROP_ARCHIVE", "Reports To Be Archived"}, {"SCHEDULE_PROP_ARCHIVEFOLDER", "Archive Folder"}, {"SCHEDULE_PROP_TEMPLATEFOLDER", "Template Folder"}, {"SCHEDULE_PROP_SINGLEFILE", "Include All Reports in a Single File"}, {"SCHEDULE_PROP_ZIP", "Zip Reports"}, {"SCHEDULE_PROP_REPORTCONTENT", "Chart And Table"}, {"SCHEDULE_PROP_REPORTTABLE", "Table Only"}, {"SCHEDULE_PROP_DISPLAY", "Display Type"}, {"SCHEDULE_PROP_CHARTTYPE", "Chart Type"}, {"SCHEDULE_PROP_NUMSITES", "Number Of Top Sites"}, {"SCHEDULE_PROP_NUMUSERS", "Number Of Top Users"}, {"SCHEDULE_PROP_NUMITEMS", "Number Of Top Items"}, {"SCHEDULE_PROP_NUMPERITEM", "Number Of Entries Per Item"}, {"SCHEDULE_PROP_SITELIST", "Sites List"}, {"SCHEDULE_PROP_USERLIST", "Users List"}, {"SCHEDULE_PROP_WHOLENAME", "Enable Whole Name/IP"}, {"SCHEDULE_PROP_HOURS", "Hours"}, {"SCHEDULE_PROP_REPORTLIST", "List of Reports"}, {"SCHEDULE_PROP_GENERALCAT", "General"}, {"SCHEDULE_PROP_CATEGORYCAT", "Category"}, {"SCHEDULE_PROP_FORMATCAT", "Formats and Settings"}, {"SCHEDULE_PROP_LOGOFILE", "Logo File:"}, {"SCHEDULE_PROP_LOGOFILENAME", "Current Logo:"}, {"SCHEDULE_PROP_COVERPAGE", "Cover Page"}, {"SCHEDULE_PROP_SUMMARYPAGE", "Summary Report Page"}, {"SCHEDULE_PROP_DETAILPAGE", "Detailed Report Page"}, {"SCHEDULE_PROP_CONFIGOPTIONS", "Configure Filters/Options"}, {"SCHEDULE_PROP_NOTE", "(Note: You can set filters and display options to be applied for reports in this schedule here)."}, {"SCHEDULE_PROP_TITLE", "Title:"}, {"SCHEDULE_PROP_SUBTITLE", "Subtitle:"}, {"SCHEDULE_PROP_DESCRIPTION", "Description:"}, {"SCHEDULE_PROP_FOREGROUND", "Foreground Color:"}, {"SCHEDULE_PROP_BACKGROUND", "Background Color:"}, {"SCHEDULE_PROP_SUMM_REPORTNAME", "Report Name"}, {"SCHEDULE_PROP_SUMM_CONFIGURATION", "Configuration"}, {"SCHEDULE_PROP_SUMM_ORDER", "Order"}, {"SCHEDULE_PROP_SUMM_DELETE", "Delete"}, {"SCHEDULE_PROP_PROFILE_OPTIONS", "Profile Options:"}, {"SCHEDULE_PROP_PROFILE_EXISTING", "Select an existing profile"}, {"SCHEDULE_PROP_PROFILE_NEW", "Create a new profile"}, {"SCHEDULE_PROP_PROFILE_NAME", "Profile Name:"}, {"SCHEDULE_PROP_PROFILE_NEWNAME", "New Profile Name:"}, {"SCHEDULE_PROP_CREATEDON", "Created on:"}, {"SCHEDULE_PROP_PDFINGEN1", "Gen1 mode is not supported"}, {"SORTBY_PDF_HITS", "Hits/Connections/Events"}, {"SERVICE_ADD_FAILED_1", "Cannot add service for summarization: "}, {"SERVICE_ADD_FAILED_2", "already exists"}, {"SERVICE_DUPLICATE_ADD_FAILED_1", "Add Service failed for "}, {"SERVICE_DUPLICATE_ADD_FAILED_2", "; duplicate port detected"}, {"SERVICE_DELETED_FROM_SUMMARIZATION", "Deleted Service for Summarization: "}, {"SERVICE_ADDED_FOR_SUMMARIZATION", "Added Service for Summarization: "}, {"VP_ALT_SETTINGS", "Configure Report Display Settings"}, {"VP_ALT_PRINT_REPORT", "Print Report"}, {"VP_ALT_PREVIOUS_DAY", "Show Report For Previous Day"}, {"VP_ALT_NEXT_DAY", "Show Report For Next Day"}, {"VP_ALT_PREVIOUS_WEEK", "Show Report For Previous 7 Days"}, {"VP_ALT_NEXT_WEEK", "Show Report For Next 7 Days"}, {"MONITOR_BNWDTH_TITLE", "SonicWall Analyzer - Bandwidth Monitor"}, {"MONITOR_BNWDTH_SECTIONTITLE", "Bandwidth Monitor"}, {"MONITOR_SVC_TITLE", "SonicWall Analyzer - Services Monitor"}, {"MONITOR_SVC_SECTIONTITLE", "Services Monitor"}, {"USERREPORT_SETTINGS_SITEFILTER", "Web Sites Filter"}, {"USERREPORT_SETTINGS_USERFILTER", "Web Users Filter"}, {"USERREPORT_SETTINGS_NOENTRIES", "No entries found to delete."}, {"USERREPORT_SETTINGS_NOSELECTION", "No entries selected for deletion."}, {"USERREPORT_SETTINGS_ALLWARNING_1", "Selecting the All/2000 Option could delay the loading of the reports."}, {"USERREPORT_SETTINGS_ALLWARNING_2", "Are you sure you want to select this option?"}, {"USERREPORT_SETTINGS_ENDLTSTARTALERT", "End Hour must be greater than the Start Hour."}, {"USERREPORT_SETTINGS_SECTITLE1", "Default Display Type"}, {"USERREPORT_SETTINGS_CHARTANDTABLE", "Chart and Table"}, {"USERREPORT_SETTINGS_TABLEONLY", "Table Only"}, {"USERREPORT_SETTINGS_SECTITLE2", "Default Chart Type"}, {"USERREPORT_SETTINGS_SUMMARYOTCHARTS", "Summary/Over Time Charts:"}, {"USERREPORT_SETTINGS_USRCHARTS", "User Based Charts:"}, {"USERREPORT_SETTINGS_SECTITLE3", "Number Of Items"}, {"USERREPORT_SETTINGS_NUMTOPSITE", "Number Of Top Sites:"}, {"USERREPORT_SETTINGS_NUMTOPUSRS", "Number Of Top Users:"}, {"USERREPORT_SETTINGS_NUMOFBY", "Number Of Sites By User/Users By Site:"}, {"USERREPORT_SETTINGS_FORNON", "(Default: &nbsp;&nbsp;For Non Sites/Users)"}, {"USERREPORT_SETTINGS_NUMOFITEMS", "Number Of Items:"}, {"USERREPORT_SETTINGS_NUMOFENTRIESPERITEM", "Number Of Entries Per Item:"}, {"USERREPORT_SETTINGS_SECTITLE4", "Inclusion Filter Parameters"}, {"USERREPORT_SETTINGS_SITELIST", "Site List:"}, {"USERREPORT_SETTINGS_USRLIST", "User List:"}, {"USERREPORT_SETTINGS_COMMASEP", "(comma separated)"}, {"USERREPORT_SETTINGS_HOURS", "Hours:"}, {"USERREPORT_SETTINGS_START", "Start"}, {"USERREPORT_SETTINGS_END", "End"}, {"USERREPORT_SETTINGS_INCLUSION_NOTE", "(Note: Site, User List and Hours settings are applicable only for the By Site and By Hour <br> reports respectively). Source and Destination Interface settings are for Bandwidth<br>Usage reports only."}, {"USERREPORT_SETTINGS_INCLUSION_NOTE_FOR_GEN2", "(Note: Site and User List settings are applicable only for the By Site and By User <br> reports respectively). Source and Destination Interface settings are for Bandwidth<br>Usage reports only."}, {"USERREPORT_SETTINGS_SECTITLE5", "Web Site Exclusion Filter"}, {"USERREPORT_SETTINGS_NOTE", "Web Usage Reports will not contain references to the web sites specified below"}, {"USERREPORT_SETTINGS_SELECTALL", "Select All"}, {"USERREPORT_SETTINGS_COLTITLE", "Web Sites Filter"}, {"USERREPORT_SETTINGS_SECTITLE6", "Web User Exclusion Filter"}, {"USERREPORT_SETTINGS_WEBUSER_NOTE", "Web Usage Reports will not contain references to the web users specified below"}, {"USERREPORT_SETTINGS_WEBUSER_COLTITLE", "Web Users Filter"}, {"USERREPORT_SETTINGS_ADD", "Add"}, {"USERREPORT_SETTINGS_DEL", "Delete"}, {"USERREPORT_SETTINGS_ROWSPERSCREEN", "Rows Per Screen"}, {"USERREPORT_SETTINGS_WHOLENAMEIP", "Whole Name/IP"}, {"USERREPORT_SETTINGS_CONFIRM_MSG", "Are you sure you want to submit these settings?"}, {"USERREPORT_SETTINGS_NOTE_MSG", "Note: Selecting larger values could impact the report generation performance."}, {"USERREPORT_SETTINGS_SRCINTERFACE", "Source Interface"}, {"USERREPORT_SETTINGS_DSTINTERFACE", "Destination Interface"}, {"USERREPORT_SETTINGS_BIDIRECTIONAL", "Bi-directional"}, {"SYSLOG_FILTER_EDIT_ADMIN", "Only Super Admin can Add or Edit the filter"}, {"SYSLOG_FILTER_DELETE_ADMIN", "Only Super Admin can delete the filter"}, {"SYSLOG_FILTER_DELETE", "Are you sure you want to delete filter"}, {"SYSLOG_FILTER_NOSELECTION", "No entries selected for deletion."}, {"SYSLOG_FILTER_DELETE_MULTIPLE_1", "You are about to delete the following Filters:\\n Syslog Field Name, Filter Value\\n"}, {"SYSLOG_FILTER_DELETE_MULTIPLE_2", "\\nDo you want to continue?"}, {"SYSLOG_FILTER_TITLE", "Syslog Exclusion Filter"}, {"SYSLOG_FILTER_FIELD", "Syslog Field Name cannot be blank.\\nPlease specify a valid name."}, {"SYSLOG_FILTER_FIELD_LENGTH", "Syslog Field Name cannot exceed 50 characters.\\nPlease specify a valid name."}, {"SYSLOG_FILTER_FIELD_VALUE", "Syslog Filter Value cannot be blank.\\nPlease specify a valid Value."}, {"SYSLOG_FILTER_EXISTS", "A Filter with this Field name and Value already exists.\\nPlease specify unique values."}, {"SYSLOG_FILTER_NOT_FOUND", "No filters configured"}, {"SYSLOG_FILTER_NOTE_MSG1", "* The Syslog Exclusion Filter applies only to the syslogs uploaded to the reporting database."}, {"SYSLOG_FILTER_NOTE_MSG1_PART", "  All syslogs continue to be stored in the file system without any filtering."}, {"SYSLOG_FILTER_NOTE_MSG2", "* Exclusion Filter Settings will be picked up by the Summarizer every:"}, {"SYSLOG_FILTER_NOTE_MSG3", "* To add/modify a Syslog Exclusion Filter at unit level, please navigate to Firewall/SRA > Unit Level > Reports > Filter Settings."}, {"SYSLOG_FILTER_NOTE_MSG4", "* Only Super Admin has access to edit, add and delete filter."}, {"SYSLOG_FILTER_NOTE_MSG5", "* Filter m=1391 will be disabled if Console > Reports > Summarizer > Packet Data Viewer feature is enabled."}, {"SYSLOG_FILTER_HOURS", "hour(s):"}, {"SYSLOG_FILTER_MINS", "min(s)."}, {"SYSLOG_FILTER_QUOTES", "Quotes not allowed.\\n Please try again."}, {"SYSLOG_FILTER_NAME_VALIDATION", "Syslog Field Name cannot have just the special character.\\n Please enter valid Syslog Field Name."}, {"SYSLOG_FILTER_FIELD_VALUE_VALIDATION", "Syslog Filter Value cannot have just the special character.\\n Please enter valid Syslog Filter Value."}, {"SYSLOG_FILTER_FIELD_NAME", "Syslog Field Name"}, {"SYSLOG_FILTER_FIELD_OPERATOR", "Operator"}, {"SYSLOG_FILTER_VALUE", "Syslog Filter Value"}, {"SYSLOG_FILTER_LEVEL", "Level"}, {"SYSLOG_FILTER_CONFIGURE", "Configure"}, {"SYSLOG_FILTER_COMMENT", "Comment"}, {"SYSLOG_FILTER_USERID", "GMS User"}, {"SYSLOG_APPLIANCE_TYPE", "Appliance Type"}, {"SYSLOG_FILTER_ADD", "Add"}, {"SYSLOG_FILTER_DELETE", "Delete"}, {"SYSLOG_FILTER_RESET", "Reset"}, {"SYSLOG_FILTER_EDIT", "Edit Filter"}, {"SYSLOG_FILTER_DISABLE", "Enable/Disable"}, {"SYSLOG_FILTER_DISABLE_NOSELECTION", "No entries selected."}, {"SYSLOG_FILTER_DISABLE_MULTIPLE_1", "You are about to enable/disable the following Filters:\\n Syslog Field Name, Filter Value\\n"}, {"SYSLOG_FILTER_DISABLE_MULTIPLE_2", "\\nDo you want to continue?"}, {"SYSLOG_FILTER_DEFAULT_SELECTION", "Default filters cannot be deleted."}, {"SYSLOG_FILTER_CONNECTION_OPENED", "Connection Opened. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_INTERFACE_STATISTICS_REPORT", "Interface Statistics Report. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_UDP_PACKET_DROPPED", "UDP packet dropped. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_DNS_PACKET_ALLOWED", "DNS packet allowed. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_DELETING_FROM_MULTICAST_POLICY", "Deleting from Multicast policy list, VPN SPI. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_UDP_DNS", "UDP DNS traffic. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_UDP_TRAFFIC", "UDP traffic. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_NAT_MAPPING", "NAT Mapping. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_ICMP_PACKET", "ICMP packet allowed. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_MESSAGE_PRIORITY", "Message priority, 7=debug. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_TCP_CONNECTION_DROPPED", "TCP connection dropped. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_WEB_MANAGEMENT_REQUEST", "Web management request allowed. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_ICMP_PACKET_DROPPED_POLICY", "ICMP packet dropped due to policy. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_INITIATOR", "IKE Initiator: Start Quick Mode. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_INVALID_ID_INFO", "Received notify: INVALID_ID_INFO. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_WEB_ACCESS_REQUEST_DROPPED", "Web access request dropped. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_RESPONDER_RCVD_QUICK_MODE_REQUEST", "IKE Responder: Received Quick Mode Request. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_RESPONSER_IPSEC_PROPOSAL_NO_MATCH", "IKE Responder: IPsec proposal does not match. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_RESPONSER_PEER_LOCAL_NETWORK", "IKE Responder: Peer local network does not match VPN policys Destination Network. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_INITIATOR_REMOTE_PARTY_TIMEOUT", "IKE Initiator: Remote party timeout - Retransmitting IKE request. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_RCVD_NOTIFY_NO_PROPOSAL_CHOSEN", "Received notify. NO_PROPOSAL_CHOSEN. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_IKE_RESPONDER_IKE_PROPOSAL_NO_MATCH", "IKE Responder: IKE proposal does not match. Source for the system filters is taken from Log Event Reference Guides"}, {"SYSLOG_FILTER_PACKET_DATA", "Packet Data. Source for the system filters is taken from Log Event Reference Guides"}, {"SCHED_CONFIGURE_TITLE", "SonicWall Analyzer - Set Email/Archive Time"}, {"SCHED_CONFIGURE_NEXTSCHEDTIME", "Next Schedule Time"}, {"SCHED_CONFIGURE_NEXTSCHEDTIME2_1", "Are you sure you want to change the next email/archive time?"}, {"SCHED_CONFIGURE_NEXTSCHEDTIME2_2", "The scheduled interval would also change accordingly based on this time."}, {"SCHED_CONFIGURE_LASTSENTTIME", "Weekly Report Last Sent"}, {"SCHED_CONFIGURE_LASTSENTTIME2", "Are you sure you want to change the weekly report last sent timestamp?"}, {"SCHED_CONFIGURE_LASTMONTHLYSENTTIME", "Monthly Report Last Sent"}, {"SCHED_CONFIGURE_LASTMONTHLYSENTTIME2", "Are you sure you want to change the monthly report last sent timestamp?"}, {"SCHED_CONFIGURE_UPDCONFIRM_1", "Are you sure you want to change the web server configuration?"}, {"SCHED_CONFIGURE_UPDCONFIRM_2", "Changing these parameters could affect the Scheduled Reports Email/Archive functionality."}, {"SCHED_CONFIGURE_WEEKLYUPDCONFIRM", "Are you sure you want to change the day of the week the weekly reports are emailed/archived?"}, {"SCHED_CONFIGURE_MONTHLYUPDCONFIRM", "Are you sure you want to change the day of the month the monthly reports are emailed/archived?"}, {"SCHED_CONFIGURE_LOGOUPDCONFIRM", "Are you sure you want to replace the current Logo File ?"}, {"SCHED_CONFIGURE_LOGO_DELETE_CONFIRM", "Are you sure you want to delete the Logo ?"}, {"SCHED_CONFIGURE_TITLE2", "Email/Archive Time Settings "}, {"SCHED_CONFIGURE_TITLE3", "Next Scheduled Email/Archive Time (mm/dd/yyyy hh:min)"}, {"SCHED_CONFIGURE_TITLE4", "Send Weekly Reports Every"}, {"SCHED_CONFIGURE_TITLE5", "Send Monthly Reports Every"}, {"SCHED_CONFIGURE_WEBSERVERTITLE", "Email/Archive Configuration - Web Server Details "}, {"SCHED_CONFIGURE_WEBSERVERNOTE", "Following is the web server configuration information used by the Email/Archive component."}, {"SCHED_CONFIGURE_NOTE", "Note:"}, {"SCHED_CONFIGURE_NOTE1", "* Weekly reports are generated for Monday-Sunday of the week, and Monthly Reports are generated for the 1-30/31 of the month."}, {"SCHED_CONFIGURE_NOTE2", "* Next Attempated Email/Archive Time: "}, {"SCHED_CONFIGURE_OPTIMIZATION_MSG_1", "Optimization run from"}, {"SCHED_CONFIGURE_OPTIMIZATION_MSG_2", " to "}, {"SCHED_CONFIGURE_OPTIMIZATION_MSG_3", " set Next Scheduled Email/Archive Time accordingly"}, {"SCHED_CONFIGURE_UPDNOTE", "Note: These fields cannot be modified and are updated automatically according to the web server settings."}, {"SCHED_CONFIGURE_SERVERADDRESS", "Web Server Address: "}, {"SCHED_CONFIGURE_SERVERPROTOCOL", "Web Server Protocol: "}, {"SCHED_CONFIGURE_SERVERPORT", "Web Server Port:"}, {"SCHED_CONFIGURE_XML_DAYSTOSTORE", "Days to store XML reports:"}, {"SCHED_CONFIGURE_XMLREPORTTITLE", "Days to Store Archived/Published reports"}, {"SCHED_CONFIGURE_LOGOSETTINGSTITLE", "Logo Settings "}, {"SCHED_CONFIGURE_CURRENT_LOGO", "Logo currently in use"}, {"SCHED_CONFIGURE_SORTBYSETTINGSTITLE", "Sort By Settings In PDF Reports "}, {"SCHED_CONFIGURE_STORAGE", "Storage Configuration"}, {"SCHED_CONFIGURE_USRDAYS_TO_STORE", "USR - Days to Store"}, {"SCHED_USERINF_TITLE", "SonicWall Analyzer Reports - Set Parameters"}, {"SCHED_USERINF_NAME", "Name "}, {"SCHED_USERINF_EMAIL", "Email"}, {"SCHED_USERINF_DESCRIPTION", "Description "}, {"SCHED_USERINF_TAGALERT", "field cannot contain HTML tag."}, {"SCHED_USERINF_CATEGORYALERT", "At least one of the categories has to be chosen - EMail/Archive"}, {"SCHED_USERINF_SMTPALERT", "Please provide the SMTP server IP Address"}, {"SCHED_USERINF_PASSWDALERT_1", "Password protection can be enabled only for zip files."}, {"SCHED_USERINF_PASSWDALERT_2", "Please enable the zip option."}, {"SCHED_USERINF_PASSWDALERT2", "Please provide a valid password for password protection."}, {"SCHED_USERINF_ARCHALERT_1", "Archiving is not enabled, but an archive folder is specified."}, {"SCHED_USERINF_ARCHALERT_2", "Do you want to enable archiving?"}, {"SCHED_USERINF_INLINEALERT_1", "Inline Option for email has been selected."}, {"SCHED_USERINF_INLINEALERT_2", "This option is available only for single reports."}, {"SCHED_USERINF_INLINEALERT_3", "Do you want to include all reports in a single file?"}, {"SCHED_USERINF_INLINEMAXALERT_1", "Note: Only a maximum of 8 reports are allowed for the Inline option."}, {"SCHED_USERINF_INLINEMAXALERT_2", "Please remove additional reports from the selection."}, {"SCHED_USERINF_RPTSELECTIONALERT", "Please select at least one report to be emailed or archived"}, {"SCHED_USERINF_EMAILADDRALERT", "Source Email Address"}, {"SCHED_USERINF_DESTEMAILADDRALERT", "Destination Email Address"}, {"SCHED_USERINF_REPORTNAMEALERT", "The report name cannot be empty"}, {"SCHED_USERINF_INLINEALERT1", "Inline Option is disabled, do you want to disable the Single Report Option?"}, {"SCHED_USERINF_CONFTITLE", "Scheduled Report Configuration"}, {"SCHED_USERINF_SINGLETITLE", "Single Day EMail Report Configuration"}, {"SCHED_USERINF_SMTPSERVER", "SMTP Server: "}, {"SCHED_USERINF_SUBJLINE", "Email Subject: "}, {"SCHED_USERINF_DESTEMAILADDR", "Destination Email Addresses (semicolon separated):"}, {"SCHED_USERINF_SRCEMAILADDR", "Source Email Address: "}, {"SCHED_USERINF_EMAILODY", "Email Body: "}, {"SCHED_USERINF_INLINE", "Send Reports Inline"}, {"SCHED_USERINF_DEFLTNOTE", "(By default, reports are sent as attachments. Only single reports can be sent inline.)"}, {"SCHED_USERINF_ARCHIVE", "Archive"}, {"SCHED_USERINF_DIR", "Save Directory: "}, {"SCHED_USERINF_DIRINFO", "(If path is invalid, default path is [gmsvp directory]/Viewpoint/reports.)"}, {"SCHED_USERINF_XMLFMT", "Generate Reports in XML Format"}, {"SCHED_USERINF_CREATESINGLERPT", "Include all data in a single report"}, {"SCHED_USERINF_ZIPFMT", "Zip Reports into a single file"}, {"SCHED_USERINF_ZIPPASSWD", "Password Protect the Zip File"}, {"SCHED_USERINF_PASSWD", "Password: "}, {"SCHED_USERINF_TEMPLATEDIR", "Template Folder Name: <br>(For custom reports)"}, {"SCHED_USERINF_TEMPLATEDIRNOTE", "(Requires only the folder name and not the complete path.)"}, {"SCHED_USERINF_FILTER", "User/Server Filter"}, {"SCHED_USERINF_FILTER_NOTE", "(Filter to be applied to user-based reports, a comma separated list of hosts.)"}, {"SCHED_USERINF_FILTER_NOTE2", "(User-based reports for this schedule will contain only the users specified in this filter list.)"}, {"SCHED_USERINF_FILTER_OPTIONS", "Configure Filters/Options"}, {"SCHED_USERINF_RPTLIST", "Report List"}, {"SCHED_USERINF_SELECTALL", "Select All"}, {"SCHED_USERINF_PROFILEALERT", "Please provide a name for the new profile"}, {"SCHED_USERINF_COVER_TITLE_ALERT", "Please provide the title for the cover page"}, {"SCHED_USERINF_MULTITITLE", "Multiple Day EMail Report Configuration"}, {"SCHED_USERINF_DAILY", "Daily"}, {"SCHED_USERINF_WEEKLY", "Weekly"}, {"SCHED_USERINF_MONTHLY", "Monthly"}, {"SCHED_USERINF_TYPE", "Report Type"}, {"SCHED_USERINF_FORMAT", "Report Format"}, {"SCHED_SUMMARY_MSGSPERSCRN", "Messages Per Screen"}, {"SCHED_SUMMARY_SELECTALERT", "Please select at least one scheduled report to be emailed."}, {"SCHED_SUMMARY_DELALERT", "Are you sure you want to delete the selected schedule(s) ?"}, {"SCHED_SUMMARY_DISABLEALERT", "Are you sure you want to disable the selected schedule(s) ?"}, {"SCHED_SUMMARY_ENABLEALERT", "Are you sure you want to enable the selected schedule(s) ?"}, {"SCHED_SUMMARY_DELSELECTALERT", "Please select at least one scheduled report to be deleted."}, {"SCHED_SUMMARY_DISABLESELECTALERT", "Please select at least one scheduled report to be disabled."}, {"SCHED_SUMMARY_ENABLESELECTALERT", "Please select at least one scheduled report to be enabled."}, {"SCHED_SUMMARY_SECTITLE1", "Add Additional Scheduled Reports"}, {"SCHED_SUMMARY_ADD", "Add Scheduled Report"}, {"SCHED_SUMMARY_ADDDAILY", "Add Daily Scheduled Report"}, {"SCHED_SUMMARY_ADDMULTIDAY", "Add Multi-Day Scheduled Report"}, {"SCHED_SUMMARY_SECTITLE2", "Summary of Scheduled Reports"}, {"SCHED_SUMMARY_SELECTALL", "Select All Scheduled Reports"}, {"SCHED_SUMMARY_DELALL", "Delete Selected Scheduled Reports"}, {"SCHED_SUMMARY_DISABLESELECTEDRPTS", "Disable Selected Scheduled Reports"}, {"SCHED_SUMMARY_ENABLESELECTEDRPTS", "Enable Selected Scheduled Reports"}, {"SCHED_SUMMARY_ENABLED", "Enabled"}, {"SCHED_SUMMARY_RPTNAME", "Report Name"}, {"SCHED_SUMMARY_RPTTYPE", "Report Type"}, {"SCHED_SUMMARY_EMAIL", "Email"}, {"SCHED_SUMMARY_ARCHIVE", "Archive"}, {"SCHED_SUMMARY_ZIP", "Zip"}, {"SCHED_SUMMARY_SINGLEFILE", "Single file"}, {"SCHED_SUMMARY_DOCFMT", "Document Format"}, {"SCHED_SUMMARY_TOEMAIL", "To Email Address"}, {"SCHED_SUMMARY_SMTP", "SMTP Server"}, {"SCHED_SUMMARY_FROMEMAIL", "From Email Address"}, {"SCHED_SUMMARY_SUBJ", "Subject"}, {"SCHED_SUMMARY_MSG", "Message"}, {"SCHED_SUMMARY_ARCHDIR", "Archive Folder"}, {"SCHED_SUMMARY_RPTS", "Reports"}, {"SCHED_SUMMARY_UNRECOGNIZEDSCR", "Unrecognized Report"}, {"SCHED_REPORT_LIST_SELECTALL", "Select All"}, {"CONFIGSUMMARIZER_SETTINGS_TITLE", "Report Types to be Summarized"}, {"CONFIGSUMMARIZER_SETTINGS_SELWARNING_1", "No reports are selected for summarization."}, {"CONFIGSUMMARIZER_SETTINGS_SELWARNING_2", "Analyzer summarizer will not run for all units under this node."}, {"CONFIGSUMMARIZER_SETTINGS_SELWARNING_3", "Are you sure you want to continue?"}, {"CONFIGSUMMARIZER_SETTINGS_NOTE", "Note: "}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_1", "Summarizer settings for appliance(s) "}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_2", " differ between unit and group level. The settings at the unit level will override the settings at the Group level."}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_3", "Sync appliance(s) to group level settings"}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_4", "Sync group to appliance level settings"}, {"CONFIGSUMMARIZER_SETTINGS_NOTE_5", " more appliances"}, {"SUMMARIZER_SETTINGS_TITLE", "SonicWall Analyzer - Scheduled Reports - Set Data Storage Parameters"}, {"SUMMARIZER_SETTINGS_INTERVALALERT", "Are you sure you want to change the time interval?"}, {"SUMMARIZER_SETTINGS_INTERVALERROR", "Summarizer interval cannot be 0 hrs 0 mins."}, {"SUMMARIZER_SETTINGS_DELETEALERT", "Are you sure you want to change the syslog deletion time?"}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_1", "The amount of days to retain summarized report data will be changed."}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_2", "This operation would retain summary data corresponding to the last "}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_3", " days only."}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_4", "Summarized report data older than "}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_5", " days will be deleted if the value you entered is"}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_6", "lower than before."}, {"SUMMARIZER_SETTINGS_RETENTIONALERT_7", "Are you sure you want to change this setting?"}, {"SUMMARIZER_SETTINGS_POSITIVEALERT", "Only positive integers and 'All' string accepted,please re-enter value"}, {"SUMMARIZER_SETTINGS_STORAGEEALERT_1", "This operation would retain all the summarized report data in the database."}, {"SUMMARIZER_SETTINGS_STORAGEEALERT_2", "The hard disk on the database server could get filled up eventually."}, {"SUMMARIZER_SETTINGS_VPSTORAGEEALERT_1", "This operation would retain all the summarized report data in the database."}, {"SUMMARIZER_SETTINGS_VPSTORAGEEALERT_2", "The MSDE database ( has a limitation of 2GB ) used by Analyzer"}, {"SUMMARIZER_SETTINGS_VPSTORAGEEALERT_3", "could get filled up eventually."}, {"SUMMARIZER_SETTINGS_UPLOADNOWALERT", "Are you sure you want to upload the raw syslog files now?"}, {"SUMMARIZER_SETTINGS_UPLOADNOWTRAILALERT", "Note: This is a one time file upload and will not affect the scheduled uploads."}, {"SUMMARIZER_SETTINGS_NOENDDTALERT_1", "Are you sure you want to summarize the data from "}, {"SUMMARIZER_SETTINGS_NOENDDTALERT_2", " till Now?"}, {"SUMMARIZER_SETTINGS_NOENDDTALERT_3", "If not, please specify an End date for the summarization date range."}, {"SUMMARIZER_SETTINGS_CHANGEALERT", "Are you sure you want to change the report settings?"}, {"SUMMARIZER_SETTINGS_CONSOLIDATIONALERT", "NOTE: Changes to Web Event Consolidation only apply to new reporting \\n data and will have no affect on existing report data."}, {"SUMMARIZER_SETTINGS_ISENABLEDALERT_1", "Are you sure you want to "}, {"SUMMARIZER_SETTINGS_ISENABLEDALERT_2", " Distributed Summarizer?"}, {"SUMMARIZER_SETTINGS_ENABLE_DISTSUMMARIZER", "Are you sure you want to enable Distributed Summarizer?"}, {"SUMMARIZER_SETTINGS_DISABLE_DISTSUMMARIZER", "Are you sure you want to disable Distributed Summarizer?"}, {"SUMMARIZER_SETTINGS_NOCHANGE", "No changes were made"}, {"SUMMARIZER_SETTINGS_NEXTSUMZTIME", "Next Scheduled Summary Time"}, {"SUMMARIZER_SETTINGS_NEXTSUMMRYALERT_1", "Are you sure you want to change the next summary time?"}, {"SUMMARIZER_SETTINGS_NEXTSUMMRYALERT_2", "The scheduled interval would also change accordingly "}, {"SUMMARIZER_SETTINGS_NEXTSUMMRYALERT_3", "based on this time."}, {"SUMMARIZER_SETTINGS_GEN1ONLYALERT", "Last Summarized Time can only be updated for Generation 1 Summarizer"}, {"SUMMARIZER_SETTINGS_LASTSUMMALERT", "Last Summary Time"}, {"SUMMARIZER_SETTINGS_LASTSUMMALERT2", "Are you sure you want to change the last summary available timestamp value?"}, {"SUMMARIZER_SETTINGS_DELALERT", "Delete Summary Date"}, {"SUMMARIZER_SETTINGS_DELALERT2_1", "Are you sure you want to delete summary data for "}, {"SUMMARIZER_SETTINGS_DELALERT2_2", "?"}, {"SUMMARIZER_SETTINGS_COSTALERT", "Cost Per MByte Bandwidth Use"}, {"SUMMARIZER_SETTINGS_SECTITLE1", "Summarizer Settings"}, {"SUMMARIZER_SETTINGS_DISTSUMMRZR", "Enable Distributed Summarizer"}, {"SUMMARIZER_SETTINGS_TABLE_EMPTY", "Summarizer table is Empty"}, {"SUMMARIZER_SETTINGS_SUMMARIZER_AT", "Summarizer at"}, {"SUMMARIZER_SETTINGS_UPLOAD_NOW", "Upload Raw Syslog Data Immediately:"}, {"SUMMARIZER_SETTINGS_UPLOAD_NOW_BTN", "Upload Files Now"}, {"SUMMARIZER_SETTINGS_SECTITLE3", "Reports Summarization Data for Top Usage"}, {"SUMMARIZER_SETTINGS_NUMOFTOPSITES", "Number Of Top Sites :"}, {"SUMMARIZER_SETTINGS_NUMOFTOPUSERS", "Number Of Top Users :"}, {"SUMMARIZER_SETTINGS_NUMOFTOPSITESPERUSERS", "Number Of Top Sites Per User :"}, {"SUMMARIZER_SETTINGS_ENABLEHOMEPORT", "Enable HomePort Syslog Reporting"}, {"SUMMARIZER_SETTINGS_SECTITLE4", "Summarizer Settings for Data Usage Reports"}, {"SUMMARIZER_SETTINGS_CURRTYPE", "Type Of Currency: "}, {"SUMMARIZER_SETTINGS_COSTPERMB", "Cost Per Mega Byte Data Use: "}, {"SUMMARIZER_SETTINGS_SECTITLE5", "Data Deletion And Storage Configuration"}, {"SUMMARIZER_SETTINGS_DAYSTOSTORE", "Days To Store Summarized Data:"}, {"SUMMARIZER_SETTINGS_DELETEAT", "Delete Data Every: "}, {"SUMMARIZER_SETTINGS_DELETEFOR", "Delete Summarized Data For (mm/dd/yyyy):"}, {"SUMMARIZER_SETTINGS_DELETENOTE", "Changes to \"Data Deletion Schedule\" and \"Data Storage Configuration\" will take effect after the current run."}, {"SUMMARIZER_SETTINGS_DELETENOTE1", "Report data older than Current month + Number of month to keep (Keep Reporting Data for:) will be deleted."}, {"SUMMARIZER_SETTINGS_DELETENOTE2", "It is recommended that the Data Deletion Schedule be configured to run after the data has been backed up."}, {"SUMMARIZER_SETTINGS_DELETENOTE2PART2", "Navigate to Appliance > System > Backup/Restore to review current backup schedule."}, {"SUMMARIZER_SETTINGS_SECTITLE6", "Summarized Reports Data Available"}, {"SUMMARIZER_SETTINGS_SEC5NOTE", "Following is the time the Summarizer completed its last run. You can change the settings appropriately to re-summarize data for any required days."}, {"SUMMARIZER_SETTINGS_DATAASOF", "Summarized Reports Available As Of <br> (mm/dd/yyyy hh:min)  :"}, {"SUMMARIZER_SETTINGS_FORDTRANGE", "Summarize for a date range <br> (mm/dd/yyyy) :"}, {"SUMMARIZER_SETTINGS_FULLURL", "Enable Full URL Reporting"}, {"SUMMARIZER_SETTINGS_FULLURL_NOTE", "Note: Enabling the Full URL Reporting feature could affect the performance of the system."}, {"SUMMARIZER_SETTINGS_WEB_EVENT_CONSOLIDATION", "Enable Web Event Consolidation"}, {"SUMMARIZER_SETTINGS_WEB_EVENT_CONSOLIDATION_FOOTER", "Web Event Consolidation is enabled."}, {"SUMMARIZER_SETTINGS_ENABLE_CATEGORY_RECONCILE", "Resolve \"Not Rated\" categories using message comparison"}, {"SUMMARIZER_SETTINGS_SECTITLE6", "Host Name Resolution Settings"}, {"SUMMARIZER_SETTINGS_RDNS_ENABLE", " Resolve Destination Host Names"}, {"SUMMARIZER_SETTINGS_RDNS_INTERVAL", " Periodic Crawling Interval"}, {"SUMMARIZER_SETTINGS_RDNS_PRIVATEIP", "Resolve Source Host Names"}, {"SUMMARIZER_SETTINGS_SUMMZ_REPS", " Report Summarization?"}, {"SUMMARIZER_SETTINGS_ENABLE_SUMMZREPS", "Are you sure you want to enable Report Summarization?"}, {"SUMMARIZER_SETTINGS_DISABLE_SUMMZREPS", "Are you sure you want to disable Report Summarization?"}, {"SUMMARIZER_SETTINGS_SUMMZ_REPS_TITLE", "Enable Report Summarization"}, {"SUMMARIZER_SETTINGS_HNR_NOTE", "Enabling the Host Name Resolution feature will affect the overall performance of the system and with a more direct impact on the Summarizer module. Setting the Periodic Crawling interval to less than the Summarizer interval will affect the summarizer performance."}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE", "Months to Store Report Data for: "}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_2", " is: "}, {"SUMMARIZER_SETTINGS_MONTHALERT", "Are you sure you want to change the summarizer settings?"}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_RAW", "Months to Store Raw Syslog Data for: "}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_1", "Keep Raw Syslog Data Files for: "}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_2", "Keep Reporting Data for: "}, {"SUMMARIZER_SETTINGS_SECTITLE7", "Data Deletion Schedule"}, {"SUMMARIZER_SETTINGS_SECTITLE8", "Data Storage Configuration"}, {"SUMMARIZER_SETTINGS_UNIT", "months"}, {"SUMMARIZER_DATA_CONFIGURATION_SETTINGS_MSG", "Settings for Data Storage Configuration Updated Successfully."}, {"SUMMARIZER_UPGRADED_FROM", "Delete GMS 6.0 Reporting Data Immediately:"}, {"SUMMARIZER_UPGRADED_FROMALERT", "Are you sure you want to delete GMS 6.0 Reporting data?"}, {"SUMMARIZER_UPGRADED_FROMMSG", "GMS 6.0 Reporting Data deleted successfully"}, {"SUMMARIZER_UPGRADED_FROM_ERRMSG", "Failed to delete GMS 6.0 Reporting Data"}, {"SUMMARIZER_SETTINGS_MONTHS_TO_STORE_3", "Keep Application Table Data for: "}, {"SUMMARIZER_SETTINGS_APP_TABLE_MONTHALERT", "Are you sure you want to change the application table settings?"}, {"SUMMARIZER_SETTINGS_SECTITLE9", "Private IP Hostname Resolution Configuration"}, {"SUMMARIZER_SETTINGS_LOOKUP_ENABLE", "Enable Reverse Hostname Resolution"}, {"SUMMARIZER_SETTINGS_LOOKUP_THREAD_COUNT", "Lookup thread count"}, {"SUMMARIZER_SETTINGS_LOOKUP_THREAD_COUNT_HELP", "Number of threads that will be processing the resolution."}, {"SUMMARIZER_SETTINGS_TIME_DIFF", "Scan every"}, {"SUMMARIZER_SETTINGS_TIME_DIFF_HELP", "Time intervals at which the lookup is triggered."}, {"SUMMARIZER_SETTINGS_CACHE_TIMEOUT", "Refresh Resolved Hostname Cache every"}, {"SUMMARIZER_SETTINGS_CACHE_TIMEOUT_HELP", "Time duration for which the hostname is cached to a particular IP."}, {"SUMMARIZER_SETTINGS_HOSTNAME_ALERT", "Enabling lookup increases time taken to process syslogs, look in note for details.Are you sure you want to change lookup setting?"}, {"SUMMARIZER_SETTINGS_HOSTNAME_ALERT_DISABLE", "Are you sure you want to Disable lookup setting?"}, {"SUMMARIZER_SETTINGS_HOURS", "Hours"}, {"SUMMARIZER_SETTINGS_MINUTES", "minutes"}, {"SUMMARIZER_SETTINGS_LOOKUP_NOTE_POWER", "Enabling Private IP hostname lookup will increase the time taken to process syslogs. All syslogs which need resolution will be processed separately in parallel to normal syslog processing. This might slow down summarizer and increase memory and  consume more CPU cycle. Also the memory and CPU will also be impacted further by changing the default configurations of Lookup thread count, Scan every, Refresh Resolved Hostname Cache every."}, {"SUMMARIZER_SETTINGS_LOOKUP_NOTE_DELAY", "Any changes to the Hostname Resolution Configuration will take effect during the next summarizer run."}, {"SUMMARIZER_HOSTNAME_CONFIGURATION_SETTINGS_MSG", "Settings for Hostname Resolution Configuration Updated Successfully."}, {"SYSLOG_COLLECTOR_UPDATE_SUCCESSFUL", "Settings for minimum disk space updated successfully. "}, {"SYSLOG_COLLECTOR_MINIMUM_DISK_SPACE_LABEL", "Minimum Disk Space Configuration"}, {"SYSLOG_COLLECTOR_NOTE_PART_1", "Syslog Collector will have to be restarted for the changes to "}, {"SYSLOG_COLLECTOR_NOTE_PART_2", " to take effect."}, {"SYSLOG_COLLECTOR_NOTE_PART_3", " If the free disk space falls below this value, Syslog Collector will stop listening for syslogs."}, {"SYSLOG_COLLECTOR_CONFIRM_CHANGE", "Are you sure want to update the disk threshold values?"}, {"SYSLOG_COLLECTOR_CONFIRM_CHANGE_DEFAULT", "Default selection will check for the minimum 5GB Avaliable disk Space for Syslogs to process. Are you sure want to update the disk threshold values?"}, {"SYSLOG_COLLECTOR_MINIMUM_PERCENTAGE_DESCRIPTION", "Minimum % of disk space that should be free for Syslog Collector to consume syslogs:"}, {"SYSLOG_COLLECTOR_MINIMUM_DISKSPACE_NOTE", "Setting the Minimum Disk Space percentage to 'Default' will set it to 5GB minimum disk space required."}, {"SYSLOG_PER_FILE_NOTE", "Changes to \"Syslog Data File Size Configuration\" reflects number of syslog messages per \".src\" file in syslogs directory."}, {"SUMMARIZER_SETTINGS_SECTITLE10", "Syslogs sent by Appliances that are not under Reporting and Management"}, {"SUMMARIZER_SETTINGS_ENABLE_NMM", "Store Syslogs"}, {"SUMMARIZER_SETTINGS_ENABLE_NMM_ALERT", "Are you sure you want to enable Syslog collection from Appliances that are not under Reporting and Management?"}, {"SUMMARIZER_NMM_CONFIGURATION_SETTINGS_MSG", "Settings for Syslog collection Updated Successfully."}, {"SUMMARIZER_SYSLOGPERFILE_HEADER", "Syslog Data File Size Configuration"}, {"SUMMARIZER_SYSLOGPERFILE_LABEL", "Number of syslog messages per file"}, {"SUMMARIZER_SYSLOGPERFILE_ALERT", "Are you sure you want to set syslog messages per file value to "}, {"SUMMARIZER_SYSLOGPERFILE_BLANK_ALERT", "Number of syslog messages per file value cannot be blank"}, {"SUMMARIZER_SYSLOGPERFILE_INVALID_ALERT", "Invalid value for Number of syslog messages. Please enter a Integer value between $ and #."}, {"GEN_SETTINGS_TITLE1", "Report Settings/Options"}, {"GEN_SETTINGS_SORT", "Enable Sort Option on Report Tables"}, {"GEN_SETTINGS_SORT_MSG", "Report Sort Option changed successfully."}, {"GEN_SETTINGS_HOST_RESOLUTION_MSG", "Enable Host Name Resolution on Reports"}, {"GEN_SETTINGS_UPLOADRAWSYSLOG", "Enable Raw Syslog Data Upload"}, {"GEN_SETTINGS_UPLOADRAWSYSLOG_SUCCESS", "Raw Syslog Data Upload configuration changed successfully."}, {"GEN_SETTINGS_UPLOADRAWSYSLOG_FAILED", "Error: Could not update Raw Syslog Data Upload configuration."}, {"GEN_SETTINGS_LOGVIEWER_TITLE", "Log Viewer Settings"}, {"GEN_SETTINGS_NUM_DEVICES", "Maximum number of appliances on which Log Viewer can be enabled: "}, {"GEN_SETTINGS_NUM_DEVICES_MSG", "Log Viewer appliance limit changed successfully."}, {"REPORTS_TASKS_TITLE1", "Summary"}, {"REPORTS_TASKS_TOTALSCHED", "Schedules in the system:"}, {"REPORTS_TASKS_NEXTSCHEDTIME", "Next Scheduled Email/Archive Time:"}, {"REPORTS_TASKS_LASTWKLYSCHED", "Weekly Schedules Last Attempted:"}, {"REPORTS_TASKS_NEXTWKLYSCHED", "Next Weekly Reports Time:"}, {"REPORTS_TASKS_LASTMONTHLYSCHED", "Monthly Schedules Last Attempted:"}, {"REPORTS_TASKS_NEXTMONTHLYSCHED", "Next Monthly Reports Time:"}, {"REPORTS_TASKS_TITLE2", "Search Criteria"}, {"REPORTS_TASKS_SCHEDTYPE", "Schedule Type:"}, {"REPORTS_TASKS_DAILYSCHEDS", "Daily Schedules"}, {"REPORTS_TASKS_WEEKLYSCHEDS", "Weekly Schedules"}, {"REPORTS_TASKS_MONTHLYSCHEDS", "Monthly Schedules"}, {"REPORTS_TASKS_ALL", "All"}, {"REPORTS_TASKS_STATUS", "Status:"}, {"REPORTS_TASKS_FAIL", "Fail"}, {"REPORTS_TASKS_INPROGRESS", "In Progress"}, {"REPORTS_TASKS_SUCCESS", "Success"}, {"REPORTS_TASKS_INQ", "In Queue"}, {"REPORTS_TASKS_PARTFAIL", "Partial Failure"}, {"REPORTS_TASKS_NODE", "Appliance Node:"}, {"REPORTS_TASKS_OWNER", "Owner:"}, {"REPORTS_TASKS_NAMECONTAINS", "Name contains:"}, {"REPORTS_TASKS_ERRORCONTAINS", "Error contains:"}, {"REPORTS_TASKS_CONDITION", "Use condition:"}, {"REPORTS_TASKS_AND", "AND"}, {"REPORTS_TASKS_OR", "OR"}, {"REPORTS_TASKS_MATCHCASE", "Match case:"}, {"REPORTS_TASKS_STARTSEARCH", "Start Search"}, {"REPORTS_TASKS_CLRSEARCH", "Clear Search"}, {"REPORTS_TASKS_TITLE3", "Search Results"}, {"REPORTS_TASKS_SCHEDSPERSCRN", "Show Schedules Per Screen:"}, {"REPORTS_TASKS_RANGE", "(Range: 10-100)"}, {"REPORTS_TASKS_GOTONSCHED", "Go To Schedule Number:"}, {"REPORTS_TASKS_SELECTDISPLAYEDONLY_1", "Select Only the"}, {"REPORTS_TASKS_SELECTDISPLAYEDONLY_2", "Schedules Displayed Above"}, {"REPORTS_TASKS_SELECTALL", "Select All Schedules"}, {"REPORTS_TASKS_EMAILNOW", "E-Mail/Archive the selected schedules now"}, {"REPORTS_TASKS_EMAILNOWNOTE", "(Note: This is a one time event and will not affect the Scheduled E-Mail/Archive time.)"}, {"REPORTS_TASKS_DELSELECTEDSCHEDS", "Delete the selected schedules"}, {"REPORTS_TASKS_RESENDSELECTEDSCHEDS", "Re-send the selected schedules for dates (mm/dd/yyyy):"}, {"REPORTS_TASKS_START", " Report Date:"}, {"REPORTS_TASKS_END", " End Date:"}, {"REPORTS_TASKS_START_DESC", " Report date to generate reports for.  Used as beginning date for Weekly and Monthly reports."}, {"REPORTS_TASKS_END_DESC", " Applies to Weekly and Monthly reports. If omitted, end of week or month will be assumed."}, {"REPORTS_TASKS_CALENDAR", "Calendar"}, {"REPORTS_TASKS_RESENDNOTE_1", "(Note:"}, {"REPORTS_TASKS_RESENDNOTE_2", "* This is a one time event and will not affect the Scheduled E-Mail/Archive time."}, {"REPORTS_TASKS_RESENDNOTE_3", "* Only one set of reports will be sent for the specified date/date range. End Date is optional.)"}, {"REPORTS_TASKS_COLID", "ID"}, {"REPORTS_TASKS_COLNAME", "Name"}, {"REPORTS_TASKS_COLTYPE", "Type"}, {"REPORTS_TASKS_COLNODE", "Unit/Group/Device(s)"}, {"REPORTS_TASKS_COLLASTRUN", "Last Run (Local)"}, {"REPORTS_TASKS_COLSTATUS", "Status"}, {"REPORTS_TASKS_COLLASTRUNTYPE", "Last Run Type"}, {"REPORTS_TASKS_COLLASTERROR", "Last Error"}, {"REPORTS_TASKS_COLOWNER", "Owner"}, {"REPORTS_TASKS_ALERT_NOSTDATE", "No Start Date specified. Please specify a start date."}, {"REPORTS_TASKS_ALERT_WRONGSTFORMAT", "Wrong start date format. Date has to be in the form mm/dd/yyyy."}, {"REPORTS_TASKS_ALERT_WRONGSTDATE", "Wrong start date. Please input a valid date of the form mm/dd/yyyy."}, {"REPORTS_TASKS_ALERT_WRONGENDFORMAT", "Wrong end date format. Date has to be in the form mm/dd/yyyy."}, {"REPORTS_TASKS_ALERT_WRONGENDDATE", "Wrong end date. Please input a valid date of the form mm/dd/yyyy."}, {"REPORTS_TASKS_ALERT_DATESORDER", "End date lesser than start date. Please input valid start and end dates."}, {"REPORTS_TASKS_ALERT_SETTOTAL1", "Note: This would select all the "}, {"REPORTS_TASKS_ALERT_SETTOTAL2", " pending tasks."}, {"REPORTS_TASKS_ALERT_CHECKSELNOTE", "Note: This would undo the selection of all the pending schedules selected on the other screens!"}, {"REPORTS_TASKS_ALERT_EMAIL", "You must select at least one schedule for emailing/archiving."}, {"REPORTS_TASKS_ALERT_DEL1", "Are you sure you want to delete the selected schedule(s)?"}, {"REPORTS_TASKS_ALERT_DEL2", "You must select at least one schedule for deletion."}, {"REPORTS_TASKS_ALERT_RESEND1", "Your current view of schedules includes schedules of different types (Daily, Weekly and Monthly)."}, {"REPORTS_TASKS_ALERT_RESEND2", "Are you sure you want to re-send the selected Schedule(s) with the specified date(s)?"}, {"REPORTS_TASKS_ALERT_RESEND3", "You must select at least one schedule to be sent again."}, {"REPORTS_TASKS_SCHEDULED_NUMBER", "Go to Schedule Number"}, {"REPORTS_TABLE_OF_CONTENTS", "Table Of Contents"}, {"JUMP_TO_NODE_TITLE", "Select View to Switch to"}, {"JUMP_TO_NODE_NOTE", "The schedule you have selected is for a group which is not present in the current view. Please select the view you want to switch to from the list below or click Cancel to remain on the same page."}, {"REPORTS_MGMT_REPORT_DATA_MANAGEMENT_TITLE", "Report Data Management Settings"}, {"REPORTS_MGMT_ENABLE_DATA_ARCHIVE", "Enable Data Archive"}, {"REPORTS_MGMT_NEXT_SCHED_ARCHIVE_TIME", "Next Scheduled Archive Time"}, {"REPORTS_MGMT_NUM_OF_DAYS_TO_ARCHIVE", "Number of Days To Archive"}, {"REPORTS_MGMT_ARCHIVE_DATA_IMMEDIATELY", "Archive Data Immediately"}, {"REPORTS_MGMT_LAST_ARCHIVE_TIME", "Last Archive Time"}, {"REPORTS_MGMT_NEXT_ARCHIVE_ALERT", "Are you sure you want to change the next data archive schedule?"}, {"REPORTS_MGMT_ENABLE_DATA_ARCHIVE", "Enable Data Archive"}, {"REPORTS_MGMT_ENABLE_DATA_ARCHIVE_ALERT", "Are you sure you want to enable Data Archive?"}, {"REPORTS_MGMT_DISABLE_DATA_ARCHIVE_ALERT", "Are you sure you want to disable Data Archive?"}, {"REPORTS_MGMT_SUCCESS_ENABLE_DATA_ARCHIVE", "Successfully enabled Data Archive."}, {"REPORTS_MGMT_SUCCESS_DISABLE_DATA_ARCHIVE", "Successfully disabled Data Archive."}, {"REPORTS_MGMT_NEXT_ARCHIVE_TIME_UPDATE", "Next Scheduled Archive Time has been updated successfully."}, {"REPORTS_MGMT_NEXT_ARCHIVE_TIME_FAILURE", "Failed to update next data archive time since data archive is disabled."}, {"REPORTS_MGMT_NUM_DAYS_TO_ARCHIVE", "Number of days to archive setting updated successfully."}, {"REPORTS_MGMT_ARCHIVE_NOW_ALERT", "Are you sure you want to archive data immediately?"}, {"REPORTS_MGMT_ARCHIVE_NOW_UPDATE", "Successfully updated to run Data Archiver now."}, {"REPORTS_MGMT_UPDATE_FAILURE", "Failed to update since Data Archive is disabled."}, {"REPORTS_MGMT_NOCHANGE", "No changes were made"}, {"REPORTS_MGMT_ARCHIVE_IN_PROGRESS", "Data Archive is currently in progress"}, {"REPORTS_MGMT_LAST_ARCHIVE_STATS", "Last Archive Stats (Number of days archived : Time taken(hr.min)) - >"}, {"REPORTS_MGMT_DATA_ARCHIVED_AS_OF", "Report Data Archived as of"}, {"REPORTS_MGMT_ENABLE_SAVE_DATA_ARCHV_TRAN_LOG_ALERT", "Are you sure you want to enable to save data-archive transaction logs?"}, {"REPORTS_MGMT_DISABLE_SAVE_DATA_ARCHV_TRAN_LOG_ALERT", "Are you sure you want to disable to save data-archive transaction logs?"}, {"REPORTS_MGMT_SAVE_DATA_ARCHIVE_TRAN_LOG", "Save Data Archive Transaction Logs"}, {"REPORTS_MGMT_SAVE_DATA_ARCHIVE_TRAN_LOG_NOTE", "Note: This feature is available only on MS SQL database."}, {"REPORTS_MGMT_SUCCESS_SET_DATA_ARCHV_TRAN_LOG", "Successfully enabled to save data-archive transaction logs."}, {"REPORTS_MGMT_SUCCESS_RESET_DATA_ARCHV_TRAN_LOG", "Successfully disabled to save data-archive transaction logs."}, {"REPORTS_MGMT_ARCHIVE_SCHED_ALERT", "This action may affect the database maintenance jobs."}, {"DB_MAINTAINANCE_JOBS_SCHEDULE_NOTE1", "Database maintenance jobs should be run after the completion of \"Next Scheduled Archive Time\" and \"Delete Data Daily At\" scheduled runs. See documentation for details."}, {"REPORTS_MGMT_ENABLE_ARCHIVE_ALERT", "This action will create a separate database for archival of older reporting data. During migration of data from SGMSDB database to the archived database, database performance could be affected. Please see the Administrator\u2019s Guide for a full understanding of this feature and for any additional fine tuning of the servers that would be required on your part."}, {"REPORTS_MGMT_UPDATE_NUM_DAYS_TO_ARCHIVE_ALERT", "Recommended 1 through 10 - Larger the number will impact overall performance and duration of each Archive Run."}, {"DASHBOARD_REPORTS_SUMMARY_TITLE", "Dashboard Summary"}, {"DASHBOARD_REPORTS_SUMMARY", "Summary"}, {"DASHBOARD_REPORTS_NO_INFO", "No information."}, {"DASHBOARD_REPORTS_ALERTS_WARNINGS", "Alerts/Warnings"}, {"DASHBOARD_REPORTS", "Dashboard"}, {"DASHBOARD_REPORTS_SETTINGS_TITLE", "Dashboard Report Settings"}, {"DASHBOARD_REPORTS_SETTINGS_SUMMARY_LIST", "Summary/Statistics List"}, {"DASHBOARD_REPORTS_SETTINGS_ALERT_LIST", "Alerts List"}, {"DASHBOARD_REPORTS_SETTINGS_THRESHOLD", "Threshold"}, {"DASHBOARD_REPORTS_SETTINGS_REPORTS_LIST", "Reports List"}, {"DASHBOARD_REPORTS_SETTINGS_RESET_TO_DEFAULTS", "Reset To Defaults"}, {"DASHBOARD_REPORTS_SETTINGS_DELETE", "Delete"}, {"DASHBOARD_REPORTS_SETTINGS_RESET_WARNING1", "This action will reset all the settings to default values"}, {"DASHBOARD_REPORTS_SETTINGS_RESET_WARNING2", "Are you sure you want to proceed?"}, {"DASHBOARD_REPORTS_SETTINGS_RESET_WARNING2", "Are you sure you want to proceed?"}, {"DASHBOARD_REPORTS_SETTINGS_DELETE_WARNING1", "Cannot delete last item!"}, {"DASHBOARD_REPORTS_SETTINGS_DELETE_WARNING2", "There should be at least one item in the "}, {"DASHBOARD_REPORTS_SETTINGS_SELECT_WARNING1", "You can only select up to "}, {"DASHBOARD_REPORTS_SETTINGS_SELECT_WARNING2", " items."}, {"DASHBOARD_REPORTS_SETTINGS_ENTER_THRESHOLD", "Please enter a threshold value for the alert."}, {"DASHBOARD_REPORTS_SETTINGS_ITEM_IN_LIST", "This item is already in the list."}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_1", "Note:"}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_2", "Instance Units added to \"Central GMS\" will need to follow the steps outlined below to complete the configuration:"}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_3", "1.  Pre-requisites"}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_4", "Syslogs from Instance unit should reach \"Central GMS\" for the unit acquisition to be completed. See Unit acquisition section in Admin guide."}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_5", "2. Please perform the following steps:"}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_6", "   Step 1: Check the box \"Send Heartbeat Status Messages Only\" on GMS settings page."}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_7", "   Step 2: Check the box \"Enable SNMP\". Click on the \"Configure\" button and supply the parameters for SNMP or keep the defaults for general configuration. "}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_8", "3. Do not change the Reporting Syslog settings."}, {"DISTRIBUTEDINSTANCES_SETTINGS_NOTE_9", "4. In the event the password for the appliance is changed, the change should be made in Central GMS and Remote Analyzer by using \"Modify Unit\" option in Tree Control."}, {"CONFIRM_CHANGE_SETTING", "Are you sure you want to change this setting?"}, {"DISPLAYING_RECORDS", "Displaying records"}, {"DOT", "."}, {"CLEAR_SCREEN", "Clear Screen"}, {"CLOSE_WINDOW", "Close Window"}, {"REPORT_GEN_SETTINGS", "Reports generated for the following settings"}, {"REPORT_USER", "User"}, {"REPORT_CHART_TYPE", "Chart Type"}, {"REPORT_DISPLAY_TYPE", "Display Type"}, {"REPORT_TOP_SITES", "Top Sites"}, {"REPORT_TOP_USERS", "Top Users"}, {"REPORT_SITES_PER_USER", "Sites Per User"}, {"REPORT_ITEMS", "Items"}, {"REPORT_ENTRIES_PER_ITEM", "Entries Per Item"}, {"REPORT_SITE_FILTER", "Site Filter"}, {"REPORT_USER_FILTER", "User Filter"}, {"REPORT_SRC_INTERFACE", "Source Interface"}, {"REPORT_DST_INTERFACE", "Destination Interface"}, {"REPORT_BIDIRECTIONAL", "Bi-directional"}, {"REPORT_IP_SEARCH", "Whole IP Search Enabled"}, {"REPORT_HOURS", "Hours"}, {"REPORT_PAGE_LOADING", "Page Loading..."}, {"REPORT_GENERATING", "Report Generation in Progress"}, {"REPORT_PROCESSING_REQUEST", "Processing Request"}, {"REPORT_CHART_AND_TABLE", "Chart & Table"}, {"REPORT_TABLE_ONLY", "Table Only"}, {"REPORT_RESOURCE_SUMMARY", "Resource Summary"}, {"REPORT_RESOURCE_TOP_USERS", "Top Users of Resources"}, {"REPORT_SSLVPN_STATUS_SUMMARY", "Status Summary"}, {"REPORT_SSLVPN_STATUS_OVERTIME", "Status Over Time"}, {"REPORT_SSLVPN_DOWN_STATUS_SUMMARY", "Down Status Summary"}, {"REPORT_SSLVPN_DOWN_STATUS_OVERTIME", "Down Status Over Time"}, {"REPORT_SSLVPN_BANDWIDTH_SUMMARY", "Bandwidth Summary"}, {"REPORT_SSLVPN_BANDWIDTH_TOPUSER", "Bandwidth Top User"}, {"REPORT_SSLVPN_BANDWIDTH_OVERTIME", "Bandwidth Over Time"}, {"REPORT_SSLVPN_BANDWIDTH_TOPUSEROT", "Bandwidth Top User Over Time"}, {"REPORT_SSLVPN_RESOURCE_SUMMARY", "Resource Summary"}, {"REPORT_SSLVPN_USERLOGIN", "User Login"}, {"REPORT_SSLVPN_USERLOGOUT", "User Logout"}, {"REPORT_SSLVPN_USERTIMEOUT", "User Timeout"}, {"REPORT_SSLVPN_FAILED_LOGIN", "Failed Login"}, {"REPORT_SSLVPN_RESOURCE_DETAIL", "Resource Detail"}, {"REPORT_SSLVPN_USER_DETAIL", "User Detail"}, {"REPORT_SSLVPN_WAF_SUMMARY", "Web Application Firewall Summary"}, {"REPORT_SSLVPN_WAF_DETAIL", "Web Application Firewall Detail"}, {"REPORT_SSLVPN_TOP_THREATS", "Top Threats of Web Application Firewall"}, {"REPORT_SSLVPN_THREAT_DETAIL", "Threat Detail"}, {"REPORT_SSLVPN_TOP_APPLICATIONS", "Top Applications of Web Application Firewall"}, {"REPORT_SSLVPN_TOP_USERS", "Top Users of Web Application Firewall"}, {"REPORT_SSLVPN_TOP_APPLICATIONS_DETAIL", "Application Detail"}, {"REPORT_SSLVPN_WAF_OVERTIME", "Web Application Firewall Over Time"}, {"REPORT_SSLVPN_OFFLOADED_CONN_SUMMARY", "Offloaded Connections Summary"}, {"REPORT_SSLVPN_OFFLOADED_CONN_TOP_APPLICATIONS", "Offloaded Connection Top Applications"}, {"REPORT_SSLVPN_OFFLOADED_CONN_TOP_USERS", "Offloaded Connection Top Users"}, {"REPORT_SSLVPN_OFFLOADED_CONN_OVERTIME", "Offloaded Connections Over Time"}, {"THREAD_START", "Thread starting up"}, {"THREAD_IDLE", "Thread is idle"}, {"THREAD_LOAD_RAW", "Loading raw syslogs"}, {"THREAD_UPDOWNSUMMARY", "Performing UP-DOWN summary"}, {"THREAD_START_SUMMARIZING", "Starting summarization"}, {"THREAD_SUMMARIZING", "Summarizing file"}, {"THREAD_POST_SUMMARY", "Performing post summarization activities"}, {"THREAD_INSPECT_INFECT", "Inspecting file for infection"}, {"THREAD_SUMMARY_FINISHED", "Finished with summarization"}, {"THREAD_DEADLOCKED", "Deadlocked"}, {"THREAD_PARSING", "Parsing syslogs"}, {"TREECONTROL_SHOW", "Show TreeControl Panel"}, {"TREECONTROL_HIDE", "Hide TreeControl Panel"}, {"MIME10_CHARSET", "utf8"}, {"NEXT_TXT", "Next"}, {"PREV_TXT", "Previous"}, {"LAST_TXT", "Last"}, {"FIRST_TXT", "First"}, {"CHART_BAR_3DDEPTH", "8"}, {"CHART_BAR_3DROTATION", "15"}, {"CHART_BAR_3DELEVATION", "20"}, {"CHART_BAR_WIDTH", "550"}, {"CHART_BAR_HEIGHT", "250"}, {"CHART_PIE_3DDEPTH", "10"}, {"CHART_PIE_3DROTATION", "45"}, {"CHART_PIE_3DELEVATION", "45"}, {"CHART_PIE_WIDTH", "550"}, {"CHART_PIE_HEIGHT", "250"}, {"CHART_PLOT_WIDTH", "550"}, {"CHART_PLOT_HEIGHT", "250"}, {"CHART_AREA_WIDTH", "550"}, {"CHART_AREA_HEIGHT", "250"}, {"HOUR", "Hour"}, {"DATE", "Date"}, {"TIME", "Time"}, {"TOTAL", "TOTAL"}, {"USER_NAME", "User Name"}, {"NODE_NAME", "Node Name"}, {"RESOURCE_NAME", "Resource Name"}, {"UP_TIME_MINUTES", "Up Time (Mins.)"}, {"UP_TIME_HOURS", "Up Time (Hours)"}, {"DOWN_TIME_HOURS", "Down Time (Hours)"}, {"DOWN_TIME_MINUTES", "Down Time (Mins.)"}, {"CONNECTIONS", "Connections"}, {"SOURCE_HOST", "Source Host"}, {"DESTINATION_HOST", "Destination Host"}, {"DURATION", "Duration"}, {"AUTHENTICATION_TYPE", "Type"}, {"POLICY_NAME", "Policy Name"}, {"CATEGORY_NAME", "Category Name"}, {"APPLN_NAME", "Application Name"}, {"HOST_NAME", "Host Name"}, {"BYTES", "Bytes"}, {"TYPE", "Action Type"}, {"CATEGORY_NAME", "Category"}, {"SIGNATUR_NAME", "Signature"}, {"CLASSIFICATION_NAME", "Classification"}, {"SEVERITY_TYPE", "Severity"}, {"URI_NAME", "URI"}, {"AGENT_NAME", "Agent"}, {"APPLICATION_IP", "Application IP"}, {"THREAT_COUNT", "Threats"}, {"PEAK_CONNECTIONS", "Peak Connections per second"}, {"PEAK_THROUGHPUT", "Peak Throughput (Mbps)"}, {"AVG_CONNECTIONS", "Avg Connections per second"}, {"AVG_THROUGHPUT", "Avg Throughput (Mbps)"}, {"DETECTIONS", "Detections"}, {"PREVENTIONS", "Preventions"}, {"SUMMARIZER_SETTINGS_DOWN_STATUS_SUMMARY_OVERTIME_DESC", "Summary of down-time over specified time period."}, {"SUMMARIZER_SETTINGS_WEB_USAGE_BY_USER_TIME_SITE_DESC", "Amount of HTTP bandwidth used by a user over time for each site."}, {"SUMMARIZER_SETTINGS_APP_ACCESS_TITLE", "Application Access reports"}, {"SUMMARIZER_SETTINGS_APP_ACCESS_DESC", "Provides application access event reports."}, {"SUMMARIZER_DOWN_SETTINGS_OVERTIME_TITLE", "Down Summary, Over Time"}, {"SUMMARIZER_SETTINGS_BY_USER_TIME_SITE_TITLE", "By User, By Users Over Time, By Site"}, {"SUMMARIZER_SETTINGS_APPFW_TITLE", "Application Firewall reports"}, {"SUMMARIZER_SETTINGS_APPFW_DESC", "Provides Application Firewall reports"}, {"SUMMARIZER_SETTINGS_APPFW_SUMMARY_TITLE", "Summary"}, {"SUMMARIZER_SETTINGS_APPFW_SUMMARY_DESC", "Application Firewall Summary"}, {"SUMMARIZER_SETTINGS_APPFW_OVERTIME_TITLE", "Over Time"}, {"SUMMARIZER_SETTINGS_APPFW_OVERTIME_DESC", "Application Firewall Over Time"}, {"SUMMARIZER_SETTINGS_APPFW_TOPREPORTS_TITLE", "Top Applications, Top Users, Top Policies"}, {"SUMMARIZER_SETTINGS_APPFW_TOPREPORTS_DESC", "Application Firewall Top reports"}, {"PDF_SERVICES_SUMMARY_TITLE", "Services Summary"}, {"PDF_SERVICES_SUMMARY_DESC", "Service reports provide information on the amount of data transmitted through selected SonicWall appliance by each service. Service reports are useful for revealing inappropriate usage of bandwidth and can help determine network policies. For example, if there is a large spike of bandwidth usage, a network administrator can determine whether this is caused by regular Web access, an attempted Denial of Service (DoS) attack, or a variety of other services."}, {"PDF_BANDWIDTH_SUMMARY_TITLE", "Bandwidth Summary"}, {"PDF_BANDWIDTH_SUMMARY_DESC", "Bandwidth reports display the amount of data transferred through one or more selected SonicWall appliances. Bandwidth reports are an ideal starting point for viewing overall bandwidth usage.  You can view bandwidth usage view by the hour, day or over a period of days. Additionally, you can view the top users of your bandwidth."}, {"PDF_VPN_SUMMARY_TITLE", "VPN Summary"}, {"PDF_VPN_SUMMARY_DESC", "VPN Usage reports provide information on the amount of VPN usage that occurs through the selected SonicWall appliance(s). VPN Usage reports can be used to view VPN usage by the hour, day, or over a period of days. Additionally, you can view the top users of their VPN tunnels. If a large amount of VPN traffic occurs, a company may need to increase their Internet connection, add WAN optimization equipment, or reconfigure the VPN network for site-to-site tunnels to efficiently route traffic."}, {"PDF_WEB_SUMMARY_TITLE", "Web Usage Summary"}, {"PDF_WEB_SUMMARY_DESC", "The Web Usage Summary report contains information on the amount of HTTP bandwidth handled by a SonicWall device during each hour of the specified day. Web usage reports can be used to view Web bandwidth usage by the hour, day, or over a period of days. You can monitor the top users of Web bandwidth and most viewed/visited sites for their company.  These types of reports help you gauge the productivity of your employees."}, {"PDF_WEBFILTER_SUMMARY_TITLE", "Web Filter Summary"}, {"PDF_WEBFILTER_SUMMARY_DESC", "The Web Filter Summary Report contains information on the number of times users attempted to access blocked sites on a particular day through selected SonicWall appliance(s). These reports include Web sites blocked by the Content Filter List or service, customized keyword filtering, and domain name filtering services.  Additionally, you can view the users that most frequently attempt to access blocked sites and the most popular blocked sites."}, {"PDF_FTP_SUMMARY_TITLE", "FTP Summary"}, {"PDF_FTP_SUMMARY_DESC", "FTP usage reports provide information on the amount of FTP usage that occurs through the selected SonicWall appliance(s). FTP usage reports can be used to view FTP bandwidth usage by the hour, day, or over a period of days. Additionally, administrators can view the top users of FTP bandwidth. If a large amount of FTP traffic occurs during peak times, you may need to get more bandwidth or upgrade your network equipment."}, {"PDF_MAIL_SUMMARY_TITLE", "Mail Usage Summary"}, {"PDF_MAIL_SUMMARY_DESC", "Mail usage reports provide information on the amount of mail usage that occurs through the selected SonicWall appliance(s). Mail usage reports can be used to view mail bandwidth usage by the hour, day, or even over a period of days.  This report allows you to view the top users of mail bandwidth.  Mail usage reports include SMTP, POP3, and IMAP traffic.  General bandwidth reports do not always provide a complete picture of network bandwidth usage."}, {"PDF_ATTACK_SUMMARY_TITLE", "Attack Summary"}, {"PDF_ATTACK_SUMMARY_DESC", "Attack report shows the number of attacks that were directed at or through the selected SonicWall appliance(s). These include denial of service, intrusions, probes, and all other malicious activity on the LAN or DMZ.  As with any network deployment, SonicWall recommends taking a multi-layer approach to network security.  Through the aid of Attack Summary Reports, you can see evidence of the attacks that have been thwarted using SonicWall appliances."}, {"PDF_VIRUSATTACK_SUMMARY_TITLE", "Virus Attack Summary"}, {"PDF_VIRUSATTACK_SUMMARY_DESC", "Virus Attack report shows the number of virus attacks that were directed at or through the selected SonicWall appliance(s).  Similar to the attack summary report, the Virus Attack report illustrates the effectiveness of the SonicWall appliance to capture virus attacks before they penetrate your company\u2019s network."}, {"PDF_SPYWARE_SUMMARY_TITLE", "Spyware Attempts Summary"}, {"PDF_SPYWARE_SUMMARY_DESC", "The Anti-Spyware Summary report contains information on the number of spyware attempts made on your system through real-time scans.  Spyware protection blocks attacks delivered through auto-installed ActiveX components, scans and logs threats through your network, and stops existing spyware programs from communicating in the background."}, {"PDF_INTRUSION_SUMMARY_TITLE", "Intrusion Summary"}, {"PDF_INTRUSION_SUMMARY_DESC", "The Intrusion Prevention Service (IPS) reports show the number of attempted intrusions that occurred during the specified time period.  These reports provide further evidence of SonicWall\u2019s deep packet inspection signature technology."}, {"PDF_STATUS_SUMMARY_TITLE", "Status Summary"}, {"PDF_STATUS_SUMMARY_DESC", "Status reports display the number of hours that one or more SonicWall appliances were online and functional during the specified time period. From this information, an administrator can find trouble spots within their network. For example, this report could reveal a SonicWall appliance that is having network connectivity issues caused by either the internal network or by the ISP."}, {"PDF_APPFW_SUMMARY_TITLE", "Application Firewall Summary"}, {"PDF_APPFW_SUMMARY_DESC", "Application Firewall reports display the amount of application firewall data transferred."}, {"PDF_ECM_SUMMARY_TITLE", "ECAV Summary"}, {"PDF_ECM_SUMMARY_DESC", "Summary report of all the detections grouped by the ECAV clients."}, {"PDF_BANDWIDTH_OVERTIME_TITLE", "Bandwidth Over Time"}, {"PDF_BANDWIDTH_OVERTIME_DESC", "Bandwidth reports display the amount of data transferred through one or more selected SonicWall appliances. Bandwidth reports are an ideal starting point for viewing overall bandwidth usage.  You can view bandwidth usage view by the hour, day or over a period of days. Additionally, you can view the top users of your bandwidth."}, {"PDF_VPN_OVERTIME_TITLE", "VPN Over Time"}, {"PDF_VPN_OVERTIME_DESC", "VPN Usage reports provide information on the amount of VPN usage that occurs through the selected SonicWall appliance(s). VPN Usage reports can be used to view VPN usage by the hour, day, or over a period of days. Additionally, you can view the top users of their VPN tunnels. If a large amount of VPN traffic occurs, a company may need to increase their Internet connection, add WAN optimization equipment, or reconfigure the VPN network for site-to-site tunnels to efficiently route traffic."}, {"PDF_WEB_OVERTIME_TITLE", "Web Usage Over Time"}, {"PDF_WEB_OVERTIME_DESC", "The Web Usage Summary report contains information on the amount of HTTP bandwidth handled by a SonicWall device during each hour of the specified day. Web usage reports can be used to view Web bandwidth usage by the hour, day, or over a period of days. You can monitor the top users of Web bandwidth and most viewed/visited sites for their company.  These types of reports help you gauge the productivity of your employees."}, {"PDF_WEBFILTER_OVERTIME_TITLE", "Web Filter Over Time"}, {"PDF_WEBFILTER_OVERTIME_DESC", "The Web Filter Summary Report contains information on the number of times users attempted to access blocked sites on a particular day through selected SonicWall appliance(s). These reports include Web sites blocked by the Content Filter List or service, customized keyword filtering, and domain name filtering services.  Additionally, you can view the users that most frequently attempt to access blocked sites and the most popular blocked sites."}, {"PDF_FTP_OVERTIME_TITLE", "FTP Over Time"}, {"PDF_FTP_OVERTIME_DESC", "FTP usage reports provide information on the amount of FTP usage that occurs through the selected SonicWall appliance(s). FTP usage reports can be used to view FTP bandwidth usage by the hour, day, or over a period of days. Additionally, administrators can view the top users of FTP bandwidth. If a large amount of FTP traffic occurs during peak times, you may need to get more bandwidth or upgrade your network equipment."}, {"PDF_MAIL_OVERTIME_TITLE", "Mail Usage Over Time"}, {"PDF_MAIL_OVERTIME_DESC", "Mail usage reports provide information on the amount of mail usage that occurs through the selected SonicWall appliance(s). Mail usage reports can be used to view mail bandwidth usage by the hour, day, or even over a period of days.  This report allows you to view the top users of mail bandwidth.  Mail usage reports include SMTP, POP3, and IMAP traffic.  General bandwidth reports do not always provide a complete picture of network bandwidth usage."}, {"PDF_ATTACK_OVERTIME_TITLE", "Attack Over Time"}, {"PDF_ATTACK_OVERTIME_DESC", "Attack report shows the number of attacks that were directed at or through the selected SonicWall appliance(s). These include denial of service, intrusions, probes, and all other malicious activity on the LAN or DMZ.  As with any network deployment, SonicWall recommends taking a multi-layer approach to network security.  Through the aid of Attack Summary Reports, you can see evidence of the attacks that have been thwarted using SonicWall appliances."}, {"PDF_VIRUSATTACK_OVERTIME_TITLE", "Virus Attack Over Time"}, {"PDF_VIRUSATTACK_OVERTIME_DESC", "Virus Attack report shows the number of virus attacks that were directed at or through the selected SonicWall appliance(s).  Similar to the attack summary report, the Virus Attack report illustrates the effectiveness of the SonicWall appliance to capture virus attacks before they penetrate your company\u2019s network."}, {"PDF_SPYWARE_OVERTIME_TITLE", "Spyware Attempts Over Time"}, {"PDF_SPYWARE_OVERTIME_DESC", "The Anti-Spyware Summary report contains information on the number of spyware attempts made on your system through real-time scans.  Spyware protection blocks attacks delivered through auto-installed ActiveX components, scans and logs threats through your network, and stops existing spyware programs from communicating in the background."}, {"PDF_INTRUSION_OVERTIME_TITLE", "Intrusion Over Time"}, {"PDF_INTRUSION_OVERTIME_DESC", "The Intrusion Prevention Service (IPS) reports show the number of attempted intrusions that occurred during the specified time period.  These reports provide further evidence of SonicWall\u2019s deep packet inspection signature technology."}, {"PDF_STATUS_OVERTIME_TITLE", "Status Over Time"}, {"PDF_STATUS_OVERTIME_DESC", "Status reports display the number of hours that one or more SonicWall appliances were online and functional during the specified time period. From this information, an administrator can find trouble spots within their network. For example, this report could reveal a SonicWall appliance that is having network connectivity issues caused by either the internal network or by the ISP."}, {"PDF_APPFW_OVERTIME_TITLE", "Application Firewall Summary"}, {"PDF_APPFW_OVERTIME_DESC", "Application Firewall reports display the amount of application firewall data transferred."}, {"PDF_ECM_OVERTIME_TITLE", "ECAV Summary"}, {"PDF_ECM_OVERTIME_DESC", "Summary report of all the detections grouped by the ECAV clients."}, {"PDF_SSLVPN_STATUS_SUMMARY_TITLE", "Status Summary"}, {"PDF_SSLVPN_STATUS_SUMMARY_DESC", "Status reports display the number of hours that one or more SonicWall appliances were online and functional during the specified time period. From this information, an administrator can find trouble spots within their network. For example, this report could reveal a SonicWall appliance that is having network connectivity issues caused by either the internal network or by the ISP."}, {"PDF_SSLVPN_BANDWIDTH_SUMMARY_TITLE", "Bandwidth Summary"}, {"PDF_SSLVPN_BANDWIDTH_SUMMARY_DESC", "Bandwidth reports display the amount of data transferred through one or more selected SonicWall appliances. Bandwidth reports are an ideal starting point for viewing overall bandwidth usage.  You can view bandwidth usage view by the hour, day or over a period of days. Additionally, you can view the top users of your bandwidth."}, {"PDF_SSLVPN_RESOURCE_SUMMARY_TITLE", "Resource Summary"}, {"PDF_SSLVPN_RESOURCE_SUMMARY_DESC", "Resources are the granular components of a trusted network that can be accessed using your SonicWall SSL-VPN. The Resources Summary report contains the number of connections made to remote services such as FTP, HTTP, RDP, SSH, and SonicWall NetExtender."}, {"PDF_SSLVPN_STATUS_OVERTIME_TITLE", "Status Over Time"}, {"PDF_SSLVPN_STATUS_OVERTIME_DESC", "Status reports display the number of hours that one or more SonicWall appliances were online and functional during the specified time period. From this information, an administrator can find trouble spots within their network. For example, this report could reveal a SonicWall appliance that is having network connectivity issues caused by either the internal network or by the ISP."}, {"PDF_SSLVPN_BANDWIDTH_OVERTIME_TITLE", "Bandwidth Over Time"}, {"PDF_SSLVPN_BANDWIDTH_OVERTIME_DESC", "Bandwidth reports display the amount of data transferred through one or more selected SonicWall appliances. Bandwidth reports are an ideal starting point for viewing overall bandwidth usage.  You can view bandwidth usage view by the hour, day or over a period of days. Additionally, you can view the top users of your bandwidth."}, {"PDF_CDP_STATUS_SUMMARY_TITLE", "Capacity Summary"}, {"PDF_CDP_STATUS_SUMMARY_DESC", "Capacity reports gives a capacity status overview of one or more CDP appliances."}, {"PDF_CDP_TOPAGENT_SUMMARY_TITLE", "Top Agent Summary"}, {"PDF_CDP_TOPAGENT_SUMMARY_DESC", "Top agent summary reports display the top backup agents of a specific CDP appliance."}, {"PDF_CDP_TOPFILETYPE_SUMMARY_TITLE", "Top File Extensions"}, {"PDF_CDP_TOPFILETYPE_SUMMARY_DESC", "Top file extensions reports display the top backup file extensions of a specific CDP appliance."}, {"PDF_CDP_STATUS_OVERTIME_TITLE", "Capacity Over Time"}, {"PDF_CDP_STATUS_OVERTIME_DESC", "Capacity Over Time reports gives a capacity status overview of one or more CDP appliances."}, {"GR_BUILDER_TITLE", "Custom Report"}, {"GR_BUILDER_SECTION_TITLE", "Template Section"}, {"GR_BUILDER_LABEL__FAVORITE", "Template"}, {"GR_BUILDER_LABEL__OPTION", "-- Load a Template --"}, {"GR_BUILDER_LABEL__NOOPT", "No Template Available"}, {"GR_BUILDER_TITLE__FILTER", "Report Layout"}, {"GR_BUILDER_LABEL__USER", "User"}, {"GR_BUILDER_LABEL__DOMAIN", "Domain"}, {"GR_BUILDER_LABEL__CATEGORY", "Category"}, {"GR_REPORT_SECTION_TITLE", "Report Section"}, {"GR_FIELD_LABEL__TIME", "Date/Time"}, {"GR_FIELD_LABEL__USER", "User"}, {"GR_FIELD_LABEL__SRCIP", "Source IP"}, {"GR_FIELD_LABEL__SRCPORT", "Source Port"}, {"GR_FIELD_LABEL__SRCINT", "Source Interface"}, {"GR_FIELD_LABEL__SRCDNS", "Source DNS"}, {"GR_FIELD_LABEL__DSTIP", "Destination IP"}, {"GR_FIELD_LABEL__DSTPORT", "Destination Port"}, {"GR_FIELD_LABEL__DSTINT", "Destination Interface"}, {"GR_FIELD_LABEL__DSTDNS", "Destination DNS"}, {"GR_FIELD_LABEL__DSTNAME", "Domain"}, {"GR_FIELD_LABEL__PROTO", "Protocol"}, {"GR_FIELD_LABEL__SENT", "Transmitted Traffic"}, {"GR_FIELD_LABEL__RCVD", "Received Traffic"}, {"GR_FIELD_LABEL__TOTAL", "Total Traffic"}, {"GR_FIELD_LABEL__CATEGORY", "Category"}, {"GR_FIELD_LABEL__ARG", "Full URL"}, {"APP_FW_SUMMARY", "Application Firewall Usage Summary"}, {"APP_FW_OVERTIME", "Application Firewall Usage Over Time"}, {"APP_FW_TOP_USERS", "Top Users"}, {"APP_FW_TOP_APPLNS", "Top Applications"}, {"APP_FW_TOP_POLICES", "Top Policies"}, {"APP_FW_TOP_CATEGORIES", "Top Categories"}, {"APP_FW_APPLN_DETAIL", "Application detail"}, {"APP_FW_USER_DETAIL", "User detail"}, {"APP_FW_POLICY_DETAIL", "Policy detail"}, {"SCHED_APP_FW_TOP_USERS", "Application Firewall Top Users"}, {"SCHED_APP_FW_TOP_APPLNS", "Application Firewall Top Applications"}, {"SCHED_APP_FW_TOP_POLICES", "Application Firewall Top Policies"}, {"SCHED_APP_FW_TOP_CATEGORIES", "Application Firewall Top Categories"}, {"ECM_SUMMARY", "Enforced Client Anti-Virus Summary"}, {"ECM_OVERTIME", "Enforced Client Anti-Virus Over Time"}, {"ECM_TOP_HAZARDS", "Enforced Client Anti-Virus Top Detections"}, {"ECM_TOP_AGENTS_FOR_HAZARD", "Enforced Client Anti-Virus Top Hosts For Detection"}, {"ECM_DETAIL", "Enforced Client Anti-Virus Host Details"}, {"ECM_EXCEPTIONS", "Enforced Client Anti-Virus Exception List For Firewall"}, {"ECM_AGENT_SUMMARY", "Enforced Client Anti-Virus Host Summary"}, {"ECM_OUT_OF_DATE_HOSTS", "Enforced Client Anti-Virus Out-of-Date Hosts"}, {"ECM_TOTAL_REPORTING_HOSTS", "Total Reporting Hosts"}, {"ECM_AGENT_NAME", "Hostname"}, {"ECM_AGENT_GUID", "Host GUID"}, {"ECM_LAST_UPD", "DAT Update Time"}, {"ECM_DAT_TIMESTAMP", "DAT Timestamp"}, {"ECM_OS", "OS"}, {"ECM_OS_BITS", "OS Bits"}, {"ECM_E_VER", "ECAV Version"}, {"ECM_FW", "Firewall(s)"}, {"ECM_TOTAL", "Detections"}, {"ECM_NUM_DETECTIONS", "Number Of Detections"}, {"ECM_TOTAL_DETECTIONS", "Total Number Of Detections"}, {"ECM_OOD_HOSTS", "Out-of-Date Hosts"}, {"ECM_TOTAL_OOD_HOSTS", "Total Out-of-Date Hosts"}, {"ECM_HAZARD_NAME", "Detection"}, {"ECM_USERS", "Users"}, {"ECM_REPORT_TIME", "Report Time"}, {"ECM_LAST_REPORTED_TIME", "Last Reported"}, {"ECM_UPD_SDK_VER", "Updater SDK Ver."}, {"ECM_SDK_MSI_VER", "MSI SDK Ver."}, {"ECM_POLICY_NAME", "Policy"}, {"EPRS_STATUS_INFORMATION", "ECAV Status Information"}, {"EPRS_DASHBOARD_MAIN_TITLE", "ECAV Dashboard"}, {"EPRS_INFECTED_CLIENTS_FW", "Infected Hosts behind Firewall(s)"}, {"EPRS_TOTAL_CLIENTS_FW", "ECAV Hosts behind Firewall(s)"}, {"EPRS_OOD_CLIENTS_FW", "Out of Date Hosts behind Firewall(s)"}, {"EPRS_TOP_DETECTIONS_FW", "Top Detections"}, {"ECM_CLIENT_NAME", "Host Name"}, {"ECM_THREAT_NAME", "Threat Name"}, {"ECM_AGENT_BLOCKED", "(Blocked)"}, {"CDP_STATUS_SUMMARY", "Capacity Summary"}, {"CDP_STATUS_OVERTIME", "Capacity Over Time"}, {"CDP_GROUP_SUMMARY", "Group Summary"}, {"CDP_APPL_SUMMARY", "Appliance Summary"}, {"CDP_TOP_FILETYPE_SUMMARY", "Top Backup File Extensions"}, {"CDP_TOP_AGENT_SUMMARY", "Top Backup Agents"}, {"CDP_DETAILS", "Backup Details"}, {"CDP_APPL_NAME", "Appliance Name"}, {"CDP_BACKUP_SIZE", "Backup Size"}, {"CDP_REVSIZE", "Revision Size"}, {"CDP_SIZEONDISK", "Size on Disk"}, {"CDP_BACKUP_COUNT", "Backup File Count"}, {"CDP_USED_CAPACITY", "Used Capacity"}, {"CDP_FREE_CAPACITY", "Free Capacity"}, {"CDP_FREE_PERCENTAGE", "Free Percentage"}, {"CDP_TOTAL_CAPACITY", "Total Capacity"}, {"CDP_AGENT_NAME", "Agent Name"}, {"CDP_USED_QUOTA", "Used Quota"}, {"CDP_QUOTA", "Total Quota"}, {"CDP_FREE_QUOTA", "Free Quota"}, {"CDP_POLICY_NAME", "Policy Name"}, {"CDP_FILE_TYPE", "File Extension"}, {"CDP_DTIME", "Date/Time"}, {"CDP_FOLDER", "Folder Name"}, {"CDP_FNAME", "File Name"}, {"CDP_FSIZE", "File Size"}, {"CDP_OPERATION", "Operation"}, {"SUMMARIZER_SETTINGS_ECM_TITLE", "ECAV Reports"}, {"SUMMARIZER_SETTINGS_ECM_DESC", "Provides Enforced Client Anti-Virus reports"}, {"SUMMARIZER_SETTINGS_ECM_SUMMARY_TITLE", "Summary"}, {"SUMMARIZER_SETTINGS_ECM_SUMMARY_DESC", "ECAV detections summary"}, {"SUMMARIZER_SETTINGS_ECM_OVERTIME_TITLE", "Over Time"}, {"SUMMARIZER_SETTINGS_ECM_OVERTIME_DESC", "ECAV detections over time"}, {"SUMMARIZER_SETTINGS_ECM_TOPHAZARDS_TITLE", "Top Detections"}, {"SUMMARIZER_SETTINGS_ECM_TOPHAZARDS_DESC", "ECAV top detected hazards"}, {"SUMMARIZER_SETTINGS_ECM_EXCEPTIONS_TITLE", "Out Of Date Hosts"}, {"SUMMARIZER_SETTINGS_ECM_EXCEPTIONS_DESC", "ECAV Out of Date Hosts"}, {"SUMMARIZER_SETTINGS_ECM_SUMMARY_OT_TITLE", "Summary, Over Time, Out of Date"}, {"SUMMARIZER_SETTINGS_ECM_SUMMARY_OT_DESC", "ECAV detections summary, over specified time period, Out of Date Hosts"}, {"NAV_PANEL_REPORTS", "Legacy"}, {"NAV_PANEL_POLICIES", "Manage"}, {"NAV_PANEL_NG_REPORTS", "Reports"}, {"NAV_PANEL_FLOW_REPORTS", "Flows"}, {"NAV_PANEL_CONSOLE", "Console"}, {"NAV_PANEL_MONITOR", "Monitor"}, {"REPORT", "Reports"}, {"CONTENTS", "Contents"}, {"TOTAL", "Total:"}, {"MANAGE_USER_REPORTS_TITLE", "Manage Custom Reports"}, {"DELETE_UPDATE_USER_REPORTS", "Delete Custom Reports"}, {"COLUMN_REPORT_NAME", "Custom Reports"}, {"COLUMN_DELETE", "Delete"}, {"DELETE_SEL_REPORTS_BTN", "Delete Selected Reports"}, {"DELETE_SELECTED_CONFIRM", "Note: Deleting reports might disable some scheduled tasks and change template contents. Are you sure you want to delete these reports?"}, {"DELETE_SINGLE_CONFIRM", "Note: Deleting reports might disable some scheduled tasks and change template contents. Are you sure you want to delete this report? "}, {"SELECT_ATLEAST_ONE_REPORT", "Please select atleast one Custom Report to delete."}, {"NO_USER_REPORTS", "No Custom Reports Found"}, {"FLOW_ACTIVITY_CONFIGURATION_TITLE", "Flow Activity Configuration"}, {"FLOW_ACTIVITY_STEP1_TITLE", "Step 1 - No Flow Server Agent is detected"}, {"FLOW_ACTIVITY_STEP1_PART1", "An Agent with \"Flow Server\" role is required to generate Flow Activity reports. Please follow the detailed instructions in the GMS Admin guide"}, {"FLOW_ACTIVITY_STEP1_PART1_PART", "on how to add a Flow Server"}, {"FLOW_ACTIVITY_STEP1_PART2", "Click on \"Next\" for instructions on how to configure GMS Flow Server and Flow Activity configuration on Firewall"}, {"FLOW_ACTIVITY_STEP2_TITLE", "Step 2 - Configure the firewall for Flow Activity Reporting"}, {"FLOW_ACTIVITY_STEP2_PART1", "Select the Flow Server agent from the list below for the firewall to send the Flows"}, {"FLOW_ACTIVITY_STEP2_PART2", "Use the Flow Server agent ip selected from the above step and follow the detailed instructions in the GMS Admin guide on how to configure the firewall for"}, {"FLOW_ACTIVITY_STEP2_PART2_PART", "Flow Activity Reporting"}, {"FLOW_ACTIVITY_STEP2_PART3", "Click on \"Next\" to complete the configuration"}, {"FLOW_ACTIVITY_STEP2_VISUALIZATION_EXPIRED", "Application Visualization is not enabled on this Firewall."}, {"FLOW_ACTIVITY_STEP2_NOFLOWAGENT", "No Flow Server Agent is detected in the GMS deployment."}, {"FLOW_ACTIVITY_STEP2_NOFLOWAGENTASSIGNED", "Flow Agent is not assigned."}, {"FLOW_ACTIVITY_VISUALIZATION", "App Visualization is not licensed on this appliance"}, {"FLOW_ACTIVITY_LEVEL", "Global View is not supported"}, {"FLOW_SERVER_SUMMARY", "Summary"}, {"FLOW_SERVER_NUMBER_INSTALLED", "Number of Flow Agents Installed:"}, {"FLOW_SERVER_NUMBER_UP", "Number of Flow Agents Up:"}, {"FLOW_SERVER_CONFIGURATION", "Flow Agent"}, {"FLOW_SERVER_ASSIGNMENT_SETTINGS", "Flow Agent Assignment Settings"}, {"FLOW_SERVER_IP", "Flow Agent IP:"}, {"FLOW_SERVER_LOCAL_TIME", "Local Time on Flow Agent:"}, {"FLOW_SERVER_LOCAL_TIME_BROWSER", "Local Time in Browser:"}, {"FLOW_SERVER_CURRENT_STATE", "Current State:"}, {"FLOW_SERVER_APPLIANCES_MANAGED", "Appliances managed by this Flow Agent"}, {"FLOW_SERVER_NONE", "None"}, {"PUBLIC_HOSTNAME_RESOLVE_HEADER", "Public IP Hostname Resolution Configuration"}, {"PUBLIC_HOSTNAME_RESOLVE_ENABLE_LABEL", "Enable Public IP Host-name Resolution :"}, {"PUBLIC_HOSTNAME_RESOLVE_TIMEOUT_LABEL", "Time out value for Resolution :"}, {"PUBLIC_HOSTNAME_RESOLVE_UPDATE_WARNING", "Are you sure you want to change Public IP Resolve configuration?"}, {"SUMMARIZER_SETTINGS_MILLISECONDS", "milliseconds"}, {"USR_TIMEOUT_CONFIG_HEADER", "USR Timeout Configuration"}, {"USR_TIMEOUT_CONFIG_LABEL", "Time out Value:"}, {"USR_COVER_LOGO_INVALID", "The logo image file selected for upload is corrupted or doesn\u2019t meet the requirements. Please check the image and try again"}, {"USR_REPORT_GENERATED_FOR", "Report Generated For"}, {"PACKET_CAPTURE_CONFIG_HEADER_LABEL", "Packet Data Viewer Configuration"}, {"PACKET_CAPTURE_CONFIG_LABEL", "Enable Packet Data Viewer:"}, {"PACKET_CAPTURE_UPDATE_WARNING", "Are you sure you want to update Packet Data Viewer settings?"}, {"PACKET_CAPTURE_NOTE", "Console->Reports->Syslog Filter (m=1391) will be disabled if the Packet Data Viewer is enabled. Exclusion Filter Settings will be picked up by the Summarizer every: 00 hour(s):15 min(s). This functionality will apply only to syslogs that are uploaded to the database after the summarizer settings are refreshed."}, {"LOGIN_MSG_CREDENTIALS", "Login with your credentials"}};
 
     @Override
     public Object[][] getContents() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/bean/I18n.java decompiled-9.3.9330/com/sonicwall/viewpoint/bean/I18n.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/bean/I18n.java	2023-09-08 15:13:15.454981181 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/bean/I18n.java	2023-09-08 15:14:42.241696513 -0700
@@ -125,13 +125,19 @@
     }
 
     public String getString(String identifier, String localeName) {
+        ResourceBundle rb;
         String returnStr = null;
-        if (localeName != null) {
-            ResourceBundle rb = resourceBundles.get(localeName);
-            try {
-                if (rb != null) {
-                    returnStr = rb.getString(identifier);
+        if (localeName == null) {
+            SGMSUtil.debugOut("I18n.getString(): Locale is NULL. Using en_US as default");
+            localeName = "en_US";
+        }
+        if ((rb = resourceBundles.get(localeName)) == null) {
+            SGMSUtil.debugOut("I18n.getString(): Resource Bundle for Locale " + localeName + " wasn't found. Using en_US as default");
+            localeName = "en_US";
+            rb = resourceBundles.get(localeName);
                 }
+        try {
+            returnStr = rb != null ? rb.getString(identifier) : "???" + identifier + "???";
             }
             catch (MissingResourceException me) {
                 try {
@@ -145,9 +151,6 @@
                     returnStr = "???" + identifier + "???";
                 }
             }
-        } else {
-            System.out.println("I18n: Locale bundle for '" + localeName + "' not found.");
-        }
         return returnStr;
     }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/ng/dao/ReportDataDAO.java decompiled-9.3.9330/com/sonicwall/viewpoint/ng/dao/ReportDataDAO.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/ng/dao/ReportDataDAO.java	2023-09-08 15:13:15.206345047 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/ng/dao/ReportDataDAO.java	2023-09-08 15:14:42.049935922 -0700
@@ -290,6 +290,8 @@
                     block55: {
                         dateInfo = reportDates.get(0);
                         String schedulerId = dateInfo.getSchedulerIdentifier();
+                        params.setParam("SCHEDULER_INSTANCE", schedulerId);
+                        SGMSUtil.debugOut("ReportDataDAO.getSingleSectionData(): Set Reports Params Scheduler Instance " + schedulerId);
                         if (section.getSectionType().getId() == 12L || section.getSectionType().getId() == 13L) {
                             schedulerId = this.getGroupNodeIdentifier();
                         }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/ng/dao/ReportMetaDataDAO.java decompiled-9.3.9330/com/sonicwall/viewpoint/ng/dao/ReportMetaDataDAO.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/ng/dao/ReportMetaDataDAO.java	2023-09-08 15:13:15.204347970 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/ng/dao/ReportMetaDataDAO.java	2023-09-08 15:14:42.047938416 -0700
@@ -75,9 +75,11 @@
                 SGMSUtil.debugOut((Object)("ReportMetaDataDAO.getReportMetaData(): Query: " + query.toString()), 4);
                 rs = stmt.executeQuery(query.toString());
                 if (rs != null && rs.next()) {
+                    long parentId = rs.getLong("parent_id");
                     long screenGroupID = rs.getLong("screen_group_id");
-                    report.setName(rs.getString("name"));
-                    report.setParentId(rs.getLong("parent_id"));
+                    String name = rs.getString("name");
+                    report.setName(name);
+                    report.setParentId(parentId);
                     report.setReportType(this.utilDAO.getReportType(rs.getLong("report_type_id")));
                     report.setSchedulable(rs.getBoolean("schedulable"));
                     report.setReadOnly(screenGroupID == 0L);
@@ -93,7 +95,7 @@
                     report.setHelpUrl(rs.getString("help_url"));
                     report.setServices(rs.getString("services"));
                     report.setScreenGroupId(screenGroupID);
-                    report.setScreenDisplayName(rs.getString("display_name"));
+                    report.setScreenDisplayName(String.valueOf(parentId) == "1000000" ? name : rs.getString("display_name"));
                     report.setFeatureId(rs.getString("feature_id"));
                     report.setOwner(rs.getString("owner"));
                     report.setOwnerDomainID(rs.getString("owner_domainid"));
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/ng/data/handler/DefaultDataHandler.java decompiled-9.3.9330/com/sonicwall/viewpoint/ng/data/handler/DefaultDataHandler.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/ng/data/handler/DefaultDataHandler.java	2023-09-08 15:13:15.285229604 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/ng/data/handler/DefaultDataHandler.java	2023-09-08 15:14:42.108862354 -0700
@@ -42,6 +42,9 @@
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Calendar;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Comparator;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -177,7 +180,7 @@
     }
 
     protected void populateDataRows(QueryBuilder query, Section section, Connection connection, ReportParams params) throws SQLException {
-        ArrayList rows = new ArrayList();
+        ArrayList<ArrayList<CellData>> rows = new ArrayList<ArrayList<CellData>>();
         PreparedStatement stmt = null;
         ResultSet rs = null;
         ResultSetMetaData rsmd = null;
@@ -236,8 +239,56 @@
                 }
             }
         }
+        if (section.getId() == 7L) {
+            ArrayList<ArrayList<CellData>> dataResponderRows = this.mergeDulplicateRows(rows, params);
+            section.setData(dataResponderRows);
+        } else {
         section.setData(rows);
     }
+    }
+
+    private ArrayList<ArrayList<CellData>> mergeDulplicateRows(ArrayList<ArrayList<CellData>> rows, ReportParams params) {
+        HashMap map = new HashMap();
+        SGMSUtil.debugOut((Object)"DefaultDataHandler.mergeDulplicateRows(): In Merge Duplicate row method: ", 5);
+        for (ArrayList<CellData> row : rows) {
+            String key = row.get(0).getData().split("\\$\\$\\$")[0] + "^^^" + row.get(3);
+            if (!map.containsKey(key)) {
+                map.put(key, row);
+                continue;
+            }
+            if (row.get(0).getData().split("\\$\\$\\$").length <= 1 || row.get(0).getData().split("\\$\\$\\$")[1].isEmpty()) continue;
+            ArrayList<CellData> rowTemp = new ArrayList<CellData>((Collection)map.get(key));
+            rowTemp.set(0, row.get(0));
+            String rawEventSum = Long.toString(Long.parseLong(row.get(4).getData()) + Long.parseLong(((CellData)rowTemp.get(4)).getData()));
+            String rawBytesSum = Long.toString(Long.parseLong(row.get(5).getData()) + Long.parseLong(((CellData)rowTemp.get(5)).getData()));
+            ((CellData)rowTemp.get(4)).setData(rawEventSum);
+            ((CellData)rowTemp.get(5)).setData(rawBytesSum);
+            map.replace(key, rowTemp);
+        }
+        ArrayList<ArrayList<CellData>> uniqueRows = new ArrayList<ArrayList<CellData>>();
+        for (Map.Entry entry : map.entrySet()) {
+            ArrayList tempList = new ArrayList();
+            String k = (String)entry.getKey();
+            tempList = (ArrayList)entry.getValue();
+            uniqueRows.add(tempList);
+            SGMSUtil.debugOut((Object)("DefaultDataHandler.mergeDulplicateRows(): In Merge Duplicate row method: key: " + k + ", value: " + tempList.toArray().toString()), 5);
+        }
+        Collections.sort(uniqueRows, new Comparator<ArrayList<CellData>>(){
+
+            @Override
+            public int compare(ArrayList<CellData> list1, ArrayList<CellData> list2) {
+                Long lastIndex1 = Long.parseLong(list1.get(list1.size() - 1).getData());
+                Long lastIndex2 = Long.parseLong(list2.get(list2.size() - 1).getData());
+                return Long.compare(lastIndex2, lastIndex1);
+            }
+        });
+        if (params.getLimit() < uniqueRows.size()) {
+            SGMSUtil.debugOut((Object)"DefaultDataHandler.mergeDulplicateRows(): Input Limit is less than unique rows list", 5);
+            return new ArrayList<ArrayList<CellData>>(uniqueRows.subList(0, params.getLimit()));
+        }
+        SGMSUtil.debugOut((Object)"DefaultDataHandler.mergeDulplicateRows(): Input Limit is less than unique rows list", 5);
+        return uniqueRows;
+    }
 
     public HashMap<Integer, String> getDateMap(Calendar startDate, Calendar endDate) {
         HashMap<Integer, String> dateMap;
@@ -504,14 +555,14 @@
         Calendar endDate = params.getCalendarEndDate();
         QueryBuilder[] sqls = new QueryBuilder[2];
         boolean isSyslogSchemaTypeSerial = this.sgmsUtil.getCosmoParam("syslogSchemaType", "PUBLIC").equalsIgnoreCase("SERIAL");
-        if (params.isGroupDetails() && !GroupSummarizerRawUtil.getInstance().isSameGroupTable(section.getColumns().get(0).getColumn().getTable(), params.getStartDate(), params.getEndDate()) || section.isFromRemoteDB() && DefaultDataHandler.isUnitLevel(params.getLevel()) && (!DefaultDataHandler.sameMonth(startDate, endDate) || isSyslogSchemaTypeSerial && !params.isGroupDetails())) {
+        if (params.isGroupDetails() && !GroupSummarizerRawUtil.getInstance().isSameGroupTable(section.getColumns().get(0).getColumn().getTable(), params.getStartDate(), params.getEndDate()) || section.isFromRemoteDB() && DefaultDataHandler.isUnitLevel(params.getLevel()) && (!DefaultDataHandler.sameMonth(startDate, endDate) || isSyslogSchemaTypeSerial && !params.isGroupDetails()) || DefaultDataHandler.sameDate(startDate, endDate) && DefaultDataHandler.isUnitLevel(params.getLevel()) || !DefaultDataHandler.sameDate(startDate, endDate) && DefaultDataHandler.isUnitLevel(params.getLevel())) {
             sqls = this.buildMultiTableSectionSQL(section, filters, params, connection, isSyslogSchemaTypeSerial);
         } else if (section.isFromRemoteDB() || params.isGroupDetails()) {
             sqls[0] = this.buildCountSql(section.getColumns(), filters, section.getReportType().getFilters(), params, true);
-            sqls[1] = this.buildSqlQuery(section.getColumns(), filters, params, !section.isTimeSeries(), true, section.getReportType().getFilters(), true, false);
+            sqls[1] = this.buildSqlQuery(section, filters, params, !section.isTimeSeries(), true, section.getReportType().getFilters(), true, false);
         } else {
             sqls[0] = this.buildCountSql(section.getColumns(), filters, section.getReportType().getFilters(), params, false);
-            sqls[1] = this.buildSqlQuery(section.getColumns(), filters, params, false, false, section.getReportType().getFilters(), true, false);
+            sqls[1] = this.buildSqlQuery(section, filters, params, false, false, section.getReportType().getFilters(), true, false);
         }
         SGMSUtil.debugOut((Object)("DefaultDataHandler.buildSectionSQL(): return: count=" + sqls[0].debug() + ": sql=" + sqls[1].debug()), 1);
         return sqls;
@@ -595,7 +646,11 @@
         }
         if (!section.isTimeSeries()) {
             sqlString.append(" LIMIT ");
+            if (section.getId() == 7L) {
+                sqlString.append(String.valueOf(params.getLimit() + 10));
+            } else {
             sqlString.append(String.valueOf(params.getLimit()));
+            }
             if (params.getOffset() > 0) {
                 if (ibdbengine.equalsIgnoreCase("mysql")) {
                     if (params.getOffset() > 0) {
@@ -646,11 +701,17 @@
         }
         params.setEndDate(endDate.getTime());
         params.setStartDate(startDate.getTime());
+        List<String> dailyTableNames = this.getDailyTablesList(params, connection);
+        for (String tableName : dailyTableNames) {
+            SGMSUtil.debugOut((Object)("DefaultDataHandler.buildInnerSqls(): Union for daily table: " + tableName), 5);
+            this.updateSqlQueryBuilder(sqls, tableName, section, filters, params, multiDay);
+        }
         if (isSyslogSchemaSerial) {
             try {
                 String rawTableName;
                 boolean previousDateTableExists;
-                String tableName = "syslogs._" + params.getSerialNumbers()[0] + "." + NGUtilDAO.getInstance().getTableNameForDate(params.getStartDate());
+                String tableName;
+                tableName = "syslogs._" + params.getSerialNumbers()[0] + "." + NGUtilDAO.getInstance().getTableNameForDate(params.getStartDate());
                 Connection sgmsConn = DatabaseService.getConnection();
                 PreparedStatement stmt = sgmsConn.prepareStatement("SELECT last_summarized from " + DataBaseConnectionPool.getTablePrefix() + "vpng_serial_summary_status where table_name = ?");
                 stmt.setString(1, tableName);
@@ -691,7 +752,7 @@
 
     private void updateSqlQueryBuilder(QueryBuilder[] sqls, String tableName, Section section, List<Filter> filters, ReportParams params, boolean multiDay) {
         params.setParam("TABLE_NAME", tableName);
-        QueryBuilder[] singleTableSql = new QueryBuilder[]{this.buildCountSql(section.getColumns(), filters, section.getReportType().getFilters(), params, true), this.buildSqlQuery(section.getColumns(), filters, params, false, true, section.getReportType().getFilters(), false, multiDay)};
+        QueryBuilder[] singleTableSql = new QueryBuilder[]{this.buildCountSql(section.getColumns(), filters, section.getReportType().getFilters(), params, true), this.buildSqlQuery(section, filters, params, false, true, section.getReportType().getFilters(), false, multiDay)};
         if (sqls[0].length() > 0) {
             sqls[0].append(" UNION ALL ");
         }
@@ -728,9 +789,10 @@
         return result;
     }
 
-    protected QueryBuilder buildSqlQuery(List<SectionColumn> sectionColumns, List<Filter> filters, ReportParams params, boolean addLimit, boolean isGeneric, List<Filter> impliedFilters, boolean addOrder, boolean multiDay) {
+    protected QueryBuilder buildSqlQuery(Section section, List<Filter> filters, ReportParams params, boolean addLimit, boolean isGeneric, List<Filter> impliedFilters, boolean addOrder, boolean multiDay) {
         QueryBuilder whereClauseBuilder;
-        SGMSUtil.debugOut((Object)("DefaultDataHandler.buildSqlQuery(): entered: " + sectionColumns.toString() + ":" + filters.toString() + ":" + params.toString() + ":" + addLimit + ":" + isGeneric + ":" + impliedFilters.toString()), 1);
+        SGMSUtil.debugOut((Object)("DefaultDataHandler.buildSqlQuery(): entered: " + section.getColumns().toString() + ":" + filters.toString() + ":" + params.toString() + ":" + addLimit + ":" + isGeneric + ":" + impliedFilters.toString()), 1);
+        Vector<SectionColumn> sectionColumns = section.getColumns();
         QueryBuilder sqlBuilder = new QueryBuilder();
         StringBuilder groupClause = new StringBuilder();
         StringBuilder columns = new StringBuilder();
@@ -836,7 +898,11 @@
         }
         if (addLimit && sqlBuilder.length() > 0 && params.getLimit() > 0) {
             sqlBuilder.append(" LIMIT ");
+            if (section.getId() == 7L) {
+                sqlBuilder.append(String.valueOf(params.getLimit() + 10));
+            } else {
             sqlBuilder.append(String.valueOf(params.getLimit()));
+            }
             if (ibdbengine.equalsIgnoreCase("mysql")) {
                 if (params.getOffset() > 0) {
                     sqlBuilder.append(" offset ").append(String.valueOf(params.getOffset())).append(", ");
@@ -1037,7 +1103,7 @@
             return null;
         }
         if (time != null && column.getId() == time.getId() && convertDate) {
-            field = DefaultDataHandler.sameHour(startDate, endDate) || DefaultDataHandler.oneHourDifference(startDate, endDate) ? table + ".RT_MINUTE" : (DefaultDataHandler.sameDate(startDate, endDate) || DefaultDataHandler.oneDayDifference(startDate, endDate) ? table + ".RT_HOUR" : table + ".RT_DATE");
+            field = forceMultiday && DefaultDataHandler.sameDate(startDate, endDate) ? table + ".RT_DATE" : (DefaultDataHandler.sameHour(startDate, endDate) || DefaultDataHandler.oneHourDifference(startDate, endDate) ? table + ".RT_MINUTE" : (DefaultDataHandler.sameDate(startDate, endDate) || DefaultDataHandler.oneDayDifference(startDate, endDate) ? table + ".RT_HOUR" : table + ".RT_DATE"));
         } else if (field.startsWith("'") && field.endsWith("'")) {
             field = field.substring(1, field.length() - 1);
             field = field.replace("$$$VALUE$$$", table + ".");
@@ -1312,5 +1378,154 @@
         long hours = DefaultDataHandler.getHoursBetween(startDate, endDate);
         return hours <= 24L;
     }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     * Enabled aggressive block sorting
+     * Enabled unnecessary exception pruning
+     * Enabled aggressive exception aggregation
+     */
+    private List<String> getDailyTablesList(ReportParams params, Connection connection) {
+        ArrayList<String> dailyTableNames;
+        block11: {
+            String query = null;
+            ResultSet rs = null;
+            ArrayList<String> dailyTableDates = new ArrayList<String>();
+            dailyTableNames = new ArrayList<String>();
+            String shedulerInstance = (String)params.getParam("SCHEDULER_INSTANCE");
+            SGMSUtil.debugOut((Object)("DefaultDataHandler.getDailyTablesList() Prams Scheduler Instance= " + shedulerInstance), 1);
+            try {
+                Iterator itr;
+                query = "SELECT report_date, opt_state, table_type FROM " + DataBaseConnectionPool.getTablePrefix() + "vp_report_dates, " + DataBaseConnectionPool.getTablePrefix() + "vpng_optimization_info, " + DataBaseConnectionPool.getTablePrefix() + "gmsvpinstances WHERE id = report_date_id AND opt_state != 1 AND table_type = 1 AND gmsvpinstances.instIdentifier = '" + shedulerInstance + "' AND gmsvpinstances.serial = vpng_optimization_info.scheduler_instance";
+                SGMSUtil.debugOut((Object)("DefaultDataHandler.getDailyTablesList() Query = " + query), 1);
+                rs = SGMSUtil.executeQueryPS(query, new String[0]);
+                while (rs.next()) {
+                    dailyTableDates.add(rs.getString("report_date"));
+                }
+                if (dailyTableDates.size() > 0) {
+                    itr = dailyTableDates.iterator();
+                    while (itr.hasNext()) {
+                        dailyTableNames.add(this.getDailyTableName((String)itr.next()));
+                    }
+                }
+                itr = dailyTableNames.iterator();
+                while (itr.hasNext()) {
+                    if (DefaultDataHandler.doesDailyTableExist(connection, (String)itr.next())) continue;
+                    itr.remove();
+                }
+                Iterator iterator = dailyTableNames.iterator();
+                while (iterator.hasNext()) {
+                    if (this.doesDailyTableContainSysLogs(connection, params, (String)iterator.next())) continue;
+                    iterator.remove();
+                }
+                if (rs == null) break block11;
+            }
+            catch (Exception e) {
+                SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "doesTableExist", "DefaultDataHandler");
+                break block11;
+            }
+            DataBaseConnectionPool.freeResultSet(rs);
+            break block11;
+            finally {
+                if (rs != null) {
+                    DataBaseConnectionPool.freeResultSet(rs);
+                }
+            }
+        }
+        SGMSUtil.debugOut((Object)("DefaultDataHandler.getDailyTablesList() = " + dailyTableNames), 1);
+        return dailyTableNames;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    private boolean doesDailyTableContainSysLogs(Connection connection, ReportParams params, String tableName) {
+        Statement pstmt = null;
+        ResultSet rs = null;
+        boolean doesExist = false;
+        SimpleDateFormat dtFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+        String startDate = dtFormat.format(params.getStartDate());
+        String endDate = dtFormat.format(params.getEndDate());
+        try {
+            if (ibdbengine.equalsIgnoreCase("mysql") && tableName != null) {
+                DatabaseMetaData md2 = connection.getMetaData();
+                rs = md2.getTables("syslogs", null, tableName, null);
+                if (rs.next()) {
+                    doesExist = true;
+                }
+            } else if (ibdbengine.equalsIgnoreCase("postgres") && tableName != null && (rs = (pstmt = connection.prepareStatement("Select count(1) from " + tableName + " where rcvd_time >= '" + startDate + "' AND rcvd_time <= '" + endDate + "'")).executeQuery()).next() && rs.getInt(1) > 0) {
+                doesExist = true;
+            }
+        }
+        catch (Exception e) {
+            SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "doesTableExist", "DefaultDataHandler");
+        }
+        finally {
+            if (pstmt != null) {
+                try {
+                    pstmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "doesDailyTableContainSysLogs", "DefaultDataHandler");
+                }
+            }
+            if (rs != null) {
+                try {
+                    rs.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "doesDailyTableContainSysLogs", "DefaultDataHandler");
+                }
+            }
+        }
+        SGMSUtil.debugOut((Object)("DefaultDataHandler.doesDailyTableContainSysLogs() = " + doesExist), 5);
+        return doesExist;
+    }
+
+    private String getDailyTableName(String dt) {
+        String dailyTableName = dt.replace("-", "");
+        dailyTableName = "raw_" + dailyTableName.substring(0, 8);
+        return dailyTableName;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    public static boolean doesDailyTableExist(Connection connection, String tableName) throws SQLException {
+        Statement pstmt = null;
+        ResultSet rs = null;
+        boolean doesExist = false;
+        try {
+            if (ibdbengine.equalsIgnoreCase("mysql") && tableName != null) {
+                DatabaseMetaData md2 = connection.getMetaData();
+                rs = md2.getTables("syslogs", null, tableName, null);
+                if (rs.next()) {
+                    doesExist = true;
+                }
+            } else if (ibdbengine.equalsIgnoreCase("postgres") && tableName != null && (rs = (pstmt = connection.prepareStatement("SELECT count(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = '" + tableName.toLowerCase() + "' AND TABLE_SCHEMA = 'public'")).executeQuery()).next() && rs.getInt(1) > 0) {
+                doesExist = true;
+            }
+        }
+        finally {
+            if (pstmt != null) {
+                try {
+                    pstmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "doesDailyTableExist", "DefaultDataHandler");
+                }
+            }
+            if (rs != null) {
+                try {
+                    rs.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "doesDailyTableExist", "DefaultDataHandler");
+                }
+            }
+        }
+        SGMSUtil.debugOut((Object)("DefaultDataHandler.doesDailyTableExist() = " + doesExist), 5);
+        return doesExist;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/ng/model/ReportParams.java decompiled-9.3.9330/com/sonicwall/viewpoint/ng/model/ReportParams.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/ng/model/ReportParams.java	2023-09-08 15:13:15.227314360 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/ng/model/ReportParams.java	2023-09-08 15:14:42.061920959 -0700
@@ -57,6 +57,7 @@
     public static final String CHANGEORDER_ID_NAME = "CHANGEORDER_ID_NAME";
     public static final String WF_REPORT_TYPE = "WF_REPORT_TYPE";
     public static final String PARAMS_TABLE_NAME = "TABLE_NAME";
+    public static final String PARAMS_SCHEDULER_INSTANCE = "SCHEDULER_INSTANCE";
     protected Map<String, Object> parameterMap = new HashMap<String, Object>();
 
     public ReportParams() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/ng/util/DataUtils.java decompiled-9.3.9330/com/sonicwall/viewpoint/ng/util/DataUtils.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/ng/util/DataUtils.java	2023-09-08 15:13:15.174391809 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/ng/util/DataUtils.java	2023-09-08 15:14:42.023968342 -0700
@@ -39,7 +39,9 @@
 import java.text.NumberFormat;
 import java.text.ParseException;
 import java.text.ParsePosition;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.List;
 import java.util.Locale;
 import java.util.Map;
@@ -67,6 +69,7 @@
     private static DataUtils instance = null;
     private DataBaseConnectionPool pool = DataBaseConnectionPool.getReference();
     private ParamsManager pm = (ParamsManager)ParamsManager.getReference(this.pool);
+    public static final SimpleDateFormat formatter = new SimpleDateFormat("MMM dd, yyyy");
 
     private DataUtils() {
     }
@@ -2468,5 +2471,14 @@
         }
         return refererCell;
     }
+
+    public CellData getDateFromEpoc(String columnName, Map<String, String> row) {
+        String value = row.get(columnName);
+        long timeInMilli = (long)Integer.parseInt(value) * 24L * 60L * 60L * 1000L;
+        Date date = new Date(timeInMilli);
+        String dateStr = formatter.format(date);
+        CellData cell = new CellData(dateStr, dateStr);
+        return cell;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/scheduledreport/service/BaseEmailPackage.java decompiled-9.3.9330/com/sonicwall/viewpoint/scheduledreport/service/BaseEmailPackage.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/scheduledreport/service/BaseEmailPackage.java	2023-09-08 15:13:15.879360123 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/scheduledreport/service/BaseEmailPackage.java	2023-09-08 15:14:42.582271314 -0700
@@ -122,7 +122,7 @@
         try {
             MimeBodyPart part = new MimeBodyPart();
             part.setHeader("Content-Transfer-Encoding", "quoted-printable");
-            part.setHeader("Content-Type", "text/html; charset=utf8");
+            part.setHeader("Content-Type", "text/html; charset=\"utf-8\"");
             part.setDataHandler(new DataHandler(msg, "text/html;charset=\"UTF-8\""));
             this.partlist.addElement(part);
         }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/servlet/ArchivePageAction.java decompiled-9.3.9330/com/sonicwall/viewpoint/servlet/ArchivePageAction.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/servlet/ArchivePageAction.java	2023-09-08 15:13:14.858853584 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/servlet/ArchivePageAction.java	2023-09-08 15:14:41.779273838 -0700
@@ -9,6 +9,7 @@
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.viewpoint.common.service.InstanceMappingService;
 import com.sonicwall.viewpoint.servlet.Action;
+import com.sonicwall.viewpoint.usr.util.USRUtil;
 import com.sonicwall.viewpoint.util.FlowWSClient;
 import ipworkszip.Zip;
 import java.io.BufferedReader;
@@ -90,6 +91,7 @@
                 result.put("ok", this.loadArchives(userID, domainID, nodeID, level, isSuperAdmin, result));
                 result.put("headers", this.getHeaderInfo());
                 response.setHeader("Content-type", "application/json");
+                response.setCharacterEncoding("UTF-8");
                 response.setStatus(200);
                 PrintWriter pw = response.getWriter();
                 pw.print(result.toString());
@@ -190,13 +192,13 @@
                 }
                 JSONObject params = new JSONObject(strBuf.toString());
                 JSONArray ids = params.getJSONArray("id");
-                dbQuery.append("SELECT path FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("vpusr_report_archives ");
+                dbQuery.append("SELECT path, id FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("vpusr_report_archives ");
                 dbQuery.append("WHERE id in (");
                 for (i = 0; i < ids.length(); ++i) {
                     dbQuery.append("?,");
                 }
                 dbQuery.replace(dbQuery.length() - 1, dbQuery.length(), ")");
-                SGMSUtil.debugOut((Object)(this.getClass() + ".executeCommand(): dbQuery[download] - " + dbQuery), 4);
+                SGMSUtil.debugOut((Object)(this.getClass() + ".executeCommand(): dbQuery[download] - " + dbQuery), 3);
                 Connection dbConn = dbPool.requestConnection();
                 PreparedStatement dbStmt = dbConn.prepareStatement(dbQuery.toString());
                 for (i = 0; i < ids.length(); ++i) {
@@ -206,12 +208,13 @@
                 ArrayList<String> listFiles = new ArrayList<String>();
                 while (dbResultSet.next()) {
                     String path = SGMSUtil.decrypt(dbResultSet.getString(1));
+                    int id = dbResultSet.getInt(2);
                     SGMSUtil.debugOut((Object)(this.getClass() + ".executeCommand(): path[download] - " + path), 4);
                     String[] patharray = path.split(",");
                     if (patharray.length >= 2) {
                         if (!InstanceMappingService.getReference().getOwnSerialNumber().equalsIgnoreCase(patharray[1])) {
                             FlowWSClient wsClient = new FlowWSClient();
-                            path = wsClient.getRemoteFile(patharray);
+                            path = wsClient.getRemoteFile(patharray, id);
                             listFiles.add(path);
                             continue;
                         }
@@ -315,7 +318,7 @@
                         if (name == null) {
                             name = "On-Demand";
                         }
-                        row.put("name", name);
+                        row.put("name", USRUtil.convertStringToUTF8(name));
                         for (ARCHIVE_TABLE_COLUMN column : ARCHIVE_TABLE_COLUMN.values()) {
                             if (column == ARCHIVE_TABLE_COLUMN.path) {
                                 String pathString = SGMSUtil.decrypt(dbResultSet.getString(column.toString()));
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/servlet/FlowUSRServlet.java decompiled-9.3.9330/com/sonicwall/viewpoint/servlet/FlowUSRServlet.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/servlet/FlowUSRServlet.java	2023-09-08 15:13:14.887811206 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/servlet/FlowUSRServlet.java	2023-09-08 15:14:41.805241418 -0700
@@ -78,6 +78,7 @@
             output = obj.toString();
             SGMSUtil.logError(e1, e1.getMessage(), "doPost", "FlowUSRServlet");
         }
+        response.setCharacterEncoding("UTF-8");
         PrintWriter out = response.getWriter();
         out.write(output);
         out.close();
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/dao/ApplianceDAO.java decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/dao/ApplianceDAO.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/dao/ApplianceDAO.java	2023-09-08 15:13:15.617742987 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/dao/ApplianceDAO.java	2023-09-08 15:14:42.375529426 -0700
@@ -155,5 +155,44 @@
             }
         }
     }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    public boolean updateOptimizationInfo(String date) {
+        Connection conn = null;
+        CallableStatement cstmt = null;
+        Statement stmt = null;
+        boolean optimizationInfoTableUpdated = false;
+        try {
+            conn = DatabaseService.getConnection();
+            cstmt = conn.prepareCall("{ call vp_get_report_date_id_sp(?, ?)}");
+            cstmt.setString(1, date);
+            cstmt.registerOutParameter(2, 12);
+            cstmt.execute();
+            cstmt.close();
+            optimizationInfoTableUpdated = true;
+        }
+        catch (SQLException e) {
+            SGMSUtil.logError(e, "Error updating raw summarized status: " + e.getMessage(), "updateApplianceRawStatus", "ApplianceDAO");
+        }
+        finally {
+            try {
+                if (stmt != null) {
+                    stmt.close();
+                }
+                if (cstmt != null) {
+                    cstmt.close();
+                }
+                if (conn != null) {
+                    conn.close();
+                }
+            }
+            catch (SQLException e) {
+                SGMSUtil.logError(e, "Problem closing DB resources: " + e.getMessage(), "updateApplianceRawStatus", "ApplianceDAO");
+            }
+        }
+        return optimizationInfoTableUpdated;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/ETLProcess.java decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/ETLProcess.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/ETLProcess.java	2023-09-08 15:13:15.595775136 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/ETLProcess.java	2023-09-08 15:14:42.359549377 -0700
@@ -321,6 +321,7 @@
                             PerformanceStatUtils.uploadSummarizerMetrics(totalTime, syslogCount, 0L, 0L, ThisSummarizer.getInstance().getIPInString(), DataBaseConnectionPool.getReference());
                             totalTime = 0L;
                             syslogCount = 0L;
+                            SGMSUtil.debugOut((Object)"ETLProcess.run: Performance metrix update completed.", 2);
                         }
                         catch (SQLException sqle) {
                             SGMSUtil.debugOut("ETLProcess.run(): Error uploading performance stats: " + sqle.getMessage());
@@ -328,20 +329,24 @@
                         }
                     }
                     this.m_objViewpoinManager.syncSummarizer();
+                    SGMSUtil.debugOut((Object)"ETLProcess.run: syncSummarizer completed.", 2);
                     this.m_objViewpoinManager.loadSummarizerInfo();
+                    SGMSUtil.debugOut((Object)"ETLProcess.run: loadSummarizerInfo completed.", 2);
                     while (this.checkOptimizationInProgressStatus()) {
-                        SGMSUtil.debugOut((Object)"ETLProcess.run(): Optimization is waiting to optimize the report data so ETL will take a nap", 2);
+                        SGMSUtil.logStatus("Optimization is waiting to optimize the report data so ETL will take a nap", "run", "ETLProcess");
                         importCanStart = true;
                         Thread.sleep(60000L);
                         this.m_objViewpoinManager.syncSummarizer();
                         this.m_objViewpoinManager.loadSummarizerInfo();
                     }
+                    SGMSUtil.debugOut((Object)"ETLProcess.run: checkOptimizationInProgressStatus completed.", 2);
                     importCanStart = false;
                     while (VPSummaryDeletion.isTimeForDeletion) {
                         VPSummaryDeletion.canStartDeletion = true;
                         Thread.sleep(60000L);
-                        SGMSUtil.debugOut((Object)"Waiting for the data deletion process to complete", 3);
+                        SGMSUtil.logStatus("Waiting for the data deletion process to complete", "run", "ETLProcess");
                     }
+                    SGMSUtil.debugOut((Object)"ETLProcess.run: Time For Deletion Check completed.", 2);
                     if (!this.checkDiskSpaceAvailability()) {
                         String message = "The reporting data upload process has been suspended because not enough disk space is available. Minimum disk space required is " + this.minDiskSpaceRequired + " GB. Please free up some disk space immediately.";
                         if (lastDiskErrorReportedTime == 0L || System.currentTimeMillis() - lastDiskErrorReportedTime > 3600000L) {
@@ -352,11 +357,13 @@
                         Thread.sleep(600000L);
                         continue;
                     }
+                    SGMSUtil.debugOut((Object)"ETLProcess.run: Disk Space Availablitiy Check completed.", 2);
                     int count = 0;
                     ArrayList<Future<SummarizerTaskResult>> results = new ArrayList<Future<SummarizerTaskResult>>();
                     File[] srcFiles = syslogDir.listFiles(this.filter);
                     totalFiles = srcFiles.length;
                     if (srcFiles.length < 10000) {
+                        SGMSUtil.debugOut((Object)"ETLProcess.run: Started Sorting files based on time.", 3);
                         Arrays.sort(srcFiles, new Comparator<File>(){
 
                             @Override
@@ -378,6 +385,9 @@
                                 return ret;
                             }
                         });
+                        SGMSUtil.debugOut((Object)"ETLProcess.run: Completed Sorting files based on time.", 3);
+                    } else {
+                        SGMSUtil.debugOut((Object)"ETLProcess.run: More than 10000 files Skip sorting.", 2);
                     }
                     boolean nmmStatusFlag = this.checkNmmStatusFlag();
                     if (srcFiles != null && srcFiles.length > 0) {
@@ -523,7 +533,7 @@
                     String maxDateString = dateTimeFormat.format(maxDate.getTime());
                     conn = DatabaseService.getConnection();
                     stmt = conn.createStatement();
-                    query.append("SELECT REPORT_DATE FROM ").append("VPNG_OPTIMIZATION_INFO").append(", ").append("VP_REPORT_DATES").append(" WHERE ( OPT_STATE = ").append(7).append(" OR OPT_STATE = ").append(6).append(" OR OPT_STATE = ").append(2).append(" OR OPT_STATE = ").append(4).append(" ) AND REPORT_DATE <= '").append(currentDate).append("' AND REPORT_DATE > '").append(maxDateString).append("' AND SCHEDULER_INSTANCE = '").append(InstanceMappingService.getReference().getOwnScheduler().getSerialNumber()).append("' AND ID = REPORT_DATE_ID ORDER BY REPORT_DATE DESC");
+                    query.append("SELECT REPORT_DATE FROM ").append("VPNG_OPTIMIZATION_INFO").append(", ").append("VP_REPORT_DATES").append(" WHERE ( OPT_STATE = ").append(7).append(" OR OPT_STATE = ").append(6).append(" OR OPT_STATE = ").append(2).append(" OR OPT_STATE = ").append(4).append(" ) AND TABLE_TYPE = 0 AND REPORT_DATE <= '").append(currentDate).append("' AND REPORT_DATE > '").append(maxDateString).append("' AND SCHEDULER_INSTANCE = '").append(InstanceMappingService.getReference().getOwnScheduler().getSerialNumber()).append("' AND ID = REPORT_DATE_ID ORDER BY REPORT_DATE DESC");
                     rs = stmt.executeQuery(query.toString());
                     if (rs == null || !rs.next()) {
                         boolean bl = false;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/model/OptimizeDateDAO.java decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/model/OptimizeDateDAO.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/model/OptimizeDateDAO.java	2023-09-08 15:13:15.671664076 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/model/OptimizeDateDAO.java	2023-09-08 15:14:42.415479549 -0700
@@ -7,11 +7,13 @@
     public String date;
     public int optState;
     public int failureCount;
+    public int tableType;
 
-    public OptimizeDateDAO(String date, int optState, int failureCount) {
+    public OptimizeDateDAO(String date, int optState, int failureCount, int table_type) {
         this.date = date;
         this.optState = optState;
         this.failureCount = failureCount;
+        this.tableType = table_type;
     }
 
     public String getDate() {
@@ -37,5 +39,13 @@
     public void setFailureCount(int failureCount) {
         this.failureCount = failureCount;
     }
+
+    public int getTableType() {
+        return this.tableType;
+    }
+
+    public void setTable_type(int table_type) {
+        this.tableType = table_type;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/scheduler/DatabaseAdminTask.java decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/scheduler/DatabaseAdminTask.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/scheduler/DatabaseAdminTask.java	2023-09-08 15:13:15.649696225 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/scheduler/DatabaseAdminTask.java	2023-09-08 15:14:42.399499500 -0700
@@ -4,7 +4,9 @@
 package com.sonicwall.viewpoint.summarizedata.etl.scheduler;
 
 import com.sonicwall.sgms.util.InstanceIPAddressProvider;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.SGMSUtil;
+import com.sonicwall.sgms.util.TEAV;
 import com.sonicwall.viewpoint.common.dao.ReportingDatabaseDAO;
 import com.sonicwall.viewpoint.common.model.AbstractScheduledTask;
 import com.sonicwall.viewpoint.common.model.ReportingDatabase;
@@ -17,6 +19,8 @@
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.sql.Statement;
+import java.text.SimpleDateFormat;
+import java.util.TimeZone;
 import org.apache.commons.lang3.StringUtils;
 
 public class DatabaseAdminTask
@@ -30,7 +34,6 @@
     String dbAdminPassword = null;
     String ibdbengine = null;
     static boolean pgHbaConf = false;
-    private static final String S_STRING = "2D2624C80F73C1B77C4A091581F3AD25";
 
     @Override
     public void execute() {
@@ -46,9 +49,9 @@
                 SGMSUtil.debugOut("DatabaseAdminTask.execute(): [ERROR] Unable to get the scheduler (own) IP Address.");
             }
             this.dbUser = ConfigurationService.getEncryptedSetting("dbuser");
-            this.dbPassword = DatabaseAdminTask.getPasswordFromEncryptedString(ConfigurationService.getSetting("dbpassword"));
-            this.dbAdminPassword = SGMSUtil.decrypt(S_STRING);
-            this.ibdbengine = ConfigurationService.getSetting("ibdbengine", "mysql");
+            this.dbPassword = DatabaseAdminTask.getPasswordFromEncryptedString(TEAV.encryptTextTEA(TEAV.decryptText(ConfigurationService.getSetting("dbpassword"))));
+            this.dbAdminPassword = KeyStotreUtil.getValueFromKeystore("pg_admin_password");
+            this.ibdbengine = ConfigurationService.getSetting("ibdbengine", "postgres");
             if (this.currentConfig == null || !this.isPGUserConfigured(this.dbUser)) {
                 this.createReportingDatabase(dao);
             } else {
@@ -135,7 +138,7 @@
             SGMSUtil.debugOut("DatabaseAdminTask.isDBConfigured(): [ERROR] Unable to get the scheduler (own) IP Address.");
         }
         String user2 = ConfigurationService.getEncryptedSetting("dbuser");
-        String password = DatabaseAdminTask.getPasswordFromEncryptedString(ConfigurationService.getSetting("dbpassword"));
+        String password = DatabaseAdminTask.getPasswordFromEncryptedString(TEAV.encryptTextTEA(TEAV.decryptText(ConfigurationService.getSetting("dbpassword"))));
         if (localAddress.equals(dbConfig.getIpAddress()) && user2.length() > 0 && user2.equals(dbConfig.getDbUsername()) && password.length() > 0 && password.equals(dbConfig.getDbPassword())) {
             SGMSUtil.logStatus("Local DB Configuation is in sync", "isDBConfigured", "DatabaseAdminTask");
             return true;
@@ -258,15 +261,31 @@
                 conn = DriverManager.getConnection(url, "postgres", "");
             }
             catch (SQLException sqe) {
-                SGMSUtil.debugOut((Object)"EMPTY password failed, which means the root password was already set.", 1);
+                SGMSUtil.logStatus("EMPTY password failed, which means the root password was already set.", "createPostgresDatabase", "DatabaseAdminTask");
+                SGMSUtil.debugOut((Object)("DatabaseAdminTask.createPostgresDatabase : EMPTY password failed : " + sqe.getMessage()), 1);
                 try {
-                    conn = DriverManager.getConnection(url, "postgres", DatabaseAdminTask.getPasswordFromEncryptedString(S_STRING));
+                    String password = KeyStotreUtil.getValueFromKeystore("pg_admin_password");
+                    conn = DriverManager.getConnection(url, "postgres", password);
                 }
                 catch (SQLException e) {
-                    SGMSUtil.debugOut((Object)"DEFAULT password failed, which means the root password was already set.", 1);
-                    SGMSUtil.logError(sqe, sqe.getMessage(), "createPostgresDatabase", "DatabaseAdminTask");
+                    SGMSUtil.debugOut((Object)("DatabaseAdminTask.createPostgresDatabase : Latest Default password failed : " + e.getMessage()), 1);
+                    SGMSUtil.logStatus("Latest default password failed, which means the root password can be old password.", "createPostgresDatabase", "DatabaseAdminTask");
+                    try {
+                        String password = KeyStotreUtil.getValueFromKeystore("pg_admin_password_old");
+                        conn = DriverManager.getConnection(url, "postgres", password);
+                    }
+                    catch (SQLException e1) {
+                        SGMSUtil.debugOut((Object)("DatabaseAdminTask.createPostgresDatabase : Old Default password failed : " + e1.getMessage()), 1);
+                        SGMSUtil.logStatus("Old default password failed, which means the root password can be dbAdminPassword.", "createPostgresDatabase", "DatabaseAdminTask");
+                        try {
                     conn = DriverManager.getConnection(url, "postgres", this.dbAdminPassword);
                 }
+                        catch (SQLException e2) {
+                            SGMSUtil.printStackTrace(e2);
+                            SGMSUtil.logError(e2, e2.getMessage(), "createPostgresDatabase", "DatabaseAdminTask");
+                        }
+                    }
+                }
             }
             stmt = conn.createStatement();
             try {
@@ -362,7 +381,7 @@
                 Class.forName("com.mysql.jdbc.Driver").newInstance();
             }
             String url = "jdbc:postgresql://localhost:5029/";
-            conn = DriverManager.getConnection(url, "postgres", SGMSUtil.decrypt(S_STRING));
+            conn = DriverManager.getConnection(url, "postgres", KeyStotreUtil.getValueFromKeystore("pg_admin_password"));
             stmt = conn.createStatement();
             if (!this.dbUser.equals(this.currentConfig.getDbUsername())) {
                 SGMSUtil.debugOut((Object)"DatabaseAdminTask.verifyPostgresDatabase(): Changing db username", 2);
@@ -375,7 +394,7 @@
                 }
                 this.currentConfig.setDbUsername(this.dbUser);
             }
-            if (!this.dbPassword.equals(DatabaseAdminTask.getPasswordFromEncryptedString(this.currentConfig.getDbPassword()))) {
+            if (!this.dbPassword.equals(DatabaseAdminTask.getPasswordFromEncryptedString(TEAV.encryptTextTEA(TEAV.decryptText(this.currentConfig.getDbPassword()))))) {
                 SGMSUtil.debugOut((Object)"DatabaseAdminTask.verifyPostgresDatabase(): Changing db user password", 2);
                 stmt.executeUpdate("ALTER USER " + this.dbUser + " WITH PASSWORD '" + this.dbPassword + "'");
                 this.currentConfig.setDbPassword(this.dbPassword);
@@ -426,7 +445,7 @@
         try {
             Class.forName("org.mariadb.jdbc.Driver").newInstance();
             String url = "jdbc:mysql://localhost:5029/";
-            conn = DriverManager.getConnection(url, "root", SGMSUtil.decrypt(S_STRING));
+            conn = DriverManager.getConnection(url, "root", KeyStotreUtil.getValueFromKeystore("pg_admin_password"));
             stmt = conn.createStatement();
             if (!this.dbUser.equals(this.currentConfig.getDbUsername())) {
                 SGMSUtil.debugOut((Object)"DatabaseAdminTask.verifyMysqlDatabase(): Changing db username", 2);
@@ -491,7 +510,12 @@
     }
 
     public static void main(String[] args) {
-        System.out.println(DatabaseAdminTask.getPasswordFromEncryptedString(S_STRING));
+        System.out.println(KeyStotreUtil.getValueFromKeystore("pg_admin_password"));
+    }
+
+    static {
+        KeyStotreUtil.df = new SimpleDateFormat("MMYYYYddHHmm");
+        KeyStotreUtil.df.setTimeZone(TimeZone.getTimeZone("IST"));
     }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/scheduler/DataOptimizerTask.java decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/scheduler/DataOptimizerTask.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/scheduler/DataOptimizerTask.java	2023-09-08 15:13:15.648697686 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/scheduler/DataOptimizerTask.java	2023-09-08 15:14:42.398500747 -0700
@@ -12,10 +12,12 @@
 import com.sonicwall.viewpoint.common.service.ConfigurationService;
 import com.sonicwall.viewpoint.common.service.DatabaseService;
 import com.sonicwall.viewpoint.common.service.InstanceMappingService;
+import com.sonicwall.viewpoint.ng.util.SummarizerRawTableUtil;
 import com.sonicwall.viewpoint.summarizedata.etl.ETLProcess;
 import com.sonicwall.viewpoint.summarizedata.etl.model.OptimizeDateDAO;
 import com.sonicwall.viewpoint.summarizedata.etl.scheduler.GroupSummarizerSerialTypeTask;
 import com.sonicwall.viewpoint.summarizedata.service.ThisSummarizer;
+import com.sonicwall.viewpoint.util.ViewpointUtil;
 import com.sonicwall.viewpoint.util.VpSummarizerSettings;
 import java.io.File;
 import java.io.FileOutputStream;
@@ -25,6 +27,7 @@
 import java.nio.file.Paths;
 import java.nio.file.StandardCopyOption;
 import java.sql.Connection;
+import java.sql.DatabaseMetaData;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
@@ -32,10 +35,12 @@
 import java.text.DecimalFormat;
 import java.text.ParsePosition;
 import java.text.SimpleDateFormat;
+import java.time.LocalDate;
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Date;
 import java.util.GregorianCalendar;
+import java.util.HashSet;
 import java.util.Iterator;
 import java.util.Map;
 import java.util.TreeSet;
@@ -94,7 +99,7 @@
      */
     @Override
     public void execute() {
-        block44: {
+        block54: {
             try {
                 boolean schemaTypeIsSerial;
                 if (firstRun) {
@@ -172,42 +177,102 @@
                 if (schemaTypeIsSerial) {
                     new GroupSummarizerSerialTypeTask().execute();
                     this.taskRunning = false;
-                    break block44;
+                    break block54;
                 }
                 if (this.schemaName == null) {
                     this.getSchemaName();
                 }
                 try {
-                    OptimizeDateDAO optimizeDateDAO = null;
+                    block57: {
+                        block58: {
+                            boolean dailyTableExist;
+                            OptimizeDateDAO optimizeDateDAO;
+                            block55: {
+                                long rows;
+                                block56: {
+                                    optimizeDateDAO = null;
                     optimizeDateDAO = this.getIntermediateDateToOptimize();
-                    if (optimizeDateDAO != null) {
-                        long rows = this.getRowsForDate(optimizeDateDAO.getDate());
+                                    dailyTableExist = false;
+                                    if (optimizeDateDAO == null) break block55;
+                                    SGMSUtil.debugOut((Object)"DataOptimizerTask.execute(): Execution for Intermidiate date : ", 1);
+                                    if (optimizeDateDAO.getTableType() == 0) {
+                                        rows = this.getRowsForDateFromMonthly(optimizeDateDAO.getDate());
+                                    } else {
+                                        if (DataOptimizerTask.IsDailyTableExist(optimizeDateDAO.getDate())) {
+                                            rows = this.getRowsForDateFromDaily(optimizeDateDAO.getDate());
+                                            dailyTableExist = true;
+                                        } else {
+                                            rows = 0L;
+                                            dailyTableExist = false;
+                                            SGMSUtil.debugOut((Object)"DataOptimizerTask.execute(): getIntermediateDateToOptimize Daily table not exist, Setting rows count as 0", 1);
+                                        }
+                                        SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): getIntermediateDateToOptimize: DailyTableExist flag:: " + dailyTableExist), 1);
+                                    }
                         if (optimizeDateDAO.getOptState() >= 2) {
                             this.handleOptimizeState(optimizeDateDAO, rows);
                         }
-                        if (rows == 0L) {
+                                    if (rows != 0L) break block56;
+                                    if (optimizeDateDAO.getTableType() == 0) {
+                                        this.setFlagToState(optimizeDateDAO.getDate(), 1);
+                                        SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): @MONTHLY_TABLE_OPTIMIZATIO Inside Get Intermidiate date, Setting Opt State as 1 " + optimizeDateDAO.getDate()), 1);
+                                    }
                             this.setFlagToState(optimizeDateDAO.getDate(), 1);
+                                    SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): @DAILY_TABLE_OPTIMIZATION Inside Get Intermidiate date, Setting Opt State as 1 " + optimizeDateDAO.getDate()), 1);
+                                    boolean dropDailyTable = Boolean.parseBoolean(this.sgmsUtil.getCosmoParam("OPTIMIZATION_DROP_DAILY_TABLE", "true"));
+                                    if (!dailyTableExist) break block57;
+                                    if (dropDailyTable) {
+                                        boolean dailyTableDeleted = this.dropDailyTableIfRowsCountZero(optimizeDateDAO.getDate());
+                                        SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): @DAILY_TABLE_OPTIMIZATIO dailyTableDeleted having rows count 0: " + dailyTableDeleted), 1);
+                                    }
+                                    break block58;
                         }
                         if (rows == -1L) {
-                            SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): Not able to get rows count " + optimizeDateDAO.getDate()), 5);
+                                    SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): Not able to get rows count " + optimizeDateDAO.getDate()), 1);
                         }
                         this.setFlagToState(optimizeDateDAO.getDate(), 0);
+                                SGMSUtil.debugOut((Object)"DataOptimizerTask.execute(): Inside Get Intermidiate date, Setting Opt State as 0: ", 1);
                     }
                     optimizeDateDAO = this.getDateToOptimize();
                     if (optimizeDateDAO != null) {
-                        int count = this.getSerialCount(optimizeDateDAO.getDate());
-                        if (count == 1 || count == 0) {
-                            SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): Syslogs are receiving from " + count + " appliance. Changing state to optimize for date " + optimizeDateDAO.getDate()), 2);
+                                SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): Execution for : " + optimizeDateDAO.getDate()), 1);
+                                int count = 0;
+                                if (optimizeDateDAO.getTableType() == 0) {
+                                    count = this.getSerialCountMonthly(optimizeDateDAO.getDate());
+                                }
+                                if (optimizeDateDAO.getTableType() == 0 && count <= 1) {
+                                    SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): Syslogs are receiving from " + count + " appliance. Changing state to optimize for date " + optimizeDateDAO.getDate()), 1);
                             this.setFlagToState(optimizeDateDAO.getDate(), 1);
                             this.updateStats(optimizeDateDAO.getDate(), 0L, 0L, 0L, optimizeDateDAO.getFailureCount());
                             this.updateOptimizerStatus("0");
                         }
-                        if (count > 1) {
-                            long rows = this.getRowsForDate(optimizeDateDAO.getDate());
+                                long rows = 0L;
+                                if (optimizeDateDAO.getTableType() == 0) {
+                                    rows = this.getRowsForDateFromMonthly(optimizeDateDAO.getDate());
+                                } else {
+                                    if (DataOptimizerTask.IsDailyTableExist(optimizeDateDAO.getDate())) {
+                                        rows = this.getRowsForDateFromDaily(optimizeDateDAO.getDate());
+                                        dailyTableExist = true;
+                                    } else {
+                                        SGMSUtil.debugOut((Object)"DataOptimizerTask.execute(): getDateToOptimize: Daily table not exist, Setting rows count as 0", 1);
+                                        rows = 0L;
+                                        dailyTableExist = false;
+                                    }
+                                    SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): getDateToOptimize: DailyTableExist flag:: " + dailyTableExist), 1);
+                                }
                             if (rows == 0L && optimizeDateDAO.getOptState() == 0) {
                                 if (optimizeDateDAO.getDate() != null) {
-                                    SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): No data found to optimize. Changing state to optimize for date " + optimizeDateDAO.getDate()), 5);
+                                        if (optimizeDateDAO.getTableType() == 0) {
+                                            SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): No data found to optimize. Changing state to optimize for date " + optimizeDateDAO.getDate()), 1);
+                                            this.setFlagToState(optimizeDateDAO.getDate(), 1);
+                                        } else {
                                     this.setFlagToState(optimizeDateDAO.getDate(), 1);
+                                            SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): @DAILY_TABLE_OPTIMIZATION No data found to optimize. Setting Opt State as 1 " + optimizeDateDAO.getDate()), 1);
+                                            boolean dropDailyTable = Boolean.parseBoolean(this.sgmsUtil.getCosmoParam("OPTIMIZATION_DROP_DAILY_TABLE", "true"));
+                                            if (dailyTableExist && dropDailyTable) {
+                                                boolean dailyTableDeleted = this.dropDailyTableIfRowsCountZero(optimizeDateDAO.getDate());
+                                                SGMSUtil.debugOut((Object)("DataOptimizerTask.execute(): @DAILY_TABLE_OPTIMIZATIO No data found to optimize dailyTableDeleted: " + dailyTableDeleted), 1);
+                                            }
+                                        }
                                 } else {
                                     SGMSUtil.debugOut("DataOptimizerTask.execute(): No data found to optimize.");
                                 }
@@ -241,6 +306,7 @@
                         }
                     }
                 }
+                }
                 catch (Exception e) {
                     SGMSUtil.logError(e, "Error optimizing data: " + e.getMessage(), "execute", "DataOptimizerTask");
                 }
@@ -257,6 +323,49 @@
         }
     }
 
+    private boolean dropDailyTableIfRowsCountZero(String date) throws SQLException {
+        GregorianCalendar cal = new GregorianCalendar();
+        SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+        cal.setTime(dateTimeFormat.parse(date, new ParsePosition(0)));
+        String dailyTableName = DataOptimizerTask.getDailyTableName(cal);
+        Connection conn = null;
+        Statement stmt = null;
+        String query = null;
+        boolean dailyTableDeleted = false;
+        try {
+            conn = DatabaseService.getLocalConnection();
+            stmt = conn.createStatement();
+            query = "DROP TABLE " + dailyTableName;
+            stmt.execute(query);
+            stmt.close();
+            SGMSUtil.debugOut((Object)("DataOptimizerTask.dropDailyTableIfRowsCountZero(): Daily Table: " + dailyTableName + " dropped successfully"), 2);
+            dailyTableDeleted = true;
+        }
+        catch (Exception e) {
+            SGMSUtil.logError(e, "Error running query: " + query, "dropDailyTable", "DataOptimizerTask");
+            throw e;
+        }
+        finally {
+            if (stmt != null) {
+                try {
+                    stmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.dropDailyTable() Error closing resources: " + e.getMessage());
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.dropDailyTable() Error closing resources: " + e.getMessage());
+                }
+            }
+        }
+        return dailyTableDeleted;
+    }
+
     private boolean checkOptimizationWaitInterval(String date) {
         if (date == null) {
             return false;
@@ -279,7 +388,8 @@
     }
 
     public void handleOptimizeState(OptimizeDateDAO optimizeDateDAO, long rows) throws SQLException {
-        SGMSUtil.debugOut((Object)("DataOptimizerTask.handleOptimizeState(): INVALID STATE FOR OPTIMIZATION " + optimizeDateDAO.getDate()), 5);
+        SGMSUtil.debugOut((Object)("DataOptimizerTask.handleOptimizeState(): Optimization Strting for date: " + optimizeDateDAO.getDate()), 1);
+        SGMSUtil.debugOut((Object)("DataOptimizerTask.handleOptimizeState(): Table Optimization type: " + optimizeDateDAO.getTableType() + " Optimization State: " + optimizeDateDAO.getOptState()), 1);
         long importTime = 0L;
         switch (optimizeDateDAO.getOptState()) {
             case 0: 
@@ -295,20 +405,52 @@
             case 6: {
                 this.updateOptimizerStatus("1");
                 this.updateConfiguration(rows, false);
+                if (optimizeDateDAO.getTableType() == 0) {
                 String tmpTableName = this.getExportTableName(optimizeDateDAO);
                 if (this.checkEpochDayTableExists(tmpTableName)) {
-                    importTime = this.loadDataFromTable(optimizeDateDAO, tmpTableName, rows);
+                        importTime = this.loadDataFromMonthly(optimizeDateDAO, tmpTableName, rows);
                     this.setFlagToState(optimizeDateDAO.getDate(), 1);
                     this.deleteExportTable(tmpTableName);
-                    long updatedRows = this.getRowsForDate(optimizeDateDAO.getDate());
+                        long updatedRows = this.getRowsForDateFromMonthly(optimizeDateDAO.getDate());
                     this.updateStats(optimizeDateDAO.getDate(), updatedRows, 0L, importTime, optimizeDateDAO.getFailureCount());
                     break;
                 }
                 this.processOptimization(optimizeDateDAO, rows);
                 break;
             }
+                GregorianCalendar cal = new GregorianCalendar();
+                SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                cal.setTime(dateTimeFormat.parse(optimizeDateDAO.getDate(), new ParsePosition(0)));
+                String dailyTableName = DataOptimizerTask.getDailyTableName(cal);
+                ArrayList<String> exportTableList = new ArrayList<String>();
+                boolean dailyTableDatesAreInSameMonth = this.checkDailyTableDatesAreInSameMonth(dailyTableName);
+                String tmpTableName = null;
+                if (!dailyTableDatesAreInSameMonth) {
+                    ArrayList<Date> dates = this.getDailyTableDates(dailyTableName);
+                    for (Date date : dates) {
+                        tmpTableName = this.getExportTableName(date);
+                        if (!this.checkEpochDayTableExists(tmpTableName)) {
+                            SGMSUtil.debugOut((Object)("DataOptimizerTask.handleOptimizeState(): Skipping Import for " + tmpTableName + " as it does not exist."), 1);
+                            continue;
+                        }
+                        exportTableList.add(tmpTableName);
+                    }
+                } else {
+                    tmpTableName = this.getExportTableName(optimizeDateDAO);
+                    if (this.checkEpochDayTableExists(tmpTableName)) {
+                        exportTableList.add(tmpTableName);
+                    }
+                }
+                SGMSUtil.debugOut((Object)("DataOptimizerTask.handleOptimizeState(): Exported file available: " + exportTableList.toArray().toString()), 1);
+                if (!exportTableList.isEmpty()) {
+                    importTime = this.loadDataFromDaily(optimizeDateDAO, tmpTableName, rows, dailyTableDatesAreInSameMonth, dailyTableName, -1L);
+                    break;
+                }
+                this.processOptimization(optimizeDateDAO, rows);
+                break;
+            }
             default: {
-                SGMSUtil.debugOut((Object)("DataOptimizerTask.handleOptimizeState(): INVALID STATE FOR OPTIMIZATION " + optimizeDateDAO.getDate()), 5);
+                SGMSUtil.debugOut((Object)("DataOptimizerTask.handleOptimizeState(): INVALID STATE FOR OPTIMIZATION " + optimizeDateDAO.getDate()), 1);
             }
         }
     }
@@ -318,6 +460,13 @@
         return "raw_" + epochDate;
     }
 
+    public String getExportTableName(Date date) {
+        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+        String dateString = dateFormat.format(date);
+        long epochDate = DataOptimizerTask.getEpochDayForDate(dateString);
+        return "raw_" + epochDate;
+    }
+
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
@@ -372,21 +521,84 @@
         String summarizerIP = ThisSummarizer.getInstance().getIPInString();
         this.logsManager.addNewLogFYI("", "System", "Starting data optimization task for date " + optimizeDateDAO.getDate(), summarizerIP, "");
         this.sgmsUtil.setCosmoParam("optStartTime", String.valueOf(Calendar.getInstance().getTimeInMillis()));
+        boolean dailyTableDatesAreInSameMonth = false;
+        ArrayList<String> exportTableList = new ArrayList<String>();
         String tempTableName = this.getExportTableName(optimizeDateDAO);
         if (this.checkEpochDayTableExists(tempTableName)) {
             this.deleteExportTable(tempTableName);
         }
         long exportTime = 0L;
         long importTime = 0L;
-        exportTime = this.exportDataForDate(optimizeDateDAO, tempTableName);
-        importTime = this.loadDataFromTable(optimizeDateDAO, tempTableName, rows);
-        this.setFlagToState(optimizeDateDAO.getDate(), 1);
+        if (optimizeDateDAO.getTableType() == 0) {
+            exportTime = this.exportDataFromMonthly(optimizeDateDAO, tempTableName);
+            importTime = this.loadDataFromMonthly(optimizeDateDAO, tempTableName, rows);
+        } else {
+            GregorianCalendar cal = new GregorianCalendar();
+            SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+            cal.setTime(dateTimeFormat.parse(optimizeDateDAO.getDate(), new ParsePosition(0)));
+            String dailyTableName = DataOptimizerTask.getDailyTableName(cal);
+            dailyTableDatesAreInSameMonth = this.checkDailyTableDatesAreInSameMonth(dailyTableName);
+            if (!dailyTableDatesAreInSameMonth) {
+                ArrayList<Date> dates = this.getDailyTableDates(dailyTableName);
+                for (Date date : dates) {
+                    tempTableName = this.getExportTableName(date);
+                    exportTableList.add(tempTableName);
+                    if (!this.checkEpochDayTableExists(tempTableName)) continue;
         this.deleteExportTable(tempTableName);
-        this.updateStats(optimizeDateDAO.getDate(), rows, exportTime, importTime, optimizeDateDAO.getFailureCount());
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.processOptimization(): Delete Exported Table Before starting Export : Export Table Name: " + tempTableName), 1);
+                }
+            }
+            SGMSUtil.debugOut((Object)("DataOptimizerTask.processOptimization(): DailyTableDatesAreInSameMonth: " + dailyTableDatesAreInSameMonth + " Daily Table Name: " + dailyTableName), 1);
+            exportTime = this.exportDataFromDaily(optimizeDateDAO, tempTableName, dailyTableDatesAreInSameMonth, dailyTableName);
+            importTime = this.loadDataFromDaily(optimizeDateDAO, tempTableName, rows, dailyTableDatesAreInSameMonth, dailyTableName, exportTime);
+        }
         DatabaseService.clearLocalPool();
+        boolean restartDB = Boolean.parseBoolean(this.sgmsUtil.getCosmoParam("OPTIMIZATION_RESTART_RDB", "false"));
+        SGMSUtil.debugOut((Object)("DataOptimizerTask.processOptimization() : Reporting Database Service restartDB Flag : " + restartDB), 1);
+        if (restartDB) {
         boolean response = ApplianceUtil.modifyServices(new String[]{ApplianceUtil.REPORT_DATABASE_SERVICE}, ApplianceUtil.START_SERVICE, ApplianceUtil.FROM_SUMMARIZER_CONTEXT);
         SGMSUtil.debugOut((Object)("DataOptimizerTask.processOptimization() : Reporting Database Service restart action status : " + response), 1);
     }
+    }
+
+    private boolean dropDailyTable(String dailyTableName) throws SQLException {
+        Connection conn = null;
+        Statement stmt = null;
+        String query = null;
+        boolean dailyTableDeleted = false;
+        try {
+            conn = DatabaseService.getLocalConnection();
+            stmt = conn.createStatement();
+            query = "DROP TABLE " + dailyTableName;
+            stmt.execute(query);
+            stmt.close();
+            SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): Daily Table: " + dailyTableName + " dropped successfully"), 2);
+            dailyTableDeleted = true;
+        }
+        catch (Exception e) {
+            SGMSUtil.logError(e, "Error running query: " + query, "dropDailyTable", "DataOptimizerTask");
+            throw e;
+        }
+        finally {
+            if (stmt != null) {
+                try {
+                    stmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.dropDailyTable() Error closing resources: " + e.getMessage());
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.dropDailyTable() Error closing resources: " + e.getMessage());
+                }
+            }
+        }
+        return dailyTableDeleted;
+    }
 
     private boolean checkDiskSpaceAvailability(long rows) {
         double available;
@@ -472,13 +684,14 @@
             String maxDateString = dateTimeFormat.format(maxDate.getTime());
             conn = DatabaseService.getConnection();
             stmt = conn.createStatement();
-            query = "SELECT REPORT_DATE , OPT_STATE, FAILURE_COUNT FROM VPNG_OPTIMIZATION_INFO, VP_REPORT_DATES WHERE OPT_STATE != 1 AND REPORT_DATE < '" + currentDate + "' AND REPORT_DATE > '" + maxDateString + "' AND SCHEDULER_INSTANCE = '" + InstanceMappingService.getReference().getOwnScheduler().getSerialNumber() + "' AND ID = REPORT_DATE_ID ORDER BY REPORT_DATE DESC";
+            query = "SELECT REPORT_DATE , OPT_STATE, FAILURE_COUNT, TABLE_TYPE FROM VPNG_OPTIMIZATION_INFO, VP_REPORT_DATES WHERE OPT_STATE != 1 AND REPORT_DATE < '" + currentDate + "' AND REPORT_DATE > '" + maxDateString + "' AND SCHEDULER_INSTANCE = '" + InstanceMappingService.getReference().getOwnScheduler().getSerialNumber() + "' AND ID = REPORT_DATE_ID ORDER BY REPORT_DATE DESC";
             rs = stmt.executeQuery(query);
             if (rs != null && rs.next()) {
                 date = rs.getString(1);
                 int optState = rs.getInt(2);
                 int failureCount = rs.getInt(3);
-                optimizeDateDAO = new OptimizeDateDAO(date, optState, failureCount);
+                int table_type = rs.getInt(4);
+                optimizeDateDAO = new OptimizeDateDAO(date, optState, failureCount, table_type);
             }
         }
         catch (SQLException e) {
@@ -510,7 +723,7 @@
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
-    private long getRowsForDate(String date) {
+    private long getRowsForDateFromMonthly(String date) {
         if (date == null) {
             return -1L;
         }
@@ -534,7 +747,7 @@
             }
         }
         catch (SQLException e) {
-            SGMSUtil.logError(e, "Error running query: " + query, "getRowsForDate", "DataOptimizerTask");
+            SGMSUtil.logError(e, "Error running query: " + query, "getRowsForDateFromMonthly", "DataOptimizerTask");
         }
         finally {
             if (stmt != null) {
@@ -542,7 +755,7 @@
                     stmt.close();
                 }
                 catch (SQLException e) {
-                    SGMSUtil.debugOut("DataOptimizerTask.getRowsForDate() Error closing resources: " + e.getMessage());
+                    SGMSUtil.debugOut("DataOptimizerTask.getRowsForDateFromMonthly() Error closing resources: " + e.getMessage());
                     SGMSUtil.printStackTrace(e);
                 }
             }
@@ -551,7 +764,58 @@
                     conn.close();
                 }
                 catch (SQLException e) {
-                    SGMSUtil.debugOut("DataOptimizerTask.getRowsForDate() Error closing resources: " + e.getMessage());
+                    SGMSUtil.debugOut("DataOptimizerTask.getRowsForDateFromMonthly() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+        }
+        return rows;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    private long getRowsForDateFromDaily(String date) {
+        if (date == null) {
+            return -1L;
+        }
+        long rows = -1L;
+        Connection conn = null;
+        Statement stmt = null;
+        ResultSet rs = null;
+        String query = null;
+        try {
+            GregorianCalendar cal = new GregorianCalendar();
+            SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+            cal.setTime(dateTimeFormat.parse(date, new ParsePosition(0)));
+            String tableName = DataOptimizerTask.getDailyTableName(cal);
+            conn = DatabaseService.getLocalConnection();
+            stmt = conn.createStatement();
+            query = "SELECT COUNT(1) FROM " + tableName;
+            rs = stmt.executeQuery(query);
+            if (rs != null && rs.next()) {
+                rows = rs.getLong(1);
+            }
+        }
+        catch (SQLException e) {
+            SGMSUtil.logError(e, "Error running query: " + query, "getRowsForDateFromDaily", "DataOptimizerTask");
+        }
+        finally {
+            if (stmt != null) {
+                try {
+                    stmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.getRowsForDateFromDaily() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.getRowsForDateFromDaily() Error closing resources: " + e.getMessage());
                     SGMSUtil.printStackTrace(e);
                 }
             }
@@ -566,7 +830,7 @@
         Connection conn = null;
         Statement stmt = null;
         String query = null;
-        SGMSUtil.debugOut((Object)("DataOptimizerTask.setFlagToState() CHANGING state to " + state + " for date " + date), 3);
+        SGMSUtil.debugOut((Object)("DataOptimizerTask.setFlagToState() CHANGING state to " + state + " for date " + date), 1);
         try {
             SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
             SimpleDateFormat dateOnlyFormat = new SimpleDateFormat("yyyy-MM-dd");
@@ -610,7 +874,7 @@
             SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
             SimpleDateFormat dateOnlyFormat = new SimpleDateFormat("yyyy-MM-dd");
             String formattedDate = dateOnlyFormat.format(dateTimeFormat.parse(date, new ParsePosition(0)));
-            query = "UPDATE VPNG_OPTIMIZATION_INFO SET OPT_ROWS = " + rows + ", EXPORT_DURATION = " + exportTime + ", IMPORT_DURATION = " + importTime + " , FAILURE_COUNT = " + failureCount + " WHERE SCHEDULER_INSTANCE = '" + InstanceMappingService.getReference().getOwnScheduler().getSerialNumber() + "' AND REPORT_DATE_ID IN (SELECT ID FROM VP_REPORT_DATES WHERE REPORT_DATE = '" + formattedDate + "')";
+            query = "UPDATE VPNG_OPTIMIZATION_INFO SET OPT_ROWS = " + rows + ", " + (exportTime > 0L ? "EXPORT_DURATION = " + exportTime + ", " : "") + "IMPORT_DURATION = " + importTime + " , FAILURE_COUNT = " + failureCount + " WHERE SCHEDULER_INSTANCE = '" + InstanceMappingService.getReference().getOwnScheduler().getSerialNumber() + "' AND REPORT_DATE_ID IN (SELECT ID FROM VP_REPORT_DATES WHERE REPORT_DATE = '" + formattedDate + "')";
             conn = DatabaseService.getConnection();
             stmt = conn.createStatement();
             stmt.execute(query);
@@ -642,13 +906,14 @@
         this.logsManager.addNewLogFYI("", "System", "Finished data optimization task for date " + date, summarizerIP, "");
     }
 
-    private long exportDataForDate(OptimizeDateDAO optimizeDateDAO, String tmpTableName) throws SQLException {
+    private long exportDataFromMonthly(OptimizeDateDAO optimizeDateDAO, String tmpTableName) throws SQLException {
         Connection conn = null;
         Statement stmt = null;
         String query = null;
         long st = System.currentTimeMillis();
         long epochDate = 0L;
         this.setFlagToState(optimizeDateDAO.getDate(), 2);
+        SGMSUtil.debugOut((Object)"DataOptimizerTask.exportDataFromMonthly() CHANGING state to 2", 1);
         try {
             GregorianCalendar cal = new GregorianCalendar();
             SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
@@ -669,6 +934,7 @@
             stmt.execute(query);
             stmt.close();
             this.setFlagToState(optimizeDateDAO.getDate(), 3);
+            SGMSUtil.debugOut((Object)"DataOptimizerTask.exportDataFromMonthly() CHANGING state to 3", 1);
             long l = System.currentTimeMillis() - st;
             return l;
         }
@@ -699,7 +965,7 @@
         }
     }
 
-    private long loadDataFromTable(OptimizeDateDAO optimizeDateDAO, String tmpTableName, long rows) throws SQLException {
+    private long loadDataFromMonthly(OptimizeDateDAO optimizeDateDAO, String tmpTableName, long rows) throws SQLException {
         Connection conn = null;
         Statement stmt = null;
         String query = null;
@@ -740,7 +1006,7 @@
                     Thread.sleep(30000L);
                 }
                 catch (InterruptedException e) {
-                    SGMSUtil.debugOut("DataOptimizerTask.loadDataFromFile() interrupting thread sleep: " + e.getMessage());
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromFile() interrupting thread sleep: " + e.getMessage()), 2);
                 }
             }
             SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromFile() starting import ", 2);
@@ -757,11 +1023,11 @@
                 File rejectFile = new File(fileName.replaceFirst(this.optimizationFileExtension, "_reject_file" + this.rejectFileExtension));
                 if (rejectFile.exists()) {
                     Files.move(rejectFile.toPath(), new File(this.syslogDir + File.separator + "badSyslogs" + File.separator + rejectFile.getName()).toPath(), StandardCopyOption.REPLACE_EXISTING);
-                    SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromFile(): Moved reject file to badSyslogs directory successfully", 4);
+                    SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromFile(): Moved reject file to badSyslogs directory successfully", 2);
                 }
             }
             catch (IOException ioe) {
-                SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromFile(): Failed to move reject file to badSyslogs directory", 4);
+                SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromFile(): Failed to move reject file to badSyslogs directory", 2);
             }
         }
         catch (Exception e) {
@@ -790,6 +1056,271 @@
         return timeTook;
     }
 
+    private long exportDataFromDaily(OptimizeDateDAO optimizeDateDAO, String tmpTableName, boolean dailyTableDatesAreInSameMonth, String dailyTableName) throws SQLException {
+        SGMSUtil.debugOut((Object)"DataOptimizerTask.exportDataFromDaily(): Inside Method exportDataFromDaily()", 1);
+        Connection conn = null;
+        Statement stmt = null;
+        String query = null;
+        long st = System.currentTimeMillis();
+        long epochDate = 0L;
+        this.setFlagToState(optimizeDateDAO.getDate(), 2);
+        SGMSUtil.debugOut((Object)"DataOptimizerTask.exportDataFromDaily(): Inside Method exportDataFromDaily() Changing Opt State STATE_EXPORT_IN_PROGRESS", 1);
+        try {
+            GregorianCalendar cal = new GregorianCalendar();
+            SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+            cal.setTime(dateTimeFormat.parse(optimizeDateDAO.getDate(), new ParsePosition(0)));
+            epochDate = DataOptimizerTask.getEpochDayForDate(cal);
+            conn = DatabaseService.getLocalConnection();
+            if (dailyTableDatesAreInSameMonth) {
+                SGMSUtil.debugOut((Object)("DataOptimizerTask.exportDataFromDaily(): DailyTableDatesAreInSameMonth " + dailyTableDatesAreInSameMonth + " Daily Table: " + dailyTableName + " Table data export into: " + tmpTableName), 1);
+                if (this.ibdbengine.equalsIgnoreCase("mysql")) {
+                    stmt = conn.createStatement();
+                    query = "SET @bh_dataformat='txt_variable'";
+                    stmt.execute(query);
+                    stmt.close();
+                    query = "CREATE TABLE " + tmpTableName + " SELECT * FROM " + dailyTableName + " WHERE m NOT IN (36,38,88,346,483,524,526,930,934) ORDER BY SERIAL_INT";
+                } else if (this.ibdbengine.equalsIgnoreCase("postgres")) {
+                    query = this.sgmsUtil.getCosmoParam("optimizerLoadType", "2").equalsIgnoreCase("1") ? "CREATE TABLE " + tmpTableName + " with (engine=brighthouse) AS SELECT * FROM " + dailyTableName + " WHERE m NOT IN (36,38,88,346,483,524,526,930,934) ORDER BY SERIAL_INT" : "COPY (SELECT * FROM " + dailyTableName + " WHERE m NOT IN (36,38,88,346,483,524,526,930,934) ORDER BY SERIAL_INT) TO '" + this.workingDir + File.separator + tmpTableName + this.optimizationFileExtension + "' WITH (FORMAT CSV, delimiter '^');";
+                }
+                stmt = conn.createStatement();
+                stmt.execute(query);
+                stmt.close();
+            } else {
+                ArrayList<Date> dates = this.getDailyTableDates(dailyTableName);
+                for (Date date : dates) {
+                    tmpTableName = this.getExportTableName(date);
+                    long dailyEpochDate = 0L;
+                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    String dateString = dateFormat.format(date);
+                    dailyEpochDate = DataOptimizerTask.getEpochDayForDate(dateString);
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.exportDataFromDaily(): DailyTableDatesAreInSameMonth " + dailyTableDatesAreInSameMonth + " Daily Table: " + dailyTableName + " Table data export into: " + tmpTableName), 1);
+                    if (this.ibdbengine.equalsIgnoreCase("mysql")) {
+                        stmt = conn.createStatement();
+                        query = "SET @bh_dataformat='txt_variable'";
+                        stmt.execute(query);
+                        stmt.close();
+                        query = "CREATE TABLE " + tmpTableName + " SELECT * FROM " + dailyTableName + " WHERE rt_date = " + dailyEpochDate + " AND m NOT IN (36,38,88,346,483,524,526,930,934) ORDER BY SERIAL_INT";
+                    } else if (this.ibdbengine.equalsIgnoreCase("postgres")) {
+                        query = this.sgmsUtil.getCosmoParam("optimizerLoadType", "2").equalsIgnoreCase("1") ? "CREATE TABLE " + tmpTableName + " with (engine=brighthouse) AS SELECT * FROM " + dailyTableName + " WHERE rt_date = " + dailyEpochDate + " AND m NOT IN (36,38,88,346,483,524,526,930,934) ORDER BY SERIAL_INT" : "COPY (SELECT * FROM " + dailyTableName + " WHERE rt_date = " + dailyEpochDate + " AND m NOT IN (36,38,88,346,483,524,526,930,934) ORDER BY SERIAL_INT) TO '" + this.workingDir + File.separator + tmpTableName + this.optimizationFileExtension + "' WITH (FORMAT CSV, delimiter '^');";
+                    }
+                    stmt = conn.createStatement();
+                    stmt.execute(query);
+                    stmt.close();
+                }
+            }
+            this.setFlagToState(optimizeDateDAO.getDate(), 3);
+            SGMSUtil.debugOut((Object)"DataOptimizerTask.exportDataFromDaily(): Inside Method exportDataFromDaily() Changing Opt State STATE_EXPORT_DONE", 1);
+            long l = System.currentTimeMillis() - st;
+            return l;
+        }
+        catch (Exception e) {
+            SGMSUtil.logError(e, "Error running query: " + query, "exportDataForDate", "DataOptimizerTask");
+            this.handleException(optimizeDateDAO, 1, epochDate, tmpTableName, 2, e.getMessage());
+            throw e;
+        }
+        finally {
+            if (stmt != null) {
+                try {
+                    stmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.exportDataForDate() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.exportDataForDate() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+        }
+    }
+
+    private long loadDataFromDaily(OptimizeDateDAO optimizeDateDAO, String tmpTableName, long rows, boolean dailyTableDatesAreInSameMonth, String dailyTableName, long exportTime) throws SQLException {
+        SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromDaily(): Inside Method loadDataFromDaily()", 1);
+        Connection conn = null;
+        Statement stmt = null;
+        String query = null;
+        long st = 0L;
+        long timeTook = 0L;
+        long epochDate = 0L;
+        int currentState = 0;
+        try {
+            GregorianCalendar cal = new GregorianCalendar();
+            SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+            cal.setTime(dateTimeFormat.parse(optimizeDateDAO.getDate(), new ParsePosition(0)));
+            epochDate = DataOptimizerTask.getEpochDayForDate(cal);
+            String monthlyTableName = DataOptimizerTask.getTableName(cal);
+            boolean isDataImported = false;
+            conn = DatabaseService.getLocalConnection();
+            SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromFile() starting import ", 1);
+            st = System.currentTimeMillis();
+            currentState = 6;
+            this.setFlagToState(optimizeDateDAO.getDate(), 6);
+            SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromDaily(): Inside Method loadDataFromDaily() Changing Opt State STATE_IMPORT_IN_PROGRESS", 1);
+            if (dailyTableDatesAreInSameMonth) {
+                String prefix = SummarizerRawTableUtil.getInstance().getPrefixFromRawTableVersion(ThisSummarizer.getInstance().getColumnValue(13), monthlyTableName);
+                ViewpointUtil.createSummarizerRawTable(monthlyTableName, prefix);
+                long monthlyTableRowsBeforeImport = this.getMonthlyTableTotalRows(monthlyTableName);
+                SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): monthlyTableRowsBeforeImport " + monthlyTableRowsBeforeImport), 1);
+                stmt = conn.createStatement();
+                String fileName = this.workingDir + File.separator + tmpTableName + this.optimizationFileExtension;
+                SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): DailyTableDatesAreInSameMonth " + dailyTableDatesAreInSameMonth + " Export File's " + fileName + "  data importing into Daily Table: " + dailyTableName), 1);
+                query = this.ibdbengine.equalsIgnoreCase("postgres") && this.sgmsUtil.getCosmoParam("optimizerLoadType", "2").equalsIgnoreCase("2") ? "COPY " + monthlyTableName + " FROM '" + fileName + "' WITH (delimiter '^', reject_file_path '" + fileName.replaceFirst(this.optimizationFileExtension, "_reject_file" + this.rejectFileExtension) + "' , abort_on_count 100);" : "insert INTO " + monthlyTableName + " select * from " + tmpTableName;
+                stmt.execute(query);
+                stmt.close();
+                long monthlyTableRowsAfterImport = this.getMonthlyTableTotalRows(monthlyTableName);
+                SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): monthlyTableRowsAfterImport " + monthlyTableRowsAfterImport), 1);
+                if (monthlyTableRowsAfterImport > monthlyTableRowsBeforeImport) {
+                    isDataImported = true;
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): isDataImported " + isDataImported + " for file " + fileName), 1);
+                    int fileDeleted = this.deleteExportTable(tmpTableName);
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): Deleting Exported Txt File " + fileName + " " + fileDeleted), 1);
+                } else {
+                    isDataImported = false;
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): isDataImported " + isDataImported + " for file " + fileName), 1);
+                }
+                try {
+                    File rejectFile = new File(fileName.replaceFirst(this.optimizationFileExtension, "_reject_file" + this.rejectFileExtension));
+                    if (rejectFile.exists()) {
+                        Files.move(rejectFile.toPath(), new File(this.syslogDir + File.separator + "badSyslogs" + File.separator + rejectFile.getName()).toPath(), StandardCopyOption.REPLACE_EXISTING);
+                        SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromFile(): Moved reject file to badSyslogs directory successfully", 1);
+                    }
+                }
+                catch (IOException ioe) {
+                    SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromFile(): Failed to move reject file to badSyslogs directory", 1);
+                }
+            } else {
+                ArrayList<Date> dates = this.getDailyTableDates(dailyTableName);
+                for (Date date : dates) {
+                    tmpTableName = this.getExportTableName(date);
+                    if (!this.checkEpochDayTableExists(tmpTableName)) {
+                        SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): Skipping Import for " + tmpTableName + " as it does not exist."), 1);
+                        continue;
+                    }
+                    monthlyTableName = DataOptimizerTask.getTableName(date);
+                    String prefix = SummarizerRawTableUtil.getInstance().getPrefixFromRawTableVersion(ThisSummarizer.getInstance().getColumnValue(13), monthlyTableName);
+                    ViewpointUtil.createSummarizerRawTable(monthlyTableName, prefix);
+                    long monthlyTableRowsBeforeImport = this.getMonthlyTableTotalRows(monthlyTableName);
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): monthlyTableRowsBeforeImport " + monthlyTableRowsBeforeImport), 1);
+                    stmt = conn.createStatement();
+                    String fileName = this.workingDir + File.separator + tmpTableName + this.optimizationFileExtension;
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): DailyTableDatesAreInSameMonth " + dailyTableDatesAreInSameMonth + " Export File's " + fileName + "  data importing into Daily Table: " + dailyTableName), 1);
+                    query = this.ibdbengine.equalsIgnoreCase("postgres") && this.sgmsUtil.getCosmoParam("optimizerLoadType", "2").equalsIgnoreCase("2") ? "COPY " + monthlyTableName + " FROM '" + fileName + "' WITH (delimiter '^', reject_file_path '" + fileName.replaceFirst(this.optimizationFileExtension, "_reject_file" + this.rejectFileExtension) + "' , abort_on_count 100);" : "insert INTO " + monthlyTableName + " select * from " + tmpTableName;
+                    stmt.execute(query);
+                    stmt.close();
+                    long monthlyTableRowsAfterImport = this.getMonthlyTableTotalRows(monthlyTableName);
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): monthlyTableRowsAfterImport " + monthlyTableRowsAfterImport), 1);
+                    if (monthlyTableRowsAfterImport <= monthlyTableRowsBeforeImport) {
+                        isDataImported = false;
+                        SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): isDataImported " + isDataImported + " for file " + fileName), 1);
+                        break;
+                    }
+                    isDataImported = true;
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): isDataImported " + isDataImported + " for file " + fileName), 1);
+                    int fileDeleted = this.deleteExportTable(tmpTableName);
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): Deleting Exported Txt File " + fileName + " " + fileDeleted), 1);
+                    try {
+                        File rejectFile = new File(fileName.replaceFirst(this.optimizationFileExtension, "_reject_file" + this.rejectFileExtension));
+                        if (!rejectFile.exists()) continue;
+                        Files.move(rejectFile.toPath(), new File(this.syslogDir + File.separator + "badSyslogs" + File.separator + rejectFile.getName()).toPath(), StandardCopyOption.REPLACE_EXISTING);
+                        SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromDaily(): Moved reject file to badSyslogs directory successfully", 1);
+                    }
+                    catch (IOException ioe) {
+                        SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromDaily(): Failed to move reject file to badSyslogs directory", 1);
+                    }
+                }
+            }
+            if (isDataImported) {
+                this.setFlagToState(optimizeDateDAO.getDate(), 1);
+                SGMSUtil.debugOut((Object)"DataOptimizerTask.loadDataFromDaily(): Changing Opt State to STATE_OPTIMIZED", 1);
+                long importTime = System.currentTimeMillis() - st;
+                this.updateStats(optimizeDateDAO.getDate(), rows, exportTime, importTime, optimizeDateDAO.getFailureCount());
+                boolean dropDailyTable = Boolean.parseBoolean(this.sgmsUtil.getCosmoParam("OPTIMIZATION_DROP_DAILY_TABLE", "true"));
+                SGMSUtil.debugOut((Object)("DataOptimizerTask.processOptimization() : DROP_DAILY_TABLE flag value: " + dropDailyTable), 1);
+                if (dropDailyTable) {
+                    boolean dailyTableDeleted = this.dropDailyTable(dailyTableName);
+                    SGMSUtil.debugOut((Object)("DataOptimizerTask.processOptimization(): dailyTableDeleted: " + dailyTableDeleted + " Daily Table Name: " + dailyTableName), 1);
+                }
+            } else {
+                SGMSUtil.debugOut((Object)("DataOptimizerTask.loadDataFromDaily(): isDATAImported Flag : " + isDataImported), 1);
+            }
+            timeTook = System.currentTimeMillis() - st;
+        }
+        catch (Exception e) {
+            SGMSUtil.logError(e, "Error running query: " + query, "loadDataFromFile", "DataOptimizerTask");
+            this.handleException(optimizeDateDAO, 2, epochDate, tmpTableName, currentState, e.getMessage());
+            throw e;
+        }
+        finally {
+            if (stmt != null) {
+                try {
+                    stmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.loadDataFromFile() Error closing resources: " + e.getMessage());
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.loadDataFromFile() Error closing resources: " + e.getMessage());
+                }
+            }
+        }
+        return timeTook;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    private long getMonthlyTableTotalRows(String monthlyTableName) {
+        long rows = 0L;
+        Connection conn = null;
+        Statement stmt = null;
+        ResultSet rs = null;
+        String query = null;
+        try {
+            conn = DatabaseService.getLocalConnection();
+            stmt = conn.createStatement();
+            query = "SELECT COUNT(1) FROM " + monthlyTableName;
+            rs = stmt.executeQuery(query);
+            if (rs != null && rs.next()) {
+                rows = rs.getLong(1);
+            }
+        }
+        catch (SQLException e) {
+            SGMSUtil.logError(e, "Error running query: " + query, "getRowsForDateFromMonthly", "DataOptimizerTask");
+        }
+        finally {
+            if (stmt != null) {
+                try {
+                    stmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.getRowsForDateFromMonthly() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.getRowsForDateFromMonthly() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+        }
+        return rows;
+    }
+
     private void divideExportedDataAndUpload(final Connection conn, final String srcTableName, String fileName, long rows) throws Exception {
         File optimizerDir = new File(this.workingDir);
         final File tmpTableFile = new File(this.workingDir + File.separator + fileName);
@@ -803,7 +1334,7 @@
                 @Override
                 public void run() {
                     try {
-                        SGMSUtil.debugOut((Object)("DataOptimizerTask.divideExportDataAndUplaod(): Starting file splitting " + new Date().toString()), 4);
+                        SGMSUtil.debugOut((Object)("DataOptimizerTask.divideExportDataAndUplaod(): Starting file splitting " + new Date().toString()), 2);
                         Stream lines = Files.lines(Paths.get(tmpTableFile.getAbsolutePath(), new String[0]));
                         int id = 0;
                         lines = (Stream)lines.sequential();
@@ -990,7 +1521,7 @@
             timeToRun = false;
         } else {
             timeToRun = true;
-            SGMSUtil.debugOut("DataOptimizerTask.readyToRun(): its time to start the optimization");
+            SGMSUtil.debugOut((Object)"DataOptimizerTask.readyToRun(): its time to start the optimization", 2);
         }
         if (this.runOptimizerNow) {
             this.specialSchedule = true;
@@ -1021,9 +1552,24 @@
         return tableName;
     }
 
+    private static String getTableName(Date date) {
+        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy");
+        String yearString = dateFormat.format(date);
+        int month = date.getMonth() + 1;
+        String tableName = "raw_" + yearString + (month < 10 ? "0" + month : Integer.valueOf(month));
+        return tableName;
+    }
+
+    private static String getDailyTableName(Calendar cal) {
+        int month = cal.get(2) + 1;
+        int date = cal.get(5);
+        String dailyTableName = "raw_" + cal.get(1) + (month < 10 ? "0" + month : Integer.valueOf(month)) + (date < 10 ? "0" + date : Integer.valueOf(date));
+        return dailyTableName;
+    }
+
     private void updateOptimizerStatus(String status) {
         try {
-            SGMSUtil.debugOut((Object)("DataOptimizerTask.updateOptimizerStatus(): updating optimizerStatus with status " + status), 5);
+            SGMSUtil.debugOut((Object)("DataOptimizerTask.updateOptimizerStatus(): updating optimizerStatus with status " + status), 2);
             VpSummarizerSettings.getReference(DataBaseConnectionPool.getReference()).updateSummarizerSettings("optimizerstatus", ThisSummarizer.getInstance().getIPInString(), status);
         }
         catch (SQLException e) {
@@ -1058,15 +1604,15 @@
                     int threadId = 0;
                     if (conn != null) {
                         stmt = conn.createStatement();
-                        query = "SELECT REPORT_DATE, OPT_STATE, FAILURE_COUNT FROM VPNG_OPTIMIZATION_INFO, VP_REPORT_DATES WHERE OPT_STATE >= 2 AND SCHEDULER_INSTANCE = '" + InstanceMappingService.getReference().getOwnScheduler().getSerialNumber() + "' AND ID = REPORT_DATE_ID ORDER BY OPT_STATE DESC";
+                        query = "SELECT REPORT_DATE, OPT_STATE, FAILURE_COUNT, TABLE_TYPE FROM VPNG_OPTIMIZATION_INFO, VP_REPORT_DATES WHERE OPT_STATE >= 2 AND SCHEDULER_INSTANCE = '" + InstanceMappingService.getReference().getOwnScheduler().getSerialNumber() + "' AND ID = REPORT_DATE_ID ORDER BY OPT_STATE DESC";
                         rs = stmt.executeQuery(query);
                         while (rs != null && rs.next()) {
-                            OptimizeDateDAO dao2 = new OptimizeDateDAO(rs.getString(1), rs.getInt(2), rs.getInt(3));
+                            OptimizeDateDAO dao2 = new OptimizeDateDAO(rs.getString(1), rs.getInt(2), rs.getInt(3), rs.getInt(4));
                             daoList.add(dao2);
                         }
                         DataBaseConnectionPool.freeResultSet(rs);
                         if (daoList.size() == 0) {
-                            SGMSUtil.debugOut((Object)"DataOptimizerTask.handleStateAfterServiceRestart(): Everything looks perfect after service restart so will run the optimization on schedule", 3);
+                            SGMSUtil.debugOut((Object)"DataOptimizerTask.handleStateAfterServiceRestart(): Everything looks perfect after service restart so will run the optimization on schedule", 2);
                             dao2 = false;
                             if (rs == null) break block67;
                             break block68;
@@ -1075,7 +1621,7 @@
                             OptimizeDateDAO dao3 = (OptimizeDateDAO)daoList.get(index);
                             if (dao3.getDate() == null || dao3.getDate().length() <= 0) continue;
                             if (dao3.getOptState() == 2) {
-                                SGMSUtil.debugOut((Object)"DataOptimizerTask.handleStateAfterServiceRestart(): handle export", 5);
+                                SGMSUtil.debugOut((Object)"DataOptimizerTask.handleStateAfterServiceRestart(): handle export", 2);
                                 long epochDate = DataOptimizerTask.getEpochDayForDate(dao3.getDate());
                                 localConn = DatabaseService.getLocalConnection();
                                 if (localConn == null) continue;
@@ -1097,13 +1643,13 @@
                                 } else if (this.ibdbengine.equalsIgnoreCase("postgres")) {
                                     query = "select pg_cancel_backend(" + threadId + ")";
                                 }
-                                SGMSUtil.debugOut((Object)("DataOptimizerTask.handleStateAfterServiceRestart(): query to kill process for export " + query), 3);
+                                SGMSUtil.debugOut((Object)("DataOptimizerTask.handleStateAfterServiceRestart(): query to kill process for export " + query), 2);
                                 stmt.execute(query);
                                 stmt.close();
                                 continue;
                             }
                             if (dao3.getOptState() == 6) {
-                                SGMSUtil.debugOut((Object)"DataOptimizerTask.handleStateAfterServiceRestart(): handle import", 5);
+                                SGMSUtil.debugOut((Object)"DataOptimizerTask.handleStateAfterServiceRestart(): handle import", 2);
                                 String tname = this.getExportTableName(dao3);
                                 localConn = DatabaseService.getLocalConnection();
                                 if (localConn == null) continue;
@@ -1132,7 +1678,7 @@
                                 continue;
                             }
                             if (dao3.getOptState() != 7) continue;
-                            SGMSUtil.debugOut((Object)"DataOptimizerTask.handleStateAfterServiceRestart(): handle import waiting", 5);
+                            SGMSUtil.debugOut((Object)"DataOptimizerTask.handleStateAfterServiceRestart(): handle import waiting", 2);
                             this.setFlagToState(dao3.getDate(), 5);
                         }
                         boolean bl = true;
@@ -1272,14 +1818,14 @@
             String maxDateString = dateTimeFormat.format(maxDate.getTime());
             conn = DatabaseService.getConnection();
             stmt = conn.createStatement();
-            query = "SELECT REPORT_DATE , OPT_STATE, FAILURE_COUNT FROM VPNG_OPTIMIZATION_INFO, VP_REPORT_DATES WHERE OPT_STATE >= 2 AND REPORT_DATE < '" + currentDate + "' AND REPORT_DATE > '" + maxDateString + "' AND SCHEDULER_INSTANCE = '" + InstanceMappingService.getReference().getOwnScheduler().getSerialNumber() + "' AND ID = REPORT_DATE_ID ORDER BY OPT_STATE DESC";
+            query = "SELECT REPORT_DATE , OPT_STATE, FAILURE_COUNT, TABLE_TYPE FROM VPNG_OPTIMIZATION_INFO, VP_REPORT_DATES WHERE OPT_STATE >= 2 AND REPORT_DATE < '" + currentDate + "' AND REPORT_DATE > '" + maxDateString + "' AND SCHEDULER_INSTANCE = '" + InstanceMappingService.getReference().getOwnScheduler().getSerialNumber() + "' AND ID = REPORT_DATE_ID ORDER BY OPT_STATE DESC";
             rs = stmt.executeQuery(query);
             if (rs != null && rs.next()) {
                 date = rs.getString(1);
                 int optState = rs.getInt(2);
-                optimizeDateDAO = new OptimizeDateDAO(date, optState, rs.getInt(3));
+                optimizeDateDAO = new OptimizeDateDAO(date, optState, rs.getInt(3), rs.getInt(4));
             }
-            SGMSUtil.debugOut((Object)("DataOptimizerTask.getIntermediateDateToOptimize(): optimizeDateDAO " + optimizeDateDAO), 5);
+            SGMSUtil.debugOut((Object)("DataOptimizerTask.getIntermediateDateToOptimize(): optimizeDateDAO " + optimizeDateDAO), 2);
         }
         catch (SQLException e) {
             SGMSUtil.logError(e, "Error running query: " + query, "getIntermediateDateToOptimize", "DataOptimizerTask");
@@ -1308,7 +1854,7 @@
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
-    public int getSerialCount(String date) {
+    public int getSerialCountMonthly(String date) {
         int count;
         block24: {
             Statement stmt;
@@ -1385,6 +1931,118 @@
     /*
      * WARNING - Removed try catching itself - possible behaviour change.
      */
+    public int getSerialCountDaily(String date) {
+        int count;
+        ResultSet tablesResultSet;
+        Statement stmt;
+        Connection localConn;
+        block29: {
+            GregorianCalendar cal = new GregorianCalendar();
+            SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+            cal.setTime(dateTimeFormat.parse(date, new ParsePosition(0)));
+            String tableName = DataOptimizerTask.getDailyTableName(cal);
+            localConn = null;
+            stmt = null;
+            ResultSet rs = null;
+            tablesResultSet = null;
+            String query = null;
+            count = 0;
+            try {
+                localConn = DatabaseService.getLocalConnection();
+                DatabaseMetaData dbm = localConn.getMetaData();
+                tablesResultSet = dbm.getTables(null, null, tableName, null);
+                if (tablesResultSet.next()) {
+                    stmt = localConn.createStatement();
+                    rs = stmt.executeQuery(query = "SELECT COUNT(SERIAL) FROM " + tableName);
+                    if (rs != null && rs.next()) {
+                        count = rs.getInt(1);
+                    }
+                    DataBaseConnectionPool.freeResultSet(rs);
+                } else {
+                    count = 0;
+                }
+                if (rs == null) break block29;
+            }
+            catch (SQLException e) {
+                block30: {
+                    try {
+                        SGMSUtil.logError(e, "Exception - " + e.getMessage(), "getSerialCount", "DataOptimizerTask");
+                        if (rs == null) break block30;
+                    }
+                    catch (Throwable throwable) {
+                        if (rs != null) {
+                            DataBaseConnectionPool.freeResultSet(rs);
+                        }
+                        if (tablesResultSet != null) {
+                            DataBaseConnectionPool.freeResultSet(tablesResultSet);
+                        }
+                        if (stmt != null) {
+                            try {
+                                stmt.close();
+                            }
+                            catch (SQLException e2) {
+                                SGMSUtil.logError(e2, "Error in closing resources - " + e2.getMessage(), "getSerialCount", "DataOptimizerTask");
+                            }
+                        }
+                        if (localConn != null) {
+                            try {
+                                localConn.close();
+                            }
+                            catch (SQLException e3) {
+                                SGMSUtil.logError(e3, "Error in closing resources - " + e3.getMessage(), "getSerialCount", "DataOptimizerTask");
+                            }
+                        }
+                        throw throwable;
+                    }
+                    DataBaseConnectionPool.freeResultSet(rs);
+                }
+                if (tablesResultSet != null) {
+                    DataBaseConnectionPool.freeResultSet(tablesResultSet);
+                }
+                if (stmt != null) {
+                    try {
+                        stmt.close();
+                    }
+                    catch (SQLException e4) {
+                        SGMSUtil.logError(e4, "Error in closing resources - " + e4.getMessage(), "getSerialCount", "DataOptimizerTask");
+                    }
+                }
+                if (localConn != null) {
+                    try {
+                        localConn.close();
+                    }
+                    catch (SQLException e5) {
+                        SGMSUtil.logError(e5, "Error in closing resources - " + e5.getMessage(), "getSerialCount", "DataOptimizerTask");
+                    }
+                }
+            }
+            DataBaseConnectionPool.freeResultSet(rs);
+        }
+        if (tablesResultSet != null) {
+            DataBaseConnectionPool.freeResultSet(tablesResultSet);
+        }
+        if (stmt != null) {
+            try {
+                stmt.close();
+            }
+            catch (SQLException e) {
+                SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "getSerialCount", "DataOptimizerTask");
+            }
+        }
+        if (localConn != null) {
+            try {
+                localConn.close();
+            }
+            catch (SQLException e) {
+                SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "getSerialCount", "DataOptimizerTask");
+            }
+        }
+        return count;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
     private void updateFailureCount(String date, int failureCount, int optState) {
         Connection conn = null;
         Statement stmt = null;
@@ -1443,7 +2101,7 @@
             if (this.deleteExportTable(targetTableName) < 0) {
                 messageBuilder.append("Delete failed: ").append("Failed to delete the file raw_ ").append(epochDate).append("\n");
             }
-            SGMSUtil.debugOut((Object)("DataOptimizerTask.handleException(): failed to delete the file raw_ " + epochDate), 5);
+            SGMSUtil.debugOut((Object)("DataOptimizerTask.handleException(): failed to delete the file raw_ " + epochDate), 2);
         }
         if (failureCount >= 3) {
             messageBuilder.append("Multiple failures[3]: ").append("Optimization failed multiple times for date  = ").append(optDAO.getDate()).append("\n");
@@ -1533,5 +2191,169 @@
             this.schemaName = "public";
         }
     }
+
+    public boolean checkDailyTableDatesAreInSameMonth(String tableName) {
+        ArrayList<Date> datesList = this.getDailyTableDates(tableName);
+        HashSet<Integer> datesSet = new HashSet<Integer>();
+        Iterator<Date> itr = datesList.iterator();
+        while (itr.hasNext()) {
+            datesSet.add(itr.next().getMonth() + 1);
+        }
+        return datesSet.size() <= 1;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    public ArrayList<Date> getDailyTableDates(String tableName) {
+        Connection conn = null;
+        Statement stmt = null;
+        String query = null;
+        ResultSet rs = null;
+        ArrayList<Date> datesList = new ArrayList<Date>();
+        try {
+            conn = DatabaseService.getLocalConnection();
+            stmt = conn.createStatement();
+            query = "SELECT rt_date, count(*) FROM " + tableName + " group by rt_date";
+            rs = stmt.executeQuery(query);
+            while (rs.next()) {
+                datesList.add(this.getRcvdTimeFromEpoch(rs.getInt("rt_date"), tableName));
+            }
+        }
+        catch (SQLException e) {
+            SGMSUtil.logError(e, "Error running query : " + query, "getDailyTableDates", "DataOptimizerTask");
+        }
+        finally {
+            if (stmt != null) {
+                try {
+                    stmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.getDailyTableDates() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.getDailyTableDates() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+        }
+        SGMSUtil.debugOut((Object)("DataOptimizerTask.getDailyTableDates(): Daily Table dates: " + datesList.toArray().toString()), 1);
+        return datesList;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    private Date getRcvdTimeFromEpoch(int epochDate, String tableName) {
+        Connection conn = null;
+        Statement stmt = null;
+        String query = null;
+        ResultSet rs = null;
+        Date date = null;
+        try {
+            conn = DatabaseService.getLocalConnection();
+            stmt = conn.createStatement();
+            query = "SELECT rcvd_time FROM " + tableName + " WHERE rt_date = " + epochDate + " limit 1";
+            rs = stmt.executeQuery(query);
+            if (rs.next()) {
+                date = this.parseRcvdTimeToDate(rs.getString("rcvd_time"));
+            }
+        }
+        catch (SQLException e) {
+            SGMSUtil.logError(e, "Error running query : " + query, "getRcvdTimeFromEpoch", "DataOptimizerTask");
+        }
+        finally {
+            if (stmt != null) {
+                try {
+                    stmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.getRcvdTimeFromEpoch() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("DataOptimizerTask.getRcvdTimeFromEpoch() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+        }
+        SGMSUtil.debugOut((Object)("DataOptimizerTask.getRcvdTimeFromEpoch(): Epoch Date: " + epochDate + " Rcvd date: " + date.toString()), 1);
+        return date;
+    }
+
+    private Date parseRcvdTimeToDate(String rcvdDate) {
+        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+        Date date = null;
+        try {
+            date = dateFormat.parse(rcvdDate);
+        }
+        catch (Exception e) {
+            SGMSUtil.debugOut("DataOptimizerTask.parseRcvdTimeToDate() Error parsingRcvdDateToDate: " + e.getMessage());
+            SGMSUtil.printStackTrace(e);
+        }
+        return date;
+    }
+
+    public String getExportTableName(LocalDate date) {
+        String exportTableName = "raw_" + date.getYear() + (date.getMonthValue() < 10 ? "0" + date.getMonthValue() : Integer.valueOf(date.getMonthValue())) + "_" + date.toEpochDay();
+        return exportTableName;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    public static boolean IsDailyTableExist(String date) throws SQLException {
+        String tableName = DataOptimizerTask.getDailyTableName(date);
+        Statement pstmt = null;
+        ResultSet rs = null;
+        boolean doesExist = false;
+        Connection conn = null;
+        conn = DatabaseService.getLocalConnection();
+        try {
+            pstmt = conn.prepareStatement("SELECT count(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = '" + tableName.toLowerCase() + "' AND TABLE_SCHEMA = 'public'");
+            rs = pstmt.executeQuery();
+            if (rs.next() && rs.getInt(1) > 0) {
+                doesExist = true;
+                SGMSUtil.debugOut((Object)("DataOptimizerTask.IsDailyTableExist() Changing flag to True, Flag value:  = " + doesExist), 1);
+            }
+        }
+        finally {
+            if (pstmt != null) {
+                try {
+                    pstmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "doesDailyTableExist", "DefaultDataHandler");
+                }
+            }
+            if (rs != null) {
+                try {
+                    rs.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.logError(e, "Error in closing resources - " + e.getMessage(), "doesDailyTableExist", "DefaultDataHandler");
+                }
+            }
+        }
+        SGMSUtil.debugOut((Object)("DataOptimizerTask.IsDailyTableExist() Daily Table Name = " + tableName + doesExist), 1);
+        return doesExist;
+    }
+
+    private static String getDailyTableName(String dt) {
+        String dailyTableName = dt.replace("-", "");
+        dailyTableName = "raw_" + dailyTableName.substring(0, 8);
+        return dailyTableName;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/scheduler/NodeSummarizerTask.java decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/scheduler/NodeSummarizerTask.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/scheduler/NodeSummarizerTask.java	2023-09-08 15:13:15.641707916 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/scheduler/NodeSummarizerTask.java	2023-09-08 15:14:42.393506982 -0700
@@ -17,12 +17,14 @@
 import com.sonicwall.viewpoint.summarizedata.etl.model.SummaryStatus;
 import com.sonicwall.viewpoint.summarizedata.etl.model.TotalType;
 import java.sql.Connection;
+import java.sql.DatabaseMetaData;
 import java.sql.Date;
 import java.sql.ResultSet;
 import java.sql.ResultSetMetaData;
 import java.sql.SQLException;
 import java.sql.Statement;
 import java.sql.Timestamp;
+import java.text.SimpleDateFormat;
 import java.util.GregorianCalendar;
 import java.util.List;
 import java.util.Set;
@@ -98,6 +100,7 @@
         cal.set(14, 0);
         Timestamp startTime = Timestamp.valueOf(dateStatus.getReportDate().toString() + " 00:00:00.000");
         Timestamp endTime = Timestamp.valueOf(dateStatus.getReportDate().toString() + " 23:59:59.999");
+        String tableName = this.getTableName(dateStatus.getReportDate());
         try {
             rawConn = DatabaseService.getLocalConnection();
             sgmsConn = DatabaseService.getConnection();
@@ -105,7 +108,7 @@
                 int tableVersion;
                 if (type.getQuery() == null || type.getQuery().length() == 0 || type.getId() == 10L && !SGMSUtil.isEPRS()) continue;
                 String query = type.getQuery();
-                query = query.replace("$table", dateStatus.getTableName());
+                query = query.replace("$table", tableName);
                 query = query.replace("$start", "'" + startTime.toString() + "'");
                 query = query.replace("$end", "'" + endTime.toString() + "'");
                 SGMSUtil.debugOut((Object)("NodeSummarizerTask.summarizeDate(): Query = " + query + ", start time = " + startTime.toString() + ", end time = " + endTime.toString()), 4);
@@ -210,6 +213,89 @@
         return true;
     }
 
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     * Enabled force condition propagation
+     * Lifted jumps to return sites
+     */
+    private String getTableName(java.util.Date date) {
+        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
+        String query = null;
+        int table_type = 1;
+        String tableName = null;
+        ResultSet rs = null;
+        try {
+            query = "SELECT table_type FROM " + DataBaseConnectionPool.getTablePrefix() + "vpng_optimization_info, " + DataBaseConnectionPool.getTablePrefix() + "vp_report_dates WHERE report_date_id=id AND report_date= ?";
+            String[] params = new String[]{dateFormat.format(date)};
+            rs = SGMSUtil.executeQueryPS(query, params);
+            SGMSUtil.debugOut("NodeSummarizer:getTableName -");
+            if (rs.next()) {
+                table_type = rs.getInt("table_type");
+            }
+            if (!this.checkIfTableExist(tableName = this.getRawTableName((Date)date, table_type))) {
+                SGMSUtil.debugOut("NodeSummarizer:monthlyDailyTableCheck - Table: " + tableName + " does not exist while summarization");
+            }
+            if (rs == null) return tableName;
+        }
+        catch (Exception e) {
+            SGMSUtil.debugOut("NodeSummarizer:monthlyDailyTableCheck - Exception in monthlyDailyTableCheck()" + e);
+            return tableName;
+        }
+        finally {
+            if (rs != null) {
+                DataBaseConnectionPool.freeResultSet(rs);
+            }
+        }
+        DataBaseConnectionPool.freeResultSet(rs);
+        return tableName;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    private boolean checkIfTableExist(String tableName) {
+        Connection localConn = null;
+        boolean tableExist = false;
+        try {
+            localConn = DatabaseService.getLocalConnection();
+            DatabaseMetaData dbm = localConn.getMetaData();
+            ResultSet tables = dbm.getTables(null, null, tableName, null);
+            if (tables.next()) {
+                tableExist = true;
+            }
+        }
+        catch (SQLException e) {
+            SGMSUtil.logError(e, "Exception - " + e.getMessage(), "checkIfTableExist", "NodeSummarizer");
+        }
+        finally {
+            if (localConn != null) {
+                try {
+                    localConn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.debugOut("NodeSummarizer.checkIfTableExist() Error closing resources: " + e.getMessage());
+                    SGMSUtil.printStackTrace(e);
+                }
+            }
+        }
+        return tableExist;
+    }
+
+    private String getRawTableName(Date date, int table_type) {
+        GregorianCalendar cal = new GregorianCalendar();
+        cal.setTime(date);
+        String tableName = null;
+        if (table_type == 0) {
+            int month = cal.get(2) + 1;
+            tableName = "raw_" + cal.get(1) + (month < 10 ? "0" + month : Integer.valueOf(month));
+            return tableName;
+        }
+        int month = cal.get(2) + 1;
+        int day = cal.get(5);
+        tableName = "raw_" + cal.get(1) + (month < 10 ? "0" + month : Integer.valueOf(month)) + (day < 10 ? "0" + day : Integer.valueOf(day));
+        return tableName;
+    }
+
     @Override
     public SummarizerTaskResult call() throws Exception {
         this.complete = false;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/service/FilteringService.java decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/service/FilteringService.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/summarizedata/etl/service/FilteringService.java	2023-09-08 15:13:15.686642156 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/summarizedata/etl/service/FilteringService.java	2023-09-08 15:14:42.427464586 -0700
@@ -34,9 +34,9 @@
      * WARNING - Removed try catching itself - possible behaviour change.
      */
     public void refresh() {
-        block31: {
+        block32: {
             ResultSet rs1;
-            block30: {
+            block31: {
                 SGMSUtil.debugOut((Object)"FilteringService:refresh() Refresh Filter", 3);
                 ResultSet rs = null;
                 rs1 = null;
@@ -46,14 +46,11 @@
                     List<String> serialStandByList = this.getSerialListForStandBySummarizer();
                     List<Integer> schedulerList = this.getSchedulerIdForStandBySummarizer();
                     query.append("SELECT id, field_name, operator, field_value1, field_value2, discard, family_id, level, scheduler_id FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("vpng_syslog_filters");
-                    rs = ParamsManager.executeQueryPS(query.toString(), null);
+                    rs = ParamsManager.executeQuery(query.toString());
                     HashSet<ETLFilter> newFilters = new HashSet<ETLFilter>();
                     while (rs != null && rs.next()) {
-                        ETLFilter filter;
-                        ArrayList<SpeedString> serialIds;
-                        block29: {
-                            serialIds = null;
-                            filter = new ETLFilter();
+                        ArrayList<SpeedString> serialIds = null;
+                        ETLFilter filter = new ETLFilter();
                             filter.setId(rs.getInt(1));
                             filter.setFieldName(new SpeedString(rs.getString(2)));
                             filter.setOperator(rs.getString(3));
@@ -89,9 +86,7 @@
                                         }
                                         filter.setSerialList(serialIds);
                                         rs1 = DataBaseConnectionPool.freeResultSet(rs1);
-                                        break block29;
-                                    }
-                                    if (schedulerList.contains(rs.getInt(9))) {
+                                } else if (schedulerList.contains(rs.getInt(9))) {
                                         serialIds = new ArrayList();
                                         SGMSUtil.debugOut((Object)("FilteringService:refresh() the summarizer is stand by slave for this filter " + rs.getInt(9)), 5);
                                         rs1 = ParamsManager.executeQueryPS("SELECT serial FROM " + DataBaseConnectionPool.getTablePrefix() + "params p, " + DataBaseConnectionPool.getTablePrefix() + "schedulers s WHERE s.id = ? and p.slave_id = s.id and p.is_unit > 0", new String[]{String.valueOf(rs.getInt(9))});
@@ -100,16 +95,14 @@
                                         }
                                         filter.setSerialList(serialIds);
                                         rs1 = DataBaseConnectionPool.freeResultSet(rs1);
-                                        break block29;
-                                    }
+                                } else {
                                     SGMSUtil.debugOut((Object)("FilteringService.refresh() the ip does not match so lets not save this filters " + filter.getIpAddress()), 5);
-                                    break;
+                                }
                                 }
                                 catch (SQLException e) {
                                     SGMSUtil.logError(e, "Problem retrieving summarizer level filters - " + e.getMessage(), "refresh", "FilteringService");
                                 }
                             }
-                        }
                         if (rs.getInt(8) == 3) {
                             try {
                                 SGMSUtil.debugOut((Object)("FilteringService:refresh() filter for appliance " + rs.getInt(1)), 5);
@@ -144,18 +137,18 @@
                                 SGMSUtil.logError(e, "Problem retrieving appliance level filters - " + e.getMessage(), "refresh", "FilteringService");
                             }
                         }
-                        if (serialIds == null && rs.getInt(8) == 3) {
+                        if (serialIds == null && rs.getInt(8) == 3 || serialIds == null && rs.getInt(8) == 1) {
                             SGMSUtil.debugOut((Object)("FilteringService.refresh():filter cannot be added for " + rs.getString(1)), 5);
                             continue;
                         }
                         newFilters.add(filter);
                     }
                     this.filters = newFilters;
-                    if (rs == null) break block30;
+                    if (rs == null) break block31;
                 }
                 catch (SQLException e) {
                     SGMSUtil.logError(e, "Problem retrieving syslog filters - " + e.getMessage(), "refresh", "FilteringService");
-                    break block31;
+                    break block32;
                 }
                 finally {
                     if (rs != null) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/usr/dist/USRReportingConsole.java decompiled-9.3.9330/com/sonicwall/viewpoint/usr/dist/USRReportingConsole.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/usr/dist/USRReportingConsole.java	2023-09-08 15:13:15.005638771 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/usr/dist/USRReportingConsole.java	2023-09-08 15:14:41.907114232 -0700
@@ -659,8 +659,8 @@
                 String[] toAddressList = new String[]{toAddress.toString()};
                 emailPackage.setToAddress(toAddressList);
             }
-            emailPackage.setMailSubject(emailInfo.getSubject());
-            emailPackage.addMailMessage(emailInfo.getBody());
+            emailPackage.setMailSubject(USRUtil.convertStringToUTF8(emailInfo.getSubject()));
+            emailPackage.addMailMessage(USRUtil.convertStringToUTF8(emailInfo.getBody()));
             USRScheduler.logDebug(this, "setEmailGeneralParameters", "General Email parameters set successfully");
         }
         catch (NumberFormatException e) {
@@ -818,7 +818,7 @@
             String reportEndDate = USRUtil.getFormattedDateForLocale(1, locale, endDate);
             String reportDate = "";
             reportDate = reportStartDate.equals(reportEndDate) ? reportStartDate + " 00:00:00 to " + reportStartDate + " 23:59:59" : reportStartDate + " 00:00:00 to " + reportEndDate + " 23:59:59";
-            jrParams.put("value1", taskParamMap.get((Object)USRConstants.SCHED_TASK_PARAMS.TASK_NAME));
+            jrParams.put("value1", USRUtil.convertStringToUTF8(taskParamMap.get((Object)USRConstants.SCHED_TASK_PARAMS.TASK_NAME)));
             jrParams.put("value5", reportDate);
             jrParams.put("value5", reportDate);
             if (products.getLength() > 0 && (nodes = USRUtil.getSpecificXMLNodes(product = products.item(0), "node")).getLength() > 0) {
@@ -1024,7 +1024,7 @@
             coverLogoPath = ReportUtils.getInstallDir() + File.separator + IConfigProvider.VP_FULL_IMAGE_PATH + File.separator + "SonicWall-Logo.png";
         }
         this.updateCoverPageParamsFromXML(params, configXMLDoc, taskParamMap, locale, reportParams);
-        params.put("title", title);
+        params.put("title", USRUtil.convertStringToUTF8(title));
         params.put("REPORT_LOCALE", locale);
         String imagePath = ReportUtils.getInstallDir() + File.separator + IConfigProvider.VP_FULL_IMAGE_PATH + File.separator;
         params.put("ImagePath", imagePath);
@@ -1552,7 +1552,7 @@
                 block29: {
                     logMessage = "Email/Archive Schedule ID " + scheduleID;
                     if (reportName != null && !reportName.equals("")) {
-                        logMessage = logMessage + " [" + reportName + "]";
+                        logMessage = logMessage + " [" + USRUtil.convertStringToUTF8(reportName) + "]";
                     }
                     logMessage = logMessage + ": ";
                     rs = null;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/usr/services/USRManager.java decompiled-9.3.9330/com/sonicwall/viewpoint/usr/services/USRManager.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/usr/services/USRManager.java	2023-09-08 15:13:15.137445878 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/usr/services/USRManager.java	2023-09-08 15:14:41.997002009 -0700
@@ -1291,10 +1291,10 @@
                     }
                     ScheduledTaskVO vo = new ScheduledTaskVO();
                     vo.setTaskID(rs.getString("id"));
-                    vo.setTaskName(rs.getString("name"));
+                    vo.setTaskName(USRUtil.convertStringToUTF8(rs.getString("name")));
                     vo.setTaskDisabled("1".equals(rs.getString("is_disabled")));
                     vo.setTaskType(rs.getString("type"));
-                    vo.setEmailSubject(emailSubject);
+                    vo.setEmailSubject(USRUtil.convertStringToUTF8(emailSubject));
                     vo.setDocFormat(rs.getString("format"));
                     vo.setDeliveryMethod(rs.getString("delivery_method"));
                     vo.setProductUnionID(rs.getString("product_union_id"));
@@ -1586,7 +1586,7 @@
             SGMSUtil.debugOut((Object)("USRManager.getSchedTaskConfig(): query - " + pstmt.toString()), 2);
             rs = pstmt.executeQuery();
             if (rs.next()) {
-                ret = rs.getString(1);
+                ret = USRUtil.convertStringToUTF8(rs.getString(1));
             }
         }
         catch (Exception e) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/usr/util/USRUtil.java decompiled-9.3.9330/com/sonicwall/viewpoint/usr/util/USRUtil.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/usr/util/USRUtil.java	2023-09-08 15:13:14.972686994 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/usr/util/USRUtil.java	2023-09-08 15:14:41.882145405 -0700
@@ -39,6 +39,7 @@
 import java.io.StringWriter;
 import java.lang.reflect.Constructor;
 import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
@@ -759,7 +760,7 @@
     public static String generateReportName(Report report, Locale locale) {
         StringBuffer ret = new StringBuffer();
         String reportName = ReportMetaDataService.getInstance().getReportNameForLocale(report.getParentId(), locale);
-        ret.append(reportName == null ? "" : reportName).append(" - ").append(report.getDisplayName());
+        ret.append(reportName == null ? "" : reportName).append(" - ").append(report.getName());
         return ret.toString();
     }
 
@@ -1651,5 +1652,11 @@
         }
         return coverParams;
     }
+
+    public static String convertStringToUTF8(String value) {
+        byte[] bytes = value.getBytes(StandardCharsets.ISO_8859_1);
+        value = new String(bytes, StandardCharsets.UTF_8);
+        return value;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/util/FlowWSClient.java decompiled-9.3.9330/com/sonicwall/viewpoint/util/FlowWSClient.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/util/FlowWSClient.java	2023-09-08 15:13:15.358122928 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/util/FlowWSClient.java	2023-09-08 15:14:42.162795020 -0700
@@ -52,7 +52,7 @@
         }
     }
 
-    public String getRemoteFile(String[] path) {
+    public String getRemoteFile(String[] path, int id) {
         String outputFilePath = null;
         try {
             this.delegate = Client.create(cc);
@@ -62,7 +62,7 @@
             String schedulerSvcUri = scheduler.getWebServicesUrl();
             String[] hostPort = schedulerSvcUri.split(":");
             int port = hostPort.length == 3 && hostPort[2] != null && hostPort[2].length() > 0 ? Integer.parseInt(hostPort[2]) : 443;
-            URI uri = new URI(hostPort[0], null, hostPort[1].replace("//", ""), port, SVC_URI.replace("{fileName}", SGMSUtil.encrypt(path[0])), "username=" + WsSettingsService.getReference().getLocalSerialNumber() + "&password=" + WsSettingsService.getReference().getLocalSecurityCode(), null);
+            URI uri = new URI(hostPort[0], null, hostPort[1].replace("//", ""), port, SVC_URI.replace("{fileName}", SGMSUtil.encrypt(path[0] + "," + id)), "username=" + WsSettingsService.getReference().getLocalSerialNumber() + "&password=" + WsSettingsService.getReference().getLocalSecurityCode(), null);
             WebResource resource = this.delegate.resource(uri);
             ClientResponse response = resource.get(ClientResponse.class);
             File input = new File(path[0]);
@@ -77,6 +77,7 @@
                 while ((bytesRead = in.read(buffer)) != -1) {
                     ((OutputStream)outStream).write(buffer, 0, bytesRead);
                 }
+                outStream.flush();
                 IOUtils.closeQuietly(in);
                 IOUtils.closeQuietly(outStream);
                 SGMSUtil.debugOut((Object)("Result size:" + tempFile.length() + " written to " + tempFile.getPath()), 4);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/util/ViewpointConstants.java decompiled-9.3.9330/com/sonicwall/viewpoint/util/ViewpointConstants.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/util/ViewpointConstants.java	2023-09-08 15:13:15.333159461 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/util/ViewpointConstants.java	2023-09-08 15:14:42.143818712 -0700
@@ -375,5 +375,7 @@
     public static final String cfDataPath = "files" + File.separator + "ecm" + File.separator + "cfdata";
     public static final String cfDataArchivedFolder = "archivedFiles";
     public static final String cfDataBadFolder = "badFiles";
+    public static final int MONTHLY_TABLE_OPTIMIZATION = 0;
+    public static final int DAILY_TABLE_OPTIMIZATION = 1;
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/viewpoint/util/ViewpointUtil.java decompiled-9.3.9330/com/sonicwall/viewpoint/util/ViewpointUtil.java
--- decompiled-9.3.9320/com/sonicwall/viewpoint/util/ViewpointUtil.java	2023-09-08 15:13:15.340149232 -0700
+++ decompiled-9.3.9330/com/sonicwall/viewpoint/util/ViewpointUtil.java	2023-09-08 15:14:42.149811230 -0700
@@ -20,6 +20,10 @@
 import com.sonicwall.sgms.util.ConfigFileReaderUtil;
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.viewpoint.bean.ReportTimeZones;
+import com.sonicwall.viewpoint.common.service.ConfigurationService;
+import com.sonicwall.viewpoint.common.service.DatabaseService;
+import com.sonicwall.viewpoint.ng.util.NGConstants;
+import com.sonicwall.viewpoint.ng.util.SummarizerRawTableUtil;
 import com.sonicwall.viewpoint.servlet.ActionUtils;
 import com.sonicwall.viewpoint.util.ReportDataManagementUtil;
 import com.sonicwall.viewpoint.util.VpSummarizerSettings;
@@ -4317,5 +4321,91 @@
     private static long getEpochDayForDate(Calendar time) {
         return (time.getTimeInMillis() + (long)(time.get(15) + time.get(16))) / 86400000L;
     }
+
+    private static String getCreateTableDDL(String prefix, String ibdbengine, boolean isSerialSchemaEnabled) {
+        String createTableDDL = null;
+        if (!SGMSUtil.isEPRS()) {
+            if (prefix.equalsIgnoreCase("V70")) {
+                createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V70 : NGConstants.CREATE_TABLE_V70_PG;
+            } else if (prefix.equalsIgnoreCase("V72")) {
+                createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V72 : NGConstants.CREATE_TABLE_V72_PG;
+            } else if (prefix.equalsIgnoreCase("V80")) {
+                createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V80 : NGConstants.CREATE_TABLE_V80_PG;
+            } else if (prefix.equalsIgnoreCase("V81")) {
+                createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V81 : NGConstants.CREATE_TABLE_V81_PG;
+            } else if (prefix.equalsIgnoreCase("V812")) {
+                createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V812 : NGConstants.CREATE_TABLE_V812_PG;
+            } else if (prefix.equalsIgnoreCase("V82")) {
+                createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V82 : NGConstants.CREATE_TABLE_V82_PG;
+            } else if (prefix.equalsIgnoreCase("V86")) {
+                createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V86 : NGConstants.CREATE_TABLE_V86_PG;
+            } else if (prefix.equalsIgnoreCase("V87") && isSerialSchemaEnabled) {
+                createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V87S : NGConstants.CREATE_TABLE_V87S_PG;
+            } else if (prefix.equalsIgnoreCase("V87") && !isSerialSchemaEnabled) {
+                createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_V87P : NGConstants.CREATE_TABLE_V87P_PG;
+            }
+        } else if (prefix.equalsIgnoreCase("V70")) {
+            createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS : NGConstants.CREATE_TABLE_EPRS_PG;
+        } else if (prefix.equalsIgnoreCase("V72")) {
+            createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_72 : NGConstants.CREATE_TABLE_EPRS_72_PG;
+        } else if (prefix.equalsIgnoreCase("V80")) {
+            createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_80 : NGConstants.CREATE_TABLE_EPRS_80_PG;
+        } else if (prefix.equalsIgnoreCase("V81")) {
+            createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_81 : NGConstants.CREATE_TABLE_EPRS_81_PG;
+        } else if (prefix.equalsIgnoreCase("V812")) {
+            createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_812 : NGConstants.CREATE_TABLE_EPRS_812_PG;
+        } else if (prefix.equalsIgnoreCase("V82")) {
+            createTableDDL = ibdbengine.equalsIgnoreCase("mysql") ? NGConstants.CREATE_TABLE_EPRS_82 : NGConstants.CREATE_TABLE_EPRS_82_PG;
+        }
+        return createTableDDL;
+    }
+
+    /*
+     * WARNING - Removed try catching itself - possible behaviour change.
+     */
+    public static boolean createSummarizerRawTable(String table, String prefix) {
+        boolean createTableResponse = false;
+        Connection conn = null;
+        Statement pstmt = null;
+        String ibdbengine = ConfigurationService.getSetting("ibdbengine", "mysql");
+        boolean isSerialSchemaEnabled = SummarizerRawTableUtil.getInstance().isSerialSchemaEnabled();
+        try {
+            conn = DatabaseService.getLocalConnection();
+            String createTableDDL = ViewpointUtil.getCreateTableDDL(prefix, ibdbengine, isSerialSchemaEnabled);
+            if (ibdbengine.equalsIgnoreCase("mysql")) {
+                String engine = DatabaseService.isDevMode() ? "ENGINE = MYISAM; " : "ENGINE = BRIGHTHOUSE DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci; ";
+                pstmt = conn.prepareStatement(createTableDDL.replace("?", table) + engine);
+            } else if (ibdbengine.equalsIgnoreCase("postgres")) {
+                pstmt = conn.prepareStatement(createTableDDL.replace("?", table));
+            }
+            createTableResponse = pstmt.execute();
+            conn.setAutoCommit(false);
+            SGMSUtil.debugOut("summaryData:createSummarizedRawTable - Summarized raw table created successfully " + table);
+        }
+        catch (Exception e) {
+            SGMSUtil.debugOut("summaryData:createSummarizedRawTable - Exception creating Summarized table " + e);
+        }
+        finally {
+            if (pstmt != null) {
+                try {
+                    pstmt.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.logError(e, "Error closing resource: " + e.getMessage(), "createSummarizerRawTable", "ViewpointUtil");
+                }
+            }
+            if (conn != null) {
+                try {
+                    conn.commit();
+                    conn.setAutoCommit(true);
+                    conn.close();
+                }
+                catch (SQLException e) {
+                    SGMSUtil.logError(e, "Error closing resource: " + e.getMessage(), "createSummarizerRawTable", "ViewpointUtil");
+                }
+            }
+        }
+        return createTableResponse;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/model/cas/CASAction.java decompiled-9.3.9330/com/sonicwall/ws/model/cas/CASAction.java
--- decompiled-9.3.9320/com/sonicwall/ws/model/cas/CASAction.java	2023-09-08 15:13:16.192901272 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/model/cas/CASAction.java	2023-09-08 15:14:42.897877287 -0700
@@ -57,8 +57,8 @@
         return SGMSUtil2.unescapeUserID(this.user);
     }
 
-    public void setUser(String user2) {
-        this.user = SGMSUtil2.escapeUserID(user2);
+    public void setUser(String user) {
+        this.user = SGMSUtil2.escapeUserID(user);
     }
 
     public Set<String> getDomains() {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/model/Deployment.java decompiled-9.3.9330/com/sonicwall/ws/model/Deployment.java
--- decompiled-9.3.9320/com/sonicwall/ws/model/Deployment.java	2023-09-08 15:13:16.245823822 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/model/Deployment.java	2023-09-08 15:14:42.917852349 -0700
@@ -3,9 +3,9 @@
  */
 package com.sonicwall.ws.model;
 
+import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.viewpoint.common.model.BaseObject;
 import com.sonicwall.ws.model.DeploymentService;
-import com.sonicwall.ws.util.HashUtil;
 import java.util.GregorianCalendar;
 import java.util.List;
 import java.util.TimeZone;
@@ -73,12 +73,7 @@
     }
 
     public String getSecurityCode() {
-        String currentUtcDate = this.getUtcDateStr();
-        if (this.lastUtcDate == null || !this.lastUtcDate.equals(currentUtcDate)) {
-            this.securityCode = HashUtil.SHA(this.serial + HashUtil.SHA(currentUtcDate));
-            this.lastUtcDate = currentUtcDate;
-        }
-        return this.securityCode;
+        return SGMSUtil.getSecurityCode(this.serial);
     }
 
     private String getUtcDateStr() {
Only in decompiled-9.3.9320/com/sonicwall/ws: repository
Only in decompiled-9.3.9320/com/sonicwall/ws/resource: cas
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/resource/file/ConfigurationSettings.java decompiled-9.3.9330/com/sonicwall/ws/resource/file/ConfigurationSettings.java
--- decompiled-9.3.9320/com/sonicwall/ws/resource/file/ConfigurationSettings.java	2023-09-08 15:13:16.350670384 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/resource/file/ConfigurationSettings.java	2023-09-08 15:14:42.982771299 -0700
@@ -11,11 +11,15 @@
 import com.sonicwall.appliance.util.LicenseUtil;
 import com.sonicwall.appliance.util.Result;
 import com.sonicwall.sgms.database.DataBaseConnectionPool;
+import com.sonicwall.sgms.manager.UserManager;
+import com.sonicwall.sgms.util.AESUtil;
 import com.sonicwall.sgms.util.BASE64Encoder;
+import com.sonicwall.sgms.util.Base64;
 import com.sonicwall.sgms.util.ConfigFileReaderUtil;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.SGMSUtil;
+import com.sonicwall.sgms.util.TEAV;
 import com.sonicwall.ws.servlet.auth.HttpDigestAuthenticator;
-import com.sonicwall.ws.util.HashUtil;
 import com.sonicwall.ws.util.WebServiceUtil;
 import java.io.BufferedReader;
 import java.io.IOException;
@@ -55,23 +59,36 @@
 
 @Path(value="/file/configsettings/{methodIdentifier}")
 public class ConfigurationSettings {
+    private UserManager userManager;
+
     @GET
     @Produces(value={"application/xml", "application/json"})
     public Response get(@PathParam(value="methodIdentifier") String methodIdentifier) {
+        SGMSUtil.debugOut("RECEIVED REQUEST FOR " + methodIdentifier);
         if (methodIdentifier == null || methodIdentifier.isEmpty()) {
+            SGMSUtil.debugOut("Method identifier is missing in the request.");
             SGMSUtil.logError(null, "Method identifier is missing in the request.", "get", "ConfigurationSettings");
             return Response.status(Response.Status.BAD_REQUEST).entity("A required parameter 'method Identifier' was not supplied.").type("text/plain").build();
         }
         LinkedHashMap<String, String> parameters = new LinkedHashMap<String, String>();
         Result<String> configSettingsResult = null;
+        try {
         if (methodIdentifier.equals("AUTH")) {
             SGMSUtil.debugOut((Object)"About to retrieve Auth info ", 4);
             configSettingsResult = this.getAuthInfo();
+                SGMSUtil.debugOut((Object)"Got auth settings ", 4);
         } else if (methodIdentifier.equals("CONFIG")) {
             SGMSUtil.debugOut((Object)"About to retrieve configuration settings ", 4);
             configSettingsResult = this.getConfigurationSettings();
+                SGMSUtil.debugOut((Object)"Got configuration settings ", 4);
+            }
+        }
+        catch (Exception e) {
+            SGMSUtil.debugOut("ERROR for : " + methodIdentifier + " : " + e.getMessage());
+            SGMSUtil.logError(e, e.getMessage(), "get", "ConfigurationSettings");
         }
         if (configSettingsResult == null || configSettingsResult.getStatus() == Result.STATUS.ERROR || configSettingsResult.getResultData() == null || configSettingsResult.getResultData().isEmpty()) {
+            SGMSUtil.debugOut("Failed to gather the configuration settings : " + methodIdentifier);
             SGMSUtil.logError(null, "Failed to gather the configuration settings", "get", "ConfigurationSettings");
             return Response.status(Response.Status.SERVICE_UNAVAILABLE).entity(configSettingsResult != null ? configSettingsResult.getMessages() : "Failed to retrieve configuration settings.").type("text/plain").build();
         }
@@ -82,8 +99,14 @@
             parameters.put("message", "Failed to retrieve configuration settings.");
             return Response.status(Response.Status.OK).entity(parameters).type("application/json").build();
         }
+        if (this.userManager == null) {
+            this.userManager = (UserManager)UserManager.getReference();
+        }
+        String encPwd = Base64.encodeUsingJdk8(this.userManager.getPasswordHash("admin", "DMN0000000000000000000000001").getBytes());
+        String encryptedResultantStr = AESUtil.encryptWithKey(resultantStr, encPwd);
+        SGMSUtil.debugOut("encryptedResultantStr for " + methodIdentifier + " : " + encryptedResultantStr);
         parameters.put("status", "success");
-        parameters.put("message", resultantStr);
+        parameters.put("message", encryptedResultantStr);
         return Response.status(Response.Status.OK).entity(parameters).type("application/json").build();
     }
 
@@ -131,15 +154,15 @@
         }
         dbConfigData.addProperty("dbhost", ipAddress);
         dbConfigData.addProperty("dbport", (String)applianceConfig.get("dbport"));
-        dbConfigData.addProperty("dbname", (String)applianceConfig.get("dbname"));
-        dbConfigData.addProperty("dbuser", (String)applianceConfig.get("dbuser"));
-        dbConfigData.addProperty("dbowner", (String)applianceConfig.get("dbowner"));
+        dbConfigData.addProperty("dbname", TEAV.encryptTextInHex(TEAV.decryptText((String)applianceConfig.get("dbname"))));
+        dbConfigData.addProperty("dbuser", TEAV.encryptTextInHex(TEAV.decryptText((String)applianceConfig.get("dbuser"))));
+        dbConfigData.addProperty("dbowner", TEAV.encryptTextInHex(TEAV.decryptText((String)applianceConfig.get("dbowner"))));
         dbConfigData.addProperty("datasource", (String)applianceConfig.get("datasource"));
-        dbConfigData.addProperty("dbpassword", (String)applianceConfig.get("dbpassword"));
+        dbConfigData.addProperty("dbpassword", TEAV.encryptTextInHex(TEAV.decryptText((String)applianceConfig.get("dbpassword"))));
         dbConfigData.addProperty("dbdriver", (String)applianceConfig.get("dbdriver"));
         dbConfigData.addProperty("dburl", (String)applianceConfig.get("dburl"));
-        dbConfigData.addProperty("dbadminlogin", (String)applianceConfig.get("dbadminlogin"));
-        dbConfigData.addProperty("dbadminpassword", (String)applianceConfig.get("dbadminpassword"));
+        dbConfigData.addProperty("dbadminlogin", TEAV.encryptTextInHex(TEAV.decryptText((String)applianceConfig.get("dbadminlogin"))));
+        dbConfigData.addProperty("dbadminpassword", TEAV.encryptTextInHex(TEAV.decryptText((String)applianceConfig.get("dbadminpassword"))));
         dbConfigData.addProperty("dbconnections", (String)applianceConfig.get("dbconnections"));
         datasets.add(dbConfigData);
         SGMSUtil su = new SGMSUtil(DataBaseConnectionPool.getReference());
@@ -174,7 +197,7 @@
         return result;
     }
 
-    private Result<String> getAuthInfo() {
+    private Result<String> getAuthInfo() throws IOException {
         Result<String> result = new Result<String>();
         ArrayList<String> resultData = new ArrayList<String>();
         String resultStr = "";
@@ -187,6 +210,7 @@
             JsonObject authData = new JsonObject();
             authData.addProperty("primaryConsolePasswordSeed", pcseed);
             authData.addProperty("primaryConsolePasswordHash", pchash);
+            authData.addProperty("id", KeyStotreUtil.getUUID());
             datasets.add(authData);
             resultStr = datasets.toString();
             if (resultStr == null || resultStr.isEmpty()) {
@@ -215,7 +239,7 @@
             HashMap<String, String> map = new HashMap<String, String>();
             String userName = "Agent";
             String realm = "localdomain";
-            String password = ConfigurationSettings.getSecurityCode(userName);
+            String password = SGMSUtil.createSecurityCode(userName);
             String method = "GET";
             String uri = "/ws/file/";
             String qop = "auth";
@@ -225,7 +249,7 @@
             String opaque = "5ccc069c403ebaf9f0171e9517f40e41";
             try {
                 method = "GET";
-                password = ConfigurationSettings.getSecurityCode(userName);
+                password = SGMSUtil.createSecurityCode(userName);
                 MyServletRequest msr = new ConfigurationSettings().new MyServletRequest();
                 HttpDigestAuthenticator digestAuth1 = new HttpDigestAuthenticator(msr);
                 digestAuth1.setUsername(userName);
@@ -249,10 +273,6 @@
         }
     }
 
-    public static String getSecurityCode(String serial) {
-        return HashUtil.SHA(serial + HashUtil.SHA(ConfigurationSettings.getUtcDateStr()));
-    }
-
     private static String getUtcDateStr() {
         GregorianCalendar calendar = new GregorianCalendar();
         calendar.setTimeZone(TimeZone.getTimeZone("UTC"));
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/resource/file/FlowReportTransfer.java decompiled-9.3.9330/com/sonicwall/ws/resource/file/FlowReportTransfer.java
--- decompiled-9.3.9320/com/sonicwall/ws/resource/file/FlowReportTransfer.java	2023-09-08 15:13:16.349671846 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/resource/file/FlowReportTransfer.java	2023-09-08 15:14:42.980773793 -0700
@@ -3,9 +3,13 @@
  */
 package com.sonicwall.ws.resource.file;
 
+import com.sonicwall.sgms.database.DataBaseConnectionPool;
+import com.sonicwall.sgms.manager.ParamsManager;
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.ws.resource.file.FileStreamer;
 import java.io.File;
+import java.sql.ResultSet;
+import java.sql.SQLException;
 import javax.ws.rs.DELETE;
 import javax.ws.rs.GET;
 import javax.ws.rs.Path;
@@ -18,25 +22,82 @@
     @GET
     @Produces(value={"application/octet-stream"})
     public Response get(@PathParam(value="fileName") String fileName) {
-        fileName = SGMSUtil.decrypt(fileName);
-        SGMSUtil.debugOut("File requested - " + fileName);
-        File outputFile = new File(fileName);
-        if (!outputFile.exists()) {
-            return Response.status(Response.Status.NOT_FOUND).entity("file was not found").type("text/plain").build();
+        String[] split = (fileName = SGMSUtil.decrypt(fileName)).split(",");
+        if (split.length != 2) {
+            return Response.status(Response.Status.BAD_REQUEST).entity("Invalid file name format").type("text/plain").build();
         }
+        String path = split[0];
+        String id = split[1];
+        boolean pathCheck = this.checkIdPath(path, id);
+        if (!pathCheck) {
+            return Response.status(Response.Status.NOT_FOUND).entity("File was not found").type("text/plain").build();
+        }
+        File outputFile = new File(path);
         return Response.ok(new FileStreamer(outputFile)).build();
     }
 
+    private boolean checkIdPath(String path, String id) {
+        ParamsManager pm = (ParamsManager)ParamsManager.getReference();
+        String query = "SELECT path FROM " + DataBaseConnectionPool.getTablePrefix() + "vpusr_report_archives WHERE id = ?";
+        String[] queryValues = new String[]{id};
+        try {
+            ResultSet rs = ParamsManager.executeQueryPS(query, queryValues);
+            if (rs.next()) {
+                String dbEncryptedPath = rs.getString("path");
+                String dbDecryptedPath = SGMSUtil.decrypt(dbEncryptedPath);
+                String[] dbDecryptedPathSplit = dbDecryptedPath.split(",");
+                String dbPath = dbDecryptedPathSplit[0];
+                return dbPath.equals(path);
+            }
+        }
+        catch (SQLException e) {
+            SGMSUtil.debugOut("FlowReportTransfer: checkIdPath() : Exception occured " + e.getMessage());
+        }
+        return false;
+    }
+
     @DELETE
     public void delete(@PathParam(value="fileName") String fileName) {
-        fileName = SGMSUtil.decrypt(fileName);
-        SGMSUtil.debugOut("File delete requested - " + fileName);
-        File archiveFile = new File(fileName);
+        block11: {
+            String[] split = (fileName = SGMSUtil.decrypt(fileName)).split(",");
+            if (split.length != 2) {
+                return;
+            }
+            String path = split[0];
+            String id = split[1];
+            boolean pathCheck = this.checkIdPath(path, id);
+            if (pathCheck) {
+                File archiveFile = new File(path);
+                try {
         if (archiveFile.exists()) {
-            archiveFile.delete();
+                        boolean deleted = archiveFile.delete();
+                        if (deleted) {
+                            ParamsManager pm = (ParamsManager)ParamsManager.getReference();
+                            String query = "DELETE FROM " + DataBaseConnectionPool.getTablePrefix() + "vpusr_report_archives WHERE id = ?";
+                            String[] queryValues = new String[]{id};
+                            try {
+                                ResultSet resultSet = ParamsManager.executeQueryPS(query, queryValues);
+                            }
+                            catch (SQLException e) {
+                                SGMSUtil.debugOut("FlowReportTransfer: delete() : Exception occured  " + e.getMessage());
+                            }
+                        } else {
+                            SGMSUtil.debugOut("FlowReportTransfer: Failed to delete the file ");
+                        }
+                        break block11;
+                    }
+                    SGMSUtil.debugOut("FlowReportTransfer: archive file does not exist ");
+                }
+                catch (SecurityException e) {
+                    SGMSUtil.debugOut("FlowReportTransfer: SecurityException occurred while deleting the file: " + e.getMessage());
+                }
+                catch (Exception e) {
+                    SGMSUtil.debugOut("FlowReportTransfer: Exception occurred while deleting the file: " + e.getMessage());
+                }
         } else {
             SGMSUtil.debugOut("File was not found - " + fileName);
         }
     }
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/resource/hosted/Tenant.java decompiled-9.3.9330/com/sonicwall/ws/resource/hosted/Tenant.java
--- decompiled-9.3.9320/com/sonicwall/ws/resource/hosted/Tenant.java	2023-09-08 15:13:16.384620700 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/resource/hosted/Tenant.java	2023-09-08 15:14:43.005742620 -0700
@@ -11,6 +11,7 @@
 import com.sonicwall.sgms.manager.DomainManager;
 import com.sonicwall.sgms.manager.NodePermissionsManager;
 import com.sonicwall.sgms.util.Escape;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.ws.servlet.auth.MSWAuthenticator;
 import com.sonicwall.ws.task.CreateOrUpdateDomainTask;
@@ -279,14 +280,13 @@
         }
         System.out.println(" Tenant info json = " + gson.toJson(tInfo));
         String unitSerial = args[0];
-        System.out.println(MSWAuthenticator.getAuthKey(unitSerial, "?~!@#$%^^()"));
         try {
             String serial = "004010355EB2";
             try {
                 WebServiceUtil util = new WebServiceUtil("https://10.205.119.205:8443/ws/msw/tenant/" + serial + "/unregister", 1, "user", "password");
                 JsonObject json = new JsonObject();
                 json.addProperty("user", "MSWUser");
-                json.addProperty("hash", MSWAuthenticator.getAuthKey(serial, "?~!@#$%^^()"));
+                json.addProperty("hash", MSWAuthenticator.getAuthKey(serial, KeyStotreUtil.getValueFromKeystore("msw_tenant_api_pvt_key")));
                 System.out.println("JSON generated = " + json.toString());
                 util.setPostData("application/json", json.toString());
                 System.out.println("AFTER set POST data");
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/resource/hosted/Unit.java decompiled-9.3.9330/com/sonicwall/ws/resource/hosted/Unit.java
--- decompiled-9.3.9320/com/sonicwall/ws/resource/hosted/Unit.java	2023-09-08 15:13:16.381625084 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/resource/hosted/Unit.java	2023-09-08 15:14:43.003745113 -0700
@@ -10,6 +10,7 @@
 import com.sonicwall.sgms.manager.DomainManager;
 import com.sonicwall.sgms.manager.LogsManager;
 import com.sonicwall.sgms.util.Escape;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.ws.servlet.auth.MSWAuthenticator;
 import com.sonicwall.ws.task.DeleteUnitTask;
@@ -180,7 +181,7 @@
                 WebServiceUtil util = new WebServiceUtil("https://10.50.12.82:8443/ws/msw/tenant/" + serial + "/unit/" + unitSerial + "/delete", 1, "user", "password");
                 JsonObject json = new JsonObject();
                 json.addProperty("user", "MSWUser");
-                json.addProperty("hash", MSWAuthenticator.getAuthKey(unitSerial, "?~!@#$%^^()"));
+                json.addProperty("hash", MSWAuthenticator.getAuthKey(unitSerial, KeyStotreUtil.getValueFromKeystore("msw_tenant_api_pvt_key")));
                 System.out.println("JSON generated = " + json.toString());
                 util.setPostData("application/json", json.toString());
                 System.out.println("AFTER set POST data");
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/resource/licensemanager/OfflineLicense.java decompiled-9.3.9330/com/sonicwall/ws/resource/licensemanager/OfflineLicense.java
--- decompiled-9.3.9320/com/sonicwall/ws/resource/licensemanager/OfflineLicense.java	2023-09-08 15:13:16.305736143 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/resource/licensemanager/OfflineLicense.java	2023-09-08 15:14:42.950811200 -0700
@@ -19,7 +19,6 @@
 import com.sonicwall.ws.resource.file.DataFeeds;
 import com.sonicwall.ws.resource.file.InboundDataFeed;
 import com.sonicwall.ws.servlet.auth.HttpDigestAuthenticator;
-import com.sonicwall.ws.util.HashUtil;
 import com.sonicwall.ws.util.WebServiceConstants;
 import com.sonicwall.ws.util.WebServiceUtil;
 import java.io.BufferedOutputStream;
@@ -458,7 +457,7 @@
             HashMap<String, String> map = new HashMap<String, String>();
             String userName = serial = "0040102778F8";
             String realm = "localdomain";
-            String password = OfflineLicense.getSecurityCode(serial);
+            String password = SGMSUtil.createSecurityCode(serial);
             String method = "POST";
             String uri = "/ws/offlinelicense/";
             String qop = "auth";
@@ -482,7 +481,7 @@
             }
             try {
                 method = "GET";
-                password = OfflineLicense.getSecurityCode(serial);
+                password = SGMSUtil.createSecurityCode(serial);
                 msr = new OfflineLicense().new MyServletRequest();
                 HttpDigestAuthenticator digestAuth1 = new HttpDigestAuthenticator(msr);
                 digestAuth1.setUsername(serial);
@@ -521,10 +520,6 @@
         }
     }
 
-    public static String getSecurityCode(String serial) {
-        return HashUtil.SHA(serial + HashUtil.SHA(OfflineLicense.getUtcDateStr()));
-    }
-
     private static String getUtcDateStr() {
         GregorianCalendar calendar = new GregorianCalendar();
         calendar.setTimeZone(TimeZone.getTimeZone("UTC"));
Only in decompiled-9.3.9320/com/sonicwall/ws/service: cas
Only in decompiled-9.3.9320/com/sonicwall/ws/servlet/auth: CASClientAuthenticator.java
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/servlet/auth/DeploymentAuthenticator.java decompiled-9.3.9330/com/sonicwall/ws/servlet/auth/DeploymentAuthenticator.java
--- decompiled-9.3.9320/com/sonicwall/ws/servlet/auth/DeploymentAuthenticator.java	2023-09-08 15:13:16.084060555 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/servlet/auth/DeploymentAuthenticator.java	2023-09-08 15:14:42.815979534 -0700
@@ -7,7 +7,6 @@
 import com.sonicwall.ws.model.Deployment;
 import com.sonicwall.ws.service.WsSettingsService;
 import com.sonicwall.ws.servlet.auth.HttpDigestAuthenticator;
-import com.sonicwall.ws.util.HashUtil;
 import com.sonicwall.ws.util.HelperMethods;
 import java.net.InetAddress;
 import java.net.UnknownHostException;
@@ -19,18 +18,20 @@
     public static boolean authenticate(HttpServletRequest request, String deploymentSerial, String securityCode, HttpDigestAuthenticator auth) {
         boolean authenticated = false;
         String ipAddress = request.getRemoteAddr();
+        SGMSUtil.debugOut((Object)"[WS] DeploymentAuth Performing auth", 2);
         if (deploymentSerial == null) {
             SGMSUtil.logError(null, "User name or deployment serial is not available in the request from " + ipAddress, "authenticate", "DeploymentAuthenticator");
             HelperMethods.getLogsManager().addNewLogFYI("", "", ipAddress + " failed to authenticate with Web Services", "", "DMN0000000000000000000000001");
             return false;
         }
         if (deploymentSerial.equals("Agent") && auth != null) {
-            String currentUtcDate = DeploymentAuthenticator.getUtcDateStr();
-            securityCode = HashUtil.SHA(deploymentSerial + HashUtil.SHA(currentUtcDate));
+            securityCode = SGMSUtil.getSecurityCode(deploymentSerial);
             auth.setPassword(securityCode);
             authenticated = auth.isAuthenticated();
+            SGMSUtil.debugOut((Object)("[WS] Deployement Auth Agent authenticated = " + authenticated), 2);
         } else if (deploymentSerial.equals(WsSettingsService.getReference().getLocalSerialNumber()) && ipAddress.equals("127.0.0.1")) {
             authenticated = true;
+            SGMSUtil.debugOut((Object)("[WS] Deployement Auth Localhost authenticated = " + authenticated), 2);
         } else {
             Deployment deployment = WsSettingsService.getReference().getDeployment(deploymentSerial);
             if (deployment != null) {
@@ -54,12 +55,15 @@
                         }
                         SGMSUtil.debugOut("Proxy is in effect, and the IP for the proxy = " + proxyAddress);
                     }
-                    boolean bl = authenticated = securityCode.equals(deployment.getSecurityCode()) && (ipAddress.equals(deployment.getIpAddress()) || isProxySet != false && proxyAddress != null && ipAddress.equals(proxyAddress));
+                    authenticated = securityCode.equals(deployment.getSecurityCode()) && (ipAddress.equals(deployment.getIpAddress()) || isProxySet != false && proxyAddress != null && ipAddress.equals(proxyAddress));
+                    SGMSUtil.debugOut((Object)("[WS] Deployement Auth Non Agent authenticated = " + authenticated), 2);
                 }
             }
         }
         if (authenticated) {
             HelperMethods.getLogsManager().addNewLogFYI("", "", "GMS node at " + ipAddress + " authenticated to Web Services", "", "DMN0000000000000000000000001");
+        } else {
+            SGMSUtil.debugOut((Object)"[WS] Deployement Auth Failed = ", 2);
         }
         return authenticated;
     }
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/servlet/auth/HttpDigestAuthenticator.java decompiled-9.3.9330/com/sonicwall/ws/servlet/auth/HttpDigestAuthenticator.java
--- decompiled-9.3.9320/com/sonicwall/ws/servlet/auth/HttpDigestAuthenticator.java	2023-09-08 15:13:16.085059093 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/servlet/auth/HttpDigestAuthenticator.java	2023-09-08 15:14:42.815979534 -0700
@@ -64,6 +64,7 @@
         String serverDigestMd5 = HttpDigestAuthenticator.generateDigest(false, this.username, this.realm, this.password, this.method, this.uri, this.qop, this.nonce, this.nc, this.cnonce);
         if (!serverDigestMd5.equals(this.responseDigest)) {
             LOG.error("Digest was not equal; rejecting authentication attempt");
+            LOG.debug("[WS] Digest Was not Equal");
             return false;
         }
         LOG.debug("Authentication success for principal " + this.username);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/servlet/auth/MSWAuthenticator.java decompiled-9.3.9330/com/sonicwall/ws/servlet/auth/MSWAuthenticator.java
--- decompiled-9.3.9320/com/sonicwall/ws/servlet/auth/MSWAuthenticator.java	2023-09-08 15:13:16.080066400 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/servlet/auth/MSWAuthenticator.java	2023-09-08 15:14:42.813982028 -0700
@@ -4,19 +4,22 @@
 package com.sonicwall.ws.servlet.auth;
 
 import com.sonicwall.sgms.util.Base64;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.ws.util.HelperMethods;
 import java.io.UnsupportedEncodingException;
 import java.security.InvalidKeyException;
 import java.security.NoSuchAlgorithmException;
+import java.text.SimpleDateFormat;
+import java.util.TimeZone;
 import javax.crypto.Mac;
 import javax.crypto.spec.SecretKeySpec;
 
 public class MSWAuthenticator {
     public static final String REQ_HEADER_HGMS_USER = "user";
     public static final String REQ_HEADER_HASH = "hash";
-    public static final String TENANT_API_AUTH_PRIVATE_KEY = "?~!@#$%^^()";
-    public static final String GET_PRODUCT_USERS_DETAIL_API_PRIVATE_KEY = "?~@@#$%^^()";
-    public static final String COMPLETE_HOSTED_SETUP_API_PRIVATE_KEY = "?~@@#$%^^()";
+    public static final String TENANT_API_AUTH_PVT_KEY = "msw_tenant_api_pvt_key";
+    public static final String GET_PRODUCT_USERS_DETAIL_API_PVT_KEY = "msw_product_user_api_pvt_key";
+    public static final String COMPLETE_HOSTED_SETUP_API_PRIVATE_KEY = "msw_product_user_api_pvt_key";
     public static final String MSW_USER = "MSWUser";
     public static final String SYSTEM_USER = "system";
 
@@ -26,8 +29,9 @@
     public static boolean authenticate(String user2, String domainName, String hash) {
         boolean authenticated = false;
         try {
+            String authKey;
             String computedHash;
-            if (HelperMethods.stringsHaveLength(user2, hash) && (user2.equals(MSW_USER) || user2.equals(SYSTEM_USER)) && (computedHash = MSWAuthenticator.getAuthKey(domainName, TENANT_API_AUTH_PRIVATE_KEY)) != null) {
+            if (HelperMethods.stringsHaveLength(user2, hash) && (user2.equals(MSW_USER) || user2.equals(SYSTEM_USER)) && (computedHash = MSWAuthenticator.getAuthKey(domainName, authKey = KeyStotreUtil.getValueFromKeystore(TENANT_API_AUTH_PVT_KEY))) != null) {
                 authenticated = computedHash.equalsIgnoreCase(hash);
             }
         }
@@ -53,5 +57,10 @@
         authKey = new String(Base64.encode(bytes)).trim();
         return authKey;
     }
+
+    static {
+        KeyStotreUtil.df = new SimpleDateFormat("MMYYYYddHHmm");
+        KeyStotreUtil.df.setTimeZone(TimeZone.getTimeZone("IST"));
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/servlet/AuthorizationFilter.java decompiled-9.3.9330/com/sonicwall/ws/servlet/AuthorizationFilter.java
--- decompiled-9.3.9320/com/sonicwall/ws/servlet/AuthorizationFilter.java	2023-09-08 15:13:16.092048864 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/servlet/AuthorizationFilter.java	2023-09-08 15:14:42.822970806 -0700
@@ -16,7 +16,6 @@
 import com.sonicwall.ws.model.SecurityToken;
 import com.sonicwall.ws.service.WsSettingsService;
 import com.sonicwall.ws.servlet.auth.ApplianceAuthenticator;
-import com.sonicwall.ws.servlet.auth.CASClientAuthenticator;
 import com.sonicwall.ws.servlet.auth.DeploymentAuthenticator;
 import com.sonicwall.ws.servlet.auth.ECMClientAuthenticator;
 import com.sonicwall.ws.servlet.auth.HttpBasicAuthenticator;
@@ -190,9 +189,11 @@
                     SGMSUtil.debugOut((Object)("isLocalUser checks = " + isLocalUser), 5);
                 }
                 if (HelperMethods.stringHasLength(username) && (HelperMethods.stringHasLength(password) || digestAuth != null)) {
+                    SGMSUtil.debugOut((Object)"[WS] Attempting Agent Login", 2);
                     authorized = DeploymentAuthenticator.authenticate(req, username, password, digestAuth);
                     if (authorized) {
                         SGMSUtil.debugOut((Object)("Deployment Authenticator check. username = " + username + " password = " + password + " digestAuth = " + digestAuth), 5);
+                        SGMSUtil.debugOut((Object)"[WS] Agent Login Complete", 2);
                         username = "admin";
                         authenticationType = 3;
                     } else if (isLocalUser && (authorized = UserAuthenticator.authenticate(username, password, salt, domainId, digestAuth))) {
@@ -239,19 +240,6 @@
                             username = ecmSerial;
                         }
                     }
-                } else if (req.getPathInfo().startsWith("/cas/")) {
-                    String authorization = req.getHeader("Authorization") != null ? req.getHeader("Authorization") : "";
-                    String[] parts = authorization.split("\\s+");
-                    if (parts != null && parts.length == 2) {
-                        String hash;
-                        String user2 = parts[0] != null ? parts[0] : "";
-                        String string = hash = parts[1] != null ? parts[1] : "";
-                        if (!user2.isEmpty() && !hash.isEmpty() && CASClientAuthenticator.authenticate(user2, hash)) {
-                            authorized = true;
-                            authenticationType = 6;
-                            username = user2;
-                        }
-                    }
                 } else if (req.getPathInfo().startsWith("/msw/")) {
                     authorized = true;
                     authenticationType = 5;
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/task/AddUnitTask.java decompiled-9.3.9330/com/sonicwall/ws/task/AddUnitTask.java
--- decompiled-9.3.9320/com/sonicwall/ws/task/AddUnitTask.java	2023-09-08 15:13:16.136983105 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/task/AddUnitTask.java	2023-09-08 15:14:42.874905966 -0700
@@ -150,7 +150,7 @@
         WebServiceUtil util = new WebServiceUtil(addCompleteUrl, 1, "", "");
         HashMap<String, String> headers = new HashMap<String, String>();
         util.setHeaders(headers);
-        String authKey = MSWAuthenticator.getAuthKey(this.unitSerial, "?~@@#$%^^()");
+        String authKey = MSWAuthenticator.getAuthKey(this.unitSerial, "msw_product_user_api_pvt_key");
         JsonObject json = new JsonObject();
         json.addProperty(TENANT_SERIAL_NUMBER_KEY_PROPERTY, this.domainSerial);
         json.addProperty(AUTH_KEY_PROPERTY, authKey);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/task/CreateOrUpdateDomainTask.java decompiled-9.3.9330/com/sonicwall/ws/task/CreateOrUpdateDomainTask.java
--- decompiled-9.3.9320/com/sonicwall/ws/task/CreateOrUpdateDomainTask.java	2023-09-08 15:13:16.142974337 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/task/CreateOrUpdateDomainTask.java	2023-09-08 15:14:42.878900979 -0700
@@ -13,6 +13,7 @@
 import com.sonicwall.sgms.exception.DomainAlreadyExistsException;
 import com.sonicwall.sgms.manager.DomainManager;
 import com.sonicwall.sgms.manager.ParamsManager;
+import com.sonicwall.sgms.util.KeyStotreUtil;
 import com.sonicwall.sgms.util.SGMSConstants;
 import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.sgms.util.SGMSUtil2;
@@ -22,10 +23,12 @@
 import com.sonicwall.ws.task.SendCompletionStatusTask;
 import com.sonicwall.ws.util.HelperMethods;
 import com.sonicwall.ws.util.WebServiceUtil;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Hashtable;
 import java.util.List;
+import java.util.TimeZone;
 import java.util.Timer;
 import java.util.TimerTask;
 
@@ -33,8 +36,8 @@
 extends DomainTask {
     private String getUsersDetailUrl;
     private String registrationCompleteUrl;
-    public static final String GET_USER_DETAILS_API_URL = SGMSConstants.wsRegistrationSite + SGMSConstants.wsRegistrationURL + "/api/GetProductUsersDetail";
-    public static final String REGISTRATION_COMPLETED_URL = SGMSConstants.wsRegistrationSite + SGMSConstants.wsRegistrationURL + "/api/CompleteHostedSetup";
+    public static final String GET_USER_DETAILS_API_URL;
+    public static final String REGISTRATION_COMPLETED_URL;
     private static final String NAME_IS_MISSING_ERROR_CODE = "-21028";
     private static final String FAILED_TO_RETRIEVE_USERS_ERROR_CODE = "-21029";
     private static final String NO_USERS_AVAILABLE_ERROR_CODE = "-21030";
@@ -161,7 +164,8 @@
     }
 
     private List<UserDetails> getTenantUserDetails() throws Exception {
-        String authKey = this.getAuthKey("?~@@#$%^^()");
+        String mswKey = KeyStotreUtil.getValueFromKeystore("msw_product_user_api_pvt_key");
+        String authKey = this.getAuthKey(mswKey);
         Gson gson = new GsonBuilder().disableHtmlEscaping().create();
         JsonObject json = new JsonObject();
         json.addProperty("authkey", authKey);
@@ -202,7 +206,7 @@
         WebServiceUtil util = new WebServiceUtil(this.registrationCompleteUrl, 1, "", "");
         HashMap<String, String> headers = new HashMap<String, String>();
         util.setHeaders(headers);
-        String authKey = this.getAuthKey("?~@@#$%^^()");
+        String authKey = this.getAuthKey("msw_product_user_api_pvt_key");
         Gson gson = new GsonBuilder().disableHtmlEscaping().create();
         ArrayList<Product> products = new ArrayList<Product>();
         Product product = new Product(this.domainName, this.domainName, status);
@@ -342,6 +346,13 @@
         }
     }
 
+    static {
+        KeyStotreUtil.df = new SimpleDateFormat("MMYYYYddHHmm");
+        KeyStotreUtil.df.setTimeZone(TimeZone.getTimeZone("IST"));
+        GET_USER_DETAILS_API_URL = SGMSConstants.wsRegistrationSite + SGMSConstants.wsRegistrationURL + "/api/GetProductUsersDetail";
+        REGISTRATION_COMPLETED_URL = SGMSConstants.wsRegistrationSite + SGMSConstants.wsRegistrationURL + "/api/CompleteHostedSetup";
+    }
+
     private class SendCompletedStatusTask
     extends SendCompletionStatusTask {
         public SendCompletedStatusTask(Timer timer, String status, String statusMsg) {
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/task/DeleteDomainTask.java decompiled-9.3.9330/com/sonicwall/ws/task/DeleteDomainTask.java
--- decompiled-9.3.9320/com/sonicwall/ws/task/DeleteDomainTask.java	2023-09-08 15:13:16.146968492 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/task/DeleteDomainTask.java	2023-09-08 15:14:42.881897238 -0700
@@ -110,7 +110,7 @@
         WebServiceUtil util = new WebServiceUtil(this.deletionCompleteUrl, 1, "", "");
         HashMap<String, String> headers = new HashMap<String, String>();
         util.setHeaders(headers);
-        String authKey = this.getAuthKey("?~@@#$%^^()");
+        String authKey = this.getAuthKey("msw_product_user_api_pvt_key");
         JsonObject json = new JsonObject();
         json.addProperty("serialnumber", this.domainName);
         json.addProperty("authkey", authKey);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/task/DeleteUnitTask.java decompiled-9.3.9330/com/sonicwall/ws/task/DeleteUnitTask.java
--- decompiled-9.3.9320/com/sonicwall/ws/task/DeleteUnitTask.java	2023-09-08 15:13:16.140977260 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/task/DeleteUnitTask.java	2023-09-08 15:14:42.877902225 -0700
@@ -119,7 +119,7 @@
         WebServiceUtil util = new WebServiceUtil(this.deletionCompleteUrl, 1, "", "");
         HashMap<String, String> headers = new HashMap<String, String>();
         util.setHeaders(headers);
-        String authKey = this.getAuthKey(this.unitSerial, "?~@@#$%^^()");
+        String authKey = this.getAuthKey(this.unitSerial, "msw_product_user_api_pvt_key");
         JsonObject json = new JsonObject();
         json.addProperty("serialnumber", this.unitSerial);
         json.addProperty("authkey", authKey);
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/util/HelperMethods.java decompiled-9.3.9330/com/sonicwall/ws/util/HelperMethods.java
--- decompiled-9.3.9320/com/sonicwall/ws/util/HelperMethods.java	2023-09-08 15:13:16.114016715 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/util/HelperMethods.java	2023-09-08 15:14:42.849937139 -0700
@@ -44,17 +44,18 @@
         block6: {
             boolean bl;
             query = new StringBuilder();
+            String msg = "Web Services authentication failed for user " + username;
             if (DataBaseConnectionPool.isSQLServer()) {
-                query.append("SELECT top 1 LOG_TIME FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("LOGS WHERE MESSAGE = 'Web Services authentication failed for user ").append(username).append("' ORDER BY LOG_TIME DESC");
+                query.append("SELECT top 1 LOG_TIME FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("LOGS WHERE MESSAGE = ? ORDER BY LOG_TIME DESC");
             } else {
-                query.append("SELECT LOG_TIME FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("LOGS WHERE MESSAGE = 'Web Services authentication failed for user ").append(username).append("' ORDER BY LOG_TIME DESC LIMIT 1");
+                query.append("SELECT LOG_TIME FROM ").append(DataBaseConnectionPool.getTablePrefix()).append("LOGS WHERE MESSAGE = ? ORDER BY LOG_TIME DESC LIMIT 1");
             }
             SGMSUtil sgmsUtil = new SGMSUtil(DataBaseConnectionPool.getReference());
             rs = null;
             GregorianCalendar tsCal = new GregorianCalendar();
             Calendar currentTime = (Calendar)((Calendar)tsCal).clone();
             try {
-                rs = sgmsUtil.executeQuery(query.toString());
+                rs = SGMSUtil.executeQueryPS(query.toString(), new String[]{msg});
                 if (rs == null || !rs.next()) break block6;
                 Timestamp ts = rs.getTimestamp(1);
                 tsCal.setTimeInMillis(ts.getTime());
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/ws/util/WebServiceUtil.java decompiled-9.3.9330/com/sonicwall/ws/util/WebServiceUtil.java
--- decompiled-9.3.9320/com/sonicwall/ws/util/WebServiceUtil.java	2023-09-08 15:13:16.112019638 -0700
+++ decompiled-9.3.9330/com/sonicwall/ws/util/WebServiceUtil.java	2023-09-08 15:14:42.847939633 -0700
@@ -3,6 +3,10 @@
  */
 package com.sonicwall.ws.util;
 
+import com.google.gson.JsonObject;
+import com.google.gson.JsonParser;
+import com.sonicwall.sgms.util.Base64;
+import com.sonicwall.sgms.util.SGMSUtil;
 import com.sonicwall.sgms.util.TEAV;
 import java.io.File;
 import java.io.IOException;
@@ -11,8 +15,10 @@
 import java.io.UnsupportedEncodingException;
 import java.net.ProxySelector;
 import java.net.URI;
+import java.nio.charset.StandardCharsets;
 import java.security.cert.CertificateException;
 import java.security.cert.X509Certificate;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.regex.Pattern;
 import java.util.zip.GZIPInputStream;
@@ -67,6 +73,7 @@
     private HttpRequestBase method = null;
     private String uri = null;
     private int currentMethod = 2;
+    private static String AUTH_URL_PATH = "/api/sonicos/auth";
 
     private WebServiceUtil() {
     }
@@ -297,5 +304,84 @@
         FileEntity re = new FileEntity(inputFile, contentType);
         ((HttpPost)this.method).setEntity(re);
     }
+
+    public void createClient() throws Exception {
+        BasicHttpParams params = new BasicHttpParams();
+        HttpProtocolParams.setVersion(params, HttpVersion.HTTP_1_1);
+        HttpProtocolParams.setContentCharset(params, "UTF-8");
+        HttpProtocolParams.setUseExpectContinue(params, true);
+        ConnManagerParams.setMaxTotalConnections(params, 100);
+        ConnManagerParams.setTimeout(params, 10000L);
+        HttpClientParams.setCookiePolicy(params, "compatibility");
+        HttpClientParams.setRedirecting(params, true);
+        X509TrustManager easyTrustManager = new X509TrustManager(){
+
+            @Override
+            public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+            }
+
+            @Override
+            public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+            }
+
+            @Override
+            public X509Certificate[] getAcceptedIssuers() {
+                return null;
+            }
+        };
+        SchemeRegistry schemeRegistry = new SchemeRegistry();
+        SSLContext sslcontext = SSLContext.getInstance("TLSv1.2");
+        sslcontext.init(null, new TrustManager[]{easyTrustManager}, null);
+        SSLSocketFactory sf = new SSLSocketFactory(sslcontext);
+        sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
+        Scheme httpsScheme = new Scheme("https", sf, 443);
+        schemeRegistry.register(httpsScheme);
+        PlainSocketFactory sfp = new PlainSocketFactory();
+        Scheme httpScheme = new Scheme("http", sfp, 80);
+        schemeRegistry.register(httpScheme);
+        ThreadSafeClientConnManager conman = new ThreadSafeClientConnManager(params, schemeRegistry);
+        this.client = new DefaultHttpClient(conman, params);
+    }
+
+    private String getToken(String ip, String user, String password) throws Exception {
+        this.createClient();
+        this.createMethod(ip + AUTH_URL_PATH, 1);
+        String auth = user + ":" + password;
+        String authHeaderValue = "Basic " + Base64.encodeUsingJdk8(auth.getBytes(StandardCharsets.UTF_8));
+        HashMap<String, String> headers = new HashMap<String, String>();
+        headers.put("Authorization", authHeaderValue);
+        headers.put("Content-Type", "application/json");
+        this.setHeaders(headers);
+        String posting = "{\n \"override\": false,\n \"snwl\": true\n }";
+        this.setPostData("application/json", posting);
+        String res = this.getWebServiceAsString(3);
+        JsonObject jsonObject = new JsonParser().parse(res).getAsJsonObject();
+        return jsonObject.get("status").getAsJsonObject().get("info").getAsJsonArray().get(0).getAsJsonObject().get("bearer_token").getAsString();
+    }
+
+    public static String perormApiGetCall(String client, String path, String user, String password) throws Exception {
+        WebServiceUtil util = new WebServiceUtil();
+        String token = util.getToken(client, user, password);
+        util.createMethod(client + path, 2);
+        HashMap<String, String> headers = new HashMap<String, String>();
+        headers.put("Authorization", "Bearer " + token);
+        util.setHeaders(headers);
+        String res = util.getWebServiceAsString(3);
+        return res;
+    }
+
+    public static String perormApiPostCall(String client, String path, String user, String password, String postData) throws Exception {
+        SGMSUtil.debugOut((Object)("WebServiceUtil: perormApiPostCall(): ========= Entering method perormApiPostCall Client : " + client + " postData: " + postData), 1);
+        WebServiceUtil util = new WebServiceUtil();
+        String token = util.getToken(client, user, password);
+        util.createMethod(client + path, 1);
+        util.setPostData("application/json", postData);
+        HashMap<String, String> headers = new HashMap<String, String>();
+        headers.put("Authorization", "Bearer " + token);
+        headers.put("Content-Type", "application/json");
+        util.setHeaders(headers);
+        String res = util.getWebServiceAsString(3);
+        return res;
+    }
 }
 
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/zt/sgms/daemons/CommonConstants.java decompiled-9.3.9330/com/sonicwall/zt/sgms/daemons/CommonConstants.java
--- decompiled-9.3.9320/com/sonicwall/zt/sgms/daemons/CommonConstants.java	2023-09-08 15:13:12.091728191 -0700
+++ decompiled-9.3.9330/com/sonicwall/zt/sgms/daemons/CommonConstants.java	2023-09-08 15:14:39.013726559 -0700
@@ -91,8 +91,6 @@
     public static final String NO_REPORT_TABLES = "No Report Tables";
     public static final String NOT_ENOUGH_DISK_FOR_REPORT_MIGRATION = "diskSpace";
     public static final String TRACKABLE_ERROR_REPORT_MIGRATION = "trackableError";
-    public static final String SSL_CONTEXT_PROTOCOL = "TLSv1.2";
-    public static final String[] SSL_ENABLED_PROTOCOLS = new String[]{"TLSv1", "TLSv1.1", "TLSv1.2"};
     public static final String SSL_CIPHER_SUITES = "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA";
     public static final String PRODUCT_DISPLAYVERSION_HOSTED = "Cloud";
     public static final String PRODUCT_DISPLAYVERSION_EPRS = "2.3";
diff '--color=auto' -rub decompiled-9.3.9320/com/sonicwall/zt/tthserver/external/TTHServerExternalNew.java decompiled-9.3.9330/com/sonicwall/zt/tthserver/external/TTHServerExternalNew.java
--- decompiled-9.3.9320/com/sonicwall/zt/tthserver/external/TTHServerExternalNew.java	2023-09-08 15:13:12.142730164 -0700
+++ decompiled-9.3.9330/com/sonicwall/zt/tthserver/external/TTHServerExternalNew.java	2023-09-08 15:14:39.056672942 -0700
@@ -84,7 +84,7 @@
             http_config.setSecureScheme("https");
             http_config.setSecurePort(TTHServerExternalConfig.getPort());
             http_config.setOutputBufferSize(32768);
-            SslContextFactory sslContextFactory = new SslContextFactory();
+            SslContextFactory.Server sslContextFactory = new SslContextFactory.Server();
             sslContextFactory.setIncludeProtocols("TLSv1.3", "TLSv1.2");
             sslContextFactory.setKeyStorePath(keystoreFile.getAbsolutePath());
             sslContextFactory.setKeyStorePassword("SNWLm95t3r9");
